<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Icons Resource For Your Web Projects</title>
      <author>Innocent Coder</author>
      <pubDate>Wed, 28 Apr 2021 09:53:54 +0000</pubDate>
      <link>https://dev.to/innocentcoder/5-icons-resource-for-your-web-projects-545a</link>
      <guid>https://dev.to/innocentcoder/5-icons-resource-for-your-web-projects-545a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#unicons-by-iconscout"&gt;
  &lt;/a&gt;
  Unicons by iconscout
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qi0CRPte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja7smaose7ku28fwwevh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qi0CRPte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja7smaose7ku28fwwevh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pixel-perfect vector icons and Icon Fonts available in Line, Monochrome, and Solid style for your next project.&lt;/p&gt;

&lt;p&gt;links:- &lt;a href="https://iconscout.com/unicons"&gt;https://iconscout.com/unicons&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#feather-icons"&gt;
  &lt;/a&gt;
  Feather Icons
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fIaE-k5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85dmloqzchrj978iabvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fIaE-k5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85dmloqzchrj978iabvd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feather is a collection of simply beautiful open source icons. Each icon is designed on a 24x24 grid with an emphasis on simplicity, consistency and readability.&lt;/p&gt;

&lt;p&gt;Link:- &lt;a href="https://feathericons.com/"&gt;https://feathericons.com/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-noun-project"&gt;
  &lt;/a&gt;
  The Noun Project
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZMV1tFfh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l70zc0scd4ch5vcf033q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZMV1tFfh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l70zc0scd4ch5vcf033q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Noun Project features the most diverse collection of icons and stock photos ever. Download SVG and PNG. Browse over 3 million art-quality icons and photos.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://thenounproject.com/term/free/"&gt;https://thenounproject.com/term/free/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#material-icons"&gt;
  &lt;/a&gt;
  Material Icons
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2HtVzrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kx9zzeo5nbk2daw2162t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2HtVzrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kx9zzeo5nbk2daw2162t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Material Design Icons Library for Sketch &amp;amp; Figma. We have created and combined a fairly large set of icons which are taken from Material Design and separated them into different style categories. This set of icons are made for popular graphic tools and is very convenient to use when creating your project.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://icons.pixsellz.io/"&gt;https://icons.pixsellz.io/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#xicons"&gt;
  &lt;/a&gt;
  Xicons
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTRYr9GQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jfuccacw30xarrgoxul.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTRYr9GQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jfuccacw30xarrgoxul.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Xicons Studio develops, design custom add-ons, and test usability of custom icon design systems and pictograms.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://www.xicons.co/"&gt;https://www.xicons.co/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#also-follow-on-instagram"&gt;
  &lt;/a&gt;
  Also Follow On Instagram
&lt;/h1&gt;


&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CONGQCtpBrb/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;


</description>
      <category>android</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Free Portfolio and Resume builder</title>
      <author>VIMAL KUMAR</author>
      <pubDate>Wed, 28 Apr 2021 09:42:20 +0000</pubDate>
      <link>https://dev.to/vimal/free-portfolio-and-resume-builder-ci</link>
      <guid>https://dev.to/vimal/free-portfolio-and-resume-builder-ci</guid>
      <description>&lt;h5&gt;
  &lt;a href="#updating-portfolio-is-frustrating-right"&gt;
  &lt;/a&gt;
  Updating portfolio is frustrating, right?
&lt;/h5&gt;

&lt;p&gt;As a developer portfolio is best place to Showcase skill, work and Achievements and It's is really valuble for your career. So we need to keep Portfolio updated and Updating portfolio is frustrating, right?&lt;br&gt;
So, we've got you covered&lt;br&gt;
We are happy to announce that &lt;a href="https://vdev.in/?ref=devto"&gt;Vdev&lt;/a&gt; is now open for Developer (still in beta), So please take a try and review how is it and how to improve it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-your-portfolio-ready-today"&gt;
  &lt;/a&gt;
  Get your portfolio ready today
&lt;/h3&gt;

&lt;p&gt;Now you know the value of a portfolio for your career, get started on making your very own.&lt;br&gt;
Go to &lt;a href="https://vdev.in/?ref=devto"&gt;Vdev&lt;/a&gt; and Create your account and add your skills, projects and Achievements and Done Now you have your own portfolio.&lt;br&gt;
It's is really easy to update and You can Customize by adding Custom Css.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#already-has-portfolio"&gt;
  &lt;/a&gt;
  Already has portfolio
&lt;/h3&gt;

&lt;p&gt;Power Your portfolio with Vdev Api (Customize Your portfolio in your style with Vdev Api)&lt;br&gt;
&lt;a href="https://github.com/vdev-in/React-vdev-api-template"&gt;React vdev api template&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/vdev-in/Html-vdev-api-template"&gt;Html vdev api template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Fk7Shay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d65r36fko6l1xqw2dsvr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Fk7Shay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d65r36fko6l1xqw2dsvr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#app-link"&gt;
  &lt;/a&gt;
  &lt;a href="https://vdev.in/?ref=devto"&gt;App link&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>portfolio</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is Business Logic anyway?</title>
      <author>Carsten Behrens</author>
      <pubDate>Wed, 28 Apr 2021 09:31:08 +0000</pubDate>
      <link>https://dev.to/carstenbehrens/what-is-business-logic-anyway-18e8</link>
      <guid>https://dev.to/carstenbehrens/what-is-business-logic-anyway-18e8</guid>
      <description>&lt;p&gt;The term business logic is often used by developers when talking about software design and clean code. But understanding what it means can be confusing.&lt;/p&gt;

&lt;p&gt;Here is the definition of business logic on Wikipedia:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In computer software, business logic or domain logic is the part of the program that&lt;br&gt;
encodes the real-world business rules that determine how data can be created, stored,&lt;br&gt;
and changed. It is contrasted with the remainder of the software that might be&lt;br&gt;
concerned with lower-level details of managing a database or displaying the&lt;br&gt;
user interface, system infrastructure, or generally connecting various parts&lt;br&gt;
of the program.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After reading this definition I had more questions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do business rules only apply to business matters?&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;What if my application does not have a database?&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Does every application have business logic?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I'll try to answer all of these and some other questions here.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#clearly-unclear"&gt;
  &lt;/a&gt;
  CLEARLY UNCLEAR
&lt;/h2&gt;

&lt;p&gt;The truth is, that the term is not clearly defined, there are too many opinions of&lt;br&gt;
what the definition of business logic is, and it's often way easier to understand the term context.&lt;/p&gt;

&lt;p&gt;Now it seems like I am not the only one that is confused by this term, as even the &lt;a href="https://wiki.c2.com/?BusinessLogicDefinition"&gt;definition&lt;/a&gt; on WikiWikiWeb is a hot mess.&lt;/p&gt;

&lt;p&gt;The best way to explain business logic is by using an example.&lt;/p&gt;

&lt;p&gt;Imagine that we want to build a web app that calculates the BMI (Body Mass Index).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zYROFoka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzytdgneelhocemp9d0w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zYROFoka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzytdgneelhocemp9d0w.jpg" alt="Widget to calculate BMI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After users calculate their BMI the information gets saved in a database.&lt;/p&gt;

&lt;p&gt;In this example, the business logic could be boiled down to a simple function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calculateBmi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// This is a simplified version. &lt;/span&gt;
&lt;span class="c1"&gt;// You'll also need to consider different units, metric vs. imperial and so on... &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Obviously business logic often gets way more complex in real-life applications. Try to keep this in mind.&lt;/p&gt;

&lt;p&gt;Now let me show you the difference between business logic and the rest of the application.&lt;/p&gt;

&lt;p&gt;Let's say we choose &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; as a modern frontend framework to help us build this web app.&lt;/p&gt;

&lt;p&gt;Think about all the other code that our imaginary web app will likely have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A form users can enter the information&lt;/li&gt;
&lt;li&gt;Some kind of form validation&lt;/li&gt;
&lt;li&gt;A database connection so we can store the data&lt;/li&gt;
&lt;li&gt;Templates (JSX) to generate our HTML&lt;/li&gt;
&lt;li&gt;CSS to make our web app look pretty&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of this code is &lt;strong&gt;NOT&lt;/strong&gt; part of our business logic.&lt;/p&gt;

&lt;p&gt;Since that code either deals with the presentation or the database, it is&lt;br&gt;
not part of our business logic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What if we changed our frontend framework?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The calculateBmi function would remain unchanged.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What if we changed our database?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The calculateBmi function would remain unchanged.&lt;/p&gt;

&lt;p&gt;These questions can help you identify business logic easier. If the code could&lt;br&gt;
remain unchanged, it's a tell-tale sign that it is business logic code.&lt;/p&gt;

&lt;p&gt;If you struggle with this example here is another example from the&lt;br&gt;
WikiWikiWeb I have mentioned above:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It may help to consider a simple but illustrative example like computer chess:&lt;br&gt;
The game itself, i.e., the board and the pieces, their movements, and how the&lt;br&gt;
rules of the game are handled independent of any display or user interaction&lt;br&gt;
is business logic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#faq"&gt;
  &lt;/a&gt;
  FAQ
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Do business rules only apply to business matters?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No, that's why the term business logic is also often called domain logic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What if my application does not have a database?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your application can still have business logic. Since the business logic can be&lt;br&gt;
independent of your database anyway, it does not matter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Does every application have business logic?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not all applications have business logic. On my &lt;a href="https://github.com/carstenbehrens/cat-facts"&gt;Github&lt;/a&gt; I have a simple exemplary Vue application. It uses the Catfacts API and the&lt;br&gt;
Unsplash API to get a random cat breed and load a picture of that breed.&lt;/p&gt;

&lt;p&gt;So all it does is fetching data and displaying it. It does not have business logic.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@huntersrace?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Hunters Race&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/business?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>vue</category>
      <category>react</category>
    </item>
    <item>
      <title>How to Update or Insert object into a nested array with Mongo DB
</title>
      <author>Dimer BWimBA</author>
      <pubDate>Wed, 28 Apr 2021 09:18:09 +0000</pubDate>
      <link>https://dev.to/dimer191996/how-to-update-or-insert-object-into-a-nested-array-with-mongo-db-4g9h</link>
      <guid>https://dev.to/dimer191996/how-to-update-or-insert-object-into-a-nested-array-with-mongo-db-4g9h</guid>
      <description>&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/67293689/mongodb-how-to-update-or-insert-object-into-a-nested-array-with-conditions"&gt;My question is here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>mongodb</category>
      <category>expressjs</category>
    </item>
    <item>
      <title>Chrome extensions I use to enhance my GITHUB experience</title>
      <author>Apoorv Tyagi</author>
      <pubDate>Wed, 28 Apr 2021 09:03:19 +0000</pubDate>
      <link>https://dev.to/apoorvtyagi/chrome-extensions-i-use-to-enhance-my-github-experience-55ih</link>
      <guid>https://dev.to/apoorvtyagi/chrome-extensions-i-use-to-enhance-my-github-experience-55ih</guid>
      <description>&lt;p&gt;As a developer, we use GitHub every day and it is already a great tool, but what if we can make it even better with some chrome extensions!&lt;/p&gt;

&lt;p&gt;Let's have a look at some of them 🔽&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-octotree"&gt;
  &lt;/a&gt;
  1. Octotree
&lt;/h2&gt;

&lt;p&gt;It enhances GitHub code review and exploration with features like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  IDE-like code tree&lt;/li&gt;
&lt;li&gt;  Folder and file search&lt;/li&gt;
&lt;li&gt;  Issues and Pull Request bookmarking&lt;/li&gt;
&lt;li&gt;  Support for private repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I like this extension very much! It lets you explore the files and folders of a repository with a tree like structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-maM8tv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619203748632/kD31fMviz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-maM8tv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619203748632/kD31fMviz.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ &lt;a href="https://github.com/ovity/octotree"&gt;Github Repo&lt;/a&gt; | &lt;a href="https://chrome.google.com/webstore/detail/octotree-github-code-tree/bkhaagjahfmjljalopjnoealnfndnagc"&gt;Chrome Extension&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-open-in-vs-code"&gt;
  &lt;/a&gt;
  2. Open in VS Code
&lt;/h2&gt;

&lt;p&gt;It Opens links to source code for any github repository in VSCode. Also works with Gitlab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o02JCFrJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204674095/vKQMVm6Zt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o02JCFrJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204674095/vKQMVm6Zt.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;Tip&lt;/strong&gt;: In case you want to open the whole repository in GitHub directly with VSCode view rather than a single file, &lt;strong&gt;Just add 1s after github&lt;/strong&gt;. Example: github.com/user/somerepository -&amp;gt; github1s.com/user/somerepository.&lt;/p&gt;

&lt;p&gt;⭐ &lt;a href="https://github.com/aberonni/open-in-vscode/"&gt;Github Repo&lt;/a&gt; | &lt;a href="https://chrome.google.com/webstore/detail/open-in-vscode/pfakkjlkpobjeghlgipljkjmbgcanpji"&gt;Chrome Extension&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-refined-github"&gt;
  &lt;/a&gt;
  3. Refined GitHub
&lt;/h2&gt;

&lt;p&gt;It simplifies the GitHub interface and adds useful features too, for instance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Adds reaction avatars showing who reacted to a comment&lt;/li&gt;
&lt;li&gt;  Adds one-click merge conflict fixers&lt;/li&gt;
&lt;li&gt;  Adds a button to revert all the changes to a file in a PR&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BweH9iLs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204002705/pehwPzs5-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BweH9iLs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204002705/pehwPzs5-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ &lt;a href="https://github.com/sindresorhus/refined-github"&gt;Github Repo&lt;/a&gt; | &lt;a href="https://chrome.google.com/webstore/detail/refined-github/hlepfoohegkhhmjieoechaddaejaokhf"&gt;Chrome Extension&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-donotmergewip"&gt;
  &lt;/a&gt;
  4. Do-not-merge-WIP
&lt;/h2&gt;

&lt;p&gt;Disables "Merge pull request" button while ANY of the following is true:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Title contains "[wip]" (case insensitive)&lt;/li&gt;
&lt;li&gt;  Any tasks remain incomplete&lt;/li&gt;
&lt;li&gt;  Any commit messages remain prefixed with "squash!" or "fixup!"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ENxrK-L_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204166496/2k9ZduLBDx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ENxrK-L_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204166496/2k9ZduLBDx.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ &lt;a href="https://github.com/sanemat/do-not-merge-wip-for-github"&gt;Github Repo&lt;/a&gt; | &lt;a href="https://chrome.google.com/webstore/detail/do-not-merge-wip-for-gith/nimelepbpejjlbmoobocpfnjhihnpked"&gt;Chrome Extension&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-enhanced-github"&gt;
  &lt;/a&gt;
  5. Enhanced GitHub
&lt;/h2&gt;

&lt;p&gt;It provides useful features on top of GitHub Website:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Displays repo size&lt;/li&gt;
&lt;li&gt;  Displays each file size for every active branch&lt;/li&gt;
&lt;li&gt;  Show download link for each file&lt;/li&gt;
&lt;li&gt;  Copy file's contents directly to Clipboard&lt;/li&gt;
&lt;li&gt;  Download file while viewing its contents.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FS-Vd9GR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619203340677/k84mGK11Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FS-Vd9GR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619203340677/k84mGK11Q.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ &lt;a href="https://github.com/softvar/enhanced-github"&gt;Github Repo&lt;/a&gt; | &lt;a href="https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd"&gt;Chrome Extension&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-githunt"&gt;
  &lt;/a&gt;
  6. Githunt
&lt;/h2&gt;

&lt;p&gt;It lets you hunt the most starred projects on GitHub on any date. Very useful when you want to explore the most trending repo of the week/month/year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kG0SDeU---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204391854/7pKgBRAr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kG0SDeU---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204391854/7pKgBRAr0.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ &lt;a href="https://github.com/kamranahmedse/githunt"&gt;Github Repo&lt;/a&gt; | &lt;a href="https://chrome.google.com/webstore/detail/githunt/khpcnaokfebphakjgdgpinmglconplhp"&gt;Chrome Extension&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-codecopy"&gt;
  &lt;/a&gt;
  7. CodeCopy
&lt;/h2&gt;

&lt;p&gt;It lets you copy the text from any file on github to your clipboard. Apart from Github it also works on :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Stack Overflow&lt;/li&gt;
&lt;li&gt;  MDN&lt;/li&gt;
&lt;li&gt;  Medium&lt;/li&gt;
&lt;li&gt;  npm&lt;/li&gt;
&lt;li&gt;  Gist&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eg31Jw-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204917866/JSHkUVKV5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eg31Jw-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619204917866/JSHkUVKV5.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ &lt;a href="https://github.com/zenorocha/codecopy"&gt;Github Repo&lt;/a&gt; | &lt;a href="https://chrome.google.com/webstore/detail/codecopy/fkbfebkcoelajmhanocgppanfoojcdmg"&gt;Chrome Extension&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up 👋
&lt;/h1&gt;

&lt;p&gt;So with this, we come to the end of the list! In case you know another extension that I haven't included but you find it useful, please feel free to share those in the comments below😀&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this article and found it helpful.&lt;/p&gt;

&lt;p&gt;Thanks For Reading :)&lt;/p&gt;




&lt;p&gt;&lt;em&gt;"Enjoyed what you read??"&lt;/em&gt; You can show some support💙 by &lt;strong&gt;Buying me some coffee☕&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/apoorvtyagi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7PD28--a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-violet.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>productivity</category>
      <category>codenewbie</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>You are a developer ? you would have faced this challenges</title>
      <author>Peteroums</author>
      <pubDate>Wed, 28 Apr 2021 08:56:13 +0000</pubDate>
      <link>https://dev.to/peterthoums/you-are-a-developer-you-would-have-faced-this-challenges-2hp7</link>
      <guid>https://dev.to/peterthoums/you-are-a-developer-you-would-have-faced-this-challenges-2hp7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#creating-a-scalable-product"&gt;
  &lt;/a&gt;
  Creating a Scalable Product
&lt;/h1&gt;

&lt;p&gt;Often misunderstood as something pertaining to the performance or the bandwidth, scalability actually deals with Load Balancing. All businesses should necessarily prepare their web applications to handle high traffic on your website, is actually a sign of successful lead generation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#security-threats"&gt;
  &lt;/a&gt;
  Security Threats
&lt;/h1&gt;

&lt;p&gt;Well, With Great Power comes Great Responsibility, and with great access to information, comes great threats to security. Web developers have to be cautious on each stage of the Software Development Life Cycle so that any scope for breach of security at all stages can be eradicated.&lt;/p&gt;

&lt;p&gt;Particularly, if your website is dealing with vital customer information such as payment details, confidential data or contact information. Your customers have trusted you with this information, and it is your moral and legal duty to safeguard it.&lt;/p&gt;

&lt;p&gt;Not to mention, that customers will be more loyal to businesses that prioritize the safety of their customers’ personal information, as opposed to businesses who have a history of leaking customer data. The web developers should pay heed to not just enhancing the aesthetics of the software development, but also safety standards.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#userfriendly-design"&gt;
  &lt;/a&gt;
  User-friendly Design
&lt;/h1&gt;

&lt;p&gt;It is important for the web developers to create a sophisticated software with comprehensive coding so that it doesn’t lag behind in the race of the most advanced websites available on the Internet.&lt;/p&gt;

&lt;p&gt;What often happens is that, in the thrill to execute their in-depth understanding of the software, Web Developers tend to get carried away and end up overlooking the very purpose of the Websites, i.e. to provide services to the customers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#get-some-more-challenges"&gt;
  &lt;/a&gt;
  &lt;a href="https://cmsinstallation.blogspot.com/2021/04/5-common-challenges-faced-by-web.html"&gt;Get Some More challenges&lt;/a&gt;
&lt;/h1&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>laravel</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What is localStorage?</title>
      <author>Fariha Rajput</author>
      <pubDate>Wed, 28 Apr 2021 08:42:08 +0000</pubDate>
      <link>https://dev.to/fariharajput/what-is-localstorage-38of</link>
      <guid>https://dev.to/fariharajput/what-is-localstorage-38of</guid>
      <description>&lt;p&gt;LocalStorage in one of my activities back when I was doing coding practice&lt;br&gt;
 . I was aware of its reality when we were educated of utilizing it to endure information for JWT validation and that is all I was aware of it.&lt;/p&gt;

&lt;p&gt;Little did I know there is more usage of localStorage than tokens!&lt;br&gt;
Let's take a quick look together and learn a little bit of what is localStorage?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#methods"&gt;
  &lt;/a&gt;
  Methods:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1xtefEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mdao6j4ehx6oiy2t4a9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1xtefEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mdao6j4ehx6oiy2t4a9.PNG" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An example of that is this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aIb4DqwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cda67krgbh2ru1cia8ae.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aIb4DqwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cda67krgbh2ru1cia8ae.PNG" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the point when you recover information from a Storage object, you'll generally get the information as a string. Same with sessionStorage and Cookies. You can likewise store objects in the localStorage. We would simply need to utilize JSON.stringify() to store the item.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4YxrmY3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/63462869/116370897-48e22000-a824-11eb-9cdb-1eb12294ff83.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4YxrmY3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/63462869/116370897-48e22000-a824-11eb-9cdb-1eb12294ff83.PNG" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like as you can see, once stored, the whole object turns into a string even when trying to get the data back. But this data can be converted back to an object by using JSON.parse().&lt;/p&gt;

&lt;p&gt;Just like this;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pfpoUdBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/63462869/116371104-7f1f9f80-a824-11eb-95a9-a852fcd7e3f5.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pfpoUdBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/63462869/116371104-7f1f9f80-a824-11eb-95a9-a852fcd7e3f5.PNG" alt="5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limit-and-usage"&gt;
  &lt;/a&gt;
  Limit and Usage
&lt;/h2&gt;

&lt;p&gt;Some say that most current internet browsers permit you to save to 5MB, while others say it's near limitless. &lt;/p&gt;

&lt;p&gt;With regards to putting away information, localStorage keeps it until the program is shut or until you run the localStorage.clear() order. &lt;/p&gt;

&lt;p&gt;On my past project, I utilized localStorage.clear() when the client logs out of the web application and gets out any token put away in the program. &lt;/p&gt;

&lt;p&gt;Look at it here on our handleLogout work;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2rg-6vUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/63462869/116371568-01a85f00-a825-11eb-9a96-08ed55f36bd4.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2rg-6vUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/63462869/116371568-01a85f00-a825-11eb-9a96-08ed55f36bd4.PNG" alt="6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Part of the component that toggles the theme is an onClick eventListener that triggers a switchTheme function that contains an if statement use.&lt;br&gt;
 See that the primary utilization of the localStorage is to truly store key-esteem sets which can be utilized on numerous different things. &lt;/p&gt;

&lt;p&gt;So that is it! I trust you had a good time looking through this blog about localStorage and ideally helped you here and there in enduring information other than treats or state.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#do-you-have-some-other-experience-of-utilizing-localstorage-in-an-alternate-manner-tell-me-in-the-remarks-underneath-i-couldnt-imagine-anything-better-than-to-give-them-a-shot"&gt;
  &lt;/a&gt;
  Do you have some other experience of utilizing localStorage in an alternate manner? Tell me in the remarks underneath! I couldn't imagine anything better than to give them a shot!
&lt;/h4&gt;

</description>
      <category>localstorage</category>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Solution: Unique Paths II</title>
      <author>seanpgallivan</author>
      <pubDate>Wed, 28 Apr 2021 08:31:23 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-unique-paths-ii-4n2d</link>
      <guid>https://dev.to/seanpgallivan/solution-unique-paths-ii-4n2d</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/unique-paths-ii/discuss/1180311"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-63-medium-unique-paths-ii"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/unique-paths-ii/"&gt;Leetcode Problem #63 (&lt;em&gt;Medium&lt;/em&gt;): Unique Paths II&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A robot is located at the top-left corner of a &lt;code&gt;m x n&lt;/code&gt; grid (marked 'Start' in the diagram below).&lt;/p&gt;

&lt;p&gt;The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).&lt;/p&gt;

&lt;p&gt;Now consider if some obstacles are added to the grids. How many unique paths would there be?&lt;/p&gt;

&lt;p&gt;An obstacle and space is marked as &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; respectively in the grid.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;There is one obstacle in the middle of the 3x3 grid above.&lt;br&gt;There are two ways to reach the bottom-right corner:&lt;br&gt;1. Right -&amp;gt; Right -&amp;gt; Down -&amp;gt; Down&lt;br&gt;2. Down -&amp;gt; Down -&amp;gt; Right -&amp;gt; Right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qGbjI_Vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2020/11/04/robot1.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;obstacleGrid = [[0,1],[0,0]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-ocyF3t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2020/11/04/robot2.jpg" alt="Example 2 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;m == obstacleGrid.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n == obstacleGrid[i].length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= m, n &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;obstacleGrid[i][j]&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The naive approach here would be to try every path with a &lt;strong&gt;recursive&lt;/strong&gt; &lt;strong&gt;depth first search&lt;/strong&gt; (&lt;strong&gt;DFS&lt;/strong&gt;) approach. That would involve duplicating the processing used for repeating subpaths, however, which would quickly lead to a &lt;strong&gt;TLE&lt;/strong&gt; result. When faced with repeating subproblems, we should be thinking of a &lt;strong&gt;dynamic programming&lt;/strong&gt; (&lt;strong&gt;DP&lt;/strong&gt;) approach to store completed subproblem and avoid any unnecessary duplication of processing.&lt;/p&gt;

&lt;p&gt;In this situation, we can create a DP matrix (&lt;strong&gt;dp&lt;/strong&gt;) in the same dimensions as our input matrix (&lt;strong&gt;OG&lt;/strong&gt;). (&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: We can choose to use an &lt;strong&gt;in-place&lt;/strong&gt; approach here and use &lt;strong&gt;OG&lt;/strong&gt; as our DP matrix in order to reduce the &lt;strong&gt;space complexity&lt;/strong&gt; of our solution to &lt;strong&gt;O(1)&lt;/strong&gt;.&lt;/em&gt;) Each cell in &lt;strong&gt;dp&lt;/strong&gt; will represent the number of paths that lead to the corresponding cell in &lt;strong&gt;OG&lt;/strong&gt;. Since the robot can only move either to the right or down, we can perform a &lt;strong&gt;bottom-up&lt;/strong&gt; DP solution, working from the initial cell and iterating downward and rightward through &lt;strong&gt;OG&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Each cell in &lt;strong&gt;OG&lt;/strong&gt; (&lt;strong&gt;OG[i][j]&lt;/strong&gt;) can potentially reached by only two previously-visited cells (&lt;strong&gt;OG[i-1][j]&lt;/strong&gt; &amp;amp; &lt;strong&gt;OG[i][j-1]&lt;/strong&gt;), so the number of ways to reach the current cell (&lt;strong&gt;dp[i][j]&lt;/strong&gt;) should be the sum of the ways to reach those other two cells (&lt;strong&gt;dp[i-1][j] + dp[i][j-1]&lt;/strong&gt;), should they exist.&lt;/p&gt;

&lt;p&gt;Since any cell representing an obstacle cannot be a part of a path, its value in &lt;strong&gt;dp&lt;/strong&gt; should be &lt;strong&gt;0&lt;/strong&gt;. We'll also need to seed the initial starting position with a value of &lt;strong&gt;1&lt;/strong&gt; to represent the single initial path. Once we're done building &lt;strong&gt;dp&lt;/strong&gt;, the value of the bottom-right cell should be our answer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * M)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; and &lt;strong&gt;M&lt;/strong&gt; are the dimensions of the input matrix&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Space Complexity: O(N * M)&lt;/strong&gt; for the DP matrix&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;or &lt;strong&gt;O(1)&lt;/strong&gt; if we use an &lt;strong&gt;in-place&lt;/strong&gt; approach for the DP matrix&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Python can opt to use &lt;strong&gt;@lru_cache&lt;/strong&gt; instead of a standard DP matrix; the standard approach is shown below.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;uniquePathsWithObstacles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint32Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;uniquePathsWithObstacles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
                &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;uniquePathsWithObstacles&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="no"&gt;OG&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OG&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OG&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OG&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;uniquePathsWithObstacles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OG&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Don‘t Estimate Project Costs</title>
      <author>Ovid</author>
      <pubDate>Wed, 28 Apr 2021 08:05:20 +0000</pubDate>
      <link>https://dev.to/ovid/don-t-estimate-project-costs-346m</link>
      <guid>https://dev.to/ovid/don-t-estimate-project-costs-346m</guid>
      <description>&lt;p&gt;I know, I know. Management posts are boring, especially on a dev site. But many of you will eventually head down that road, or at least have to talk to a manager at some point. And when you do, the question of “how much will this cost to build?” will eventually come up. But that’s the wrong question.&lt;/p&gt;




&lt;p&gt;Possibly you’ve not heard of &lt;a href="https://en.wikipedia.org/wiki/Douglas_W._Hubbard"&gt;Douglas Hubbard&lt;/a&gt;. If you’re interested at all in estimating the value of IT projects, his works should be required reading. In fact, &lt;a href="https://www.soa.org/Education/Exam-Req/Syllabus-Study-Materials/exam-book-list.aspx"&gt;his books are required reading for the Society of Actuaries&lt;/a&gt; if you want to pass their exams and become an actuary.&lt;/p&gt;

&lt;p&gt;But we’ll come back to him in a moment.&lt;/p&gt;

&lt;p&gt;If there’s one key thing I’ve learned in consulting, it’s that potential clients who start discussions by talking about building value for their customers have usually been better clients than those who start conversations with “what’s your rate?” Why? Because the “what’s your rate” clients are focused on controlling costs, not building value. I’ve found that their approach problems is different and those who are paying more attention to minimizing risk than maximizing value simply have different ideas about how to approach a project.&lt;/p&gt;

&lt;p&gt;And you know what? I get it. If you want to go out to dinner and you only have £15 in your pocket, you’re probably not going to a fancy restaurant. You just might grab a pint at a pub and hit a kebab shop after. Budget constraints are real.&lt;/p&gt;

&lt;p&gt;But curiously, while development costs on a project are one of the first things we look at, they’re also one of the worst metrics you can use to judge the value of a project. It’s part of a problem that Hubbard refers to as the &lt;a href="https://www.cio.com/article/2438748/it-organization/the-it-measurement-inversion.html"&gt;IT Measurement Inversion&lt;/a&gt;. Specifically:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The variables having the greatest impact on project success are the variables we measure the least.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So what sort of variables are there? There are the ongoing development and maintenance costs when the project is delivered. There are marketing costs. There are costs to have your people learn the new system. And so on.  The costs are myriad and complex, but if we’re going to judge the &lt;em&gt;value&lt;/em&gt; of a new system, which variables matter the most?  Those are the ones we should be focusing on.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/w4fHGTsZZD8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hubbard’s work will guide you here. In particular, you might want to consider his book &lt;a href="https://www.amazon.com/How-Measure-Anything-Intangibles-Business/dp/1118539273"&gt;How to Measure Anything&lt;/a&gt; (that’s not an affiliate link, by the way), where he teaches you how to break problems down to &lt;em&gt;things that can be measured&lt;/em&gt; and &lt;em&gt;how to measure them&lt;/em&gt;. You’ll learn quite a bit about statistical analysis and running &lt;a href="https://en.wikipedia.org/wiki/Monte_Carlo_method"&gt;Monte Carlo simulations&lt;/a&gt;. In fact, one of the things you’ll learn is that of the various techniques which have been developed to estimate project success, Monte Carlo simulations win hands down.&lt;/p&gt;

&lt;p&gt;In fact, Monte Carlo simulations are so powerful that Hubbard talks about research at NASA showing that, for over 100 projects, the accountants outperformed the subject matter experts (scientists and engineers) on project estimates because the accountants used Monte Carlo simulations rather than other methodologies.&lt;/p&gt;

&lt;p&gt;But for the purposes of our article, the key takeaway is that Hubbard has done a lot of this work for you and has nailed down what your real risks are. And it’s almost intuitive once you think of it. Let’s start with the most important.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The greatest risk to project success is whether or not it will be canceled.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That seems so brain-dead obvious that it’s almost insulting to say, but when was the last time you quantified that risk? When was the last time you looked at the potential value of a large project and said “there’s a 25% chance that this project will be canceled” and then factored that into your risk estimates? It’s the single most important variable, but most people ignore it! Can you imagine running a company and discovering your managers are repeatedly ignoring the most valuable information at their disposal?&lt;/p&gt;

&lt;p&gt;The next most important variable is system utilization. This is actually complex and includes how fast your product will roll out, whether people will use it, their rate of adoption, and so on. Again, this seems so obvious given 20/20 hindsight. Sure, your project took six months to develop instead of three, but customers will be using it for many years. When it’s put that way, it’s obvious that estimating system utilization is more valuable than estimating development costs. But people still ignore it.&lt;/p&gt;

&lt;p&gt;So let’s look at development costs.&lt;/p&gt;

&lt;p&gt;Of &lt;em&gt;course&lt;/em&gt; you have to factor in development costs; I’d be insane to suggest otherwise (despite the provocative title of this post). You have a budget and when you’re looking at backing your project with Oracle or PostgreSQL, most of the time you find that Oracle isn’t a terribly cost-effective solution. So yes, costs are important, but consider this: if the first version of Amazon’s code cost twice as much to develop, Jeff Bezos would probably still be insanely rich. Uber would still be dominating their space. Facebook would still be selling your pesonal data to dodgy companies. I can confidently say that because these companies are providing real &lt;em&gt;value&lt;/em&gt; to people (you might disagree about Facebook, but &lt;a href="https://www.statista.com/statistics/264810/number-of-monthly-active-facebook-users-worldwide/"&gt;I can offer you 2.32 billion rebuttals&lt;/a&gt;). The fact that these projects weren’t canceled and are being used far, far outweighs the initial project costs. Or to restate all of this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initial development costs are incurred once. Your revenue stream is continuous. That’s why development costs are less important.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“But Ovid, I don’t know how to do Monte Carlo simulations or estimate projected system utilization!”&lt;/p&gt;

&lt;p&gt;Well ... that’s actually a fair point. These articles are intended, if nothing else, to be practical.&lt;/p&gt;

&lt;p&gt;Since the two most importance variables in project success are the odds of it being canceled and system utilization, we need to reduce the risk of each of those. How do we do that?&lt;/p&gt;

&lt;p&gt;Simply put, you go lean/agile. Figure out the smallest possible work you can do which would add value and build that. Instead of a year-long project, you have a crazy one month race to get a simple prototype in front of your customers. If it turns out your customers have zero interest in your “Recycled Food” project, it’s better to find out after a month instead of a year.&lt;/p&gt;

&lt;p&gt;But let’s say there’s some interest. What now? Well, you’ve greatly reduced the chance of project cancelation because it looks viable, so you need to focus on system utilization. Amongst the key factors, getting customers to actually use the damned thing is incredibly important.  You will be amazed at the ideas they come up with and the feedback they give you. As you push forward, you address customer concerns and have a lower risk of building features on top of things they say aren’t working. You’re constantly pushing new versions of the product in front of your customers and iterating based on their feedback. Every step of the way, you’re improving your project based on customer behavior, not your hunches or market research.&lt;/p&gt;

&lt;p&gt;This, incidentally, is why &lt;a href="http://theleanstartup.com/"&gt;Lean Startups&lt;/a&gt; are such a powerful movement in business today. They assume they’re not canceling their entire business, so they need to maximize system utilization. That means rolling the product out quickly and immediately responding to customer feedback. By doing this, assuming your product isn’t canceled, you’ve now reduced the single greatest risk your project faces.&lt;/p&gt;

&lt;p&gt;Stop stop worrying about how much the project costs to develop. Worry about building a great product.&lt;/p&gt;

&lt;p&gt;And if you'd like to learn more about this way of looking at problems, hit a search engine and search for &lt;a href="https://duckduckgo.com/?q=noestimates&amp;amp;t=h_&amp;amp;ia=web"&gt;noestimates&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;If you have any thoughts about this, please leave a comment below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pexels.com/photo/orange-and-white-plastic-container-on-white-printer-paper-6120214/"&gt;Cover Photo by Nataliya Vaitkevich from Pexels&lt;/a&gt;&lt;/p&gt;

</description>
      <category>management</category>
      <category>agile</category>
    </item>
    <item>
      <title>Understanding Network things: part 1 – L4 / L7 layers</title>
      <author>Aurélie Vache</author>
      <pubDate>Wed, 28 Apr 2021 07:51:18 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-network-things-part-1-l4-l7-layers-j47</link>
      <guid>https://dev.to/aurelievache/understanding-network-things-part-1-l4-l7-layers-j47</guid>
      <description>&lt;p&gt;Hi,&lt;br&gt;
I've got a secret for you, since several years. I'm a developer and I'm a mess in undestanding network things! :'(&lt;/p&gt;

&lt;p&gt;It's hard to not understanding things that anyone seems to understand and understanding network concepts can be difficult or time-consuming, specially for developers. That the reason I started to create sketchnotes about Network concepts. I think it could be a good way, more visual, to explain it.&lt;/p&gt;

&lt;p&gt;In this first article, let's talk about L4 and L7 layers and OSI model.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Xw1tjmR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ftl04kslb9qvyojy5an.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Xw1tjmR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ftl04kslb9qvyojy5an.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wFrDjD1n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2u70a5t3z6f4arp0us9j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wFrDjD1n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2u70a5t3z6f4arp0us9j.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gWDwErVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ld65f8iru51tlbimq37.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gWDwErVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ld65f8iru51tlbimq37.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As usual, if you like theses sketchnotes, you can follow me, and tell me what do you think. I will publish others sketchs shortly :-).&lt;/p&gt;

&lt;p&gt;If you are interested, I already published sketchnotes about &lt;a href="https://gumroad.com/aurelievache"&gt;Kubernetes, Docker and Istio&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>network</category>
      <category>http</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>XState: What's the difference between Machine and createMachine?</title>
      <author>Matt Pocock</author>
      <pubDate>Wed, 28 Apr 2021 07:51:16 +0000</pubDate>
      <link>https://dev.to/mpocock1/xstate-what-s-the-difference-between-machine-and-createmachine-15h1</link>
      <guid>https://dev.to/mpocock1/xstate-what-s-the-difference-between-machine-and-createmachine-15h1</guid>
      <description>&lt;p&gt;XState offers two options for declaring machine definitions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Machine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xstate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Machine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...or...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createMachine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xstate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This can be confusing for beginners. Why are there two very similar-looking methods? What's the difference?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-difference"&gt;
  &lt;/a&gt;
  The Difference
&lt;/h2&gt;

&lt;p&gt;In Javascript, there is no difference between the two. You can use them completely interchangeably.&lt;/p&gt;

&lt;p&gt;In Typescript, there is only a small difference between them - it's to do with the ordering of the generics you can pass to the machine. &lt;code&gt;Machine&lt;/code&gt; allows you to pass a generic called &lt;a href="https://xstate.js.org/docs/guides/typescript.html#typestates"&gt;'Typestates'&lt;/a&gt; in the middle of the &lt;code&gt;Context&lt;/code&gt; and &lt;code&gt;Event&lt;/code&gt; generics.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Machine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xstate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;EVENT_NAME&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;States&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Machine&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;States&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Event&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whereas &lt;code&gt;createMachine&lt;/code&gt; asks you to insert it at the end:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createMachine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xstate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;EVENT_NAME&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;States&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;States&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whichever you choose, there is &lt;em&gt;no functional difference in the created machine&lt;/em&gt;. The two functions reference the same code, and create the machine in the same way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-i-choose"&gt;
  &lt;/a&gt;
  What should I choose?
&lt;/h2&gt;

&lt;p&gt;Going forward, you should use &lt;code&gt;createMachine&lt;/code&gt;. That's the syntax that will be preferred when v5 releases. But if you're happy with Machine, you can keep using it.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Intro to AWS Lambda</title>
      <author>Michael Liendo</author>
      <pubDate>Wed, 28 Apr 2021 07:50:35 +0000</pubDate>
      <link>https://dev.to/mtliendo/intro-to-aws-lambda-og3</link>
      <guid>https://dev.to/mtliendo/intro-to-aws-lambda-og3</guid>
      <description>&lt;h4&gt;
  &lt;a href="#cover-image-by-thomas-couillard"&gt;
  &lt;/a&gt;
  Cover image by Thomas Couillard
&lt;/h4&gt;




&lt;p&gt;Hello Again 👋🏽&lt;/p&gt;

&lt;p&gt;Let’s get the meme out of the way: Serverless services still have a server. The naming is just used to imply that it’s a server that you no longer have to manage.&lt;/p&gt;

&lt;p&gt;This means even though there is a server involved at some point, we don’t have to mess with it. So instead of patching OS updates, setting up scaling rules, etc. we can focus on our business logic and deploy a function.&lt;/p&gt;

&lt;p&gt;That’s right. A lambda is just a function that lives on AWS. You put your code in it, and some kind of event calls the function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#need-to-know-terms"&gt;
  &lt;/a&gt;
  🗒️  Need to know terms
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Serverless&lt;/strong&gt;: A managed service that automatically scales based on your traffic where billing is based on usage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lambda&lt;/strong&gt;: A type of serverless service that allows us to write code that executes in a function that is called by some type of event.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trigger&lt;/strong&gt;: An event that invokes a lambda&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vg-b_e61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/evuom1a7kcva1xzibnlc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vg-b_e61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/evuom1a7kcva1xzibnlc.png" alt="Serverless doesn't mean just lambda"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s worth reiterating, that a Lambda is event-driven. That event can be anything from someone coming to your website, to a new user signing up, to some scheduled interval that runs every 5 minutes or so. There’s a lot of flexibility when it comes to what triggers the event.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-our-first-lambda"&gt;
  &lt;/a&gt;
  🏗️  Creating our first Lambda
&lt;/h2&gt;

&lt;p&gt;Using a step-by-step process, let’s go ahead and create our lambda function:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log into your AWS account, search for Lambda using the search bar at the top, and select the first option&lt;/li&gt;
&lt;li&gt;Click the “Create function” button&lt;/li&gt;
&lt;li&gt;Starting from scratch, name your function pets-get-func&lt;/li&gt;
&lt;li&gt;Click the “Create function” button&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;🎉 That’s it! Congratulations on creating your Lambda function!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GpsF1APD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4agntrhzedujj6s1heub.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GpsF1APD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4agntrhzedujj6s1heub.png" alt="Newly created lambda function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reviewing-the-lambda-dashboard"&gt;
  &lt;/a&gt;
  🟡  Reviewing the Lambda Dashboard
&lt;/h2&gt;

&lt;p&gt;With our function created, let’s take a moment to explore what we’re now presented with.&lt;/p&gt;

&lt;p&gt;In the above screenshot, the top portion is known as the “Function Overview”. Since Lambda’s are event-driven, we can configure a trigger as well as the destination for the response.&lt;/p&gt;

&lt;p&gt;Further down, we see the “Code Source” panel. While it’s fine to write code in this built-in editor (as we’ll soon do), for bundles of code larger than 50mb, we can also use the “Upload from” dropdown.&lt;/p&gt;

&lt;p&gt;In a typical flow however, you’ll most likely use the CLI or another tool to push your function code to AWS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-our-lambda-function"&gt;
  &lt;/a&gt;
  💫  Running our lambda function
&lt;/h2&gt;

&lt;p&gt;As you can see from the code editor, a lambda function can really be as simple as something that just returns some data. A couple of things to note: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Functions are stateless. So you’re not going to want to put any variables outside your function handler. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The event argument contains information relating to whatever triggered the function. Since many things can do just that, this argument is contextual.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Go ahead and update your function so that it looks like the screenshot below and click “Deploy”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EyiPrA0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlxk1atzhhla37awmocx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EyiPrA0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlxk1atzhhla37awmocx.png" alt="Pets array in a lambda function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up is to create a test event for our event variable: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click Test &lt;/li&gt;
&lt;li&gt;Name your event “exampleEvent” &lt;/li&gt;
&lt;li&gt;click Create at the bottom.
Now that we created a test event, we can click the Test button one more time and our function will run.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--foerVEZH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7165fdhssjq05p45yt4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--foerVEZH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7165fdhssjq05p45yt4e.png" alt="pets array response"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎉 Congratulations on running your lambda function!&lt;/p&gt;

&lt;p&gt;While viewing the execution results, we can see the response body as well as meta information such as how long the function took to run. Execution time is something to be mindful of because it relates to how you’ll be billed.&lt;/p&gt;

&lt;p&gt;Speaking of billing, let’s wrap this up with a chat on pricing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  💸  Pricing
&lt;/h2&gt;

&lt;p&gt;A trend with serverless services is that you’ll typically pay for two things: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;compute&lt;/strong&gt;: How long it takes for something to run &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;requests&lt;/strong&gt;: How many times your service is used&lt;/p&gt;

&lt;p&gt;Using today's default lambda in us-east-2, the pricing is as follows: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compute&lt;/strong&gt;: $0.0000000021 per/ms &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requests&lt;/strong&gt;: $0.20 per 1M requests&lt;/p&gt;

&lt;p&gt;👀  If those penny-fractions get you worried, fear not, AWS also provides a free amount of usage each month:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1M free requests per month and 400,000 GB-seconds of compute time per month&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/lambda/pricing/"&gt;https://aws.amazon.com/lambda/pricing/&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;As we get along further in understanding some of the core AWS services, I do want to make sure your account is set up correctly to avoid any unexpected charges 😅&lt;/p&gt;

&lt;p&gt;So for those interested, I created a video you can checkout to make sure you're covered&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UnqxiSJEZAk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
