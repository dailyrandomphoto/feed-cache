<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>GITHUB REPOS THAT EVERY DEVELOPER MUST KNOW ✨</title>
      <author>Keshav</author>
      <pubDate>Sun, 18 Jul 2021 12:32:40 +0000</pubDate>
      <link>https://dev.to/keshav44483499/github-repos-that-every-developer-must-know-466l</link>
      <guid>https://dev.to/keshav44483499/github-repos-that-every-developer-must-know-466l</guid>
      <description>&lt;p&gt;Here are the &lt;strong&gt;7 GitHub Repos&lt;/strong&gt; arranged in &lt;em&gt;increasing order of the number of stars🌟 they got&lt;/em&gt; and the amount of people found it useful is quite amazing. Hope you will also get benefitted from these and yes, at the end, don't forget to checkout the video :))&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-public-apis-139k"&gt;
  &lt;/a&gt;
  1. Public APIS - 139K 🌟
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lhpl5stk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5gi1w6irxcx4otwihu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lhpl5stk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5gi1w6irxcx4otwihu5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/public-apis"&gt;
        public-apis
      &lt;/a&gt; / &lt;a href="https://github.com/public-apis/public-apis"&gt;
        public-apis
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collective list of free APIs
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Public APIs &lt;a href="https://github.com/public-apis/public-apis/actions?query=workflow%3A%22Run+tests%22"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YoSKOSvw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/public-apis/public-apis/workflows/Run%2520tests/badge.svg" alt="Run tests"&gt;&lt;/a&gt; &lt;a href="https://github.com/public-apis/public-apis/actions?query=workflow%3A%22Validate+links%22"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C8IDae6---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/public-apis/public-apis/workflows/Validate%2520links/badge.svg%3Fbranch%3Dmaster" alt="Validate links"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;A collective list of free APIs for use in software and web development.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A public API for this project can be found &lt;a href="https://github.com/davemachado/public-api"&gt;here&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;For information on contributing to this project, please see the &lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE: A passing build status indicates all listed APIs are available since the last update. A failing build status indicates that 1 or more services may be unavailable at the moment.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
Index&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#animals"&gt;Animals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#anime"&gt;Anime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#anti-malware"&gt;Anti-Malware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#art--design"&gt;Art &amp;amp; Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#books"&gt;Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#business"&gt;Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#calendar"&gt;Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#cloud-storage--file-sharing"&gt;Cloud Storage &amp;amp; File Sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#continuous-integration"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#cryptocurrency"&gt;Cryptocurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#currency-exchange"&gt;Currency Exchange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#data-validation"&gt;Data Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#development"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#dictionaries"&gt;Dictionaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#documents--productivity"&gt;Documents &amp;amp; Productivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#environment"&gt;Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#events"&gt;Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#finance"&gt;Finance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#food--drink"&gt;Food &amp;amp; Drink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#games--comics"&gt;Games &amp;amp; Comics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#geocoding"&gt;Geocoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#government"&gt;Government&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#health"&gt;Health&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#jobs"&gt;Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#music"&gt;Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#news"&gt;News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#open-data"&gt;Open Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#open-source-projects"&gt;Open Source Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#patent"&gt;Patent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#personality"&gt;Personality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#phone"&gt;Phone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#photography"&gt;Photography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#science--math"&gt;Science &amp;amp; Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#shopping"&gt;Shopping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#social"&gt;Social&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#sports--fitness"&gt;Sports &amp;amp; Fitness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#test-data"&gt;Test Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#text-analysis"&gt;Text Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#tracking"&gt;Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#transportation"&gt;Transportation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#url-shorteners"&gt;URL Shorteners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#vehicle"&gt;Vehicle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#video"&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/public-apis/public-apis/master/#weather"&gt;Weather&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Animals&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;API&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Auth&lt;/th&gt;
&lt;th&gt;HTTPS&lt;/th&gt;
&lt;th&gt;CORS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://alexwohlbruck.github.io/cat-facts/" rel="nofollow"&gt;Cat&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/public-apis/public-apis"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#2-you-dont-know-js-142k"&gt;
  &lt;/a&gt;
  2. You don't know JS - 142K 🌟
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3DM4b_AH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqoub0do77wo94kf5fv0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3DM4b_AH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqoub0do77wo94kf5fv0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/getify"&gt;
        getify
      &lt;/a&gt; / &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;
        You-Dont-Know-JS
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A book series on JavaScript. @YDKJS on twitter.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
You Don't Know JS Yet (book series) - 2nd Edition&lt;/h1&gt;
&lt;p&gt;This is a series of books diving deep into the core mechanisms of the JavaScript language. This is the &lt;strong&gt;second edition&lt;/strong&gt; of the book series:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanpub.com/ydkjsy-get-started" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtkSruB9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/get-started/images/cover.png" width="75"&gt;&lt;/a&gt;  
&lt;a href="https://leanpub.com/ydkjsy-scope-closures" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--shk0lBuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/scope-closures/images/cover.png" width="75"&gt;&lt;/a&gt;  ...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To read more about the motivations and perspective behind this book series, check out the &lt;a href="https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/preface.md"&gt;Preface&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you're looking for the previous &lt;strong&gt;first edition&lt;/strong&gt; books, &lt;a href="https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/README.md"&gt;they can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Premier Sponsor&lt;/h2&gt;
&lt;p&gt;This edition of the &lt;strong&gt;YDKJS&lt;/strong&gt; book series is exclusively sponsored by &lt;a href="https://frontendmasters.com" rel="nofollow"&gt;Frontend Masters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Frontend Masters is the gold standard for top-of-the-line expert training material in frontend-oriented software development. With over 150 courses on all things frontend, this should be your first and only stop for quality video training on HTML, CSS, JS, and related technologies.&lt;/p&gt;

&lt;p&gt;I teach &lt;a href="https://frontendmasters.com/kyle-simpson" rel="nofollow"&gt;all my workshops&lt;/a&gt; exclusively through Frontend Masters. If you like this book content, please check out my video training courses.&lt;/p&gt;
&lt;p&gt;I want…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/getify/You-Dont-Know-JS"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#3-developer-roadmap-164k"&gt;
  &lt;/a&gt;
  3. Developer Roadmap - 164K 🌟
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ergb0ysM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8s1yk4y29r2dbfqlidyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ergb0ysM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8s1yk4y29r2dbfqlidyk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/kamranahmedse"&gt;
        kamranahmedse
      &lt;/a&gt; / &lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;
        developer-roadmap
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Roadmap to becoming a web developer in 2021
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e3bb5b618fa831af07bb2be1df1ac6f0601da44619f9579d8debd7902e5b0140/68747470733a2f2f692e696d6775722e636f6d2f3475334c4b346a2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e3bb5b618fa831af07bb2be1df1ac6f0601da44619f9579d8debd7902e5b0140/68747470733a2f2f692e696d6775722e636f6d2f3475334c4b346a2e706e67" alt="Web Developer Roadmap - 2021"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Roadmap to becoming a web developer in 2021&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://roadmap.sh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e42f31b891254eeccdef379b7f44037ef373b4022c3a256abeda2c4ad2d9b1ba/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d526f61646d6170732532302d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061" alt=""&gt;&lt;/a&gt;
&lt;a href="http://roadmap.sh/guides" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c1713c573a4f3e646fab41f9fa3400bd5da99a7791f955ec1c11abb6601f9e2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4775696465732d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061" alt=""&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/./translations"&gt;&lt;img src="https://camo.githubusercontent.com/ae9ada29e346a63e9ae65e5706dad57e9ace9746b26f9fbd85bd724142d3232c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d5472616e736c6174696f6e732d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061" alt=""&gt;&lt;/a&gt;
&lt;a href="https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9fce662b5a9d4eb47446b58e8d3b139ad7e64970d6213c8ec04dfa02bf609091/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539442541342d596f75547562652532304368616e6e656c2d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Below you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a frontend, backend or a devops. I made these charts for an old professor of mine who wanted something to share with his college students to give them a perspective; sharing them here to help the community.&lt;/p&gt;

&lt;p&gt;
        &lt;sup&gt;Special Announcement:&lt;/sup&gt;
        &lt;br&gt;
        &lt;a href="https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1" rel="nofollow"&gt;
            &lt;img width="70px" src="https://camo.githubusercontent.com/579c8bdbbcbbf3d2187536835819abd3ffaf3fc600e8ebfc432b265af2b816a4/68747470733a2f2f726f61646d61702e73682f73706f6e736f72732f796f75747562652e737667"&gt;
        &lt;/a&gt;
        &lt;br&gt;
        &lt;b&gt;We now have a YouTube Channel&lt;/b&gt;
        &lt;br&gt;
        I plan on covering the roadmaps and put more content there&lt;br&gt;&lt;a href="https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1" rel="nofollow"&gt;Subscribe to the channel&lt;/a&gt;.
&lt;/p&gt;




&lt;h3&gt;
&lt;strong&gt;Purpose of these Roadmaps&lt;/strong&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would be…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/kamranahmedse/developer-roadmap"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#4-awesome-166k"&gt;
  &lt;/a&gt;
  4. Awesome - 166K 🌟
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W26mDZXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujzxtlu2cejnb92hpqar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W26mDZXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujzxtlu2cejnb92hpqar.png" alt="Awesome"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sindresorhus"&gt;
        sindresorhus
      &lt;/a&gt; / &lt;a href="https://github.com/sindresorhus/awesome"&gt;
        awesome
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      😎 Awesome lists about all kinds of interesting topics
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/sindresorhus/awesome/main/readme.md/media/logo.svg"&gt;&lt;img width="500" height="350" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4-vr0TdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/sindresorhus/awesome/main/readme.md/media/logo.svg" alt="Awesome"&gt;&lt;/a&gt;
    &lt;br&gt;
    &lt;br&gt;
    
    
&lt;p&gt;
            &lt;sup&gt;
                &lt;a href="https://github.com/sponsors/sindresorhus"&gt;My open source work is supported by the community&lt;/a&gt;
            &lt;/sup&gt;
        &lt;/p&gt;
        &lt;sup&gt;Special thanks to:&lt;/sup&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;a href="https://standardresume.co/tech" rel="nofollow"&gt;
            &lt;img src="https://camo.githubusercontent.com/a9462676e32c135261446342a9f984326a1d847cef8c75fabe1951634406c909/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f7374616e646172642d726573756d652d6c6f676f2e737667" width="160"&gt;
        &lt;/a&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;a href="https://retool.com/?utm_campaign=sindresorhus" rel="nofollow"&gt;
            &lt;img src="https://camo.githubusercontent.com/79db9f0fc2148f43b0dc9c23ad73b185006f219552f3192a64a72ce0a028366a/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f7265746f6f6c2d6c6f676f2e737667" width="210"&gt;
        &lt;/a&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;a href="https://doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=awesome&amp;amp;utm_source=github" rel="nofollow"&gt;
            &lt;div&gt;
                &lt;img src="https://camo.githubusercontent.com/0b7046d12223b30accf7609035ff5ff104bb05b406d1842add5849fba4436e7d/68747470733a2f2f64617368626f6172642e646f70706c65722e636f6d2f696d67732f6c6f676f2d6c6f6e672e737667" width="230" alt="Doppler"&gt;
            &lt;/div&gt;
            &lt;b&gt;All your environment variables, in one place&lt;/b&gt;
            &lt;div&gt;
                Stop struggling with scattered API keys, hacking together home-brewed tools,
                &lt;br&gt;
                &lt;sup&gt;and avoiding access controls. Keep your team and servers in sync with Doppler.&lt;/sup&gt;
            &lt;/div&gt;
        &lt;/a&gt;
        &lt;br&gt;
        &lt;a href="https://workos.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=awesome&amp;amp;utm_source=github" rel="nofollow"&gt;
            &lt;div&gt;
                &lt;img src="https://camo.githubusercontent.com/604b5653345cd8ccc38eb7d4102a7b97248066229fcb5c137a6c6c30af97a938/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f776f726b6f732d6c6f676f2d77686974652d62672e737667" width="200" alt="WorkOS"&gt;
            &lt;/div&gt;
            &lt;b&gt;Your app, enterprise-ready.&lt;/b&gt;
            &lt;div&gt;
                Start selling to enterprise customers with just a few lines of code.
                &lt;br&gt;
                &lt;sup&gt;Add Single Sign-On (and more) in minutes instead of months.&lt;/sup&gt;
            &lt;/div&gt;
        &lt;/a&gt;
        &lt;br&gt;
        &lt;a href="https://strapi.io/?ref=sindresorhus" rel="nofollow"&gt;
            &lt;div&gt;
                &lt;img src="https://camo.githubusercontent.com/f4e2f908dbc412a5fdde35b465f0725e0f2b0f4d04ebdbc75a856df10e0f5a07/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f7374726170692d6c6f676f2d77686974652d62672e706e67" width="200" alt="Strapi"&gt;
            &lt;/div&gt;
            &lt;b&gt;Strapi is the leading open-source headless CMS.&lt;/b&gt;
            &lt;div&gt;
                &lt;sup&gt;It’s 100% JavaScript, fully customizable, and developer-first.&lt;/sup&gt;
            &lt;/div&gt;
        &lt;/a&gt;
        &lt;br&gt;
        &lt;a href="https://oss.capital" rel="nofollow"&gt;
            &lt;div&gt;
                &lt;img src="https://camo.githubusercontent.com/72f71026105fbc667654f3cecf53999154f7475fe7959f0754f7de238d55df73/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f6f73732d6361706974616c2d6c6f676f2d77686974652d62672e737667" width="300" alt="OSS Capital"&gt;
            &lt;/div&gt;
            &lt;div&gt;
                &lt;sup&gt;&lt;b&gt;Founded in 2018, OSS Capital is the first and only venture capital platform focused&lt;br&gt;exclusively on supporting early-stage COSS (commercial open source) startup founders.&lt;/b&gt;&lt;/sup&gt;
            &lt;/div&gt;
        &lt;/a&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;a href="https://bit.io/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=awesome&amp;amp;utm_source=github" rel="nofollow"&gt;
            &lt;div&gt;
                &lt;img src="https://camo.githubusercontent.com/a9e09408ab9b9cd9c2ecb703dfb34fa37d2d6d6ae26f5d9b9e27f11142d2aa7d/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f626974696f2d6c6f676f2e737667" width="190" alt="bit.io"&gt;
            &lt;/div&gt;
            &lt;b&gt;Instant, shareable cloud PostgreSQL database&lt;/b&gt;
            &lt;div&gt;
                &lt;sup&gt;Import any dataset in seconds, share with anyone with a click, try without signing up&lt;/sup&gt;
            &lt;/div&gt;
        &lt;/a&gt;
    
    &lt;br&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;br&gt;
&lt;/div&gt;
&lt;p&gt;
    &lt;a href="https://raw.githubusercontent.com/sindresorhus/awesome/main/readme.md/awesome.md"&gt;What is an awesome list?&lt;/a&gt;   
    &lt;a href="https://raw.githubusercontent.com/sindresorhus/awesome/main/readme.md/contributing.md"&gt;Contribution guide&lt;/a&gt;   
    &lt;a href="https://raw.githubusercontent.com/sindresorhus/awesome/main/readme.md/create-list.md"&gt;Creating a list&lt;/a&gt;   
    &lt;a href="https://twitter.com/awesome__re" rel="nofollow"&gt;Twitter&lt;/a&gt;   
    &lt;a href="https://www.redbubble.com/people/sindresorhus/works/30364188-awesome-logo" rel="nofollow"&gt;Stickers &amp;amp; t-shirts&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div&gt;
    &lt;b&gt;Follow the &lt;a href="https://twitter.com/awesome__re" rel="nofollow"&gt;Awesome Twitter account&lt;/a&gt; for updates on new list additions.&lt;/b&gt;
&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sindresorhus/awesome"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#5-coding-interview-university-184k"&gt;
  &lt;/a&gt;
  5. Coding Interview University - 184K 🌟
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sJqkKINY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtefwax92pb25fcvuxuk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sJqkKINY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtefwax92pb25fcvuxuk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jwasham"&gt;
        jwasham
      &lt;/a&gt; / &lt;a href="https://github.com/jwasham/coding-interview-university"&gt;
        coding-interview-university
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A complete computer science study plan to become a software engineer.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Coding Interview University&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I originally created this as a short to-do list of study topics for becoming a software engineer
but it grew to the large list you see today. After going through this study plan, &lt;a href="https://startupnextdoor.com/ive-been-acquired-by-amazon/?src=ciu" rel="nofollow"&gt;I got hired
as a Software Development Engineer at Amazon&lt;/a&gt;
You probably won't have to study as much as I did. Anyway, everything you need is here.&lt;/p&gt;
&lt;p&gt;I studied about 8-12 hours a day, for several months. This is my story: &lt;a href="https://medium.freecodecamp.org/why-i-studied-full-time-for-8-months-for-a-google-interview-cc662ce9bb13" rel="nofollow"&gt;Why I studied full-time for 8 months for a Google interview&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The items listed here will prepare you well for a technical interview at just about any software company
including the giants: Amazon, Facebook, Google, and Microsoft.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Best of luck to you!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;


Translations:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-cn.md"&gt;中文版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-vi.md"&gt;Tiếng Việt - Vietnamese&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-es.md"&gt;Español&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-ptbr.md"&gt;Português Brasileiro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-pl.md"&gt;Polish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-tw.md"&gt;繁體中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-ja.md"&gt;Japanese (日本語)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-ru.md"&gt;Russian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-de.md"&gt;German&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-id.md"&gt;Bahasa Indonesia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-kh.md"&gt;ខ្មែរ - Khmer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jwasham/coding-interview-university/main/translations/README-uz.md"&gt;Uzbek&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;/p&gt;

Translations in progress:

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university/issues/81"&gt;हिन्दी&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university/issues/82"&gt;עברית&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university/issues/98"&gt;Arabic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university/issues/90"&gt;Turkish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university/issues/89"&gt;French&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university/issues/106"&gt;Українська&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jwasham/coding-interview-university"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#6-free-programming-books-194k"&gt;
  &lt;/a&gt;
  6. Free Programming Books - 194K 🌟
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ailxwUb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltzqfpcy9cflppe3qxsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ailxwUb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltzqfpcy9cflppe3qxsq.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/EbookFoundation"&gt;
        EbookFoundation
      &lt;/a&gt; / &lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;
        free-programming-books
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📚 Freely available programming books
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;This page is available as an easy-to-read website at &lt;a href="https://ebookfoundation.github.io/free-programming-books/" rel="nofollow"&gt;https://ebookfoundation.github.io/&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
List of Free Learning Resources In Many Languages &lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h2&gt;
Intro&lt;/h2&gt;
&lt;p&gt;This list was originally a clone of &lt;a href="https://web.archive.org/web/20140606191453/http://stackoverflow.com/questions/194812/list-of-freely-available-programming-books/392926" rel="nofollow"&gt;StackOverflow - List of Freely Available Programming Books&lt;/a&gt; with contributions from Karan Bhangui and George Stocker.&lt;/p&gt;
&lt;p&gt;The list was moved to GitHub by Victor Felder for collaborative updating and maintenance. It has grown to become one of &lt;a href="https://octoverse.github.com/"&gt;GitHub's most popular repositories&lt;/a&gt;, with 194,000+ stars, 6100+ commits, 1600+ contributors, and 43,000+ forks.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://ebookfoundation.org" rel="nofollow"&gt;Free Ebook Foundation&lt;/a&gt; now administers the repo, a not-for-profit organization devoted to promoting the creation, distribution, archiving, and sustainability of free ebooks. &lt;a href="https://ebookfoundation.org/contributions.html" rel="nofollow"&gt;Donations&lt;/a&gt; to the Free Ebook Foundation are tax-deductible in the US.&lt;/p&gt;
&lt;h3&gt;
How To Contribute&lt;/h3&gt;
&lt;p&gt;Please read &lt;a href="https://raw.githubusercontent.com/EbookFoundation/free-programming-books/master//CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;. If you're new to GitHub, &lt;a href="https://raw.githubusercontent.com/EbookFoundation/free-programming-books/master//HOWTO.md"&gt;welcome&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;
How to Share&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://twitter.com/intent/tweet?text=https://github.com/EbookFoundation/free-programming-books%0AFree%20Programming%20Books" rel="nofollow"&gt;Share on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/share.php?u=https%3A%2F%2Fgithub.com%2FEbookFoundation%2Ffree-programming-books&amp;amp;p%5Bimages%5D%5B0%5D=&amp;amp;p%5Btitle%5D=Free%20Programming%20Books&amp;amp;p%5Bsummary%5D=" rel="nofollow"&gt;Share on Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linkedin.com/shareArticle?mini=true&amp;amp;url=https://github.com/EbookFoundation/free-programming-books&amp;amp;title=Free%20Programming%20Books&amp;amp;summary=&amp;amp;source=" rel="nofollow"&gt;Share on LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://t.me/share/url?url=https://github.com/EbookFoundation/free-programming-books" rel="nofollow"&gt;Share on Telegram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Books&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/EbookFoundation/free-programming-books/master/books/free-programming-books.md"&gt;English&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
Other Languages&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/EbookFoundation/free-programming-books/master/books/free-programming-books-ar.md"&gt;Arabic / al arabiya&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/EbookFoundation/free-programming-books"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#7-freecodecamp-326k"&gt;
  &lt;/a&gt;
  7. FreeCodeCamp - 326K 🌟
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1pBA8dhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ie65ezknunxmr8shdfjk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1pBA8dhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ie65ezknunxmr8shdfjk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/freeCodeCamp"&gt;
        freeCodeCamp
      &lt;/a&gt; / &lt;a href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;
        freeCodeCamp
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      freeCodeCamp.org's open-source codebase and curriculum. Learn to code for free.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d069971a0af4d9e393066dc77ced000cff23a1f6bbfbb9e7704a870192a926ca/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f66726565636f646563616d702f776964652d736f6369616c2d62616e6e65722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d069971a0af4d9e393066dc77ced000cff23a1f6bbfbb9e7704a870192a926ca/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f66726565636f646563616d702f776964652d736f6369616c2d62616e6e65722e706e67" alt="freeCodeCamp.org Social Banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58e45dedeb7342e0487c805f92b20dd215e093f18137b3abd5fe37de7c49088e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Pull Requests Welcome"&gt;&lt;/a&gt;
&lt;a href="http://www.firsttimersonly.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afdaea001be5a8c3fe777c0353fca25dcfa1bc80d464067351e1daaa6a678b05/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f66697273742d2d74696d6572732d2d6f6e6c792d667269656e646c792d626c75652e737667" alt="first-timers-only Friendly"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/freecodecamp/freecodecamp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8bea2319d73516a54748a032f45076e7f501dedd4a9f5b7de207254c7213ad79/68747470733a2f2f7777772e636f64657472696167652e636f6d2f66726565636f646563616d702f66726565636f646563616d702f6261646765732f75736572732e737667" alt="Open Source Helpers"&gt;&lt;/a&gt;
&lt;a href="https://gitpod.io/from-referrer/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/63c6e800af1de7d75c99e61d64a1f1dd1972471f778b4290c98886f35ee4170c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73657475702d6175746f6d617465642d626c75653f6c6f676f3d676974706f64" alt="Setup Automated"&gt;&lt;/a&gt;
&lt;a href="https://chat.freecodecamp.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b1bdeefb3847188d76a4eae353d7b26e1334917b72b52d12b47fa5ebab80431/68747470733a2f2f636861742e66726565636f646563616d702e6f72672f6170692f76312f736869656c642e7376673f747970653d6f6e6c696e652669636f6e3d66616c7365266e616d653d43686174" alt="Rocket.Chat"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
freeCodeCamp.org's open-source codebase and curriculum&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.freecodecamp.org" rel="nofollow"&gt;freeCodeCamp.org&lt;/a&gt; is a friendly community where you can learn to code for free. It is run by a &lt;a href="https://www.freecodecamp.org/donate" rel="nofollow"&gt;donor-supported 501(c)(3) nonprofit&lt;/a&gt; to help millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.&lt;/p&gt;
&lt;p&gt;Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#certifications"&gt;Certifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#the-learning-platform"&gt;The Learning Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-bugs-and-issues"&gt;Reporting Bugs and Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-security-issues-and-responsible-disclosure"&gt;Reporting Security Issues and Responsible Disclosure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#platform-build-and-deployment-status"&gt;Platform, Build and Deployment Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Certifications&lt;/h3&gt;
&lt;p&gt;freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.&lt;/p&gt;
&lt;p&gt;Each of these 50…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#video-link-"&gt;
  &lt;/a&gt;
  Video Link :
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#-youtube-vsfywyjrdc-"&gt;
  &lt;/a&gt;
  &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VSfYwYJr_Dc"&gt;
&lt;/iframe&gt;

&lt;/h2&gt;

</description>
      <category>javascript</category>
      <category>github</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The difference between Encoding, Encryption, Hashing and Obfuscation</title>
      <author>Amran Hussein</author>
      <pubDate>Sun, 18 Jul 2021 12:14:58 +0000</pubDate>
      <link>https://dev.to/amran92/the-difference-between-encoding-encryption-hashing-and-obfuscation-3men</link>
      <guid>https://dev.to/amran92/the-difference-between-encoding-encryption-hashing-and-obfuscation-3men</guid>
      <description>&lt;p&gt;Many programmers confuse the related terms Encryption, Encoding, Hashing, and Obfuscation. This article will look at what each of these terms is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Encoding&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8YJaraXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4iovyhdnp34t9ps0hl9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YJaraXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4iovyhdnp34t9ps0hl9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Encoding aims to transform data so that different systems can handle it in a correct and secure manner. For example: sending executables in an email or displaying special characters on a web page. The purpose here is not to keep the information confidential, but rather to ensure that it will be dealt with in an optimal manner.&lt;/p&gt;

&lt;p&gt;The encoding converts data from one format to another in a publicly accessible mechanism and the conversion can therefore be easily reversed. After encoding the data does not need a secret key to be able to deal with it, as the only requirement to be able to decode is the algorithm used in it.&lt;br&gt;
&lt;em&gt;Examples:&lt;/em&gt; ASCII, Unicode, URL encoding and Base64.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Encryption&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUBNdKIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyxk9t5p7y9w0kg9gohw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUBNdKIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyxk9t5p7y9w0kg9gohw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Encryption is used to transform the form of data for the purpose of keeping it anonymous to others; For example, when you send a message to someone that you do not want others to be able to read or to deliver a secret password on the Internet. Encryption, rather than focusing on the usability of the information, aims to ensure that unauthorized persons cannot make use of the data.&lt;/p&gt;

&lt;p&gt;Encryption turns data into another form that only certain people can understand. To perform the cryptography, an encryption key, an algorithm, and the text to be converted are used. Decryption requires obtaining the encrypted text, the encryption algorithm, and the secret key (the same encryption key or another secret key).&lt;br&gt;
&lt;em&gt;Examples:&lt;/em&gt; AES, Blowfish, and RSA.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hashing&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MPIcXM9S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzj1m7qqykou0cmi54av.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MPIcXM9S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzj1m7qqykou0cmi54av.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hashing ensures the integrity of the data, integrity, meaning that if it has been modified, you will be able to find out. The hash operation takes a random input and produces a fixed-length character string that has the following properties.&lt;/p&gt;

&lt;p&gt;Hashing is used with authentication to obtain strong evidence that a message has not been modified. The process is done by taking a specific input, encrypting it with a specific key, hashing it with the same key, then encrypting the key with the public key of the sender, then signing the hash with the secret key of the sender.&lt;/p&gt;

&lt;p&gt;The addressee opens the message and then decrypts the key used to encrypt the message using his secret key, which enables him to obtain the original text of the message. It can then hash the message and compare the hash result with the hash signed by the sender. If a match occurs, it means that the message has not been modified and that it was sent by the waiting person.&lt;br&gt;
&lt;em&gt;Examples:&lt;/em&gt; SHA-3 and MD5 (obsolete)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obfuscation&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YonNVUlF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxvhflhvuy50pq1s81db.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YonNVUlF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxvhflhvuy50pq1s81db.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Obfuscation aims to make information more difficult to understand, difficult to attack, or copy. A common use is to obfuscate the source code to make it more difficult to replicate a product when reverse engineering is applied to it.&lt;/p&gt;

&lt;p&gt;Note that there is a limit to obfuscation depending on the content. When obfuscation software code, for example, the limit is that the result of obfuscation must remain within what the computer can handle, otherwise the program will stop working.&lt;br&gt;
&lt;em&gt;Examples:&lt;/em&gt; JavaScript obfuscation and ProGuard.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Internet Explorer finally dies</title>
      <author>Oliver Williams</author>
      <pubDate>Sun, 18 Jul 2021 12:14:20 +0000</pubDate>
      <link>https://dev.to/otw/internet-explorer-finally-dies-26cn</link>
      <guid>https://dev.to/otw/internet-explorer-finally-dies-26cn</guid>
      <description>&lt;p&gt;I’ve written about the death of Internet Explorer before over on &lt;a href="https://css-tricks.com/a-business-case-for-dropping-internet-explorer/"&gt;CSS Tricks&lt;/a&gt; and &lt;a href="https://alistapart.com/article/the-slow-death-of-internet-explorer-and-future-of-progressive-enhancement/"&gt;A List Apart&lt;/a&gt;, perhaps prematurely, but we’ve finally reached a tipping point. &lt;/p&gt;

&lt;p&gt;Popular JavaScript frameworks have dropped support, including &lt;a href="https://github.com/vuejs/rfcs/discussions/296"&gt;Vue 3&lt;/a&gt; and &lt;a href="https://twitter.com/_developit/status/1387804823492440069"&gt;Preact 11&lt;/a&gt;. Angular has deprecated support for IE and will fully &lt;a href="https://blog.angular.io/angular-v12-is-now-available-32ed51fbfd49"&gt;remove support in version 13&lt;/a&gt;. &lt;a href="https://emberjs.com/browser-support/"&gt;Ember&lt;/a&gt; is removing support in version 4, to be released in September. &lt;a href="https://ionicframework.com/docs/reference/browser-support#desktop-browsers"&gt;Ionic&lt;/a&gt;, a library of UI components, also ditched IE. &lt;/p&gt;

&lt;p&gt;Bootstrap, still the most popular CSS framework, &lt;a href="https://getbootstrap.com/docs/5.0/getting-started/browsers-devices/#internet-explorer"&gt;officially dropped support for IE&lt;/a&gt; with the release of Bootstrap 5. Tailwind, another popular CSS library, also &lt;a href="https://tailwindcss.com/docs/browser-support"&gt;dropped support for IE11&lt;/a&gt; with the release of version 2. &lt;/p&gt;

&lt;p&gt;WordPress dropped support with the release of &lt;a href="https://wordpress.org/news/2021/05/dropping-support-for-internet-explorer-11/"&gt;version 5.8&lt;/a&gt;. Drupal will drop support with the forthcoming release of &lt;a href="https://www.drupal.org/node/3199540"&gt;Drupal 10&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The list of companies that have dropped support is growing by the day, and includes: &lt;a href="https://twitter.com/devongovett/status/1317225855249125377"&gt;Adobe&lt;/a&gt;, &lt;a href="https://developer.dailymotion.com/changelog/dailymotion-no-longer-supports-internet-explorer/"&gt;Dailymotion&lt;/a&gt;, &lt;a href="https://www.skillshare.com/unsupported-browser"&gt;Skillshare&lt;/a&gt;, LinkedIn, Twitter, &lt;a href="https://blogs.sap.com/2021/02/02/internet-explorer-11-will-no-longer-be-supported-by-various-sap-ui-technologies-in-newer-releases/"&gt;SAP&lt;/a&gt;, among many others. &lt;/p&gt;

&lt;p&gt;Many of &lt;a href="https://techcommunity.microsoft.com/t5/microsoft-365-blog/microsoft-365-apps-say-farewell-to-internet-explorer-11-and/ba-p/1591666"&gt;Microsoft's own products&lt;/a&gt; have already dropped support: Microsoft Teams web app ended support in November 2020. From August 17th, 2021, Microsoft 365 apps and services will also drop support.&lt;/p&gt;

&lt;p&gt;Senior Director of Engineering at GoDaddy &lt;a href="https://twitter.com/indexzero/status/1261033701548404749"&gt;tweeted&lt;/a&gt; back in 2020: “We dropped support &lt;a href="https://twitter.com/GoDaddy"&gt;@GoDaddy&lt;/a&gt; for IE11 in April. We've seen 25% bundle size reductions since targeting modern JavaScript for transpilation”&lt;/p&gt;

&lt;p&gt;It is now Safari that is the major outlier. Few users are stuck on old versions of Chrome or Firefox, but plenty of users get stuck on old versions of iOS. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>A look into Dynamic Programming - Matrix Chain Multiplication</title>
      <author>Andrei Visoiu</author>
      <pubDate>Sun, 18 Jul 2021 12:00:01 +0000</pubDate>
      <link>https://dev.to/kruzzy/a-look-into-dynamic-programming-matrix-chain-multiplication-34gb</link>
      <guid>https://dev.to/kruzzy/a-look-into-dynamic-programming-matrix-chain-multiplication-34gb</guid>
      <description>&lt;p&gt;In the beginning of the &lt;a href="https://dev.to/kruzzy/using-divide-and-conquer-closest-pair-of-points-5e2g"&gt;last article I wrote&lt;/a&gt;, I described two ways of solving a problem by splitting it into subproblems: on one hand, those problems can be solved independently from one another (a method called divide &amp;amp; conquer, which I described in the article); on the other hand, they can interact with each other, building up on the results. Problems on the latter category can be solved using a method called &lt;strong&gt;dynamic programming&lt;/strong&gt;, which will be the topic for today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#formal-definition-of-dynamic-programming"&gt;
  &lt;/a&gt;
  Formal Definition of Dynamic Programming
&lt;/h2&gt;

&lt;p&gt;In the field of Computer Science, Dynamic Programming is derived from a mathematical optimisation method. It refers to simplifying a problem by breaking it down into smaller subproblems. If the results of those smaller subproblems overlap so they can be fit inside the larger problems, then there is a relation between them and the results of the larger problem.&lt;/p&gt;

&lt;p&gt;For example, by modifying the &lt;a href="https://dev.to/kruzzy/why-is-graph-theory-so-amazing-part-3-bfs-bipartite-graphs-2860"&gt;BFS algorithm I presented in this article&lt;/a&gt; to find the shortest path in an unweighted graph we can obtain a dynamic programming solution to the problem. &lt;/p&gt;

&lt;p&gt;This is possible by making a simple statement: if &lt;strong&gt;i&lt;/strong&gt; and &lt;strong&gt;j&lt;/strong&gt; are two nodes in an unweighted graph, then the shortest path from &lt;strong&gt;i&lt;/strong&gt; to &lt;strong&gt;j&lt;/strong&gt; would be obtained by first obtaining the shortest path from &lt;strong&gt;i&lt;/strong&gt; to a neighbour of &lt;strong&gt;j&lt;/strong&gt;. Described in pseudocode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;min_dist[i][j] = infinity
for every neighbour k of j:
   min_dist[i][j] = min(min_dist[i][k]+1, min_dist[i][j])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The last line of the snippet is called a &lt;strong&gt;reccurence relation&lt;/strong&gt;. (such relations are widely used in mathematics; another example is the way the &lt;a href="https://dev.to/kruzzy/the-magic-of-the-fibonacci-numbers-why-we-love-computing-them-part-1-18gp"&gt;Fibonacci sequence&lt;/a&gt; is calculated.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#subproblems-and-memoization"&gt;
  &lt;/a&gt;
  Subproblems and Memoization
&lt;/h2&gt;

&lt;p&gt;Subproblems are basically smaller instances (or versions) of the original problem. By saying that a problem has "overlapping subproblems", we mean that finding its solution involves solving the same subproblem multiple times.&lt;/p&gt;

&lt;p&gt;An accessible example is calculating the n-th Fibonacci number, which I presented in &lt;a href="https://dev.to/kruzzy/the-magic-of-the-fibonacci-numbers-why-we-love-computing-them-part-1-18gp"&gt;an earlier article&lt;/a&gt;. Let's look again at the recursion tree of the problem:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lk7pc8lQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ryh3287x4xy4ox7piye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lk7pc8lQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ryh3287x4xy4ox7piye.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is clear that, if we do not store the results in some way, some numbers will be calculated multiple times, resulting in a staggering time complexity of O(1.62^n) (see the &lt;a href="https://dev.to/kruzzy/the-magic-of-the-fibonacci-numbers-why-we-love-computing-them-part-1-18gp"&gt;article&lt;/a&gt; for information about how this was calculated). &lt;br&gt;
This technique is called "memoization" - we can store the value of a Fibonacci number in an array after we calculate it for later use. This would decrease the time complexity, in this case, to an ~O(n).&lt;/p&gt;

&lt;p&gt;Memoization is widely used in dynamic programming (which is, in essence, an optimisation technique). Let us see how we can create such a solution.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#matrix-chain-multiplication"&gt;
  &lt;/a&gt;
  Matrix Chain Multiplication
&lt;/h2&gt;

&lt;p&gt;We know that matrix multiplication is &lt;strong&gt;not&lt;/strong&gt; a commutative operation, but it is associative. It also turns out that the order in which the multiplication is done affects the overall number of operations you do.&lt;/p&gt;

&lt;p&gt;Let's suppose we have three matrixes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A&lt;/strong&gt;, of size 3 x 1 - a column matrix&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;B&lt;/strong&gt;, of size 1 x 3 - a line matrix&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;C&lt;/strong&gt;, of size 3 x 1 - a column matrix again&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can multiply them in two ways: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(AB)C - multiplying A and B would yield a 3 x 3 matrix, and would take 9 operations. Multiplying (AB) with C would take another 9 operations, for a total of 18 operations.&lt;/li&gt;
&lt;li&gt;A(BC) - multiply B and C only takes 3 operations and yield a 1 x 1 matrix. Multiplying A with (BC) would take another 3 operations, for a total of 6 operations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Keeping that in mind, we ask the question: what is the best order to do the multiplication? &lt;/p&gt;

&lt;p&gt;Let's suppose we have N matrixes (M_1 through M_N) whose sizes we store in an array S, such that S[i-1] and S[i] are the sizes for matrix &lt;strong&gt;i&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;We can solve the problem using dynamic programming by making the following observation: the first thing we need to determine is what multiplication should be done last. In other word, we search for a matrix &lt;strong&gt;i&lt;/strong&gt; such that our expression would look like (M_1 * M_2 * ... M_i ) * ( M_(i+1) * ... M_N), and both the products in parenthesis are also calculated optimally. &lt;/p&gt;

&lt;p&gt;We can construct an N x N 2D array, let's call it A, such that A[i][j] will hold the minimum cost (number of operations) to compute the product of matrixes from M_i through M_j. We will use this array to memoise the results.&lt;/p&gt;

&lt;p&gt;Let's see how we can calculate the cost for a "cut" in the product of matrixes from M_i through M_j. If we were to put the parenthesis such like (M_i * M_(i+1) * .... M_k) * (M_(k+1) * ... M_j), the cost would be the sum of the cost of the two parenthesis + the cost to multiply the matrix yield by those two, which will be S[i-1] * S[k] * S[j], as the first result would be of size S[i-1] x S[k], and the second would be of size S[k] * S[j].&lt;/p&gt;

&lt;p&gt;We now just have to find the best &lt;strong&gt;k&lt;/strong&gt; for our cut. We can make this in a recursive manner. Let us look at an implementation of the idea:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The sizes for the matrixes is the one in the example above, rows and column matrixes. The code outputs the result as 6, as we have concluded earlier.&lt;/p&gt;

&lt;p&gt;This was achieved recursively, by first calling matrix_chain_cost for positions 1 through N. We used &lt;strong&gt;memoisation&lt;/strong&gt; to avoid redundant calculations, and then applied the formula we found above.&lt;/p&gt;

&lt;p&gt;The time complexity of the code above is O(n^3), as we are basically generating the cost for all the "cuts" we can do in the expression.&lt;/p&gt;

&lt;p&gt;That was all for today. &lt;strong&gt;The Magic of Computing&lt;/strong&gt; will be back with yet another interesting algorithmic topic. But, until then, maybe you fancy some &lt;a href="https://dev.to/kruzzy/why-is-graph-theory-so-amazing-part-1-5ii"&gt;Graph Theory&lt;/a&gt;? Or are you more of a &lt;a href="https://dev.to/kruzzy/exploring-backtracking-25dp"&gt;Backtracking&lt;/a&gt; person?&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>algorithms</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Deploy Kafka + Filebeat + ELK - Docker Edition - Part 2 </title>
      <author>Kshitij (kd)</author>
      <pubDate>Sun, 18 Jul 2021 11:49:32 +0000</pubDate>
      <link>https://dev.to/dhingrachief/deploy-kafka-filebeat-elk-docker-edition-part-2-hpj</link>
      <guid>https://dev.to/dhingrachief/deploy-kafka-filebeat-elk-docker-edition-part-2-hpj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This article is the last part of a two part series where we will deploy ELK stack using docker/docker-compose.&lt;br&gt;
In this article, we will be configuring Logstash, Elasticsearch and Kibana. If you haven't gone through the previous article, check out this &lt;a href="https://dev.to/dhingrachief/deploy-kafka-filebeat-elk-docker-edition-part-1-3m77"&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#logstash"&gt;
  &lt;/a&gt;
  Logstash
&lt;/h2&gt;

&lt;p&gt;Logstash is a server-side data processing pipeline that consumes data from different sources and send it to elasticsearch. We touched on its importance when comparing with filebeat in the previous article.&lt;br&gt;
Now to install logstash, we will be adding three components &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a pipeline config - logstash.conf&lt;/li&gt;
&lt;li&gt;a setting config - logstash.yml&lt;/li&gt;
&lt;li&gt;docker-compose file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pipeline configuration will include the information about your input (kafka in our case), any filteration that needs to be done, and output (aka elasticsearch).&lt;br&gt;
Create a folder named pipeline and add this configuration file to it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#logstash-pipeline-logstashconf"&gt;
  &lt;/a&gt;
  Logstash pipeline - logstash.conf
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;input {
    kafka{
        bootstrap_servers =&amp;gt; "KAFKA_SERVERS_IP:KAFKA_SERVERS_PORT"
        topics =&amp;gt; ["applogs"]
    }
}
filter {
    json {
        source =&amp;gt; "message"
      }
}
## Add your filters / logstash plugins configuration here
output {
        elasticsearch {
    hosts =&amp;gt; ["ELASTICSEARCH_IP:9200"]
    user =&amp;gt; 'elastic'
    password =&amp;gt; 'somesecretpassword'
    }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As you can see, In the input section, we are listening to kafka on topic &lt;strong&gt;applogs&lt;/strong&gt;.&lt;br&gt;
In my case, I have added a filter which will jsonify the data that comes under the key named "message". There are several plugin &lt;a href="https://www.elastic.co/guide/en/logstash/6.8/filter-plugins.html"&gt;filters&lt;/a&gt; to choose from.&lt;br&gt;
The output is redirected towards elastic search, with username password configured for authentication.&lt;br&gt;
Create a folder named settings and add this configuration file to it&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#logstash-settings-logstashyml"&gt;
  &lt;/a&gt;
  logstash settings - logstash.yml
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http.host: "0.0.0.0"
path.config: /usr/share/logstash/pipeline
path.logs: /var/log/logstash
config.reload.automatic: true
log.level: debug
xpack.monitoring.enabled: false

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The docker-compose file looks like this: &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#logstash-dockercompose"&gt;
  &lt;/a&gt;
  logstash docker-compose
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: '2'

services:
  logstash:
    image: docker.elastic.co/logstash/logstash:5.6.3
    ports:
      - "10000:10000"
    volumes:
      - ./settings/:/usr/share/logstash/config/
      - ./pipeline/:/usr/share/logstash/pipeline/
    container_name: logstash                          
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here the configuration files mentioned above have been mounted.&lt;/p&gt;

&lt;p&gt;To run the above file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, You will get an error as we have not setup elastic search yet. Now lets go ahead and install Elasticsearch and Kibana&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#elasticsearch-and-kibana"&gt;
  &lt;/a&gt;
  Elasticsearch and Kibana
&lt;/h2&gt;

&lt;p&gt;Kibana is an open source user interface that helps you monitor and visualise data, which in our case, is being provided by elasticsearch.&lt;br&gt;
Elasticsearch, as the name suggests, is a search and analytics engine for different types of data.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#elasticsearch-and-kibana-dockercompose"&gt;
  &lt;/a&gt;
  Elasticsearch and Kibana  docker-compose
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: "2"
services:
 elasticsearch:
  image: "docker.elastic.co/elasticsearch/elasticsearch:7.13.2"
  container_name: elasticsearch
  environment:
   - discovery.type=single-node
   - cluster.routing.allocation.disk.threshold_enabled=true
   - cluster.routing.allocation.disk.watermark.low=65%
   - cluster.routing.allocation.disk.watermark.high=70%
   - xpack.security.enabled=true
   - xpack.security.audit.enabled=true
   - ELASTIC_PASSWORD=somethingsecret
   - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
   - bootstrap.memory_lock=true

  ulimits:
    memlock:
      soft: -1
      hard: -1
  volumes:
    - ./data:/usr/share/elasticsearch/data
  ports:
   - "9200:9200"
  networks:
   - eknetwork

 kibana:
  depends_on:
   - elasticsearch
  image: "docker.elastic.co/kibana/kibana:7.13.2"
  container_name: kibana
  ports:
   - "5601:5601"
  environment:
   - ELASTICSEARCH_URL=http://localhost:9200
   - ELASTICSEARCH_USERNAME=elastic
   - ELASTICSEARCH_PASSWORD=somethingsecretpassword
  networks:
   - eknetwork

networks:
 eknetwork:
  driver: bridge
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Make sure to add same elasticsearch password as the one you have provided in your logstash pipeline configuration file.&lt;/p&gt;

&lt;p&gt;To run the above file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that all our processes are running, You would need to configure Kibana's source from the UI so that you are able to see data on the UI. If you have done this setup on the server and want to configure UI immediately, I would suggest you to create a firewall rule for your public IP on port 5601&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ufw allow from YOUR_PUBLIC_IP to any port 5601
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now go to your favorite browser, type server's ip and port and you will see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GmDvyEMN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmqoyrr5dscizw9tlyn3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GmDvyEMN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmqoyrr5dscizw9tlyn3.png" alt="Home page of Kibana"&gt;&lt;/a&gt;&lt;br&gt;
Enter the credentials as specified in the docker-compose above and you should be able to enter the application.&lt;/p&gt;

&lt;p&gt;And Voila! Your setup is complete. Just don't forget to add log-rotation to your docker instances.&lt;br&gt;
I have added all the configuration and docker file &lt;a href="https://github.com/kdsama/ELK"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>kafka</category>
      <category>elk</category>
      <category>devops</category>
    </item>
    <item>
      <title>Imagine using Spotify - Nerding Out Episode 1</title>
      <author>AkIonSight</author>
      <pubDate>Sun, 18 Jul 2021 11:48:20 +0000</pubDate>
      <link>https://dev.to/akionsight/imagine-using-spotify-nerding-out-episode-1-32f4</link>
      <guid>https://dev.to/akionsight/imagine-using-spotify-nerding-out-episode-1-32f4</guid>
      <description>&lt;p&gt;Well yeah why pay for spotify if can use VLC media player, a text file, a few youtube links and a small python script to listen to your playlist. Why? cuz you know thats the stuff I love to do and if this doesnt interest you, hey youre getting a Ad-Free Music Player without anyone collecting your data. And yeah all of this stuff is open-source, even the libraries i am using too&lt;/p&gt;

&lt;p&gt;Skip to the end if you just want the code&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-everything"&gt;
  &lt;/a&gt;
  Getting everything
&lt;/h2&gt;

&lt;p&gt;You will need some stuff to get this project done, but I guess you probably have some of it or all of it already on your machine. Ok so this is the stuff you will need&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;VLC Media Player (aka VideoLAN)&lt;/li&gt;
&lt;li&gt;Python (I made this on python 3.9 but this is pretty small and should work in anything above python2)&lt;/li&gt;
&lt;li&gt;The Youtube links of all your playlist songs (but you can use any link that works with VLC)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#wait-a-sec-why-vlc-i-mean-there-are-a-lot-of-options"&gt;
  &lt;/a&gt;
  Wait a sec, why VLC? I mean there are a lot of options?
&lt;/h2&gt;

&lt;p&gt;Yeah lemme tell you. Imagine you know you use a custom music player that you are using to play songs at a party and then your non-existent friend asks, "hey wheres the equiliser" or "hey i wanna see the music video" or even "hey can you add subtitles" and then you don't have any answer because you didn't code that part out. VLC will help you in those situations, its pretty lightweight but it will help you get low-level customization done&lt;/p&gt;

&lt;p&gt;Also im lazy, let VLC do the hard part&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-go"&gt;
  &lt;/a&gt;
  Lets go
&lt;/h2&gt;

&lt;p&gt;First I assume you already have VLC on your computer. Also I assume you are on Windows. Now the thing is that VLC ships with command line tools too. To enable these you need to add the path to these command line tools in the PATH environment variable.&lt;/p&gt;

&lt;p&gt;To do so:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open Program files or Program Files(x86) and find the vlc folder or just use these locations&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;C:\Program Files\VideoLAN\VLC\&lt;/code&gt;&lt;br&gt;
or &lt;br&gt;
&lt;code&gt;C:\Program Files (x86)\VideoLAN\VLC\&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;if these folders exist, you can move ahead&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open windows search and type "edit environment variables". Something like this should pop up, click on it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bWHO4bkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqab2jxyhnq3stfomi55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWHO4bkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqab2jxyhnq3stfomi55.png" alt="Environment Variables"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or alternatively, you can open it from the command line&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now select PATH and click edit. Something like this &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXrTNkPn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5veybbkw9oxtwpfkq8gj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXrTNkPn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5veybbkw9oxtwpfkq8gj.png" alt="Edit it lol"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now click on new and then add the Program Files or Program Files(x86) for VLC. something like this. then press "OK"&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bSw8mIcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0fwmen3t4kurf9wwprrj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bSw8mIcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0fwmen3t4kurf9wwprrj.png" alt="🚀🚀"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then close the window&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Test it out. to test this, open a new command prompt window and type &lt;code&gt;vlc&lt;/code&gt; and check if any error is raised. If successful it should open vlc media player&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#part-2-script-time"&gt;
  &lt;/a&gt;
  Part 2: Script Time
&lt;/h2&gt;

&lt;p&gt;Create a python file, anywhere really and open it in your favorite code editor&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Import some modules 
we dont really need a lot, and none from outside the stdlib, we need &lt;code&gt;os&lt;/code&gt; and &lt;code&gt;random&lt;/code&gt; but random is optional (we will use it for shuffling songs but some people dont like it)
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create the &lt;code&gt;playlist.txt&lt;/code&gt; file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is where all hyperlinks will be stored. you can execute &lt;code&gt;copy NUL playlist.txt&lt;/code&gt; to create this file too&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add some test links to the file &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Add a few songs from your playlist, here are some to help you out&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://www.youtube.com/watch?v=dQw4w9WgXcQ
https://www.youtube.com/watch?v=QH2-TGUlwu4
https://www.youtube.com/watch?v=w0AOGeqOnFY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Read the file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;to do so write a simple read mode &lt;code&gt;open&lt;/code&gt; statement, something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'playlist.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we also split the file on each newline hence creating a list, so each link must be on a separate line&lt;/p&gt;

&lt;p&gt;printing the output of file we should get something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'https://www.youtube.com/watch?v=dQw4w9WgXcQ'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'https://www.youtube.com/watch?v=QH2-TGUlwu4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'https://www.youtube.com/watch?v=w0AOGeqOnFY'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Now we shuffle the songs
This wont be hard we just use
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Omit this line if you don't like your playlist shuffled&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Appending all values to a single string&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we append all values of that list from above. We will see the importance of it below. We do it using this for loop&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;videos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;videos&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; "&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;printing the output of videos we get something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://www.youtube.com/watch?v=w0AOGeqOnFY https://www.youtube.com/watch?v=QH2-TGUlwu4 https://www.youtube.com/watch?v=dQw4w9WgXcQ
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, all of them are in a single list&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Running VLC
Now we execute the command that loads vlc with your playlist
This statement does the job
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'vlc --no-video &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;videos&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we use the &lt;code&gt;--no-video flag&lt;/code&gt; because we are listening to songs, not seeing their YouTube videos. This should also cut down on bandwidth usage&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Running it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Execute the file and enjoy your playlist&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-code"&gt;
  &lt;/a&gt;
  Full code
&lt;/h2&gt;

&lt;p&gt;this is all the code we discussed here&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'playlist.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Shuffle the Playlist
&lt;/span&gt;
&lt;span class="c1"&gt;## Add all hyperlinks to a single string
&lt;/span&gt;&lt;span class="n"&gt;videos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;videos&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; "&lt;/span&gt;

&lt;span class="c1"&gt;## Run it all
&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'vlc --no-video &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;videos&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Find the full code here &lt;a href="https://github.com/akionsight/Imagine-Using-Spotify"&gt;https://github.com/akionsight/Imagine-Using-Spotify&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;p&gt;Credits to &lt;a href="https://www.vlchelp.com/add-vlc-command-prompt-windows/"&gt;this blog from vlchelp&lt;/a&gt; telling me about how to add VLC to path&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#end-notes"&gt;
  &lt;/a&gt;
  End Notes
&lt;/h2&gt;

&lt;p&gt;This is the first episode of this series, hope you like it and please tell me in the comments if you liked this blog or not. &lt;/p&gt;

&lt;p&gt;Thanks, cya&lt;/p&gt;

</description>
      <category>python</category>
      <category>nerds</category>
      <category>vlc</category>
    </item>
    <item>
      <title>AWS EKS With EFS CSI Driver And IRSA Using CDK</title>
      <author>Vu Dao</author>
      <pubDate>Sun, 18 Jul 2021 11:22:21 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/aws-eks-with-efs-csi-driver-and-irsa-using-cdk-dgc</link>
      <guid>https://dev.to/awscommunity-asean/aws-eks-with-efs-csi-driver-and-irsa-using-cdk-dgc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h2&gt;

&lt;p&gt;For multiple pods which need to read/write same data, Amazon Elastic File System (EFS) is the best choice. This post guides you the new way to create and setup EFS on EKS with IAM role for service account using IaC AWS CDK v2&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#What-is-Amazon-Elastic-File-System?"&gt;What is Amazon Elastic File System?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#EFS-provisioner-Architecture"&gt;EFS provisioner Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#What-is-Amazon-EFS-CSI-driver?"&gt;What is Amazon EFS CSI driver?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Amazon-EFS-Access-Points"&gt;Amazon EFS Access Points&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-EFS-Using-CDK"&gt;Create EFS Using CDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Create-IAM-role-for-service-account-for-CSI"&gt;Create IAM role for service account for CSI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Install-EFS-CSI-using-helm"&gt;Install EFS CSI using helm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Create-storageclass,-pv-and-pvc---Dynamic-Provisioning"&gt;Create storageclass, pv and pvc - Dynamic Provisioning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Create-storageclass,-pv-and-pvc---EFS-Access-Points"&gt;Create storageclass, pv and pvc - EFS Access Points&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-How-to-troubleshoot"&gt;How to troubleshoot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#what-is-amazon-elastic-file-system"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;What is Amazon Elastic File System?&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=AvgAozsfCrY"&gt;Amazon Elastic File System (Amazon EFS)&lt;/a&gt; provides a simple, scalable, fully managed elastic NFS file system for use with AWS Cloud services and on-premises resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#efs-provisioner-architecture"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;EFS provisioner Architecture&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;
  &lt;a href="https://dev.to/vumdao"&gt;
    
    &lt;img alt="EFS provisioner Architecture" src="https://res.cloudinary.com/practicaldev/image/fetch/s--X0JpEvKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/efs-csi/img/efs-provisioner-arch.png%3Fraw%3Dtrue"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The EFS volume at the top of the figure is an AWS-provisioned EFS volume, therefore managed by AWS, separately from Kubernetes. As most of AWS resources are, It will be attached to a VPC, Availability zones and subnets. And it will be protected by security groups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This volume can basically be mounted anywhere you can mount volumes using the NFS protocol. So you can mount it on your laptop (considering you configured AWS security groups accordingly), which can be very useful for test or debug purposes. Or you can mount it in Kubernetes. And that’s what will do both the EFS-provisioner (in order to configure sub-volumes inside the EFS volume) and your pods (in order to access the sub-volumes).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the EFS provisioner is deployed in Kubernetes, a new StorageClass “efs” is available and managed by this provisioner. You can then create a PVC that references this StorageClass. By doing so, the EFS provisioner will see your PVC and begin to take care of it, by doing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a subdir in the EFS volume, dedicated to this PVC&lt;/li&gt;
&lt;li&gt;Create a PV with the URI of this subdir (Address of the EFS volume + subdir path) and related info that will enable pods to use this subdir as a storage location using NFS protocol&lt;/li&gt;
&lt;li&gt;Bind this PV to the PVC&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now when a pod is designed to use PVC, it will use the PV’s info in order to connect directly to the EFS volume and use the subdir.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ref: &lt;a href="https://www.padok.fr/en/blog/efs-provisioner-kubernetes"&gt;&lt;/a&gt;&lt;a href="https://www.padok.fr/en/blog/efs-provisioner-kubernetes"&gt;https://www.padok.fr/en/blog/efs-provisioner-kubernetes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Previously, I wrote a post introduce EFS provisoner using &lt;code&gt;quay.io/external_storage/efs-provisioner:latest&lt;/code&gt; (an OpenShift Container Platform pod that mounts the EFS volume as an NFS share), &lt;a href="https://dev.to/vumdao/eks-persistent-storage-with-efs-amazon-service-14ei"&gt;read more&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In this post, I introduce CSI Driver provisioner&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-csi-driver"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;What is CSI driver?&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A &lt;a href="https://kubernetes-csi.github.io/docs/deploying.html"&gt;CSI driver&lt;/a&gt; is typically deployed in Kubernetes as two components: a controller component and a per-node component.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Controller Plugin&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Hqa0x9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kubernetes-csi.github.io/docs/images/sidecar-container.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Hqa0x9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kubernetes-csi.github.io/docs/images/sidecar-container.png" alt="controller"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node plugin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qFHshIm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kubernetes-csi.github.io/docs/images/kubelet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qFHshIm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kubernetes-csi.github.io/docs/images/kubelet.png" alt="node"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How the two components works?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mtbuFtP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/efs-csi/img/csi-flow.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mtbuFtP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/efs-csi/img/csi-flow.png%3Fraw%3Dtrue" alt="flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-amazon-efs-csi-driver"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;What is Amazon EFS CSI driver?&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href="https://github.com/kubernetes-sigs/aws-efs-csi-driver"&gt;Amazon EFS Container Storage Interface (CSI) driver&lt;/a&gt; provides a CSI interface that allows Kubernetes clusters running on AWS to manage the lifecycle of Amazon EFS file systems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EFS CSI driver supports dynamic provisioning and static provisioning. Currently Dynamic Provisioning creates an access point for each PV. This mean an AWS EFS file system has to be created manually on AWS first and should be provided as an input to the storage class parameter. For static provisioning, AWS EFS file system needs to be created manually on AWS first. After that it can be mounted inside a container as a volume using the driver.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the benefit of using EFS CSI Driver? - &lt;a href="https://aws.amazon.com/blogs/containers/introducing-efs-csi-dynamic-provisioning/"&gt;Introducing Amazon EFS CSI dynamic provisioning&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-efs-access-points"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Amazon EFS Access Points&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html"&gt;Amazon EFS access points&lt;/a&gt; are application-specific entry points into an EFS file system that make it easier to manage application access to shared datasets. Access points can enforce a user identity, including the user's POSIX groups, for all file system requests that are made through the access point. Access points can also enforce a different root directory for the file system so that clients can only access data in the specified directory or its subdirectories.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can use AWS Identity and Access Management (IAM) policies to enforce that specific applications use a specific access point. By combining IAM policies with access points, you can easily provide secure access to specific datasets for your applications.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#we-go-through-the-introductions-from-above-now-going-to-setup"&gt;
  &lt;/a&gt;
  We go through the introductions from above, now going to setup.
&lt;/h2&gt;



&lt;h2&gt;
  &lt;a href="#create-efs-using-cdk"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create EFS Using CDK&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Note: We need tag &lt;code&gt;{key='efs.csi.aws.com/cluster', value='true'}&lt;/code&gt; so that later we restrict the IAM permission within this EFS only
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from constructs import Construct
from eks_statements import EksWorkerRoleStatements
from aws_cdk import (
    Stack, Tags, RemovalPolicy,
    aws_eks as eks,
    aws_ec2 as ec2,
    aws_iam as iam,
    aws_efs as efs
)


class EksEfsStack(Stack):
    def __init__(self, scope: Construct, construct_id: str, env, vpc, **kwargs) -&amp;gt; None:
        super().__init__(scope, construct_id, env=env, **kwargs)

        efs_sg = ec2.SecurityGroup(
            self, 'EfsSG',
            vpc=vpc,
            description='EKS EFS SG',
            security_group_name='eks-efs'
        )
        efs_sg.add_ingress_rule(ec2.Peer.ipv4('10.3.0.0/16'), ec2.Port.all_traffic(), "EFS VPC access")
        Tags.of(efs_sg).add(key='cfn.eks-dev.stack', value='sg-stack')
        Tags.of(efs_sg).add(key='Name', value='eks-efs')
        Tags.of(efs_sg).add(key='env', value='dev')

        file_system = efs.FileSystem(
            self, construct_id,
            vpc=vpc,
            file_system_name='eks-efs',
            lifecycle_policy=efs.LifecyclePolicy.AFTER_14_DAYS,
            removal_policy=RemovalPolicy.DESTROY,
            security_group=efs_sg
        )

        Tags.of(file_system).add(key='cfn.eks-dev.stack', value='efs-stack')
        Tags.of(file_system).add(key='efs.csi.aws.com/cluster', value='true')
        Tags.of(file_system).add(key='Name', value='eks-efs')
        Tags.of(file_system).add(key='env', value='dev')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#create-iam-role-for-service-account-for-csi"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create IAM role for service account for CSI&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
    @staticmethod
    def efs_csi_statement():
        policy_statement_1 = iam.PolicyStatement(
            effect=iam.Effect.ALLOW,
            actions=[
                "elasticfilesystem:DescribeAccessPoints",
                "elasticfilesystem:DescribeFileSystems"
            ],
            resources=['*'],
            conditions={'StringEquals': {"aws:RequestedRegion": "ap-northeast-2"}}
        )

        policy_statement_2 = iam.PolicyStatement(
            effect=iam.Effect.ALLOW,
            actions=[
                "elasticfilesystem:CreateAccessPoint",
                "elasticfilesystem:DeleteAccessPoint"
            ],
            resources=['*'],
            conditions={'StringEquals': {"aws:ResourceTag/efs.csi.aws.com/cluster": "true"}}
        )

        return [policy_statement_1, policy_statement_2]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
        # EFS CSI SA
        efs_csi_role = iam.Role(
            self, 'EfsCSIRole',
            role_name='eks-efs-csi-sa',
            assumed_by=iam.FederatedPrincipal(
                federated=oidc_arn,
                assume_role_action='sts:AssumeRoleWithWebIdentity',
                conditions={'StringEquals': string_like('kube-system', 'efs-csi-controller-sa')},
            )
        )
        for stm in statement.efs_csi_statement():
            efs_csi_role.add_to_policy(stm)
        Tags.of(efs_csi_role).add(key='cfn.eks-dev.stack', value='role-stack')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#install-efs-csi-using-helm"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Install EFS CSI using helm&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use the above service account as external parameter
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver/
helm repo update
helm upgrade -i aws-efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver \
  --namespace kube-system \
  --set serviceAccount.controller.create=false \
  --set serviceAccount.controller.name=efs-csi-controller-sa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Annotate IRSA and then rollout restart controllers
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl annotate serviceaccount -n kube-system efs-csi-controller-sa eks.amazonaws.com/role-arn=arn:aws:iam::123456789012:role/eks-efs-csi-sa                                        
serviceaccount/efs-csi-controller-sa annotated

$ kubectl rollout restart deployment -n kube-system efs-csi-controller                                                                                                                     
deployment.apps/efs-csi-controller restarted

# Check IRSA work
$ kubectl exec -n kube-system efs-csi-controller-6b44dc5977-2w2d6 -- env |grep AWS
AWS_ROLE_ARN=arn:aws:iam::123456789012:role/eks-efs-csi-sa
AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token
AWS_DEFAULT_REGION=ap-northeast-2
AWS_REGION=ap-northeast-2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Check CSI
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[ec2-user@eks-ctl ~]$ kubectl get pod -n kube-system |grep csi
efs-csi-controller-6b44dc5977-2w2d6             3/3     Running   0          18h
efs-csi-controller-6b44dc5977-qtcc6             3/3     Running   0          159m
efs-csi-node-4rn69                              3/3     Running   0          17h
efs-csi-node-6zdwg                              3/3     Running   0          161m
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;For understanding IAM Role for service account, &lt;a href="https://dev.to/vumdao/using-iam-service-account-instead-of-instance-profile-for-eks-pods-262p"&gt;Go to&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#create-storageclass-pv-and-pvc-dynamic-provisioning"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create storageclass, pv and pvc - Dynamic Provisioning&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;
  - storageclass.yaml
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-92107410
  directoryPerms: "700"
  gidRangeStart: "1000"
  gidRangeEnd: "2000"
  basePath: "/data"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;provisioningMode - The type of volume to be provisioned by efs. Currently, only access point based provisioning is supported efs-ap.&lt;/li&gt;
&lt;li&gt;fileSystemId - The file system under which Access Point is created.&lt;/li&gt;
&lt;li&gt;directoryPerms - Directory Permissions of the root directory created by Access Point.&lt;/li&gt;
&lt;li&gt;gidRangeStart (Optional) - Starting range of Posix Group ID to be applied onto the root directory of the access point. Default value is 50000.&lt;/li&gt;
&lt;li&gt;gidRangeEnd (Optional) - Ending range of Posix Group ID. Default value is 7000000.&lt;/li&gt;
&lt;li&gt;basePath (Optional) - Path on the file system under which access point root directory is created. If path is not provided, access points root directory are created under the root of the file system.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: v1
kind: Namespace
metadata:
  name: storage
--------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-claim
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 1Gi
--------
apiVersion: v1
kind: Pod
metadata:
  name: efs-writer
  namespace: storage
spec:
  containers:
    - name: efs-writer
      image: centos
      command: ["/bin/sh"]
      args: ["-c", "while true; do echo $(date -u) &amp;gt;&amp;gt; /data/out; sleep 5; done"]
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: efs-claim
--------
apiVersion: v1
kind: Pod
metadata:
  name: efs-reader
  namespace: storage
spec:
  containers:
  - name: efs-reader
    image: busybox
    command: ["/bin/sh"]
    args: ["-c", "while true; do sleep 5; done"]
    volumeMounts:
    - name: efs-pvc
      mountPath: /data
  volumes:
  - name: efs-pvc
    persistentVolumeClaim:
      claimName: efs-claim
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apply and check
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get sc efs-sc
NAME     PROVISIONER       RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE
efs-sc   efs.csi.aws.com   Delete          Immediate           false                  2m54s

$ kubectl get pvc
NAME        STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
efs-claim   Bound    pvc-2a7e818f-c513-4b79-a47e-5b9c1a7d26a9   1Gi        RWX            efs-sc         2m32s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dynamic Access point is created&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KdBIf-v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/efs-csi/img/dynamic.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KdBIf-v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/efs-csi/img/dynamic.png%3Fraw%3Dtrue" alt="Dynamic"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check read/write pod and ensure pods are located to different nodes to demonstrate EFS strongly&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get pod -n storage -owide
NAME         READY   STATUS    RESTARTS   AGE    IP            NODE                                              NOMINATED NODE   READINESS GATES
efs-reader   1/1     Running   0          14s    10.3.147.2    ip-10-3-141-203.ap-northeast-2.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
efs-writer   1/1     Running   0          116s   10.3.235.47   ip-10-3-254-49.ap-northeast-2.compute.internal    &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;

$ kubectl exec efs-reader -n storage -- cat /data/out | head -n 2
Fri Jul 16 03:54:49 UTC 2021
Fri Jul 16 03:54:54 UTC 2021

$ kubectl exec efs-writer -n storage -- cat /data/out | head -n 2
Fri Jul 16 03:54:49 UTC 2021
Fri Jul 16 03:54:54 UTC 2021
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Ref: &lt;a href="https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/examples/kubernetes/dynamic_provisioning/README.md"&gt;https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/examples/kubernetes/dynamic_provisioning/README.md&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#create-storageclass-pv-and-pvc-efs-access-points"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create storageclass, pv and pvc - EFS Access Points&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;First create access point using AWS CLI or AWS console, and then get the Access point ID and EFS ID to pass to &lt;code&gt;volumeHandle: fs-a13cb9c1::fsap-0f9e7568af65cc5bd&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nl7MYuTM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/efs-csi/img/access-point.png%3Fraw%3Dtrue" alt="Access point"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  efs-ap.yaml
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
--------
apiVersion: v1
kind: Namespace
metadata:
  name: storage
--------
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-a13cb9c1::fsap-0f9e7568af65cc5bd
--------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-claim
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 1Gi
--------
apiVersion: v1
kind: Pod
metadata:
  name: efs-writer
  namespace: storage
spec:
  containers:
    - name: efs-writer
      image: centos
      command: ["/bin/sh"]
      args: ["-c", "while true; do echo $(date -u) &amp;gt;&amp;gt; /data/out; sleep 5; done"]
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: efs-claim
--------
apiVersion: v1
kind: Pod
metadata:
  name: efs-reader
  namespace: storage
spec:
  containers:
  - name: efs-reader
    image: busybox
    command: ["/bin/sh"]
    args: ["-c", "while true; do sleep 5; done"]
    volumeMounts:
    - name: efs-pvc
      mountPath: /data
  volumes:
  - name: efs-pvc
    persistentVolumeClaim:
      claimName: efs-claim
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apply the yaml file
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get pvc
NAME        STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE
efs-claim   Bound    efs-pv   1Gi        RWX            efs-sc         12h

$ kubectl get pv
NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                   STORAGECLASS   REASON   AGE
efs-pv                                     1Gi        RWX            Retain           Bound    storage/efs-claim                       efs-sc                  12h

$ kubectl get pod
NAME         READY   STATUS    RESTARTS   AGE
efs-reader   1/1     Running   0          104s
efs-writer   1/1     Running   0          104s

$ kubectl exec efs-reader -- cat /data/out
Tue Jul 13 05:33:43 UTC 2021
Tue Jul 13 05:33:48 UTC 2021
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#how-to-troubleshoot"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;How to troubleshoot&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Failed case if we input wrong EFS ID
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl logs -n kube-system -f --tail=100 efs-csi-controller-6b44dc5977-2w2d6 csi-provisioner
E0713 05:50:20.080089       1 event.go:264] Server rejected event '&amp;amp;v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"efs-claim.1691439f81a95683", GenerateName:"", Namespace:"storage", SelfLink:"", UID:"", ResourceVersion:"19553746", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"storage", Name:"efs-claim", UID:"4c51f212-c828-4a66-a297-31f8d9ebe255", APIVersion:"v1", ResourceVersion:"19553744", FieldPath:""}, Reason:"Provisioning", Message:"External provisioner is provisioning volume for claim \"storage/efs-claim\"", Source:v1.EventSource{Component:"efs.csi.aws.com_ip-10-3-179-184.ap-northeast-2.compute.internal_f7376ef0-1668-4be9-90b5-d18298dc677e", Host:""}, FirstTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63761752092, loc:(*time.Location)(0x26270e0)}}, LastTimestamp:v1.Time{Time:time.Time{wall:0xc033684704a729f2, ext:68986915168904, loc:(*time.Location)(0x26270e0)}}, Count:8, Type:"Normal", EventTime:v1.MicroTime{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events "efs-claim.1691439f81a95683" is forbidden: User "system:serviceaccount:kube-system:efs-csi-controller-sa" cannot patch resource "events" in API group "" in the namespace "storage"' (will not retry!)
I0713 05:50:20.111457       1 controller.go:1099] Final error received, removing PVC 4c51f212-c828-4a66-a297-31f8d9ebe255 from claims in progress
W0713 05:50:20.111494       1 controller.go:958] Retrying syncing claim "4c51f212-c828-4a66-a297-31f8d9ebe255", failure 7
E0713 05:50:20.111512       1 controller.go:981] error syncing claim "4c51f212-c828-4a66-a297-31f8d9ebe255": failed to provision volume with StorageClass "efs-sc": rpc error: code = InvalidArgument desc = File System does not exist: Resource was not found
I0713 05:50:20.111582       1 event.go:282] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"storage", Name:"efs-claim", UID:"4c51f212-c828-4a66-a297-31f8d9ebe255", APIVersion:"v1", ResourceVersion:"19553744", FieldPath:""}): type: 'Warning' reason: 'ProvisioningFailed' failed to provision volume with StorageClass "efs-sc": rpc error: code = InvalidArgument desc = File System does not exist: Resource was not found
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Success
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl logs -n kube-system -f --tail=100 efs-csi-controller-6b44dc5977-2w2d6 csi-provisioner
I0713 05:53:59.261135       1 controller.go:1332] provision "storage/efs-claim" class "efs-sc": started
I0713 05:53:59.261719       1 event.go:282] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"storage", Name:"efs-claim", UID:"2a7e818f-c513-4b79-a47e-5b9c1a7d26a9", APIVersion:"v1", ResourceVersion:"19555274", FieldPath:""}): type: 'Normal' reason: 'Provisioning' External provisioner is provisioning volume for claim "storage/efs-claim"
I0713 05:53:59.385168       1 controller.go:838] successfully created PV pvc-2a7e818f-c513-4b79-a47e-5b9c1a7d26a9 for PVC efs-claim and csi volume name fs-a13cb9c1::fsap-0b047e3528a6856ca
I0713 05:53:59.385219       1 controller.go:1439] provision "storage/efs-claim" class "efs-sc": volume "pvc-2a7e818f-c513-4b79-a47e-5b9c1a7d26a9" provisioned
I0713 05:53:59.385244       1 controller.go:1456] provision "storage/efs-claim" class "efs-sc": succeeded
I0713 05:53:59.393941       1 event.go:282] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"storage", Name:"efs-claim", UID:"2a7e818f-c513-4b79-a47e-5b9c1a7d26a9", APIVersion:"v1", ResourceVersion:"19555274", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-2a7e818f-c513-4b79-a47e-5b9c1a7d26a9
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="ltag__user ltag__user__id__512906"&gt;
  
    .ltag__user__id__512906 .follow-action-button {
      background-color: #000000 !important;
      color: #62df88 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/vumdao" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bGwkUMWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ugeYdWM---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/512906/2472752c-cfd5-4e02-b3d8-55b790178884.png" alt="vumdao image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/vumdao"&gt;Vu Dao&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/vumdao"&gt;Awesome Devops || AWS SA || CloudOpz&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vumdao"&gt;
        vumdao
      &lt;/a&gt; / &lt;a href="https://github.com/vumdao/vumdao"&gt;
        vumdao
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>csi</category>
      <category>cloudopz</category>
      <category>efs</category>
    </item>
    <item>
      <title>How to create a fleet of AWS EC2s with Terraform?</title>
      <author>Augusto Valdivia</author>
      <pubDate>Sun, 18 Jul 2021 11:02:37 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-create-a-fleet-of-aws-ec2s-with-terraform-595l</link>
      <guid>https://dev.to/aws-builders/how-to-create-a-fleet-of-aws-ec2s-with-terraform-595l</guid>
      <description>&lt;p&gt;There were times when companies of any size were limited by the capabilities of their compu power but thanks to cloud computing not anymore. In this article we will learn about some of the advantages of using Amazon Web Services (AWS) and how to dynamically create virtual machines (EC2) that can help with these limitations in minutes. In this article I will also introduce Terraform and how it can be used to create EC2s-AMIs in a dynamic and productive way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;What are virtual machines-EC2?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Virtual machines or AWS EC2, also called instances, are different operating systems (OS), which can be rented from AWS. Some examples of Os that AWS offers are: Amazon Linux, Red Hat Enterprise, MacOs, Suse Linux, Ubuntu, Microsoft Windows.&lt;/p&gt;

&lt;p&gt;As you can see, the selection of OS is extensive which gives a great advantage to being able to choose EC2 based on OS, RAM, and CPU requirements. EC2 also offers Infrastructure as a Service (IaaS) which provides complete control of computing resources, which can be increased and decreased based on demand. One of the great benefits of using EC2 is the savings in administrative cost, planning and investment in extra-hardware that is not necessary, which turns companies large costs into much smaller one. I'll explain more details in a moment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost = Demand * Hour&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cost = 💰 💰 💰 💰 💰 💰 💰 💰&lt;br&gt;
Demand = 🖥 🖥 🖥 🖥 🖥 🖥 🖥 🖥&lt;br&gt;
x Time = ⏱ &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EC2 are classified into five types:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;General purpose&lt;/li&gt;
&lt;li&gt;Optimized computing&lt;/li&gt;
&lt;li&gt;Optimized memory&lt;/li&gt;
&lt;li&gt;Accelerated computing&lt;/li&gt;
&lt;li&gt;Optimized storages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Diagram 1: AWS EC2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aBvOieGO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iio0lp8kqnupbhwozr2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aBvOieGO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iio0lp8kqnupbhwozr2o.png" alt="ec2s"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Considering that we can create or configure any number of AWS-EC2 through the console over and over again this takes time which is a problem. Building infrastructure using code (IaC) alleviates this problem. I present to you one of my favorite tools - Terraform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;What is Terraform?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Terraform is a powerful declarative tool that helps us manage the vast majority of cloud services, as well as providing consistency and visibility into infrastructure changes that occur across different workspaces and environments. This functionality is an important piece of project lifecycle quality improvement, and it also keeps software engineers and others on the same team informed.&lt;/p&gt;

&lt;p&gt;When using Terraform, we do not need to log in to the AWS management console. This reduces service creation time. It also allows you to detect potential security risks and errors early in the project.&lt;/p&gt;

&lt;p&gt;With Terraform we can work directly from the terminal of our computer using a couple of command lines.&lt;/p&gt;

&lt;p&gt;In this project you will find a repo that stores a list of Terraform files which you can use to configure and create one or more EC2s-AMIs in a matter of minutes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Terraform: Files-preview&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrfQwSo6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3h23qq453ujivhdh0b7g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrfQwSo6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3h23qq453ujivhdh0b7g.png" alt="code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now is the time to get down to work on the construction of this infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ValAug/aws-compu-terraform"&gt;Find the repo for this project and instructions here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Terraform functions, arguments, and expressions used in this project:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.terraform.io/docs/language/providers/index.html"&gt;providers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/values/index.html"&gt;variables&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/modules/index.html"&gt;modules&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/resources/index.html"&gt;resources&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/expressions/types.html"&gt;types and values&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/meta-arguments/for_each.html"&gt;for_each&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enjoy 👩‍💻 and Keep building👷‍♀️!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>project</category>
      <category>terraform</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Beginner JavaScript - 14 - Creating and Inserting Elements to the DOM</title>
      <author>The Nerdy Dev</author>
      <pubDate>Sun, 18 Jul 2021 11:01:06 +0000</pubDate>
      <link>https://dev.to/thenerdydev/beginner-javascript-14-creating-and-inserting-elements-to-the-dom-hmm</link>
      <guid>https://dev.to/thenerdydev/beginner-javascript-14-creating-and-inserting-elements-to-the-dom-hmm</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻,&lt;/p&gt;

&lt;p&gt;In this article, let us discuss about &lt;strong&gt;Creating, Inserting and Removing Elements from the DOM&lt;/strong&gt; in JavaScript. This is the fourteenth part of my &lt;strong&gt;Beginner JavaScript Series&lt;/strong&gt; on Dev. &lt;/p&gt;

&lt;p&gt;Let us first discuss about creating and inserting elements in DOM before we move our attention to removing elements.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-and-inserting-elements-in-dom"&gt;
  &lt;/a&gt;
  Creating and Inserting Elements in DOM
&lt;/h2&gt;

&lt;p&gt;For creating and inserting elements in DOM, I would live to cover basically two ways : &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-html-strings-innerhtml-insertadjacenthtml"&gt;
  &lt;/a&gt;
  1. HTML Strings - innerHTML, insertAdjacentHTML
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-documentcreateelement-appendchild-append"&gt;
  &lt;/a&gt;
  2. document.createElement - appendChild, append
&lt;/h3&gt;

&lt;p&gt;Let us first talk about HTML Strings : &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-strings"&gt;
  &lt;/a&gt;
  HTML Strings
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#innerhtml"&gt;
  &lt;/a&gt;
  innerHTML
&lt;/h3&gt;

&lt;p&gt;The innerHTML property sets or returns the HTML content (inner HTML) of an element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let us assume we want to add some html markup inside some element with the id of x12&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;markup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;div&amp;gt;
  &amp;lt;h1&amp;gt;This is some dummy markup &amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;x12&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;markup&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#insertadjacenthtml"&gt;
  &lt;/a&gt;
  insertAdjacentHTML
&lt;/h3&gt;

&lt;p&gt;The insertAdjacentHTML() method parses (goes over) the given HTML code and inserts the specified nodes that we create into the DOM tree at a specified position. The benefit of using &lt;strong&gt;insertAdjacentHTML&lt;/strong&gt; is that it does not reparse the element it is being used on, so it saves the cost of re-initiating this step and thus it avoids the extra step of serialization, making it much faster than direct &lt;strong&gt;innerHTML&lt;/strong&gt; manipulation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SYNTAX&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let us assume we want to add some html markup inside some element with the id of x12&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;markup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;div&amp;gt;
  &amp;lt;h1&amp;gt;This is some dummy markup &amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;x12&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;markup&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#documentcreateelement-appendchild-and-append-methods"&gt;
  &lt;/a&gt;
  document.createElement - appendChild and append methods
&lt;/h3&gt;

&lt;p&gt;The document.createElement() method is used to create a new HTML element and attach it to a DOM tree.&lt;/p&gt;

&lt;p&gt;Let us see the syntax for creating an element using the &lt;strong&gt;document.createElement&lt;/strong&gt; method. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-to-create-an-element-of-a-particular-type-"&gt;
  &lt;/a&gt;
  SYNTAX TO CREATE AN ELEMENT OF A PARTICULAR TYPE :
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elementType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let us see the examples for &lt;strong&gt;appendChild&lt;/strong&gt; and &lt;strong&gt;append&lt;/strong&gt; methods. &lt;/p&gt;

&lt;p&gt;Let us say our starter HTML is this :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;append and appendChild methods&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let us create a &lt;strong&gt;div&lt;/strong&gt; element using the &lt;strong&gt;document.createElement&lt;/strong&gt; method and then make use of the &lt;strong&gt;appendChild&lt;/strong&gt; method to add the newly created div to the body of the HTML.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p&amp;gt;This is a div element&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Append the div as a child element to the body element. &lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So this is it for this article. Let us learn about how we can remove elements from the DOM in the next article.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Jun 10 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;👉🏻 Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;👉🏻 Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Deploy Kafka + Filebeat + ELK - Docker Edition - Part 1 </title>
      <author>Kshitij (kd)</author>
      <pubDate>Sun, 18 Jul 2021 10:52:07 +0000</pubDate>
      <link>https://dev.to/dhingrachief/deploy-kafka-filebeat-elk-docker-edition-part-1-3m77</link>
      <guid>https://dev.to/dhingrachief/deploy-kafka-filebeat-elk-docker-edition-part-1-3m77</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This article is the first part of a two part series where we will deploy ELK stack using docker/docker-compose.&lt;br&gt;
In this article, we will be configuring Filebeat and Kafka.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-Requisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You need to have docker/docker-compose installed. &lt;a href="https://github.com/kdsama/ELK/blob/main/docker_install_ubuntu18.sh"&gt;Click Here&lt;/a&gt; for the bash file that will help you install it on Ubuntu 18.04 LTS.&lt;/li&gt;
&lt;li&gt;An Idea about ELK.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;So lets say, you have several servers in place for which you need to aggregate application logs. Some servers might be in the same &lt;a href="https://www.checkpoint.com/cyber-hub/cloud-security/what-is-vpc-virtual-private-cloud/"&gt;VPC&lt;/a&gt;&lt;br&gt;
and some might even belong to a different cloud provider. &lt;br&gt;
For this particular example, lets say we have three servers and Kafka server (to be installed) in the same VPC and the fourth application server outside it. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEKw3QV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/219804bwlvjlscg8nok2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEKw3QV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/219804bwlvjlscg8nok2.png" alt="6 server. One server is outside the Virtual Private Cloud. 4 servers are application servers. One is Kafka server and one is ELK server. All the arrow of application servers point towards Kafka server, which in turn point towards ELK server"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#filebeat"&gt;
  &lt;/a&gt;
  Filebeat
&lt;/h2&gt;

&lt;p&gt;Filebeat is used for forwarding the log data from your application server. The same can be done by logstash.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why-filebeat"&gt;
  &lt;/a&gt;
  Why Filebeat?
&lt;/h3&gt;

&lt;p&gt;Filebeat is pretty lightweight. It would need lesser resources than a logstash instance. But that raises another question.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why-filebeat-and-logstash-"&gt;
  &lt;/a&gt;
  Why Filebeat and Logstash ?
&lt;/h3&gt;

&lt;p&gt;Logstash would still be required as logstash aggregates logging data from different sources and pass it over to elasticsearch for indexing. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installing-filebeat"&gt;
  &lt;/a&gt;
  Installing Filebeat
&lt;/h3&gt;

&lt;p&gt;So there are two components present for the installation of filebeat. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;filebeat.yml&lt;/li&gt;
&lt;li&gt;docker-compose.yml&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#filebeat-dockercompose"&gt;
  &lt;/a&gt;
  Filebeat - docker-compose
&lt;/h4&gt;

&lt;p&gt;This is what the docker-compose file looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: "3"
services:
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.6.0
    container_name: filebeat
    user: root
    environment:
        - strict.perms=false
    volumes:
        - './filebeat.yml:/usr/share/filebeat/filebeat.yml:ro'
        - './data:/usr/share/filebeat/data:rw'
        - '/var/log/nginx:/usr/share/services/nginx'
        - '/home/ubuntu/.pm2/logs:/usr/share/services/node'
    command: filebeat -e
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"                                                                                                                                                                                                                                        

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have added a log-rotator as filebeat itself generates several logs. &lt;br&gt;
Here we have mounted 4 directories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;filebeat.yml which holds the configuration &lt;/li&gt;
&lt;li&gt;data folder to persist the information filebeat saves.&lt;/li&gt;
&lt;li&gt;2 directories where logs are being generated by the applications.You can change it according to your own application.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#filebeatyml"&gt;
  &lt;/a&gt;
  filebeat.yml
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;filebeat.prospectors:
- type: log
  enabled: true
  tags:
    - app_1_nginx
  paths:
    - /usr/share/services/nginx/*.log

- type: log
  enabled: true
  tags:
    - app_1_pm2
  paths:
    - /usr/share/services/node/*.log

output.kafka:
  version: 0.10.2.1
  hosts: ["KAFKA_IP:KAFKA_PORT"]
  topic: 'applogs'
  partition.round_robin:
    reachable_only: false
  required_acks: 1
  compression: gzip
  max_message_bytes: 1000000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here we have mentioned a list of inputs, where each input begins with &lt;code&gt;-&lt;/code&gt;.&lt;br&gt;
Tags are added so that we are able to identify the source of the log.&lt;br&gt;
The paths shared in the filebeat.yml are the paths where our actual logs are mounted in the docker-compose.yml file.&lt;br&gt;
We have configured the output to be forwarded to kafka. The data will be published on the topic &lt;code&gt;applogs&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;required_acks&lt;/code&gt; here is set to 1. It is recommended not to set it to &lt;a href="https://www.elastic.co/guide/en/beats/filebeat/current/kafka-output.html#_required_acks"&gt;0&lt;/a&gt;&lt;br&gt;
Depending on whether the server is in the same VPC or not,We will put the ip and port information.&lt;br&gt;
When in the same VPC as the kafka server, this is how the output block will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;output.kafka:
  version: 0.10.2.1
  hosts: ["KAFKA_PRIVATE_IP:9092"]
  topic: 'applogs'
  partition.round_robin:
    reachable_only: false
  required_acks: 1
  compression: gzip
  max_message_bytes: 1000000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace KAFKA_PRIVATE_IP by the actual private ip of your kafka server.&lt;br&gt;
For the public connectivity, this is how the output block will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;output.kafka:
  version: 0.10.2.1
  hosts: ["KAFKA_PUBLIC_IP:19092"]
  topic: 'applogs'
  partition.round_robin:
    reachable_only: false
  required_acks: 1
  compression: gzip
  max_message_bytes: 1000000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace KAFKA_PUBLIC_IP by the actual public ip of your kafka server.&lt;/p&gt;

&lt;p&gt;Make sure the owner of the file (aka filebeat.yml) must be either &lt;code&gt;root&lt;/code&gt; or the user who is executing the Beat process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; prospectors has now been replaced by inputs in recent versions.&lt;/p&gt;

&lt;p&gt;Now lets run the application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker-compose up -d 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And Voila! filebeat has been setup.&lt;/p&gt;

&lt;p&gt;If you check filebeat logs, You will see that it is filled with connection-error messages as Kafka has not been setup yet.&lt;br&gt;
Now lets setup Kafka.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#kafka"&gt;
  &lt;/a&gt;
  Kafka
&lt;/h2&gt;

&lt;p&gt;Kafka is an open source software for storing,reading and analysing stream of data.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why-kafka"&gt;
  &lt;/a&gt;
  Why Kafka
&lt;/h3&gt;

&lt;p&gt;ELK would be sufficient if there aren't enough logs to process.&lt;br&gt;
You can direct your filebeat logs towards logstash. Kafka comes in to play when we are logging at scale. It acts as a buffer. Kafka will receive the logs from filebeat and queue it up in case ELK is under heavy load.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installing-kafka"&gt;
  &lt;/a&gt;
  Installing Kafka
&lt;/h3&gt;

&lt;p&gt;I am using &lt;a href="https://github.com/bitnami/bitnami-docker-kafka"&gt;Bitnami's Docker Image for Kafka&lt;/a&gt;.&lt;br&gt;
It is well documented and frequently updated. We will be doing a straight forward setup and add a firewall allowing only the private/public ips that belongs to our application servers.&lt;/p&gt;

&lt;p&gt;If you are using &lt;code&gt;ubuntu&lt;/code&gt;,This is how you add firewall rules for our particular case.&lt;/p&gt;

&lt;p&gt;If your firewall is disabled:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo ufw allow ssh 
sudo ufw enable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo ufw allow from PRIVATE_IP1 to any port 9092
sudo ufw allow from PRIVATE_IP2 to any port 9092
sudo ufw allow from PRIVATE_IP3 to any port 9092
sudo ufw allow from PUBLIC_IP1 to any port 19092
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;PRIVATE_IP1&lt;/strong&gt; through 3 are &lt;strong&gt;&lt;em&gt;the private ips of the servers that are present in the same vpc as our kafka server&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kafka-dockercompose"&gt;
  &lt;/a&gt;
  Kafka docker-compose
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: "2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    network_mode: host

  kafka:
    image: docker.io/bitnami/kafka:latest
    container_name: kafka
    ports:
      - "19093:19093"
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=PRIVATE_IP_OF_KAFKA_SERVER:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:19093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://PRIVATE_IP_OF_KAFKA_SERVER:9092,EXTERNAL://PUBLIC_IP_OF_KAFKA_SERVER:19093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    network_mode: host
    depends_on:
      - zookeeper
networks:
  app-tier:
    driver: bridge
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kafka uses zookeeper to store its metadata(topics, location of partitions, etc) and hence it is needed to be present alongside kafka.&lt;br&gt;
We have aligned two listners, &lt;strong&gt;INTERNAL&lt;/strong&gt; and &lt;strong&gt;EXTERNAL&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;INTERNAL Listner is for communication within the VPC. EXTERNAL Listner is for the application that is to be connected via the public ip of the kafka server.&lt;br&gt;
I am using host network in this case.&lt;/p&gt;

&lt;p&gt;To run the docker-compose file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker-compose up -d 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next step will be to create the topic &lt;strong&gt;applogs&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker exec -it kafka /opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic applogs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To confirm if the topic has been created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker exec -it kafka /opt/bitnami/kafka/bin/kafka-topics.sh --list --zookeeper zookeeper:2181 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that the topic has been created, We need to verify the communication by pushing data on one topic and receiving it on the other end. &lt;/p&gt;

&lt;p&gt;To subscribe a topic and listen for messages:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker exec -it kafka /opt/bitnami/kafka/bin/kafka-console-consumer.sh --bootstrap-server PRIVATE_KAFKA_IP:9092 --topic applogs --from-beginning
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have configured your filebeat.yml file correctly, You will start getting logs from your application server.&lt;/p&gt;

&lt;p&gt;To push data to a topic:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker exec -it kafka /opt/bitnami/kafka/bin/kafka-console-producer.sh --broker-list PRIVATE_KAFKA_IP:9092 --topic applogs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can install &lt;a href="https://www.howtoinstall.me/ubuntu/18-04/kafkacat/"&gt;kafkacat&lt;/a&gt; on your application server to verify the connections.&lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://dev.to/dhingrachief/deploy-kafka-filebeat-elk-docker-edition-part-2-hpj"&gt;next article&lt;/a&gt;, we will connect ELK with Kafka.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>kafka</category>
      <category>elk</category>
      <category>devops</category>
    </item>
    <item>
      <title>Email Validation in JavaScript
</title>
      <author>adminlokesh</author>
      <pubDate>Sun, 18 Jul 2021 10:29:59 +0000</pubDate>
      <link>https://dev.to/adminlokesh/email-validation-in-javascript-410i</link>
      <guid>https://dev.to/adminlokesh/email-validation-in-javascript-410i</guid>
      <description>&lt;p&gt;Now we are going to explain all about email validation with the using of JavaScript also displaying few example see in the below section. &lt;br&gt;
Here we are provide a code of function. which is the best example for validation.&lt;/p&gt;

&lt;p&gt;function email_funnction() {&lt;br&gt;
            var email = document.emailform.email.value;&lt;br&gt;
            if(email.indexOf('@')&amp;lt;=0){&lt;br&gt;
                document.getElementById('errormsg').innerHTML="Invalid your Email Address";&lt;br&gt;
                return false;&lt;br&gt;
            }&lt;br&gt;&lt;br&gt;
            if ((email.charAt(email.length-4)!='.') &amp;amp;&amp;amp; (email.charAt(email.length-3)!='.')) {&lt;br&gt;
                document.getElementById('errormsg').innerHTML="Invalid your Email Address";&lt;br&gt;
                return false;&lt;br&gt;
            }&lt;br&gt;
        }&lt;br&gt;
This is the function you can check and apply any form for email validation. So if you want more information and example with the html of &lt;a href="https://wlearnsmart.com/email-validation-in-javascript/"&gt;Email Validation in JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 10 Useful GitHub Repos for Self-Development</title>
      <author>Neha Soni</author>
      <pubDate>Sun, 18 Jul 2021 09:26:01 +0000</pubDate>
      <link>https://dev.to/nehasoni__/top-10-useful-github-repos-for-self-development-25c0</link>
      <guid>https://dev.to/nehasoni__/top-10-useful-github-repos-for-self-development-25c0</guid>
      <description>&lt;h3&gt;🌸𝑺𝒆𝒍𝒇 𝑳𝒆𝒂𝒓𝒏𝒊𝒏𝒈 𝒊𝒔 𝒕𝒉𝒆 𝒑𝒓𝒐𝒄𝒆𝒔𝒔 𝒐𝒇 𝒄𝒓𝒆𝒂𝒕𝒊𝒏𝒈 𝒀𝑶𝑼 𝒚𝒐𝒖𝒓𝒔𝒆𝒍𝒇🌸&lt;/h3&gt;

&lt;p&gt;The world of &lt;em&gt;self-learning&lt;/em&gt; can be a little daunting. The nature of learning in a curious manner results in serendipitous discoveries (information and people) and takes you down paths you may never have been exposed to.&lt;/p&gt;

&lt;p&gt;There are 190+ million repositories you’ll find on GitHub that make it the perfect place for any developer to become a better version of themselves. In this blog post, we will go through the ten most popular open-source repositories on GitHub that are useful to develop/improve skills.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-project-based-learning"&gt;
  &lt;/a&gt;
  1.) Project Based Learning
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iq_RAvQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626505290442/N3Zq1vk3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iq_RAvQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626505290442/N3Zq1vk3w.png" alt="Screenshot (367).png"&gt;&lt;/a&gt;&lt;br&gt;
If you have a habit of learning new things by working on some cool side project then this repo is for you. The tutorials in this repository are divided into different programming languages and it is really a great source for those who want to learn to build an application from scratch.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;tuvtran/project-based-learning&lt;br&gt; &lt;a href="https://github.com/tuvtran/project-based-learning"&gt;https://github.com/tuvtran/project-based-learning&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 52.6k&lt;br&gt;
⑂⑂⑂⑂⑂ — 8.2k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-awesome"&gt;
  &lt;/a&gt;
  2.) Awesome
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YqalTA1b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626579561751/2FuuU1SSF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YqalTA1b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626579561751/2FuuU1SSF.png" alt="Screenshot (371).png"&gt;&lt;/a&gt;&lt;br&gt;
The awesome repository contains a large amount of content to all different areas that have to do with software development and programming.  It is a one-stop shop if you really want to learn something new. From programming languages to big data, books, Business, Security this repo contains awesome content for all different fields. I personally recommend you to take a look at all the useful resources that get mentioned in this repository.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;sindresorhus/awesome&lt;br&gt; &lt;a href="https://github.com/sindresorhus/awesome"&gt;https://github.com/sindresorhus/awesome&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 166k&lt;br&gt;
⑂⑂⑂⑂⑂ — 21.2k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-free-programming-books"&gt;
  &lt;/a&gt;
  3.) Free Programming Books
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jhCb867A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626581537743/TZeevujLs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jhCb867A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626581537743/TZeevujLs.png" alt="Screenshot (374).png"&gt;&lt;/a&gt;&lt;br&gt;
This GitHub repository has a massive collection of free learning resources where you can learn a lot of technical stuff. Earlier the list was on StackOverflow, later it was moved to GitHub to make it better maintainable. This repository is written in 30+ different languages. This repo is administered by the Free Ebook Foundation which is a not-for-profit organization.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;EbookFoundation/free-programming-books&lt;br&gt; &lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;https://github.com/EbookFoundation/free-programming-books&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 197k&lt;br&gt;
⑂⑂⑂⑂⑂ — 43.3k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-developer-roadmap"&gt;
  &lt;/a&gt;
  4.) Developer Roadmap
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uITrxmIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626582510841/Snh1uFk-U.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uITrxmIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626582510841/Snh1uFk-U.png" alt="Screenshot (376).png"&gt;&lt;/a&gt;&lt;br&gt;
If you are looking for a career in software web development then this repository is for you.  It provides a strategy to learn these skills in a structured manner. This repository was created by &lt;strong&gt;Kamran Ahmed&lt;/strong&gt;. He has prepared a complete chart that will give you a clear understanding of what you should learn.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;kamranahmedse/developer-roadmap&lt;br&gt;&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;https://github.com/kamranahmedse/developer-roadmap&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 166k&lt;br&gt;
⑂⑂⑂⑂⑂ — 24k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-public-apis"&gt;
  &lt;/a&gt;
  5.) Public APIs
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qhOOxHXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626584124574/YYIS-ZAN3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhOOxHXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626584124574/YYIS-ZAN3.png" alt="Screenshot (379).png"&gt;&lt;/a&gt;&lt;br&gt;
If you are a developer then definitely you will have to deal with APIs for your application. This repository contains a collective list of free APIs for use in software and web development. It also contains information regarding authorization, HTTPS, and CORS.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;public-apis/public-apis&lt;br&gt;&lt;a href="https://github.com/public-apis/public-apis"&gt;https://github.com/public-apis/public-apis&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 139k&lt;br&gt;
⑂⑂⑂⑂⑂ — 16.5k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-coding-interview-university"&gt;
  &lt;/a&gt;
  6.) Coding Interview University
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7AMIDe---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626585789715/L85dLowrP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7AMIDe---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626585789715/L85dLowrP.png" alt="Screenshot (382).png"&gt;&lt;/a&gt;&lt;br&gt;
Preparing for an interview takes a lot more than Googling a list of common interview questions. So, if you are looking for resources and complete guidelines for interview preparation then this repository is for you. You will find a lot of links and resources from this repository to clear your computer science concepts along with the details.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;jwasham/coding-interview-university&lt;br&gt;&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;https://github.com/jwasham/coding-interview-university&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 184k&lt;br&gt;
⑂⑂⑂⑂⑂ — 50.2k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-javascript-testing-best-practices"&gt;
  &lt;/a&gt;
  7.)  JavaScript Testing Best Practices
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w5PBhz0e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626586248959/Jmi5SEC2s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w5PBhz0e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626586248959/Jmi5SEC2s.png" alt="Screenshot (383).png"&gt;&lt;/a&gt;&lt;br&gt;
This repository summarizes and curates for you dozens of the best blog posts, books, and tools the market has to offer. It can take your testing skills to the next level. If you are a JavaScript developer, I highly recommend you to check out this repo and the best part about it is that some of the best practices come with a code example to clarify things even more.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;goldbergyoni/javascript-testing-best-practices&lt;br&gt;&lt;a href="https://github.com/goldbergyoni/javascript-testing-best-practices"&gt;https://github.com/goldbergyoni/javascript-testing-best-practices&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 12.5k&lt;br&gt;
⑂⑂⑂⑂⑂ — 1k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-awesome-python"&gt;
  &lt;/a&gt;
  8.) Awesome Python
&lt;/h2&gt;

&lt;p&gt;This is a repository for python lovers. It has a curated list of awesome Python frameworks, libraries, software, and resources. If you want to become a good python programmer then you should bookmark this site.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;vinta/awesome-python&lt;br&gt;&lt;a href="https://github.com/vinta/awesome-python"&gt;https://github.com/vinta/awesome-python&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 101k&lt;br&gt;
⑂⑂⑂⑂⑂ — 19.5k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-tensorflow"&gt;
  &lt;/a&gt;
  9.) TensorFlow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuFO3E3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626588825071/LQixxXWiv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuFO3E3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626588825071/LQixxXWiv.png" alt="Screenshot (388).png"&gt;&lt;/a&gt;&lt;br&gt;
TensorFlow is one of the most popular open-source machine learning framework. It was developed by the engineers and researchers working on the &lt;strong&gt;Google Brain team&lt;/strong&gt;. It provides stable &lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;C++ APIs&lt;/strong&gt;, as well as non-guaranteed backward compatible API for other languages. From the installation of Tensorflow to deploy ML models as part of their application this repo contains all the content.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;tensorflow/tensorflow&lt;br&gt;&lt;a href="https://github.com/tensorflow/tensorflow"&gt;https://github.com/tensorflow/tensorflow&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 157k&lt;br&gt;
⑂⑂⑂⑂⑂ — 85.1k&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-freecodecamp"&gt;
  &lt;/a&gt;
  10.) FreeCodeCamp
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wIP4LFlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626589831948/ocS3XhyBm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wIP4LFlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626589831948/ocS3XhyBm.png" alt="Screenshot (390).png"&gt;&lt;/a&gt;&lt;br&gt;
I hope you must have heard about &lt;strong&gt;FreeCodeCamp&lt;/strong&gt;. It is one of the biggest repositories on GitHub and is very user-friendly. It offers newcomers the means to learn how to code effectively, for free. They have a huge community with a great forum to help each other and improve coding skills. Bookmark this repo if you want to learn &amp;amp; build something new and collaborate with millions of people.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository Name &amp;amp; Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;h3&gt;freeCodeCamp/freeCodeCamp&lt;br&gt;&lt;a href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;https://github.com/freeCodeCamp/freeCodeCamp&lt;/a&gt;
&lt;/h3&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;⭐️⭐️⭐️⭐️⭐️ — 326k&lt;br&gt;
⑂⑂⑂⑂⑂ — 26.1k&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That's all for this blog post. If you enjoyed learning and find it useful please do like and share so that, it reaches others as well 🤝&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading 😃
&lt;/h3&gt;

&lt;p&gt;I would ❤ to connect with you at  &lt;a href="https://twitter.com/nehasoni__"&gt;Twitter&lt;/a&gt;  |  &lt;a href="https://www.linkedin.com/in/neha-soni-70a6231b1/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/nehasoni05"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should definitely check out my other Blogs:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/how-to-setup-billing-alarm-in-aws-4144"&gt;How to SetUp Billing Alarm in AWS&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/amazon-web-services-an-overview-2okc"&gt;Amazon Web Services- An Overview&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/cloud-computing-an-overview-4ib3"&gt;Cloud Computing- An Overview&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/plasma-donation-website-using-mern-stack-26f5"&gt;Plasma Donation Website&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/random-quote-generator-using-html-css-and-javascript-3gbp"&gt;Random Quote Generator Using HTML, CSS, and JavaScript&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/digital-clock-using-javascript-2648"&gt;Digital Clock using JavaScript&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/introduction-to-javascript-basics-g6n"&gt;Introduction to JavaScript: Basics&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/playing-with-javascript-objects-k4h"&gt;Playing with JavaScript Objects&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nehasoni__/7-javascript-data-structures-you-must-know-57ah"&gt;7 JavaScript Data Structures you must know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/digital-clock-using-javascript-2648"&gt;Digital Clock using JavaScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/introduction-to-reactjs-3553"&gt;Introduction to ReactJS
&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Happy Learning😃😃&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
