<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Bash cheat sheet: Top 28 commands for you to learn ü§∫</title>
      <author>Ankit Anand ‚ú®</author>
      <pubDate>Wed, 23 Jun 2021 14:30:15 +0000</pubDate>
      <link>https://dev.to/ankit01oss/bash-cheat-sheet-top-28-commands-for-you-to-learn-15ee</link>
      <guid>https://dev.to/ankit01oss/bash-cheat-sheet-top-28-commands-for-you-to-learn-15ee</guid>
      <description>&lt;p&gt;Hi there,&lt;/p&gt;

&lt;p&gt;Today I want to bring you a summary of top Bash commands. Bash is a very popular shell program. It stands for 'Bourne Again Shell'. There are also other types of shells, but Bash is the most widely available and used shell.&lt;/p&gt;

&lt;p&gt;Anything inside [ ] means that it's optional.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-raw-ls-endraw-list-directory-contents"&gt;
  &lt;/a&gt;
  1. &lt;code&gt;ls&lt;/code&gt; - List directory contents
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; is one of the most common commands. It is used to list the contents of a directory.&lt;/p&gt;

&lt;p&gt;Syntax: ls [options][files]&lt;br&gt;
Common options: -a, -l&lt;br&gt;&lt;br&gt;
&lt;code&gt;ls -a&lt;/code&gt; shows hidden(dot) files&lt;br&gt;
&lt;code&gt;ls -l&lt;/code&gt; shows file details&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-raw-echo-endraw-prints-text-to-the-terminal-window"&gt;
  &lt;/a&gt;
  2. &lt;code&gt;echo&lt;/code&gt; - Prints text to the terminal window
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;echo&lt;/code&gt; prints text to the terminal window. It is used widely for printing status texts and values of environment variables.&lt;br&gt;
Syntax: echo [option(s)] [string(s)]&lt;br&gt;
Common options: -e, -n&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash-3.2$ echo "hello"
hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#3-raw-touch-endraw-creates-a-file"&gt;
  &lt;/a&gt;
  3. &lt;code&gt;touch&lt;/code&gt; - Creates a file
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;touch&lt;/code&gt; can be used to create an empty file quickly. It can also be used to modify file timestamps.&lt;br&gt;
Syntax: touch [option(s)] file_name(s)&lt;br&gt;
Common options: -a, -m, -r, -d&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash-3.2$ touch a b
bash-3.2$ ls
a     b
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#4-raw-mkdir-endraw-create-a-directory"&gt;
  &lt;/a&gt;
  4. &lt;code&gt;mkdir&lt;/code&gt; - Create a directory
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;mkdir&lt;/code&gt; is used to create new directories. You can create multiple directories simultaneously.&lt;br&gt;
Syntax: mkdir [option(s)] directory_name(s)&lt;br&gt;
Common options: -m, -p, -v&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash-3.2$ ls
a     b
bash-3.2$ mkdir c
bash-3.2$ ls
a     b    c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#5-raw-grep-endraw-search-for-particular-pattern"&gt;
  &lt;/a&gt;
  5. &lt;code&gt;grep&lt;/code&gt; - Search for particular pattern
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; is used for finding text in files. It comes in handy when you're tasked to find a particular string or pattern within a file.&lt;br&gt;
Syntax: &lt;code&gt;grep&lt;/code&gt; [option(s)] pattern [file(s)]&lt;br&gt;
Common options&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;-i&lt;/code&gt; performs a case-insensitive search&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-n&lt;/code&gt; displays the lines containing the pattern along with the line numbers&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-c&lt;/code&gt; displays the count of the matching patterns.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#6-raw-man-endraw-print-manual-or-get-help-for-a-command"&gt;
  &lt;/a&gt;
  6. &lt;code&gt;man&lt;/code&gt; - Print manual or get help for a command
&lt;/h3&gt;

&lt;p&gt;Use the &lt;code&gt;man&lt;/code&gt; command to bring up a manual for any command. For example, if you don't know what &lt;code&gt;mkdir&lt;/code&gt; does, then use the &lt;code&gt;man&lt;/code&gt; command to see its manual.&lt;br&gt;
Syntax: man [option(s)] keyword(s)&lt;br&gt;
Common options: -w, -f, -b&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash-3.2$ man mkdir
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#7-raw-pwd-endraw-print-working-directory"&gt;
  &lt;/a&gt;
  7. &lt;code&gt;pwd&lt;/code&gt; - Print working directory
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt; command prints the working directory you are currently in.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#8-raw-cd-endraw-change-directory"&gt;
  &lt;/a&gt;
  8. &lt;code&gt;cd&lt;/code&gt; - Change directory
&lt;/h3&gt;

&lt;p&gt;You can change to a different directory with &lt;code&gt;cd&lt;/code&gt; command. Use &lt;code&gt;cd ..&lt;/code&gt; to go to the parent directory.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#9-raw-mv-endraw-move-or-rename-directory"&gt;
  &lt;/a&gt;
  9. &lt;code&gt;mv&lt;/code&gt; - Move or rename directory
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;mv&lt;/code&gt; is used to move or rename directories. Without this command, you would have to individually rename each file which is tedious.&lt;br&gt;
Syntax: mv [option(s)] argument(s)&lt;br&gt;
Common options: -i, -b&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#10-raw-rmdir-endraw-remove-directory"&gt;
  &lt;/a&gt;
  10. &lt;code&gt;rmdir&lt;/code&gt; - Remove directory
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;rmdir&lt;/code&gt; will remove empty directories. This can help clean up space on your computer and keep files and folders organized. There are two ways to remove directories: rm and rmdir. &lt;code&gt;rm&lt;/code&gt; will remove directories and files even if it's not empty whereas &lt;code&gt;rmdir&lt;/code&gt; will only delete empty directories.&lt;br&gt;
Syntax: rmdir [option(s)] directory_names&lt;br&gt;
Common options: -p&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#11-raw-locate-endraw-locate-a-specific-file-or-directory"&gt;
  &lt;/a&gt;
  11. &lt;code&gt;locate&lt;/code&gt; - Locate a specific file or directory
&lt;/h3&gt;

&lt;p&gt;It is the simplest way to find a file or directory. It searches a cached list of files to find the location of a specified file.&lt;br&gt;
Syntax: locate [option(s)] file_name(s)&lt;br&gt;
Common options: -q, -n, -i&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#12-raw-less-endraw-view-the-contents-of-a-text-file"&gt;
  &lt;/a&gt;
  12. &lt;code&gt;less&lt;/code&gt; - view the contents of a text file
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;less&lt;/code&gt; command allows you to view files without opening an editor. It‚Äôs faster to use, and there‚Äôs no chance of you inadvertently modifying the file.&lt;br&gt;
Syntax: less file_name&lt;br&gt;
Common options: -e, -f, -n&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#13-raw-compgen-endraw-shows-all-available-commands-aliases-and-functions"&gt;
  &lt;/a&gt;
  13. &lt;code&gt;compgen&lt;/code&gt; - Shows all available commands, aliases, and functions
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;compgen&lt;/code&gt; is a bash built-in command which is used to list all the commands that could be executed in the Linux system.&lt;br&gt;
Syntax: compgen [option(s)]&lt;br&gt;
Common options: -a, -c, -d&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#14-raw-gt-endraw-redirect-stdout"&gt;
  &lt;/a&gt;
  14. &lt;code&gt;&amp;gt;&lt;/code&gt; - Redirect stdout
&lt;/h3&gt;

&lt;p&gt;This takes the output from the preceding command that you‚Äôd normally see in the terminal and sends it to a file that you give it. As an example, take echo ‚Äútest‚Äù &amp;gt; dev1. Here it creates a file called dev1 and puts the echoed string into it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#15-raw-head-endraw-read-the-start-of-a-file"&gt;
  &lt;/a&gt;
  15. &lt;code&gt;head&lt;/code&gt; - Read the start of a file
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;head&lt;/code&gt; command allows you to read the first few lines of a file. The default number is 10.&lt;br&gt;
Syntax: head [option(s)] file(s)&lt;br&gt;
Common options: -n, can be used to specify the number of lines to show&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#16-raw-tail-endraw-read-the-end-of-a-file"&gt;
  &lt;/a&gt;
  16. &lt;code&gt;tail&lt;/code&gt; - Read the end of a file
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;tail&lt;/code&gt; outputs the last few lines of a file. And, just like the &lt;code&gt;head&lt;/code&gt; command, the default is 10. &lt;br&gt;
Syntax: tail [option(s)] file_names&lt;br&gt;
Common options: -n&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#17-raw-cat-endraw-read-a-file-create-a-file-and-concatenate-files"&gt;
  &lt;/a&gt;
  17. &lt;code&gt;cat&lt;/code&gt; - Read a file, create a file, and concatenate files
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;cat&lt;/code&gt;, short for concatenate, is one of the most commonly used commands. It allows you to create single or multiple files, view file inclusions, concatenate files and redirect output in a terminal or file.&lt;br&gt;
Syntax: cat [option(s)] [file_name(s)] [-] [file_name(s)]&lt;br&gt;
Common options: -n&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#18-raw-endraw-pipe"&gt;
  &lt;/a&gt;
  18. &lt;code&gt;|&lt;/code&gt; - Pipe
&lt;/h3&gt;

&lt;p&gt;A pipe takes the standard output of one command and passes it as the input to another.&lt;br&gt;
Syntax: &lt;code&gt;|&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#19-raw-chmod-endraw-sets-the-file-permissions-flag-on-a-file-or-folder"&gt;
  &lt;/a&gt;
  19. &lt;code&gt;chmod&lt;/code&gt; - Sets the file permissions flag on a file or folder
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;chmod&lt;/code&gt; command is used to change the access mode of a file. The name is an abbreviation of change mode. &lt;br&gt;
Syntax: chmod [reference][operator][mode] file... &lt;br&gt;
Common options: -f, -v&lt;br&gt;
References are used to distinguish the users to whom the permissions apply. Operator is used to specify how the modes of a file should be adjusted. The modes indicate which permissions are to be granted or removed from the specified classes.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#20-raw-exit-endraw-exit-out-of-a-directory"&gt;
  &lt;/a&gt;
  20. &lt;code&gt;exit&lt;/code&gt; - Exit out of a directory
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;exit&lt;/code&gt; command is used to exit any kind of shell.&lt;br&gt;
Syntax: &lt;code&gt;exit&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#21-raw-history-endraw-list-your-most-recent-commands"&gt;
  &lt;/a&gt;
  21. &lt;code&gt;history&lt;/code&gt; - List your most recent commands
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;history&lt;/code&gt; command prints out your recent commands, one command per line. It also prints the history number for each command. Each command is associated with a number for easy reference. You can truncate the output by specifying a number after the command.&lt;br&gt;
Syntax: &lt;code&gt;history&lt;/code&gt;&lt;br&gt;
Common options: -c, -d&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#22-raw-clear-endraw-clear-your-terminal-window"&gt;
  &lt;/a&gt;
  22. &lt;code&gt;clear&lt;/code&gt; - Clear your terminal window
&lt;/h3&gt;

&lt;p&gt;This command is used to clear all previous commands and output from consoles and terminal windows. This keeps your terminal clean and removes the clutter so you can focus on subsequent commands and their output.&lt;br&gt;
Syntax: &lt;code&gt;clear&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#23-raw-cp-endraw-copy-files-and-directories"&gt;
  &lt;/a&gt;
  23. &lt;code&gt;cp&lt;/code&gt; - Copy files and directories
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;cp&lt;/code&gt; stands for copy. This command is used to copy files or groups of files or directory. &lt;br&gt;
Syntax: cp [option(s)] current_name new_name&lt;br&gt;
Common options: -r, -i, -b&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#24-raw-kill-endraw-terminate-stalled-processes"&gt;
  &lt;/a&gt;
  24. &lt;code&gt;kill&lt;/code&gt; - Terminate stalled processes
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;kill&lt;/code&gt; command allows you to terminate a process from the command line. You do this by providing the process ID (PID) of the process to kill. You can use the &lt;code&gt;ps&lt;/code&gt; command to find the PID. &lt;code&gt;kill&lt;/code&gt; is a built-in command of the bash shell.&lt;br&gt;
Syntax: kill [option(s)] PID(s)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#25-raw-sleep-endraw-delay-a-process-for-a-specified-amount-of-time"&gt;
  &lt;/a&gt;
  25. &lt;code&gt;sleep&lt;/code&gt; - Delay a process for a specified amount of time.
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sleep&lt;/code&gt; command is used in shell scripts to take a pause before the execution of the next command. For example, it can be used inside a script to pause before retrying a failed operation or inside a loop.&lt;br&gt;
Syntax: sleep number [suffix]&lt;br&gt;
Suffix is used to specify the unit of time and can be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;s&lt;/code&gt; - seconds(default)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;m&lt;/code&gt; - minutes&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;h&lt;/code&gt; - hours&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;d&lt;/code&gt; - days&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#26-raw-passwd-endraw-change-account-password"&gt;
  &lt;/a&gt;
  26. &lt;code&gt;passwd&lt;/code&gt; - Change account password
&lt;/h3&gt;

&lt;p&gt;You can change your account password using &lt;code&gt;passwd&lt;/code&gt; command. It will ask for your old password and then ask to enter your new password twice.&lt;br&gt;
Syntax: &lt;code&gt;passwd&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#27-raw-df-endraw-check-disk-space"&gt;
  &lt;/a&gt;
  27. &lt;code&gt;df&lt;/code&gt; - Check Disk Space
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;df&lt;/code&gt; command is used to get a detailed report on the system‚Äôs disk space usage. When used without any argument, the df command will display information about all mounted file systems.&lt;br&gt;
Syntax: df [options]... filesystem...&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#28-raw-comm-endraw-compare-two-files"&gt;
  &lt;/a&gt;
  28. &lt;code&gt;comm&lt;/code&gt; - Compare two files
&lt;/h3&gt;

&lt;p&gt;You can use &lt;code&gt;comm&lt;/code&gt; command to compare two sorted files line by line. To compare two sorted files using 'comm', you have to pass their names as arguments.&lt;br&gt;
Syntax: comm [OPTION]... FILE1 FILE2&lt;/p&gt;



&lt;p&gt;I hope you enjoyed this summary and learned something new. I will be coming up with more such notes soon.&lt;/p&gt;

&lt;p&gt;Please give me a follow if you liked it. üôå&lt;/p&gt;



&lt;p&gt;Currently building &lt;a href="https://bit.ly/35G7QXU"&gt;SigNoz&lt;/a&gt; - an open-source APM &amp;amp; observability tool üíô&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. üî• üñ•
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;
&lt;p&gt;üëâ You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;
&lt;p&gt;üëâ You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
üëá Features:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Aggregate metrics on filtered traces. Eg, you can get error‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>devops</category>
      <category>linux</category>
      <category>bash</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Advogando √† favor da querid√≠ssima Fetch API</title>
      <author>Mariana Ramacciotti</author>
      <pubDate>Wed, 23 Jun 2021 13:45:16 +0000</pubDate>
      <link>https://dev.to/marianaramacciotti/advogando-a-favor-da-queridissima-fetch-api-ajf</link>
      <guid>https://dev.to/marianaramacciotti/advogando-a-favor-da-queridissima-fetch-api-ajf</guid>
      <description>&lt;h1&gt;
  &lt;a href="#eita-quanto-c%C3%B3digo"&gt;
  &lt;/a&gt;
  Eita, quanto c√≥digo!
&lt;/h1&gt;

&lt;p&gt;Ent√£o voc√™, assim como eu (novata nesse assunto) estava seguindo algum tutorial na internet explicando como fazemos &lt;strong&gt;requisi√ß√µes para o servidor&lt;/strong&gt;. Entretanto, contudo, todavia; o m√©todo utilizado pelo professor era com &lt;strong&gt;XMLHttpRequest&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Se voc√™ olhou para aquele c√≥digo enorme e pensou "puxa vida!", esse post √© para voc√™!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#voltando-um-pouquinho-como-requisi%C3%A7%C3%B5es-eram-feitas-antigamente"&gt;
  &lt;/a&gt;
  Voltando um pouquinho: Como requisi√ß√µes eram feitas antigamente?
&lt;/h2&gt;

&lt;p&gt;Antigamente o carregamento da p√°gina na web era simples: voc√™ enviaria uma solicita√ß√£o de um site a um servidor e, desde que nada desse errado, os ativos que formaram a p√°gina da web seriam baixados e exibidos em seu computador.&lt;/p&gt;

&lt;p&gt;O problema com este modelo √© que &lt;strong&gt;sempre que voc√™ deseja atualizar qualquer parte da p√°gina&lt;/strong&gt; (por exemplo, para exibir um novo conjunto de produtos) voc√™ precisa &lt;strong&gt;carregar a p√°gina inteira novamente&lt;/strong&gt;. Que experi√™ncia de usu√°rio esquisita, n√£o? &lt;/p&gt;

&lt;p&gt;Se voc√™ por acaso voc√™ j√° saiu de um site porque ficou irritado que o mesmo demorou 5 segundos pra carregar, provavelmente voc√™ n√£o curtiria se um site ficasse recarregando por completo para atualizar n√©? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ah-a-tecnologia"&gt;
  &lt;/a&gt;
  Ah, a tecnologia...
&lt;/h2&gt;

&lt;p&gt;Isso levou √† cria√ß√£o de tecnologias que &lt;strong&gt;permitem que p√°ginas da web solicitem pequenos blocos de dados&lt;/strong&gt; (como HTML , XML , JSON ou texto simples) e &lt;strong&gt;os exibam apenas quando necess√°rio&lt;/strong&gt;, ajudando a resolver o problema.&lt;/p&gt;

&lt;p&gt;Isso √© obtido usando APIs como (se prepara):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;XMLHttpRequestchatinhooutdatedningu√©mseimporta ou...&lt;/li&gt;
&lt;li&gt;A bel√≠ssima lind√≠ssima maravilhosa &lt;strong&gt;API Fetch&lt;/strong&gt; dona da minha vida. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essas tecnologias permitem que as p√°ginas da web tratem diretamente de fazer solicita√ß√µes HTTP para &lt;strong&gt;recursos espec√≠ficos dispon√≠veis em um servidor&lt;/strong&gt; e &lt;strong&gt;formatar os dados resultantes&lt;/strong&gt; conforme necess√°rio antes de serem exibidos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onde-encontro-isso-funcionando-na-pr%C3%A1tica"&gt;
  &lt;/a&gt;
  Onde encontro isso funcionando na pr√°tica?
&lt;/h2&gt;

&lt;p&gt;Entre em um site que voc√™ adora. Vou assumir que voc√™ curte um Netflixzinho de domingo, enrolado nas cobertas tomando chocolate quente... &lt;/p&gt;

&lt;p&gt;Dormindo no meio da s√©rie porque voc√™ est√° SUPER confort- &lt;em&gt;c-ham&lt;/em&gt; enfim. &lt;/p&gt;

&lt;p&gt;Agora no campo de busca, escreva o nome de uma s√©rie. Mas tem que ser boa, hein? Escreve l√°... &lt;strong&gt;Brooklyn Nine-Nine&lt;/strong&gt;; uma das melhores s√©ries que existem e s√≥ minha opini√£o importa.&lt;/p&gt;

&lt;p&gt;Assim que voc√™ clicar no bot√£o "Procurar", perceba que o conte√∫do principal mudar√°, mas a maioria das informa√ß√µes ao redor, como cabe√ßalho, rodap√©, menu de navega√ß√£o, etc., &lt;strong&gt;permanecer√£o as mesmas&lt;/strong&gt;. Isso √© o que? Isso √© Fant√°stico, pois: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;As atualiza√ß√µes de p√°gina s√£o muito mais r√°pidas e voc√™ n√£o precisa esperar a atualiza√ß√£o da p√°gina, o que significa que o site parece mais r√°pido e √°gil.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Menos dados s√£o baixados em cada atualiza√ß√£o, o que significa menos largura de banda desperdi√ßada. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Antigamente, essa t√©cnica era conhecida como &lt;strong&gt;AJAX&lt;/strong&gt;, porque &lt;strong&gt;utilizava a XMLHttpRequest para solicitar dados XML&lt;/strong&gt; (blergh). Normalmente, &lt;em&gt;esse n√£o √© o caso hoje em dia&lt;/em&gt; (am√©m), mas o resultado ainda √© o mesmo e o termo "Ajax" ainda √© frequentemente usado para descrever a t√©cnica.&lt;/p&gt;

&lt;p&gt;Resumindo: Ajax √© o tio que utiliza uma API da web como proxy para solicitar dados de maneira mais inteligente, em vez de apenas fazer o navegador recarregar a p√°gina inteira. Pois muito que bem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-seria-solicitar-dados-com-essa-tal-de-api-fetch"&gt;
  &lt;/a&gt;
  Como seria solicitar dados com essa tal de api fetch?
&lt;/h2&gt;

&lt;p&gt;A API Fetch √© basicamente uma &lt;strong&gt;substitui√ß√£o moderna do XHR&lt;/strong&gt;; ela foi introduzido em navegadores recentemente para tornar as solicita√ß√µes ass√≠ncronas de HTTP &lt;strong&gt;mais f√°ceis de fazer&lt;/strong&gt; em JavaScript, tanto para desenvolvedores quanto para outras APIs que se baseiam no Fetch.&lt;/p&gt;

&lt;p&gt;"Ser√° que a fetch √© t√£o boa assim?" &lt;strong&gt;observe&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

   &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

   &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Que col√≠rio para os olhos, que monumento aben√ßoado, que vis√£o paradis√≠aca, que resposta para todas as perguntas sobre a complexidade da psiqu√™ humana... Agora que j√° terminei de elogiar, vamos explicar o que cada trem desse faz.&lt;/p&gt;

&lt;p&gt;1) &lt;strong&gt;fetch(url)&lt;/strong&gt;: Invocamos o m√©todo fetch passando a URL do recurso que queremos buscar.&lt;/p&gt;

&lt;p&gt;2) &lt;strong&gt;then()&lt;/strong&gt;: Retorna uma promessa. Se a promessa retornada for resolve, a fun√ß√£o dentro do m√©todo then() √© executada. Essa fun√ß√£o cont√©m o c√≥digo para lidar com os dados recebidos da API.&lt;/p&gt;

&lt;p&gt;3) &lt;strong&gt;catch()&lt;/strong&gt;: A API chamada usando fetch() pode estar inoperante ou outros erros podem ocorrer. Se isso acontecer, a promessa reject ser√° retornada. O m√©todo catch √© usado para lidar com reject. O c√≥digo dentro de catch() ser√° executado se um erro ocorrer ao chamar a API escolhida.&lt;/p&gt;

&lt;p&gt;E √© isto. √â isso. √â S√ì isso. &lt;/p&gt;

&lt;p&gt;Para voc√™ que ficou co√ßando a cabe√ßa (como eu) com a &lt;em&gt;XMLHttpRequestNingu√©mSeImporta&lt;/em&gt;, temos uma solu√ß√£o muito mais vi√°vel e f√°cil de aplicar. &lt;/p&gt;

&lt;p&gt;No c√≥digo acima, voc√™ est√° chamando a Fetch API e passando o URL para o servidor. Ent√£o, uma resposta √© recebida. No entanto, a resposta recebida &lt;strong&gt;n√£o vem formatada em JSON&lt;/strong&gt;, ou seja, n√£o vem conhecid√≠ssima como a noite de Par√≠s ou poderos√≠ssima como a espada de um samurai. &lt;/p&gt;

&lt;p&gt;Ela vem como um objeto com uma s√©rie de m√©todos que podem ser usados dependendo do que voc√™ quer fazer com as informa√ß√µes. &lt;/p&gt;

&lt;p&gt;Ent√£o vamos converter o objeto retornado em JSON; usando um m√©todo chamado (se prepara)... &lt;strong&gt;json()&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// O in√≠cio de um sonho&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;erro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;erro&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// Deu tudo errado&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O GET informa o que queremos fazer ao acessar aqueles dados. Depois temos nossos dois casos como mencionado nos coment√°rios: o de sucesso e o de falha. &lt;/p&gt;

&lt;p&gt;√â isto! Espero que esse post tenha agu√ßado sua curiosidade para ler mais √† respeito :]&lt;/p&gt;

</description>
      <category>fetch</category>
    </item>
    <item>
      <title>CSS Selectors: The Full Reference Guide üöÄ</title>
      <author>_ùô≤ùôæùô≥ùô¥</author>
      <pubDate>Wed, 23 Jun 2021 13:35:26 +0000</pubDate>
      <link>https://dev.to/underscorecode/css-selectors-the-full-reference-guide-3cbf</link>
      <guid>https://dev.to/underscorecode/css-selectors-the-full-reference-guide-3cbf</guid>
      <description>&lt;p&gt;Hello, everybody! üöÄ&lt;/p&gt;

&lt;p&gt;Today we'll be covering CSS selectors in depth.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-a-css-selector"&gt;What is a selector in CSS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#types-of-selectors"&gt;Types of selectors&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#universal-selector"&gt;Universal selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#type-selector"&gt;Type selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#class-selector"&gt;Class selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id-selector"&gt;ID selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#attribute-selector"&gt;Attribute selector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#grouping-selectors"&gt;Grouping selectors&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#group-selector"&gt;Group selector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#combining-selectors"&gt;Combining selectors&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#descendant-combinator"&gt;Descendant combinator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#child-combinator"&gt;Child combinator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#general-sibling-combinator"&gt;General sibling combinator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adj-sibling-combinator"&gt;Adjacent sibling combinator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#pseudo-classes"&gt;Pseudo-classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pseudo-elements"&gt;Pseudo-elements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#what-is-a-selector-in-css"&gt;
  &lt;/a&gt;
  What is a selector in CSS? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A CSS selector is a &lt;strong&gt;pattern&lt;/strong&gt; used to &lt;strong&gt;choose the HTML elements&lt;/strong&gt; that we want to &lt;strong&gt;style&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Speaking more technically, CSS selectors are able to &lt;strong&gt;select those HTML elements to which a style ruleset will be applied&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#types-of-selectors"&gt;
  &lt;/a&gt;
  Types of selectors &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-universal-selector"&gt;
  &lt;/a&gt;
  1. Universal selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;*&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by an &lt;strong&gt;asterisk&lt;/strong&gt; (*) and matches &lt;strong&gt;all the elements&lt;/strong&gt; in the HTML document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Computer Science Eng.&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Mathematics&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Physics&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;coral&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a 1px solid coral border to all elements in the document.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hhcs9u2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pljk80n8hmj0ihv68wdk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhcs9u2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pljk80n8hmj0ihv68wdk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The border property shows very well the behavior of this selector. As you can observe in the image above, every element is now surrounded by a border, including the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element and the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element. &lt;/p&gt;



&lt;p&gt;The universal selector is also used to &lt;strong&gt;avoid confusion&lt;/strong&gt; and make your code &lt;strong&gt;easier to read&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Let's take a look at the following examples:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nd"&gt;:first-child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;maroon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;maroon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;These two code snippets look both pretty much the same, right?&lt;/p&gt;

&lt;p&gt;Well, we only need to notice the &lt;strong&gt;blank space&lt;/strong&gt; between the type selector and the pseudo-class to realize that they're not exactly the same: the first one selects the first child of every &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element and the second one selects the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements that are first children themselves of another element.&lt;/p&gt;

&lt;p&gt;Don't panic yet, we'll be talking more in detail about &lt;strong&gt;pseudo-classes&lt;/strong&gt; and &lt;strong&gt;how selectors work&lt;/strong&gt; later on üôÇ&lt;/p&gt;

&lt;p&gt;For now, just keep in mind that in this example there are two different element selectors working together to apply a styling rule. Everything will make sense later. Promise.&lt;/p&gt;

&lt;p&gt;In any case, to distinguish one from the other and being able to see the blank space more clearly, &lt;strong&gt;we can make use of the universal selector&lt;/strong&gt;, as shown below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;maroon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Speaking in terms of functionality, adding an asterisk symbol &lt;strong&gt;does nothing&lt;/strong&gt;, but it's useful to quickly &lt;strong&gt;identify the elements that are going to be targeted&lt;/strong&gt; and to keep your code &lt;strong&gt;neat and tidy&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-type-selector"&gt;
  &lt;/a&gt;
  2. Type selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elemType&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector matches &lt;strong&gt;all elements that belong to the specified type&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;A paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Another paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;One more paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;deeppink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a font size of 1.5rem and a deep pink color to all &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements. Easy and direct.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jjVLGiSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lajufuf1sxcuqf7qh7v1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jjVLGiSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lajufuf1sxcuqf7qh7v1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-class-selector"&gt;
  &lt;/a&gt;
  3. Class selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;.classname&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;period&lt;/strong&gt; (.) and matches &lt;strong&gt;all elements that contain the specified class&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"deeppink"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a deep pink paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hotpink"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a hot pink paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pink"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a regular pink paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"deeppink-bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a paragraph with a deep pink background&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hotpink-bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a paragraph with a hot pink background&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pink-bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a paragraph with a regular pink background&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.deeppink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;deeppink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.hotpink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.pink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.deeppink-bg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;deeppink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.hotpink-bg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.pink-bg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Group selector - Stay until the end to understand its
 behavior üòâ */&lt;/span&gt;
&lt;span class="nc"&gt;.deeppink-bg&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.hotpink-bg&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.pink-bg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a different pink color variant to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element depending on the class they contain, styling either their text or their background.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELbwokgu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcqh7jakxg9aibe7jep4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELbwokgu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcqh7jakxg9aibe7jep4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Another way to specify a class selector is &lt;strong&gt;by appending the type of the element that contains the classname&lt;/strong&gt; in front of the regular class selector.&lt;/p&gt;

&lt;p&gt;Take a look at this example of a regular list:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We could style every &lt;em&gt;list item&lt;/em&gt; like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.list-item&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Or like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nc"&gt;.list-item&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Note that in this specific case it wouldn't be necessary to use this method because all the elements that contain the &lt;em&gt;list-item&lt;/em&gt; class are &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, so appending the element type wouldn't make any difference .&lt;/p&gt;

&lt;p&gt;But let's have a look at this other example below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;List of animals&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Cat&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Dog&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Monkey&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Dolphin&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Frog&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this example, we have different types of elements referencing the same class, so, in order to apply &lt;strong&gt;different styling rules&lt;/strong&gt; to each of them, &lt;strong&gt;we need to specify the type of the elements&lt;/strong&gt; that contain that class. Otherwise, the elements won't be targeted properly and, consequently, the styles we're trying to apply won't be displayed as expected.&lt;/p&gt;

&lt;p&gt;So we should do something like the following to apply different rules depending on if the element is a heading or a paragraph:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="nc"&gt;.big&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;coral&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="nc"&gt;.big&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;orange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---8ofQjZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/it9a9k8vsyosjziprhbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---8ofQjZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/it9a9k8vsyosjziprhbv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-id-selector"&gt;
  &lt;/a&gt;
  4. ID selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;#idname&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;hash&lt;/strong&gt; symbol (#) and matches &lt;strong&gt;the unique element that contains the specified id&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"users-table"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Users&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;John Doe&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Jane Doe&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"staff-table"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Staff&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Hannah Legend&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Daniel Oaks&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Type selector */&lt;/span&gt;
&lt;span class="nt"&gt;table&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* ID selectors */&lt;/span&gt;
&lt;span class="nf"&gt;#users-table&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#staff-table&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a black background color and a white text color to the table that matches the id &lt;em&gt;users-table&lt;/em&gt;, and a 1px solid black border to the table that matches the id &lt;em&gt;staff-table&lt;/em&gt;. Both of them receive a padding of 20px based on their type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YBLdR7lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxf6mgk56mc7bz7xwfc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YBLdR7lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxf6mgk56mc7bz7xwfc6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Even though HTML allows you to assign the same id value to several elements, &lt;strong&gt;you shouldn't ever do it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you need to apply the same style to a bunch of different elements, &lt;strong&gt;always use the class attribute&lt;/strong&gt;. You'll keep your code clean and will get rid of a possible confusion.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#5-attribute-selector"&gt;
  &lt;/a&gt;
  5. Attribute selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The attribute selector is more complex than the rest of the selectors and has &lt;strong&gt;several syntaxes&lt;/strong&gt; that can be applied to our HTML elements based on which &lt;strong&gt;condition&lt;/strong&gt; should be satisfied by them.&lt;/p&gt;

&lt;p&gt;In other words, it matches &lt;strong&gt;all the HTML elements which contain a specified attribute&lt;/strong&gt; and whose value for that attribute &lt;strong&gt;satisfies a given condition&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#attribute-selector-syntaxes"&gt;
  &lt;/a&gt;
  Attribute selector syntaxes
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#syntax-1"&gt;
  &lt;/a&gt;
  Syntax 1
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements with the &lt;strong&gt;specified attribute&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/contact"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/about"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Type selector */&lt;/span&gt;
&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkslategray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Attribute selector */&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a white color to every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that contains the &lt;code&gt;href&lt;/code&gt; attribute, regardless of its value, and removes the underline.&lt;/p&gt;

&lt;p&gt;We're also styling the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element with a background color and some padding by making use of the type selector.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HXtAwOBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gv6kb7j9gqb0bshhrft3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HXtAwOBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gv6kb7j9gqb0bshhrft3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-2"&gt;
  &lt;/a&gt;
  Syntax 2
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; is exactly&lt;/strong&gt;  &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Username&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Username"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Password&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Password"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;chocolate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a chocolate text color to every &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element that has the &lt;code&gt;type&lt;/code&gt; attribute with an exact value of &lt;em&gt;text&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9g3kJiWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98clr2noel3w93i126t4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9g3kJiWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98clr2noel3w93i126t4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;We could as well use this syntax to &lt;strong&gt;emulate the ID selector&lt;/strong&gt; (remember the example in section 4):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"users-table"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"staff-table"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; By using this attribute selector syntax, we are targeting elements that contain an &lt;em&gt;id&lt;/em&gt; attribute whose value is exactly &lt;em&gt;users-table&lt;/em&gt; or &lt;em&gt;staff-table&lt;/em&gt;. We're using this one syntax because an element can only have one &lt;em&gt;idname&lt;/em&gt;, so the value needs to be exact (=).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#syntax-3"&gt;
  &lt;/a&gt;
  Syntax 3
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr~=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; is a list of words separated by blanks and one of them is exactly&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en-gb en-us en-ca en-au en-nz"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Welcome!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"fr-fr fr-ca fr-be"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Bienvenue!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;~=&lt;/span&gt;&lt;span class="s1"&gt;"en-us"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;navy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;~=&lt;/span&gt;&lt;span class="s1"&gt;"fr-fr"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a navy color to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element whose value for &lt;code&gt;lang&lt;/code&gt; is a list that contains the exact string &lt;em&gt;en-us&lt;/em&gt;. Same for all &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements whose value for &lt;code&gt;lang&lt;/code&gt; contains &lt;em&gt;fr-fr&lt;/em&gt;, applying a red color in this case.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EIFKMbEt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0qn0t4xfsmcp08kgjcwq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EIFKMbEt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0qn0t4xfsmcp08kgjcwq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;As well as the previous syntax, through which we could emulate the ID selector behavior, we can also use this one attribute syntax to &lt;strong&gt;emulate the behavior of the class selector&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;~=&lt;/span&gt;&lt;span class="s1"&gt;"list-item"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; By using this attribute selector syntax, we are targeting elements that have a &lt;em&gt;class&lt;/em&gt; attribute whose value is a list that contains the string &lt;em&gt;list-item&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;We're using this specific syntax because an element can contain several classes and we're aiming at just one of them (~=). But even though the element had just one class, &lt;strong&gt;the value for the class attribute always acts like a list of values&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#syntax-4"&gt;
  &lt;/a&gt;
  Syntax 4
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr|=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; is exactly&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;or starts with&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;followed by a hyphen&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en-us"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en-gb"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="s1"&gt;"en"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;cornflowerblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;antiquewhite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a cornflower blue background color and an antique white text color to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element that has a &lt;code&gt;lang&lt;/code&gt; attribute whose value is exactly &lt;em&gt;en&lt;/em&gt; or starts with &lt;em&gt;en-&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P3SOBuOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hs7uwkhop6l34ae1ibe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P3SOBuOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hs7uwkhop6l34ae1ibe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-5"&gt;
  &lt;/a&gt;
  Syntax 5
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr^=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; starts with&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#list1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go to list 1&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#list2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go to list 2&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Lists&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"list1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;List 1&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Milk&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Butter&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Eggs&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Sugar&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"list2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;List 2&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Oranges&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Lemons&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Strawberries&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Apples&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;^=&lt;/span&gt;&lt;span class="s1"&gt;"#"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;crimson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a crimson color and a font size of 2rem to every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that has a &lt;code&gt;href&lt;/code&gt; attribute whose value starts with &lt;em&gt;#&lt;/em&gt;.&lt;br&gt;
&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AxEpGji---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ej7ue7fvtvm7ml5cojma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AxEpGji---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ej7ue7fvtvm7ml5cojma.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-6"&gt;
  &lt;/a&gt;
  Syntax 6
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr$=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; ends with&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"css-selectors-guide.pdf"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CSS Selectors Guide&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;".pdf"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;slateblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a slate blue color to every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that has a &lt;code&gt;href&lt;/code&gt; attribute whose value ends with &lt;em&gt;.pdf&lt;/em&gt;.&lt;br&gt;
&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U-uhIl0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vemqc0qkwnfbeacap4xr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U-uhIl0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vemqc0qkwnfbeacap4xr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-7"&gt;
  &lt;/a&gt;
  Syntax 7
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr*=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; contains at least one occurrence of&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"small-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a small box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a big box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s1"&gt;"box"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;burlywood&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a burlywood background color to every &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element that contains a &lt;code&gt;class&lt;/code&gt; attribute whose value has at least one occurrence of the string &lt;em&gt;box&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fW_s2XoF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9ocd7x3jzxr5hc15chv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fW_s2XoF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9ocd7x3jzxr5hc15chv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#grouping-selectors"&gt;
  &lt;/a&gt;
  Grouping selectors &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Grouping selectors in CSS is basically used to &lt;strong&gt;put together&lt;/strong&gt; those elements of different type or with different id/classes that we want to apply the &lt;strong&gt;same style properties&lt;/strong&gt; to.&lt;/p&gt;

&lt;p&gt;Additionally, by using this technique, we'll get rid of redundancy and our code will be &lt;strong&gt;clean&lt;/strong&gt;, &lt;strong&gt;concise&lt;/strong&gt; and &lt;strong&gt;organized&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#group-selector"&gt;
  &lt;/a&gt;
  Group selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1, ..., elemN&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;comma&lt;/strong&gt; (,) and matches &lt;strong&gt;all the elements stated in the list&lt;/strong&gt; and applies the same ruleset to all of them.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Computer Science Engineering&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;List of courses&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Algebra&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Calculus&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Physics&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Discrete Mathematics&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Introduction to Programming&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkred&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a dark red color to every &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aow1sF9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hvbszl13m7vfy7f1uvm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aow1sF9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hvbszl13m7vfy7f1uvm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#combining-selectors"&gt;
  &lt;/a&gt;
  Combining selectors &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;CSS selectors can also be combined. By combining selectors, then we can define &lt;strong&gt;CSS combinators&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;CSS combinators are used to &lt;strong&gt;establish a relationship between different selectors&lt;/strong&gt; and are very useful to make your element selection &lt;strong&gt;more targeted&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-descendant-combinator"&gt;
  &lt;/a&gt;
  1. Descendant combinator &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1 elem2&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This combinator is represented by a &lt;strong&gt;single space&lt;/strong&gt; ( ) and matches &lt;strong&gt;all &lt;em&gt;elem2&lt;/em&gt; that are descendants of&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;elem1&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Consider the following navigation:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;People&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;Students&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Faculty members&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Discrete Mathematics&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Programming&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Physics&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Algorithms&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;Staff members&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;About&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;crimson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkslateblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a 1px solid crimson border, a dark slate blue color, a font size of 1.5rem and a bold font weight to every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that is descendant of a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element, &lt;strong&gt;regardless of how nested they are&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NptW7b-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2p6xm0nqrlni7anhvark.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NptW7b-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2p6xm0nqrlni7anhvark.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-child-combinator"&gt;
  &lt;/a&gt;
  2. Child combinator &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1 &amp;gt; elem2&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This combinator is represented by a &lt;strong&gt;prompt&lt;/strong&gt; (&amp;gt;) and matches &lt;strong&gt;all &lt;em&gt;elem2&lt;/em&gt; that are direct children of&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;elem1&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a direct child of .box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is not a direct child of .box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is another direct child of .box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkgoldenrod&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a dark golden color to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element that is a direct child of any element that has the class &lt;em&gt;box&lt;/em&gt;, so, in this HTML example, the first and last &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements will be selected, but not the one in the middle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_sHMKHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpmqn5iqgv3iob6w0bds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_sHMKHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpmqn5iqgv3iob6w0bds.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-general-sibling-combinator"&gt;
  &lt;/a&gt;
  3. General sibling combinator &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1 ~ elem2&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This combinator is represented by a &lt;strong&gt;tilde&lt;/strong&gt; (~) and matches &lt;strong&gt;all &lt;em&gt;elem2&lt;/em&gt; that are siblings to&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;elem1&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;and come after it&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"blue-mug.jpeg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"a regular blue coffee mug"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Blue mug&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Price: $15&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a dark blue color to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element which is a sibling of any &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element and comes after it. In this example, both &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements will be selected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XySZq72u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzd07tw58z4i6dwq725o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XySZq72u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzd07tw58z4i6dwq725o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-adjacent-sibling-combinator"&gt;
  &lt;/a&gt;
  4. Adjacent sibling combinator &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1 + elem2&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This combinator is represented by a &lt;strong&gt;plus&lt;/strong&gt; symbol (+) and matches &lt;strong&gt;all &lt;em&gt;elem2&lt;/em&gt; that are siblings to&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;elem1&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;and appear immediately after it&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"blue-mug.jpeg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"a regular blue coffee mug"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Blue mug&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Price: $15&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this case, only the first &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element will be selected, since the second one doesn't appear immediately after the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SllalOHu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6he4xnv2xj565trggu7p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SllalOHu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6he4xnv2xj565trggu7p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#pseudoclasses"&gt;
  &lt;/a&gt;
  Pseudo-classes &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A CSS pseudo-class is a keyword that is added to a selector and &lt;strong&gt;defines a special state&lt;/strong&gt; of the selected elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem:pseudo-class&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;colon&lt;/strong&gt; (:).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Shopping list&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Milk&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Butter&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Eggs&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Sugar&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this example, we're applying a black background color and a white text color to every &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element when the cursor hovers over it.&lt;/p&gt;

&lt;p&gt;Take a look at what happens when we hover over the &lt;em&gt;Butter&lt;/em&gt; element:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGWZUQuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kadphf9gvfhu0hab6vlc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGWZUQuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kadphf9gvfhu0hab6vlc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some of the &lt;strong&gt;most common CSS pseudo-classes&lt;/strong&gt; are:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:active&lt;/code&gt;, &lt;code&gt;:hover&lt;/code&gt;, &lt;code&gt;:focus&lt;/code&gt;, &lt;code&gt;:disabled&lt;/code&gt;, &lt;code&gt;:checked&lt;/code&gt;, &lt;code&gt;:first-child&lt;/code&gt;, &lt;code&gt;:nth-child&lt;/code&gt;, &lt;code&gt;:first-of-type&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#pseudoelements"&gt;
  &lt;/a&gt;
  Pseudo-elements &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A CSS pseudo-element is a keyword that is added to a selector to &lt;strong&gt;style a specific part&lt;/strong&gt; of the selected elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem:pseudo-element&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;double colon&lt;/strong&gt; (::).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;CODE&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"_"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this example, we're appending an underscore symbol in front of every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z0vBDXSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p6dm0v4obsehzpedvf8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z0vBDXSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p6dm0v4obsehzpedvf8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some of the &lt;strong&gt;most common CSS pseudo-elements&lt;/strong&gt; are:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;::after&lt;/code&gt; (can also be written as &lt;code&gt;:after&lt;/code&gt;), &lt;code&gt;::before&lt;/code&gt; (can also be written as &lt;code&gt;:before&lt;/code&gt;), &lt;code&gt;::marker&lt;/code&gt;, &lt;code&gt;::placeholder&lt;/code&gt;, &lt;code&gt;::first-letter&lt;/code&gt;.&lt;/p&gt;



&lt;p&gt;And that's pretty much it üôÇ&lt;/p&gt;

&lt;p&gt;I hope this reference guide has been helpful for you.&lt;/p&gt;

&lt;p&gt;You can also check out the following related posts about CSS selectors on &lt;a href="https://instagram.com/underscorecode"&gt;@underscorecode&lt;/a&gt; Instagram account:&lt;/p&gt;


&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CP8znDHsMmV/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;

&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CQErX0PMe1I/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;

&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CQWagoQsEdV/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;






&lt;p&gt;üéâ Don't forget to follow &lt;a class="mentioned-user" href="https://dev.to/underscorecode"&gt;@underscorecode&lt;/a&gt;
 on &lt;a href="https://instagram.com/underscorecode"&gt;Instagram&lt;/a&gt; and &lt;a href="https://twitter.com/underscorecode"&gt;Twitter&lt;/a&gt; for more daily webdev content üñ•üñ§&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Escalando aplica√ß√µes automaticamente no Kubernetes usando KEDA</title>
      <author>Willian C√©sar</author>
      <pubDate>Wed, 23 Jun 2021 13:18:01 +0000</pubDate>
      <link>https://dev.to/willianccs/escalando-aplicacoes-automaticamente-no-kubernetes-usando-keda-c41</link>
      <guid>https://dev.to/willianccs/escalando-aplicacoes-automaticamente-no-kubernetes-usando-keda-c41</guid>
      <description>&lt;p&gt;Para quem ainda n√£o conhece o &lt;a href="https://keda.sh/"&gt;KEDA (Kubernetes Event-Driven Autoscaling)&lt;/a&gt;, √©:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Um componente leve e de finalidade √∫nica que pode ser adicionado a qualquer cluster do Kubernetes. Funciona junto com componentes Kubernetes padr√£o, como o Horizontal Pod Autoscaler (HPA) e pode estender a funcionalidade sem sobrescrever ou duplica√ß√£o.&lt;br&gt;
Retirado da documenta√ß√£o oficial&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Foi lan√ßado no fim de 2019 &lt;a href="https://cloudblogs.microsoft.com/opensource/2019/11/19/keda-1-0-release-kubernetes-based-event-driven-autoscaling/"&gt;(an√∫ncio oficial)&lt;/a&gt; e √© fruto de uma parceria entre Microsoft &amp;amp; Red Hat.&lt;/p&gt;

&lt;p&gt;E ele cumpre bem o lema, que √©: &lt;strong&gt;‚ÄúApplication autoscaling made simple‚Äù&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Nativamente o Kubernetes s√≥ permite configurar &lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/"&gt;HPA&lt;/a&gt; com as m√©tricas de CPU e mem√≥ria.&lt;br&gt;
Se quiser escalar as aplica√ß√µes utilizando outro tipo de m√©trica, por exemplo, lags de eventos ou filas, voc√™ precisa primeiro criar um adaptador de m√©tricas (custom metrics) para extrair as m√©tricas da fonte desejada. Entretanto se  precisar obter m√©tricas de v√°rias fontes usando v√°rios adaptadores, voc√™ est√° sem sorte porque apenas um por vez √© compat√≠vel (a menos que tenha mudado recentemente).&lt;/p&gt;

&lt;p&gt;J√° o KEDA extrai de uma &lt;a href="https://keda.sh/docs/2.3/scalers/"&gt;variedade de fontes&lt;/a&gt; e dimensiona automaticamente suas implanta√ß√µes de &lt;code&gt;0&lt;/code&gt; a &lt;code&gt;N-inst√¢ncias&lt;/code&gt; com base em sua configura√ß√£o no ScaledObject.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sbBw_34S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sav8cxq4lajkb3tfo7bk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sbBw_34S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sav8cxq4lajkb3tfo7bk.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Outro ponto interessante √© que o KEDA n√£o ‚Äúreinventa a roda‚Äù e n√£o construiu seu pr√≥prio mecanismo de escalonamento, se aproveitando de HPAs do Kubernetes e dos secrets (&lt;strong&gt;TriggerAuthentication&lt;/strong&gt;) j√° usados pelas aplica√ß√µes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#instalando-o-keda"&gt;
  &lt;/a&gt;
  INSTALANDO O KEDA
&lt;/h2&gt;

&lt;p&gt;As instru√ß√µes para implantar o KEDA s√£o muito simples e podem ser encontradas &lt;a href="https://keda.sh/docs/2.3/deploy/"&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem tr√™s maneiras de implantar KEDA em seu cluster Kubernetes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Helm charts&lt;/li&gt;
&lt;li&gt;Operator Hub&lt;/li&gt;
&lt;li&gt;Implantar YAMLs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos usar a primeira op√ß√£o.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo add kedacore https://kedacore.github.io/charts
helm repo update

kubectl create ns keda
helm install keda kedacore/keda --namespace keda
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ap√≥s a instala√ß√£o teremos 2 deployments (KEDA Operator e KEDA Metrics API) rodando no cluster‚Ä¶&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get deployment -n keda
NAME                              READY   UP-TO-DATE   AVAILABLE   AGE
keda-operator                     1/1     1            1           1h
keda-operator-metrics-apiserver   1/1     1            1           1h
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;e mais alguns CRDs dispon√≠veis:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl api-resources --api-group=keda.sh
NAME                     SHORTNAMES       APIGROUP   NAMESPACED   KIND
scaledjobs               sj               keda.sh    true         ScaledJob
scaledobjects            so               keda.sh    true         ScaledObject
triggerauthentications   ta,triggerauth   keda.sh    true         TriggerAuthentication
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ScaledJobs*/ScaledObject&lt;/strong&gt;: Os ScaledJobs/ScaledObjects mapeiam uma fonte de evento para a jobs/deployments que voc√™ deseja dimensionar.&lt;br&gt;
&lt;strong&gt;TriggerAuthentication&lt;/strong&gt;: Se necess√°rio, este recurso cont√©m a configura√ß√£o de autentica√ß√£o necess√°ria para monitorar a origem do evento.&lt;/p&gt;

&lt;p&gt;O "ScaledObject" tamb√©m cria o HPA para voc√™.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;O KEDA n√£o apenas dimensiona deployments, mas tamb√©m pode dimensionar seus jobs do Kubernetes. Em vez de ter muitos eventos processados ‚Äã‚Äãem sua implanta√ß√£o e aumentar ou diminuir com base no n√∫mero de mensagens que precisam ser consumidas, o KEDA pode ativar um trabalho para cada mensagem na origem do evento.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#exemplo-com-kafka"&gt;
  &lt;/a&gt;
  EXEMPLO COM KAFKA
&lt;/h2&gt;

&lt;p&gt;Vamos dar uma olhada mais de perto no &lt;a href="https://keda.sh/docs/2.3/concepts/scaling-deployments/"&gt;ScaledObject&lt;/a&gt; e &lt;a href="https://keda.sh/docs/2.3/scalers/apache-kafka/"&gt;Kafka trigger&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: kafka-consumer-scaler
  labels:
    deploymentName: my-kafka-consumer-service
  namespace: sample
spec:
  scaleTargetRef:
    deploymentName: my-kafka-consumer-service
  pollingInterval: 1        # Optional. Default: 30 seconds
  cooldownPeriod:  30       # Optional. Default: 300 seconds
  minReplicaCount: 0        # Optional. Default: 0
  maxReplicaCount: 10   # Optional. Default: 100
  triggers:
    - type: kafka
      metadata:
        topic: test-topic-1
        # brokerList: my-cluster-kafka-bootstrap.kafka:9092 - deprecated
        bootstrapServers: my-cluster-kafka-bootstrap.kafka:9092    
        consumerGroup: my-kafka-consumerGroup
        lagThreshold: '5'       # Default: 10
        offsetResetPolicy: latest
        allowIdleConsumers: false
      authenticationRef:
        name: keda-trigger-auth-kafka-credential
    ## Optional: list of topics to trigger
    #- type: kafka
    #   metadata:
    #     topic: test-topic-2
    #     bootstrapServers: my-cluster-kafka-bootstrap.kafka:9092    
    #     consumerGroup: my-kafka-consumerGroup
    #     lagThreshold: '5'     # Default: 10
    #     offsetResetPolicy: latest
    #     allowIdleConsumers: false
    #   authenticationRef:
    #     name: keda-trigger-auth-kafka-credential
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;O ScaledObject, TriggerAuthentication e a implanta√ß√£o referenciada em deploymentName precisam estar no mesmo namespace.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Apesar de serem valores opcionais, √© importante definir valores dentro dos padr√µes para seu neg√≥cio nos par√¢metros &lt;code&gt;minReplicaCount&lt;/code&gt; e &lt;code&gt;maxReplicaCount&lt;/code&gt;. Para evitar rebalanceamento de parti√ß√µes no Kafka E/OU evitar que muitos pods sejam iniciados - consumindo todos os recursos do cluster üí•.&lt;/li&gt;
&lt;li&gt;O par√¢metro &lt;code&gt;offsetResetPolicy&lt;/code&gt; pode ser earliest ou latest. Como o KEDA vai percorrer todos os t√≥picos, vale a pena entender como o c√≥digo (neg√≥cio) se comporta com duplicidade de eventos. &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Por padr√£o, o n√∫mero de r√©plicas n√£o exceder√° o n√∫mero de parti√ß√µes em um t√≥pico. Ou seja, se maxReplicaCount for definido mais do que o n√∫mero de parti√ß√µes, o escalonador n√£o vai atingir o valor definido. Caso queira mudar este comportamento, ajuste o par√¢metro &lt;code&gt;allowIdleConsumers&lt;/code&gt; para &lt;code&gt;true&lt;/code&gt;. Por√©m, se houver mais n√∫mero de consumidores do que n√∫mero de parti√ß√µes em um t√≥pico, o consumidor extra ter√° que ficar ocioso.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para facilitar criamos um usu√°rio no Kafka com permiss√£o de somente leitura (&lt;code&gt;list&lt;/code&gt; e &lt;code&gt;describe&lt;/code&gt;) em todos os grupos e t√≥picos e referenciamos no TriggerAuthentication o &lt;strong&gt;secret&lt;/strong&gt; com este usu√°rio:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: keda-trigger-auth-kafka-credential
  namespace: sample
spec:
  secretTargetRef:
  - key: sasl
    name: keda-credentials
    parameter: sasl
  - key: username
    name: keda-credentials
    parameter: username
  - key: password
    name: keda-credentials
    parameter: password
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  REFER√äNCIAS:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://keda.sh/docs/2.3/"&gt;https://keda.sh/docs/2.3/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/"&gt;https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cloudblogs.microsoft.com/opensource/2020/04/06/kubernetes-event-driven-autoscaling-keda-cncf-sandbox-project/"&gt;https://cloudblogs.microsoft.com/opensource/2020/04/06/kubernetes-event-driven-autoscaling-keda-cncf-sandbox-project/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://keda.sh/resources/"&gt;https://keda.sh/resources/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#agradecimentos"&gt;
  &lt;/a&gt;
  AGRADECIMENTOS
&lt;/h2&gt;

&lt;p&gt;Obrigado √† &lt;a href="https://twitter.com/lipekis/status/1407064351010398208?s=20"&gt;todos os envolvidos&lt;/a&gt; que me incentivaram a escrever este artigo e revisaram o texto:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Felipe Lamar√£o Silva (@lipekis)&lt;/li&gt;
&lt;li&gt;Willian Itiho (@Willian_Itiho)&lt;/li&gt;
&lt;li&gt;Rafael Gomes (&lt;a class="mentioned-user" href="https://dev.to/gomex"&gt;@gomex&lt;/a&gt;
)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>kubernetes</category>
      <category>keda</category>
    </item>
    <item>
      <title>Let's build Airbnb Home page with Nextjs and ChakraUI - Part 3(final)</title>
      <author>Muhammad  Ahmad</author>
      <pubDate>Wed, 23 Jun 2021 13:11:15 +0000</pubDate>
      <link>https://dev.to/m_ahmad/let-s-build-airbnb-home-page-with-nextjs-and-chakraui-part-3-final-3379</link>
      <guid>https://dev.to/m_ahmad/let-s-build-airbnb-home-page-with-nextjs-and-chakraui-part-3-final-3379</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In this part, We'll continue with main section and then we'll create footer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Github Repo:&lt;/strong&gt; &lt;a href="https://github.com/MA-Ahmad/chakra-airbnb"&gt;Chakra-airbnb&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href="https://chakra-airbnb.vercel.app"&gt;Chakra-airbnb&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#info-section"&gt;
  &lt;/a&gt;
  Info section
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--phjyfIAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dukpyivutg0saijnp5v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--phjyfIAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dukpyivutg0saijnp5v.png" alt="info"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Heading&lt;/span&gt;
        &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;borderBottom&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;borderColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray.300&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Traveling&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;AirBnb&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Heading&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Flex&lt;/span&gt;
        &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;section&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;alignItems&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;between&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;flexDirection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;column&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nx"&gt;borderBottom&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;borderColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray.300&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Box&lt;/span&gt;
          &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;
            &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="nx"&gt;viewBox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 0 24 24&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#60B6B5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#60B6B5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;focusable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;false&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presentation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;strokeLinecap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;round&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;strokeLinejoin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;round&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;
              &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;m17.5 2.9c-2.1 0-4.1 1.3-5.4 2.8-1.6-1.6-3.8-3.2-6.2-2.7-1.5.2-2.9 1.2-3.6 2.6-2.3 4.1 1 8.3 3.9 11.1 1.4 1.3 2.8 2.5 4.3 3.6.4.3 1.1.9 1.6.9s1.2-.6 1.6-.9c3.2-2.3 6.6-5.1 8.2-8.8 1.5-3.4 0-8.6-4.4-8.6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;linejoin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;round&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/path&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/svg&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;700&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;mt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt; &lt;span class="nx"&gt;support&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;
            &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray.700&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.875rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;300&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;mt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Day&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;night&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;we&lt;/span&gt;&lt;span class="err"&gt;‚Äô&lt;/span&gt;&lt;span class="nx"&gt;re&lt;/span&gt; &lt;span class="nx"&gt;here&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;our&lt;/span&gt; &lt;span class="nx"&gt;support&lt;/span&gt; &lt;span class="nx"&gt;team&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt;
            &lt;span class="nx"&gt;anywhere&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;world&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt; &lt;span class="nx"&gt;hour&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Box&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Box&lt;/span&gt;
          &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;
            &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="nx"&gt;viewBox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 0 24 24&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presentation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;focusable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;false&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#60B6B5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;
              &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;m23.57 11.4-1.75-1.76-3.85-3.87-1.78-1.79-2.7-2.71-.82-.83-.22-.23-.06-.06c-.22-.22-.53-.22-.73-.02l-1.75 1.76-3.85 3.87-3.85 3.87-1.75 1.76a1.49 1.49 0 0 0 -.44 1.05v.01c0 .38.15.77.44 1.06l.55.55a1.49 1.49 0 0 0 2.01.08v8.4c0 .81.68 1.45 1.5 1.45h15c .82 0 1.5-.65 1.5-1.45v-8.4c.59.49 1.45.47 2.01-.08l.55-.55c.29-.29.44-.68.44-1.06v-.01c0-.38-.14-.77-.44-1.06zm-3.57 11.16c0 .24-.22.45-.5.45h-15c-.28 0-.5-.21-.5-.45v-9.36l8-7.99 8 7.99zm2.85-9.74-.55.55c-.2.2-.52.2-.71.01l-9.24-9.22a.5.5 0 0 0 -.71 0l-9.24 9.22a.5.5 0 0 1 -.71-.01l-.55-.55a.5.5 0 0 1 -.01-.71l1.75-1.76 3.85-3.87 3.85-3.87 1.4-1.4.77.77 2.7 2.71 1.78 1.79 3.85 3.87 1.75 1.76a.51.51 0 0 1 -.01.71z&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;fillRule&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;evenodd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/path&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/svg&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;700&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;mt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Global&lt;/span&gt; &lt;span class="nx"&gt;hospitality&lt;/span&gt; &lt;span class="nx"&gt;standards&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;
            &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray.700&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.875rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;300&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;mt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Guests&lt;/span&gt; &lt;span class="nx"&gt;review&lt;/span&gt; &lt;span class="nx"&gt;their&lt;/span&gt; &lt;span class="nx"&gt;hosts&lt;/span&gt; &lt;span class="nx"&gt;after&lt;/span&gt; &lt;span class="nx"&gt;each&lt;/span&gt; &lt;span class="nx"&gt;stay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;All&lt;/span&gt; &lt;span class="nx"&gt;hosts&lt;/span&gt; &lt;span class="nx"&gt;must&lt;/span&gt; &lt;span class="nx"&gt;maintain&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;
            &lt;span class="nx"&gt;minimum&lt;/span&gt; &lt;span class="nx"&gt;rating&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;our&lt;/span&gt; &lt;span class="nx"&gt;hospitality&lt;/span&gt; &lt;span class="nx"&gt;standards&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;Airbnb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Box&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Box&lt;/span&gt;
          &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;
            &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="nx"&gt;viewBox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 0 24 24&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presentation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;focusable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;false&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#60B6B5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;
              &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;m15.37 13.54-.01.01a.53.53 0 0 0 .01-.01m-.37 9.46h-11.5c-.28 0-.9-.22-1.38-.58-.71-.52-1.12-1.31-1.12-2.42 0-.04 0-.07.01-.11.09-1.1 1.59-2.44 4.02-3.79a33.14 33.14 0 0 1 2.9-1.42 35.57 35.57 0 0 1 1.31-.54c.63-.26.71-.95.18-1.35a4.55 4.55 0 0 1 -.38-.31 7.1 7.1 0 0 1 -.84-.9c-.73-.92-1.17-1.96-1.2-3.09v-2.99c.07-2.36 2.38-4.5 5.04-4.5 2.67 0 4.96 2.14 4.96 4.5v3c0 1.13-.43 2.17-1.15 3.11a7.35 7.35 0 0 1 -1.09 1.13l-.08.07c-.02.02-.02.02-.05.05s-.03.03-.09.14c-.05.47-.05.47.46.7a.49.49 0 0 0 .36-.15l.06-.05a8.32 8.32 0 0 0 1.23-1.28c.84-1.1 1.35-2.35 1.35-3.72v-3c0-2.92-2.75-5.5-5.96-5.5-3.2 0-5.96 2.56-6.04 5.49v3.01c.03 1.38.56 2.62 1.42 3.71.31.39.63.73.96 1.03.06.05.1.08.15.12a34.28 34.28 0 0 0 -3.98 1.87c-2.73 1.51-4.41 3.02-4.54 4.58a2.41 2.41 0 0 0 -.01.19c0 2.55 1.91 3.99 3.5 4h11.5a.5.5 0 1 0 0-1m7.67-4.22c-.36.74-.97 1.55-1.78 2.38a20.33 20.33 0 0 1 -1.89 1.71 19.94 19.94 0 0 1 -1.89-1.71c-.81-.83-1.42-1.64-1.78-2.38-.22-.45-.33-.86-.33-1.23 0-.99.61-1.56 1.43-1.56.7 0 1.55.53 2.18 1.31a.5.5 0 0 0 .78 0c .63-.78 1.48-1.31 2.18-1.31.82 0 1.43.57 1.43 1.56 0 .36-.11.77-.33 1.23m-1.1-3.78c-.89 0-1.82.5-2.57 1.25-.75-.76-1.68-1.25-2.57-1.25-1.36 0-2.43 1.01-2.43 2.56 0 .53.15 1.08.43 1.66.41.85 1.09 1.74 1.96 2.64a21.09 21.09 0 0 0 2.31 2.05.5.5 0 0 0 .6 0 20.91 20.91 0 0 0 2.31-2.05c.87-.9 1.55-1.79 1.96-2.64.28-.58.43-1.13.43-1.66 0-1.55-1.07-2.56-2.43-2.56&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;fillRule&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;evenodd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/path&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/svg&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;700&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;mt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;star&lt;/span&gt; &lt;span class="nx"&gt;hosts&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;
            &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray.700&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.875rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;300&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;mt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;From&lt;/span&gt; &lt;span class="nx"&gt;fresh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;pressed&lt;/span&gt; &lt;span class="nx"&gt;sheets&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;tips&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;where&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="nx"&gt;brunch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;our&lt;/span&gt; &lt;span class="nx"&gt;hosts&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;full&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;local&lt;/span&gt; &lt;span class="nx"&gt;hospitality&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Box&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Flex&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#places-cards"&gt;
  &lt;/a&gt;
  Places cards
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---MGK11eD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91odymm7ac1mh51p8exj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---MGK11eD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91odymm7ac1mh51p8exj.png" alt="cards"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Heading&lt;/span&gt;
        &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Just&lt;/span&gt; &lt;span class="nx"&gt;booked&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;United&lt;/span&gt; &lt;span class="nx"&gt;States&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Heading&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Flex&lt;/span&gt;
        &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;section&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;alignItems&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;between&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;flexWrap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;wrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt;
          &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;md&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;md&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.25rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.25rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="nx"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;_hover&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;textDecoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/images/just-booked-1.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;objectFit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cover&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;
            &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray.600&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.75rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;700&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;textTransform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uppercase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;pt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.5rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Entire&lt;/span&gt; &lt;span class="nx"&gt;House&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;‚Ä¢&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt; Joshua Tre&lt;/span&gt;&lt;span class="err"&gt;e
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Heading&lt;/span&gt;
            &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.25rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.125rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;fontWeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;lineHeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.375&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;Joshua&lt;/span&gt; &lt;span class="nx"&gt;Tree&lt;/span&gt; &lt;span class="nx"&gt;House&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Heading&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray.600&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.875rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.25rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;$285&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;night&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Flex&lt;/span&gt; &lt;span class="nx"&gt;alignItems&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Star&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Star&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Star&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Star&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray.600&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.75rem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="mi"&gt;467&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;‚Ä¢&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt; Superhos&lt;/span&gt;&lt;span class="err"&gt;t
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Flex&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Flex&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#footer-section"&gt;
  &lt;/a&gt;
  Footer section
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K8V4v8US--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot2eo7f3y08tafdp5zc9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K8V4v8US--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot2eo7f3y08tafdp5zc9.png" alt="footer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/MA-Ahmad/chakra-airbnb/blob/main/components/layout/footer.tsx"&gt;footer code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>typescript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Reactifying Custom Elements using a Custom Elements Manifest</title>
      <author>Pascal Schilp</author>
      <pubDate>Wed, 23 Jun 2021 13:08:59 +0000</pubDate>
      <link>https://dev.to/thepassle/reactifying-custom-elements-using-a-custom-elements-manifest-2e</link>
      <guid>https://dev.to/thepassle/reactifying-custom-elements-using-a-custom-elements-manifest-2e</guid>
      <description>&lt;p&gt;We finally have a stable version of the Custom Elements Manifest schema, and this means we can finally start creating some cool tooling with it. Don't know what a Custom Elements Manifest is? Read all about it in the &lt;a href="https://dev.to/open-wc/introducing-custom-elements-manifest-gkk"&gt;announcement&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A Custom Elements Manifest is a JSON file that contains all metadata about the custom elements in your project. You can read all about it &lt;a href="https://github.com/webcomponents/custom-elements-manifest"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;React is a &lt;a href="https://dev.to/bennypowers/what-s-not-new-in-react-18-45c7"&gt;bit&lt;/a&gt; of a &lt;a href="https://custom-elements-everywhere.com/#:~:text=LIBRARY-,React%2016.14.0,-SCORE"&gt;pain&lt;/a&gt; when it comes to web components, and (unlike other frameworks) requires a bunch of special handling to support HTML. The &lt;strong&gt;TL;DR:&lt;/strong&gt; here is that React passes all data to Custom Elements in the form of HTML attributes, and can't listen to DOM events due to reinventing the wheel with their own synthetic events system. &lt;/p&gt;

&lt;p&gt;For fun and science, I decided to try my hand at creating a &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt; plugin to ‚ú® automagically ‚ú® create some React wrappers for my custom elements project &lt;a href="https://github.com/thepassle/generic-components"&gt;generic-components&lt;/a&gt;, which is a collection of accessible, zero-dependency, vanilla JS web components. Do note that this is mostly a PoC, I'm sure things could be improved and edgecases were missed; this is mostly an experiment to see how we can utilize the Custom Elements Manifest. &lt;/p&gt;

&lt;p&gt;In this blog we'll walk through a couple of the steps and decisions to reactify our custom elements, and showcase how we can leverage a projects &lt;code&gt;custom-elements.json&lt;/code&gt; to achieve this goal.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can read more about &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt;s rich plugin system here: &lt;a href="https://github.com/open-wc/custom-elements-manifest/blob/master/packages/analyzer/docs/plugins.md"&gt;Plugin Authoring Handbook&lt;/a&gt;, and be sure to check out the  &lt;a href="(https://github.com/open-wc/cem-plugin-template)"&gt;cem-plugin-template&lt;/a&gt; repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to follow along, you can find the code for our &lt;code&gt;reactify&lt;/code&gt; plugin &lt;a href="https://github.com/thepassle/generic-components/blob/master/cem-plugin-reactify.js"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-elements"&gt;
  &lt;/a&gt;
  Custom Elements
&lt;/h2&gt;

&lt;p&gt;First of all, we have to find all the custom elements in our Custom Elements Manifest that we want to reactify. Fortunately, classes in the Manifest that are actually custom elements are flagged with a: &lt;code&gt;"customElement": true&lt;/code&gt; flag, so we can loop through all the modules of our Manifest, and find any class declaration that has the &lt;code&gt;customElement&lt;/code&gt; flag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="nx"&gt;customElementsManifest&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mod&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;declarations&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have an array of all the custom elements in our project, we can start creating some React wrappers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#slots"&gt;
  &lt;/a&gt;
  Slots
&lt;/h2&gt;

&lt;p&gt;Lets start off easy; slots. Slots are a native way to provide children to your custom elements. Much like React's &lt;code&gt;children&lt;/code&gt;. Which means... we can use &lt;code&gt;children&lt;/code&gt; to project any children of the Reactified component, straight to the Custom Element, which (if it supports slots), will correctly render them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Toggle me!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Easy peasy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#properties"&gt;
  &lt;/a&gt;
  Properties
&lt;/h2&gt;

&lt;p&gt;Next up: Properties. In React-land, everything gets passed around as a property. This is forms a bit of a problem, because in HTML-land &lt;em&gt;not&lt;/em&gt; everything is a property, we also have &lt;em&gt;attributes&lt;/em&gt;. Sometimes, an elements attributes and properties are even synced up, and this could mean that there are attributes and properties with the same name; like an element with a &lt;code&gt;disabled&lt;/code&gt; attribute/property or a &lt;code&gt;checked&lt;/code&gt; attribute/property.&lt;/p&gt;

&lt;p&gt;Fortunately, in a Custom Elements Manifest we can make a distinction between the two. If an attribute has a relation with a corresponding property, it will have a &lt;code&gt;fieldName&lt;/code&gt; property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"attributes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"boolean"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"fieldName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that we can ignore the &lt;code&gt;checked&lt;/code&gt; &lt;em&gt;attribute&lt;/em&gt;, but interface with the &lt;code&gt;checked&lt;/code&gt; &lt;em&gt;property&lt;/em&gt; instead, and avoid having two props with the same name.&lt;/p&gt;

&lt;p&gt;Because React will set everything on a custom element as an attribute (ugh), we have to get a &lt;code&gt;ref&lt;/code&gt; for our custom element, and set the property that way. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  Attributes
&lt;/h2&gt;

&lt;p&gt;This is where things get a little bit more interesting. Again, in React-land, everything gets passed around as a property. However, it could be the case that a custom element has an &lt;em&gt;attribute name&lt;/em&gt; that is a reserved keyword in JS-land. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;generic-skiplink&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"someID"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/generic-skiplink&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In HTML, this &lt;code&gt;for&lt;/code&gt; attribute is no problem. But since we're reactifying, and everything in React-land gets passed around as a JavaScript property, we now have a problem. Can you spot what the problem is in this code?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSkiplink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exactly. &lt;code&gt;for&lt;/code&gt; is a reserved JavaScript keyword, so this will cause an error. In order to avoid this, we'll provide an attribute mapping to avoid these kinds of clashes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;reactify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="c1"&gt;// Provide an attribute mapping to avoid clashing with React or JS reserved keywords&lt;/span&gt;
      &lt;span class="na"&gt;attributeMapping&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_for&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever we find an attribute that is a reserved keyword in JavaScript, we try to see if there was an attributeMapping for this attribute provided, and if not; we have to throw an error. Using this attributeMapping, the resulting React component now looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSkiplink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;_for&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;_for&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that we don't want to change the actual attribute &lt;em&gt;name&lt;/em&gt;, because that would cause problems, we only change the &lt;em&gt;value&lt;/em&gt; that gets passed to the attribute.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boolean-attributes"&gt;
  &lt;/a&gt;
  Boolean attributes
&lt;/h3&gt;

&lt;p&gt;Boolean attributes require some special attention here, as well. The way boolean attributes work in HTML is that the presence of them considers them as being true, and the absence of them considers them as being false. Consider the following examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- Yes, even this is considered as `true`! --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Calling &lt;code&gt;button.hasAttribute('disabled')&lt;/code&gt; on any of these will result in &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This means that for boolean attributes, we can't handle them the same way as regular attributes by only calling &lt;code&gt;ref.current.setAttribute()&lt;/code&gt;, but we need some special handling. Fortunately, the Custom Elements Manifest supports types, so we can easily make a distinction between 'regular' attributes, and boolean attributes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "attributes": [
    {
      "name": "checked",
      "type": {
&lt;span class="gi"&gt;+       "text": "boolean"
&lt;/span&gt;      },
      "fieldName": "checked"
    },
  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#events"&gt;
  &lt;/a&gt;
  Events
&lt;/h2&gt;

&lt;p&gt;React has their own synthetic event system to handle events, which doesn't play nice with custom elements (read: HTML). Fortunately, we can easily reactify them. React events work with the following convention:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our Custom Elements Manifest very conveniently holds an array of Events for our custom elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"events"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked-changed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CustomEvent"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means we can find all events for our custom element, prefix them with &lt;code&gt;on&lt;/code&gt;, and capitalize, and camelize them; &lt;code&gt;onCheckedChanged&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then we can use our &lt;code&gt;ref&lt;/code&gt; to add an event listener:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;checked-changed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#importing"&gt;
  &lt;/a&gt;
  Importing
&lt;/h2&gt;

&lt;p&gt;Finally, we need to create the import for the actual custom element in our reactified component. Fortunately for us, if a module contains a &lt;code&gt;customElements.define()&lt;/code&gt; call, it will be present in the Manifest. This means we can loop through the Manifest, find where our custom element gets defined, and stitch together some information from the &lt;code&gt;package.json&lt;/code&gt; to create a bare module specifier:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;switch.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./generic-switch/GenericSwitch.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;generic-switch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Will result in:&lt;br&gt;
&lt;code&gt;custom-elements.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"kind"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"javascript-module"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"switch.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"declarations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"exports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"kind"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"custom-element-definition"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"generic-switch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"declaration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"GenericSwitch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/generic-switch/GenericSwitch.js"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By stitching together the &lt;code&gt;name&lt;/code&gt; property from the projects &lt;code&gt;package.json&lt;/code&gt;, and the &lt;code&gt;path&lt;/code&gt; from the module containing the custom element definition, we can construct a bare module specifier for the import:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@generic-components/components/switch.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-the-plugin"&gt;
  &lt;/a&gt;
  Using the plugin
&lt;/h2&gt;

&lt;p&gt;To use our &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt; Reactify plugin, all I have to do is create a &lt;code&gt;custom-elements-manifest.config.js&lt;/code&gt; in the root of my project, import the plugin, and add it to the &lt;code&gt;plugins&lt;/code&gt; array:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;custom-elements-manifest.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reactify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./cem-plugin-reactify.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;reactify&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that every time I analyze my project, it will automagically create the Reactified wrappers of my custom elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚îî‚îÄ‚îÄ legacy
    ‚îú‚îÄ‚îÄ GenericAccordion.jsx
    ‚îú‚îÄ‚îÄ GenericAlert.jsx
    ‚îú‚îÄ‚îÄ GenericDialog.jsx
    ‚îú‚îÄ‚îÄ GenericDisclosure.jsx
    ‚îú‚îÄ‚îÄ GenericListbox.jsx
    ‚îú‚îÄ‚îÄ GenericRadio.jsx
    ‚îú‚îÄ‚îÄ GenericSkiplink.jsx
    ‚îú‚îÄ‚îÄ GenericSwitch.jsx
    ‚îú‚îÄ‚îÄ GenericTabs.jsx
    ‚îî‚îÄ‚îÄ GenericVisuallyHidden.jsx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;And as a final result, here's our reactified Custom Element that correctly handles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Events&lt;/li&gt;
&lt;li&gt;Properties&lt;/li&gt;
&lt;li&gt;Attributes&lt;/li&gt;
&lt;li&gt;Boolean attributes&lt;/li&gt;
&lt;li&gt;Slots
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;
  &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// boolean attribute&lt;/span&gt;
  &lt;span class="na"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// property&lt;/span&gt;
  &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// regular attribute&lt;/span&gt;
  &lt;span class="na"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// event&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  Toggle me! // slot
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/react-kghcjw?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding"&gt;
  &lt;/a&gt;
  Concluding
&lt;/h2&gt;

&lt;p&gt;While it's cool that we finally have a stable version of the Custom Elements Manifest, which allows us to automate things like this, working on this reactify plugin made me realize how backwards it even is that we need to resort to shenanigans like this, and I hope React will seriously consider supporting HTML properly in future versions.&lt;/p&gt;

</description>
      <category>react</category>
      <category>customelements</category>
      <category>webcomponents</category>
      <category>customelementsmanifest</category>
    </item>
    <item>
      <title>Vue, Wordpress, MEAN, MERN, Doesn‚Äôt Matter! ‚Äì Why we shouldn‚Äôt emphasize too much on tech tools</title>
      <author>Kingsley Ubah</author>
      <pubDate>Wed, 23 Jun 2021 13:00:13 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/vue-wordpress-mean-mern-doesn-t-matter-why-we-shouldn-t-emphasize-too-much-on-tech-tools-4bbe</link>
      <guid>https://dev.to/ubahthebuilder/vue-wordpress-mean-mern-doesn-t-matter-why-we-shouldn-t-emphasize-too-much-on-tech-tools-4bbe</guid>
      <description>&lt;p&gt;Every once in a while we see things like this emerge in our feed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React is better than Vue&lt;/li&gt;
&lt;li&gt;Vue is better than React&lt;/li&gt;
&lt;li&gt;Svelte is the new thing, people&lt;/li&gt;
&lt;li&gt;I still think Jquery is the best&lt;/li&gt;
&lt;li&gt;WordPress is useless&lt;/li&gt;
&lt;li&gt;PHP powers the whole web so use it&lt;/li&gt;
&lt;li&gt;Dump everything, use JamStack!&lt;/li&gt;
&lt;li&gt;MEVN is the best JavaScript stack&lt;/li&gt;
&lt;li&gt;No, MERN is the best stack&lt;/li&gt;
&lt;li&gt;Hey, MEAN here &lt;/li&gt;
&lt;li&gt;This is better&lt;/li&gt;
&lt;li&gt;That is better&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am going to give my two cents on the issue:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It doesn‚Äôt really matter. Yes it doesn‚Äôt!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let me make something clear here: &lt;strong&gt;every single technology was created for a main purpose&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Initially &lt;strong&gt;jQuery&lt;/strong&gt; was created mainly to manipulate the DOM and to improve the UX with animation methods methods like &lt;em&gt;show()&lt;/em&gt;, &lt;em&gt;hide()&lt;/em&gt;, &lt;em&gt;slideUp()&lt;/em&gt; and so on. But then direct manipulation became a problem especially for complex applications. The performance issues were accentuated.&lt;/p&gt;

&lt;p&gt;Then came &lt;strong&gt;React and Vue&lt;/strong&gt;. Both utilized the virtual DOM mechanism for rendering web elements. One of the other big strength of these two is how easy it is to build UI components. Something you couldn‚Äôt get with jQuery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wordpress&lt;/strong&gt; was created so anyone who doesn‚Äôt know how to code can still build cool websites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt; may have an ugly syntax but it remains the main language behind Wordpress which powers a significant part of the web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap&lt;/strong&gt; was created so you don‚Äôt have to go through the hell of writing CSS and centering divs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tailwind&lt;/strong&gt; was created so that while you enjoyed the benefits of using an already built CSS framework, you also kept in touch with your CSS roots. &lt;strong&gt;The best of both worlds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You get the point? Each technology was created with one main objective in mind. And that gives that particular tool a comparative advantage over other tools for that specific task no matter what other shortcomings it may have.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Analogy: Joe is 6‚Äô4 and Ryan is 5‚Äô4. Joe‚Äôs height makes him a slow runner but it also means he can play basketball well. Conversely, Ryan is faster at running but terrible at playing basketball. Someone who loves watching basketball would say ‚ÄúRyan sucks‚Äù while watching Ryan play basketball. On the other hand, someone who loves watching races would be amused while watching a slow Joe run.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You may complain and argue all you want but if you want to build a simple website and not have to worry too much about scaffolding and using other libraries, &lt;strong&gt;jQuery&lt;/strong&gt; is still awesome for that.&lt;/p&gt;

&lt;p&gt;If you don‚Äôt know how to code yet want to build a website in record time, &lt;strong&gt;WordPress&lt;/strong&gt; is still the best for that and that remains.&lt;/p&gt;

&lt;p&gt;If you want to learn something simple, go for &lt;strong&gt;Vue&lt;/strong&gt;. Vue makes it very easy to build user interfaces (my opinion)&lt;/p&gt;

&lt;p&gt;If you want to learn something popular with lots of job prospects, learn &lt;strong&gt;React&lt;/strong&gt;.  Here‚Äôs why:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äò‚ÄôAn estimated number of 8787 industry leaders currently use React. js; among some of the most powerful are Airbnb, Uber, Netflix, Instagram, WhatsApp, BBC, Twitter, and Reddit. Since its release in 2013, the React community has increased to 56162, whereas 25698 developers claim they prefer Angular. js and 19480 use Vue.‚Äù  &lt;a href="https://www.thinslices.com/blog/infographic-react.js-statistics#:~:text=An%20estimated%20number%20of%208787,js%20and%2019480%20use%20Vue."&gt;Thinslices.com&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Svelte&lt;/strong&gt; is great for whatever it was created for, which I sadly don‚Äôt know much about yet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We need to shift our thinking towards the task in question.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Do you want to participate in a race, use Ryan. Do you want to participate in a basketball tournament? Include Joe in your team instead.&lt;/p&gt;

&lt;p&gt;Your choice of tool should depend on what your project demands. There are so many factors you should consider and it is based on those factors that you narrow down and ultimately pick the best candidate for the job.&lt;/p&gt;

&lt;p&gt;To be exact, here are things you should consider before choosing a framework for building your website:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Main idea of your project&lt;/li&gt;
&lt;li&gt;Popularity of the tool
&lt;/li&gt;
&lt;li&gt;Sustainability &amp;amp; Scalability&lt;/li&gt;
&lt;li&gt;Support and timeliness of Updates &lt;/li&gt;
&lt;li&gt;Security
&lt;/li&gt;
&lt;li&gt;Documentation &lt;/li&gt;
&lt;li&gt;Resources&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Analyse all tools available at your disposal and find out which one is most suitable for your task or current situation. Maybe you‚Äôre a freelancer and a client wants an ecommerce site ready in a couple of days, you would definitely be better off with Wordpress, Wix, Shopify or some other no-code frameworks available.&lt;/p&gt;

&lt;p&gt;This is my honest take on the whole issue.  Some may not agree with me on this and that is perfectly fine. Disagreements and constructive criticism is highly welcome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finally, if you benefitted from this post and would like to support my work, you can buy me my favourite fruit:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for taking time out to read and see you soon. If you‚Äôre new, be sure to follow this blog for future posts.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P/S:  If you‚Äôre a web developer and would love a resources rich in JavaScript, you can get  &lt;a href="https://gumroad.com/a/834147443"&gt;HTML To React by Sleepless Yogi (aff)&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>react</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Understanding Network things: part 3 ‚Äì DNS</title>
      <author>Aur√©lie Vache</author>
      <pubDate>Wed, 23 Jun 2021 12:54:10 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-network-things-part-3-dns-976</link>
      <guid>https://dev.to/aurelievache/understanding-network-things-part-3-dns-976</guid>
      <description>&lt;p&gt;Hi,&lt;br&gt;
I've got a secret for you, since several years. I'm a developer and I'm a mess in undestanding network things! :'(&lt;/p&gt;

&lt;p&gt;It's hard to not understanding things that anyone seems to understand and understanding network concepts can be difficult or time-consuming, specially for developers. That the reason I started to create sketchnotes about Network concepts. I think it could be a good way, more visual, to explain it.&lt;/p&gt;

&lt;p&gt;In this third article, we will see DNS concepts.&lt;br&gt;
Is it always a DNS problem? ^^&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i6_bucnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7j46kpsdlh9a6cwtz0s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i6_bucnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7j46kpsdlh9a6cwtz0s.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nCFUT8Ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhosd1sfkrqnnuucle8u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nCFUT8Ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhosd1sfkrqnnuucle8u.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TP8lGHkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrmb5npqj9e7sipymltc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TP8lGHkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrmb5npqj9e7sipymltc.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As usual, if you like theses sketchnotes, you can follow me, and tell me what do you think. I will publish others sketchs shortly :-).&lt;/p&gt;

&lt;p&gt;If you are interested, I already published sketchnotes about &lt;a href="https://gumroad.com/aurelievache"&gt;Kubernetes, Docker and Istio&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>network</category>
      <category>http</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>10 JavaScript features that will help you adopt React faster</title>
      <author>Amel Haliloviƒá</author>
      <pubDate>Wed, 23 Jun 2021 12:52:56 +0000</pubDate>
      <link>https://dev.to/infobipdev/10-javascript-features-that-will-help-you-adopt-react-faster-5ggb</link>
      <guid>https://dev.to/infobipdev/10-javascript-features-that-will-help-you-adopt-react-faster-5ggb</guid>
      <description>&lt;p&gt;Is there a better way to start a blog post than with plain and simple facts? Of course, there is but let‚Äôs do the Captain-Obvious routine anyway!&lt;/p&gt;

&lt;p&gt;We can all agree that JavaScript is the most popular programming language in the world. We could also agree on the fact that libraries and frameworks are indispensable elements of any efficient JS programming task.&lt;/p&gt;

&lt;p&gt;According to State of JS survey, the most popular JavaScript library for building frontend applications is React. And it has been for 5 consecutive years.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-is-react-so-popular-with-frontend-developers"&gt;
  &lt;/a&gt;
  WHY IS REACT SO POPULAR WITH FRONTEND DEVELOPERS?
&lt;/h4&gt;

&lt;p&gt;Since its initial release in May 2013, React has seen a steady incline, followed by an ever-growing number of job opportunities. A part of its appeal and user adoption is due to its non-complicated architecture, based on a lot of native JavaScript features.&lt;/p&gt;

&lt;p&gt;Given the fact that many companies are moving towards re-writing their frontend using it, React is likely to stay at the top of the UI library pyramid.&lt;/p&gt;

&lt;p&gt;If you are new to frontend development or you want to make a transition from another frontend technology, we‚Äôve compiled a list of 10 JavaScript features to help you jumpstart your React basics!&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1-ecmascript-modules"&gt;
  &lt;/a&gt;
  1. ECMAScript modules
&lt;/h5&gt;

&lt;p&gt;React application is organized into multiple small files ‚Äî modules which all together form a graph of dependencies. The connection between them is created by using different ways of importing the right code.&lt;/p&gt;

&lt;p&gt;ECMAScript modules (or ES modules) provide an easy way to export and import parts of the code like constants, functions, components, etc. This way we can specify exactly which part of the module should be loaded.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#2-the-document-object-model-dom"&gt;
  &lt;/a&gt;
  2. The Document Object Model ‚Äî DOM
&lt;/h5&gt;

&lt;p&gt;Efficient DOM manipulation is one of the main challenges for the frontend technologies such as React. It is an expensive operation and tools are competing to develop a better solution for it and dominate the sphere of UI libraries.&lt;/p&gt;

&lt;p&gt;React is top of the game in this regard. It uses VirtualDOM, which is a ‚Äúvirtual‚Äù representation of a ‚Äúreal‚Äù DOM state. It is saved in memory and synced with the real DOM by a library such as ReactDOM. To fully understand how VirtualDOM works, one must know what is and how does the real DOM work.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#3-class"&gt;
  &lt;/a&gt;
  3. Class
&lt;/h5&gt;

&lt;p&gt;One of the most popular features introduced in the ES6 version was JavaScript classes. Classes represent templates for creating objects ‚Äî they define which properties and methods will the object have.&lt;/p&gt;

&lt;p&gt;In React, classes are primarily used to create stateful components. In fact, it was the only way to do it until hooks were introduced.. Since there are many developers who still prefer to use class components and many projects that haven‚Äôt migrated class components to functional, it will be useful to know how classes work.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#4-array-methods"&gt;
  &lt;/a&gt;
  4. Array methods
&lt;/h5&gt;

&lt;p&gt;Standard array methods like forEach, map, push, filter, some, etc., are widely used in React to manipulate data, so it is a good thing to be familiar with them before starting to learn and work with React. For example, map is used when we want to render multiple elements based on a collection of objects.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#5-spread-operator"&gt;
  &lt;/a&gt;
  5. Spread operator
&lt;/h5&gt;

&lt;p&gt;Spread operator takes in an iterable (e.g an array or object) and expands it into individual elements. In React it is widely used to create shallow copies of objects or to concatenate data from multiple objects or arrays. It provides a concise and readable code that enhances its use.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#6-destructuring-assignment"&gt;
  &lt;/a&gt;
  6. Destructuring assignment
&lt;/h5&gt;

&lt;p&gt;Destructuring assignment (often called just destructuring) is a JavaScript expression used for unpacking values from arrays or properties from objects into separate variables.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#7-fetch-api-promises"&gt;
  &lt;/a&gt;
  7. Fetch API /Promises
&lt;/h5&gt;

&lt;p&gt;Usually, our React applications require some data that we prepared on our backend services and exposed on RESTful APIs. To deliver that data to frontend applications we need Fetch API. Fetch API allows web-browser to make HTTP requests to web servers and fetch resources and data.&lt;/p&gt;

&lt;p&gt;Calling fetch returns a promise that resolves to a Response object holding information about the server‚Äôs response, such as its status code and its headers.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#8-bindings-and-scopes"&gt;
  &lt;/a&gt;
  8. Bindings and scopes
&lt;/h5&gt;

&lt;p&gt;When building class components, beginners usually encounter a problem ‚Äî the context of the class methods is not the expected one( from the component). We need to manually bind the component‚Äôs context to the method. This is expected behavior because of JavaScript and how this is treated.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#9-arrow-functions"&gt;
  &lt;/a&gt;
  9. Arrow functions
&lt;/h5&gt;

&lt;p&gt;Arrow functions are an ES2015 feature for a simpler way of writing functions. They have some limitations so they shouldn‚Äôt be used in every situation. Despite that, they are commonly used in React to solve the problem with methods binding or to create functional components.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#10-higherorder-functions"&gt;
  &lt;/a&gt;
  10. Higher-order functions
&lt;/h5&gt;

&lt;p&gt;A function that accepts and/or returns another function is called a higher-order function. Some of the examples of higher-order functions are already mentioned array methods forEach, map, reduce, filter.&lt;/p&gt;

&lt;p&gt;Inspired by this concept, React has higher-order components (HOCs), an advanced technique for reusing component‚Äôs logic. HOCs are part of many famous libraries like react-redux, react-router, material-ui, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-shortcuts-get-to-know-javascript"&gt;
  &lt;/a&gt;
  NO SHORTCUTS ‚Äî GET TO KNOW JAVASCRIPT
&lt;/h3&gt;

&lt;p&gt;These 10 features can help you fast-track your React learning curve.&lt;/p&gt;

&lt;p&gt;However, if you want to do more complex tasks, eliminate errors, and gain a better understanding of how the code works, there are no shortcuts. You‚Äôre going to have to put in the work and learn how JavaScript works, especially those tricky illogical parts.&lt;/p&gt;

&lt;p&gt;Overall, React is a friendly UI library that can help you create extensive, complex and demanding graphical interfaces. It‚Äôs backed by Facebook, has a strong developer community gathered around it and there‚Äôs no shortage of learning materials. In fact, there‚Äôs a ton of reasons for you to learn React.&lt;/p&gt;

&lt;p&gt;It‚Äôs up to you to start.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on &lt;a href="https://www.bitsbyamel.com"&gt;https://www.bitsbyamel.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Build a chrome extension with modern code setup</title>
      <author>Lakshmanan Arumugam</author>
      <pubDate>Wed, 23 Jun 2021 12:38:54 +0000</pubDate>
      <link>https://dev.to/lakshmananarumugam/build-a-chrome-extension-with-modern-code-setup-1ka1</link>
      <guid>https://dev.to/lakshmananarumugam/build-a-chrome-extension-with-modern-code-setup-1ka1</guid>
      <description>&lt;p&gt;In the previous article, I covered &lt;code&gt;How to set a chrome extension base code setup&lt;/code&gt;. In this article, I am going to cover &lt;code&gt;how to use test it and publish to chrome extension marketplace app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you completed the all previous article step. you will have the below folder structure in your code directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="kr"&gt;public&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Require&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt; &lt;span class="nx"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Extension&lt;/span&gt; &lt;span class="nx"&gt;home&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;manifest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Detect&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt; &lt;span class="nx"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;assets&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="nx"&gt;UI&lt;/span&gt; &lt;span class="nx"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;JS&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;dist&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Build&lt;/span&gt; &lt;span class="nx"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;node_modules&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;README&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;md&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="kr"&gt;package&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;babel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gitignore&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above the folder, you don't find any &lt;code&gt;dist&lt;/code&gt; folder. please use the below command in your code main directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you find the &lt;code&gt;dist&lt;/code&gt; folder. dist folder will be the major part of the chrome extension. because we will test the app in the local port. but, we compress(.zip) and sent the dist inside code only. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTeuQ2Fr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbxwzo1o5yvthved37ko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTeuQ2Fr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbxwzo1o5yvthved37ko.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the above screen steps and target the &lt;code&gt;dist&lt;/code&gt; to the target directory. Once you opened the chrome extension directory. &lt;/p&gt;

&lt;p&gt;you will find the chrome extension name called &lt;code&gt;Cool chrome theme&lt;/code&gt;. Then, test all features which you did in the Vue app. once done the dev testing. it's time to publish the app.&lt;/p&gt;

&lt;p&gt;Chrome already has some articles about how to publish the app. please check it out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/webstore/update/"&gt;Publish chrome extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FYI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why I used VUE for the chrome extension?&lt;/strong&gt;&lt;br&gt;
  Even though we able to develop a UI screen using plain HTML, JS, and CSS. when we build a complex screen I HTML and JS. it will take more time and complexity in development. &lt;/p&gt;

&lt;p&gt;Thanks for reading the post üòÄ. &lt;/p&gt;




&lt;p&gt;&lt;a href="https://github.com/lakshmanan-arumugam/cool-chrome-theme"&gt;Code URL&lt;/a&gt;&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/cool-chrome-theme/hnjfgakjgenceanlamddolhjgnmackfg"&gt;Demo extension&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Firebase Tutorial Make awesome dynamic pages</title>
      <author>Techy Programmers</author>
      <pubDate>Wed, 23 Jun 2021 12:22:28 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-dynamic-pages-for-your-website-firebase-tutorial-4i20</link>
      <guid>https://dev.to/kunaal438/how-to-make-dynamic-pages-for-your-website-firebase-tutorial-4i20</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make dynamic pages for your website.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iP9F7usZF3M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Best tools for writing a blog</title>
      <author>Pavel Pol√≠vka</author>
      <pubDate>Wed, 23 Jun 2021 11:54:20 +0000</pubDate>
      <link>https://dev.to/pavel_polivka/best-tools-for-writing-a-blog-5002</link>
      <guid>https://dev.to/pavel_polivka/best-tools-for-writing-a-blog-5002</guid>
      <description>&lt;p&gt;As I changed jobs and started working from home the thing I missed the most was teaching. I was always there for people to go over their problems, help them, explain. As I was trying to figure out how to take this back to my life I figured I give blogging a chance. I am not a very successful blogger, all my articles get few thousand views at max but it brings me joy and I love doing it. &lt;/p&gt;

&lt;p&gt;In this article, I want to go over few tools that are essential for me. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grammarly"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.grammarly.com"&gt;Grammarly&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Grammarly is literary a lifesaver. I am not a native speaker/writer and I need as much grammar help as I can get. It has a very intuitive and very good interface. The quality of the corrections is way ahead of tools like Word or Google docs. It will make you write like a native speaker. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hemingway"&gt;
  &lt;/a&gt;
  &lt;a href="https://hemingwayapp.com"&gt;Hemingway&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Hemingway is another awesome tool that makes your writing better. It's inspired by the writing style of Ernest Hemingway. It will take your text and mark the sentences that seem too complex, words that can be removed, etc... &lt;/p&gt;

&lt;p&gt;I usually take my text through Grammarly and then through Hemingway. The result is very readable text. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unspalsh"&gt;
  &lt;/a&gt;
  &lt;a href="https://unsplash.com"&gt;Unspalsh&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Unsplash is a website that has an endless amount of photos you can download and use for free. For commercial and non-comertional use. You can find almost everything there. I use those for my images in blog posts. &lt;/p&gt;

&lt;p&gt;As a side note here I also have some of my images provided there. I love photography and this seems like an awesome way of repaying the community. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trello"&gt;
  &lt;/a&gt;
  &lt;a href="https://trello.com/"&gt;Trello&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Trello is a task management tool. Great for managing Kanban workflows. I use it for planning my blog posts. &lt;/p&gt;

&lt;p&gt;In the first column, I have all my ideas for posts. Whenever I have an idea I put it there. In the second one, I have my posts that are in "research". I can have notes there, links, etc...&lt;/p&gt;

&lt;p&gt;The third column is for my in-progress work. And the last one for done. &lt;/p&gt;




&lt;p&gt;If you like this article you can follow me on &lt;a href="https://twitter.com/pavel_polivka"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>writing</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
