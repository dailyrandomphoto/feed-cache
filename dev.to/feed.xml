<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Small fixes, reviewing things</title>
      <author>Alex Romanova</author>
      <pubDate>Fri, 19 Nov 2021 14:55:42 +0000</pubDate>
      <link>https://dev.to/sirinoks/small-fixes-reviewing-things-29eo</link>
      <guid>https://dev.to/sirinoks/small-fixes-reviewing-things-29eo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#fixing-a-bug"&gt;
  &lt;/a&gt;
  Fixing a bug!
&lt;/h2&gt;

&lt;p&gt;I have chosen an &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2454"&gt;issue&lt;/a&gt; that looked innocent and important at the same time. The most trouble I had with it was.... RUNNING THE DAMN PROJECT!&lt;br&gt;
I followed an &lt;a href="https://github.com/Seneca-CDOT/telescope/blob/master/docs/environment-setup.md"&gt;environment setup guide&lt;/a&gt; which was pretty damn long. At some point I got stuck, it wanted me to install something that was too advanced to my Windows version. I would need to reinstall my Windows to really fix that, and that would take at least a weak and a shit ton of irritation (Because my windows has no updates.. which never backfired for 10 years until this moment. I'd say still a good trade off.) &lt;/p&gt;

&lt;p&gt;In any case, I was offered a solution:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lQEvAPPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911267678256250910/Screenshot_142.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lQEvAPPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911267678256250910/Screenshot_142.png" width="355" height="779"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! I had a magical browser environment that I could use to do fix my chosen issue.&lt;br&gt;
One problem tho.&lt;br&gt;
You needed to run it localhost to reproduce the bug.&lt;br&gt;
-_-&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;It took me a while to figure out that I only needed to do the npm installs to run only the part my issue related to. &lt;/p&gt;

&lt;p&gt;It then took me a while to understand why the issue even occured. I didn't fully understand the document structure they had. It still is a mystery to me how they got&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PATH_PREFIX&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;PATH_PREFIX&lt;/code&gt;&lt;br&gt;
From a totally different place - &lt;a href="https://github.com/Seneca-CDOT/telescope/blob/master/src/api/status/env.local#L2"&gt;env.local&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They didn't import anything, they didn't read the file... Idk man. Oh well. Magic it is. It works - it works. I don't touch.&lt;/p&gt;

&lt;p&gt;What caused issues basically was the undefined variable. In env.local you had some local variables, where you specified where you should be redirected by default. However, when the page would not read that variable, or did not have it specified, it gave 404.&lt;/p&gt;

&lt;p&gt;This part would redirect to the specified variable in env.local:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PATH_PREFIX&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PATH_PREFIX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;br&gt;
Here it decides which path to use. If PATH_PREFIX is undefined, it goes for '/'.&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PATH_PREFIX&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;br&gt;
This small part does a similar thing. If we didn't specify API_HOST, it goes for 'localhost'.&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_HOST&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;localhost&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This way when we do get undefined variables, our webpages don't crash, but go for a different option. My &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2494"&gt;PR&lt;/a&gt; didn't seem big, however I needed to understand how the whole thing worked before I could add those lines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-reviews"&gt;
  &lt;/a&gt;
  Code reviews
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-small-versioning-upgrade"&gt;
  &lt;/a&gt;
  A small versioning upgrade
&lt;/h3&gt;

&lt;p&gt;This one was a fresh &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2495"&gt;PR&lt;/a&gt; that was really simple. A version of &lt;a href="https://github.com/traefik/traefik"&gt;traefik&lt;/a&gt; was upgraded to a newer one. I just needed to see if stuff still works when it was. And, well... it did still work. No fancy magic here. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#formatting"&gt;
  &lt;/a&gt;
  Formatting
&lt;/h3&gt;

&lt;p&gt;My second review was also on a fresh &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/108"&gt;PR&lt;/a&gt;. It was a simple formatting upgrade, which I checked. It was okay. However, I noticed something. In the requirements it was mentioned that people should improve images used to look good in dark versions. I checked and saw an image that would have its text not readable on a black background. I thought - I can fix that, I know photoshop! So I did. And I sent &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/108#issuecomment-973865260"&gt;my result&lt;/a&gt; in the PR so that its author can add it to their changes. Hopefully I did it right.  Well, if not - they can just decide to not use it.&lt;/p&gt;

&lt;p&gt;I generally didn't enjoy reviewing code as much. But I suppose someone has to do it.&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Strive for short-lived synchronous communication</title>
      <author>Bohdan Stupak</author>
      <pubDate>Fri, 19 Nov 2021 14:51:16 +0000</pubDate>
      <link>https://dev.to/bohdanstupak1/strive-for-short-lived-synchronous-communication-a74</link>
      <guid>https://dev.to/bohdanstupak1/strive-for-short-lived-synchronous-communication-a74</guid>
      <description>&lt;p&gt;When interacting with a service asynchronous communication often is a preferred way. "Enterprise integration patterns" book puts it that way (which also might be a TL;DR; for the rest of the article)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With synchronous communication, the caller must wait for the receiver to finish processing the call before the caller can receive the result and continue. In this way, the caller can only make calls as fast as the receiver can perform them. On the other hand, asynchronous communication allows the sender to batch requests to the receiver at its own pace, and for the receiver to consume the requests at its own different pace. This allows both applications to run at maximum throughput and not waste time waiting on each other (at least until the receiver runs out of messages to process).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, there might be scenarios when synchronous communication is unavoidable. Let's have a look at the example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#communication-between-services"&gt;
  &lt;/a&gt;
  Communication between services
&lt;/h2&gt;

&lt;p&gt;Let's imagine we have a system that uploads and processes files. It consists of a legacy module upon which we have no control. This module takes a file from the file system, uploads it to the given endpoint via HTTP and if the upload is successful it uploads a supplementary metadata file.&lt;/p&gt;

&lt;p&gt;Since we have no control over the legacy module we have no other option than to stick with synchronous communication. Once the file is uploaded to our system we perform numerous processing activities which consume a considerable amount of time.&lt;/p&gt;

&lt;p&gt;We can summarize the current state of affairs with the following diagram.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VyLjI_FJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VyLjI_FJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/1.png" width="880" height="763"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extracting-long-running-task-into-separate-job"&gt;
  &lt;/a&gt;
  Extracting long running task into separate job
&lt;/h3&gt;

&lt;p&gt;As always, there's nothing wrong with this design unless you apply some scale to it. But once the requirement to upload a big amount of files arrived it appears evident that the bottleneck is the legacy module waits every time until our code is done saving and processing the file before it can upload the additional file. So in order to fulfill the requirement we need to reduce interaction time. Then you start noticing how wasteful is to wait until processing is done on every HTTP request. The remedy is to return the response early and perform processing in the background.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yq9pN9iR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yq9pN9iR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/2.png" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here asynchronous communication is denoted with the dashed arrow. Once we persist the file we send a message that the file is saved to the processor module. To enable this we might employ AMQP implementation of our taste. Since a message is asynchronous we don't have to wait for processor response and are able to return the response to our legacy uploader component way earlier.&lt;/p&gt;

&lt;p&gt;Notice that both components communicate inside a single process. There's the reason for this which I'll cover in the next section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scaling-solution-horizontally"&gt;
  &lt;/a&gt;
  Scaling solution horizontally
&lt;/h3&gt;

&lt;p&gt;Up to this point, some of the readers might bear a question: "why leave both components inside a single service when you could separate them?"&lt;/p&gt;

&lt;p&gt;While microservices were a hot topic couple of years ago, nowadays more organizations start realizing that doing microservices correctly is hard. It requires certain engineering capabilities (distributed logging, failure recovery) as well organizational capabilities (code ownership separation, maintaining up-to-date contracts between services, robust deployment strategy). All this should serve as a precaution for those who use microservices solely as a tool to split their codebase into more manageable pieces. And this is why I've decided to stick with inter-process communication as the default architectural style.&lt;/p&gt;

&lt;p&gt;Still, there might be cases when due to high load you have to scale the solution to endure even bigger loads. So the natural solution would be to handle file upload in parallel. However, parallelizing process on a single server instance has its own limits so eventually, you'll come up with deploying service on multiple services (horizontal scaling). In such a case, the IO-intensive part that persists files to the database might benefit from horizontal scaling, while processor part may benefit from vertical scaling (say, adding more powerful processor to perform computation-intensive logic).&lt;/p&gt;

&lt;p&gt;The ability to scale part of the system independently is one of the key reasons to use the microservices architectural style. (Another one is &lt;a href="https://www.thoughtworks.com/radar/techniques/inverse-conway-maneuver"&gt;inverse Conway maneuver&lt;/a&gt; but it is beyond the scope of the article).&lt;/p&gt;

&lt;p&gt;In such a case, both parts of the system are deployed independently and are communicating via message queue as on the figure below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5hs7Ubo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5hs7Ubo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/3.png" width="880" height="390"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reducing-http-request-duration"&gt;
  &lt;/a&gt;
  Reducing HTTP request duration
&lt;/h2&gt;

&lt;p&gt;Another area of interest is customer-facing UI applications. Numerous studies reveal how an increase in page load time leads to customer dissatisfaction. Since HTTP call duration is an integral part of page load time naturally we want to reduce it too.&lt;/p&gt;

&lt;p&gt;Let's have a look at the following hypothetical code responsible for registering users in the application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;FlushTemporary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IsValid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_mailingService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendConfirmationEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While the code above leverages a feature named &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/"&gt;asynchronous programming model&lt;/a&gt; in fact from the callers perspective it's synchronous since the caller needs to wait until user is persisted in DB and confirmation email is sent!&lt;/p&gt;

&lt;p&gt;Needless to say that this leads to an extra wait for a customer during a registration step. Here again as in the example above we should extract confirmation email into the background job that will be executed after the registration step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Synchronous communication introduces wait times that might be redundant during inter-system communication or in customer-facing applications. It's crucial to understand which part of synchronous communication is unavoidable and which part might be done later. For the latter part, background processors are a neat trick to handle the issue.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>architecture</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 19th November 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 19 Nov 2021 14:49:41 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-19th-november-2021-4906</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-19th-november-2021-4906</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-react-location"&gt;
  &lt;/a&gt;
  1. React Location
&lt;/h3&gt;

&lt;p&gt;Enterprise Client-Side Routing for React&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tannerlinsley"&gt;
        tannerlinsley
      &lt;/a&gt; / &lt;a href="https://github.com/tannerlinsley/react-location"&gt;
        react-location
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚛️ Enterprise Client-Side Routing for React
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7e9baeea6ff425954a0a1a4c665b80706740a014a95e0af88fd1283d6176be41/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d64393838656237392d623066632d346132622d383531342d366131616239333264313838"&gt;&lt;img src="https://camo.githubusercontent.com/7e9baeea6ff425954a0a1a4c665b80706740a014a95e0af88fd1283d6176be41/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d64393838656237392d623066632d346132622d383531342d366131616239333264313838"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/tannerlinsley/react-location/raw/main/media/repo-dark.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MdVuw5hT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/tannerlinsley/react-location/raw/main/media/repo-dark.png" alt="React Location Header"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enterprise Client-Side Routing for React&lt;/p&gt;
&lt;a href="https://twitter.com/intent/tweet?button_hashtag=TanStack" rel="nofollow"&gt;
  &lt;img alt="#TanStack" src="https://camo.githubusercontent.com/ba0077873e9b4d7fd47bd08c733c0df2ced44df61d15815c77a6c0dd5e4d2914/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f636f6c6f723d253233303861306539266c6162656c3d25323354616e537461636b267374796c653d736f6369616c2675726c3d6874747073253341253246253246747769747465722e636f6d253246696e74656e742532467477656574253346627574746f6e5f6861736874616725334454616e537461636b"&gt;
&lt;/a&gt;&lt;a href="https://discord.com/invite/WrRKjPJ" rel="nofollow"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/db23ec5ae2d1d2ff1f8f9fb791e4fd20b3489d4e2823d68b8b58b1343016fbb7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f72642d54616e537461636b2d253233353836354632"&gt;
&lt;/a&gt;&lt;a href="https://npmjs.com/package/react-location" rel="nofollow"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/404c09b35211529b35ce43b30d4ae4b4b177638e5824e6b2eeeeeedcde40e309/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d6c6f636174696f6e2e737667"&gt;
&lt;/a&gt;&lt;a href="https://bundlephobia.com/result?p=react-location" rel="nofollow"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/3e88b81bfedd07ebe4d567b148f13448187c2f19633920c6d6b14b8bfb87a66e/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d6c6f636174696f6e"&gt;
&lt;/a&gt;&lt;a href="https://github.com/tannerlinsley/react-location#badge"&gt;
    &lt;img alt="semantic-release" src="https://camo.githubusercontent.com/df1fd6655472a008d21057736be3b95a2bced4e9ea6db7c393e7c960a4d9e450/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e737667"&gt;
  &lt;/a&gt;&lt;a href="https://github.com/tannerlinsley/react-location/discussions"&gt;
  &lt;img alt="Join the discussion on Github" src="https://camo.githubusercontent.com/cfdb5767030150538f91d34959d55e5f2908ed13d9e11f9170a1c0d54857a336/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f47697468756225323044697363757373696f6e73253230253236253230537570706f72742d436861742532306e6f77212d626c7565"&gt;
&lt;/a&gt;&lt;a href="https://bestofjs.org/projects/react-location" rel="nofollow"&gt;&lt;img alt="Best of JS" src="https://camo.githubusercontent.com/5140543035100471cde7ff4094df0f5685d520e14a835119819c997c40d4668b/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f626573746f666a732d7365727665726c6573732e6e6f772e73682f6170692f70726f6a6563742d62616467653f66756c6c4e616d653d74616e6e65726c696e736c657925324672656163742d6c6f636174696f6e25323673696e63653d6461696c79"&gt;&lt;/a&gt;&lt;a href="https://github.com/tannerlinsley/react-location"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/3175ef13ccc68cc9eb43b4cd32a6a6ab4140060b3a717b4606b0d4f4c5e32f8d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f74616e6e65726c696e736c65792f72656163742d6c6f636174696f6e2e7376673f7374796c653d736f6369616c266c6162656c3d53746172"&gt;
&lt;/a&gt;&lt;a href="https://twitter.com/tannerlinsley" rel="nofollow"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/3011d1635f23d7c569b7911e866c1cd7a4d5356e0e4707feb2a841dbaa61a5d4/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f74616e6e65726c696e736c65792e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77"&gt;
&lt;/a&gt;
&lt;p&gt;Enjoy this library? Try the entire &lt;a href="https://tanstack.com" rel="nofollow"&gt;TanStack&lt;/a&gt;! &lt;a href="https://github.com/tannerlinsley/react-query"&gt;React Query&lt;/a&gt;, &lt;a href="https://github.com/tannerlinsley/react-table"&gt;React Table&lt;/a&gt;, &lt;a href="https://github.com/tannerlinsley/react-charts"&gt;React Charts&lt;/a&gt;, &lt;a href="https://github.com/tannerlinsley/react-virtual"&gt;React Virtual&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Visit &lt;a href="https://react-location.tanstack.com" rel="nofollow"&gt;react-location.tanstack.com&lt;/a&gt; for docs, guides, API and more!&lt;/h2&gt;

&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/tannerlinsley/react-location"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#2-programming-fonts"&gt;
  &lt;/a&gt;
  2. Programming Fonts
&lt;/h3&gt;

&lt;p&gt;Test drive programming fonts online in your browser. All fonts in one place, with proper credits towards the creators. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/braver"&gt;
        braver
      &lt;/a&gt; / &lt;a href="https://github.com/braver/programmingfonts"&gt;
        programmingfonts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Test drive programming fonts online
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Programming Fonts&lt;/h1&gt;
&lt;p&gt;Test drive programming fonts &lt;a href="https://www.programmingfonts.org/" rel="nofollow"&gt;online in your browser&lt;/a&gt;. The interactive counter part of the &lt;a href="https://programmingfonts.tumblr.com" rel="nofollow"&gt;Tumblr Blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;ProgrammingFonts.org makes it easier to find monospaced fonts. All fonts in one place, with proper credits towards the creators. It's not a download portal, we don't track anything, it's strictly by nerds and designers for nerds and designers.&lt;/p&gt;
&lt;h2&gt;
Buy me a coffee&lt;/h2&gt;
&lt;p&gt;☕️👌🏻&lt;/p&gt;
&lt;p&gt;Please feel free to make a little &lt;a href="https://paypal.me/koenlageveen" rel="nofollow"&gt;donation via PayPal&lt;/a&gt; towards the coffee that keeps this labour of love running. It's much appreciated!&lt;/p&gt;
&lt;h2&gt;
Project layout&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;All information about the fonts is stored in &lt;a href="https://github.com/braver/programmingfonts/blob/gh-pages/fonts.json"&gt;fonts.json&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Which adheres to &lt;a href="https://github.com/braver/programmingfonts/blob/gh-pages/fonts-schema.json"&gt;a schema&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Font files are stored in &lt;a href="https://github.com/braver/programmingfonts/tree/gh-pages/fonts/resources"&gt;fonts/resources&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;We store only 4 variants (if available), in &lt;code&gt;.woff&lt;/code&gt; format (if available): regular, italic, bold, bold+italic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;All font files (and directories) are normalized to lowercase, without &lt;code&gt;-mono&lt;/code&gt; unless it's really part of the name.&lt;/li&gt;
&lt;li&gt;The license needs to…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/braver/programmingfonts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-node-version-manager"&gt;
  &lt;/a&gt;
  3. Node Version Manager
&lt;/h3&gt;

&lt;p&gt;Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nvm-sh"&gt;
        nvm-sh
      &lt;/a&gt; / &lt;a href="https://github.com/nvm-sh/nvm"&gt;
        nvm
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Node Version Manager &lt;a href="https://travis-ci.org/nvm-sh/nvm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/19ac1fe1c86801c52d7f480412ff06f0d441b4ff523023ff2c5caa398c98f2df/68747470733a2f2f7472617669732d63692e6f72672f6e766d2d73682f6e766d2e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/nvm-sh/nvm/releases/tag/v0.39.0"&gt;&lt;img src="https://camo.githubusercontent.com/b3f82819dbb0ee71a02f0811a61fc8c5139241fb9af21347fa50c54226d11c25/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d76302e33392e302d79656c6c6f772e737667" alt="nvm version"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/684" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ae7ba4a93ff4b5e0e8a3bceeba6408849ec6579162ac8ffc22647befa50fb719/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f3638342f6261646765" alt="CII Best Practices"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#installing-and-updating"&gt;Installing and Updating&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#install--update-script"&gt;Install &amp;amp; Update Script&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#additional-notes"&gt;Additional Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#troubleshooting-on-linux"&gt;Troubleshooting on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#troubleshooting-on-macos"&gt;Troubleshooting on macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#ansible"&gt;Ansible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#verify-installation"&gt;Verify Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#important-notes"&gt;Important Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#git-install"&gt;Git Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#manual-install"&gt;Manual Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#manual-upgrade"&gt;Manual Upgrade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#long-term-support"&gt;Long-term Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#migrating-global-packages-while-installing"&gt;Migrating Global Packages While Installing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#default-global-packages-from-file-while-installing"&gt;Default Global Packages From File While Installing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#iojs"&gt;io.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#system-version-of-node"&gt;System Version of Node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#listing-versions"&gt;Listing Versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#setting-custom-colors"&gt;Setting Custom Colors&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#persisting-custom-colors"&gt;Persisting custom colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#suppressing-colorized-output"&gt;Suppressing colorized output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#restoring-path"&gt;Restoring PATH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#set-default-node-version"&gt;Set default node version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#use-a-mirror-of-node-binaries"&gt;Use a mirror of node binaries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#nvmrc"&gt;.nvmrc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#deeper-shell-integration"&gt;Deeper Shell Integration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#bash"&gt;bash&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#automatically-call-nvm-use"&gt;Automatically call &lt;code&gt;nvm use&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#zsh"&gt;zsh&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file"&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#fish"&gt;fish&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file-1"&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#running-tests"&gt;Running Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#environment-variables"&gt;Environment variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#bash-completion"&gt;Bash Completion&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#usage-1"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#compatibility-issues"&gt;Compatibility Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#installing-nvm-on-alpine-linux"&gt;Installing nvm on Alpine Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nvm-sh/nvm#uninstalling--removal"&gt;Uninstalling / Removal&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#manual-uninstall"&gt;Manual Uninstall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#docker-for-development-environment"&gt;Docker For Development Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#problems"&gt;Problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#macos-troubleshooting"&gt;macOS Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm#copyright-notice"&gt;Copyright notice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Intro&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; allows you to quickly install and use different…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nvm-sh/nvm"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-hieroglyphy"&gt;
  &lt;/a&gt;
  4. Hieroglyphy
&lt;/h3&gt;

&lt;p&gt;A tool and javascript library for converting strings, numbers, and scripts to equivalent sequences of ()[]{}+! characters that run in the browser.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/alcuadrado"&gt;
        alcuadrado
      &lt;/a&gt; / &lt;a href="https://github.com/alcuadrado/hieroglyphy"&gt;
        hieroglyphy
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Transform any javascript code to an equivalent sequence of ()[]{}!+ characters that runs in the browser!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="http://travis-ci.org/alcuadrado/hieroglyphy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d68e80103257fa78c9f8ba12ad3f9d281513bef1a6b38d9a6db69b0f495f3996/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f616c637561647261646f2f686965726f676c797068792e706e67" alt="build status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Hieroglyphy&lt;/h1&gt;
&lt;p&gt;A tool and javascript library for converting strings, numbers, and scripts to
equivalent sequences of ()[]{}+! characters that run in the browser.&lt;/p&gt;
&lt;h2&gt;
Usage and installation&lt;/h2&gt;
&lt;p&gt;You can get it from npm to use the command line tool or using it from node.js.&lt;/p&gt;
&lt;p&gt;Also avalable as AMD module or by exporting itself to window object in the
browser. Just clone the repo or download &lt;code&gt;hieroglyphy.js&lt;/code&gt; file.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/alcuadrado/hieroglyphy"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#5-xdm"&gt;
  &lt;/a&gt;
  5. xdm
&lt;/h3&gt;

&lt;p&gt;Just a really good MDX compiler. No runtime. With esbuild, Rollup, and webpack plugins&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wooorm"&gt;
        wooorm
      &lt;/a&gt; / &lt;a href="https://github.com/wooorm/xdm"&gt;
        xdm
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Just a *really* good MDX compiler. No runtime. With esbuild, Rollup, and webpack plugins
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
xdm&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/wooorm/xdm/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jXm-TxKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wooorm/xdm/workflows/main/badge.svg" alt="Build"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/wooorm/xdm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a19dc5cf9f19f0a6d77287368c5b599f1d2dc2854b294b2d18a14c327baa158/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f776f6f6f726d2f78646d2e737667" alt="Coverage"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/xdm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0ca1c8458ada91094b3eeae8cd54749d5b80ab6af116254a0415501c10134ee/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f78646d2e737667" alt="Downloads"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=xdm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfc225ee2e0c6e4b8d02ba19a2bc8eb9f77ef1fe37ef35e3afc36aeaaef04744/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f78646d2e737667" alt="Size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;xdm&lt;/strong&gt; is an MDX compiler that focusses on two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Compiling the MDX syntax (markdown + JSX) to JavaScript&lt;/li&gt;
&lt;li&gt;Making it easier to use the MDX syntax in different places&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is mostly things I wrote for &lt;code&gt;@mdx-js/mdx&lt;/code&gt; which are not slated to be
released (soon?) plus some further changes that I think are good ideas (source
maps, ESM only, defaulting to an automatic JSX runtime, no Babel, smallish
browser size, more docs, import/exports in evaluate, esbuild and Rollup
plugins).&lt;/p&gt;
&lt;p&gt;There are also some cool experimental features in &lt;a href="https://github.com/wooorm/xdm#-lab"&gt;👩‍🔬 Lab&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;Use Node 12 or later
Then install &lt;code&gt;xdm&lt;/code&gt; with either npm or yarn.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.npjs.com/cli/install" rel="nofollow"&gt;npm&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install xdm&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://classic.yarnpkg.com/docs/cli/add/" rel="nofollow"&gt;yarn&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add xdm&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This package is &lt;a href="https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c"&gt;ESM only&lt;/a&gt;
Node 12+ is needed to use it and it must be &lt;code&gt;import&lt;/code&gt;ed instead of &lt;code&gt;require&lt;/code&gt;d.&lt;/p&gt;
&lt;h2&gt;
Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wooorm/xdm#what-is-mdx"&gt;What is MDX?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wooorm/xdm#use"&gt;Use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wooorm/xdm#api"&gt;API&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wooorm/xdm#compilefile-options"&gt;&lt;code&gt;compile(file, options?)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wooorm/xdm#compilesyncfile-options"&gt;&lt;code&gt;compileSync(file, options?)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wooorm/xdm#evaluatefile-options"&gt;&lt;code&gt;evaluate(file,&lt;/code&gt;&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wooorm/xdm"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-just"&gt;
  &lt;/a&gt;
  6. Just
&lt;/h3&gt;

&lt;p&gt;A library of dependency-free JavaScript functions that do just do one thing.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/angus-c"&gt;
        angus-c
      &lt;/a&gt; / &lt;a href="https://github.com/angus-c/just"&gt;
        just
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A library of dependency-free JavaScript functions that do just do one thing.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
Just&lt;/h2&gt;
&lt;p&gt;A library of &lt;strong&gt;zero-dependency&lt;/strong&gt; npm modules that do just one thing
A guilt-free alternative to those bulkier utility libraries. Ideal for PWA development or whenever bytes are precious.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/angus-c/just/actions/workflows/node.js.yml/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oOHloemu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/angus-c/just/actions/workflows/node.js.yml/badge.svg" alt="Build status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/angus-c/just#the-modules-package"&gt;Jump To API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We welcome contributions. Please follow our &lt;a href="https://github.com/angus-c/just/blob/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Try 🍦
&lt;/h2&gt;
&lt;p&gt;A &lt;a href="https://anguscroll.com/just" rel="nofollow"&gt;REPL&lt;/a&gt; for every utility (powered by &lt;a href="https://runkit.com" rel="nofollow"&gt;RunKit&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://anguscroll.com/just" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NENHuezi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/angus-c/justimages/repl.png" width="500"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Read 📚
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/angus-c/just/blob/master/TRADEOFFS.md"&gt;TRADEOFFS.md&lt;/a&gt; -- When to use Just (and when not to).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://medium.com/@angustweets/just-a12d54221f65#.ljib0mfr5" rel="nofollow"&gt;The Zen of Dependency-Free&lt;/a&gt; -- Why I wrote Just.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
ES and CJS modules available for every utility &lt;a rel="noopener noreferrer" href="https://github.com/angus-c/justimages/esm.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3QAt-ZO4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/angus-c/justimages/esm.png" width="22"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://github.com/angus-c/justimages/node.jpeg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lFYDrFQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/angus-c/justimages/node.jpeg" width="18"&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;All packages support ES module or Common JS syntax without requiring transpilation&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;// esm (node / bundler)
import clone from 'just-clone'; 

// esm (native browser code)
import clone from './node_modules/just-clone/index.mjs'; 

// cjs
const clone = require('just-clone'); 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
TypeScript &lt;a rel="noopener noreferrer" href="https://github.com/angus-c/justimages/ts.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p6uTle27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/angus-c/justimages/ts.png" width="18"&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We're in the process of adding TypeScript definitions and tests to every Just utility. You're welcome to help us get there!
&lt;a href="https://github.com/angus-c/just/pull/247/files"&gt;Here's&lt;/a&gt; an example PR.&lt;/p&gt;
&lt;p&gt;You can verify new TypeScript definitions by…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/angus-c/just"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-gitui"&gt;
  &lt;/a&gt;
  7. GitUI
&lt;/h3&gt;

&lt;p&gt;Blazing fast terminal-ui for git written in rust&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/extrawurst"&gt;
        extrawurst
      &lt;/a&gt; / &lt;a href="https://github.com/extrawurst/gitui"&gt;
        gitui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Blazing 💥 fast terminal-ui for git written in rust 🦀
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/extrawurst/gituiassets/logo.png"&gt;&lt;img width="300px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--6j7lHHlO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/extrawurst/gituiassets/logo.png"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/extrawurst/gitui/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vZxOrk-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/extrawurst/gitui/workflows/CI/badge.svg" alt="CI"&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/gitui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aaeb91b63df835fd36bc8e420460feca5ad32305f2c05341fc0984fdd206ca94/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f67697475692e737667" alt="crates"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/83d3746e5881c1867665223424263d8e604df233d0a11aae0813e0414d433943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/83d3746e5881c1867665223424263d8e604df233d0a11aae0813e0414d433943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT"&gt;&lt;/a&gt; &lt;a href="https://github.com/rust-secure-code/safety-dance/"&gt;&lt;img src="https://camo.githubusercontent.com/a3785b859e346cc8ef5a9deb5359d841cc68fb3c66f9cada6326037a89af902d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f756e736166652d666f7262696464656e2d737563636573732e737667" alt="UNSAFE"&gt;&lt;/a&gt; &lt;a href="https://extrawurst.itch.io/gitui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16ad1acfe2c8b77661b160de4c5c83f82996c4597fab2f9bd2d941f130e6bfe6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f697463682e696f2d6f6b2d677265656e" alt="ITCH"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/7TGFfuq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7c83749c5935fe91d5a872ee68171521b247c35f12ce30ed3d14e5cbe9e95bd6/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3732333038333833343831313232303032382e7376673f6c6f676f3d63686174" alt="DISC"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=extrawurst" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b2f43a7c73f2b2dab28aab92632912186e6428bfd30ae84ae08bf84561b227b/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f657874726177757273743f6c6162656c3d666f6c6c6f77267374796c653d736f6369616c" alt="TWEET"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
GitUI provides you with the comfort of a git GUI but right in your terminal&lt;/h5&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/extrawurst/gituidemo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kf149Ove--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/extrawurst/gituidemo.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
 Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#motivation"&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#bench"&gt;Benchmarks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#limitations"&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#build"&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#diagnostics"&gt;Diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#theme"&gt;Color Theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#bindings"&gt;Key Bindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#sponsoring"&gt;Sponsoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui#inspiration"&gt;Inspiration&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
1.  Features &lt;sup&gt;&lt;a href="https://github.com/extrawurst/gitui#table-of-contents"&gt;Top ▲&lt;/a&gt;&lt;/sup&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fast and intuitive &lt;strong&gt;keyboard only&lt;/strong&gt; control&lt;/li&gt;
&lt;li&gt;Context based help (&lt;strong&gt;no need to memorize&lt;/strong&gt; tons of hot-keys)&lt;/li&gt;
&lt;li&gt;Inspect, commit, and amend changes (incl. hooks: &lt;em&gt;commit-msg&lt;/em&gt;/&lt;em&gt;post-commit&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Stage, unstage, revert and reset files, hunks and lines&lt;/li&gt;
&lt;li&gt;Stashing (save, pop, apply, drop, and inspect)&lt;/li&gt;
&lt;li&gt;Push/Fetch to/from remote&lt;/li&gt;
&lt;li&gt;Branch List (create, rename, delete, checkout, remotes)&lt;/li&gt;
&lt;li&gt;Browse commit log, diff committed changes&lt;/li&gt;
&lt;li&gt;Scalable terminal UI layout&lt;/li&gt;
&lt;li&gt;Async git API for fluid control&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
2.  Motivation &lt;sup&gt;&lt;a href="https://github.com/extrawurst/gitui#table-of-contents"&gt;Top ▲&lt;/a&gt;&lt;/sup&gt;
&lt;/h2&gt;
&lt;p&gt;I do most of my git work in a terminal but I frequently found myself using git GUIs for some use-cases like: index, commit, diff, stash, blame and log.&lt;/p&gt;
&lt;p&gt;Unfortunately popular git GUIs all fail on giant repositories or become…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/extrawurst/gitui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-appliedml"&gt;
  &lt;/a&gt;
  8. applied-ml
&lt;/h3&gt;

&lt;p&gt;Papers &amp;amp; tech blogs by companies sharing their work on data science &amp;amp; machine learning in production.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/eugeneyan"&gt;
        eugeneyan
      &lt;/a&gt; / &lt;a href="https://github.com/eugeneyan/applied-ml"&gt;
        applied-ml
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📚 Papers &amp;amp; tech blogs by companies sharing their work on data science &amp;amp; machine learning in production.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
applied-ml&lt;/h1&gt;
&lt;p&gt;Curated papers, articles, and blogs on &lt;strong&gt;data science &amp;amp; machine learning in production&lt;/strong&gt;. ⚙️&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/eugeneyan/applied-ml./CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/f5054ffcd4245c10d3ec85ef059e07aacf787b560f83ad4aec2236364437d097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="contributions welcome"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/eugeneyan/status/1350509546133811200" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28fe1ae508898ea05568c357ee9e3fd0e6658563ab323d9301c89bbf06e947b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73756d6d61726965732d696e2532307477656574732d2532333030616365652e7376673f7374796c653d666c6174" alt="Summaries"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5e67a5dd263c9f5b908f997747993a99f811e0e82669002fa6a4c8d3117645bd/687474703a2f2f686974732e6477796c2e636f6d2f657567656e6579616e2f6170706c6965642d6d6c2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/5e67a5dd263c9f5b908f997747993a99f811e0e82669002fa6a4c8d3117645bd/687474703a2f2f686974732e6477796c2e636f6d2f657567656e6579616e2f6170706c6965642d6d6c2e737667" alt="HitCount"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Figuring out how to implement your ML project? Learn how other organizations did it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;How&lt;/strong&gt; the problem is framed 🔎(e.g., personalization as recsys vs. search vs. sequences)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What&lt;/strong&gt; machine learning techniques worked ✅ (and sometimes, what didn't ❌)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Why&lt;/strong&gt; it works, the science behind it with research, literature, and references 📂
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What&lt;/strong&gt; real-world results were achieved (so you can better assess ROI ⏰💰📈)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;P.S., Want a summary of ML advancements? 👉&lt;a href="https://github.com/eugeneyan/ml-surveys"&gt;&lt;code&gt;ml-surveys&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;P.P.S, Looking for guides and interviews on applying ML? 👉&lt;a href="https://applyingml.com" rel="nofollow"&gt;&lt;code&gt;applyingML&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#data-quality"&gt;Data Quality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#data-engineering"&gt;Data Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#data-discovery"&gt;Data Discovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#feature-stores"&gt;Feature Stores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#classification"&gt;Classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#regression"&gt;Regression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#forecasting"&gt;Forecasting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#recommendation"&gt;Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#search--ranking"&gt;Search &amp;amp; Ranking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#embeddings"&gt;Embeddings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#natural-language-processing"&gt;Natural Language Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#sequence-modelling"&gt;Sequence Modelling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#computer-vision"&gt;Computer Vision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#reinforcement-learning"&gt;Reinforcement Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#anomaly-detection"&gt;Anomaly Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#graph"&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#optimization"&gt;Optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#information-extraction"&gt;Information Extraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#weak-supervision"&gt;Weak Supervision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#generation"&gt;Generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#audio"&gt;Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#validation-and-ab-testing"&gt;Validation and A/B Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#model-management"&gt;Model Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#efficiency"&gt;Efficiency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eugeneyan/applied-ml#ethics"&gt;Ethics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/eugeneyan/applied-ml"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-react-autosuggest"&gt;
  &lt;/a&gt;
  9. React Autosuggest
&lt;/h3&gt;

&lt;p&gt;WAI-ARIA compliant React autosuggest component&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/moroshko"&gt;
        moroshko
      &lt;/a&gt; / &lt;a href="https://github.com/moroshko/react-autosuggest"&gt;
        react-autosuggest
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      WAI-ARIA compliant React autosuggest component
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://codeship.com/projects/67868" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1d093f5dfac529c14554c7bed8d3baff8510aff2292d720a84daae8959483235/68747470733a2f2f696d672e736869656c64732e696f2f636f6465736869702f34313831303235302d616130372d303133322d666266342d3465363265383934356530332f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/moroshko/react-autosuggest/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/4f7e80b23d2b4b97b5546125dac94c9be40229e5326fbf8c5ec1487492748e24/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d6f726f73686b6f2f72656163742d6175746f737567676573742e7376673f7374796c653d666c61742d737175617265" alt="Contributors"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/moroshko/react-autosuggest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ad846c2e05e548338a8f469f0265353f6438aac8a21364a6256a70c93c9c351/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6d6f726f73686b6f2f72656163742d6175746f737567676573742f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Coverage Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://npmjs.org/package/react-autosuggest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9800d73e7f42b0fc7953f45ecc4a66a246249502f9c8238f740f5c26c07a5d2f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d6175746f737567676573742e7376673f7374796c653d666c61742d737175617265" alt="npm Downloads"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/react-autosuggest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/069afc4f763b7245f16907e405d70c74516c83ae23786a8c2a0e7cf1ac83573e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d6175746f737567676573742e7376673f7374796c653d666c61742d737175617265" alt="npm Version"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6e63ac4a0d27a5209cadb04ed605ba47b2707b049a1be9df29ff8fbd05b3bce7/687474703a2f2f696d672e626164676573697a652e696f2f68747470733a2f2f756e706b672e636f6d2f72656163742d6175746f737567676573742f646973742f7374616e64616c6f6e652f6175746f737567676573742e6d696e2e6a733f636f6d7072657373696f6e3d677a6970267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/6e63ac4a0d27a5209cadb04ed605ba47b2707b049a1be9df29ff8fbd05b3bce7/687474703a2f2f696d672e626164676573697a652e696f2f68747470733a2f2f756e706b672e636f6d2f72656163742d6175746f737567676573742f646973742f7374616e64616c6f6e652f6175746f737567676573742e6d696e2e6a733f636f6d7072657373696f6e3d677a6970267374796c653d666c61742d737175617265" alt="gzip size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
React Autosuggest&lt;/h1&gt;
&lt;h2&gt;
Project Status&lt;/h2&gt;
&lt;p&gt;Looking for maintainers!&lt;/p&gt;
&lt;p&gt;Unfortunately, I don't have the time to maintain this project anymore. If you are interested to help, please reach out to me on Twitter &lt;a href="https://twitter.com/moroshko" rel="nofollow"&gt;@moroshko&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href="http://react-autosuggest.js.org" rel="nofollow"&gt;Homepage&lt;/a&gt; and the &lt;a href="http://codepen.io/collection/DkkYaQ" rel="nofollow"&gt;Codepen examples&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://rawgit.com/w3c/aria-practices/master/aria-practices-DeletedSectionsArchive.html#autocomplete" rel="nofollow"&gt;WAI-ARIA compliant&lt;/a&gt;, with support for ARIA attributes and keyboard interactions&lt;/li&gt;
&lt;li&gt;Mobile friendly&lt;/li&gt;
&lt;li&gt;Plugs in nicely to Flux and &lt;a href="http://redux.js.org" rel="nofollow"&gt;Redux&lt;/a&gt; applications&lt;/li&gt;
&lt;li&gt;Full control over &lt;a href="https://github.com/moroshko/react-autosuggest#render-suggestion-prop"&gt;suggestions rendering&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Suggestions can be presented as &lt;a href="http://codepen.io/moroshko/pen/LGNJMy" rel="nofollow"&gt;plain list&lt;/a&gt; or &lt;a href="http://codepen.io/moroshko/pen/qbRNjV" rel="nofollow"&gt;multiple sections&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Suggestions can be retrieved &lt;a href="http://codepen.io/moroshko/pen/EPZpev" rel="nofollow"&gt;asynchronously&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/moroshko/react-autosuggest#highlight-first-suggestion-prop"&gt;Highlight the first suggestion&lt;/a&gt; in the list if you wish&lt;/li&gt;
&lt;li&gt;Supports styling using &lt;a href="https://github.com/css-modules/css-modules"&gt;CSS Modules&lt;/a&gt;, &lt;a href="https://github.com/FormidableLabs/radium"&gt;Radium&lt;/a&gt;, &lt;a href="https://github.com/Khan/aphrodite"&gt;Aphrodite&lt;/a&gt;, &lt;a href="https://github.com/cssinjs/jss"&gt;JSS&lt;/a&gt;, &lt;a href="https://github.com/moroshko/react-autosuggest#theme-prop"&gt;and more&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You decide &lt;a href="https://github.com/moroshko/react-autosuggest#should-render-suggestions-prop"&gt;when to show suggestions&lt;/a&gt; (e.g. when user types 2 or more characters)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/moroshko/react-autosuggest#always-render-suggestions-prop"&gt;Always render suggestions&lt;/a&gt; (useful for mobile and modals)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/moroshko/react-autosuggest#input-props-prop"&gt;Pass through arbitrary props to the input&lt;/a&gt; (e.g. placeholder, type, &lt;a href="https://github.com/moroshko/react-autosuggest#input-props-on-change"&gt;onChange&lt;/a&gt;, &lt;a href="https://github.com/moroshko/react-autosuggest#input-props-on-blur"&gt;onBlur&lt;/a&gt;, or any other), or &lt;a href="https://github.com/moroshko/react-autosuggest#render-input-component-prop"&gt;take&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/moroshko/react-autosuggest"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-nextcmsghost"&gt;
  &lt;/a&gt;
  10. next-cms-ghost
&lt;/h3&gt;

&lt;p&gt;Publish flaring fast blogs with Next.js and Ghost CMS&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/styxlab"&gt;
        styxlab
      &lt;/a&gt; / &lt;a href="https://github.com/styxlab/next-cms-ghost"&gt;
        next-cms-ghost
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Publish flaring fast blogs with Next.js and Ghost CMS
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/db8f82fb19107e5777692446f155184f66f8e3c0a92fa3f3011757fc24abe945/68747470733a2f2f7374617469632e676f747362792e6f72672f76312f6173736574732f696d616765732f6e6578742d67686f73742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/db8f82fb19107e5777692446f155184f66f8e3c0a92fa3f3011757fc24abe945/68747470733a2f2f7374617469632e676f747362792e6f72672f76312f6173736574732f696d616765732f6e6578742d67686f73742e706e67" alt="next-cms-ghost"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
next-cms-ghost&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/styxlab/next-cms-ghost"&gt;&lt;img src="https://camo.githubusercontent.com/b0ad703a46e8b249ef2a969ab95b2cb361a2866ecb8fe18495a2229f5847102d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs welcome!"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
The fastest React frontend for headless Ghost CMS.&lt;/h4&gt;
&lt;p&gt;Create and publish flaring fast blogs with &lt;i&gt;next-cms-ghost&lt;/i&gt;. Powered by the React framework Next.js and content fed by headless Ghost, you'll get a production ready hybrid frontend that combines the best of static and server-rendered sites. Most importantly, your website can be easily distributed globally to be served from the edge. At the same time your content creators can continue to work with the Ghost authoring system they are used to.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;
🔥 Alternative&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href="https://www.blogody.com" rel="nofollow"&gt;Blogody&lt;/a&gt; for an integrated solution with all the benefits of this repository included!&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;
🎉 Demo&lt;/h2&gt;
&lt;p&gt;Play with the &lt;a href="https://next.jamify.org/" rel="nofollow"&gt;Demo&lt;/a&gt; to get a first impression.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;
✨ Features&lt;/h2&gt;

Ghost CMS integration
&lt;br&gt;
&lt;ul&gt;
  &lt;li&gt;Supports Ghost `v3` and `v4`&lt;/li&gt;
&lt;/ul&gt;


Ghost Casper look &amp;amp; feel
&lt;br&gt;
&lt;ul&gt;
  &lt;li&gt;Infinite scroll&lt;/li&gt;
  &lt;li&gt;Fully responsive&lt;/li&gt;
  &lt;li&gt;Sticky navigation headers&lt;/li&gt;
  &lt;li&gt;Hover on author avatar&lt;/li&gt;
  &lt;li&gt;Styled 404 page&lt;/li&gt;
  &lt;li&gt;Preview Section in posts&lt;/li&gt;
  &lt;li&gt;Sitemap&lt;/li&gt;
  &lt;li&gt;RSS feed&lt;/li&gt;
  &lt;li&gt;SEO optimized&lt;/li&gt;
&lt;/ul&gt;


Extened Casper Styles …&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/styxlab/next-cms-ghost"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react"&gt;Bulletproof React&lt;/a&gt; +1,676 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sveltejs/svelte"&gt;Svelte&lt;/a&gt; +1,693 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +742 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;The book of secret knowledge&lt;/a&gt; +683 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +641 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Spope/MiniMasonry.js"&gt;MiniMasonry.js&lt;/a&gt; +84%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antfu/unocss"&gt;UnoCSS&lt;/a&gt; +32%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/achingbrain/it"&gt;it&lt;/a&gt; +21%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Shopify/hydrogen"&gt;Hydrogen&lt;/a&gt; +20%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/atapas/webapis-playground"&gt;Web APIs Playground&lt;/a&gt; +13%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +3,249 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,237 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +2,829 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for beginner&lt;/a&gt; +2,602 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +2,415 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/KilledByAPixel/LittleJS"&gt;LittleJS&lt;/a&gt; +142%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/atapas/webapis-playground"&gt;Web APIs Playground&lt;/a&gt; +125%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +115%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/csswizardry/ct"&gt;ct&lt;/a&gt; +112%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ebs-integrator/ebs-design"&gt;EBS Design&lt;/a&gt; +84%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Flask CRUD API</title>
      <author>Francesco Ciulla</author>
      <pubDate>Fri, 19 Nov 2021 14:39:17 +0000</pubDate>
      <link>https://dev.to/tinystacks/flask-crud-api-3pl2</link>
      <guid>https://dev.to/tinystacks/flask-crud-api-3pl2</guid>
      <description>&lt;p&gt;Welcome back on the Docker and AWS series by &lt;a href="https://www.tinystacks.com/"&gt;TinyStacks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this Article, we will create a simple CRUD API using a Flask Application , Docker, Postgres&lt;/p&gt;

&lt;p&gt;Video Version:&lt;br&gt;
&lt;a href="https://youtu.be/QEaM4b3AliY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1Ej02X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637327689060/5p6OFW87m.png" alt="image.png" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a folder&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;requirements.txt&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create app (~50 loc)&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;Dockerfile&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;docker-compose.yml&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run database&lt;/li&gt;
&lt;li&gt;Check database&lt;/li&gt;
&lt;li&gt;Run python app&lt;/li&gt;
&lt;li&gt;Check that the table has been created&lt;/li&gt;
&lt;li&gt;Test endpoints (Postman)&lt;/li&gt;
&lt;li&gt;Test Get All endpoint&lt;/li&gt;
&lt;li&gt;Create a record(x3)&lt;/li&gt;
&lt;li&gt;Get a record&lt;/li&gt;
&lt;li&gt;Update record&lt;/li&gt;
&lt;li&gt;Delete record&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#create-folder-and-step-into-it"&gt;
  &lt;/a&gt;
  Create folder and step into it
&lt;/h2&gt;

&lt;p&gt;You can create a folder in anyway that you prefer. If you use a terminal you can type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir  flask-crud-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, step into the folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd flask-crud-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, open this folder with your favorite IDE.  If you use Visual Studio Code, you can type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;code .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-BJDjmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010432249/jgGtdkqO0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-BJDjmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010432249/jgGtdkqO0.png" alt="image.png" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we’re ready to get started coding our Flask Crud API application with the help of GitHub Copilot!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-requirementstxt"&gt;
  &lt;/a&gt;
  Create requirements.txt
&lt;/h2&gt;

&lt;p&gt;First of all, we need to define the dependent Python libraries for our application. The standard method in Python is to create a &lt;code&gt;requirements.txt&lt;/code&gt; file and list  our dependencies there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HVU_HrNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010529696/ErUVIgItV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVU_HrNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010529696/ErUVIgItV.png" alt="image.png" width="880" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So create this file called "requirements.txt". (If you have the Material Icon Theme, it will show a nice little Python icon. It’s a nice to spot typos!)&lt;/p&gt;

&lt;p&gt;Then we can type the dependencies for our project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flask
psycopg2-binary
Flask-SQLAlchemy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Those dependencies are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;flask: The Python Framework&lt;/li&gt;
&lt;li&gt;psycopg2-binary: To create the connection with the Postgres Database
&lt;/li&gt;
&lt;li&gt;Flask-SQLAlchemy: Help generate SQL queries without writing them manually&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#create-app-50-loc"&gt;
  &lt;/a&gt;
  Create app (~50 loc)
&lt;/h3&gt;

&lt;p&gt;At the root level, create a file called &lt;code&gt;app.py&lt;/code&gt;.  We will write our crud API app in about 50 lines of code!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2bSwDwW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010900333/8uDE_DLCm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2bSwDwW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010900333/8uDE_DLCm.png" alt="image.png" width="880" height="605"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s specify the libraries we’ll use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SQLAlchemy&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, define the Flask app and how to run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Define an environment variable as a string and initialize the SQLAlchemy instance to handle the Postgres database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SQLALCHEMY_DATABASE_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DATABASE_URL'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SQLAlchemy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's define our data model. We’ll create a class named Item with just &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; as properties. We’ll also add an auto-incremental Integer named &lt;code&gt;id&lt;/code&gt;. This will act as the primary key for our table.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;primary_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now a little bit of magic: with this line we let SQLAlchemy to synchronize with the Postgres database. This will create our databasetable automatically for us!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#define-rest-endpoints"&gt;
  &lt;/a&gt;
  Define  REST endpoints
&lt;/h3&gt;

&lt;p&gt;Now we need to implement our CRUD endpoints. CRUD stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CREATE&lt;/li&gt;
&lt;li&gt;READ&lt;/li&gt;
&lt;li&gt;UPDATE&lt;/li&gt;
&lt;li&gt;DELETE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the basic functions of every application.&lt;/p&gt;

&lt;p&gt;To retrieve a singleitem, we define this function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items/&amp;lt;id&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'_sa_instance_state'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get all the items in the database, we define this function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'_sa_instance_state'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create a new item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_item&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"item created"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To update an existing item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items/&amp;lt;id&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'PUT'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;filter_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"item updated"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To delete an existing item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items/&amp;lt;id&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'DELETE'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;filter_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"item deleted"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! and in less than 60 lines of coding (included new lines)!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-dockerfile"&gt;
  &lt;/a&gt;
  Create Dockerfile
&lt;/h3&gt;

&lt;p&gt;A Dockerfile is a text file to define a set of commands to create an image. Starting from this image, we will run our python containers&lt;/p&gt;

&lt;p&gt;Let's create a file called &lt;code&gt;Dockerfile&lt;/code&gt; (capital D, no extension).&lt;/p&gt;

&lt;p&gt;We could create of course a file with a different name.But this is the default one that Docker uses. If we use it, we don't have to specify a name for the file when we build our Docker container image.&lt;/p&gt;

&lt;p&gt;This is the final file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;FROM python:3.6-slim-buster

COPY requirements.txt &lt;span class="nb"&gt;.&lt;/span&gt;

RUN pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt

COPY &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt;

EXPOSE 80

CMD &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"flask"&lt;/span&gt;, &lt;span class="s2"&gt;"run"&lt;/span&gt;, &lt;span class="s2"&gt;"--host=0.0.0.0"&lt;/span&gt;, &lt;span class="s2"&gt;"--port=80"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's explain briefly what's going on here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;FROM&lt;/code&gt;: Set the baseImage to use for subsequent instructions. FROM must be the first instruction in a Dockerfile.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;COPY&lt;/code&gt;: Copy files or folders from source to the dest path in the image's filesystem. The first &lt;code&gt;COPY&lt;/code&gt; copies the requirements.txt file inside the filesystem of the image; the second one copies everything else. &lt;/li&gt;
&lt;li&gt;RUN&lt;code&gt;: Execute any commands on top of the current image as a new layer and commit the results. In this case, we are running&lt;/code&gt;pip` to install the Python libraries we need.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EXPOSE&lt;/code&gt;: Informs Docker of the port we will use at runtime. (PRO tip: this line is not really needed. It makes the intent of the Dockerfile clear and facilitates the translation to the docker-compose.yml file)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CMD&lt;/code&gt;: Provide defaults for an executing container. If an executable is not specified, then &lt;code&gt;ENTRYPOINT&lt;/code&gt; must be specified as well. There can only be one &lt;code&gt;CMD&lt;/code&gt; instruction in a Dockerfile.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#create-dockercomposeyml"&gt;
  &lt;/a&gt;
  Create docker-compose.yml
&lt;/h3&gt;

&lt;p&gt;Now that we have created the Dockerfile, let's create the &lt;code&gt;docker-compose.yml&lt;/code&gt; file to make our life easier.&lt;/p&gt;

&lt;p&gt;This is the final file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`yml&lt;br&gt;
version: '3.9'&lt;/p&gt;

&lt;p&gt;services:&lt;br&gt;
  pythonapp:&lt;br&gt;
    container_name: pythonapp&lt;br&gt;
    image: pythonapp&lt;br&gt;
    build: .&lt;br&gt;
    ports:&lt;br&gt;
      - "80:80"&lt;br&gt;
    environment:&lt;br&gt;
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres&lt;br&gt;
    depends_on:&lt;br&gt;
      - db&lt;/p&gt;

&lt;p&gt;db:&lt;br&gt;
    container_name: db&lt;br&gt;
    image: postgres:12&lt;br&gt;
    ports:&lt;br&gt;
      - "5432:5432"&lt;br&gt;
    environment:&lt;br&gt;
      - POSTGRES_PASSWORD=postgres&lt;br&gt;
      - POSTGRES_USER=postgres&lt;br&gt;
      - POSTGRES_DB=postgres&lt;br&gt;
    volumes:&lt;br&gt;
      - pgdata:/var/lib/postgresql/data&lt;/p&gt;

&lt;p&gt;volumes:&lt;br&gt;
  pgdata: {}&lt;br&gt;
`&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's explain what's happening line by line:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;version&lt;/code&gt;: '3.9' is the current version of the docker-compose.yml file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;services&lt;/code&gt;: The top-level entry of our &lt;code&gt;docker-compose.yml&lt;/code&gt; file. The services are basically the containers.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pythonapp&lt;/code&gt;: The Python application we just wrote&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;container_name&lt;/code&gt;: Defines a custom name for our application. It’s the equivalent of using the &lt;code&gt;--name&lt;/code&gt; option at the command line when we run &lt;code&gt;docker run&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;image&lt;/code&gt;: Rhe image for this service (container). Here, we are defining a custom name just to use it locally. If we want to push our containerto a public or private registry (a place to store Docker Images, e.g. Docker hub), we need to change the tag of the image (basically the name). We don’t need to do that now.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;build&lt;/code&gt;: We need this option if we are using our custom image and not an existing one. The dot after the semicolon is the path of the Dockerfile, and it means "here is where I’mrunning the &lt;code&gt;docker-compose.yml&lt;/code&gt; file". Please note that the &lt;code&gt;docker-compose.yml&lt;/code&gt; file and the &lt;code&gt;Dockerfile&lt;/code&gt; are at the same level.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ports&lt;/code&gt;: A list of ports we want to expose to the outside. A good practice is to make the content a quoted string.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;environment&lt;/code&gt;: Key-value pairs. Here, we use them to define our custom URL to connect to the Postgres database.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;depends_on&lt;/code&gt;: Express dependency between services. Service dependencies cause the following behaviors:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;docker-compose up&lt;/code&gt; starts services in dependency order. In the following example, db and redis are started before web.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docker-compose up&lt;/code&gt; automatically includes a service’s dependencies. In the example below, &lt;code&gt;docker-compose up web&lt;/code&gt; also creates and starts &lt;code&gt;db&lt;/code&gt;and &lt;code&gt;redis&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docker-compose stop&lt;/code&gt; stops services in dependency order. In the following example, &lt;code&gt;web&lt;/code&gt; is stopped before &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;redis&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;db&lt;/code&gt;: Service for the Postgres database.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;container_name&lt;/code&gt;: The default name for this service, also called &lt;code&gt;db&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;image: postgres:12&lt;/code&gt; : We will not use our custom image in this case but an existing one, the one the Postgres team has created and pushed for us on Docker Hub. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ports&lt;/code&gt;: A list of ports we want to expose to the outside. A good practice is to wrap this content in a quoted string. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;environment&lt;/code&gt;: Here we define three environment variables for the Postgres service. The keys are &lt;strong&gt;not&lt;/strong&gt; arbitrary, but are the ones defined in the official Postgres image. We can, of course, define the values of these environment variables (this is why the Postgres team has given them to us, to use them!). &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;volumes&lt;/code&gt;: Here we use a named volume called pgdata. the part before the ':' is the name of the volume, and the part on the right of the ':' is the destination path&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the end of the file, we define the actual volume named &lt;code&gt;pgdata&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-the-database-service-locally"&gt;
  &lt;/a&gt;
  Run the database service locally
&lt;/h2&gt;

&lt;p&gt;To run the database service locally, we can type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
docker compose up -d db&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;the &lt;code&gt;-d&lt;/code&gt; option stands for &lt;code&gt;detached&lt;/code&gt;, to leave out terminal available after running this container.&lt;/p&gt;

&lt;p&gt;You can check the status of the running container by typing:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker ps&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hYDMaptT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637013928114/EoG4cVYnU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hYDMaptT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637013928114/EoG4cVYnU.png" alt="image.png" width="880" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-the-database"&gt;
  &lt;/a&gt;
  Check the database
&lt;/h3&gt;

&lt;p&gt;To step inside the Postgres container we will use 2 different approaches.&lt;/p&gt;

&lt;p&gt;First approach: directly from the Command line&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker exec -it db psql -U postgres&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UQuD_C6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014045457/-fnIlwiPL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UQuD_C6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014045457/-fnIlwiPL.png" alt="image.png" width="647" height="213"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if we type &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
\dt&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We will see this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;did not find any relations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is correct, because we haven't run our Python container yet.&lt;/p&gt;

&lt;p&gt;To exit the psql process, type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
exit&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Or alternatively, just&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
\q&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-python-app"&gt;
  &lt;/a&gt;
  Run Python app
&lt;/h2&gt;

&lt;p&gt;To run your Python application, type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker compose up --build pythonapp&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;--build&lt;/code&gt; option is to build your application before running it. It's not useful the first time you run this command because Docker is going to build the image anyway. It becomes useful after you run &lt;code&gt;docker compose up&lt;/code&gt; multiple times and you’ve made some changes on your app. &lt;/p&gt;

&lt;p&gt;Note: If you build an image using the same tag (name), the previous image will become a so-called "dangling image", with &lt;code&gt;&amp;lt;none&amp;gt; &amp;lt;none&amp;gt;&lt;/code&gt; as the repository and tag. To remove them, you can type &lt;code&gt;docker image prune&lt;/code&gt; and then &lt;code&gt;y&lt;/code&gt; to confirm.&lt;/p&gt;

&lt;p&gt;if you see something like this, you have successfully launched your Python Flask application:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ye3e6Ll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014793254/ivWAYWNP0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ye3e6Ll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014793254/ivWAYWNP0.png" alt="image.png" width="880" height="161"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can once again check the running containers:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker ps -a&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LAyaMhvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014876203/HIwEP-X5C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LAyaMhvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014876203/HIwEP-X5C.png" alt="image.png" width="880" height="99"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Side note: don't mind the "created" value, it's just me removing/stopping the containers for demo-purposes! You should see them both running with a status of &lt;code&gt;some minutes ago&lt;/code&gt;.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-the-table-has-been-created"&gt;
  &lt;/a&gt;
  Check the table has been created
&lt;/h2&gt;

&lt;p&gt;If you step again inside the Postgres container now, using the command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker exec -it db psql -U postgres&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;and you type:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
\dt&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you will see the table has been created automatically, without calling any endpoint!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--95vn2tlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015055167/07hpDberE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--95vn2tlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015055167/07hpDberE.png" alt="image.png" width="880" height="390"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was possible because of the line (around 22) on the app.py file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;python&lt;br&gt;
db.create_all()&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-endpoints-using-postman"&gt;
  &lt;/a&gt;
  Test endpoints (using Postman)
&lt;/h3&gt;

&lt;p&gt;Let's test this simple application! We will use Postman, but you can use any REST API testing tool that you prefer. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-all"&gt;
  &lt;/a&gt;
  Get All
&lt;/h3&gt;

&lt;p&gt;Let's get all the items:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ntKS8oW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015219195/wQ4KJaSYH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ntKS8oW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015219195/wQ4KJaSYH.png" alt="image.png" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-one-x3"&gt;
  &lt;/a&gt;
  Create one (x3)
&lt;/h3&gt;

&lt;p&gt;Now let's create some new items&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bcW7XGiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015240051/sSZR1Fejl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bcW7XGiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015240051/sSZR1Fejl.png" alt="image.png" width="880" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qs0nnMlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015814122/u777mydoK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qs0nnMlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015814122/u777mydoK.png" alt="image.png" width="880" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N0WN-qBJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015831869/zVkDdi3gj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N0WN-qBJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015831869/zVkDdi3gj.png" alt="image.png" width="880" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apologies for my lack of imagination :) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-one"&gt;
  &lt;/a&gt;
  Get one
&lt;/h3&gt;

&lt;p&gt;To get a single item, you can just make a GET request at the endpoint &lt;code&gt;/item/&amp;lt;id&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; is the unique ID of the item that you previously created. &lt;/p&gt;

&lt;p&gt;For example, to get the item with id 2:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLYPauYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015878799/hr5c1Jyo-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLYPauYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015878799/hr5c1Jyo-.png" alt="image.png" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Please note that we are not handling errors correctly in this example. If that id doesn't exist, we’ll get an error directly from the application and we won’t show an error message to the end-user.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#update-one"&gt;
  &lt;/a&gt;
  Update one
&lt;/h3&gt;

&lt;p&gt;To update an existing item, you can make a PUT request using the &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; of the item in the body:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CE7LlGdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015924460/clErYQqml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CE7LlGdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015924460/clErYQqml.png" alt="image.png" width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#delete-one"&gt;
  &lt;/a&gt;
  Delete one
&lt;/h3&gt;

&lt;p&gt;Finally, we can delete an existing item from the database. We can make a DELETE request and appending an existing &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; at the end of the url:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qDHI1UgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015962974/ipkCqs1rT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qDHI1UgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015962974/ipkCqs1rT.png" alt="image.png" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you get all the items again, this will be the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4ULJ53F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637016179841/G7ArATt4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4ULJ53F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637016179841/G7ArATt4f.png" alt="image.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-the-final-status-using-the-prompt"&gt;
  &lt;/a&gt;
  Test the final status using the prompt
&lt;/h3&gt;

&lt;p&gt;You can test the final status also directly on the db:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker exec -it db psql -U postgres&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and then run the psql command (don't forget the final ';'):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
select * from item;&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_BFkcJfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637016059557/SJI7gwyec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BFkcJfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637016059557/SJI7gwyec.png" alt="image.png" width="560" height="230"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;&lt;/code&gt;`&lt;/p&gt;

&lt;p&gt;All the code is available at this url: &lt;a href="https://github.com/FrancescoXX/flask-crud-api-pg"&gt;https://github.com/FrancescoXX/flask-crud-api-pg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Version:&lt;br&gt;
&lt;a href="https://youtu.be/QEaM4b3AliY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1Ej02X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637327689060/5p6OFW87m.png" alt="image.png" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video offered by &lt;a href="https://www.tinystacks.com/"&gt;TinyStacks&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>docker</category>
      <category>postgres</category>
      <category>programming</category>
    </item>
    <item>
      <title> Game Dev Digest — Issue #119 - Old School</title>
      <author>Game Dev Digest - The Newsletter On Unity Game Dev</author>
      <pubDate>Fri, 19 Nov 2021 14:38:57 +0000</pubDate>
      <link>https://dev.to/gamedevdigest/game-dev-digest-issue-119-old-school-11jc</link>
      <guid>https://dev.to/gamedevdigest/game-dev-digest-issue-119-old-school-11jc</guid>
      <description>&lt;h3&gt;
  &lt;a href="#issue-119-old-school"&gt;
  &lt;/a&gt;
  Issue #119 - Old School
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://gamedevdigest.com/digests/issue-119-old-school.html"&gt;GameDevDigest.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t-loMK_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-119.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t-loMK_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-119.png" alt="Issue #119 - Old School" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out some posts on how they did it back in the day, but also catch up on what's new today, enjoy!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://news.ycombinator.com/item?id=29127098&amp;amp;utm_source=pocket_mylist"&gt;&lt;strong&gt;How were video games from the 90s so efficient?&lt;/strong&gt;&lt;/a&gt;  - Title says it all. I am interested in discovering how games like roller coaster tycoon, sim city 2000, warcraft II, and descent (blown away by this one) managed to be created and function on computers that had 500 MB HDD, 300 MHz CPU, and 4 MB RAM. &lt;em&gt;[A Hacker News discussion]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://news.ycombinator.com/item?id=29127098&amp;amp;utm_source=pocket_mylist"&gt;&lt;em&gt;news.ycombinator.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://80.lv/articles/80-level-ratings-old-school-books-on-animation/"&gt;&lt;strong&gt;80 Level Ratings: Old-School Books on Animation&lt;/strong&gt;&lt;/a&gt;  - In this article, we collected 10 books that will help you kick off your career as an animator.&lt;br&gt;
&lt;a href="https://80.lv/articles/80-level-ratings-old-school-books-on-animation/"&gt;&lt;em&gt;80.lv&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gamefromscratch.com/volumetric-clouds-in-unity-2021-2/"&gt;&lt;strong&gt;Volumetric Clouds in Unity 2021.2&lt;/strong&gt;&lt;/a&gt;  - Unity have just added volumetric clouds to Unity 2021.2 using the HDRP, and in this post we will walk through the process of using them.&lt;br&gt;
&lt;a href="https://gamefromscratch.com/volumetric-clouds-in-unity-2021-2/"&gt;&lt;em&gt;gamefromscratch.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.unity.com/technology/whats-new-in-shader-graph-20212"&gt;&lt;strong&gt;What’s new in Shader Graph 2021.2&lt;/strong&gt;&lt;/a&gt;  - With the release of Unity 2021.2, we introduced some exciting new features in Shader Graph such as Surface Options support in the Universal Render Pipeline (URP), Custom Interpolators, and Blackboard Categories, which greatly improve artist workflows and shader performance.&lt;br&gt;
&lt;a href="https://blog.unity.com/technology/whats-new-in-shader-graph-20212"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thegamedev.guru/unity-professional-performance/kiss-command-pattern/"&gt;&lt;strong&gt;The "KISS" Command Pattern for Unity&lt;/strong&gt;&lt;/a&gt;  - In this post, you will learn about the lovely KISS Command Pattern in Unity I can’t live without in my games. This pattern will empower you to easily connect your gameplay systems without all the complexity that comes from asynchronous systems. Best of all: it is truly KISSimple!&lt;br&gt;
&lt;a href="https://thegamedev.guru/unity-professional-performance/kiss-command-pattern/"&gt;&lt;em&gt;The Gamedev Guru&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unitycoder.com/blog/2021/11/18/run-unity-cloud-build-based-on-github-commit-message-using-github-actions/"&gt;&lt;strong&gt;Run Unity Cloud Build based on Github commit message using Github Actions&lt;/strong&gt;&lt;/a&gt;  - This should had been easy, but unity cloud build system has every secret id hidden in different places and using different names..&lt;br&gt;
&lt;a href="https://unitycoder.com/blog/2021/11/18/run-unity-cloud-build-based-on-github-commit-message-using-github-actions/"&gt;&lt;em&gt;unitycoder.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unity3d.com/unity/alpha/2022.1.0a15"&gt;&lt;strong&gt;Unity 2022.1.0 Alpha 15&lt;/strong&gt;&lt;/a&gt;  - Unity 2022.1.0 Alpha 15 has been released.&lt;br&gt;
&lt;a href="https://unity3d.com/unity/alpha/2022.1.0a15"&gt;&lt;em&gt;unity3d.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=uOhWT6TxZgE"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fIsPTDtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/4142cd6f540877a0a8d59c7cfab716a0.png" alt="Unity Shader Graph - Toxic Waterfall Effect Tutorial" width="640" height="360"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=uOhWT6TxZgE"&gt;&lt;strong&gt;Unity Shader Graph - Toxic Waterfall Effect Tutorial&lt;/strong&gt;&lt;/a&gt;  - In this Unity tutorial we are going to see how to create a Toxic Waterfall effect, a Radioactive shader. We are going to use Blender to model the waterfall and then Shader Graph to create the toxic effect. We also have an overview of the other elements.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=uOhWT6TxZgE"&gt;&lt;em&gt;Gabriel Aguiar Prod.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=sHE5ubsP-E8"&gt;&lt;strong&gt;How to Create a Whiteboard in Unity VR&lt;/strong&gt;&lt;/a&gt;  - Ever since Half Life: Alyx, I KNOW you've imagined playing around with a whiteboard in your games. Well today is the day! In this tutorial I'll show you how to set up whiteboards and markers using Unity VR. (This will work for any Unity VR framework too!)&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=sHE5ubsP-E8"&gt;&lt;em&gt;Justin P Barnett - VR Game Dev&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=PxudQmMTLkg"&gt;&lt;strong&gt;NavMeshObstacle and NavMeshAgent - Together! | AI Series Part 33 | Unity Tutorial&lt;/strong&gt;&lt;/a&gt;  - Learn how to control NavMeshAgents and NavMeshObstacles on the same GameObject! Sometimes the NavMeshAgent obstacle avoidance isn't enough, and you need an Agent to fully block the path so other Agents will find a new path. In this tutorial we'll look at how to combine the NavMeshAgent and NavMeshObstacle components so they work together without teleporting issues.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=PxudQmMTLkg"&gt;&lt;em&gt;LlamAcademy&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=FcHaWycqIJg&amp;amp;t=1s"&gt;&lt;strong&gt;Volumetric "Darkness" &amp;amp; Lighting | Outer Wilds EotE *spoilers&lt;/strong&gt;*&lt;/a&gt;  - Spoilers for Echoes of the Eye ahead! We look at how the team created their own occlusion volumes to simulate darkness without the excessive use of lights. Join Unity and Mobius Digital as we explore the solar systems of Outer Wilds one planet at a time!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=FcHaWycqIJg&amp;amp;t=1s"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=X9RR7DdOwmY"&gt;&lt;strong&gt;REALISTIC REFLECTIONS in Unity with Gloss and Roughness Maps&lt;/strong&gt;&lt;/a&gt;  - In this video, we talk about how to use gloss and roughness maps in order to create realistic shiny, reflective materials in Unity!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=X9RR7DdOwmY"&gt;&lt;em&gt;The RealTime Essentials&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=reLBZdbXbwU"&gt;&lt;strong&gt;New Contextual Workflows for Faster Prototyping | SIGGRAPH 2021&lt;/strong&gt;&lt;/a&gt;  - Make sure others can see your vision as clearly as you do. Prototyping, blockout, and level design are all critical components to the successful liftoff of an idea, and they rely heavily on a fast and intuitive workflow. Join Gabriel Williams as he shares new contextual workflows in Unity to enable creators of all kinds to prototype faster. This session will cover overlays, in-scene creation tools, tools ecosystem, splines, and ProBuilder improvements. Creators can learn how to leverage these enhancements so they can better build out their wild ideas.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=reLBZdbXbwU"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assets"&gt;
  &lt;/a&gt;
  Assets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDC-EuSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/f5c434d6-9c9b-9294-dd4e-eac957d12129.jpg" alt="Unity Black Friday Sale" width="600" height="362"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;strong&gt;Unity Black Friday Sale&lt;/strong&gt;&lt;/a&gt;  - Unity's Black Friday sale will begin November 14 and continues through December 4. More than 500 of the very best and most popular assets on the Asset Store will be available for 50% off.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com/?lightningDeal=true&amp;amp;aid=1011l8NVc"&gt;Lightning Deals&lt;/a&gt;&lt;br&gt;
New for this sale are Lightning Deals! Each Lightning Deal asset will be available at a deep discount for a limited number of users. During Black Friday, there are 20 licenses available at 90% off, 50 at 80% off, and 400 at 70% off. Once those have been claimed, the asset will no longer be a Lightning Deal, and will remain 50% off through the end of the sale. The following 16 assets will be marked as &lt;a href="https://assetstore.unity.com/?lightningDeal=true&amp;amp;aid=1011l8NVc"&gt;Lightning Deals&lt;/a&gt; at the start of the sale on 11/14/21 21:00:00 PT.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/189093?aid=1011l8NVc"&gt;POLYGON Dungeon Realms - Low Poly 3D Art by Synty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/116514?aid=1011l8NVc"&gt;Animancer Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/52739?aid=1011l8NVc"&gt;CCG Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/53895?aid=1011l8NVc"&gt;Dungeon Architect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/192456?aid=1011l8NVc"&gt;Expanse - Volumetric Skies, Clouds, and Atmospheres in HDRP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/157625?aid=1011l8NVc"&gt;Fantastic City Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/196648?aid=1011l8NVc"&gt;Low Poly Terrain - Polaris 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/98823?aid=1011l8NVc"&gt;Match 3 Sweet Sugar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/180688?aid=1011l8NVc"&gt;Medieval Kingdom UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/38532?aid=1011l8NVc"&gt;Modern Loft Full Pack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/92579?aid=1011l8NVc"&gt;POLYGON Pirates - Low Poly 3D Art by Synty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/188953?aid=1011l8NVc"&gt;POP BLOCKS Puzzle Game Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/52837?aid=1011l8NVc"&gt;Pro Radar Builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/63772?aid=1011l8NVc"&gt;RPG Character Mecanim Animation Pack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/89126?aid=1011l8NVc"&gt;Total Music Collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://assetstore.unity.com/packages/package/id/126124?aid=1011l8NVc"&gt;UFE 2 SOURCE&lt;/a&gt;
&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt; &lt;strong&gt;Affiliate&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/CandyCoded/CandyCoded?"&gt;&lt;strong&gt;CandyCoded&lt;/strong&gt;&lt;/a&gt;  - Custom Unity Components that are delightful. CandyCoded is a collection of useful components and extensions for building in Unity. Whether you are building a quick prototype or a production-ready experience, CandyCoded will help you get there.&lt;br&gt;
&lt;a href="https://github.com/CandyCoded/CandyCoded?"&gt;&lt;em&gt;CandyCoded&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rfadeev/pump-editor?"&gt;&lt;strong&gt;Pump Editor&lt;/strong&gt;&lt;/a&gt;  - Collection of Unity editor helpers to boost productivity.&lt;br&gt;
&lt;a href="https://github.com/rfadeev/pump-editor?"&gt;&lt;em&gt;rfadeev&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/marijnz/unity-editor-spotlight?"&gt;&lt;strong&gt;unity-editor-spotlight&lt;/strong&gt;&lt;/a&gt;  - Simple macOS-like Spotlight file search in Unity. It shows your most opened files first. The more you use it, the better it gets. Use it with cmd+k on macOS, ctrl+k on Windows.&lt;br&gt;
&lt;a href="https://github.com/marijnz/unity-editor-spotlight?"&gt;&lt;em&gt;marijnz&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nowsprinting/blender-like-sceneview-hotkeys?"&gt;&lt;strong&gt;Blender-like SceneView Hotkeys&lt;/strong&gt;&lt;/a&gt;  - This Unity Editor Extensions allows you to select the viewing direction for a SceneView with the Blender -like hotkeys.&lt;br&gt;
&lt;a href="https://github.com/nowsprinting/blender-like-sceneview-hotkeys?"&gt;&lt;em&gt;nowsprinting&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Arvtesh/UnityFx.Outline?"&gt;&lt;strong&gt;UnityFx.Outline&lt;/strong&gt;&lt;/a&gt;  - Screen-space outlines for Unity3d.&lt;br&gt;
&lt;a href="https://github.com/Arvtesh/UnityFx.Outline?"&gt;&lt;em&gt;Arvtesh&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mob-sakai/CSharpCompilerSettingsForUnity?"&gt;&lt;strong&gt;C# Compiler Settings For Unity&lt;/strong&gt;&lt;/a&gt;  - hange the C# compiler (csc) used on your Unity project, as you like!&lt;br&gt;
&lt;a href="https://github.com/mob-sakai/CSharpCompilerSettingsForUnity?"&gt;&lt;em&gt;mob-sakai&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/RomanZhu/FixedPoint-Sharp"&gt;&lt;strong&gt;FixedPoint-Sharp&lt;/strong&gt;&lt;/a&gt;  - About Fixed point math with 48.16 precision.&lt;br&gt;
&lt;a href="https://github.com/RomanZhu/FixedPoint-Sharp"&gt;&lt;em&gt;RomanZhu&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/UniDi/UniDi?"&gt;&lt;strong&gt;UniDi&lt;/strong&gt;&lt;/a&gt;  - UniDi is a Dependency Injection container for Unity based on Zenject.&lt;br&gt;
&lt;a href="https://github.com/UniDi/UniDi?"&gt;&lt;em&gt;UniDi&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dre0dru/LocalStorage?"&gt;&lt;strong&gt;LocalStorage&lt;/strong&gt;&lt;/a&gt;  - Configurable generic classes for managing local data saved on device.&lt;br&gt;
&lt;a href="https://github.com/dre0dru/LocalStorage?"&gt;&lt;em&gt;dre0dru&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Renge-Games/UnityRadialHealthBars?"&gt;&lt;strong&gt;Ultimate Circular Health Bars Light&lt;/strong&gt;&lt;/a&gt;  - A segmented radial health bar shader for Unity URP/HDRP 2019 and up.&lt;br&gt;
&lt;a href="https://github.com/Renge-Games/UnityRadialHealthBars?"&gt;&lt;em&gt;Renge-Games&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fairygui/FairyGUI-unity?"&gt;&lt;strong&gt;FairyGUI for Unity&lt;/strong&gt;&lt;/a&gt;  - FairyGUI is a Cross Platform UI Editor &amp;amp; UI framework.&lt;br&gt;
&lt;a href="https://github.com/fairygui/FairyGUI-unity?"&gt;&lt;em&gt;fairygui&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Mukarillo/UnityDynamicScrollRect?"&gt;&lt;strong&gt;UnityDynamicScrollRect&lt;/strong&gt;&lt;/a&gt;  - An optimized approach to lists with dozens of elements.&lt;br&gt;
&lt;a href="https://github.com/Mukarillo/UnityDynamicScrollRect?"&gt;&lt;em&gt;Mukarillo&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Sov3rain/Messager?"&gt;&lt;strong&gt;Messager&lt;/strong&gt;&lt;/a&gt;  - This implementation of the event aggregator pattern tries to overcome the limitations of traditional event handling by providing a central place to publish and subscribe for events. It takes care of registering, unregistering and invoking events and thus decoupling publishers and subscribers.&lt;br&gt;
&lt;a href="https://github.com/Sov3rain/Messager?"&gt;&lt;em&gt;Sov3rain&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hecomi/uShaderTemplate?"&gt;&lt;strong&gt;uShaderTemplate&lt;/strong&gt;&lt;/a&gt;  - uShaderTemplate is an editor asset to create shaders from templates.&lt;br&gt;
&lt;a href="https://github.com/hecomi/uShaderTemplate?"&gt;&lt;em&gt;hecomi&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/keijiro/ProcAmp?"&gt;&lt;strong&gt;ProcAmp&lt;/strong&gt;&lt;/a&gt;  - ProcAmp is a utility shader for adjusting videos.&lt;br&gt;
&lt;a href="https://github.com/keijiro/ProcAmp?"&gt;&lt;em&gt;keijiro&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spotlight"&gt;
  &lt;/a&gt;
  Spotlight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://monoflauta.itch.io/puppet-manor?utm_source=pocket_mylist"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eW5_yewQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/a9fd75d99afc2f2fd0e2673200a19f2a.png" alt="Puppet Manor" width="640" height="360"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://monoflauta.itch.io/puppet-manor?utm_source=pocket_mylist"&gt;&lt;strong&gt;Puppet Manor&lt;/strong&gt;&lt;/a&gt;  - Puppet Manor is a horror game where you try to escape from a monster spider who can control the mannequins that live there. Grabbing tools which will help you open doors while making sure neither the spider nor its mannequins get you will be your primary goal. Will you be able to escape without getting grabbed?&lt;br&gt;
&lt;em&gt;[Also check out their &lt;a href="https://monoflauta.com/2021/11/11/how-to-make-a-camera-wobble-effect/"&gt;How to make a camera wobble effect&lt;/a&gt; post]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://monoflauta.itch.io/puppet-manor?utm_source=pocket_mylist"&gt;&lt;em&gt;MonoFlauta&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You can subscribe to the free weekly newsletter on &lt;a href="https://gamedevdigest.com"&gt;GameDevDigest.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>unity</category>
      <category>csharp</category>
      <category>news</category>
    </item>
    <item>
      <title>How to make a profit from an online marketplace. Top 6 marketplace monetization models</title>
      <author>Arateg</author>
      <pubDate>Fri, 19 Nov 2021 14:37:49 +0000</pubDate>
      <link>https://dev.to/arateg/how-to-make-a-profit-from-an-online-marketplace-top-6-marketplace-monetization-models-13kk</link>
      <guid>https://dev.to/arateg/how-to-make-a-profit-from-an-online-marketplace-top-6-marketplace-monetization-models-13kk</guid>
      <description>&lt;p&gt;The success of online marketplace platforms depends on various factors that include stakeholder satisfaction, industry competition, delivered functionality, and promotion strategy. Marketplace monetization is a key aspect that a company has to consider before implementing a software project.&lt;/p&gt;

&lt;p&gt;When managing a marketplace application, an organization generally does not produce, supply, or sell any goods. The primary objective is to bring together vendors and consumers for value exchange. As a result, marketplace owners rely on the volume of sales generated via the system and the number of users. Therefore, by choosing a marketplace monetization model properly, you will be able to generate higher profit while improving the audience’s engagement.&lt;/p&gt;

&lt;p&gt;In this article, our software experts describe the main marketplace revenue strategies for you to do benchmarking and find the best one for your project. Have a look.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#top-6-marketplace-monetization-models-to-consider"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Top 6 marketplace monetization models to consider&lt;/strong&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-registration-fees"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Registration fees&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;A registration fee, also known as a sign-up fee, is a popular marketplace business model that requires a flat payment from vendors for joining the platform. This way, sellers have to pay only once and then operate freely on a marketplace.&lt;/p&gt;

&lt;p&gt;Benefits of using sign-up fees:&lt;/p&gt;

&lt;p&gt;It is much easier to adopt this strategy in comparison with other practices. For example, when charging a commission, a percentage of every transaction amount has to be automatically calculated and transferred to marketplace owners while the remaining sum has to be sent to merchants.&lt;/p&gt;

&lt;p&gt;By employing this strategy, the revenue will not depend on the volume of sales.&lt;/p&gt;

&lt;p&gt;Drawbacks of this marketplace monetization model:&lt;/p&gt;

&lt;p&gt;It can be quite challenging to assure sellers to make a payment before registration.&lt;/p&gt;

&lt;p&gt;If you manage to attract the majority of vendors operating on the market, you will have to incorporate other revenue models to have a steady source of income.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-bringing-the-registration-fees-model-into-action-it-is-crucial-to"&gt;
  &lt;/a&gt;
  &lt;strong&gt;When bringing the registration fees model into action, it is crucial to:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Conduct competitor analysis. Before launching a software solution, an organization should research conditions suggested by similar marketplaces to come up with more favorable terms. With lower fees, it will be much easier to draw the attention of merchants, which is vital for new market players.&lt;/p&gt;

&lt;p&gt;Create a catching selling proposition. To engage vendors and earn a profit, it is important to convince them to register by describing the advantages.&lt;/p&gt;

&lt;p&gt;Offer a bonus for signing up. This is a great way to draw the attention of service providers, especially when you have just released a marketplace.&lt;/p&gt;

&lt;p&gt;It is worth remarking that typically, digital marketplace platforms do not require customers to pay sign-up fees, as they are not likely to pay before ordering products or services when there are so many other, free solutions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-with-clickbank"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Example with ClickBank&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Established in 1998, ClickBank is a worldwide online e-commerce and affiliate marketplace delivering either physical or digital products. At the moment, the system is used by over six million customers across the globe.&lt;/p&gt;

&lt;p&gt;To start using the platform, service providers have to pay an activation fee of $49.95. In addition, ClickBank also withdraws a $2.50 commission for payment processing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-transaction-commission"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Transaction commission&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The commission is among the most widespread marketplace monetization models used by globally recognized companies, such as Amazon and Uber Eats. With this strategy, vendors and consumers can register on a marketplace application for free.&lt;/p&gt;

&lt;p&gt;In this case, the revenue depends on the number of transactions carried out through the system, as well as their amount if a fee is not fixed.&lt;/p&gt;

&lt;p&gt;Benefits of charging commission:&lt;/p&gt;

&lt;p&gt;As marketplace operators receive a percentage of each transaction, it is easier for them to maintain the level of income.&lt;/p&gt;

&lt;p&gt;Vendors have the possibility to try out system functionality prior to making any payments. As a consequence, the credibility of an online platform increases.&lt;/p&gt;

&lt;p&gt;Drawbacks of this marketplace monetization model:&lt;/p&gt;

&lt;p&gt;It is more difficult to implement this strategy in comparison with some other options such as flat sign-up payments.&lt;/p&gt;

&lt;p&gt;When you have just launched a marketplace app, it may take a while to attract sellers and buyers.&lt;/p&gt;

&lt;p&gt;As long as a small fee is withdrawn from each successful payment, this marketplace monetization model generally showcases the best results in the long run.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-make-this-business-model-work-companies-should"&gt;
  &lt;/a&gt;
  &lt;strong&gt;To make this business model work, companies should:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Calculate what fee has to be withdrawn for generating sufficient profit. Before setting up the amount of a transaction fee, it is also advisable to analyze the terms provided by competitors.&lt;/p&gt;

&lt;p&gt;Help suppliers maximize sales by delivering components necessary to automate business operations and ensure a seamless experience. &lt;/p&gt;

&lt;p&gt;For instance, a company can integrate a digital marketplace platform with systems for order and shipping management.&lt;br&gt;
With functionality like one-click ordering, voice payments, and product comparison, vendors will be able to significantly raise the conversion rate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-with-airbnb"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Example with Airbnb&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Airbnb is a world-famous online lodging marketplace operating according to a peer-to-peer model. To improve the audience's satisfaction, Airbnb comes up with more beneficial conditions in contrast with many other marketplaces.&lt;/p&gt;

&lt;p&gt;The platform demands a relatively small commission for carrying out each guest-host transaction, splitting it between two parties. While customers are charged a fee ranging between 5%–15%, vendors have to pay a fee of 3%–5%.&lt;/p&gt;

&lt;p&gt;Explore &lt;a href="https://arateg.com/blog/how-to-build-a-marketplace-like-Airbnb?utm_source=blogpost&amp;amp;utm_medium=free&amp;amp;utm_campaign=devto"&gt;how to build a marketplace like Airbnb&lt;/a&gt;, involving project cost and timeline.&lt;/p&gt;

&lt;p&gt;As a comparison, Booking.com requires an average commission of 15%, which is paid by accommodation owners only. This fee can vary depending on property type and location. It is worth noting that a transaction fee in on-demand service marketplaces like Uber Eats and Postmates hovers around 30%.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-subscription"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Subscription&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;With a subscription monetization model, vendors have to make regular payments in order to use a marketplace platform or access some bonuses. To make this strategy work, it is crucial to keep merchants engaged.&lt;/p&gt;

&lt;p&gt;The key benefits of a paid subscription:&lt;/p&gt;

&lt;p&gt;A company receives a steady source of income while sellers do not have to make a large payment before they run a business on the platform.&lt;br&gt;
This practice is perfectly suited for the long run.&lt;/p&gt;

&lt;p&gt;Drawbacks of this marketplace monetization model:&lt;/p&gt;

&lt;p&gt;A high churn rate may become the biggest challenge.&lt;br&gt;
Subscription may not fit some sectors due to their specifics. For example, operating in the foodservice industry, Uber Eats does not apply a paid subscription to avoid the risk of encountering restaurant churn.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-using-this-strategy-it-is-important-to"&gt;
  &lt;/a&gt;
  &lt;strong&gt;When using this strategy, it is important to:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Provide a free trial. By allowing businesses to try out marketplace functionality, you will manage to increase the number of registrations and subscriptions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://arateg.com/blog/top-6-marketplace-monetization-models?utm_source=blogpost&amp;amp;utm_medium=free&amp;amp;utm_campaign=devto"&gt;Continue reading...&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>discuss</category>
      <category>motivation</category>
      <category>mobile</category>
    </item>
    <item>
      <title>How to ask your team for help</title>
      <author>Lucia Cerchie</author>
      <pubDate>Fri, 19 Nov 2021 14:28:32 +0000</pubDate>
      <link>https://dev.to/cerchie/how-to-ask-your-team-for-help-50lj</link>
      <guid>https://dev.to/cerchie/how-to-ask-your-team-for-help-50lj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Whether you're brand new to coding or you've been doing it for years, if you're working on a coding project with a team, you're going to need to ask for help to make personal progress, as well as progress within the project. Here are some tips to help you out. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-dont-ask-too-late"&gt;
  &lt;/a&gt;
  1. Don't ask too late
&lt;/h2&gt;

&lt;p&gt;If you've been struggling with something on your own for hours, and keep running into the same purple Google links, don't keep going without help from your team. If you're on a team project, it's not just your own time you're using. You need to consider the overall goals of the project.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-explain-the-problem"&gt;
  &lt;/a&gt;
  2. Explain the problem
&lt;/h2&gt;

&lt;p&gt;Define where you're at in the process, and where you'd like to be. This might mean describing anything from the stack you're working with, down to the desired outcome of a function you've been trying to write. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-explain-what-youve-tried"&gt;
  &lt;/a&gt;
  3. Explain what you've tried
&lt;/h2&gt;

&lt;p&gt;Think of it like filing a Github issue. Explain what your teammate can do to replicate the problem. Otherwise, the problem won't have context in their minds, and they won't know how to help.&lt;/p&gt;

&lt;p&gt;Here's a template you can use if you'd like an example of how to ask for help:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hi (teammate),
I've been working with x tools, with the goal of y.
I need help with z. 

I have tried this tutorial (link here), 
as well as following this example (link here). 
These are the results, which give an error/ don't match our goal.  

You can clone this repo and run (commands here) 
to see the issue I'm running into firsthand. 

Do you have input for me? 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good luck! &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>codenewbie</category>
      <category>motivation</category>
      <category>leadership</category>
    </item>
    <item>
      <title>CI &amp; Test Automation</title>
      <author>Minsu Kim</author>
      <pubDate>Fri, 19 Nov 2021 14:27:43 +0000</pubDate>
      <link>https://dev.to/mkim219/ci-test-automation-1oja</link>
      <guid>https://dev.to/mkim219/ci-test-automation-1oja</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;The previous weekly assignment created unit test for Static Site Generator(ssg). In this week, we extend previous weekly task to implement test automation on Github action with Continuous Integration(CI).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;The setting of Github Action CI Workflow is very straight forward. I have used suggested Workflows template for .NET from Github. Therefore, I just needed to configure the steps for test automation and lint.&lt;/p&gt;

&lt;p&gt;The first step is setting up .NET action. The .NET action finds a specific version of .NET from my SSG. My version of .NET is 5.0.x. Here is the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second step is installing dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Install dependencies
      run: dotnet build ./kimchi-ssg/kimchi-ssg.csproj
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;dotnet build&lt;/code&gt; compiles the SSG, reads through its dependencies specified in the project file, and publishes the resulting on virtual machine. &lt;/p&gt;

&lt;p&gt;The third step is setting up &lt;code&gt;Run Formatter &amp;amp; Linter&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Run Formatter &amp;amp; Linter
      run: |
        dotnet tool install --global dotnet-format --version 5.1.250
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have installed &lt;code&gt;dotnet-format&lt;/code&gt; for detecting lint from my code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet-format --check --folder ./kimchi-ssg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code check the lint all the file from &lt;code&gt;./kimchi-ssg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The last step is unit testing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Test
  run: dotnet test ./UnitTest/UnitTest.csproj
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;UnitTest.csproj&lt;/code&gt; includes test code for &lt;code&gt;Kimchi-ssg&lt;/code&gt;. The implementation code is same as I did on the &lt;code&gt;cmd&lt;/code&gt; and &lt;code&gt;terminal&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The final code is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install dependencies
      run: dotnet build ./kimchi-ssg/kimchi-ssg.csproj
    - name: Run Formatter &amp;amp; Linter
      run: |
        dotnet tool install --global dotnet-format --version 5.1.250
        dotnet-format --check --folder ./kimchi-ssg
    - name: Test
      run: dotnet test ./UnitTest/UnitTest.csproj
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#testing-lint"&gt;
  &lt;/a&gt;
  Testing Lint
&lt;/h3&gt;

&lt;p&gt;Since all the unit test that I created and the additional unit test that my partner created pass the automation test, it is time to test lint! I made lint intentionally like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H0JDqaMH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd67sj64hawp6ocbvwjm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0JDqaMH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd67sj64hawp6ocbvwjm.PNG" alt="lint" width="615" height="79"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and the error message is&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EPMdu8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hda56tqsg6x64jvj6fv1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EPMdu8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hda56tqsg6x64jvj6fv1.png" alt="lint-error-message" width="409" height="78"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I created a pull request for testing Lint. The CI throws error like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x_-dk1u7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q98quzxv8bmpolj2kpcq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x_-dk1u7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q98quzxv8bmpolj2kpcq.PNG" alt="CI-error" width="880" height="227"&gt;&lt;/a&gt;&lt;br&gt;
The error message specify that there are two 29 whitespace characters on &lt;code&gt;helpers.cs&lt;/code&gt; which is the result that I expected. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-tests-to-another-project"&gt;
  &lt;/a&gt;
  Add Tests to Another Project
&lt;/h3&gt;

&lt;p&gt;I have choose to work on JavaScript &lt;a href="https://github.com/ycechungAI/cmd-ssg"&gt;SSG application&lt;/a&gt; that created by Eugene Chung. The testing setup and environment is completely different. He has configured the Node environment whereas I have configured .NET environment on CI. Also the testing environment is different. I have used XUnit for unit testing whereas he has used the Jest for unit testing. However, I have change to work Jest for unit test on WEB422 and previous contribution on Telescope. Also he has excellent &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; for providing how to test in his application. Therefore, the testing on my partner's repo is straightforward. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;The CI is very excellent automate tool to prevent the code that includes lint and unit test the code. Sometimes I forgot to run &lt;code&gt;Linter&lt;/code&gt; command before I commit my code to repo. Since this application is open source project, other people can have unformatted code. Now I do not have to worry because CI automatically block my PR if I have lint on my code!   &lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Guide to ERP Integration with eCommerce Platforms</title>
      <author>Natalia API2Cart</author>
      <pubDate>Fri, 19 Nov 2021 14:23:27 +0000</pubDate>
      <link>https://dev.to/natalia27070051/guide-to-erp-integration-with-ecommerce-platforms-gaj</link>
      <guid>https://dev.to/natalia27070051/guide-to-erp-integration-with-ecommerce-platforms-gaj</guid>
      <description>&lt;p&gt;In the eCommerce industry, customer experience is the critical driver for business growth and development. For customer satisfaction, it’s the responsibility of online merchants to provide their clients with an exceptional shopping experience. An ERP system does a great job of providing merchants with the data they need to offer such experiences to their customers.&lt;/p&gt;

&lt;p&gt;However, as the customer demands keep evolving, an ERP system should also look into other data sources to generate personalized data sets for businesses. That said, ERP integration with eCommerce platforms is a stepping stone to the successful evolution of ERP systems.&lt;/p&gt;

&lt;p&gt;Read along to find out how you can establish ERP integration efficiently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-erp-system"&gt;
  &lt;/a&gt;
  What is an ERP System?
&lt;/h2&gt;

&lt;p&gt;An &lt;a href="https://api2cart.com/ecommerce/significance-of-erp-systems/?utm_source=devto&amp;amp;utm_medium=referral&amp;amp;utm_campaign=erpintegrationn.kov"&gt;Enterprise Resource Planning (ERP) system&lt;/a&gt;, as the name suggests, is software that manages and automates the various functions of an enterprise. It helps to automate operations in different departments - accounting, sales, marketing, supply chain, etc. - and collects data from them to form a single source of information for the management.&lt;/p&gt;

&lt;p&gt;Some standard functions of an ERP are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To automate repetitive business tasks that can impact the overall productivity of its workforce.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To collect data from various sources and analyze to generate actionable insights for businesses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To generate reports by compiling operational data of the business, allowing the management to make well-informed decisions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To overlook financial data of a business, enabling faster handling of monthly financial statements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To manage the manufacturing processes and supply chain of a business.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To plan, organize, and determine the best strategize to utilize business funds.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To integrate data from various departments of the organization for providing a centralized view of a business’s operations and finances.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-erp-integration"&gt;
  &lt;/a&gt;
  What is ERP Integration?
&lt;/h2&gt;

&lt;p&gt;ERP integration is the process of connecting an ERP software with various other applications, in and out of the organization, to get real-time data from them in a single place. It gives a unified view of all the connected applications regardless of their presence in the organization.&lt;/p&gt;

&lt;p&gt;ERP integration combines data from various sources of information and departments, including accounts, HR, finance, commerce, back-office, manufacturing, supply chain, etc. It uses this data to effectively manage the workflows and processes of a business and improve the way how different departments of an organization collaborate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-erp-integration-with-ecommerce-platforms"&gt;
  &lt;/a&gt;
  What is ERP integration with eCommerce Platforms?
&lt;/h2&gt;

&lt;p&gt;ERP integration with eCommerce platforms is the process of establishing integration between an ERP software and eCommerce platforms like Magento, Shopify, WooCommerce, etc. Such integration facilitates a seamless transfer of data from the eCommerce platform to the ERP software.&lt;/p&gt;

&lt;p&gt;The question, however, is - why does an ERP software need to integrate with eCommerce platforms?&lt;/p&gt;

&lt;p&gt;The answer is simple - ERP software looks after all the crucial processes in an eCommerce business. These processes include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;monitoring inventory,&lt;/li&gt;
&lt;li&gt;processing orders,&lt;/li&gt;
&lt;li&gt;optimizing shipping process,&lt;/li&gt;
&lt;li&gt;generating custom reports, and&lt;/li&gt;
&lt;li&gt;tracking multiple application workflows in real-time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these processes need data related to customers, orders, products, and categories. Such data is stored in the merchants' online stores, which are built on the above-mentioned eCommerce platforms. Therefore, ERP integration with eCommerce platforms is necessary if the ERP software needs access to this data.&lt;/p&gt;

&lt;p&gt;When an ERP integrates with the eCommerce platform, it can retrieve and manage an online store's data through the platforms’ APIs.&lt;/p&gt;

&lt;p&gt;Moreover, there are several benefits associated with &lt;a href="https://api2cart.com/use-cases/erp-api-integration/?utm_source=devto&amp;amp;utm_medium=referral&amp;amp;utm_campaign=erpintegrationn.kov"&gt;ERP integration with multiple eCommerce platforms&lt;/a&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ERP eCommerce integration opens new business opportunities. The eCommerce platforms you connect with have multiple online stores built on them, apart from your clients’. These online store owners can be your future clients when they get to know the functionalities of your ERP software.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When the store owners turn into your clients, it brings a healthy revenue stream for your business.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;eCommerce platforms operate in multiple countries across the globe. When you integrate with these platforms, you get international exposure.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-develop-an-ecommerce-erp-integration"&gt;
  &lt;/a&gt;
  How to Develop an eCommerce ERP Integration?
&lt;/h2&gt;

&lt;p&gt;There are two ways to develop an eCommerce ERP integration - in-house integration development and using third-party integration development services.&lt;/p&gt;

&lt;p&gt;While in-house integration development can cost you a significant amount of time, money, and resources, employing a third-party service to develop integrations is your most feasible option.&lt;/p&gt;

&lt;p&gt;With third-party service providers like API2Cart, you can easily develop ERP integration with multiple eCommerce platforms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://api2cart.com/?utm_source=devto&amp;amp;utm_medium=referral&amp;amp;utm_campaign=erpintegrationn.kov"&gt;API2Cart&lt;/a&gt; is a unified API that allows SaaS solutions like ERP to integrate with more than 40 eCommerce platforms at once. As a result, it saves the vendors a lot of time and money they would otherwise have invested in establishing individual, manual integrations.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/CV7-CemkiBk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;API2Cart provides you with more than 100 API methods to retrieve and manage data from the eCommerce platforms. These methods allow you to seamlessly edit, delete, modify, and update data in the online stores.&lt;/p&gt;

&lt;p&gt;Moreover, API2Cart also looks after the maintenance and upgrades required by integrations once they are developed. If you look into in-house development, you would also have to bear the cost of maintenance and updates equivalent to developing new integrations.&lt;/p&gt;

&lt;p&gt;eCommerce platforms keep rolling out new versions of their API, and you will need to update your integrations every time there’s a new release. If you choose manual integrations, these updates and maintenance might cost you a fortune, considering the salary you will pay to the developers and the infrastructure you will deploy.&lt;/p&gt;

&lt;p&gt;API2Cart can save you from all these pain points with its unified API. You need to connect your ERP software with API2Cart, and it will automatically connect your software with all the eCommerce platforms of your choice.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>api</category>
      <category>integration</category>
      <category>saas</category>
    </item>
    <item>
      <title>Making the Switch...</title>
      <author>AnthonyH00</author>
      <pubDate>Fri, 19 Nov 2021 14:17:51 +0000</pubDate>
      <link>https://dev.to/anqirek/making-the-switch-np9</link>
      <guid>https://dev.to/anqirek/making-the-switch-np9</guid>
      <description>&lt;p&gt;At the start of my tech career, if you would have told me I'll be in a coding bootcamp in a few years, I would have thought you were crazy. Why? I believed it was extremely out of reach.&lt;br&gt;
    Most colleagues, friends, and professionals I know that changed careers in IT, have switched from Software Engineering to Network Engineering. Usually citing plainness, and tediousness of coding as the main reasons for their decision.&lt;br&gt;
   I started my career working in Helpdesk support. As the company was small, after a short time, I touched all levels of Networking, from installing apps, to using heat maps, and setting up Networks from the bottom up. I enjoyed the challenge of building out a network from scratch. More than that, when it aligned with what the client needs were(I'm looking at you, bandwidth), that generally made me happy. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pY9donsK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/delx4lm7b3t90gl9cof8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pY9donsK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/delx4lm7b3t90gl9cof8.png" alt="Image description" width="710" height="722"&gt;&lt;/a&gt;&lt;em&gt;Source:&lt;a href="https://community.fs.com/blog/tcpip-vs-osi-whats-the-difference-between-the-two-models.html"&gt;https://community.fs.com/blog/tcpip-vs-osi-whats-the-difference-between-the-two-models.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After working in Helpdesk for a few years, I moved into more of a hybrid role, splitting onsite, remote, and managerial work. From here on, I worked with various departments, assisting with NOC, Escalation, and the Solution teams. I think this is where I became interested in programming. It was the only department I didn't directly work with, but collaborated a few times and my interest was piqued.&lt;br&gt;
   I also learned a valuable lesson during this period. Why I enjoyed Networking, had nothing to do with Networking, and more so, who I was as a person. As the company grew, I realized the values I held, were no longer applicable.&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FKOM-f7q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xfzyhci73faib6p0ywa.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FKOM-f7q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xfzyhci73faib6p0ywa.JPG" alt="Image description" width="880" height="1173"&gt;&lt;/a&gt;&lt;br&gt;
  I did a few free coding courses, (CodeAcademy, Solo learn, among others..) but was very hesitant about taking it a step further. I was comfortable, complacent, and it wasn't a decision I could just make on a whim. &lt;br&gt;
  The longer I fretted over this, the unhappier I was. So...I just moved. Once I made that decision, a weight was lifted off my shoulders, and out my pockets, but I was satisfied with my decision.&lt;br&gt;
   After a few months into the bootcamp, I believe I made the right decision. Although, this is not easy, by any means, I am moving forward, learning new things everyday.  I do agree, some of what I've learned has been tedious as it's been daunting, though this has been the most creative freedom I've had in a long time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover Source:&lt;a href="https://www.nytimes.com/2020/07/01/technology/personaltech/make-your-tech-last-longer.html"&gt;https://www.nytimes.com/2020/07/01/technology/personaltech/make-your-tech-last-longer.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>About testing in Go</title>
      <author>Alex Romanova</author>
      <pubDate>Fri, 19 Nov 2021 14:17:23 +0000</pubDate>
      <link>https://dev.to/sirinoks/about-testing-in-go-313d</link>
      <guid>https://dev.to/sirinoks/about-testing-in-go-313d</guid>
      <description>&lt;p&gt;This post will be about my &lt;a href="https://github.com/gempir/gempbot/pull/10"&gt;pull request&lt;/a&gt; that did some tests with Go.&lt;/p&gt;

&lt;p&gt;Here's some backstory about why I chose this &lt;a href="https://github.com/gempir/gempbot"&gt;repo&lt;/a&gt;. I've been contributing to &lt;a href="https://github.com/SevenTV"&gt;7tv&lt;/a&gt;, but I'm also a member of their discord community. There I noticed a project that uses 7tv that was also written in Go. A small project from someone in the same community - likely to explain stuff and help out, shouldn't be too difficult of an app. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vTyic2fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911250826897543178/Screenshot_138.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTyic2fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911250826897543178/Screenshot_138.png" width="643" height="1016"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I reached out. You can look at my previous post how that went. Long story short, I decided to try my newly acquired knowledge of testing in a different language. The one I'm really interested in - GO.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-test"&gt;
  &lt;/a&gt;
  How to test?
&lt;/h2&gt;

&lt;p&gt;I researched some basic stuff, &lt;a href="https://golang.org/doc/tutorial/add-a-test"&gt;official documentation&lt;/a&gt; got me started.&lt;/p&gt;

&lt;p&gt;Some specific things I noticed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To make a test file, you have to name it NAME_test.go, instead of NAME.test.js compared to JS.&lt;/li&gt;
&lt;li&gt;Go has a built in &lt;code&gt;testing&lt;/code&gt; package, which makes it simple and universal for any GO unit testing.&lt;/li&gt;
&lt;li&gt;The most useful resource I found is (Go by example)[&lt;a href="https://gobyexample.com/testing"&gt;https://gobyexample.com/testing&lt;/a&gt;]. Really shows all you need to begin and make it work. Was even easier than JS, honestly. The table example was really useful too.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#what-i-did"&gt;
  &lt;/a&gt;
  What I did
&lt;/h2&gt;

&lt;p&gt;I followed author's advice and made tests for &lt;code&gt;humanize&lt;/code&gt;. Those functions have simple string/int input and output. I was happy with how fast I figured things out. &lt;/p&gt;

&lt;p&gt;I really a system of testing tables, it looks clean and structured.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2hpbIDdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911253461813821461/Screenshot_139.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2hpbIDdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911253461813821461/Screenshot_139.png" width="734" height="543"&gt;&lt;/a&gt;&lt;br&gt;
You can see that I created variables in my test for arguments and the return value I expect. Then I made a table with those variables united in a single object. That way you can later loop through them and check if that combination works together.&lt;/p&gt;

&lt;p&gt;Here's some more code. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Function to test:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;StringToSeconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HasSuffix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"m"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TrimSuffix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"m"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strconv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HasSuffix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TrimSuffix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strconv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strconv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The testing function itself:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;TestStringToSeconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
        &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="p"&gt;}{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"60s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"1m"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"60m"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="c"&gt;//Big example&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"22s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="c"&gt;//Basic example&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="c"&gt;//Empty string&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"10d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="c"&gt;//Invalid input&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;testname&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="n"&gt;StringToSeconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Got %d, want %d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;There was finally something I could fix through my testing. I figured out that when this following function returns a value with combined units (minutes and seconds), it returns it in a float format, adding a bunch of &lt;code&gt;.000000&lt;/code&gt;. Not only it looked bad, it also wasn't consistent with other return values which were ints.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;SecondsToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%ds"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%dm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;floored&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;rest&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;floored&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%fm %fs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;floored&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how it would look with combined values:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8kKnzeFY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911247618154311721/Screenshot_137.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8kKnzeFY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911247618154311721/Screenshot_137.png" width="548" height="170"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I actually changed something in the original code to match the format!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;floored&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;rest&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;floored&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%dm %ds"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;floored&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#next-level-mocks"&gt;
  &lt;/a&gt;
  Next level: Mocks?
&lt;/h2&gt;

&lt;p&gt;I was content with myself. I did tests that actually worked. Maybe I can make tests for something more difficult?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZoboiA7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911257381969727548/Screenshot_140.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZoboiA7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911257381969727548/Screenshot_140.png" width="547" height="102"&gt;&lt;/a&gt;&lt;br&gt;
So my next quest: How do I mock in go? I went to google. There was a problem. I couldn't find a clear and solid answer. So I went on to ask people who might know. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpLu_kol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911257871235317810/Screenshot_141.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpLu_kol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911257871235317810/Screenshot_141.png" width="524" height="536"&gt;&lt;/a&gt;&lt;br&gt;
He showed me his repo where he made a bunch of tests, however I couldn't figure it out. So I went in voice to see what he'll explain..&lt;/p&gt;

&lt;p&gt;What he showed was.. a lot. Fast. I couldn't follow. He'd jump from document to document, adding in words I didn't know, and I was really too confused to even form a question. Basically...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RDUMI40E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911247191929155604/bla_bla1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RDUMI40E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911247191929155604/bla_bla1.gif" width="380" height="181"&gt;&lt;/a&gt;&lt;br&gt;
And then he went on to build his new chair that apparently had wrong instructions.&lt;/p&gt;

&lt;p&gt;So I decided I'll postpone my learning about mocks in Go. After all, I had enough to make a &lt;a href="https://github.com/gempir/gempbot/pull/10"&gt;PR&lt;/a&gt; where things didn't break yet. I still learned new things. Good enough for me. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;YAY I DID SOMETHING NEW IN GO&lt;/em&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>How to destructure object and make alias for keys name</title>
      <author>Heru Hartanto</author>
      <pubDate>Fri, 19 Nov 2021 14:16:03 +0000</pubDate>
      <link>https://dev.to/elukuro/how-to-destructure-object-and-make-alias-for-keys-name-3ki</link>
      <guid>https://dev.to/elukuro/how-to-destructure-object-and-make-alias-for-keys-name-3ki</guid>
      <description>&lt;p&gt;Let say you have object that look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userData&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ireland&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you want to destructure this object and change &lt;code&gt;country&lt;/code&gt; key name with &lt;code&gt;nationality&lt;/code&gt;, here how to do that&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;nationality&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userData&lt;/span&gt;
    &lt;span class="cm"&gt;/*
        firstName
        'John'
        lastName
        'Doe'
        country
        Uncaught ReferenceError: country is not defined 
--&amp;gt; because we don't declare country variable
        nationality
        'Ireland'
    */&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
    </item>
  </channel>
</rss>
