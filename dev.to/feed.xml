<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Integrate Video Conferencing To Your Platform</title>
      <author>Sagar Kava</author>
      <pubDate>Thu, 22 Jul 2021 13:24:23 +0000</pubDate>
      <link>https://dev.to/sagarkava/how-to-integrate-video-conferencing-to-your-platform-1djm</link>
      <guid>https://dev.to/sagarkava/how-to-integrate-video-conferencing-to-your-platform-1djm</guid>
      <description>&lt;p&gt;Integrate and Embed high quality live Video conferencing API &amp;amp; SDK to your website and easy integration in just 10 minutes! Make Conversations more engaging by integrating 1-Click video platform on your web.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-video-conferencing-api"&gt;
  &lt;/a&gt;
  What are video conferencing API?
&lt;/h3&gt;

&lt;p&gt;Video conferencing API (Application Programmer’s Interface) is basically like a middle-man between a client’s web browser, and some back-end service that you build or use. An API service can read and write information to a database, for example&lt;/p&gt;

&lt;p&gt;If you are using a website that uses some kind of video conferencing, your web browser is getting your inputs, like your microphone, camera, or a stream of your desktop which can be sent through such an API to a video conferencing service. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-whats-the-purpose-of-video-conferencing-api-for-your-business-collaboration"&gt;
  &lt;/a&gt;
  So What’s the Purpose of Video conferencing API for Your Business Collaboration?
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#the-video-conferencing-api-and-offer-several-benefits-where-two-main-bonuses-are-significant"&gt;
  &lt;/a&gt;
  The video conferencing API and offer several benefits where two main bonuses are significant.
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Faster Software Delivery (Time-to-market Value)&lt;/strong&gt; : The robust APIs help businesses in creating video conference platforms with tools and infrastructure that are easy and quick to implement on cross-platforms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Saves Quite a Lot of Resources&lt;/strong&gt; : With different features enabled APIs and SDKs, developers or experts can integrate any specific chat functionality on any platform with less time consumption. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#embed-video-conferencing-in-your-application-and-web-in-just-10-minutes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Embed video conferencing in your application and web in just 10 minutes!&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Following our announcement on launching the pre-built in the previous blog, we are excited to deliver the manual for the same. This blog will get the readers up and running with the pre-built in no time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-embed-video-callsconferencing-prebuilt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to embed video callsconferencing pre-built&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Embedding a video conferencing to your application becomes easy with &lt;a href="https://videosdk.live"&gt;Videosdk.live&lt;/a&gt;. With our Pre-built, you can add video conferencing on your website and application with just a few lines of code and nothing could be simpler than this. You can share URLs to the participants for the video calls and accommodate more than &lt;strong&gt;5000 people&lt;/strong&gt; over the same call.&lt;/p&gt;

&lt;p&gt;We provide you with a free set-up to experience how to use our prebuilt so you can make the best of it. We also offer you &lt;strong&gt;10,000 minutes, free every month.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prebuilt SDK enables the opportunity to integrate real-time communication SDK without writing explicit code. It supports all modern javascript frameworks such as React JS, Vue, and Angular including Vanilla JS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-get-started-follow-the-steps"&gt;
  &lt;/a&gt;
  &lt;strong&gt;To get started, follow the steps&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;For better understanding, we have divided the prebuilt setup into few steps. Each step describes the code snippet that one needs to use while constructing integrating the SDK.&lt;/p&gt;

&lt;p&gt;The prebuilt has codes that sometimes become difficult for a fresher or an inexperienced developer. In that case, one can take the help of a developer to configure the setup. In aid, you can always reach us, we provide 24/7 customer support for our clients.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-calls-with-videosdklive-offer-users-amazing-features-with-quality-as-our-prior-most-concern"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Video calls with Videosdk.live offer users amazing features with quality as our prior most concern.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;10,000 minutes free each month&lt;/li&gt;
&lt;li&gt;Participant capacity up to 5,000&lt;/li&gt;
&lt;li&gt;End-to-end encrypted calls&lt;/li&gt;
&lt;li&gt;HIPAA Compliance in enterprise mode&lt;/li&gt;
&lt;li&gt;HD and Full HD Video calls&lt;/li&gt;
&lt;li&gt;Audio support of 16kHz to 48kHz&lt;/li&gt;
&lt;li&gt;360 Spatial Audio&lt;/li&gt;
&lt;li&gt;Intelligence Active Speaker Switch&lt;/li&gt;
&lt;li&gt;Real-time messaging&lt;/li&gt;
&lt;li&gt;Cloud recording&lt;/li&gt;
&lt;li&gt;Whiteboard and poll support&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's begin with the prebuilt setup. Read all the steps carefully before installing one in your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-0-generate-access-token-in-node-js"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 0:&lt;/strong&gt; Generate access token in Node JS
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Access token generation (server-side code)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An access token is required to authenticate with Videosdk and make any API calls. You can generate one with the _ &lt;strong&gt;API key&lt;/strong&gt; _ and _ &lt;strong&gt;secret&lt;/strong&gt; _ mentioned in your developer portal at the Videosdk console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require("express");
const jwt = require("jsonwebtoken");
const cors = require("cors");
const request = require("request");

const app = express();
const port = 9000;
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.get("/get-token", (req, res) =&amp;gt; {
  const API_KEY = process.env.ZUJONOW_API_KEY;
  const SECRET_KEY = process.env.ZUJONOW_SECRET_KEY;
  const options = { expiresIn: "10m", algorithm: "HS256" };
  const payload = {
    apikey: API_KEY,
    permissions: ["allow_join", "allow_mod", "ask_join"], // Trigger permission.
  };
  const token = jwt.sign(payload, SECRET_KEY, options);
  res.json({ token });
});

app.listen(port, () =&amp;gt; {
  console.log(`Example app listening at http://localhost:${port}`);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://docs.videosdk.live/docs/tutorials/realtime-communication/prebuilt-sdk/quickstart-prebuilt-js"&gt;Documentation&lt;/a&gt;&lt;br&gt;
The available permissions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;_ &lt;strong&gt;allow_join&lt;/strong&gt; _: A participant will be permitted entry without request&lt;/li&gt;
&lt;li&gt;_ &lt;strong&gt;ask_join&lt;/strong&gt; _: A participant will not be permitted entry without request&lt;/li&gt;
&lt;li&gt;_ &lt;strong&gt;allow_mod&lt;/strong&gt; _: Allow participant to enable/disable other participant’s mic/ webcam&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The generated token must be sent in the _ &lt;strong&gt;Authorization&lt;/strong&gt; _ header for all API calls and it should also be used with the &lt;strong&gt;ZujoSDK.config(token&lt;/strong&gt;) method.&lt;/p&gt;

&lt;p&gt;After the initial step of access token generation, one reaches the next or the first step, creating or joining the meeting.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-1-create-or-join-the-meeting"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 1: Create or join the meeting&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Get a meeting ID for a new meeting or validate an existing meeting ID to join a meeting. Below mentioned are two code snippets, where one is for a new meeting and the other one is for an existing meeting for joining.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a new meeting ID&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.post("/create-meeting/", (req, res) =&amp;gt; {
  const token = req.body.token;
  const ZUJONOW_API_ENDPOINT = `${ZUJONOW_API_ENDPOINT}/api/meetings`;

  const options = {
    method: "POST",
    headers: {
      Authorization: token,
    },
  };

  fetch(ZUJONOW_API_ENDPOINT, options)
    .then((response) =&amp;gt; response.json())
    .then((result) =&amp;gt; res.json(result)) // result will contain meetingId
    .catch((error) =&amp;gt; throw error);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Validate existing meeting ID for joining&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.get("/validate-meeting/:token", (req, res) =&amp;gt; {
  const token = req.params.token;
  const ZUJONOW_API_ENDPOINT = `${ZUJONOW_API_ENDPOINT}/api/meetings`;

  const options = {
    method: "POST",
    headers: {
      Authorization: token,
    },
  };

  fetch(ZUJONOW_API_ENDPOINT, options)
    .then((response) =&amp;gt; response.json())
    .then((result) =&amp;gt; res.json(result)) // result will contain meetingId
    .catch((error) =&amp;gt; throw error);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://docs.videosdk.live/docs/tutorials/realtime-communication/prebuilt-sdk/quickstart-prebuilt-js"&gt;Documentation&lt;/a&gt;&lt;br&gt;
These two code snippets are the initial ones taking you further to the next part of the prebuilt, where you need to install the prebuilt in the web application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Install prebuilt SDK in your Web app&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One can install the prebuilt in your application by using either the &lt;strong&gt;script&lt;/strong&gt; or the &lt;strong&gt;npm package manager.&lt;/strong&gt; Please use the installation method suitable for your project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up prebuilt SDK using&lt;/strong&gt; _ &lt;strong&gt;&lt;/strong&gt; _&lt;/p&gt;

&lt;p&gt;The easiest way to get started is by just adding our prebuilt script to your website.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://sdk.videosdk.live/embedded/index.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up prebuilt SDK using NPM package manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another way is by installing _ &lt;strong&gt;@videosdk.live/js-prebuilt&lt;/strong&gt; _ in your app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @videosdk.live/js-prebuilt

#OR#

yarn add @videosdk.live/js-prebuilt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Heading towards the final steps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Add script into your application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Initialize _ &lt;strong&gt;VideoSDKMeeting&lt;/strong&gt; _ on the page where you want to start the meeting&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const videoMeeting = new VideoSDKMeeting();

const videoMeetingSpecs = {
  micEnabled: true,
  webcamEnabled: true,
  name: "/* NAME OF PARTICIPANT */",
  meetingId: "/* MEETING ID */",
  redirectOnLeave: "/* REDIRECT ON LEAVE */",
  chatEnabled: true,
  screenShareEnabled: true,
  pollEnabled: true,
  whiteBoardEnabled: true,
  participantCanToggleSelfWebcam: true,
  participantCanToggleSelfMic: true,
  raiseHandEnabled: true,
  token: "/* YOUR TOKEN */",
  containerId: null,
};

videoMeeting.init(videoMeetingSpecs);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just copy the script and paste it into your application on the page where you want the meeting to take place.&lt;/p&gt;

&lt;p&gt;Hold on! There is one final step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: Run the Application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once call _ &lt;strong&gt;init&lt;/strong&gt; _ and run the application, you will be able to see the meeting screen.&lt;/p&gt;

&lt;p&gt;Run the application with the prebuilt. Here is the video call API on your application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That’s it. You made it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Send the invite code to the participants or just open the same page in multiple tabs to join the meeting and appreciate yourself investing time on worthwhile goals.&lt;/p&gt;

&lt;p&gt;Connect with us. We are happy to serve you!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#find-our-documentation-here-documentation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Find our documentation here:&lt;/strong&gt;  &lt;strong&gt;&lt;a href="https://docs.videosdk.live/docs/tutorials/realtime-communication/prebuilt-sdk/quickstart-prebuilt-js"&gt;Documentation&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Quickstart for Prebuilt JS | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;videosdk.live tutorials will help you to deep dive into details of all the SDK and API. We tried to include example of all the possible programming langaguges.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-10000-minutes-free-every-month"&gt;
  &lt;/a&gt;
  🚀Get 10,000 minutes free every month🚀
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lZAuF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Untitled-design--7--1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lZAuF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Untitled-design--7--1.gif" alt="Launching: Prebuilt Video SDK for developers 1.0"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
      <category>chat</category>
    </item>
    <item>
      <title>NATO Condemns Cyberattack, Pegasus Cyber Espionage Tool, Steam’s New Console, &amp; more on DevNews!</title>
      <author>dev.to staff</author>
      <pubDate>Thu, 22 Jul 2021 13:23:44 +0000</pubDate>
      <link>https://dev.to/devteam/nato-condemns-cyberattack-pegasus-cyber-espionage-tool-steam-s-new-console-more-on-devnews-kjb</link>
      <guid>https://dev.to/devteam/nato-condemns-cyberattack-pegasus-cyber-espionage-tool-steam-s-new-console-more-on-devnews-kjb</guid>
      <description>&lt;p&gt;Season 5 of the DevNews podcast is here!&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s5-e1-pegasus-cyber-espionage-tool-steam-s-new-console-gunshot-detecting-tech-and-nato-condemns-a-cyberattack"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S5:E1 - Pegasus Cyber Espionage Tool, Steam’s New Console, Gunshot-Detecting Tech, and NATO Condemns a Cyberattack&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s5-e1-pegasus-cyber-espionage-tool-steam-s-new-console-gunshot-detecting-tech-and-nato-condemns-a-cyberattack" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s5-e1-pegasus-cyber-espionage-tool-steam-s-new-console-gunshot-detecting-tech-and-nato-condemns-a-cyberattack" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s5-e1-pegasus-cyber-espionage-tool-steam-s-new-console-gunshot-detecting-tech-and-nato-condemns-a-cyberattack" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s5-e1-pegasus-cyber-espionage-tool-steam-s-new-console-gunshot-detecting-tech-and-nato-condemns-a-cyberattack" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s5-e1-pegasus-cyber-espionage-tool-steam-s-new-console-gunshot-detecting-tech-and-nato-condemns-a-cyberattack"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s5-e1-pegasus-cyber-espionage-tool-steam-s-new-console-gunshot-detecting-tech-and-nato-condemns-a-cyberattack"&gt;
      &lt;img id="episode-profile-image" alt="S5:E1 - Pegasus Cyber Espionage Tool, Steam’s New Console, Gunshot-Detecting Tech, and NATO Condemns a Cyberattack" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Hosts:&lt;/strong&gt; &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 &amp;amp; &lt;a class="mentioned-user" href="https://dev.to/joshpuetz"&gt;@joshpuetz&lt;/a&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Guest:&lt;/strong&gt; &lt;a href="https://twitter.com/marcusjcarey"&gt;Marcus Carey&lt;/a&gt;, Enterprise Architect @ ReliaQuest &lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; &lt;em&gt;— or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s5-e1-pegasus-cyber-espionage-tool-steams-new-console/id1525581923?i=1000529678334"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/78vzczaR9YWT1b2b3c4dkJ"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzMz?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjY1ebY4vbxAhUAAAAAHQAAAAAQCA"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s5-e1-pegasus-cyber-espionage-tool-steams-new-console-gunshot-detecting-tech-and-nato-condemns-a-cyberattack-85594899"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews-dev-fH8hvsClkWp/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=164637671"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/174"&gt;DEV Pods website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  &lt;em&gt;Acknowledgements&lt;/em&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season five sponsor, &lt;a href="https://scoutapm.com/devnews"&gt;Scout APM&lt;/a&gt; ❤️ &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you enjoy the season premiere of DevNews!&lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>5 High-Paying Tech Jobs That Don't Require Coding</title>
      <author>Esther Agbaje</author>
      <pubDate>Thu, 22 Jul 2021 13:19:11 +0000</pubDate>
      <link>https://dev.to/estheragbaje/5-high-paying-tech-jobs-that-don-t-require-coding-5eao</link>
      <guid>https://dev.to/estheragbaje/5-high-paying-tech-jobs-that-don-t-require-coding-5eao</guid>
      <description>&lt;p&gt;Do you feel discouraged from pursuing a career in tech because you don't know how to code?&lt;/p&gt;

&lt;p&gt;Quite frankly, learning to code is hard and not for everyone. &lt;/p&gt;

&lt;p&gt;While programming jobs are common, &lt;strong&gt;there are also high-paying tech jobs that DON'T require you to code&lt;/strong&gt; 💃💃💃 .&lt;/p&gt;

&lt;p&gt;If you're considering a no-code tech career, this post is for you...keep reading!&lt;/p&gt;

&lt;p&gt;The skills needed for some of these roles range from writing to design, user research, people management, etc. &lt;/p&gt;

&lt;p&gt;In this article, we'll deep dive into what these roles and highlight:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Their average annual salary &lt;/li&gt;
&lt;li&gt;The role and job descriptions&lt;/li&gt;
&lt;li&gt;A key success metric&lt;/li&gt;
&lt;li&gt;Useful resources for newbies&lt;/li&gt;
&lt;li&gt;Recommendations for getting a job&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's do this!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-user-interface-designer"&gt;
  &lt;/a&gt;
  1. User Interface Designer
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#average-annual-salary-64543"&gt;
  &lt;/a&gt;
  Average Annual Salary: &lt;a href="https://www.payscale.com/research/US/Job=User_Interface_Designer/Salary"&gt;$64,543&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---oKoxzm4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07cyghqrb7b8ddfoi7gf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---oKoxzm4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07cyghqrb7b8ddfoi7gf.jpeg" alt="UI Design"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#role-amp-description"&gt;
  &lt;/a&gt;
  Role &amp;amp; Description
&lt;/h3&gt;

&lt;p&gt;User Interface (UI) Design is one of the fastest-growing career in the tech space. UI designers play an essential role when building any digital product. Lots of companies out there are looking to build their next digital solution and are in need of UI designers.&lt;/p&gt;

&lt;p&gt;User Interface (UI) Designers are responsible for creating the visual elements for web applications and websites.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The primary role of a UI designer is to design all the screens users see and interact with.&lt;/strong&gt; They leverage various visual elements such as icons, colors, buttons, typography, layout, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are typical job descriptions of UI designers:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Execute all visual designs from concept to final hand-off to the engineering team.&lt;/li&gt;
&lt;li&gt;Create prototypes for new product ideas.&lt;/li&gt;
&lt;li&gt;Present and defend designs and key milestone deliverables to peers and executive level stakeholders.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#success-metric"&gt;
  &lt;/a&gt;
  Success Metric
&lt;/h3&gt;

&lt;p&gt;A major success metric for this role is to ensure user interactions are intuitive, delightful, and efficient. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-ui-design-resources"&gt;
  &lt;/a&gt;
  Useful UI Design Resources:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learnui.design/"&gt;Learn UI Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/ui-design"&gt;Introduction to UI Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://careerfoundry.com/en/blog/ui-design/how-to-become-a-ui-designer/"&gt;How to Become a UI Designer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-user-experience-designer"&gt;
  &lt;/a&gt;
  2. User Experience Designer
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#average-annual-salary-74568"&gt;
  &lt;/a&gt;
  Average Annual Salary: &lt;a href="https://www.payscale.com/research/US/Job=UX_Designer/Salary/fea1a08d/User-Experience-UX-Design"&gt;$74,568&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kLcTiQ4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ftxkl3jscdogau2xz51.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLcTiQ4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ftxkl3jscdogau2xz51.jpeg" alt="UX Designer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#role-amp-description"&gt;
  &lt;/a&gt;
  Role &amp;amp; Description
&lt;/h3&gt;

&lt;p&gt;Unlike UI design, User Experience(UX) design is not focused primarily on visuals. It centers on improving the quality of interaction between a user and the product. &lt;strong&gt;UX designers carry out detailed user research to ensure a user gets an optimal experience when using the digital product.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Here are typical job descriptions of UX designers: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Carry out user research&lt;/li&gt;
&lt;li&gt;Consult with clients to understand their goals and explaining research results&lt;/li&gt;
&lt;li&gt;Conduct usability testing&lt;/li&gt;
&lt;li&gt;Create wireframes, storyboards, sitemaps, and screen flows&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#success-metric"&gt;
  &lt;/a&gt;
  Success Metric
&lt;/h3&gt;

&lt;p&gt;Customer satisfaction is a great way to measure the quality of the user experience provided by your product. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#useful-ux-design-resources"&gt;
  &lt;/a&gt;
  Useful UX Design Resources:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learnui.design/courses/learn-ux-design.html"&gt;Learn UX Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.interaction-design.org/courses"&gt;Learn about UX Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://careerfoundry.com/en/blog/ux-design/how-to-learn-to-be-a-ux-designer/"&gt;How to be a UX Designer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uxplanet.org/top-10-online-platforms-to-learn-ui-ux-design-dcfb613d097a"&gt;Learn UI/UX Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-product-manager"&gt;
  &lt;/a&gt;
  3. Product Manager
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#average-annual-salary-98468"&gt;
  &lt;/a&gt;
  Average Annual Salary: &lt;a href="https://www.payscale.com/research/US/Job=Product_Manager%2C_Software/Salary"&gt;$98,468&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mKwBCDza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onj02j9m0nzpdc3r3gg0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mKwBCDza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onj02j9m0nzpdc3r3gg0.png" alt="Product Management"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#role-amp-description"&gt;
  &lt;/a&gt;
  Role &amp;amp; Description
&lt;/h3&gt;

&lt;p&gt;Companies stay relevant by creating products that delight users. &lt;strong&gt;The core vision of a product manager is to launch features that make users remain happy and satisfied with the product.&lt;/strong&gt; They define the product vision, understand the business and customer requirements, and work closely with Engineers and Designers to fulfill this vision.&lt;/p&gt;

&lt;p&gt;Common job descriptions of Product Managers include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Understand and represent user needs.&lt;/li&gt;
&lt;li&gt;Monitor the market and develop competitive analyses.&lt;/li&gt;
&lt;li&gt;Define a vision for a product.&lt;/li&gt;
&lt;li&gt;Prioritize product features and capabilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#success-metric"&gt;
  &lt;/a&gt;
  Success Metric
&lt;/h3&gt;

&lt;p&gt;A good way to measure success as a Product Manager is using the customer retention rate of your product. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-product-management-resources"&gt;
  &lt;/a&gt;
  Useful Product Management Resources:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/product-manager-nanodegree--nd036"&gt;Udacity Product Management Course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC6hlQ0x6kPbAGjYkoz53cvA"&gt;Product School&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.crackingthepminterview.com/"&gt;Cracking the PM Interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-technical-writer"&gt;
  &lt;/a&gt;
  4. Technical Writer
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#average-annual-salary-61211"&gt;
  &lt;/a&gt;
  Average Annual Salary: &lt;a href="https://www.payscale.com/research/US/Job=Technical_Writer/Salary"&gt;$61,211&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6RnBlfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wycbwph1qvyi689drah.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6RnBlfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wycbwph1qvyi689drah.jpeg" alt="Technical Writing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you love to break complex ideas into easy-to-understand and straightforward content, then Technical Writing is an excellent role for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technical Writers are responsible for creating documentation, instruction manuals, and educational materials.&lt;/strong&gt; They ensure technical "jargon" is communicated in simple terms to their audience. &lt;/p&gt;

&lt;p&gt;Their audience could range from customers, developers, managers, or even technicians.  &lt;/p&gt;

&lt;p&gt;Common job descriptions of Technical writers include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work with internal teams to obtain an in-depth understanding of the product and the documentation requirements.&lt;/li&gt;
&lt;li&gt;Produce high-quality documentation that meets applicable standards and is appropriate for its intended audience.&lt;/li&gt;
&lt;li&gt;Create tutorials to help end-users use a variety of applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#success-metric"&gt;
  &lt;/a&gt;
  Success Metric
&lt;/h4&gt;

&lt;p&gt;You are a successful Technical Writer if you produce content that's easy to understand, engaging, and logically categorized to draw reader interest. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#useful-technical-writing-resources"&gt;
  &lt;/a&gt;
  Useful Technical Writing Resources:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/technical-writing-is-easy/how-to-learn-technical-writing-for-free-c16d191b3cee"&gt;How to learn Technical Writing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/tech-writing"&gt;Google Technical Writing Courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCKsaZMjb3lsLe5YtasDifuA"&gt;Technical Writing Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instructionalsolutions.com/blog/become-a-technical-writer"&gt;How to Become a Technical Writer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-search-engine-optimization-specialist"&gt;
  &lt;/a&gt;
  5. Search Engine Optimization Specialist
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#average-annual-salary-54000"&gt;
  &lt;/a&gt;
  Average Annual Salary: &lt;a href="https://www.payscale.com/research/AE/Job=Search_Engine_Optimization_(SEO)_Specialist/Salary"&gt;$54,000&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JdJqXtAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1s4t8o3ox6no2r9cvek0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JdJqXtAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1s4t8o3ox6no2r9cvek0.jpeg" alt="SEO Specialist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#role-amp-description"&gt;
  &lt;/a&gt;
  Role &amp;amp; Description
&lt;/h3&gt;

&lt;p&gt;A Search Engine Optimization (SEO) Specialist analyzes, evaluates, and performs changes to websites to optimize search engines. They carry out keyword research to improve website rankings on major search engines, such as Google, Yahoo, and Bing.&lt;/p&gt;

&lt;p&gt;Common job descriptions of SEO specialists include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reviewing and analyzing client sites for areas that the SEO can be improved and optimized&lt;/li&gt;
&lt;li&gt;Preparing detailed digital marketing strategy reports&lt;/li&gt;
&lt;li&gt;Identifying powerful keywords to drive the most valuable traffic&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#success-metric"&gt;
  &lt;/a&gt;
  Success Metric
&lt;/h3&gt;

&lt;p&gt;You understand SEO strategies and can improve a website's ranking on search engines like Google.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-seo-resources"&gt;
  &lt;/a&gt;
  Useful SEO Resources:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xsVTqzratPs"&gt;SEO Course for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reliablesoft.net/become-an-seo-expert/"&gt;10 Steps to Become an SEO Expert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.futurelearn.com/career-advice/become-an-seo-expert"&gt;Become an SEO Expert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brainstation.io/career-guides/how-to-become-an-seo-specialist"&gt;How to Become an SEO Expert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Have a Strong Online Portfolio: Most employers will ask for a portfolio. If you're going for a UI/UX role, you can start by creating mock projects for yourself or re-creating your favorite app or website. As time goes on, you gain more skills and could even take on freelance clients. &lt;a href="https://www.behance.net/"&gt;Behance&lt;/a&gt; and &lt;a href="https://dribbble.com/"&gt;Dribbble&lt;/a&gt; are great places to get inspired and also host your online portfolio.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have a properly designed Resume: I recommend taking extra care to format your resume correctly; fonts, colors, spacing, etc. In most cases, I've found out that a 2 column resume layout helps to present all your information excellently.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create/Update your LinkedIn Profile: LinkedIn is a great place to find jobs and connect with other professionals. If you don't already have a LinkedIn profile, you should create a LinkedIn profile before applying to your next role. Ensure you fill all the sections correctly, highlighting your best projects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have a blog: This is especially useful if you're looking to become a Technical Writer. Potential employers will ask you about articles you've written in the past. You can host your blog on &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt;, &lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt;, or &lt;a href="https://dev.to/"&gt;dev.to&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#whichever-career-you-choose-to-pursue-go-all-out-to-be-an-expert-in-it-never-stop-learning-and-working-on-personal-projects-build-your-confidence-and-apply-for-that-next-tech-role-youve-got-this"&gt;
  &lt;/a&gt;
  Whichever career you choose to pursue, go all out to be an expert in it. Never stop learning and working on personal projects. Build your confidence and apply for that next tech role, you've got this! 💖
&lt;/h4&gt;

</description>
      <category>newbie</category>
      <category>career</category>
      <category>tech</category>
      <category>jobs</category>
    </item>
    <item>
      <title>tmux rotate-window</title>
      <author>Waylon Walker</author>
      <pubDate>Thu, 22 Jul 2021 13:03:28 +0000</pubDate>
      <link>https://dev.to/waylonwalker/tmux-rotate-window-45km</link>
      <guid>https://dev.to/waylonwalker/tmux-rotate-window-45km</guid>
      <description>&lt;p&gt;Rotate window is the main way that I navigated tmux before I learned&lt;br&gt;
&lt;code&gt;select-pane&lt;/code&gt;.  It allows you to change your focused pane, or rotate the&lt;br&gt;
position of the panes easily.&lt;/p&gt;

&lt;p&gt;Default keybindings&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bind-key        C-o rotate-window
bind-key          o &lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="nt"&gt;-pane&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; :.+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;My keybindings look just a bit different than the default ones, I do not like&lt;br&gt;
needing to hit prefix for every command, especially for repeated commands.  I&lt;br&gt;
set a similar keybinding to the default one that uses mod instead of prefix.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; M-o &lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="nt"&gt;-pane&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; :.+
&lt;span class="nb"&gt;bind&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; M-O rotate-window
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;Be sure to check out the full youtube playlist and subscribe if you like it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr"&gt;https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/waylonwalker" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Ukb2PhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Izxe95PY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/271838/95e313ca-39fc-4ee6-bf57-ad52b4dcf0d2.png" alt="waylonwalker"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/waylonwalker/how-i-navigate-tmux-in-2021-2ina" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I navigate tmux in 2021&lt;/h2&gt;
      &lt;h3&gt;Waylon Walker ・ May 12 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#bash&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Also check out this long form post for more about how I use tmux.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>cli</category>
      <category>linux</category>
      <category>tmux</category>
    </item>
    <item>
      <title>Ruby Object Oriented Programming (OOP)</title>
      <author>Ahmed Abdelhamid</author>
      <pubDate>Thu, 22 Jul 2021 12:54:15 +0000</pubDate>
      <link>https://dev.to/ahmedhamid13/ruby-object-oriented-programming-oop-1dlk</link>
      <guid>https://dev.to/ahmedhamid13/ruby-object-oriented-programming-oop-1dlk</guid>
      <description>&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt; is a pure object-oriented language and everything appears to Ruby as an &lt;code&gt;object&lt;/code&gt;. Every value in Ruby is an &lt;code&gt;object&lt;/code&gt;, even the most primitive things: strings, numbers and even true and false. Even a &lt;code&gt;class&lt;/code&gt; itself is an &lt;code&gt;object&lt;/code&gt; that is an instance of the Class class. This chapter will take you through all the major functionalities related to Object Oriented Ruby.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#ruby-class-definition"&gt;Ruby Class Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#define-ruby-objects"&gt;Define Ruby Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-initialize-method"&gt;The initialize Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-to_s-method"&gt;The to_s Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#the-instance-variables-and-instance-methods"&gt;The instance Variables and instance Methods&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-instance-variables"&gt;The instance Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-instance-methods"&gt;The instance Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-class-methods-and-variables"&gt;The class Methods and Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#class-constants"&gt;Class Constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#encapsulation"&gt;Encapsulation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-accessor--setter-methods"&gt;The accessor &amp;amp; setter Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-attr_reader-attr_writer-and-attr_accessor"&gt;The attr_reader, attr_writer, and attr_accessor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access-control"&gt;Access Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#self"&gt;Self&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#inheritance"&gt;Inheritance&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#super"&gt;Super&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#polymorphism"&gt;Polymorphism&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#methods-overriding"&gt;Methods Overriding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#operator-overloading"&gt;Operator Overloading&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#freezing-objects"&gt;Freezing Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-object-using-allocate"&gt;Create Object Using Allocate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#class-information"&gt;Class Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coding-examples"&gt;Coding Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ruby-class-definition"&gt;
  &lt;/a&gt;
  Ruby Class Definition
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;class&lt;/strong&gt; is used to specify the form of an &lt;code&gt;object&lt;/code&gt; and it combines data representation and methods for manipulating that data into one neat package. The data and methods within a class are called members of the class.&lt;/p&gt;

&lt;p&gt;When you define a &lt;code&gt;class&lt;/code&gt;, you define a blueprint for a data type. This doesn't actually define any data, but it does define what the &lt;code&gt;class&lt;/code&gt; name means, that is, what an object of the &lt;code&gt;class&lt;/code&gt; will consist of and what operations can be performed on such an object.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;class&lt;/code&gt; definition starts with the keyword &lt;code&gt;class&lt;/code&gt; followed by the &lt;code&gt;class&lt;/code&gt; name and is delimited with an end. For example, we defined the Box &lt;code&gt;class&lt;/code&gt; using the keyword &lt;code&gt;class&lt;/code&gt; as follows −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="n"&gt;code&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;The name must begin with a capital letter and by convention names that contain more than one word are run together with each word capitalized and no separating characters (CamelCase).&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#define-ruby-objects"&gt;
  &lt;/a&gt;
  Define Ruby Objects
&lt;/h2&gt;

&lt;p&gt;A &lt;code&gt;class&lt;/code&gt; provides the blueprints for objects, so basically an object is created from a &lt;code&gt;class&lt;/code&gt;. We declare objects of a &lt;code&gt;class&lt;/code&gt; using new keyword. Following statements declare two objects of &lt;code&gt;class&lt;/code&gt; Box −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="n"&gt;box1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
    &lt;span class="n"&gt;box2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-initialize-method"&gt;
  &lt;/a&gt;
  The initialize Method
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;initialize method&lt;/code&gt; is a standard Ruby &lt;code&gt;class&lt;/code&gt; method and works almost same way as constructor works in other object oriented programming languages. The initialize method is useful when you want to initialize some &lt;code&gt;class&lt;/code&gt; variables at the time of object creation. This method may take a list of parameters and like any other ruby method it would be preceded by &lt;code&gt;def&lt;/code&gt; keyword as shown below −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-tos-method"&gt;
  &lt;/a&gt;
  The to_s Method
&lt;/h2&gt;

&lt;p&gt;Any class you define should have a &lt;code&gt;to_s&lt;/code&gt; instance method to return a string representation of the object. Following is a simple example to represent a Box object in terms of width and height −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="c1"&gt;# define to_s method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;to_s&lt;/span&gt;
            &lt;span class="s2"&gt;"(w:&lt;/span&gt;&lt;span class="si"&gt;#@width&lt;/span&gt;&lt;span class="s2"&gt; ,h:&lt;/span&gt;&lt;span class="si"&gt;#@height&lt;/span&gt;&lt;span class="s2"&gt;)"&lt;/span&gt;  &lt;span class="c1"&gt;# string formatting of the object.&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# to_s method will be called in reference of string automatically.&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"String representation of box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;String representation of box is : (w:10 ,h:20)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#the-instance-variables-and-instance-methods"&gt;
  &lt;/a&gt;
  The instance Variables and instance Methods
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-instance-variables"&gt;The instance Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-instance-methods"&gt;The instance Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-instance-variables"&gt;
  &lt;/a&gt;
  The instance Variables
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;instance variables&lt;/code&gt; are kind of &lt;code&gt;class&lt;/code&gt; attributes and they become properties of objects once objects are created using the &lt;code&gt;class&lt;/code&gt;. Every object's attributes are assigned individually and share no value with other objects. They are accessed using the @ operator within the &lt;code&gt;class&lt;/code&gt; but to access them outside of the &lt;code&gt;class&lt;/code&gt; we use public methods, which are called accessor methods. If we take the above defined &lt;code&gt;class&lt;/code&gt; Box then @width and @height are &lt;code&gt;instance variables&lt;/code&gt; for the &lt;code&gt;class&lt;/code&gt; Box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;# assign instance variables&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-instance-methods"&gt;
  &lt;/a&gt;
  The instance Methods
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;instance methods&lt;/code&gt; are also defined in the same way as we define any other method using &lt;code&gt;def&lt;/code&gt; keyword and they can be used using a class instance only as shown below. Their functionality is not limited to access the instance variables, but also they can do a lot more as per your requirement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="c1"&gt;# instance method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getArea&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# call instance methods&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Area of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Area of the box is : 200&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#the-class-methods-and-variables"&gt;
  &lt;/a&gt;
  The class Methods and Variables
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;class variables&lt;/code&gt; is a variable, which is shared between all instances of a class. In other words, there is one instance of the variable and it is accessed by object instances. while the &lt;code&gt;class method&lt;/code&gt; is a method which used with class without need for creating a new instance.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;class variables :&lt;/strong&gt; are prefixed with two @ characters (@@). A &lt;code&gt;class variable&lt;/code&gt; must be initialized within the &lt;code&gt;class&lt;/code&gt; definition as shown below.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;class method :&lt;/strong&gt; is defined using &lt;code&gt;def&lt;/code&gt; &lt;code&gt;self.methodname()&lt;/code&gt;, which ends with end delimiter and would be called using the class name as classname.methodname as shown below.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# Initialize our class variables&lt;/span&gt;
        &lt;span class="vc"&gt;@@count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;# assign instance avriables&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;

            &lt;span class="vc"&gt;@@count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Box count is : &lt;/span&gt;&lt;span class="si"&gt;#@@count&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create two object&lt;/span&gt;
    &lt;span class="n"&gt;box1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;box2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# call class method to print box count&lt;/span&gt;
    &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printCount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Box count is : 2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#class-constants"&gt;
  &lt;/a&gt;
  Class Constants
&lt;/h2&gt;

&lt;p&gt;You can define a constant inside a class by assigning a direct numeric or string value to a variable, which is defined without using either &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;@@&lt;/code&gt;. By convention, we keep constant names in &lt;code&gt;upper-case&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once a constant is defined, you cannot change its value but you can access a constant directly inside a class much like a variable but if you want to access a constant outside of the class then you would have to use &lt;code&gt;classname::constant&lt;/code&gt; as shown in the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="no"&gt;BOX_COMPANY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"TATA Inc"&lt;/span&gt;
        &lt;span class="no"&gt;BOXWEIGHT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="c1"&gt;# instance method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getArea&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# call instance methods&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Area of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;BOX_COMPANY&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Box weight is: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;BOXWEIGHT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Area of the box is : 200&lt;br&gt;
TATA Inc&lt;br&gt;
Box weight is: 10&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Class constants are inherited and can be overridden like instance methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encapsulation"&gt;
  &lt;/a&gt;
  Encapsulation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#the-accessor--setter-methods"&gt;The accessor &amp;amp; setter Methods&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-attr_reader-attr_writer-and-attr_accessor"&gt;The attr_reader, attr_writer, and attr_accessor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#access-control"&gt;Access Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#self"&gt;Self&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-accessor-amp-setter-methods"&gt;
  &lt;/a&gt;
  The accessor &amp;amp; setter Methods
&lt;/h3&gt;

&lt;p&gt;To make the variables available from outside the class, they must be defined within &lt;code&gt;accessor methods&lt;/code&gt;, these &lt;code&gt;accessor methods&lt;/code&gt; are also known as a &lt;code&gt;getter methods&lt;/code&gt;. Ruby also provides a way to set the values of variables from outside of the class using &lt;code&gt;setter methods&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Following example shows the usage of &lt;code&gt;accessor methods&lt;/code&gt; and &lt;code&gt;setter methods&lt;/code&gt; −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="c1"&gt;# accessor methods&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getWidth&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getHeight&lt;/span&gt;
            &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="c1"&gt;# setter methods&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setWidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setHeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# use accessor methods&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printHeight&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Width of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Height of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

    &lt;span class="c1"&gt;# use setter methods&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;

    &lt;span class="c1"&gt;# use accessor methods&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Width of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Height of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Width of the box is : 10&lt;br&gt;
Height of the box is : 20&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Width of the box is : 30&lt;br&gt;
Height of the box is : 50&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#the-attrreader-attrwriter-and-attraccessor"&gt;
  &lt;/a&gt;
  The attr_reader, attr_writer, and attr_accessor
&lt;/h4&gt;

&lt;p&gt;Ruby also provide a helping methods for &lt;code&gt;setter methods&lt;/code&gt; and &lt;code&gt;getter methods&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;attr_reader :&lt;/strong&gt; creates only the reader.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;attr_writer :&lt;/strong&gt; creates only the writer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;attr_accessor :&lt;/strong&gt; creates reader and writer.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;## Setter and Getter for width and height &lt;/span&gt;
        &lt;span class="nb"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:height&lt;/span&gt;

        &lt;span class="c1"&gt;## Getter for width and height&lt;/span&gt;
        &lt;span class="c1"&gt;# attr_reader :width, :height&lt;/span&gt;

        &lt;span class="c1"&gt;# Setter for width and height&lt;/span&gt;
        &lt;span class="c1"&gt;# attr_writer :width, :height&lt;/span&gt;

        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# use get width and height&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;height&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Width of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Height of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

    &lt;span class="c1"&gt;# use set width and height&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;

    &lt;span class="c1"&gt;# use get width and height&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;height&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Width of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Height of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Width of the box is : 10&lt;br&gt;
Height of the box is : 20&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Width of the box is : 30&lt;br&gt;
Height of the box is : 50&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#access-control"&gt;
  &lt;/a&gt;
  Access Control
&lt;/h3&gt;

&lt;p&gt;Ruby gives you three levels of protection at instance methods level, which may be public, private, or protected. Ruby does not apply any access control over instance and class variables.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Public Methods&lt;/strong&gt; − A &lt;code&gt;public&lt;/code&gt; methods can be called by anyone. Methods are &lt;code&gt;public&lt;/code&gt; by default except for initialize, which is always &lt;code&gt;private&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Private Methods&lt;/strong&gt; − A &lt;code&gt;private&lt;/code&gt; methods cannot be accessed, or even viewed from outside the class. Only the class methods can access &lt;code&gt;private&lt;/code&gt; members.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Protected Methods&lt;/strong&gt; − A &lt;code&gt;protected&lt;/code&gt; method can be invoked only by objects of the defining class and its subclasses. Access is kept within the family.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Following is a simple example to show the syntax of all the three access modifiers −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="c1"&gt;# instance method by default it is public&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getArea&lt;/span&gt;
            &lt;span class="n"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;getHeight&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="c1"&gt;# define private accessor methods&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getWidth&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getHeight&lt;/span&gt;
            &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="c1"&gt;# make them private&lt;/span&gt;
        &lt;span class="kp"&gt;private&lt;/span&gt; &lt;span class="ss"&gt;:getWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:getHeight&lt;/span&gt;

        &lt;span class="c1"&gt;# instance method to print area&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printArea&lt;/span&gt;
            &lt;span class="vi"&gt;@area&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;getHeight&lt;/span&gt;
            &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Big box area is : &lt;/span&gt;&lt;span class="si"&gt;#@area&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="c1"&gt;# make it protected&lt;/span&gt;
        &lt;span class="kp"&gt;protected&lt;/span&gt; &lt;span class="ss"&gt;:printArea&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# call instance methods&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Area of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

    &lt;span class="c1"&gt;# try to call protected or methods&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result. Here, first method is called successfully but second method gave a problem.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Area of the box is : 200&lt;br&gt;
test.rb:42: protected method &lt;code&gt;printArea&lt;/code&gt; called for # (NoMethodError)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#self"&gt;
  &lt;/a&gt;
  Self
&lt;/h3&gt;

&lt;p&gt;The reserved word &lt;strong&gt;self&lt;/strong&gt; refers to the calling object, which for us can mean a specific instance of the class, and we use it to call methods or variables within class.&lt;br&gt;
Also &lt;strong&gt;self&lt;/strong&gt; can be refers to the class itself, check &lt;a href="#the-class-methods-and-variables"&gt;The Class Methods&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#inheritance"&gt;
  &lt;/a&gt;
  Inheritance
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#super"&gt;Super&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the most important concepts in object-oriented programming is that of inheritance. &lt;strong&gt;Inheritance&lt;/strong&gt; allows us to define a class in terms of another class, which makes it easier to create and maintain an application. It provides an opportunity to reuse the code functionality and fast implementation time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Unfortunately Ruby does not support multiple levels of inheritances but Ruby supports mixins. A mixin is like a specialized implementation of multiple inheritance in which only the interface portion is inherited&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When creating a class, instead of writing completely new data members and member functions, the programmer can designate that the new class should inherit the members of an existing class. This existing class is called the &lt;strong&gt;base class&lt;/strong&gt; or &lt;strong&gt;superclass&lt;/strong&gt; or &lt;strong&gt;parent class&lt;/strong&gt;, and the new class is referred to as the &lt;strong&gt;derived class&lt;/strong&gt; or &lt;strong&gt;sub-class&lt;/strong&gt; or &lt;strong&gt;child class&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ruby also supports the concept of subclassing, i.e., inheritance and following example explains the concept. The syntax for extending a class is simple. Just add a &lt;code&gt;&amp;lt;&lt;/code&gt; character and the name of the &lt;code&gt;superclass&lt;/code&gt; to your class statement. For example, following define a class BigBox as a &lt;code&gt;subclass&lt;/code&gt; of Box −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="c1"&gt;# instance method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getArea&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# define a subclass&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BigBox&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;

        &lt;span class="c1"&gt;# add a new instance method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printArea&lt;/span&gt;
            &lt;span class="vi"&gt;@area&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
            &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Big box area is : &lt;/span&gt;&lt;span class="si"&gt;#@area&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BigBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# print the area&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Big box area is : 200&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#super"&gt;
  &lt;/a&gt;
  Super
&lt;/h3&gt;

&lt;p&gt;The reserved word &lt;strong&gt;super&lt;/strong&gt; passes any arguments supplied up the method lookup path to the first method of the same name that Ruby finds, which it then invokes. at the next example &lt;strong&gt;super&lt;/strong&gt; will pass arguments from child class's initializer method to parent class's initializer method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="c1"&gt;# instance method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getArea&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# define a subclass&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BigBox&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="c1"&gt;# add a new instance method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printArea&lt;/span&gt;
            &lt;span class="vi"&gt;@area&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
            &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Big box area is : &lt;/span&gt;&lt;span class="si"&gt;#@area&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BigBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# print the area&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Big box area is : 200&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#polymorphism"&gt;
  &lt;/a&gt;
  Polymorphism
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#methods-overriding"&gt;&lt;strong&gt;Methods Overriding :&lt;/strong&gt; Dynamic or Runtime polymorphism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#operator-overloading"&gt;&lt;strong&gt;Operator Overloading :&lt;/strong&gt; Static or Compile time polymorphism&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#methods-overriding"&gt;
  &lt;/a&gt;
  Methods Overriding
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Dynamic or Runtime polymorphism&lt;/strong&gt;&lt;br&gt;
Though you can add new functionality in a derived class, but sometimes you would like to change the behavior of already defined method in a parent class. You can do so simply by keeping the method name same and overriding the functionality of the method as shown below in the example −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="c1"&gt;# instance method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getArea&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# define a subclass&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BigBox&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;

        &lt;span class="c1"&gt;# change existing getArea method as follows&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getArea&lt;/span&gt;
            &lt;span class="vi"&gt;@area&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
            &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Big box area is : &lt;/span&gt;&lt;span class="si"&gt;#@area&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BigBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# print the area using overriden method.&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#operator-overloading"&gt;
  &lt;/a&gt;
  Operator Overloading
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Static or Compile time polymorphism&lt;/strong&gt;&lt;br&gt;
We'd like the &lt;code&gt;+&lt;/code&gt; operator to perform vector addition of two Box objects using &lt;code&gt;+&lt;/code&gt;, the &lt;code&gt;*&lt;/code&gt; operator to multiply a Box width and height by a scalar, and the unary &lt;code&gt;-&lt;/code&gt; operator to do negate the width and height of the Box. Here is a version of the Box class with mathematical operators defined −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# Initialize the width and height&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="c1"&gt;# Define + to do vector addition&lt;/span&gt;
            &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;-@&lt;/span&gt;           &lt;span class="c1"&gt;# Define unary minus to negate width and height&lt;/span&gt;
            &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="vi"&gt;@height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scalar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="c1"&gt;# To perform scalar multiplication&lt;/span&gt;
            &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;scalar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;scalar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#freezing-objects"&gt;
  &lt;/a&gt;
  Freezing Objects
&lt;/h2&gt;

&lt;p&gt;Sometimes, we want to prevent an object from being changed. The freeze method in Object allows us to do this, effectively turning an object into a constant. Any object can be frozen by invoking Object.freeze. A frozen object may not be modified: you can't change its instance variables.&lt;/p&gt;

&lt;p&gt;You can check if a given object is already frozen or not using Object.frozen? method, which returns true in case the object is frozen otherwise a false value is return. Following example clears the concept −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="c1"&gt;# accessor methods&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getWidth&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getHeight&lt;/span&gt;
            &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="c1"&gt;# setter methods&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setWidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setHeight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# let us freez this object&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;freeze&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;frozen?&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Box object is frozen object"&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Box object is normal object"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# now try using setter methods&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;

    &lt;span class="c1"&gt;# use accessor methods&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Width of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Height of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Box object is frozen object&lt;br&gt;
test.rb:20:in 'setWidth=': can't modify frozen object (TypeError) from test.rb:39&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#create-object-using-allocate"&gt;
  &lt;/a&gt;
  Create Object Using Allocate
&lt;/h2&gt;

&lt;p&gt;There may be a situation when you want to create an object without calling its constructor initialize i.e. using new method, in such case you can call allocate, which will create an uninitialized object for you as in the following example −&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="c1"&gt;# define a class&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="nb"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:height&lt;/span&gt;

        &lt;span class="c1"&gt;# constructor method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="c1"&gt;# instance method&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getArea&lt;/span&gt;
            &lt;span class="vi"&gt;@width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="vi"&gt;@height&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# create an object using new&lt;/span&gt;
    &lt;span class="n"&gt;box1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# create another object using allocate&lt;/span&gt;
    &lt;span class="n"&gt;box2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;allocate&lt;/span&gt;

    &lt;span class="c1"&gt;# call instance method using box1&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Area of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

    &lt;span class="c1"&gt;# call instance method using box2&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Area of the box is : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Area of the box is : 200&lt;br&gt;
test.rb:14: warning: instance variable @width not initialized&lt;br&gt;
test.rb:14: warning: instance variable @height not initialized&lt;br&gt;
test.rb:14:in 'getArea': undefined method for nil:NilClass (NoMethodError) from test.rb:29&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#class-information"&gt;
  &lt;/a&gt;
  Class Information
&lt;/h2&gt;

&lt;p&gt;If class definitions are executable code, this implies that they execute in the context of some object: self must reference something. Let's find out what it is.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/ruby -w&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Box&lt;/span&gt;
        &lt;span class="c1"&gt;# print class information&lt;/span&gt;
        &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Type of self = &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;type&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Name of self = &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it produces the following result −&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Type of self = Class&lt;br&gt;
Name of self = Box&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means that a class definition is executed with that class as the current object. This means that methods in the metaclass and its superclasses will be available during the execution of the method definition.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coding-examples"&gt;
  &lt;/a&gt;
  Coding Examples
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ahmedhamid13/Ruby-Object-Oriented-Programming-Exercises"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RKX9y7bz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Coding-Examples-grey%3F%26logo%3Dgit" alt="Git"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.tutorialspoint.com/ruby/ruby_object_oriented.htm"&gt;Tutorials Point&lt;/a&gt;&lt;br&gt;
&lt;a href="https://medium.com/launch-school/the-basics-of-oop-ruby-26eaa97d2e98"&gt;OOP Basics&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>oop</category>
      <category>rails</category>
      <category>programming</category>
    </item>
    <item>
      <title>The Best Python Frameworks for web development</title>
      <author>Rocky</author>
      <pubDate>Thu, 22 Jul 2021 12:49:43 +0000</pubDate>
      <link>https://dev.to/codelivly/the-best-python-frameworks-for-web-development-fnm</link>
      <guid>https://dev.to/codelivly/the-best-python-frameworks-for-web-development-fnm</guid>
      <description>&lt;p&gt; By &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/&amp;amp;ved=2ahUKEwier_PQ1fbxAhXa4jgGHVYsAvoQFjAAegQIBxAC&amp;amp;usg=AOvVaw1PUPii-XosNgl1ZTInOseb"&gt;&lt;span&gt;Codelivly&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/what-is-python-basis-of-python-explained/&amp;amp;ved=2ahUKEwiXxNL01fbxAhWrzTgGHf7VC0kQFjAAegQIBRAC&amp;amp;usg=AOvVaw3QgOqpH-tRUYruiDiis7Z7"&gt;Python&lt;/a&gt; is on an unexpected upward movement. And, the demand is sure to continue with no sign of dampening anytime soon. Python is expected to overtake Java and C# in the coming years, which is a clear indication of a lot more to come. Many of today’s big tech companies such as Google, Netflix, Instagram, are selecting Python frameworks for web development.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Read More&lt;/b&gt;: &lt;b&gt;&lt;a href="https://bit.ly/3rwqtHN"&gt;&lt;span&gt;Best Python Frameworks For Web Development&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>10 Steps that will help you turn your idea into a product. Part 1</title>
      <author>Aleksandr Skobeltcyn</author>
      <pubDate>Thu, 22 Jul 2021 11:50:41 +0000</pubDate>
      <link>https://dev.to/skob/10-steps-that-will-help-you-turn-your-idea-into-a-product-part-1-2g31</link>
      <guid>https://dev.to/skob/10-steps-that-will-help-you-turn-your-idea-into-a-product-part-1-2g31</guid>
      <description>&lt;p&gt;Hi Devs!&lt;/p&gt;

&lt;p&gt;Do you remember how you got the &lt;strong&gt;💎idea&lt;/strong&gt; and want to make it but don't know &lt;strong&gt;how&lt;/strong&gt; to approach it?&lt;/p&gt;

&lt;p&gt;In this series of articles, I will share the whole process of it.&lt;/p&gt;

&lt;p&gt;Let's start with &lt;strong&gt;Part 1&lt;/strong&gt;, what we have for today:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IDI9IQuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8629vqtbysnsrndmg3hp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IDI9IQuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8629vqtbysnsrndmg3hp.png" alt="Group 177"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Each step has a&lt;/em&gt; 🎯 &lt;em&gt;end goal so it's easy to be laser-focused&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-idea"&gt;
  &lt;/a&gt;
  1. Idea
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Clear vision&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My idea is simple: Habit-tracking app.&lt;/p&gt;

&lt;p&gt;After my &lt;a href="https://dev.to/skob/reachable-dreams-step-by-step-3l0k"&gt;one-year experiment&lt;/a&gt; I decided to create an app that will help me stick with good habits.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-motivation"&gt;
  &lt;/a&gt;
  2. Motivation
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Motivational boost&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At the start, the motivation level is super high, but based on my experience product development will take time.&lt;/p&gt;

&lt;p&gt;So I decided to write down things that will help me stay motivated for a longer time:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;New skills: Flutter/Firebase/Figma and improved CV&lt;/li&gt;
&lt;li&gt;App that will help me and my close friends&lt;/li&gt;
&lt;li&gt;Practice Vim&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#3-mockup"&gt;
  &lt;/a&gt;
  3. Mockup
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: general visuals to understand the architecture&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Opchzmpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtlhhaxhgukgr0dt95cw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Opchzmpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtlhhaxhgukgr0dt95cw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here I decided to not go into details, only features that help make the job done: &lt;strong&gt;Create a habit and mark it as done&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-market-research"&gt;
  &lt;/a&gt;
  4. Market research
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Update my knowledge in a field&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, I bounced about the idea with my friends first, to listen to what they think. A &lt;a href="https://hamedmp.com/"&gt;friend&lt;/a&gt; of mine already researched the topic so he gave me pretty good sources to scrutinize.&lt;/p&gt;

&lt;p&gt;I have looked at 22 apps that exist in Apple/Play stores, noted the pros and cons of each to better understand the landscape. &lt;/p&gt;

&lt;p&gt;And created the notion page with:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Features that are mostly in demand in such kinds of apps&lt;/li&gt;
&lt;li&gt;What people don't like in rivals apps&lt;/li&gt;
&lt;li&gt;The strong and weak sides of each app on the market&lt;/li&gt;
&lt;li&gt;Keywords&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#5-technology-choice-and-education"&gt;
  &lt;/a&gt;
  5. Technology choice and Education
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Define a tech stack&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I set two main criteria in order to simplify choice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Speed and cost - faster and lower respectively &lt;/li&gt;
&lt;li&gt;Feasibility - have access to devices API that app required&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And what we have had on a table:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://web.dev/progressive-web-apps/"&gt;&lt;strong&gt;PWA&lt;/strong&gt;&lt;/a&gt; - progressive web app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cordova.apache.org/"&gt;&lt;strong&gt;Phone Gap/Cordova&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Native Android and IOS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://reactnative.dev/"&gt;&lt;strong&gt;React Native&lt;/strong&gt;&lt;/a&gt; / &lt;a href="https://flutter.dev/"&gt;&lt;strong&gt;Flutter&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look a bit in detail at how the decision here has been made.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PWA&lt;/strong&gt; - Seems good, but after &lt;a href="https://firt.dev/pwa-2021/"&gt;read this research&lt;br&gt;
&lt;/a&gt; I decided to not go this way. The onboarding process for IOS users seems pretty horrible from a UX point of view, at least for now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phone Gap/Cordova&lt;/strong&gt; - Same as start something new with PHP now. It works, but you know what I mean😁.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Native apps&lt;/strong&gt; - Two code bases will be expensive to develop and maintain. And the benefits of the native approach are just overkilling for a simple app like mine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React Native/Flutter&lt;/strong&gt; - Both actually perfectly fit the task. After a quick look at the documentation, checked the GitHub trends, and available tooling I decided to go with Flutter. &lt;/p&gt;

&lt;p&gt;Here is how made that decision:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Flutter has been developed and maintain by Google and I have experience in Angular.
So should be easy to understand things from the same provider&lt;/li&gt;
&lt;li&gt;As a backend, I decided to go with Firebase. Because it speeds up the process and seems like have good integration with Flutter&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And I spent 1 day watching &lt;a href="https://www.youtube.com/watch?v=zLOaNyuO670"&gt;flutter crash-course&lt;/a&gt;, reading documentation, learning about Firebase basics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-setting-up-the-environment"&gt;
  &lt;/a&gt;
  6. Setting up the environment
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: speed up the development&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I wanted something that is already working, so I looked at the boilerplates, starters to bring myself as close to the working app as possible.&lt;/p&gt;

&lt;p&gt;I found &lt;a href="https://github.com/delay/flutter_starter"&gt;one&lt;/a&gt;, and in a few minutes, the simple app with authentication had already been on my phone. Cool, isn't it?&lt;/p&gt;

&lt;p&gt;With a starter code, I am helped myself a lot since I am new at flutter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I learned from other developers how to structure the code in a right way&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I decreased the development time quite a lot&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-mvp-and-feedback-from-instagram"&gt;
  &lt;/a&gt;
  7. MVP and Feedback from Instagram
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: feedback and extra motivation boost&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cool, after few days of modification starter I had a working app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--khsbLRp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdss86i94aknco33aw3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--khsbLRp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdss86i94aknco33aw3p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I uploaded a video of the app to Instagram with a simple question: &lt;strong&gt;Would you like to use such an app?&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xC0PjDHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veog8rcamoiiufuwzc7r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xC0PjDHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veog8rcamoiiufuwzc7r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The result was good, even though I knew I have to be careful with this data because of &lt;a href="https://www.linkedin.com/pulse/ugly-baby-syndrome-johnny-killerup-pedersen/"&gt;Ugly Baby Syndrome&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Anyway, it was good for the motivation, the public announcement created positive pressure on me and I had first feedback.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-proper-uiux"&gt;
  &lt;/a&gt;
  8. Proper UI/UX
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: UI layout&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I went to a &lt;a href="https://dribbble.com/"&gt;dribble&lt;/a&gt; for the inspiration. Looked at how the designers show certain things in an app like mine, what color scheme is usually used.&lt;/p&gt;

&lt;p&gt;So after one day of good flow, I got this in the &lt;a href="http://figma.com/"&gt;Figma&lt;/a&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RDacLhi5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lqjl6a18ff5pyykdqtf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RDacLhi5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lqjl6a18ff5pyykdqtf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I did run the second survey on Instagram that showed that most people prefer grid view instead of the list. So I picked that one for the first version &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-development"&gt;
  &lt;/a&gt;
  9. Development
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Working App with new UI/UX&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It took me 2 extra days to make it real. Some UI things have been removed to speed up the process.&lt;/p&gt;

&lt;p&gt;Few key points here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First I created a theme class with colors, styles, and fonts. That will guarantee the same style across the whole app&lt;/li&gt;
&lt;li&gt;The rest is just coding and by having a complete UI, it is just a matter of time. &lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://www.vim.org/"&gt;vim&lt;/a&gt; speed up that proceed for nearly 30-40%, despite the painful learning curve&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#10-first-release"&gt;
  &lt;/a&gt;
  10. First Release
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Google Play link to share&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So here I chose the same approach as described above: Theory + Practice in 20/80 proportion.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;I looked at how other app developers present their products in stores&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read the articles about how to make a better visuals, SEO and higher acquisitions rate&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Made visuals in Figma and Photoshop&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wrote SEO description with wording from Market Research&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Built a simple &lt;a href="https://better.me"&gt;website&lt;/a&gt; to basically place &lt;strong&gt;terms of use&lt;/strong&gt; and &lt;strong&gt;privacy policy&lt;/strong&gt; which is required by App Store and Google Play&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And after a 3 days (Google reviewed took exactly that time) I am finally got a approved app here: &lt;a href="https://play.google.com/store/apps/details?id=io.skob.bettre"&gt;Google Play&lt;/a&gt; 🎉🎉🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next
&lt;/h2&gt;

&lt;p&gt;Cool, I hope it was a fun read for you! Now the plan is to gain a small user base to test in a real environment, so you are very welcome to join &lt;a href="https://play.google.com/store/apps/details?id=io.skob.bettre"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;After the testing process will be done, I will make a release for IOS so I could start more aggressive distribution such as Product Hunt, Google/Facebook Ads, and so on. About this, you can read in Part 2, which will be published after the work is done!&lt;/p&gt;

&lt;p&gt;Subscribe to stay tuned!&lt;/p&gt;

&lt;p&gt;And I really appreciate your negative or positive feedback in the comment section below!&lt;/p&gt;

&lt;p&gt;Best,&lt;br&gt;
Alex&lt;br&gt;
&lt;a href="https://skob.io"&gt;https://skob.io&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>mobile</category>
      <category>productivity</category>
      <category>startup</category>
    </item>
    <item>
      <title>Arrays Questions: Reverse an array</title>
      <author>Kathan Vakharia</author>
      <pubDate>Thu, 22 Jul 2021 11:13:11 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/arrays-question-reverse-an-array-5ann</link>
      <guid>https://dev.to/kathanvakharia/arrays-question-reverse-an-array-5ann</guid>
      <description>&lt;p&gt;In this series of posts, I will discuss coding questions on the &lt;code&gt;Arrays&lt;/code&gt; Data structure.&lt;br&gt;
The posts in this series will be organized in the following way,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Question Link ❓&lt;/li&gt;
&lt;li&gt;Possible Explanation 📝&lt;/li&gt;
&lt;li&gt;Documented C++ Code 🧹&lt;/li&gt;
&lt;li&gt;Time and Space Complexity Analysis ⌛🌌&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#the-question"&gt;
  &lt;/a&gt;
  The Question
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/print-array-in-reverse/"&gt;https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/print-array-in-reverse/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 Give yourself at least 15-20 mins to figure out the solution :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h2&gt;

&lt;p&gt;The idea is to maintain two index variables &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;, initially pointing to the &lt;em&gt;first&lt;/em&gt; element and &lt;em&gt;last&lt;/em&gt; element of the array respectively.&lt;/p&gt;

&lt;p&gt;And then, we will &lt;em&gt;swap&lt;/em&gt; values in the following order: &lt;strong&gt;(first, last)&lt;/strong&gt; → &lt;strong&gt;(second, second-last)&lt;/strong&gt; → &lt;strong&gt;(third, third, third-last)&lt;/strong&gt; ....until we reach the &lt;em&gt;middle&lt;/em&gt; element of the array. &lt;/p&gt;

&lt;p&gt;Here's the pseudo-code,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    while start &amp;lt; end:
            swap(arr[start], arr[end])
            start = start + 1 //move start ahead by one step
            end = end - 1 //move end back by one step
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;💡 If you are wondering why there's &lt;code&gt;&amp;lt;&lt;/code&gt; instead of &lt;code&gt;≤&lt;/code&gt; ? It's because &lt;code&gt;start&lt;/code&gt; will be equal to &lt;code&gt;end&lt;/code&gt; only in the case of &lt;em&gt;odd&lt;/em&gt; length arrays and they both will point to the &lt;em&gt;middle&lt;/em&gt; element of the array. And it does no good to swap it with itself as the array is already reversed by then.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#still-confused"&gt;
  &lt;/a&gt;
  Still confused?
&lt;/h3&gt;

&lt;p&gt;Assume index starts from zero.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Think what happens when &lt;code&gt;arr.length = 3&lt;/code&gt;(&lt;em&gt;odd&lt;/em&gt;), after one iteration, &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; both will point to index=1 and array is already reversed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Think what happens when &lt;code&gt;arr.length = 4&lt;/code&gt;(&lt;em&gt;even&lt;/em&gt;), after two iteration, &lt;code&gt;start(2)&lt;/code&gt; will be greater than &lt;code&gt;end(1)&lt;/code&gt; and array will be reversed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  C++ Code
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;//untill we reach the middle &lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;//swap arr[start] and arr[end]&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//move start ahead&lt;/span&gt;
        &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//move end back&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//driver code&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#complexity-analysis"&gt;
  &lt;/a&gt;
  Complexity Analysis
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;N&lt;/code&gt;: length of the array&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-complexity-on"&gt;
  &lt;/a&gt;
  Time Complexity: O(N)
&lt;/h3&gt;

&lt;p&gt;Since we are iterating nearly N/2 times, thus time will be O(N/2)  = O(N).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#space-complexity-o1"&gt;
  &lt;/a&gt;
  Space Complexity: O(1)
&lt;/h3&gt;

&lt;p&gt;We didn't use any extra space.&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>arrays</category>
      <category>codenewbie</category>
      <category>cpp</category>
    </item>
    <item>
      <title>Debugging JavaScript, DOM, CSS and accessing the browser console without leaving Visual Studio Code</title>
      <author>Christian Heilmann</author>
      <pubDate>Thu, 22 Jul 2021 10:58:27 +0000</pubDate>
      <link>https://dev.to/codepo8/debugging-javascript-dom-css-and-accessing-the-browser-console-without-leaving-visual-studio-code-250i</link>
      <guid>https://dev.to/codepo8/debugging-javascript-dom-css-and-accessing-the-browser-console-without-leaving-visual-studio-code-250i</guid>
      <description>&lt;p&gt;Now that &lt;a href="https://code.visualstudio.com"&gt;Visual Studio Code&lt;/a&gt; has an in-built JavaScript debugger, it has become incredibly convenient to debug your project without leaving the editor. You can debug JavaScript, tweak CSS and the DOM and interact with the browser Console right inside VS Code. And you don't need to know which extensions to install as the editor guides you along the way. &lt;/p&gt;

&lt;p&gt;Under the hood, this uses the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.js-debug"&gt;JS Debugger&lt;/a&gt; and the &lt;a href="https://aka.ms/devtools-for-code%20extensions"&gt;Edge Tools for VS Code&lt;/a&gt;. Here's what the flow looks like:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UqFOICZRPAo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you haven't got the Edge Tools extension installed, VS Code will prompt you to do so the first time, as shown in this screencast:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1-6fRdqyoA0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In addition to breakpoint, DOM and CSS debugging, Visual Studio Code's Debug Console now also is the same &lt;a href="https://docs.microsoft.com/microsoft-edge/devtools-guide-chromium/console/"&gt;Console&lt;/a&gt; you normally get in the browser. You can access the window object of the browser instance and use all the &lt;a href="https://docs.microsoft.com/microsoft-edge/devtools-guide-chromium/console/utilities"&gt;Console Utilty Methods&lt;/a&gt; like &lt;code&gt;$&lt;/code&gt; and &lt;code&gt;$$&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IF69nJ7El2Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;To run the debugger automatically on your project, you need to create a &lt;code&gt;launch.json&lt;/code&gt; file and define the debugger as the launch type. The Edge Tools extension can also do that automatically for you. If your application is not on &lt;code&gt;localhost:8080&lt;/code&gt; you need to tweak the &lt;code&gt;url&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.2.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;configurations&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pwa-msedge&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;launch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Launch Edge against localhost&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webRoot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;${workspaceFolder}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to see this in action, you can &lt;a href="https://github.com/codepo8/simple-to-do"&gt;download/fork the demo to-do app&lt;/a&gt; I used in the screencasts. &lt;/p&gt;

&lt;p&gt;What do you think? Anything you're still missing in that workflow? &lt;a href="https://github.com/microsoft/vscode-edge-devtools/issues"&gt;File an issue on GitHub&lt;/a&gt; and tell us about it!&lt;/p&gt;

</description>
      <category>visualstudiocode</category>
      <category>debugging</category>
      <category>browsers</category>
    </item>
    <item>
      <title>Connect Terraform to Azure Devops Git Repos over SSH</title>
      <author>Marcel.L</author>
      <pubDate>Thu, 22 Jul 2021 10:52:57 +0000</pubDate>
      <link>https://dev.to/pwd9000/connect-terraform-to-azure-devops-git-repos-over-ssh-163c</link>
      <guid>https://dev.to/pwd9000/connect-terraform-to-azure-devops-git-repos-over-ssh-163c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#terraform-module-sources"&gt;
  &lt;/a&gt;
  Terraform module sources?
&lt;/h2&gt;

&lt;p&gt;Terraform supports many different &lt;a href="https://www.terraform.io/docs/language/modules/sources.html"&gt;Module Sources&lt;/a&gt;. In todays tutorial we look at how we can configure an Azure DevOps repo with SSH and use this repo as a module source in terraform. We will also take a look at how we can use the &lt;strong&gt;install SSH key&lt;/strong&gt; DevOps task in a pipeline that runs terraform so that the DevOps agent running the terraform deployment can connect to the DevOps repo as a source over SSH.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-prepare-ssh-key"&gt;
  &lt;/a&gt;
  Step 1: Prepare SSH Key
&lt;/h2&gt;

&lt;p&gt;First we have to create a SSH key pair:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install Git for windows.&lt;/li&gt;
&lt;li&gt;In a powershell console run: &lt;code&gt;ssh-keygen&lt;/code&gt;. This will create a private key: &lt;code&gt;id_rsa&lt;/code&gt; and a public key: &lt;code&gt;id_rsa.pub&lt;/code&gt; under the following path: &lt;code&gt;%UserProfile%/.ssh&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If a passphrase was used in the creation of the key pair, make a note of the passphrase as we will need it later on.&lt;/li&gt;
&lt;li&gt;Next run: &lt;code&gt;ssh-keyscan -H -t rsa ssh.dev.azure.com &amp;gt; $env:userprofile/.ssh/known_hosts&lt;/code&gt;. The content of the file will be used later on in the setup of the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; devops task in our DevOps pipeline.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---jWDCrIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/Sshkey01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---jWDCrIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/Sshkey01.png" alt="Sshkey01"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-prepare-azure-devops"&gt;
  &lt;/a&gt;
  Step 2: Prepare Azure Devops
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Copy the private key file created in the previous step &lt;code&gt;id_rsa&lt;/code&gt; into azure &lt;strong&gt;pipelines -&amp;gt; Library -&amp;gt; Secure files&lt;/strong&gt;. The file can be renamed to make it more friendly to use later on in the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; devops task. In my case I have renamed my private key to &lt;code&gt;terraform_rsa&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wR8NkdM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/securefile01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wR8NkdM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/securefile01.png" alt="securefile01"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Under the &lt;strong&gt;user settings&lt;/strong&gt; in Azure Devops go to SSH public keys and select &lt;strong&gt;Add&lt;/strong&gt;. Give a name and add the contents of the file created &lt;code&gt;id_rsa.pub&lt;/code&gt;. In my case I have renamed my public key to &lt;code&gt;terraform_rsa.pub&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3aLPJbfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/sshpub01.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3aLPJbfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/sshpub01.gif" alt="sshpub01"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-how-to-use-install-ssh-key-devops-task"&gt;
  &lt;/a&gt;
  Step 3: How to use &lt;em&gt;Install SSH Key&lt;/em&gt; devops task
&lt;/h2&gt;

&lt;p&gt;When using an Azure DevOps pipeline to execute terraform code from a DevOps agent referencing an Azure Devops git Repo as a module source, we can make use of the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; devops task to install the SSH key pair we just created onto the DevOps agent that will be executing the terraform code.&lt;/p&gt;

&lt;p&gt;We will create a few variables next. These variables can either be created inside of a &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&amp;amp;tabs=yaml#use-a-variable-group"&gt;variable group&lt;/a&gt; or a &lt;a href="https://docs.microsoft.com/en-us/azure/key-vault/general/overview"&gt;key vault&lt;/a&gt; and accessed using the &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/azure-key-vault?view=azure-devops"&gt;Azure key vault task&lt;/a&gt; in our devops pipeline.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a &lt;strong&gt;ssh public key&lt;/strong&gt; variable that will be used in our pipeline: &lt;code&gt;terraform-git-ssh-pub&lt;/code&gt; and add the content of file &lt;code&gt;id_rsa.pub&lt;/code&gt;. This can also be stored as a secret in Azure key vault instead and can be accessed as variables in our pipeline using the &lt;strong&gt;azure key vault&lt;/strong&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/azure-key-vault?view=azure-devops"&gt;devops task&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a &lt;strong&gt;known hosts&lt;/strong&gt; variable that will be used in our pipeline: &lt;code&gt;git_ssh_known_hosts&lt;/code&gt; and add the content of file &lt;code&gt;known_hosts&lt;/code&gt; created earlier with &lt;code&gt;ssh-keyscan&lt;/code&gt;. This can also be stored as a secret in Azure key vault instead and can be accessed as variables in our pipeline using the &lt;strong&gt;azure key vault&lt;/strong&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/azure-key-vault?view=azure-devops"&gt;devops task&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;(Optional) If a passphrase was used in the generation of the ssh key pair in step one, you can create a variable that will be used in our pipeline: &lt;code&gt;git_ssh_pass&lt;/code&gt; and add the secret value. This can also be stored as a secret in Azure key vault instead and can be accessed as variables in our pipeline using the &lt;strong&gt;azure key vault&lt;/strong&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/azure-key-vault?view=azure-devops"&gt;devops task&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; devops task and use the following parameters:&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Display Name: Install an SSH key&lt;/li&gt;
&lt;li&gt;Known Hosts Entry: $(git_ssh_known_hosts)&lt;/li&gt;
&lt;li&gt;SSH Public Key: $(terraform-git-ssh-pub)&lt;/li&gt;
&lt;li&gt;Passphrase: $(git_ssh_pass) (Note: if no passphrase was used when the ssh key pair was generated, this can be left as [none])&lt;/li&gt;
&lt;li&gt;SSH Key: terraform_rsa (This was the private key we uploaded into secure files library in step2, which we renamed from &lt;code&gt;id_rsa&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thats it, the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; Devops task will now install the SSH key on the Azure DevOps agent, allowing our terraform deployment to connect securely to our Azure DevOps git repo hosting our modules over ssh.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devops-yaml-pipeline-example"&gt;
  &lt;/a&gt;
  Devops Yaml pipeline example
&lt;/h3&gt;

&lt;p&gt;Here is a yaml pipeline example of the tasks/steps to read in secrets as variables from the &lt;strong&gt;key vault&lt;/strong&gt; task and including the &lt;strong&gt;install SSH keys&lt;/strong&gt; task.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;### Link to key vault.&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AzureKeyVault@1&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Keyvault&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;azureSubscription&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformSP&lt;/span&gt; &lt;span class="c1"&gt;#ADO service connection (Service principal)&lt;/span&gt;
      &lt;span class="na"&gt;KeyVaultName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;mykeyvault'&lt;/span&gt;
      &lt;span class="na"&gt;secretsFilter&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt;
      &lt;span class="na"&gt;runAsPreJob&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

  &lt;span class="c1"&gt;### Install SSH key on ADO agent to access terraform modules git repo.&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;InstallSSHKey@0&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Install&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;an&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;SSH&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;key'&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;knownHostsEntry&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(git_ssh_known_hosts)'&lt;/span&gt; &lt;span class="c1"&gt;#Variable pulled in from key vault via key vault task above.&lt;/span&gt;
      &lt;span class="na"&gt;sshPublicKey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(terraform-git-ssh-pub)'&lt;/span&gt; &lt;span class="c1"&gt;#Variable pulled in from key vault via key vault task above.&lt;/span&gt;
      &lt;span class="na"&gt;sshPassphrase&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(git_ssh_pass)'&lt;/span&gt; &lt;span class="c1"&gt;#Variable pulled in from key vault via key vault task above.&lt;/span&gt;
      &lt;span class="na"&gt;sshKeySecureFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;terraform_rsa'&lt;/span&gt; &lt;span class="c1"&gt;#This was originally renamed from id_rsa and uploaded into secure files library on the project hosting our TF modules repo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#terraform-source-module-example"&gt;
  &lt;/a&gt;
  Terraform source module example
&lt;/h3&gt;

&lt;p&gt;Here is an example of how we can reference our Azure DevOps repo containing our module code in our terraform deployment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"mymodule"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"git::git@ssh.dev.azure.com:v3/Org/Project/repo"&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can also find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/master/posts/Devops-Terraform-Git-Ssh/code"&gt;Github&lt;/a&gt;. ❤️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Marcel.L - &lt;a href="mailto:pwd9000@hotmail.co.uk"&gt;pwd9000@hotmail.co.uk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>azure</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>Quick CSS trick : Make gradient Text Stroke.</title>
      <author>Modern Web</author>
      <pubDate>Thu, 22 Jul 2021 10:12:45 +0000</pubDate>
      <link>https://dev.to/kunaal438/quick-css-trick-make-gradient-text-stroke-1ila</link>
      <guid>https://dev.to/kunaal438/quick-css-trick-make-gradient-text-stroke-1ila</guid>
      <description>&lt;p&gt;Hello, welcome. Today we'll see a quick CSS trick. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gradient-text-stroke"&gt;
  &lt;/a&gt;
  Gradient Text Stroke
&lt;/h1&gt;

&lt;p&gt;Wonder, how to make a gradient text stroke ? Let's see how you can make one very easily.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;If you want, you can watch quick tutorial video on youtube.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fXOjhxYogtM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Let's start
&lt;/h1&gt;

&lt;p&gt;So, first thing we need a text, to start with. So, after writing basic HTML structure. Create &lt;code&gt;h1&lt;/code&gt; element inside body or you can create any text element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;gradient&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add basic styling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'roboto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XP1svCNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ro4zr8sjah5rnkcbby0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XP1svCNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ro4zr8sjah5rnkcbby0.PNG" alt="Capture-2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see, we centered our Text element. right ? So, now style out text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RjrlPK4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gk7ki6jx69qnchzc7qt.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RjrlPK4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gk7ki6jx69qnchzc7qt.PNG" alt="Capture-3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Notice, background color and text color both are same here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, add some gradient background to the text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/*previous styles*/&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-45deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#eeaa52&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#e73c6f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#2394d5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#2af3b7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200%&lt;/span&gt; &lt;span class="m"&gt;200%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZN4PrtS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtrxdj5khqb613s6eagw.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZN4PrtS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtrxdj5khqb613s6eagw.PNG" alt="Capture-4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, we don't want background color, right ? so for that use this property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/*previous styles*/&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-background-clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is this property for, this will only show background color within text. Means like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BRXKCcQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6xkh5p0kxmp5g9tdqwa.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BRXKCcQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6xkh5p0kxmp5g9tdqwa.PNG" alt="Capture-5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But this will only work if, text color is set to transparent. But in our case. Our text color is not transparent, because of that we'll not be able to see any gradient color. I hope it makes sense.&lt;/p&gt;

&lt;p&gt;Now the last step, use &lt;code&gt;-webkit-text-stroke&lt;/code&gt; property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/*previous styles*/&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-text-stroke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;here you can give any stroke color after 8px (stroke width) but by giving transparent, you are making space within the text, so our background gradient should be visible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PfFY0q2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qemzepy4mdsoywbm8r87.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PfFY0q2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qemzepy4mdsoywbm8r87.PNG" alt="Capture-6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, it's done. I hope you understood each and everything. If you have doubt or I missed some point let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#articles-you-may-found-useful"&gt;
  &lt;/a&gt;
  Articles you may found Useful
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-position-everything-you-need-for-good-developer-pfh"&gt;CSS Positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g"&gt;CSS Media Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/display-flex-complete-guide-on-css-flex-box-2021-5bi2"&gt;CSS flex box&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you like, you can subscribe my youtube channel, and follow me on instagram. I create awesome web contents. [&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;Subscribe&lt;/a&gt;], [&lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Instagram&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Windows 11, but for Web</title>
      <author>Piyush Suthar</author>
      <pubDate>Thu, 22 Jul 2021 09:47:24 +0000</pubDate>
      <link>https://dev.to/piyush/windows-11-but-for-web-22h1</link>
      <guid>https://dev.to/piyush/windows-11-but-for-web-22h1</guid>
      <description>&lt;p&gt;Hello! &lt;/p&gt;

&lt;p&gt;Recently I started creating a clone of Windows 11 for web in Preact. My main focus while creating this clone was performance. It must work smoothly even on a low end device (like mine).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc7bvm9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9f8wowzy388tsvjss1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc7bvm9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9f8wowzy388tsvjss1p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The UI isn't complete yet. I'll be working on it in my free time. My focus while creating this is maintainability and Performance. Anyone with a basic level react knowledge should easily understand the code.&lt;/p&gt;

&lt;p&gt;Here's the stack I used:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Preact (For smooth runtime performance)&lt;/li&gt;
&lt;li&gt;ViteJS (For smooth development performance)&lt;/li&gt;
&lt;li&gt;CSS modules (I know frameworks would have been better. But I wanted some control and Performance Babe!)

&lt;ul&gt;
&lt;li&gt;TypeScript (Obviously :)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try it out here -&amp;gt; &lt;a href="https://win11.vercel.app"&gt;Windows 11 Web&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'll recommend you to contribute or atleast check the code. You'll learn something :)&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/PiyushSuthar"&gt;
        PiyushSuthar
      &lt;/a&gt; / &lt;a href="https://github.com/PiyushSuthar/Windows-11-Web"&gt;
        Windows-11-Web
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Awe-amazing Windows 11 clone. Oh wait, Not for your Computer, but for the web! ⚡
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Windows 11 Web&lt;/h1&gt;
&lt;p&gt;Awe-amazing Windows 11 clone. Oh wait, Not for your Computer, but for the web! ⚡&lt;/p&gt;
&lt;p&gt;Try Windows 11 Web:- &lt;a href="https://win11.vercel.app/" rel="nofollow"&gt;win11.vercel.app&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This isn't ready yet, and who knows when it will XD&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
Why?&lt;/h3&gt;
&lt;p&gt;Microsoft launched their newest version of Windows and I was very excited to test it out. So I made this!&lt;/p&gt;
&lt;p&gt;BTW, This project was inspired by &lt;a href="https://github.com/PuruVJ/macos-web"&gt;Macos Web&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Stack&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://preactjs.com/" rel="nofollow"&gt;Preact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vitejs.dev/" rel="nofollow"&gt;ViteJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Acknowledgement&lt;/h3&gt;
&lt;p&gt;Thanks to &lt;a href="https://twitter.com/JanaSunrise" rel="nofollow"&gt;Sunrit Jana&lt;/a&gt; for writing an awesome description for this project! and to &lt;a href="https://twitter.com/BeingMani97" rel="nofollow"&gt;Manivannan&lt;/a&gt; for sharing icons with me!&lt;/p&gt;
&lt;p&gt;And to all the Super-Awesome contributors!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;(tbh, finding suitable icons is the most difficult part of making this project)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;
More&lt;/h4&gt;
&lt;p&gt;Some similar, but super awesome projects!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://winxp.vercel.app/" rel="nofollow"&gt;Windows XP Web&lt;/a&gt; by &lt;a href="https://github.com/ShizukuIchi/winXP"&gt;sh1zuku&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://macos.now.sh/" rel="nofollow"&gt;MacOS Web&lt;/a&gt; by &lt;a href="https://github.com/PuruVJ/macos-web"&gt;Puru Vijay&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vivek9patel.github.io/" rel="nofollow"&gt;Ubuntu Web&lt;/a&gt; by &lt;a href="https://github.com/vivek9patel/vivek9patel.github.io"&gt;Vivek Patel&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://windows11.webflow.io/" rel="nofollow"&gt;Windows 11 web, but with no-code&lt;/a&gt; by &lt;a href="https://twitter.com/BeingMani97" rel="nofollow"&gt;Manivannan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/PiyushSuthar/Windows-11-Web"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc7bvm9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9f8wowzy388tsvjss1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc7bvm9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9f8wowzy388tsvjss1p.png" alt="Light Mode Start Menu"&gt;&lt;/a&gt;&lt;br&gt;
Start Menu (Light Mode)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Vm-UJge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yzniqgprl9gl95luick.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Vm-UJge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yzniqgprl9gl95luick.png" alt="Dark Mode Start Menu"&gt;&lt;/a&gt;&lt;br&gt;
Start menu (Dark Mode)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ecvZuXTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgwmu0cc8v9ogde6ml2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecvZuXTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgwmu0cc8v9ogde6ml2k.png" alt="Widget Light Mode"&gt;&lt;/a&gt;&lt;br&gt;
Widget (Light Mode)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_wsZf1Yj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot1g5tf27ocl4a0yi0x6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_wsZf1Yj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot1g5tf27ocl4a0yi0x6.png" alt="Widget Dark Mode"&gt;&lt;/a&gt;&lt;br&gt;
Widget (Dark mode)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GQrQPVHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rn2bqanqchk9w204oywo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GQrQPVHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rn2bqanqchk9w204oywo.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Windows (Light Mode)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1tFlDC7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsifqi86trfgiio3i765.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1tFlDC7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsifqi86trfgiio3i765.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Context Menu &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#end"&gt;
  &lt;/a&gt;
  End
&lt;/h3&gt;

&lt;p&gt;You can follow me on twitter to follow the progress &lt;a href="https://twitter.com/piyushsthr"&gt;@piyushsthr&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>css</category>
      <category>showdev</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
