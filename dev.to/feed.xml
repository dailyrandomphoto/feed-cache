<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 10 sites / extensions you should use if you are a Frontend Developer üòé</title>
      <author>Luis Cutiopala</author>
      <pubDate>Wed, 26 May 2021 02:10:04 +0000</pubDate>
      <link>https://dev.to/cutioluis/top-10-sites-extensions-you-should-use-if-you-are-a-frontend-developer-1110</link>
      <guid>https://dev.to/cutioluis/top-10-sites-extensions-you-should-use-if-you-are-a-frontend-developer-1110</guid>
      <description>&lt;h1&gt;
  &lt;a href="#cssgradient-%F0%9F%96%8C"&gt;
  &lt;/a&gt;
  &lt;a href="https://cssgradient.io/gradient-backgrounds/"&gt;CssGradient&lt;/a&gt; üñå
&lt;/h1&gt;

&lt;p&gt;Here you will find gradients of all types so that your website is at another level&lt;br&gt;
&lt;a href="https://dev.toIMAGEN"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yyLkCGlV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HJDVC54H2RGL3F4BDTAVWRFS" alt="IMAGEN" title="IMAGEN"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#color-picker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/color-picker/clkoagfbjkilljcajbbielofkeokbhma/related?hl=es"&gt;Color Picker&lt;/a&gt;üéà
&lt;/h1&gt;

&lt;p&gt;Look for that color that you like from your favorite website&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HJBTRRO2MVF3RMNX4LAVWSLA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6jbKw-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HJBTRRO2MVF3RMNX4LAVWSLA" alt="Imagen" title="Imagen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#glyphy"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.glyphy.io/?ref=blog.moeminmamdouh.com"&gt; Glyphy&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Glyphy es una sencilla herramienta en l√≠nea que te permite copiar f√°cilmente caracteres y s√≠mbolos especiales (tambi√©n conocidos como glifos) al portapapeles de tu dispositivo para que luego puedas pegarlos en cualquier documento o aplicaci√≥n que desees.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HLQXTPZ5YWWOPRZFTLAVWTBW"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plkq2Koi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HLQXTPZ5YWWOPRZFTLAVWTBW" alt="Imagen" title="Imagen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#haikeiapp"&gt;
  &lt;/a&gt;
  &lt;a href="https://app.haikei.app/"&gt;Haikei.app &lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This is my favorite, you can generate patterns like: globs, waves, Blurry Gradients etc.&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/3.PNG?token=AOR56HKMZHSUYME5LCK746TAVWVV2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRyYDbrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/3.PNG%3Ftoken%3DAOR56HKMZHSUYME5LCK746TAVWVV2" alt="asd" title="asd"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rayso"&gt;
  &lt;/a&gt;
  &lt;a href="https://ray.so/"&gt;Ray.so&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Transform your code to an impressive and very colorful card&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/2.PNG?token=AOR56HIG2KJX4TJSBDS3JILAVWVOQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8lt351Xz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/2.PNG%3Ftoken%3DAOR56HIG2KJX4TJSBDS3JILAVWVOQ" alt="g" title="g"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#icomoon"&gt;
  &lt;/a&gt;
  &lt;a href="https://icomoon.io/"&gt;IcoMoon&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Find all the icons for your website in svg, png and even imported css formats&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HL5RCR22FFVAT3JG2TAVWUWW"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrAwSbNa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HL5RCR22FFVAT3JG2TAVWUWW" alt="img" title="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#neumorphismio"&gt;
  &lt;/a&gt;
  &lt;a href="https://neumorphism.io/#e0e0e0"&gt;Neumorphism.io &lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Create awesome shadows ready to implement in all your Css&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/4.PNG?token=AOR56HPENEK7OKZJRTTVD6TAVWWZM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VjNEBQa3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/4.PNG%3Ftoken%3DAOR56HPENEK7OKZJRTTVD6TAVWWZM" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#andi"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.ssa.gov/accessibility/andi/help/install.html"&gt;ANDI&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;ANDI is like having an expert at your side, helping you ensure your website is meeting accessibility standards. Include ANDI in screenshots during your manual accessibility review. Use ANDI during development to help you build accessible websites.&lt;/p&gt;

&lt;p&gt;Whether you're an accessibility expert or you're new to Section 508 compliance, ADA compliance, or WCAG standards, you should definitely check out ANDI.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#editormd"&gt;
  &lt;/a&gt;
  &lt;a href="https://pandao.github.io/editor.md/en.html"&gt;Editor.md&lt;/a&gt;  üç≥
&lt;/h1&gt;

&lt;p&gt;Editor.md is a markdown Editor if you don't know much about md this tool will help you, it will be used to make descriptions of your GitHub file or make notes&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-developer-tools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?utm_source=chrome-ntp-icon"&gt;React Developer Tools&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;React Developer Tools is a Chrome DevTools extension for the open-source React JavaScript library. It allows you to inspect the React component hierarchies in the Chrome Developer Tools.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>@okikio/animate - animejs but built on the Web Animation API.</title>
      <author>Okiki</author>
      <pubDate>Wed, 26 May 2021 01:17:57 +0000</pubDate>
      <link>https://dev.to/okikio/okikio-animate-animejs-but-built-on-the-web-animation-api-nin</link>
      <guid>https://dev.to/okikio/okikio-animate-animejs-but-built-on-the-web-animation-api-nin</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-is-the-web-animation-api"&gt;What is the Web Animation API?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-does-okikioanimate-fit-in"&gt;How does @okikio/animate fit in?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples--demos"&gt;Examples &amp;amp; Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt; &lt;code&gt;@okikio/animate&lt;/code&gt; is basically &lt;code&gt;animejs&lt;/code&gt; but built on the Web Animation API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@okikio/animate"&gt;&lt;code&gt;@okikio/animate&lt;/code&gt;&lt;/a&gt; is an animation library for the modern web. It was inspired by animate plus, and animejs; &lt;a href="https://www.npmjs.com/package/@okikio/animate"&gt;@okikio/animate&lt;/a&gt; is a Javascript animation library focused on performance and ease of use. It  utilizes the Web Animation API to deliver butter smooth animations at a small size, it weighs &lt;strong&gt;~5.36 KB&lt;/strong&gt; (minified and gzipped).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-web-animation-api"&gt;
  &lt;/a&gt;
  What is the Web Animation API?
&lt;/h2&gt;

&lt;p&gt;The Web Animations API lets us construct animations and control their playback with JavaScript. The Web Animations API opens the browser‚Äôs animation engine to developers and manipulation by JavaScript. This API was designed to underlie implementations of both CSS Animations and CSS Transitions, and leaves the door open to future animation effects. It is one of the most performant ways to animate on the Web, letting the browser make its own internal optimizations without hacks, coercion, or Window.requestAnimationFrame().&lt;/p&gt;

&lt;p&gt;With the Web Animations API, we can move interactive animations from stylesheets to JavaScript, separating presentation from behavior. We no longer need to rely on DOM-heavy techniques such as writing CSS properties and scoping classes onto elements to control playback direction. And unlike pure, declarative CSS, JavaScript also lets us dynamically set values from properties to durations. For building custom animation libraries and creating interactive animations, the Web Animations API might be the perfect tool for the job. Let's see what it can do! &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API"&gt;MDN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The API hooks into right into the browsers CSS Animations &amp;amp; Transitions in order to produce highly efficient animations, it is by far the most efficient way to create animataions on the Web.&lt;/p&gt;

&lt;p&gt;For the rest of this article I will be refering to the Web Animation API as WAAPI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-okikioanimate-fit-in"&gt;
  &lt;/a&gt;
  How does &lt;a class="mentioned-user" href="https://dev.to/okikio"&gt;@okikio&lt;/a&gt;
/animate fit in?
&lt;/h2&gt;

&lt;p&gt;The WAAPI is very open in design it is functional on it's own but it's not the most developer friendly or intuitive API, so, I developed &lt;code&gt;@okikio/animate&lt;/code&gt; to act as an efficient wrapper around the WAAPI, to introduce the features you know and love from other more mature animation libraries with some added features to the high performance nature of the WAAPI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/okikio/native/tree/master/packages/animate#readme"&gt;Read more...&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; is heavily inspired by &lt;a href="https://animejs.com/"&gt;animejs&lt;/a&gt; and &lt;a href="https://github.com/bendc/animateplus"&gt;animateplus&lt;/a&gt;, as such it uses very similar API's and formats.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; create animations by creating instances of &lt;code&gt;Animate&lt;/code&gt;, a class that acts as a wrapper around the Web Animation API. To create new instances of the &lt;code&gt;Animate&lt;/code&gt; class, you can either import the &lt;code&gt;Animate&lt;/code&gt; class and do this, &lt;code&gt;new Animate({ ... })&lt;/code&gt; or import the &lt;code&gt;animate&lt;/code&gt; (lowercase) method and do this, &lt;code&gt;animate({ ... })&lt;/code&gt;. The &lt;code&gt;animate&lt;/code&gt; method creates new instances of the &lt;code&gt;Animate&lt;/code&gt; class and passes the options it recieves as arguments to the &lt;code&gt;Animate&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Animate&lt;/code&gt; class recieves a set of targets to animate, it then creates a list of Web Animation API &lt;code&gt;Animation&lt;/code&gt; instances, along side a main animation, which is small &lt;code&gt;Animation&lt;/code&gt; instance that is set to animate the opacity of a non visible element, the &lt;code&gt;Animate&lt;/code&gt; class then plays each &lt;code&gt;Animation&lt;/code&gt; instances keyframes including the main animation.&lt;/p&gt;

&lt;p&gt;The main animation is there to ensure accuracy in different browser vendor implementation of the Web Animation API. The main animation is stored in &lt;code&gt;Animate.prototype.mainAnimation: Animation&lt;/code&gt;, the other &lt;code&gt;Animation&lt;/code&gt; instances are stored in a &lt;code&gt;Manager&lt;/code&gt; (from &lt;a href="https://www.npmjs.com/package/@okikio/manager"&gt;@okikio/manager&lt;/a&gt;) &lt;code&gt;Animate.prototype.animations: Manager&amp;lt;HTMLElement, Animation&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@okikio/animate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Do note, on the web you need to do this, if you installed it via the script tag:&lt;/span&gt;
&lt;span class="c1"&gt;// const { animate } = window.animate;&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="c1"&gt;// Units are added automatically for transform CSS Properties&lt;/span&gt;
        &lt;span class="na"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// In miliseconds&lt;/span&gt;
        &lt;span class="na"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The Animation is done...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/okikio/embed/mdPwNbJ?height=600&amp;amp;default-tab=js,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can basically port all your code from &lt;code&gt;animejs&lt;/code&gt; to &lt;code&gt;@okikio/animate&lt;/code&gt; with little to no issues.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;@okikio/animate&lt;/code&gt; only supports automatic units on transform functions e.g. translateX, translate, scale, skew, etc..., it also supports the &lt;code&gt;targets&lt;/code&gt; keyword for settings targets and functions as animation options.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.el&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;

    &lt;span class="c1"&gt;// You need to put units on CSS properties that are not transforms&lt;/span&gt;
    &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;500px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;total&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// ...&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#examples-amp-demos"&gt;
  &lt;/a&gt;
  Examples &amp;amp; Demos
&lt;/h2&gt;

&lt;p&gt;You can check out some more complex examples at &lt;a href="https://okikio.github.io/native/demo/animate"&gt;okikio.github.io/native/demo/animate&lt;/a&gt;, and &lt;a href="https://codepen.io/collection/rxOEBO"&gt;codepen.io/collection/rxOEBO&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; is a wrapper around the Web Animation API that allows uou to use all the features you love from &lt;code&gt;animejs&lt;/code&gt; and other animation libraries, in a small and concise package.&lt;/p&gt;

&lt;p&gt;Read more about it on &lt;a href="https://npmjs.com/package/@okikio/animate"&gt;npm&lt;/a&gt; or &lt;a href="https://github.com/okikio/native/tree/master/packages/animate#readme"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webanimation</category>
      <category>typescript</category>
      <category>webperf</category>
    </item>
    <item>
      <title>5 Steps to become Frontend Developer</title>
      <author>Chadi</author>
      <pubDate>Wed, 26 May 2021 00:13:26 +0000</pubDate>
      <link>https://dev.to/chadi/5-steps-to-become-frontend-developer-5151</link>
      <guid>https://dev.to/chadi/5-steps-to-become-frontend-developer-5151</guid>
      <description>&lt;p&gt;1- you should learn Html and Css basics.&lt;br&gt;
2- You have an idea about Responsive Web Designs&lt;br&gt;
3- You learn Css framework &lt;br&gt;
4- Take a look at UI/UX&lt;br&gt;
5- Learn javascript&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How can you send automated messages via WhatsApp with Node.js</title>
      <author>Carlos S√°nchez</author>
      <pubDate>Tue, 25 May 2021 23:36:03 +0000</pubDate>
      <link>https://dev.to/carlosvldz/how-can-you-send-automated-messages-via-whatsapp-with-node-js-5387</link>
      <guid>https://dev.to/carlosvldz/how-can-you-send-automated-messages-via-whatsapp-with-node-js-5387</guid>
      <description>&lt;h1&gt;
  &lt;a href="#how-you-can-use-nodejs-to-send-messages-via-whatsapp-with-twilios-api"&gt;
  &lt;/a&gt;
  How you can use Node.js to send messages via WhatsApp with Twilio's API.
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#first-here-the-things-that-you-need"&gt;
  &lt;/a&gt;
  First, here the things that you need:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Node and npm installed&lt;/li&gt;
&lt;li&gt;Create an account with  &lt;a href="https://www.twilio.com/try-twilio"&gt;Twilio&lt;/a&gt;  (it's free)&lt;/li&gt;
&lt;li&gt;And finally, Twilio and dotenv library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you sign up for the Twilio account, activate the Sandbox for Whatsapp. This enable you a shared phone number and allows you to test with WhatsApp service. &lt;/p&gt;

&lt;p&gt;Then you have to opt in sending a message to the phone number provided from the sandbox. The message should say "join mass-there", if everything is ok you will receive a confirmation response. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMULpDVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7iqeiows90zf0mrx8n6d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMULpDVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7iqeiows90zf0mrx8n6d.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-lets-start-with-nodejs"&gt;
  &lt;/a&gt;
  Now let's start with Node.js
&lt;/h2&gt;

&lt;p&gt;Once you are in the directory where is created the project, in the terminal run the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install twilio@3.30.0 dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first one to iniciate a &lt;strong&gt;package.json&lt;/strong&gt; and the second one for install the dependencies.&lt;/p&gt;

&lt;p&gt;The next step is create the file &lt;strong&gt;index.js&lt;/strong&gt; with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { config } = require('./config');

const accountSid = config.sid;
const authToken = config.token;
const client = require('twilio') (accountSid, authToken);

client.messages.create({
    from: 'whatsapp:+14155238886',
    body: 'Hello world this is CarlosVldz!!!',
    to: 'whatsapp:+5215555555555'
}).then(message =&amp;gt; console.log(message.sid));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(Don't forget replace the phone numbers in this example with your sandbox number and a personal number.)&lt;/p&gt;

&lt;p&gt;Finally I used &lt;strong&gt;dotenv&lt;/strong&gt; to configure the environment variables &lt;strong&gt;TWILIO_ACCOUNT_SID&lt;/strong&gt; and &lt;strong&gt;TWILIO_AUTH_TOKEN&lt;/strong&gt; with their values from the account credentials. You can find both in your Twilio console. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.env.example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TWILIO_ACCOUNT_SID = "Your account sid"

TWILIO_AUTH_TOKEN = "Your auth token"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your terminal run this last command to send the WhatsApp message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your phone check WhatsApp and you should have a new chat like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eQapZqlu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gk54d2el2ysovnwx6h7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQapZqlu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gk54d2el2ysovnwx6h7.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you liked! (:&lt;/p&gt;

</description>
      <category>node</category>
      <category>twilio</category>
      <category>whatsapp</category>
      <category>automated</category>
    </item>
    <item>
      <title>Entendendo as fun√ß√µes Map, reduce e filter</title>
      <author>Keren Arielle</author>
      <pubDate>Tue, 25 May 2021 23:30:09 +0000</pubDate>
      <link>https://dev.to/kerenarielle/entendendo-as-funcoes-map-reduce-e-filter-hj7</link>
      <guid>https://dev.to/kerenarielle/entendendo-as-funcoes-map-reduce-e-filter-hj7</guid>
      <description>&lt;p&gt;A vida de um programador √© baseada em alterar um array quase todos os dias. Quem nunca precisou extrair um dado de alguma API que retorna um array gigante?. &lt;/p&gt;

&lt;p&gt;No post de hoje vou contar um pouco de cada fun√ß√£o de manipula√ß√£o de array.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#map"&gt;
  &lt;/a&gt;
  MAP
&lt;/h2&gt;

&lt;p&gt;√â poss√≠vel percorrer todos os item do array, executar alguma transforma√ß√£o nesses itens e retornar um novo array sem modificar o atual.&lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Voc√™ tem um array de n√∫mero:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fyVzRWbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp4jcsnklh7je6svil6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fyVzRWbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp4jcsnklh7je6svil6f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eu quero que nesse array todos os n√∫mero sejam multiplicado por 2, ent√£o voc√™ faria um &lt;strong&gt;MAP&lt;/strong&gt; desse array, pegando o item e multiplicando por dois. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_AIlpHkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hx2huv7whlqbvio8b6t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_AIlpHkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hx2huv7whlqbvio8b6t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Por√©m o map sempre retorna um array &lt;em&gt;novo&lt;/em&gt;, ele n√£o modifica o atual, por conta disso atribui esse novo retorno na vari√°vel &lt;strong&gt;resultArray&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filter"&gt;
  &lt;/a&gt;
  Filter
&lt;/h2&gt;

&lt;p&gt;Como o pr√≥prio nome j√° diz filtro! Ele √© usado para quando precisamos fazer um filtro dentro do array. &lt;/p&gt;

&lt;p&gt;Tamb√©m retorna um novo array, por√©m dessa vez s√≥ com elementos selecionados. &lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Dessa vez teremos um array com n√∫mero de 1 at√© 10.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtRDKUiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebg0rh5g5uz199yujecu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtRDKUiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebg0rh5g5uz199yujecu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pensando em usar o filtre, eu quero que ele filtre por n√∫meros que sejam pares. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;O resultado seria:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v3FysLrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sidsuloezc1555hfroi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3FysLrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sidsuloezc1555hfroi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reduce"&gt;
  &lt;/a&gt;
  Reduce
&lt;/h2&gt;

&lt;p&gt;O Reduce muito das vezes parece ser o mais complicado de entender, mas a ideia de usar ele √© para retornar um √∫nico valor. &lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Abaixo vou ter um array com diversos n√∫mero e vou utilizar o reduce para fazer a soma de todos eles e me retornar somente um dados. &lt;/p&gt;

&lt;p&gt;O retorno desse array ser√° 41. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vkv28tia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qerrucc68ldc6gigfcp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vkv28tia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qerrucc68ldc6gigfcp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Big Data + MySQL = Mission InnoPossible?</title>
      <author>Arctype Team</author>
      <pubDate>Tue, 25 May 2021 22:39:14 +0000</pubDate>
      <link>https://dev.to/arctype/big-data-mysql-mission-innopossible-573</link>
      <guid>https://dev.to/arctype/big-data-mysql-mission-innopossible-573</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cGaqMKzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1750/2021/05/Big-Data-MySQL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGaqMKzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1750/2021/05/Big-Data-MySQL.png" alt="Featured Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  Preface
&lt;/h2&gt;

&lt;p&gt;‚Äã&lt;br&gt;
If you‚Äôre a MySQL DBA or a developer that deals with MySQL instances daily, it will probably not come as a surprise if you hear that you should not run big data sets on MySQL. Ask almost any MySQL DBA, and you will hear something like:&lt;br&gt;
‚Äã&lt;br&gt;
‚óè ‚ÄúMySQL is not a fit!‚Äù&lt;br&gt;
‚Äã&lt;br&gt;
‚óè ‚ÄúHave you looked into NoSQL?‚Äù&lt;br&gt;
‚Äã&lt;br&gt;
‚óè ‚ÄúUse MongoDB‚Äù&lt;br&gt;
‚Äã&lt;br&gt;
Some of these responses indeed have merit‚Äîfor example, NoSQL‚Äî based database management systems such as MongoDB can certainly be useful when dealing with big data sets. However, contrary to popular belief, MySQL shouldn‚Äôt be so quickly ruled out‚Äîin some scenarios, MySQL (or MariaDB) might prove to be even better options for big data than their NoSQL counterparts! In this article, we will explore the things you should consider when answering the question: ‚ÄúIs MySQL a good option for my big data project?‚Äù&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-mysql-an-option-for-big-data"&gt;
  &lt;/a&gt;
  Is MySQL an Option for Big Data?
&lt;/h2&gt;

&lt;p&gt;‚Äã&lt;br&gt;
Some of the problems that DBAs usually face‚Äîas far as any amount of data is concerned‚Äîare related to reliability and performance. The largesse of these problems is typically proportionate to the size of a dataset, so is MySQL even an option in this case? The short answer is yes‚Äîit may very well be. Here‚Äôs an abridged list of reasons why that might be the case:&lt;br&gt;
‚Äã&lt;br&gt;
‚óè One of MySQL‚Äôs storage engines, InnoDB, is both a high-performance and a high-reliability storage engine.&lt;br&gt;
‚Äã&lt;br&gt;
‚óè InnoDB has specific parameters that allow developers dealing with MySQL or MySQL DBAs to push the engine to its limits‚Äîfor example, allocating 60-80% of RAM available on the server to InnoDB alone.&lt;br&gt;
‚Äã&lt;br&gt;
‚óè InnoDB can also be made ACID compliant. ACID compliance can prove helpful for mitigating database corruption that can result from power outages or related hiccups.&lt;/p&gt;

&lt;p&gt;If you‚Äôve read this far, the chances are that you can probably tell that you should be able to experiment with big data on MySQL, Percona Server, or MariaDB‚Äîbut how? First and foremost, you should probably decide what kind of storage engine you need for your project(s).&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mysql-storage-engines-which-ones-a-fit"&gt;
  &lt;/a&gt;
  MySQL Storage Engines: Which One‚Äôs a Fit?
&lt;/h2&gt;

&lt;p&gt;‚Äã&lt;br&gt;
MySQL, Percona Server, and MariaDB all have a number of storage engines from which you can choose. We won‚Äôt go into every detail regarding MySQL‚Äôs storage engines in this blog post, but you should know that:&lt;br&gt;
‚Äã&lt;br&gt;
‚óè MyISAM was the default MySQL storage engine up until MySQL 5.5.&lt;br&gt;
‚Äã&lt;br&gt;
‚óè When MySQL 5.5 was released in 2010, InnoDB replaced MyISAM, and isnow the default storage engine offered by MySQL. It is also the primary storage engine for most MySQL engineers or developers dealing with MySQL, Percona Server, or MariaDB.&lt;br&gt;
‚Äã&lt;br&gt;
‚óè MySQL also offers other engines, some of which might be useful when archiving data or performing test operations. Still, since InnoDB and MyISAM are the most frequently-used storage engines in the MySQL world, we are going to focus on them.&lt;br&gt;
‚Äã&lt;br&gt;
As per the above, the two main MySQL database engines are InnoDB and MyISAM, which coincidentally (or not) are also the engines most relevant to the scope of this article.&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#innodb-vs-myisam-for-storing-big-data"&gt;
  &lt;/a&gt;
  InnoDB vs. MyISAM for Storing [Big] Data
&lt;/h2&gt;

&lt;p&gt;‚Äã&lt;br&gt;
Having established that InnoDB and MyISAM are both potentially good fits for big data storage, now we can begin to determine which engine is the best fit for your project.&lt;br&gt;
‚Äã&lt;br&gt;
So, do you choose MyISAM or InnoDB? To answer this question, we have to look into what both of those storage engines can offer. Let‚Äôs dig into them and find out.&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#innodb-for-big-data"&gt;
  &lt;/a&gt;
  InnoDB for Big Data
&lt;/h3&gt;

&lt;p&gt;‚Äã&lt;br&gt;
As we mentioned earlier, InnoDB is currently the default MySQL engine and supports the ACID model, along with row-level locking and foreign keys too. Since MySQL 5.6, InnoDB supports full-text indexes and portable tablespaces, and, since version 5.7, also spatial indexes and last-update times for tables.&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#innodb-acid-compliance"&gt;
  &lt;/a&gt;
  InnoDB ACID Compliance
&lt;/h3&gt;

&lt;p&gt;‚Äã&lt;br&gt;
If you deal with big data (or any amount of data, really), your primary criteria for a database product are probably related to reliability and speed. &lt;br&gt;
‚Äã&lt;br&gt;
InnoDB can offer both‚Äîjust make it follow the ACID model, optimize a few settings inside of &lt;code&gt;my.cnf&lt;/code&gt;, restart the server, and you should be good to go. Obviously, everything isn‚Äôt so simple, but don‚Äôt fret ‚Äì we will explain everything you need to know in a second.&lt;br&gt;
‚Äã&lt;br&gt;
The ACID model stands for &lt;strong&gt;A&lt;/strong&gt;tomicity, &lt;strong&gt;C&lt;/strong&gt;onsistency, &lt;strong&gt;I&lt;/strong&gt;solation, and &lt;strong&gt;D&lt;/strong&gt;urability‚Äîbasically, a set of database properties intended to warrant data validity despite errors, power outages, or any such failures. Here‚Äôs how it works in InnoDB:&lt;br&gt;
‚Äã&lt;br&gt;
‚óè &lt;strong&gt;A&lt;/strong&gt;tomicity ensures that all SQL statements operate as an indivisible unit.&lt;br&gt;
‚Äã&lt;br&gt;
‚óè &lt;strong&gt;C&lt;/strong&gt;onsistency makes sure that the data is consistent by using the logging mechanisms available in InnoDB.&lt;br&gt;
‚Äã&lt;br&gt;
‚óè &lt;strong&gt;I&lt;/strong&gt;solation refers to InnoDB‚Äôs row-level locking (we will get into that a little bit later)&lt;br&gt;
‚Äã&lt;br&gt;
‚óè &lt;strong&gt;D&lt;/strong&gt;urability refers to InnoDB‚Äôs ability to maintain a log file.&lt;br&gt;
‚Äã&lt;br&gt;
The ACID model can be enabled (or disabled) by modifying the value of the &lt;code&gt;innodb_flush_log_at_trx_commit&lt;/code&gt; variable inside of &lt;code&gt;my.cnf&lt;/code&gt;. If you want to deal with big data in MySQL, it is important to keep in mind that this variable has three available options. &lt;br&gt;
‚Äã&lt;br&gt;
The default option, 1, makes InnoDB ACID compliant, whereas 0 and 2 render InnoDB no longer ACID compliant, but also substantially increase write speeds. If you want to use MySQL for your big data project, it‚Äôs probably best to keep the default option. &lt;br&gt;
‚Äã&lt;br&gt;
But wait, don‚Äôt we need both reliability and speed? Of course! &lt;strong&gt;Configuring other variables such as &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt;,  can also achieve the desired speed increase.&lt;/strong&gt; Keep reading‚Äîwe will tell you how in a second.&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-innodb-parameters-to-optimize-mysql-database-speeds"&gt;
  &lt;/a&gt;
  Use InnoDB Parameters to Optimize MySQL Database Speeds
&lt;/h3&gt;

&lt;p&gt;‚Äã&lt;br&gt;
The &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; is one of the most important parameters in InnoDB‚Äôs architecture.  The critical task of this buffer is to cache data and indexes in InnoDB tables. The larger this buffer is, the more data and indexes it can cache, which is especially important when dealing with big data sets. &lt;br&gt;
‚Äã&lt;br&gt;
Obviously, RAM is still inherently finite, and thus, it is necessary to leave some amount of space for other system processes‚Äîthe recommended optimal value for &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; is roughly 60-80% of a system‚Äôs available memory.&lt;br&gt;
‚Äã&lt;br&gt;
&lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; is also closely related to the &lt;code&gt;innodb_log_file_size&lt;/code&gt; parameter.  The more extensive your log files are, the less recovery time you need in case of a crash, so &lt;strong&gt;for optimal performance with big data, set this parameter to about a quarter of the value of &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
‚Äã&lt;br&gt;
As far as the InnoDB buffer pool is concerned, the buffer pool can also be split into multiple instances using the &lt;code&gt;innodb_buffer_pool_instances&lt;/code&gt; parameter. Doing so can improve disk I/O‚Äîthe default value of which is 8, starting from MariaDB 10. &lt;br&gt;
‚Äã&lt;br&gt;
Each InnoDB buffer pool instance manages its own data structures and takes a portion of the total buffer pool size, meaning that if you have, say, 8GB of available RAM in your system, you could set the &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; up to 6GB. Divide the InnoDB buffer pool into six instances and each instance should be of 1GB in size.&lt;br&gt;
‚Äã&lt;br&gt;
Keep in mind that this parameter, along with some other parameters, is deprecated as of MariaDB 10.5.1‚Äîaccording to the MariaDB team, the original reasons for splitting the buffer pool are no longer relevant.&lt;br&gt;
‚Äã&lt;br&gt;
Writing to the log files is also very important.  The &lt;code&gt;innodb_log_buffer_size&lt;/code&gt; defines the size in bytes of the buffer that InnoDB uses to write to those files. The default value of this parameter is 8MB. &lt;br&gt;
‚Äã&lt;br&gt;
In this case, a larger log buffer enables large transactions to run without writing the logs to the disk before transactions commit.&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-innodb-features-that-enhance-performance"&gt;
  &lt;/a&gt;
  Other InnoDB Features that Enhance Performance
&lt;/h3&gt;

&lt;p&gt;‚Äã&lt;br&gt;
InnoDB also allows you to choose a flush method, some of which are used for internal performance testing, and therefore unsupported. Most importantly, however, flush methods determine what InnoDB uses to open data files and how it flushes the data and log files to disk.&lt;br&gt;&lt;br&gt;
‚Äã&lt;br&gt;
Each method has distinct advantages and disadvantages, but for optimal performance‚Äîespecially with big data ‚Äî &lt;code&gt;O_DSYNC&lt;/code&gt; and &lt;code&gt;O_DIRECT&lt;/code&gt; are the best options.&lt;br&gt;
‚Äã&lt;br&gt;
When &lt;code&gt;O_DSYNC&lt;/code&gt; is in use, data may or may not be consistent, but the upside is that &lt;code&gt;O_DSYNC&lt;/code&gt; is faster than &lt;code&gt;O_DIRECT&lt;/code&gt;. &lt;code&gt;O_DIRECT&lt;/code&gt;, on the other hand, makes InnoDB more stable and data-consistent‚Äî essentially a hint that you want your I/O to bypass the Linux kernel‚Äôs caches. It is worth noting that some of these parameters (for example, &lt;code&gt;O_DIRECT&lt;/code&gt;) are only available on Linux systems and are not compatible with Windows.&lt;br&gt;
‚Äã&lt;br&gt;
InnoDB also supports row-level locking, which, put simply, means that only the row accessed by a transaction will be locked. For comparison, MyISAM only supports table-level locking, meaning that only one session can update tables at any given moment. This is potentially useful for, amongst other things, importing vast amounts of data into your database servers.&lt;br&gt;
‚Äã&lt;br&gt;
With that being said, you can also use &lt;a href="https://severalnines.com/product/clustercontrol"&gt;ClusterControl&lt;/a&gt; developed by database experts over at Severalnines to achieve your performance goals.&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#innodb-and-big-data-the-quirks"&gt;
  &lt;/a&gt;
  InnoDB and Big Data: The Quirks
&lt;/h3&gt;

&lt;p&gt;‚Äã&lt;br&gt;
Having used the tips above to optimize InnoDB settings in your &lt;code&gt;my.cnf&lt;/code&gt; file, we should be good to go, right? Not so fast!&lt;br&gt;
‚Äã&lt;br&gt;
InnoDB has quite a few files crucial to its performance. For example, &lt;code&gt;/var/lib/mysql/data&lt;/code&gt; contains folders named after databases and also three files: &lt;code&gt;ib_logfile0&lt;/code&gt;, &lt;code&gt;ib_logfile1&lt;/code&gt;, &lt;code&gt;and ibdata1&lt;/code&gt;.&lt;br&gt;
‚Äã&lt;br&gt;
ibdata1 is where all of the data that pertains to InnoDB is stored. When dealing with big data, this file can cause problems because, by default, its size cannot shrink‚Äîit can only grow. Inevitably, simply shutting down MySQL and deleting this file will eliminate any data stored in InnoDB‚Äînot exactly ideal. &lt;code&gt;ibdata1&lt;/code&gt; stores multiple classes of information, including the data and indexes of InnoDB tables, InnoDB table metadata, MVCC data, and also the insert and doublewrite buffers‚Äîmeaning that this file can get extremely large. The best way to avoid headaches when dealing with this file in MySQL is to perform a cleanup:&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take a copy of the data stored in InnoDB.&lt;/li&gt;
&lt;li&gt;Drop all databases except &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;information_schema&lt;/code&gt;, and &lt;code&gt;performance_schema&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Stop MySQL.&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;innodb_file_per_table&lt;/code&gt;, set the &lt;code&gt;innodb_flush_method&lt;/code&gt; to &lt;code&gt;O_DIRECT&lt;/code&gt; and set the &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; and &lt;code&gt;innodb_log_file_size&lt;/code&gt; to appropriate values per the advice above.&lt;/li&gt;
&lt;li&gt;Delete the &lt;code&gt;ibdata1&lt;/code&gt; file and the log files and restart MySQL.
‚Äã&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you have performed the steps above, the &lt;code&gt;ibdata1&lt;/code&gt; and the log files will be recreated. The catch? The &lt;code&gt;ibdata1&lt;/code&gt; will no longer contain the data from InnoDB tables themselves‚Äîonly metadata relevant to InnoDB. This makes storing and managing enormous data sets inside of InnoDB much easier.&lt;br&gt;
‚Äã&lt;br&gt;
After performing the steps above, keep an eye on indexes and normalize data wherever possible‚Äîat this point, MySQL instance(s) should be ready to deal with big data sets.&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-myisam"&gt;
  &lt;/a&gt;
  What About MyISAM?
&lt;/h3&gt;

&lt;p&gt;‚Äã&lt;br&gt;
Despite being one of the most popular MySQL storage engines‚Äîand the default until MySQL 5.5‚Äîwe have not yet touched upon MyISAM, so we should probably cover it too, right?&lt;br&gt;
‚Äã&lt;br&gt;
Here‚Äôs the catch with MyISAM: while it certainly used to offer functionalities lacked by its newer counterpart, as MySQL has continued to develop, most of these features have become available in InnoDB. For example, InnoDB has supported full-text indexes and portable tablespaces since MySQL 5.6, spatial indexes since MySQL 5.7, and so on.  As a result, today, &lt;strong&gt;MyISAM is effectively only a valid alternative to InnoDB when the primary‚Äîif not the only‚Äîquery being run is a simple &lt;code&gt;COUNT(*)&lt;/code&gt;.&lt;/strong&gt; Because MyISAM stores the number in the table metadata(and InnoDB does not), &lt;code&gt;COUNT(*)&lt;/code&gt; queries should generally complete faster on MyISAM.&lt;br&gt;
‚Äã&lt;br&gt;
So should we use MyISAM to deal with data (or big data) in MySQL?&lt;br&gt;
‚Äã&lt;br&gt;
Well, short answer? No. MyISAM has a reputation for being an unreliable storage engine due to the fact that it has poor data integrity, poor crash recovery and table-level locking. It also does not support ACID (exclusive to InnoDB in this space), and MyISAM tables are frequently corrupted following a crash.&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;‚Äã&lt;br&gt;
To summarize:&lt;br&gt;
‚Äã&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MySQL is perfectly capable of running big data sets‚Äîit all depends on how the server (and MySQL instances) are configured.
‚Äã&lt;/li&gt;
&lt;li&gt;InnoDB is the optimal data storage engine for pushing MySQL to the next level when dealing with big data sets, as it can be configured to provide ACID compliance and high performance at the same time.
‚Äã&lt;/li&gt;
&lt;li&gt;Using InnoDB to deal with big data (or any kind of data, for that matter) in MySQL can cause issues because the engine stores all related data in an un-shrinkable file called ibdata1, but InnoDB can be configured to store only metadata inside of the file, thus preventing it from becoming too large.
‚Äã&lt;/li&gt;
&lt;li&gt;MyISAM has poor data integrity and poor crash recovery. Unlike InnoDB, it also has table-level locking, meaning that MySQL only permits one session to update certain tables at a time‚Äîit‚Äôs probably not a fit for applications that require data integrity and high performance at the same time. Stick with InnoDB.
‚Äã
Also, when dealing with data (or big data) in MySQL your queries might become complex.  If you find yourself looking for an easy-to-use SQL client, give &lt;a href="https://arctype.com"&gt;Arctype&lt;/a&gt; a try!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lukas is an ethical hacker, a MySQL database administrator and a frequent conference speaker. Since 2014 Lukas has found and responsibly disclosed security flaws in some of the most visited websites in Lithuania and abroad including advertising, gift-buying, gaming, hosting websites as well as some websites of government institutions. Lukas runs one of the biggest &amp;amp; fastest data breach search engines in the world &lt;br&gt;
‚Äî&lt;a href="https://breachdirectory.com/"&gt;BreachDirectory.com&lt;/a&gt; and frequently blogs in multiple places educating people about information security and other topics. He also runs his own blog over at &lt;a href="https://www.lukasvileikis.com/"&gt;lukasvileikis.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>mysql</category>
      <category>bigdata</category>
      <category>innodb</category>
    </item>
    <item>
      <title>Add sign in with google to react app using firebase</title>
      <author>Cody Snell</author>
      <pubDate>Tue, 25 May 2021 22:35:15 +0000</pubDate>
      <link>https://dev.to/decibullz/add-sign-in-with-google-to-react-app-using-firebase-2c4p</link>
      <guid>https://dev.to/decibullz/add-sign-in-with-google-to-react-app-using-firebase-2c4p</guid>
      <description>&lt;p&gt;&lt;strong&gt;Firebase is a great way to set up authentication on your react applications, and with just a few steps it can be implemented very easy&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create react app&lt;/li&gt;
&lt;li&gt;Yarn add / npm install firebase&lt;/li&gt;
&lt;li&gt;Create firebase project&lt;/li&gt;
&lt;li&gt;Enable sign in with google in firebase console&lt;/li&gt;
&lt;li&gt;Initialize firebase settings in react&lt;/li&gt;
&lt;li&gt;Initialize state&lt;/li&gt;
&lt;li&gt;Create sign in/out functions&lt;/li&gt;
&lt;li&gt;Be a Pro&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with any project we're going to start in our terminal. Create a folder with any name you want, for this lesson I used firebase-practice.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I3yNh2og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hlt69lwqw03jo13c7ai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I3yNh2og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hlt69lwqw03jo13c7ai.png" alt="Screen Shot 2021-05-25 at 3.30.12 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;cd into your newly made folder and type the command&lt;br&gt;
 &lt;em&gt;npx create-react-app .&lt;/em&gt; &lt;br&gt;
This will create the react app inside the current folder. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QdWgKn5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmcbkudj0bi9bd05iete.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QdWgKn5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmcbkudj0bi9bd05iete.png" alt="Screen Shot 2021-05-25 at 3.32.05 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's open it in VSCode.&lt;/p&gt;

&lt;p&gt;You should have the basic React app setup.&lt;br&gt;
Lets clean up that App.js file. &lt;br&gt;
Delete everything inside the return except for the App div.&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gkt2snbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96qxfy4emltdy5met5jz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gkt2snbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96qxfy4emltdy5met5jz.png" alt="Screen Shot 2021-05-25 at 4.30.19 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open your built in terminal (control + `)&lt;/p&gt;

&lt;p&gt;Now were going to add the firebase package.&lt;br&gt;
For this you can use &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;npm install firebase &lt;/li&gt;
&lt;li&gt;yarn add firebase&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point we need firebase set up online so let's head there. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After signing into Firebase click &lt;strong&gt;Go to console&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qBtRtntV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xljptp0qrus2cj1c8rju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qBtRtntV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xljptp0qrus2cj1c8rju.png" alt="Screen Shot 2021-05-25 at 3.36.30 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the consoles main page you're going to want to add a new project &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pPDITqht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9kq5ad23c4jqukohkos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pPDITqht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9kq5ad23c4jqukohkos.png" alt="Screen Shot 2021-05-25 at 3.36.41 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give your project a name&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NYUf5CmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzcjv6xe4dmysdn6betk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYUf5CmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzcjv6xe4dmysdn6betk.png" alt="Screen Shot 2021-05-25 at 4.40.23 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;** Turn off analytics (this is optional)** &lt;/p&gt;

&lt;p&gt;After your project is created you'll be redirected to the project's main page. Here we're going to add a web app. It is the &amp;lt;/&amp;gt; symbol.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_UU9fDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3hw4ik1qr6210pc1qtz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_UU9fDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3hw4ik1qr6210pc1qtz.png" alt="Screen Shot 2021-05-25 at 3.40.01 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give your App a nickname and click Register App&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L-ZsfuOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5yowlj5sua6u38qupaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-ZsfuOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5yowlj5sua6u38qupaw.png" alt="Screen Shot 2021-05-25 at 4.46.49 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the App is registered it will give you multiple scripts , we only need what's inside the second script.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BzoEfH_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osyzn6fa4ak8svodzfhr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BzoEfH_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osyzn6fa4ak8svodzfhr.png" alt="Screen Shot 2021-05-25 at 3.40.48 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy what yours gives you as every project is different and you'll need your specific keys for this to work.&lt;/p&gt;

&lt;p&gt;Last step here is to enable signing in with google for your app. Go back to the projects main page and select Authentication&amp;gt; Sign-in Method and then edit the option for google.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8r9rc_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er1ovyisyg9j7xfrp6fw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8r9rc_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er1ovyisyg9j7xfrp6fw.png" alt="Screen Shot 2021-05-25 at 3.42.20 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select Enable and enter your email address then hit Save.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bY7RPBEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ocsl3m0o5rneds3gtqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bY7RPBEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ocsl3m0o5rneds3gtqk.png" alt="Screen Shot 2021-05-25 at 3.42.40 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#congrats-were-done-in-the-firebase-console"&gt;
  &lt;/a&gt;
  Congrats we're done in the firebase console!
&lt;/h2&gt;

&lt;p&gt;Head back on over to your VSCode and react app.&lt;/p&gt;

&lt;p&gt;Create a new file under the src folder named firebase.js&lt;/p&gt;

&lt;p&gt;Inside firebase.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;on Line 1 import firebase from 'firebase'&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;on Line 3 paste your firebase configuration you just copied. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZX-WIobc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0lh03rf7sijv378trwd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZX-WIobc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0lh03rf7sijv378trwd.png" alt="Screen Shot 2021-05-25 at 4.53.40 PM"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now Were going to set up a few variables inside firebase.js&lt;/p&gt;

&lt;p&gt;first initialize firebase&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;const firebaseApp=firebase.initializeApp(firebaseConfig)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Set database,auth, and provider&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;const db = firebaseApp.firestore()&lt;/li&gt;
&lt;li&gt;const auth = firebase.auth()&lt;/li&gt;
&lt;li&gt;const provider = new firebase.auth.GoogleAuthProvider()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that were done setting up variables, time to export!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;export { auth, provider }&lt;/li&gt;
&lt;li&gt;export default db&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;firebase.js is now complete, don't forget to save!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ud8yh-7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ipi58ojkt5lvbxj12p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ud8yh-7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ipi58ojkt5lvbxj12p.png" alt="Screen Shot 2021-05-25 at 3.52.07 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back to App.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lets start in App.js with the imports were going to need&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;import { useState } from 'react'&lt;/li&gt;
&lt;li&gt;import { auth, provider } from './firebase'&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Under Function App(){ and above return( is where we're going to be working&lt;/p&gt;

&lt;p&gt;First things first let's initialize state with useState().&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;const [user,setUser] = useState()
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vaGIhkFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogpopgste9idek4qxi5l.png" alt="Screen Shot 2021-05-25 at 4.08.16 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then we'll create our sign in function. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  const signIn = () =&amp;gt; {
auth
  .signInWithPopup(provider)
  .then((payload) =&amp;gt; {
    setUser(payload.user.displayName)
  })
  .catch((err) =&amp;gt; console.log(err))
}
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s3Tdqh4o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2snm0ze324l6tnshihmz.png" alt="Screen Shot 2021-05-25 at 4.10.02 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here you can chain a .then((payload) =&amp;gt;{console.log(payload)) so you can view the object you get back from firebase when signing in. This is how we would know to use payload.user.displayName&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now for our sign out function. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; const signOut = () =&amp;gt; {
auth.signOut().then(setUser(null))
}
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d0uQBLoc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvinaitj33k8t5w5s3qk.png" alt="Screen Shot 2021-05-25 at 4.10.15 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it for our functions, we're on the home stretch!!&lt;/p&gt;

&lt;p&gt;Inside of our &lt;/p&gt; we're going to make two buttons. You guessed in, one for sign in, and one for sign out.

&lt;ul&gt;
&lt;li&gt;&amp;lt; button onClick={signIn}&amp;gt;Sign in&lt;/li&gt;
&lt;li&gt;&amp;lt; button onClick={signOut}&amp;gt;Sign out
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwutW10X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2b126jnhyg8uap6mwg57.png" alt="Screen Shot 2021-05-25 at 4.10.32 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Under those buttons were going to use a ternary operator based on state that displays the user if you're signed in or "No user" if you're not. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;{user ? &amp;lt; div&amp;gt; {user}&amp;lt; /div&amp;gt; : &amp;lt; div&amp;gt; No user&amp;lt; /div&amp;gt;}
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6TzHzNBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5vmykl89n06dk73af7b.png" alt="Screen Shot 2021-05-25 at 4.10.40 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And with that we're done!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mo1R6pxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrj3pl08k3u9ct6wf8qb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mo1R6pxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrj3pl08k3u9ct6wf8qb.png" alt="Screen Shot 2021-05-25 at 4.11.09 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save your files and npm start/yarn start in your terminal and you should see &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DyoioAHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wtus2d7s7keodj350ja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DyoioAHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wtus2d7s7keodj350ja.png" alt="Screen Shot 2021-05-25 at 4.11.23 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the sign in button and your App component will update and show the user's name.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mIAtXClF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x87g5urz0r2hzkv0oy8s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mIAtXClF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x87g5urz0r2hzkv0oy8s.png" alt="Screen Shot 2021-05-25 at 4.11.29 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#congratulations-you-did-it"&gt;
  &lt;/a&gt;
  Congratulations you did it!!
&lt;/h1&gt;

</description>
      <category>firebase</category>
      <category>react</category>
      <category>authentication</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How To Add Prettier and ESLint Automation to a React Codebase</title>
      <author>swyx</author>
      <pubDate>Tue, 25 May 2021 22:32:58 +0000</pubDate>
      <link>https://dev.to/swyx/how-to-add-prettier-and-eslint-automation-to-a-react-codebase-2gk1</link>
      <guid>https://dev.to/swyx/how-to-add-prettier-and-eslint-automation-to-a-react-codebase-2gk1</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;"Civilization advances by extending the number of important operations which we can perform without thinking about them." ‚Äî Alfred North Whitehead&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've just implemented Prettier + ESLint on my React codebase &lt;a href="https://github.com/temporalio/documentation/pull/451/commits/cae25e5ee08ef6ba840596679b7d37e79585ce4b"&gt;at work&lt;/a&gt; and figured I'd better share my notes in case others need to figure this out.&lt;/p&gt;

&lt;p&gt;My setup includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;See lint violations inline in VSCode&lt;/li&gt;
&lt;li&gt;Prettify after PR merge with GitHub actions&lt;/li&gt;
&lt;li&gt;Prettify before git commit (some folks dislike this)&lt;/li&gt;
&lt;li&gt;Ability to manually run checks locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if you use TypeScript, you'll want BOTH Prettier and ESLint in your codebase. Prettier &lt;a href="https://twitter.com/swyx/status/1191452690930376705"&gt;sometimes breaks your code&lt;/a&gt; and ESLint checks things that Prettier doesn't. For historical reasons, this codebase doesn't use TypeScript, don't @ me, my love for &lt;a href="https://react-typescript-cheatsheet.netlify.app/"&gt;TypeScript is well documented&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-dependencies"&gt;
  &lt;/a&gt;
  Step 1: Dependencies
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; eslint eslint-plugin-react husky lint-staged prettier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;as of time of writing these are the versions I am working with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.27.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-plugin-react"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.23.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"husky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^6.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^11.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.3.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-scripts"&gt;
  &lt;/a&gt;
  Step 2: Scripts
&lt;/h2&gt;

&lt;p&gt;add stuff to package.json...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;  
    &lt;/span&gt;&lt;span class="nl"&gt;"format"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write ."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prepare"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"husky install"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"**/*"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write --ignore-unknown"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now run &lt;code&gt;npm run format&lt;/code&gt; to prettify your existing codebase as a oneoff.&lt;/p&gt;

&lt;p&gt;In case you were wondering:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://typicode.github.io/husky/#/"&gt;Husky&lt;/a&gt; adds a git commit hook so that...&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/okonet/lint-staged"&gt;&lt;code&gt;Lint-staged&lt;/code&gt;&lt;/a&gt; only runs Prettier on new stuff that you stage in git&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#step-3-prettier-settings"&gt;
  &lt;/a&gt;
  Step 3: Prettier Settings
&lt;/h2&gt;

&lt;p&gt;Commence bikeshedding! Use the &lt;a href="https://prettier.io/playground/#N4Igxg9gdgLgprEAuEAzArlMMCW0AEAEnADYkQDqEATiQCYAUwA5tXHLlM-gLz4A6IABalyggDT5W7eHV74A5IKq06ghZIDOOEghjzUAQxKa4k6AFkI6UwHkAbnGriAvgEp8wflG-58OVAYAQmkOHC43YDYYdGoofCh0MhcAbm9fPz8Aeiz8ABVbABFbJHxC6AV9Gzh8akMoOggAW394tganDN19RJa+C0MYIQA6VHIafAYBoeG6huaGDwAqfABGAFEAagB2N2GYCABlGGpw5kXZuAAHEkMwOAYs-n5h57pNrJxmSUFBN3T4rUOLF4gAeOg4ez4MC3TSaAByhiacB4CmIZEoNHoCnwuBguh4wAABgBNaz4QxsfD2HDaA7UBLoJoAIyc+AAJMBGS0XESXPhLNY7I5qITBdUHE4XAA+AGZfCgzQnaDMaVc0KcZjDTQkHD3Bj4AAMklW+D2BwAqlcrk4AMKGUyLfCbKRsMJcbW6-Wrc0QAAyEAA7naHQ8PC5QVkldQVbLAX4WG7NcMEHRNBQcEMGBI-vgAPwCECF-ClRVXer4JUATwJwGAkHI1FKSn40irChcMokhcjmnLUGl+BcGT8oLgTTj-Bg6qTcDkw58MEj47j8q5DG0ulg-3jmQLgleIBHmVKgiCggXx8jEPs0rSPigLhA4hAECuuGgmmQoEpMcDAAVKQQL8UGMQNDCrL8X2ZOowAAaw4Q5yzAM5kCMEwzBAcdWToOg5z9epmHQQxmDgAAxGgmkGTVkBAQx0AOZ9hBgJoSAoIRMzgPs7jgQ5gMzSFMyrWiwDhJjwlMagYH-OpmCotDjFMF8ACtNAADwAIVghCYEOJE4D9cI4AUjCVPUw4zl0ABFdAIHgEylJActqEk2jmUMVkSCYq5TlgDM6CGZAAA5jScmNTAoOorlonyuKcRwmIAR1s+AZLfEC6M0ABaKB2DwugmLYZKcDYGSSPkpB0Mc0wmhwBzMO0LhrJS4ykBOdBMJgDz-MCpAACYXxOQwdDOW1mgqrDNAAViY6o8g8kCqsw+wOoASQ6WBDjAU53wAQQaY4a1apbOyAA"&gt;Prettier Playground&lt;/a&gt; to decide on what settings your team wants.&lt;/p&gt;

&lt;p&gt;Put this in &lt;code&gt;.prettierrc.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"arrowParens"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"always"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"bracketSpacing"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"embeddedLanguageFormatting"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"auto"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"htmlWhitespaceSensitivity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"insertPragma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"jsxBracketSameLine"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"jsxSingleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"printWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"proseWrap"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"preserve"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"quoteProps"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"as-needed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"requirePragma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"semi"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"singleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tabWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"trailingComma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"es5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"useTabs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 4: ESLint&lt;/p&gt;

&lt;p&gt;You know you gotta...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;browser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;es2021&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;extends&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eslint:recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plugin:react/recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;parserOptions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ecmaFeatures&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ecmaVersion&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sourceType&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plugins&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rules&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react/prop-types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}],&lt;/span&gt; &lt;span class="c1"&gt;// this is dumb, why is this still recommended&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react/no-unescaped-entities&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}],&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;no-unused-vars&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Recommended: also enable the &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint VSCode plugin&lt;/a&gt; to see the eslint feedback in your editor!!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Step 5: Automate&lt;/p&gt;

&lt;p&gt;We'll just add a nifty little GitHub Action in &lt;code&gt;.github/workflows/autoformat.yml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Continuous Integration&lt;/span&gt;

&lt;span class="c1"&gt;# This action works with pull requests and pushes&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;prettier&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# Make sure the actual branch is checked out when running on pull requests&lt;/span&gt;
          &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.head_ref }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Prettify code&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;creyD/prettier_action@v3.3&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# This part is also where you can pass other options, for example:&lt;/span&gt;
          &lt;span class="na"&gt;prettier_options&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;--write **/*.{js,md}&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Form Event Fires on Button Render : A Pesky Gotcha in React's Rendering Process</title>
      <author>Kaho Shibuya</author>
      <pubDate>Tue, 25 May 2021 22:11:02 +0000</pubDate>
      <link>https://dev.to/shivchan/form-event-fires-on-button-render-a-minor-bug-in-react-s-optimization-of-performance-4ldm</link>
      <guid>https://dev.to/shivchan/form-event-fires-on-button-render-a-minor-bug-in-react-s-optimization-of-performance-4ldm</guid>
      <description>&lt;p&gt;This post is a note that explains the issue and its cause and solution(s).&lt;/p&gt;

&lt;p&gt;I created the web app that fetches the users' information and shows them as a list. It also has the functions to edit or delete them.&lt;/p&gt;

&lt;p&gt;The final code is &lt;a href="https://github.com/shiv-chan/react-group-assingment/tree/main/viki-kaho"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzQHusxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3xbk1mbjt6jflvxg0mm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzQHusxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3xbk1mbjt6jflvxg0mm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-the-issue"&gt;
  &lt;/a&gt;
  What is the issue?
&lt;/h1&gt;

&lt;p&gt;The issue was that the edit button seemed not working.&lt;/p&gt;

&lt;p&gt;The code of the component with the issue is &lt;a href="https://github.com/shiv-chan/react-group-assingment/blob/b85143b9dd4a8d801ab3a61f5a021e1b9baf2b30/viki-kaho/src/Comment.js"&gt;here&lt;/a&gt;.&lt;br&gt;
You can also interact with the code &lt;a href="https://codesandbox.io/s/react-form-and-button-issue-7gepy"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-causes"&gt;
  &lt;/a&gt;
  What causes?
&lt;/h1&gt;

&lt;p&gt;Actually, the edit button works fine.&lt;/p&gt;

&lt;p&gt;The reason why it seemed not working is because the edit button's &lt;code&gt;onClick&lt;/code&gt; event ends after the component gets re-rendered.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#inspection"&gt;
  &lt;/a&gt;
  Inspection
&lt;/h3&gt;

&lt;p&gt;Added &lt;code&gt;console.log&lt;/code&gt; and checked what happens when clicking the edit button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;loaded!  // the page loaded
editComment is now: false // initial state

// click the edit button

Edit button is clicked! 
editComment is now: true 
handleSave is called! 
editComment is now: false 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;According to the logs, the following happens under the hood.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;the edit button is clicked.&lt;/li&gt;
&lt;li&gt;the edit button's &lt;code&gt;onClick&lt;/code&gt; event runs and updates state &lt;code&gt;editComment&lt;/code&gt; which is now &lt;code&gt;true&lt;/code&gt;. (It was &lt;code&gt;false&lt;/code&gt; as an initial state)&lt;/li&gt;
&lt;li&gt;the component gets re-rendered.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;handleSave&lt;/code&gt; function is executed for some reason and updates state &lt;code&gt;editComment&lt;/code&gt; back to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;the component gets re-rendered.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The edit button works but the save button, I mean, &lt;code&gt;handleSave&lt;/code&gt; function gets executed at the same time. &lt;/p&gt;

&lt;p&gt;Since these things happen very quickly, we cannot see it and it looks the edit button is not working.&lt;/p&gt;

&lt;p&gt;The following code is the simplified version of the render part of the Comment component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;editComment&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form1"&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleSave&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form1"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form1"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form1"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"body"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form1"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Save&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;):(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;editComment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Edit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleDelete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;state &lt;code&gt;editComment&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; at first, so there shouldn't be &lt;code&gt;form&lt;/code&gt; and the save button yet.&lt;/p&gt;

&lt;p&gt;Weird!&lt;/p&gt;

&lt;p&gt;Then why is &lt;code&gt;handleSave&lt;/code&gt; function called?&lt;br&gt;
Again, it is because &lt;strong&gt;the edit button's &lt;code&gt;onClick&lt;/code&gt; event ends after the component gets re-rendered.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#facts"&gt;
  &lt;/a&gt;
  Facts
&lt;/h3&gt;

&lt;p&gt;After clicking the edit button, &lt;code&gt;form&lt;/code&gt; gets created.&lt;/p&gt;

&lt;p&gt;Since the edit button and the save button lie in the similar structure, so React regards these two as the DOM elements of the same type. In other word, React cannot differentiate these two buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// simplified version&lt;/span&gt;
&lt;span class="c1"&gt;// before re-render&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;editComment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Edit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleDelete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;



&lt;span class="c1"&gt;// after re-render&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form1"&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleSave&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form1"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Save&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;When comparing two React DOM elements of the same type, React looks at the attributes of both, keeps the same underlying DOM node, and only updates the changed attributes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/reconciliation.html#dom-elements-of-the-same-type"&gt;https://reactjs.org/docs/reconciliation.html#dom-elements-of-the-same-type&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, the edit button is not destroyed. It remains there and just gets updated its attributes and properties.&lt;/p&gt;

&lt;p&gt;It is still the edit button with extra attributes such as &lt;code&gt;from="form1"&lt;/code&gt; or &lt;code&gt;type="submit"&lt;/code&gt; saying "save", so to speak.&lt;/p&gt;

&lt;p&gt;Then still &lt;em&gt;the button&lt;/em&gt;'s &lt;code&gt;onClick&lt;/code&gt; persists.&lt;/p&gt;

&lt;p&gt;When &lt;em&gt;the button&lt;/em&gt;'s &lt;code&gt;onClick&lt;/code&gt; event ends, &lt;em&gt;the button&lt;/em&gt; is associated with &lt;code&gt;form&lt;/code&gt; and calls &lt;code&gt;handleSave&lt;/code&gt; function.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#solutions"&gt;
  &lt;/a&gt;
  Solution(s)
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add &lt;code&gt;e.preventDefault()&lt;/code&gt; to the edit button's &lt;code&gt;onClick&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
It won't call &lt;code&gt;onSubmit&lt;/code&gt;(= &lt;code&gt;handleSave&lt;/code&gt; function) in &lt;code&gt;form&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create new components for each DOM underlying the condition inside &lt;code&gt;render()&lt;/code&gt;.&lt;/strong&gt; &lt;br&gt;
When the component is re-rendered, the new button(= the save button) is created rather than updating the existed button(= the edit button).&lt;br&gt;
The edit button's &lt;code&gt;onClick&lt;/code&gt; event is no longer listened.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add &lt;code&gt;key&lt;/code&gt; to the edit button and save button respectively.&lt;/strong&gt;&lt;br&gt;
Inform React that these two buttons are different by adding &lt;code&gt;key&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://reactjs.org/docs/reconciliation.html#keys"&gt;https://reactjs.org/docs/reconciliation.html#keys&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Apparently, this is a super niche edge case.&lt;/p&gt;

&lt;p&gt;Using a table layout or placing the form's items outside &lt;code&gt;form&lt;/code&gt; may cause the issue.&lt;/p&gt;

&lt;p&gt;Considering accessibility or readability carefully when building the structure could prevent errors.&lt;/p&gt;

&lt;p&gt;This is the lesson that I learned this time! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  Acknowledgements
&lt;/h3&gt;

&lt;p&gt;To understand this issue clearly, I popped into a bunch of web dev communities and asked around for this.&lt;/p&gt;

&lt;p&gt;I'm really grateful to people in these communities for trying to help me with this. Again, thank you so muchüôè&lt;/p&gt;

&lt;p&gt;Special thanks to &lt;a href="https://www.kohei.dev/"&gt;Kohei Asai&lt;/a&gt;, &lt;a href="https://twitter.com/danielacorner"&gt;Daniel Corner&lt;/a&gt;, &lt;a href="https://brandontsang.net/"&gt;Brandon Tsang&lt;/a&gt;, &lt;a href="https://twitter.com/wada_shogo"&gt;Shogo Wada&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Create a animated portfolio card with React and ChakraUI</title>
      <author>Muhammad  Ahmad</author>
      <pubDate>Tue, 25 May 2021 21:34:09 +0000</pubDate>
      <link>https://dev.to/m_ahmad/create-a-animated-portfolio-card-with-react-and-chakraui-29mj</link>
      <guid>https://dev.to/m_ahmad/create-a-animated-portfolio-card-with-react-and-chakraui-29mj</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_xLU_Hve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ld4myok4qma2tvl2ymaw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_xLU_Hve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ld4myok4qma2tvl2ymaw.gif" alt="Card portfolio gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#portfolio-card-post"&gt;
  &lt;/a&gt;
  Portfolio card post
&lt;/h1&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/m_ahmad" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vrvEKvHu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--iCCO7GRa--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370400/bda2fd3e-cb65-4abb-81e6-1f50edf567dd.png" alt="m_ahmad image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/m_ahmad/create-a-portfolio-card-with-react-chakraui-and-framermotion-21c4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Create a portfolio card with React, ChakraUi, and framerMotion&lt;/h2&gt;
      &lt;h3&gt;Muhammad  Ahmad „Éª May 11 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>react</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Have Recent Browser Privacy Updates Stopped Browser Fingerprinting? An Analysis</title>
      <author>Savannah Copland üëã</author>
      <pubDate>Tue, 25 May 2021 21:20:20 +0000</pubDate>
      <link>https://dev.to/savannahjs/have-recent-browser-privacy-updates-stopped-browser-fingerprinting-an-analysis-2nh9</link>
      <guid>https://dev.to/savannahjs/have-recent-browser-privacy-updates-stopped-browser-fingerprinting-an-analysis-2nh9</guid>
      <description>&lt;p&gt;The trend in web browsers over the past few years has generally been in favor of more privacy for users. Almost all mainstream browsers (&lt;a href="https://www.infoq.com/news/2020/04/safari-third-party-cookies-block/"&gt;Safari&lt;/a&gt;, &lt;a href="https://blog.mozilla.org/blog/2021/02/23/latest-firefox-release-includes-multiple-picture-in-picture-and-total-cookie-protection/"&gt;Firefox&lt;/a&gt;, &lt;a href="https://support.brave.com/hc/en-us/articles/360050634931-How-Do-I-Manage-Cookies-In-Brave-"&gt;Brave&lt;/a&gt;, and &lt;a href="https://blog.chromium.org/2020/01/building-more-private-web-path-towards.html"&gt;Chrome&lt;/a&gt;) now block third-party cookies which enabled tracking across multiple sites, and Chrome uses encrypted traffic (via HTTPS) by default.&lt;/p&gt;

&lt;p&gt;Similarly, regulations like GDPR and CCPA are adding legal hurdles for companies that want to gather user data online. Cookie consent boxes are now ubiquitous (despite the fact that &lt;a href="https://www.zdnet.com/article/cookie-consent-most-websites-break-law-by-making-it-hard-to-reject-all-tracking/"&gt;they're rarely implemented correctly&lt;/a&gt;), and companies in many jurisdictions are now responsible for allowing users the &lt;a href="https://en.wikipedia.org/wiki/Right_to_be_forgotten"&gt;right to be forgotten&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;More privacy is generally a good thing for legitimate users. It means fewer opportunities for their personal data to be stolen, it can decrease the risk of identity theft, and it gives them more control over how their data can be used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But, increased browser privacy also comes with a hidden cost. By preventing cookies and other tracking mechanisms, it's very hard for web application developers to figure out whether a visitor is a real user or a fraudulent bot.&lt;/strong&gt; This leads developers to rely heavily on multi-factor authentication methods, which slow down and frustrate users. It also increases the cost of building and maintaining applications - costs likely passed on to users in one form or another.&lt;/p&gt;

&lt;p&gt;There is another way to identify users without intrusive cookies. In this article, I'll share a technique called &lt;em&gt;browser fingerprinting&lt;/em&gt; and discuss how it can be used to prevent fraud in modern browsers. I'll also share an overview of the privacy settings that impact fingerprinting in each of the three major web browsers (Chrome, Safari, and Firefox). Finally, I'll share how fingerprinting must continue to evolve as privacy measures do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-browser-fingerprinting-works"&gt;
  &lt;/a&gt;
  How Browser Fingerprinting Works
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://fingerprintjs.com/blog/what-is-browser-fingerprinting/"&gt;Browser fingerprinting&lt;/a&gt; can be used to uniquely identify users and their associate sessions regardless of anonymizing tactics like incognito browsing, VPNs, and cookie blockers. Unlike third-party cookies, which can be cleared or blocked by the browser, your browser fingerprint cannot be altered.&lt;/p&gt;

&lt;p&gt;Fingerprinting can be used to identify visitors with a pattern of fraudulent behavior and then target only these visitors for additional security checks. This means you won't slow down legitimate users who want to access your site, but you will be able to identify those who are trying to brute force access or circumvent your security measures.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understanding-fraudulent-users"&gt;
  &lt;/a&gt;
  Understanding Fraudulent Users
&lt;/h3&gt;

&lt;p&gt;Most fraudsters use identity concealing techniques like incognito mode or VPNs (virtual private networks) to hide their identity. This allows them to try multiple passwords, stolen credit cards, or email addresses in your app in an attempt to gain access to restricted data or make an illegitimate purchase.&lt;/p&gt;

&lt;p&gt;Fingerprinting takes in data from the browser to help build a unique profile for each user on your site. By capturing the following specifics, fingerprinting software can identify suspicious traffic without an IP address or cookie:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Computer make and model&lt;/li&gt;
&lt;li&gt;Operating system version&lt;/li&gt;
&lt;li&gt;Browser version&lt;/li&gt;
&lt;li&gt;Browser extensions&lt;/li&gt;
&lt;li&gt;Timezone&lt;/li&gt;
&lt;li&gt;Language settings&lt;/li&gt;
&lt;li&gt;Adblocker used&lt;/li&gt;
&lt;li&gt;Screen size and resolution&lt;/li&gt;
&lt;li&gt;Tech specs (CPU, GPU, hard disk, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This method is surprisingly accurate when done well. &lt;strong&gt;&lt;a href="https://fingerprintjs.com/"&gt;FingerprintJS&lt;/a&gt; is 99.5% accurate&lt;/strong&gt; at identifying users and assigning them a unique visitorID. Using this ID, you can associate patterns of fraud with specific visitors and block them as needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#privacy-in-the-modern-browser"&gt;
  &lt;/a&gt;
  Privacy in the Modern Browser
&lt;/h2&gt;

&lt;p&gt;As you might imagine, browser fingerprinting has had to evolve as browsers have evolved. In the past few decades, the laws and standards around online privacy, as well as the tactics available to web developers have changed a lot.&lt;/p&gt;

&lt;p&gt;For example, cookies on their own have always been relatively easy to bypass. Because they're stored on the user's browser, they can be easily cleared manually or programmatically, so they don't provide a useful mechanism for identifying malicious users.&lt;/p&gt;

&lt;p&gt;Other browser features are much harder to bypass. Since the introduction of &lt;a href="https://en.wikipedia.org/wiki/WebGL#Software"&gt;WebGL in the 2010s&lt;/a&gt;, web applications can draw a Canvas element onto the DOM. This uses the computer's graphics card to render an image that can be converted to a unique identifier for a user. Of course, browser extensions can block this method, so it's rarely used alone but as part of a comprehensive fingerprinting method.&lt;/p&gt;

&lt;p&gt;This continued arms race between companies that rely on tracking to prevent fraud and malicious users has led to a number of new features that affect fingerprinting in modern browsers. With extensions and native features in all of the top three browsers that can block or bypass some part of the fingerprinting process, let's look at some of the privacy settings that impact fingerprinting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#browser-fingerprinting-in-chrome"&gt;
  &lt;/a&gt;
  Browser Fingerprinting in Chrome
&lt;/h3&gt;

&lt;p&gt;Chrome is currently the most popular browser, with a &lt;a href="https://gs.statcounter.com/browser-market-share#monthly-202103-202103-bar"&gt;64.19% market share&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QsaoYQS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ee6hg260jnbtgr4sj80w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QsaoYQS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ee6hg260jnbtgr4sj80w.png" alt="Current market share of modern browsers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Despite Google‚Äôs &lt;a href="https://www.cnet.com/how-to/google-collects-a-frightening-amount-of-data-about-you-you-can-find-and-delete-it-now/"&gt;spotty record of offering privacy to users&lt;/a&gt;, the Chrome browser does provide options that make tracking harder. First, users can block third-party cookies or all cookies or manually clear their cookies each time they close their browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G4QWJTCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoqbu1tsc5346e8qkmsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G4QWJTCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoqbu1tsc5346e8qkmsk.png" alt="Google Chrome cookie settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While cookies may not be critical in most fingerprinting algorithms, Chrome is also currently running a trial of Google‚Äôs &lt;a href="https://www.privacysandbox.com/"&gt;Privacy Sandbox&lt;/a&gt;. This feature attempts to prevent fingerprinting by hiding your hardware and software information from websites. It‚Äôs not clear when these features will be on for all Chrome users, but that seems to be the direction Google is heading.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7gj-57fX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jxhp6sivjj22w3se2rc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7gj-57fX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jxhp6sivjj22w3se2rc.png" alt="Chrome Privacy sandbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chrome also offers users the option to block access to operating system services or make websites ask before accessing them. Many of these services can be used to help fingerprint users if they‚Äôre enabled. Users can also turn off JavaScript completely, but this likely isn‚Äôt practical for real users as &lt;a href="https://w3techs.com/technologies/details/cp-javascript"&gt;most websites rely on JavaScript to function&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LTb2TsKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo9ljaap8pl03xn9r38c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LTb2TsKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo9ljaap8pl03xn9r38c.png" alt="Chrome permissions and content"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chrome users can also use extensions to &lt;a href="https://chrome.google.com/webstore/search/fingerprint"&gt;block fingerprints&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/search/vpn"&gt;obscure their IP addresses&lt;/a&gt;, and more. Each of these extensions limits tracking in its own way (for example, the &lt;a href="https://chrome.google.com/webstore/detail/canvas-fingerprint-defend/lanfdkkpgfjfdikkncbnojekcppdebfp"&gt;Canvas Fingerprint Detector&lt;/a&gt; blocks the HTML Canvas fingerprint method described above).&lt;/p&gt;

&lt;p&gt;Of course, no browser's privacy protections are perfect, and researchers are constantly finding new ways to track users in Chrome. For example, according to &lt;a href="https://arstechnica.com/information-technology/2020/03/study-ranks-edges-default-privacy-settings-the-lowest-of-all-major-browsers/"&gt;a 2020 paper by computer scientist Doug Leith&lt;/a&gt;, Chrome sends a "persistent identifier" as a header on each web request (presumably for debugging) that can be used as part of a browser fingerprint. It‚Äôs almost impossible for malicious users to completely avoid detection if fingerprinters are willing to stay up-to-date on the latest changes, but keeping up with these changes is a huge undertaking.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#safari-browser-fingerprinting"&gt;
  &lt;/a&gt;
  Safari Browser Fingerprinting
&lt;/h3&gt;

&lt;p&gt;As the second most popular web browser, Safari is slightly more private by default than Chrome. Safari uses &lt;a href="https://webkit.org/blog/7675/intelligent-tracking-prevention/"&gt;Intelligent Tracking Prevention&lt;/a&gt; to determine the sites tracking a user and blocks them if a user hasn't visited them for thirty days. &lt;a href="https://www.apple.com/safari/docs/Safari_White_Paper_Nov_2019.pdf"&gt;Safari now blocks a number of tracking technologies&lt;/a&gt;, including some attempts at fingerprinting, without making any concessions for fraud prevention.&lt;/p&gt;

&lt;p&gt;Like Chrome, Safari lets users disable JavaScript and block cookies. It also shows a privacy report right on the welcome page. Users can disable location services and autofill to prevent those features from being used in fingerprinting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jEYkalwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lye7546mqlvq0unoglm5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jEYkalwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lye7546mqlvq0unoglm5.png" alt="Safari privacy options"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, Safari users can make fingerprinting even harder with extensions like &lt;a href="https://better.fyi/"&gt;Better&lt;/a&gt; or a &lt;a href="https://www.comparitech.com/blog/vpn-privacy/best-vpn-safari/"&gt;VPN&lt;/a&gt; to obscure their IP address, location, and other device-specific data.&lt;/p&gt;

&lt;p&gt;Still, there are some weak spots in Safari‚Äôs pro-privacy measures. &lt;a href="https://arstechnica.com/information-technology/2020/03/study-ranks-edges-default-privacy-settings-the-lowest-of-all-major-browsers/"&gt;Researcher Doug Leith&lt;/a&gt; found that the Safari welcome page can actually leak information to third party apps that can then load user identifiers into the browser cache. It‚Äôs also possible that Apple‚Äôs iCloud processes make connections with identifying user information (likely for debugging purposes). Either of these data points could be part of a browser fingerprint, depending on how the data is distributed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#browser-fingerprinting-in-firefox"&gt;
  &lt;/a&gt;
  Browser Fingerprinting in Firefox
&lt;/h3&gt;

&lt;p&gt;Firefox has been outspoken about user privacy in recent years. Users are presented with the company‚Äôs privacy statement upon opening the browser for the first time, and fingerprint controls are turned on by default.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TuGSDZUo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1ymdtjb6ovbweqv824g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TuGSDZUo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1ymdtjb6ovbweqv824g.png" alt="Firefox standard tracking protection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This layer of fingerprinting protection built directly into the browser prevents sites from reading:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your timezone&lt;/li&gt;
&lt;li&gt;Your installed fonts&lt;/li&gt;
&lt;li&gt;Window size preference&lt;/li&gt;
&lt;li&gt;Operating system version&lt;/li&gt;
&lt;li&gt;Keyboard layout and language&lt;/li&gt;
&lt;li&gt;Site-specific zoom settings&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.mozilla.org/en-US/kb/firefox-protection-against-fingerprinting"&gt;And more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As in Chrome, Firefox users can change the permissions given to each website they visit, or they can block system resource requests entirely from the &lt;em&gt;Permissions&lt;/em&gt; menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aklViJOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3imbh7h03pn3jg8s6hca.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aklViJOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3imbh7h03pn3jg8s6hca.png" alt="Firefox operating system permissions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, there are thousands of Firefox extensions that give users more fine-grained &lt;a href="https://addons.mozilla.org/en-US/firefox/search/?q=privacy"&gt;control over their privacy&lt;/a&gt;. Users can also install the &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/amiunique/"&gt;AmIUnique addon&lt;/a&gt; to see how unique their browser is among the millions of fingerprints collected by &lt;a href="https://amiunique.org/"&gt;AmIUnique&lt;/a&gt;. This knowledge can be used by malicious users to tweak their settings further to obscure their identity.&lt;/p&gt;

&lt;p&gt;Even with some pretty strict fingerprinting protections in place, Doug Leith &lt;a href="https://arstechnica.com/information-technology/2020/03/study-ranks-edges-default-privacy-settings-the-lowest-of-all-major-browsers/"&gt;found shortcomings in Firefox‚Äôs privacy configuration&lt;/a&gt; too. For example, Firefox transmits identifying information during &lt;a href="https://support.mozilla.org/en-US/kb/telemetry-clientid"&gt;telemetry data reporting&lt;/a&gt; which is on by default.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-everchanging-world-of-browser-fingerprinting"&gt;
  &lt;/a&gt;
  The Ever-Changing World of Browser Fingerprinting
&lt;/h2&gt;

&lt;p&gt;I‚Äôve covered some of the features that browsers offer to users who want to protect their privacy online, but the specifics are constantly changing.&lt;/p&gt;

&lt;p&gt;Browsers need to add new features to enable more complex behavior online, but these new features can often be used to build fingerprints to identify users by their hardware or software. So, the browsers make these features gated or harder to access, but this makes certain websites harder to use.&lt;/p&gt;

&lt;p&gt;Despite the resistance to fingerprinting in some circles, it‚Äôs a legitimate and useful tool for preventing fraud and improving online security. With an ever-escalating race between malicious users and fingerprinters, it can be really hard for development teams to keep up with all the changes.&lt;/p&gt;

&lt;p&gt;For example, Firefox &lt;a href="https://www.makeuseof.com/latest-firefox-88-update-elevates-online-privacy/"&gt;just released&lt;/a&gt; an update that prevents sites from reading other open windows' names. If you were maintaining your own fingerprinting software that used open windows as part of your identifying data, you have to decide how to compensate for this change, or your fingerprint will get obsolete quickly.&lt;/p&gt;

&lt;p&gt;This is where tools like &lt;a href="https://fingerprintjs.com/"&gt;FingerprintJS&lt;/a&gt; come in. As experts in the fingerprinting space, they provide developers with 99.5% accurate browser fingerprinting and offer a free, open-source library as well as paid services. &lt;a href="https://fingerprintjs.com/"&gt;FingerprintJS&lt;/a&gt; doesn‚Äôt rely on outdated third-party tracking mechanisms, and it helps you prevent account takeovers, password sharing, and fake accounts.&lt;/p&gt;

&lt;p&gt;Modern browsers are doing a good job of improving privacy protections, but this trend comes with a cost to web application owners. Fortunately, fingerprinting is still an accurate and low-cost way to prevent fraud even now. Just don't roll your own.&lt;/p&gt;

</description>
      <category>privacy</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Learn how Stripe authentication works in 8 minutes</title>
      <author>Brody Klapko</author>
      <pubDate>Tue, 25 May 2021 21:17:36 +0000</pubDate>
      <link>https://dev.to/stripe/learn-how-stripe-authentication-works-in-8-minutes-45di</link>
      <guid>https://dev.to/stripe/learn-how-stripe-authentication-works-in-8-minutes-45di</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gRvlMeBks6k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Not a Python dev? Try &lt;a href="https://www.youtube.com/watch?v=8Db0nTVlKM0&amp;amp;list=PLy1nL-pvL2M50RmP6ie-gdcSnfOuQCRYk"&gt;Ruby&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.youtube.com/watch?v=CeufP46S5BI&amp;amp;list=PLy1nL-pvL2M6cUbiHrfMkXxZ9j9SGBxFE"&gt;PHP&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.youtube.com/watch?v=R5RoYDEIhCI&amp;amp;list=PLy1nL-pvL2M5xNIuNapwmABwEy2uifAlY"&gt;Node&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.youtube.com/watch?v=oJRPV07bVS0&amp;amp;list=PLy1nL-pvL2M5eqpSBR9KL7K0lcnWo0V0a"&gt;Go&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.youtube.com/watch?v=t4iJ07E_tA8&amp;amp;list=PLy1nL-pvL2M5TnSGVjEHTTMgdnnHi-KPg"&gt;Java&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.youtube.com/watch?v=N20T0rXAWsc&amp;amp;list=PLy1nL-pvL2M4cNNoUtjWevYSci4ubsbhC"&gt;.NET&lt;/a&gt; instead.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-youll-learn"&gt;
  &lt;/a&gt;
  What you‚Äôll learn
&lt;/h2&gt;

&lt;p&gt;Authentication is fundamental to using Stripe. Secure keys, or tokens, are used to authenticate requests made to the Stripe API. In the video, you‚Äôll learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Securely make Stripe API requests&lt;/li&gt;
&lt;li&gt;Pass payment information from your frontend to your backend&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#who-this-video-is-for"&gt;
  &lt;/a&gt;
  Who this video is for
&lt;/h2&gt;

&lt;p&gt;This video guide is primarily for developers new to Stripe but developers familiar with Stripe might learn some new things as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-follow-along"&gt;
  &lt;/a&gt;
  How to follow along
&lt;/h2&gt;

&lt;p&gt;If you want to work alongside the video, you‚Äôll need a &lt;a href="https://dashboard.stripe.com/register"&gt;Stripe account&lt;/a&gt; and a Python environment to work in. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gRvlMeBks6k&amp;amp;list=PLy1nL-pvL2M55YVn0mGoQ5r-39A1-ZypO"&gt;Authentication with stripe-python video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stripe.com/docs/api/authentication"&gt;Authentication reference documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stripe.com/docs/keys"&gt;API keys documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-to-watch-next"&gt;
  &lt;/a&gt;
  What to watch next
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Hg5FkqSmV68&amp;amp;list=PLy1nL-pvL2M55YVn0mGoQ5r-39A1-ZypO&amp;amp;index=3"&gt;Making requests with stripe-python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devrel</category>
      <category>stripe</category>
      <category>payments</category>
      <category>3dsecure</category>
    </item>
  </channel>
</rss>
