<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Let's start the journey to learn together Full-Stack Development</title>
      <author>scotty252</author>
      <pubDate>Fri, 21 May 2021 15:59:06 +0000</pubDate>
      <link>https://dev.to/scotty252/let-s-start-the-journey-to-learn-together-full-stack-development-40a0</link>
      <guid>https://dev.to/scotty252/let-s-start-the-journey-to-learn-together-full-stack-development-40a0</guid>
      <description>&lt;p&gt;Hello, My name is James Scott and I am a students of CS, as most students would know just got into college for Bachelors.&lt;/p&gt;

&lt;p&gt;I will be utilizing this summer to learn Web development basic languages like HTML, CSS, JavaScript and more...&lt;/p&gt;

&lt;p&gt;🙏 🌍, I decided to create this space with the aim of documenting my programming road, organizing materials and inspirations that I have saved in millions of folders 🗂️ and notes 📚.&lt;/p&gt;

&lt;p&gt;You want to join me?👀&lt;/p&gt;

&lt;p&gt;I am working hard towards becoming a Full Stack Web Developer, learning programming is a bit tough for me because I have to reconcile it with my daily Online Classes and work.&lt;/p&gt;

&lt;p&gt;I will be happy to make contact with Dev community (dev.io)! 👩‍💻 🏦 Ohh, I would like to add English is not my native language, please understand. This is another challenge for me.&lt;/p&gt;

&lt;p&gt;Today onwards I will be sharing my Coding Journey with you guys. Be the part of my this journey.&lt;/p&gt;

&lt;p&gt;If you like to Be the part of my this journey and follow me: Instagram : &lt;a href="https://instagram.com/devscott20"&gt;https://instagram.com/devscott20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Devscott20: GET INSPIRED!&lt;/p&gt;

&lt;p&gt;Happy Coding! ✌️&lt;/p&gt;

&lt;p&gt;Learning Resources :&lt;br&gt;
&lt;a href="https://freecodecamp.org"&gt;https://freecodecamp.org&lt;/a&gt; Responsive Web Design Certification &lt;a href="https://freecodecamp.org/learn"&gt;https://freecodecamp.org/learn&lt;/a&gt;&lt;br&gt;
“Put Down the Javascript: Learn HTML &amp;amp; CSS first“ &lt;a href="https://freecodecamp.org/news/put-down-the-javascri"&gt;https://freecodecamp.org/news/put-down-the-javascri&lt;/a&gt;..&lt;br&gt;
MDN Intro to Javascript &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaSc"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaSc&lt;/a&gt;..&lt;br&gt;
Just Javascript email course &lt;a href="https://justjavascript.com"&gt;https://justjavascript.com&lt;/a&gt;&lt;br&gt;
JSRobot Learning Game &lt;a href="https://lab.reaal.me/jsrobot"&gt;https://lab.reaal.me/jsrobot&lt;/a&gt;&lt;br&gt;
reactjs.org Intro to React &lt;a href="https://reactjs.org/tutorial/tutorial.html"&gt;https://reactjs.org/tutorial/tutorial.html&lt;/a&gt;&lt;br&gt;
gatsbyjs.org Tutorials &lt;a href="https://gatsbyjs.org/tutorial"&gt;https://gatsbyjs.org/tutorial&lt;/a&gt;&lt;br&gt;
So you can check out this blog regularly and let's do this journey together.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;br&gt;
Which Course will you Choose?&lt;/p&gt;

&lt;p&gt;Please share your thoughts in comments!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Build Serverless Applications using CDK and SAM</title>
      <author>Lorenz Vanthillo</author>
      <pubDate>Fri, 21 May 2021 15:56:56 +0000</pubDate>
      <link>https://dev.to/aws-builders/build-serverless-applications-using-cdk-and-sam-4oig</link>
      <guid>https://dev.to/aws-builders/build-serverless-applications-using-cdk-and-sam-4oig</guid>
      <description>&lt;p&gt;AWS recently announced the public preview of Serverless Application Model (SAM) support for CDK. SAM is an open-source framework that can be used to build, test and deploy serverless applications on AWS. It provides a Lambda-like execution environment that lets you locally build, test, and debug applications. Previously this could only be defined by SAM templates but now it is also possible through the AWS Cloud Development Kit (CDK)!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eCNL4LMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6k2bhe9sr1ukxxusudvo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eCNL4LMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6k2bhe9sr1ukxxusudvo.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will guide you through a small demo project to demonstrate how to build a serverless application with AWS CDK and test it locally with AWS SAM.&lt;/p&gt;

&lt;p&gt;We will build a simple REST API which shows the current bid or ask price of a certain cryptocurrency on Binance (exchange), expressed in the value of Bitcoin. &lt;/p&gt;

&lt;p&gt;The API expects two query parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;coin: (ETH, DOG, LINK, DOT, ...)&lt;/li&gt;
&lt;li&gt;price: (bid or ask)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example of the API call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl "http://127.0.0.1:3000/crypto?type=ask&amp;amp;coin=ETH"
{"coin": "ETH", "price": 0.066225}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The setup in AWS will also be pretty straight forward. &lt;br&gt;
We will set up a Lambda proxy integration in API Gateway&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2mVOqkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jeqxpod37dzyst85djr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2mVOqkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jeqxpod37dzyst85djr.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get started, we need to install the AWS CDK CLI and create a new CDK project. I use Python as client language.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install -g aws-cdk
$ cdk init app --language python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The project structure looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── README.md
├── app.py
├── cdk.json
├── requirements.txt
├── sam_cdk_demo
│   ├── __init__.py
│   └── sam_cdk_demo_stack.py
└── setup.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The file &lt;code&gt;sam_cdk_demo/sam_cdk_demo_stack.py&lt;/code&gt; should contain our code to define the AWS cloud resources we need but first let's start with writing our Lambda.&lt;/p&gt;

&lt;p&gt;Create a folder inside the root of the project called &lt;em&gt;"lambda"&lt;/em&gt; and add a &lt;code&gt;handler.py&lt;/code&gt;. The &lt;a href="https://github.com/ccxt/ccxt"&gt;ccxt&lt;/a&gt; library is used by our Lambda to interact with the Binance API. The Lambda itself is very basic on purpose.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ccxt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;


&lt;span class="c1"&gt;# use CCXT library to connect with Binance API
&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ccxt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'binance'&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;
    &lt;span class="s"&gt;'timeout'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'enableRateLimit'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_current_price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coin_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price_type&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# fetch latest ticker data for coin pair xxx/BTC
&lt;/span&gt;    &lt;span class="n"&gt;ticker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch_ticker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'{}/BTC'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coin_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c1"&gt;# get ask/bid price from ticket data
&lt;/span&gt;    &lt;span class="n"&gt;current_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ticker&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;price_type&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;current_price&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lambda_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# get values from query string parameters
&lt;/span&gt;    &lt;span class="n"&gt;coin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'queryStringParameters'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'coin'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'queryStringParameters'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# CCXT exchange expects coin in uppercase
&lt;/span&gt;    &lt;span class="n"&gt;valid_coin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;coin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# get current price based on coin name and price type (ask/bid)
&lt;/span&gt;    &lt;span class="n"&gt;current_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_current_price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valid_coin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'statusCode'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'headers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
            &lt;span class="s"&gt;'Content-Type'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'application/json'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;'body'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="s"&gt;'coin'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;valid_coin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;current_price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to add a &lt;code&gt;requirements.txt&lt;/code&gt; inside the folder to make the ccxt library available to the Lambda.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ccxt==1.50.13
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Lambda is ready! Now we will use AWS CDK to define our AWS infrastructure. We need to deploy the Lambda and create an API Gateway in front of it. Update the file &lt;code&gt;demo/demo_stack.py&lt;/code&gt;. We keep the code pretty basic again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;aws_cdk&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;aws_lambda&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;_lambda&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;aws_apigateway&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;apigw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CdkLambdaSamStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;construct_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;construct_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# creating Lambda function that will be triggered by the API Gateway
&lt;/span&gt;        &lt;span class="n"&gt;get_price_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'CryptoFunction'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'handler.lambda_handler'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PYTHON_3_8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'lambda'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# create REST API
&lt;/span&gt;        &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apigw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RestApi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'crypto-api'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# add resource /crypto
&lt;/span&gt;        &lt;span class="n"&gt;resource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'crypto'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# create Lambda integration 
&lt;/span&gt;        &lt;span class="n"&gt;get_crypto_integration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apigw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LambdaIntegration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_price_handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# add method which requires two query string parameteres (coin and type)    
&lt;/span&gt;        &lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;http_method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;integration&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;get_crypto_integration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;request_parameters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;'method.request.querystring.coin'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'method.request.querystring.type'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;request_validator_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;apigw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestValidatorOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;validate_request_parameters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update the &lt;code&gt;requirements.txt&lt;/code&gt; in the project root with the necessary modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws-cdk.core
aws-cdk.aws_lambda
aws-cdk.aws_apigateway
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the Python virtual environment which is created by CDK and install the modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ source .venv/bin/activate
(.venv)$ pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will use AWS SAM to test our setup locally. It's important to mention that you need to have &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; installed. We will use Docker to build our code. The Lambda will also run inside as a  Lambda-like Docker container.&lt;/p&gt;

&lt;p&gt;Prepare the deployment artifact.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(.venv)$ sam-beta-cdk build --use-container
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the local API Gateway.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sam-beta-cdk local start-api
...
* Running on http://127.0.0.1:3000/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use a tool like &lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt; (or &lt;code&gt;curl&lt;/code&gt; or just your browser) to perform calls against our API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z8jK3RLY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa74mjmgtbvj1prmbg5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z8jK3RLY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa74mjmgtbvj1prmbg5k.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It takes a few seconds to execute the function because AWS SAM is spinning up a Docker container to execute our code. After the execution the container is destroyed. &lt;/p&gt;

&lt;p&gt;When everything looks fine we can deploy it to AWS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(.venv)$ cdk bootstrap
(.venv)$ cdk deploy -a .aws-sam/build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now test against the deployed API.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1nF0ibb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5wwbqs1kech0j05bmli.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1nF0ibb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5wwbqs1kech0j05bmli.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o2zB4RVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r49pzbb9scyg77dlj5zn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2zB4RVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r49pzbb9scyg77dlj5zn.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We were able to test our API and Lambda using the new Serverless Application Model integration with CDK! You can find all code &lt;a href="https://github.com/lvthillo/sam-cdk-demo"&gt;on my GitHub&lt;/a&gt;. Be aware that this feature is in preview. Feel free to do more extensive testing. You can report bugs and submit feature requests to the &lt;a href="https://github.com/aws/aws-sam-cli"&gt;SAM opensource repository&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>cdk</category>
      <category>sam</category>
    </item>
    <item>
      <title>Sublime Text 4 is here, can it convert you? (Snack Pack #6)</title>
      <author>Blake Campbell</author>
      <pubDate>Fri, 21 May 2021 15:42:21 +0000</pubDate>
      <link>https://dev.to/blaketweeted/sublime-text-4-is-here-can-it-convert-you-snack-pack-6-53p0</link>
      <guid>https://dev.to/blaketweeted/sublime-text-4-is-here-can-it-convert-you-snack-pack-6-53p0</guid>
      <description>&lt;h1&gt;
  &lt;a href="#it-hasnt-converted-me"&gt;
  &lt;/a&gt;
  It hasn't converted me.
&lt;/h1&gt;




&lt;h2&gt;
  &lt;a href="#benefits-large-files-and-memory"&gt;
  &lt;/a&gt;
  Benefits Large files and memory
&lt;/h2&gt;

&lt;p&gt;VSCode is without a doubt a fantastic experience when you get your workflow set up. VSCode also is a memory hog in comparison to Sublime Text 4. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Not an extensive test&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;My VSCode has extensions running vs. a clean install of Sublime Text 4. The same project and tabs are open in each editor.&lt;/p&gt;

&lt;p&gt;The difference in memory is vast. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TNIx-57N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v367ir84c17y2idr86x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TNIx-57N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v367ir84c17y2idr86x.png" alt="Screen Shot 2021-05-21 at 11.19.49 AM"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkDXsez4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dscg6lqgzivbozbu137c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkDXsez4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dscg6lqgzivbozbu137c.png" alt="Screen Shot 2021-05-21 at 11.20.29 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This doesn't bug me. My laptop has plenty of memory to use. If your workstation is limited, it's worth the mention. VSCode also has many more things I use, from the git integration to a snippet library I've written. Again not a fair comparison for memory usage.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#my-history-with-text-editors"&gt;
  &lt;/a&gt;
  My history with Text editors
&lt;/h2&gt;

&lt;p&gt;Sublime Text 2 -&amp;gt; Atom -&amp;gt; VSCode&lt;/p&gt;

&lt;p&gt;Starting with Sublime then moving to Atom. Atom was my favorite for years with the extensions. I even bought the coffee mug.&lt;/p&gt;

&lt;p&gt;After arriving at VSCode, I don't think I'm changing anytime soon. There are too many tools and plugins that make my job easier. There are a million articles about the extension marketplace and making your own.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#when-would-i-switch-fulltime"&gt;
  &lt;/a&gt;
  When would I switch full-time?
&lt;/h3&gt;

&lt;p&gt;Honestly, if Sublime Text integrated with VSCode's marketplace, that'd be the only thing to get me to switch. I'm not even sure if that's possible, but my entire flow has been built around VSCode. &lt;/p&gt;

&lt;p&gt;Even then, I need to buy a license. &lt;/p&gt;

&lt;p&gt;What do you think about the new version of Sublime Text? Is it worth the download?&lt;/p&gt;




&lt;p&gt;My snack pack reads are intended for a quick read without any fluff and provide actionable items.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>JavaScript tricky interview questions</title>
      <author>SABBIR AHMMED</author>
      <pubDate>Fri, 21 May 2021 15:37:29 +0000</pubDate>
      <link>https://dev.to/sabbir185/javascript-tricky-interview-questions-26ho</link>
      <guid>https://dev.to/sabbir185/javascript-tricky-interview-questions-26ho</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-the-truthy-and-falsy-values-of-javascript"&gt;
  &lt;/a&gt;
  What are the truthy and falsy values of javascript?
&lt;/h2&gt;

&lt;p&gt;JavaScript falsy means false of boolean condition context. Mainly, six expressions are called falsy. They are false, ‘’(empty string), undefined, null, NaN and 0. And the rest of the expression treats truthy. For example –&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let value = NaN;

if(value) {
    console.log( “Truthy value”);
} else {
    console.log( “Falsy value” );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: False value, because here boolean condition expression is false.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-difference-between-null-and-undefined"&gt;
  &lt;/a&gt;
  What is the difference between null and undefined?
&lt;/h2&gt;

&lt;p&gt;null and undefined both are reserve keywords of javascript. In javascript null is used to assign an empty value, that’s means nothing. On the other hand, if we declare a variable but not define it yet at that time, the variable will show undefined. For example –&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let value;
console.log( value );     // undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Else, if we don’t return anything from the function, it will show undefined.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-difference-between-and-"&gt;
  &lt;/a&gt;
  What is the difference between == and === ?
&lt;/h2&gt;

&lt;p&gt;Double equal ( == ) is used for comparing two variables, but it doesn't check their data types. If one is an integer and another is a string but both contain the same value then it will be true. For example — -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let x = 4 ;
let y = “4” ;
if ( x == y ) {
    console.log( “ condition is true “ );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But, three equal not only compare two variables but also check their data types. If data types are the same both, so they are truthy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#define-scope-and-block-scope"&gt;
  &lt;/a&gt;
  Define scope and block scope
&lt;/h2&gt;

&lt;p&gt;The scope is just like the area. One is global scope and another is local scope. In general, when we declare a variable following by ES6 rules such as let and const in the function that variable is called function scoped variable or local variable. But if we want to declare a variable outside of a function is called global variable and its access is everywhere. For example –&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const x = 15       // this is global variable or global scope

function doSomething() {
    const y = 15 ;           // local or function scoped variable
    const sum = x + y ;     // the variable which are inside of 
    return sum;            // curly braces are called block scope variable
}

console.log( doSomething() ); // 30
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Noted that, you can’t access y and sum variables outside of doSomething() function. The scope of y and sum are only in doSomething().&lt;/p&gt;

&lt;p&gt;let and const are called block scope keywords. You can’t access outside of block &lt;code&gt;curly braces { }&lt;/code&gt;. And var is a keyword that is called function scope variable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-hoisting"&gt;
  &lt;/a&gt;
  What is hoisting?
&lt;/h2&gt;

&lt;p&gt;Hoisting in javascript is so interesting part. In javascript, var is a keyword that is used to declare variables. This var allows hoisting, hoisting means you can access a variable from anywhere in the parent scope. Hoisting set a reference of variable in the global scope or immediate parent scope. But doesn’t carry assigned value. For example –&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const playFootball = () =&amp;gt; {

    console.log("gameName hoisting : ", gameName );     // undefined

    let rain = true;

    var gameName = "Football";

    console.log("status hoisting : ", status );       // undefined

    if( rain ) {
        var status = "continue game" ;
    }

    console.log("status : ", status );               // continue game

}

playFootball();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-closure-in-js"&gt;
  &lt;/a&gt;
  What is Closure in JS?
&lt;/h2&gt;

&lt;p&gt;The closure is a hot topic of JS. I’m going to discuss this here briefly. In JavaScript, closures are created when the inner function is created inside of a function. That inner function holds the reference from its parent function scope. For example –&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LJVIwA7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fs2cpqjd22b1utqruta.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJVIwA7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fs2cpqjd22b1utqruta.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Here, num2 is used by the inner function that time closure appears. And num1 comes from global scope, global variables are always reserved and any function can use them. But a variable in the function when it is used by an inner function that time closure is created.&lt;/p&gt;

&lt;p&gt;A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment). In other words, a closure gives you access to an outer function’s scope from an inner function.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>es6</category>
      <category>interviewquestions</category>
    </item>
    <item>
      <title>Building REST API using AWS with Serverless, Node.js, Express</title>
      <author>Salah856</author>
      <pubDate>Fri, 21 May 2021 15:14:06 +0000</pubDate>
      <link>https://dev.to/aws-builders/building-rest-api-using-aws-with-serverless-node-js-express-2bk3</link>
      <guid>https://dev.to/aws-builders/building-rest-api-using-aws-with-serverless-node-js-express-2bk3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h1&gt;

&lt;p&gt;To get started, you'll need the Serverless Framework installed. You'll also need your environment configured with AWS credentials. &lt;/p&gt;

&lt;p&gt;Then, let's install a few dependencies. We'll install the express framework, as well as the serverless-http:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="nx"&gt;serverless&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a file index.js and initialize it like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;serverless&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;serverless-http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;serverless&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The serverless-http package is a handy piece of middleware that handles the interface between your Node.js application and the specifics of API Gateway.&lt;/p&gt;

&lt;p&gt;Then create a file serverless.yml:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;application&lt;/span&gt;

&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;aws&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;nodejs6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
  &lt;span class="nx"&gt;stage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;dev&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;us&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;east&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="nx"&gt;functions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;
    &lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ANY&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ANY {proxy+}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now deploy&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;sls&lt;/span&gt; &lt;span class="nx"&gt;deploy&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hooray! congratulations :D &lt;/p&gt;

&lt;p&gt;Coming part for how to use Dyanmodb as a data resource for enriching API. &lt;/p&gt;

&lt;p&gt;resources : &lt;br&gt;
Book: Full Stack Serverless: Modern Application Development for Nader Dabit &lt;br&gt;
&lt;a href="https://www.serverless.com/blog/serverless-express-rest-api"&gt;https://www.serverless.com/blog/serverless-express-rest-api&lt;/a&gt; &lt;/p&gt;

</description>
      <category>serverless</category>
      <category>node</category>
      <category>aws</category>
    </item>
    <item>
      <title>API's From Dev to Production - Part 10</title>
      <author>Pete King</author>
      <pubDate>Fri, 21 May 2021 15:08:05 +0000</pubDate>
      <link>https://dev.to/newday-technology/api-s-from-dev-to-production-part-10-9j1</link>
      <guid>https://dev.to/newday-technology/api-s-from-dev-to-production-part-10-9j1</guid>
      <description>&lt;h1&gt;
  &lt;a href="#series-introduction"&gt;
  &lt;/a&gt;
  Series Introduction
&lt;/h1&gt;

&lt;p&gt;Welcome to &lt;strong&gt;Part 10&lt;/strong&gt; of this blog series that will go from the most basic example of a .net 5 webapi in C#, and the journey from development to production with a &lt;a href="https://dev.to/newday-technology/shift-left-engineering-4fpp"&gt;&lt;strong&gt;shift-left&lt;/strong&gt;&lt;/a&gt; mindset. We will use &lt;strong&gt;Azure&lt;/strong&gt;, &lt;strong&gt;Docker&lt;/strong&gt;, &lt;strong&gt;GitHub&lt;/strong&gt;, &lt;strong&gt;GitHub Actions&lt;/strong&gt; for CI/C-Deployment and Infrastructure as Code using &lt;strong&gt;Pulumi&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this post we will be looking at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SAST - &lt;strong&gt;S&lt;/strong&gt;tatic &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;S&lt;/strong&gt;ecurity &lt;strong&gt;T&lt;/strong&gt;esting is used to secure software by reviewing/scanning the source code of the software to identify sources of vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;S&lt;/strong&gt;tatic &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;S&lt;/strong&gt;ecurity &lt;strong&gt;T&lt;/strong&gt;esting is a very important step in the journey from dev to production. With an abundance of tools out there on the market, there's bound to be one that suits you. With GitHub CodeQL, we can achieve this in little time with little effort.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can increase your chances of finding security vulnerabilities before they reach production&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/peteking"&gt;
        peteking
      &lt;/a&gt; / &lt;a href="https://github.com/peteking/Samples.WeatherForecast-Part-10"&gt;
        Samples.WeatherForecast-Part-10
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h1&gt;

&lt;p&gt;We will be picking-up where we left off in &lt;a href="https://dev.to/newday-technology/api-s-from-dev-to-production-part-9-43fd"&gt;Part 9&lt;/a&gt;, which means you’ll need the end-result from &lt;a href="https://github.com/peteking/Samples.WeatherForecast-Part-9"&gt;GitHub Repo - Part 9&lt;/a&gt; to start with.&lt;/p&gt;

&lt;p&gt;If you have followed this series all the way through, and I would encourage you to do so, but it isn't necessary if previous posts are knowledge to you already.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don't forget to ensure you have setup Code Climate Quality with your repository.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;As we have discussed in this blog post series and in &lt;a href="https://dev.to/newday-technology/shift-left-engineering-4fpp"&gt;shift-left&lt;/a&gt;, &lt;strong&gt;security testing&lt;/strong&gt; is part of actually &lt;a href="https://dev.to/newday-technology/shift-left-engineering-4fpp"&gt;&lt;em&gt;shifting-left&lt;/em&gt;&lt;/a&gt;! We need to carry out security testing, and of course we want to automate it, and ensure its early on in the process. There are many tools out there in the market that can scan your code (statically); the newest entrant is from an acquisition of Microsoft's GitHub - &lt;strong&gt;CodeQL&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this post we are going to go through the steps on how to add SAST using CodeQL to our API.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#a-bit-of-history-about-codeql"&gt;
  &lt;/a&gt;
  A bit of history about CodeQL
&lt;/h1&gt;

&lt;p&gt;GitHub acquired &lt;a href="https://semmle.com/"&gt;Semmle&lt;/a&gt; in 2019 for an undisclosed sum, it originally came out of research completed at Oxford University.&lt;/p&gt;

&lt;p&gt;The technology is based around queries and its language CodeQL, the analysis engine enables the query of large codebases to identify code patterns and search for vulnerabilities and their variants.&lt;/p&gt;

&lt;p&gt;GitHub has now baked this into its platform and has simply made it oh so easy :)&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#why-is-sast-so-important"&gt;
  &lt;/a&gt;
  Why is SAST so important?
&lt;/h1&gt;

&lt;p&gt;SAST makes discovering common vulnerabilities simple, and more critically, automated. SAST is a really good way of improving overall good-practice among your engineers.&lt;/p&gt;

&lt;p&gt;Usually engineers outnumber security staff and therefore, it can be rather challenging for any company to find the people to perform code reviews, specifically those with a focus on security. SAST tools provide the ability to analyse 100% of the codebase and are certainly faster than manual code reviews. These tools can easily scan millions of lines of code in a matter of minutes, and automatically identify critical vulnerabilities; such as SQL injection, cross-site scripting, and more with a high level of confidence.&lt;/p&gt;

&lt;p&gt;SAST helps integrate security into the early stages of the software development lifecycle and enables the culture of &lt;a href="https://dev.to/newday-technology/shift-left-engineering-4fpp"&gt;shifting-left&lt;/a&gt;; to detect vulnerabilities in the proprietary code in the design stage or the coding stage when they are relatively easier to mitigate.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h1&gt;

&lt;p&gt;Navigate to your GitHub Repo → Security → Code Scanning Alerts → &lt;strong&gt;&lt;em&gt;Click&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;Set up this workflow&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G3t1DKJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9906jdhgtpn6g5l0b0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G3t1DKJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9906jdhgtpn6g5l0b0i.png" alt="blog-10-01"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h1&gt;

&lt;p&gt;This will generate a new GitHub Actions Workflow file called, &lt;code&gt;codeql-analysis.yml&lt;/code&gt; - You're free to change the name, but I've kept it the same.&lt;/p&gt;

&lt;p&gt;The intelligent thing here is that GitHub will detect the languages inside your repo, in our case, it's picked-up C#; which is of course correct :)&lt;/p&gt;

&lt;p&gt;One thing to note is the &lt;code&gt;cron&lt;/code&gt;, for me, it did generate an invalid value. In this case, I've changed it to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;44&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;23&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ET9DzCKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tm4u2pby96c6p1mt3014.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ET9DzCKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tm4u2pby96c6p1mt3014.png" alt="blog-10-02"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For more information about the crontab format, please see &lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Commit your changes and head on over to the &lt;strong&gt;&lt;em&gt;Actions&lt;/em&gt;&lt;/strong&gt; tab to see it running.&lt;/p&gt;




&lt;p&gt;Here you can see I have a new workflow on the left and it has executed in 4 minutes and 4 seconds!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_uo1V1b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96tjccar3i2yodyq1miz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_uo1V1b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96tjccar3i2yodyq1miz.png" alt="blog-10-03"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You'll notice it has done an autobuild; based on its language detection, CodeQL attempts to build your code, its image has loads of the .NET SDK's to cover everything.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wfRvGB6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vak1adkotttc91nys1m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wfRvGB6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vak1adkotttc91nys1m.png" alt="blog-10-04"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is worth looking through the build output, even just to get a general understanding on what is going on here.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h1&gt;

&lt;p&gt;We can configure a few things that are not enabled by default such as &lt;a href="https://docs.github.com/en/code-security/secure-coding/configuring-code-scanning#running-additional-queries"&gt;&lt;em&gt;additional queries&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For ultimate control, I've disabled the default queries and listed what I want, in our case, I'm adding &lt;em&gt;extended security&lt;/em&gt; and &lt;em&gt;security and quality&lt;/em&gt; queries, and of course C# :)&lt;/p&gt;

&lt;p&gt;This configuration simply goes into a yaml file.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Create&lt;/em&gt;&lt;/strong&gt; a folder called, &lt;code&gt;codeql&lt;/code&gt; under the &lt;code&gt;.github&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Copy &amp;amp; paste&lt;/em&gt;&lt;/strong&gt; the following code into a new file called, &lt;code&gt;codeql-config.yml&lt;/code&gt; - no need to commit your changes yet, as there is another change in Step 4.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;codeql-config.yml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;default"&lt;/span&gt;

&lt;span class="na"&gt;disable-default-queries&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

&lt;span class="na"&gt;languages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;csharp&lt;/span&gt;

&lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Extended Security&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;security-extended&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Security and Quality&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;security-and-quality&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CodeQL Repo&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;github/codeql/csharp/ql/src/codeql-suites/csharp-code-scanning.qls@master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3I1AwtY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nomqrx70z4wy3yxtpvgy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3I1AwtY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nomqrx70z4wy3yxtpvgy.png" alt="blog-10-05"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h1&gt;

&lt;p&gt;We need to reference our new CodeQL configuration file in our Workflow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;In&lt;/em&gt;&lt;/strong&gt; the &lt;code&gt;Initialize CodeQL&lt;/code&gt; Workflow Step → &lt;strong&gt;&lt;em&gt;Add&lt;/em&gt;&lt;/strong&gt; a new line to its &lt;strong&gt;&lt;em&gt;with&lt;/em&gt;&lt;/strong&gt; clause like so below:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;codeql-analysis.yml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;config-file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./.github/codeql/codeql-config.yml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AlWEcAdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhrj8evs8flob4qxeedt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AlWEcAdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhrj8evs8flob4qxeedt.png" alt="blog-10-06"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-5-extra"&gt;
  &lt;/a&gt;
  Step 5 (Extra)
&lt;/h1&gt;

&lt;p&gt;If you're like me a really like branch protection rules and GitHub Status Checks, you'll want to create/modify your branch protection rule to have both your workflows as &lt;em&gt;required to pass before merging&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finally, commit your changes.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gXwgkRly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohroifwrom3dli87rtl3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gXwgkRly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohroifwrom3dli87rtl3.png" alt="blog-10-07"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-6"&gt;
  &lt;/a&gt;
  Step 6
&lt;/h1&gt;

&lt;p&gt;If you navigate back to &lt;em&gt;Code scanning alerts&lt;/em&gt; under &lt;em&gt;Security&lt;/em&gt;, hopefully you'll see &lt;em&gt;no alerts&lt;/em&gt;!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here, other tools can publish their results too, by supporting the &lt;a href="https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=sarif%5D"&gt;open SARIF standard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Which means even if you expand your toolset later, you can have the same GitHub native experience! Pretty cool right?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lpBjlM8E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0n0s9k8zgg2vt0yj8wv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lpBjlM8E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0n0s9k8zgg2vt0yj8wv.png" alt="blog-10-08"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-7-extra"&gt;
  &lt;/a&gt;
  Step 7 (Extra)
&lt;/h1&gt;

&lt;p&gt;While we are here in the &lt;em&gt;Security&lt;/em&gt; tab, I applaud you to ensure you have &lt;strong&gt;Dependabot&lt;/strong&gt; alerts &lt;strong&gt;on&lt;/strong&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#what-have-we-learned"&gt;
  &lt;/a&gt;
  What have we learned?
&lt;/h1&gt;

&lt;p&gt;We have very quickly enabled our API to be scanned by GitHub CodeQL, a SAST analysis engine. It's easy and provides a single pane for you to see any security vulnerabilities in your code. If you end up using another product, these products can push their results into the GitHub Security area of your repository; so long as they integrate with GitHub and the &lt;a href="https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=sarif%5D"&gt;open SARIF standard&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt; should always be part of your engineering process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;ynamic &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;S&lt;/strong&gt;ecurity &lt;strong&gt;T&lt;/strong&gt;esting is another form of security testing, the key point is it being dynamic VS static - We won't cover this here, but there is value to be had with the combination of SAST and DAST. I may cover it in another post in the future 😉&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#next-up"&gt;
  &lt;/a&gt;
  Next up
&lt;/h1&gt;

&lt;p&gt;Part 11 in this series will be about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Infrastructure as Code

&lt;ul&gt;
&lt;li&gt;Pulumi&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More information
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/code-security/secure-coding/about-code-scanning"&gt;https://docs.github.com/en/code-security/secure-coding/about-code-scanning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/code-security/secure-coding/configuring-code-scanning"&gt;https://docs.github.com/en/code-security/secure-coding/configuring-code-scanning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.azure.com"&gt;https://www.azure.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/"&gt;https://dotnet.microsoft.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.github.com"&gt;https://www.github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.docker.com"&gt;https://www.docker.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pulumi.com"&gt;https://www.pulumi.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeclimate.com/quality"&gt;https://www.codeclimate.com/quality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dotnet</category>
      <category>docker</category>
      <category>csharp</category>
      <category>github</category>
    </item>
    <item>
      <title>FACEBOOK Clone Using just HTML &amp; CSS - Beginners Tutorial</title>
      <author>Somanath Goudar</author>
      <pubDate>Fri, 21 May 2021 15:03:47 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/facebook-clone-using-just-html-css-beginners-tutorial-2fe5</link>
      <guid>https://dev.to/somanathgoudar/facebook-clone-using-just-html-css-beginners-tutorial-2fe5</guid>
      <description>&lt;p&gt;I Built Facebook Clone using just HTML &amp;amp; CSS. I Just Love to build these to practice my HTML &amp;amp; CSS Skills. I made a tutorial video to help beginners to improve there html &amp;amp; css skills to build real world projects.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Tutorial Video:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-pUVDYFVFpw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/somanath-goudar/html-css-projects"&gt;https://github.com/somanath-goudar/html-css-projects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Channel:&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA&lt;/a&gt;&lt;br&gt;
Subscribe to My YouTube Channel, Next Week I Will be building &lt;strong&gt;Tiktok Clone&lt;/strong&gt; &amp;amp; &lt;strong&gt;Instagram Reels Clone&lt;/strong&gt; with just HTML &amp;amp; CSS.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;You may also like my other posts:&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-youtube-clone-with-just-html-css-for-complete-beginners-4fk1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a YouTube Clone with just HTML &amp;amp; CSS + Responsive - For  Beginners&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ Mar 21 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-gmail-clone-using-just-html-css-476b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a GMAIL Clone Using just HTML &amp;amp; CSS - Beginners Tutorial&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ May 7 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-linkedin-clone-using-just-html-css-3p1n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a LinkedIn Clone Using just HTML &amp;amp; CSS - Beginners Tutorial&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ May 6 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🤯 30DaysChallenge - 30 Days Extreme HTML &amp;amp; CSS CHALLENGE 🤯&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ May 19 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#30daysofcode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>html</category>
    </item>
    <item>
      <title>How I Make an Average of 250$ Every Month on Twitter</title>
      <author>Sunil Kumar</author>
      <pubDate>Fri, 21 May 2021 14:32:53 +0000</pubDate>
      <link>https://dev.to/sunilc_/how-i-make-an-average-of-250-every-month-on-twitter-3c60</link>
      <guid>https://dev.to/sunilc_/how-i-make-an-average-of-250-every-month-on-twitter-3c60</guid>
      <description>&lt;p&gt;I realised the importance of having an online presence sometime in the last year when I saw how much money people were making by using Twitter as a Marketing channel. Since I was new to marketing &amp;amp; selling products on the internet, it was shocking to me how one can leverage social media to build businesses online.&lt;/p&gt;

&lt;p&gt;I didn't know how to make money through an online presence, but the main thing I realised was that having an online presence is important and it can definitely benefit me one way or the other in the future.&lt;/p&gt;

&lt;p&gt;So I started building my online presence on Twitter since I was mainly using Twitter at the time.&lt;/p&gt;

&lt;p&gt;It's been close to 11 months and I have grown my account from 150 followers to 20k followers. And every month I make an average of 250 USD. I know this is not a lot of money at this point in time. The main reason for this is I don't have any e-book of my own yet. When you have your own product to offer people tend to buy more than when you're sharing someone else's product. This is because your audience trust you since you have been providing value from a long time.&lt;/p&gt;

&lt;p&gt;Also I earn 250 USD / month with very minimal effort. So that's a win for me.&lt;/p&gt;

&lt;p&gt;I mainly make this money by selling e-books &amp;amp; through affiliate program on Gumroad. For those who is not aware what an affiliate program is, it's basically you help someone else sell their product &amp;amp; earn a commission.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-basically-did-3-things-to-get-to-this-point"&gt;
  &lt;/a&gt;
  I Basically Did 3 Things To Get to This Point
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Grow a significant follower base on Twitter&lt;/li&gt;
&lt;li&gt;Provide valuable content for free every single day&lt;/li&gt;
&lt;li&gt;Promote ebooks &amp;amp; affiliate links occasionally&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How to grow your account on Twitter is a new blog topic altogether. There are a lot of articles &amp;amp; ebooks available to learn the strategies to grow your account. I will not be discussing this topic in this article.&lt;/p&gt;

&lt;p&gt;In this article I mainly want to share strategies that I use (with a good audience) which attracts my audience to buy from the links that I share.&lt;/p&gt;

&lt;p&gt;I mainly follow the below 3 strategies.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-share-my-sale-links-in-a-viral-tweet"&gt;
  &lt;/a&gt;
  1. Share My Sale Links in a Viral Tweet
&lt;/h3&gt;

&lt;p&gt;Twitter is a platform where posts tend to go viral when you post a really good tweet or post something on popular topics like JavaScript etc. Although there's no guarantee that two similar tweets will go viral. One of them might fail &amp;amp; the other one can succeed. This totally depends on the Twitter algorithm which nobody knows exactly about. &lt;/p&gt;

&lt;p&gt;Anyway after I post something, if I see that the tweet / thread is going viral, i'll immediately create a new tweet with the links I want users to buy from. &lt;/p&gt;

&lt;p&gt;For example: One of my tweet went viral recently and see how I attached an affiliate link as a second tweet couple of hours after I realised the tweet was going viral.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u7F4zdcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621346540119/z8-tuuctZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u7F4zdcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621346540119/z8-tuuctZ.png" alt="Screenshot 2021-05-18 at 7.32.12 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since the tweet has gone viral, I generally get a lot of impressions / views and in turn a lot of link clicks. Although the conversion rate is pretty low I do get some sales.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rjAnv9VA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621346692671/84nYBRUPt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rjAnv9VA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621346692671/84nYBRUPt.png" alt="Screenshot 2021-05-18 at 7.34.45 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the time of writing this article I've got around 13.7k impressions on my sale tweet &amp;amp; 846 link clicks. That means 846 unique users have clicked on the link &amp;amp; have seen the product. If you think about it that's a very good visibility for one tweet without running any ads. Even if I get 1 or 2 sales, I'll make around 25$ in commissions and that's a pretty good deal for just 1 tweet which hardly took me a minute to write.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-share-my-sale-links-in-my-bio"&gt;
  &lt;/a&gt;
  2. Share My Sale Links in My Bio
&lt;/h3&gt;

&lt;p&gt;One of the strategies to build an audience on Twitter is to direct users to your profile by sharing valuable content and commenting on other big accounts. And once the users open your profile the first thing they notice is the bio. &lt;/p&gt;

&lt;p&gt;So you should have a killer bio if you want to convert users into your followers. Bio is also a very good place to keep any links that you want the incoming users to check out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--THu5aHze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178816623/36T_ROiI-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--THu5aHze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178816623/36T_ROiI-.png" alt="Screenshot 2021-05-16 at 8.56.50 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see I have a link to my free e-book in the bio. So when users look at my bio, they will check this &amp;amp; probably download it if they like the product. Since this is a free e-book I don't make any money from it but I do get their emails. Right now I'm trying to build an email list and that's the reason I'm offering a free e-book.&lt;/p&gt;

&lt;p&gt;But you get the idea.&lt;/p&gt;

&lt;p&gt;You can even keep any sale links here and make money!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-keep-a-pinned-tweet-which-has-my-sale-links"&gt;
  &lt;/a&gt;
  3. Keep a Pinned Tweet Which Has My Sale Links
&lt;/h3&gt;

&lt;p&gt;Twitter has this feature where you can pin a particular tweet and it always shows up as the first tweet in your profile. This is another good place to keep any of your sale links as pinned tweet is another important component users look at when they visit your profile.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BUeyf-IO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178907739/3PaHblvYr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BUeyf-IO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178907739/3PaHblvYr.png" alt="Screenshot 2021-05-16 at 8.58.23 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have kept a tweet which is basically a thread of all of the affiliate links that I promote. &lt;/p&gt;

&lt;p&gt;Smart right?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-where-can-i-get-these-affiliate-links"&gt;
  &lt;/a&gt;
  But Where Can I Get These Affiliate Links?
&lt;/h3&gt;

&lt;p&gt;Excellent question!&lt;/p&gt;

&lt;p&gt;There are thousands of people with killer courses on Gumroad and most of them are on Twitter. When you start building your audience you will make friends with people who are in the same niche who are either promoting their own course of some else's (like me!). &lt;/p&gt;

&lt;p&gt;Once you find such courses you can contact the course creator and ask them if they're open to add you as an affiliate. Most of the creators will agree. But some creators add only those who have a good enough followers, at least a few thousand.&lt;/p&gt;

&lt;p&gt;Once they add you as an affiliate you will get your unique link and you can start sharing those with your audience and start making money!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important-things-to-remember-while-sharing-sale-links"&gt;
  &lt;/a&gt;
  Important Things To Remember While Sharing Sale Links
&lt;/h3&gt;

&lt;p&gt;Above are the main strategies that I follow on Twitter. But you need to keep some things in mind before sharing the sale links with your audience.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;When you build an audience on Twitter, you do it by sharing content in certain niche topics. So make sure the sale links you share come under those niche topics. Otherwise your audience being not interested in the product may see your content as spam and unfollow you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't do it very frequently. Otherwise your audience can again see your content as spam and unfollow you.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide value consistently to build trust which results in people wanting to buy your products.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tweets which are going viral are goldmine. Don't let them go for a waste. Add a call to action at the end.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't share sale links very frequently. Nobody likes to follow someone who is constantly trying to sell them something.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your bio &amp;amp; pinned tweets are great places to keep sale links. These are the first things users check when they visit your profile. You job is just to get more profile visits.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Having an online presence will definitely benefit you one way or another. Even if making money is not your primary goal, you should still build your online presence.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many people are making life changing income just through Twitter by selling info products, courses, SaaS etc. Start changing yours today!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;We recently started taking pre-orders for our latest e-book:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Start a SaaS Company: A Beginner's Guide&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The e-book will provide &amp;amp; help you to learn everything you need to know to build a successful SaaS business. Download it &lt;a href="https://gumroad.com/l/kgtSS"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>career</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How We're Building Glenstack</title>
      <author>Greg Brimble</author>
      <pubDate>Fri, 21 May 2021 14:25:41 +0000</pubDate>
      <link>https://dev.to/glenstack/how-we-re-building-glenstack-8p4</link>
      <guid>https://dev.to/glenstack/how-we-re-building-glenstack-8p4</guid>
      <description>&lt;p&gt;Glenstack is a production-ready, modern data platform. And as such, we are embracing the latest and greatest technologies as we deliver our application quickly, securely, and with the features our customers demand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivations"&gt;
  &lt;/a&gt;
  Motivations
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#speed"&gt;
  &lt;/a&gt;
  Speed
&lt;/h3&gt;

&lt;p&gt;We want Glenstack to be performant for users, regardless of where they are located. To us, this means we must be distributed. We can't have a single server in &lt;code&gt;us-east-1&lt;/code&gt; because every single user would have to wait for a round-trip request to Virginia which is a significant delay for most of the world. Instead, we have multiple points-of-presence (PoPs) around the world which are each capable of serving Glenstack, more often than not, from the same country as the user.&lt;/p&gt;

&lt;p&gt;No distributed provider has more PoPs and faster performance than &lt;a href="https://workers.cloudflare.com/"&gt;Cloudflare Workers&lt;/a&gt;, which lets us be in 200 locations around the world, and within 100 milliseconds of 99% of internet users.&lt;/p&gt;

&lt;p&gt;This serverless architecture lets us compete with (and often outperform) the performance of many traditional database providers, all while also eliminating the single point of failure that a single cluster presents. We are entirely convinced that it is the future of not just application hosting but data handling as well, and that serverless environments will continue to see increased usage throughout the technology industry.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;p&gt;We make every effort to ensure that Glenstack is secure. And we like to start with the worst-case scenario, disaster-recovery: what happens if our infrastructure fails.&lt;/p&gt;

&lt;p&gt;As already stated, the Glenstack application is serverless and distributed. So if one PoP is unreachable, your traffic is automatically re-routed to the next available data center. If all 200 PoPs fail, we're in trouble, and this would constitute a truly global, internet-level event. Thankfully however, Cloudflare offer a 100% uptime SLA, and we're able to do the same for Glenstack customers. Please &lt;a href="https://glenstack.com/contact"&gt;contact us&lt;/a&gt; if you are interested in enterprise contracts.&lt;/p&gt;

&lt;p&gt;Data hosted on Glenstack is also guaranteed. We provide (C)onsistent and (P)artition-tolerant storage (of the &lt;a href="https://en.wikipedia.org/wiki/CAP_theorem"&gt;CAP theorem&lt;/a&gt;) in order to support the full set of &lt;a href="https://en.wikipedia.org/wiki/ACID"&gt;ACID&lt;/a&gt; properties for transactions.&lt;/p&gt;

&lt;p&gt;We have multiple layers of redundancy in place to ensure that even if a single data node is unreachable, we are able to failover to another location, with the same data available. We also take routine off-site backups for even more peace-of-mind.&lt;/p&gt;

&lt;p&gt;We're exploring end-to-end (E2E) encryption and would also love to &lt;a href="https://glenstack.com/contact"&gt;hear from you&lt;/a&gt; if you have a compelling use-case. In the meantime however, all data is encrypted in transit, at rest, and when backed up. Again, please &lt;a href="https://glenstack.com/contact"&gt;reach out&lt;/a&gt; if there's a particular certification your business needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#functionality"&gt;
  &lt;/a&gt;
  Functionality
&lt;/h3&gt;

&lt;p&gt;Glenstack sees data compliance as one of the most interesting and rapidly evolving challenges for the technology industry. The General Data Protection Regulation (EU GDPR) is frankly old news, but it remains a difficult problem for thousands of organizations inside and outside of the European Union. Complex legislation is continually being drafted by governments around the world, and it's only going to get harder for businesses to stay compliant.&lt;/p&gt;

&lt;p&gt;Fortunately, Glenstack has data compliance built-in. There's no need to set up a specialized EU cluster and manage the overhead of synchronizing migrations. With Glenstack, you simply tag a data instance as belonging to a particular jurisdiction, and we guarantee that we'll never store or process that instance outside of that border. Personally identifiable information (PII) stays close to the individual, which has the added benefit of decreasing their latency!&lt;/p&gt;

&lt;p&gt;With compliance sorted, you can focus on the stuff that matters: your data. Glenstack offers a suite of tools to help make you productive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;an easy-to-use no-code editor,&lt;/li&gt;
&lt;li&gt;collaborative workflows for both internal and external use,&lt;/li&gt;
&lt;li&gt;version control,&lt;/li&gt;
&lt;li&gt;and most importantly, an incredibly scalable, low latency, automatic GraphQL API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read more about our features on &lt;a href="https://glenstack.com/#features"&gt;our landing page&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-specifics-of-our-system-design"&gt;
  &lt;/a&gt;
  The Specifics of our System Design
&lt;/h2&gt;

&lt;p&gt;For those wanting more detail, this section delves into some specifics about the technologies we're using to build Glenstack. If we don't cover something here, or if you have any other questions, please &lt;a href="https://glenstack.com/contact"&gt;send us a message&lt;/a&gt;, and we'd seriously love to chat to you more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h3&gt;

&lt;p&gt;We use a combination of Cloudflare's &lt;a href="https://www.cloudflare.com/en-gb/products/workers-kv/"&gt;Workers KV&lt;/a&gt; and &lt;a href="https://blog.cloudflare.com/introducing-workers-durable-objects/"&gt;Durable Objects&lt;/a&gt;, as well as &lt;a href="https://fauna.com/"&gt;Fauna&lt;/a&gt;, for hosting various Glenstack data. We support the full set of ACID properties and a complete transaction environment enabling you to build pretty much anything on top of Glenstack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#payments"&gt;
  &lt;/a&gt;
  Payments
&lt;/h3&gt;

&lt;p&gt;Leaving it to the industry-trusted experts, we use &lt;a href="https://stripe.com/en-gb"&gt;Stripe&lt;/a&gt; to handle payment transactions. They securely hold all sensitive information such as credit card numbers and bank details. In fact, we never even see this information—it goes straight to Stripe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authorization"&gt;
  &lt;/a&gt;
  Authorization
&lt;/h3&gt;

&lt;p&gt;With custom needs, we built our own authorization service which issues &lt;a href="https://datatracker.ietf.org/doc/html/rfc7519"&gt;JSON Web Tokens (JWTs)&lt;/a&gt; as &lt;a href="https://datatracker.ietf.org/doc/html/rfc6749"&gt;OAuth2&lt;/a&gt; Access Tokens. We act as both a consumer (for social login) and provider (for providing developers access to our &lt;a href="#API"&gt;API&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h3&gt;

&lt;p&gt;With support for massive datasets, Glenstack has to be able to efficiently respond to API requests. We use &lt;a href="https://spec.graphql.org/June2018/"&gt;GraphQL&lt;/a&gt; to allow users to specify exactly the data they require, and also navigate the complex relationships that can appear when working with embedded data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Front-end
&lt;/h3&gt;

&lt;p&gt;Finally, the Glenstack front-end is just a simple &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; application. We use &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; and some &lt;a href="https://tailwindui.com/"&gt;Tailwind UI&lt;/a&gt; components to rapidly build out our UI, and we consume our &lt;a href="#API"&gt;API&lt;/a&gt; like any other developer using Glenstack. This &lt;a href="https://en.wikipedia.org/wiki/Eating_your_own_dog_food"&gt;'dog-fooding'&lt;/a&gt; helps us to better understand what developers need from Glenstack in order to build their apps.&lt;/p&gt;




&lt;p&gt;Glenstack will be launching later this summer, 2021. Please consider &lt;a href="https://glenstack.com/waitlist"&gt;joining our waitlist&lt;/a&gt; or &lt;a href="https://glenstack.com/contact"&gt;getting in touch&lt;/a&gt; if you have any questions. We're so excited for you to see what we've been building, and we hope Glenstack can help you to create, exchange and collaborate on data soon!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>String em Python!!</title>
      <author>DevShy</author>
      <pubDate>Fri, 21 May 2021 14:10:05 +0000</pubDate>
      <link>https://dev.to/devshy/string-em-python-47a3</link>
      <guid>https://dev.to/devshy/string-em-python-47a3</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;a href="#o-que-%C3%A9-uma-string"&gt; O que é uma string?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#como-criar-uma-string-em-python"&gt; Como criar uma string em python?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#strings-s%C3%A3o-como-matrizes"&gt; Strings são como matrizes!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#como-acessar-estes-elementos"&gt; Como acessar estes elementos?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#iterando-strings"&gt; Iterando Strings?!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#tamanho-de-uma-string"&gt; Tamanho de uma string!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#validando-caracteres-em-uma-string"&gt; Validando caracteres em uma string!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#conclus%C3%A3o"&gt; Conclusão&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#generated-with-summaryze-forem"&gt;
  &lt;/a&gt;
  generated with &lt;a href="https://summaryze-forem.vercel.app/"&gt;Summaryze Forem 🌱&lt;/a&gt;
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-uma-string"&gt;
  &lt;/a&gt;
  O que é uma string?
&lt;/h2&gt;

&lt;p&gt;Em python, uma string são sequências imutáveis de caractere. Ou seja, eles são imutáveis já que para se modificar uma string é necessário que se crie uma nova. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-criar-uma-string-em-python"&gt;
  &lt;/a&gt;
  Como criar uma string em python?
&lt;/h2&gt;

&lt;p&gt;Para criar uma string, é bastante fácil. Basta criarmos uma variável, e atribuir a ela qualquer caractere entre aspas simples ou duplas. Por exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python é muito legal"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para imprimir para o usuário o que está dentro da variável, basta utilizarmos o famoso print do python.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;é&lt;/span&gt; &lt;span class="n"&gt;muito&lt;/span&gt; &lt;span class="n"&gt;legal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#strings-s%C3%A3o-como-matrizes"&gt;
  &lt;/a&gt;
  Strings são como matrizes!
&lt;/h2&gt;

&lt;p&gt;Como em diversos tipos de linguagem de programação, as strings em python são matrizes de bytes que representam caracteres Unicodes. Contudo, em python não temos um tipo de dados de caractere, um único caractere é simplesmente uma string de comprimento 1. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-acessar-estes-elementos"&gt;
  &lt;/a&gt;
  Como acessar estes elementos?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python é muito legal'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Saída:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;P&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#iterando-strings"&gt;
  &lt;/a&gt;
  Iterando Strings?!
&lt;/h2&gt;

&lt;p&gt;Outra coisa super interessante que dá pra fazer em uma string é utilizar os famosos laços de repetição nela.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Saída:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;P&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;

&lt;span class="n"&gt;é&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt;
&lt;span class="n"&gt;u&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt;
&lt;span class="n"&gt;e&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tamanho-de-uma-string"&gt;
  &lt;/a&gt;
  Tamanho de uma string!
&lt;/h2&gt;

&lt;p&gt;Me deparei com uma string super grande, e preciso saber o tamanho dela, como posso fazer isso em python? É simples, basta utilizar a função &lt;code&gt;len()&lt;/code&gt;, desta forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Oi pra você que está lendo isso, qual o tamanho desta string?"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Saída:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mi"&gt;61&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#validando-caracteres-em-uma-string"&gt;
  &lt;/a&gt;
  Validando caracteres em uma string!
&lt;/h2&gt;

&lt;p&gt;Para verificar se um caractere ou uma palavra está inserida em uma string já declarada, basta usarmos o &lt;code&gt;in {variável string}&lt;/code&gt;. Por exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Na UESB os professores são ótimos!"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Ótimos"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Saída:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h2&gt;

&lt;p&gt;E por hoje é só, apenas algumas demonstrações do que podemos fazer com uma string utilizando python! Lembrando que isso é apenas a ponta do iceberg, tem ainda uma diversidade de outras coisas que podem ser usadas. &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>education</category>
      <category>string</category>
    </item>
    <item>
      <title>Creating Data Visualizations with D3 and ReactJS</title>
      <author>Saji Wang</author>
      <pubDate>Fri, 21 May 2021 13:58:59 +0000</pubDate>
      <link>https://dev.to/codesphere/creating-data-visualizations-with-d3-and-reactjs-10ei</link>
      <guid>https://dev.to/codesphere/creating-data-visualizations-with-d3-and-reactjs-10ei</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nEilTCb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/751schp3gqtcy2armdeo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nEilTCb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/751schp3gqtcy2armdeo.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D3 is a lot more than just a graphing library, it's a toolset for efficiently editing the DOM and creating visualizations based on data.&lt;/p&gt;

&lt;p&gt;If all you want is to quickly insert a generic bar graph into your app, then D3 is probably not for you, but if you want the ability to customize your visualizations from the ground up, then D3 is the industry standard.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this tutorial, we are going to create three different simple visualizations with D3 in React. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now while these things can be done without D3 and aren't particularly flashy, they highlight some of the basics of D3 very well. If you want to see some cool demos to get a sense of just how powerful D3 is, then check out some of the demos on the D3.js home page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://d3js.org/"&gt;https://d3js.org/&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;To see the three visualizations that we are going to make, you can open up this project in Codesphere, a free development environment with instant deployment features. Just click the link, sign in, and run:&lt;br&gt;
npm ci &amp;amp;&amp;amp; npm start&lt;/p&gt;

&lt;p&gt;&lt;a href="https://link.codesphere.com/D"&gt;http://codesphere.com/#https://github.com/LiorB-D/d3tutorial&lt;/a&gt; &lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#setting-up%C2%A0react"&gt;
  &lt;/a&gt;
  Setting up React
&lt;/h3&gt;

&lt;p&gt;Let's start off with a blank Create-React-App.&lt;br&gt;
If you are new to React, this can be made with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx create-react-app my-app&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We are also going to need to install D3 onto our app, with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install d3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Don’t forget to import D3 in all the files you are using it in!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import * as d3 from 'd3'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For now, we are going to render an empty div and create a useEffect hook, in which we will later insert all of our D3 code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#creating-labels-dynamically"&gt;
  &lt;/a&gt;
  Creating Labels Dynamically
&lt;/h3&gt;

&lt;p&gt;The first thing we are going to do is use D3 to dynamically insert p tags based on data. While this of course is not too difficult to do with vanilla React, I would recommend for anyone learning D3 to get comfortable editing the DOM in this way.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Let’s go through each part of that D3 line on line 17 and breakdown what it does:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;d3.select(“#pgraphs”) selects the div with the id “pgraphs”&lt;/li&gt;
&lt;li&gt;.selectAll(‘p’) tells d3 that we want to look at the p tags within that div. Since there are currently no p tags, we will later need to create them.&lt;/li&gt;
&lt;li&gt;.data(dataSet) binds that dataSet array to these p tags&lt;/li&gt;
&lt;li&gt;.enter().append(‘p’) adds all missing p tags within the div such that there is one p tag for each element in the bound dataset&lt;/li&gt;
&lt;li&gt;.text(dt =&amp;gt; dt.subject + “: ” + dt.count) sets the text of each of these p tags based on an arrow function we are defining within the text() function. Here, we want to take each corresponding element in the dataSet array and create a string based on the subject and count&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#creating-an-animated-htmlbased-bar-graph"&gt;
  &lt;/a&gt;
  Creating An Animated Html-Based Bar Graph
&lt;/h3&gt;

&lt;p&gt;Next, we are going to create a custom Bar Graph based on this data by creating a div for each element and dynamically setting the height.&lt;/p&gt;

&lt;p&gt;In our &lt;code&gt;App.css&lt;/code&gt;, we are going to add two styles: One for the div containing the bar graph, and one for each individual bar.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now in our useEffect we are going to have D3 do the following animation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Set each bar to have the same height (Which will be equal to the highest count value)&lt;/li&gt;
&lt;li&gt;Wait 300 milliseconds&lt;/li&gt;
&lt;li&gt;Set each bar's height to correspond with a count value.&lt;/li&gt;
&lt;li&gt;Transition the bars into having a margin and a larger width.&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Let’s go through these new D3 functions that we just used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.classed(‘bar’, true) gives all the selected elements the CSS class “bar”&lt;/li&gt;
&lt;li&gt;.style(style, value) gives all the selected elements a given CSS style with a given value&lt;/li&gt;
&lt;li&gt;.transition() tells d3 to transition the element into the changes that will be made&lt;/li&gt;
&lt;li&gt;.duration(ms) dictates the duration of the transition in milliseconds&lt;/li&gt;
&lt;li&gt;.delay(ms) delays all the previous changes by a certain amount of milliseconds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If all is working well, the animation should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wigXQJfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzip422djqxpq7ro7mfe.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wigXQJfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzip422djqxpq7ro7mfe.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#creating-an-svgbased-line-graph"&gt;
  &lt;/a&gt;
  Creating An SVG-based Line Graph
&lt;/h3&gt;

&lt;p&gt;While in the previous two examples we used HTML elements, if you want much more versatility you are going to want to use D3 to manipulate SVG elements.&lt;/p&gt;

&lt;p&gt;For our line graph, we are going to create X and Y axes as well as a nice animation. For this example, we are also going to generate a random dataSet so that we have more points to work with.&lt;/p&gt;

&lt;p&gt;First, let’s add the following style to our &lt;code&gt;App.css&lt;/code&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We are then going to use D3 to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create D3 scales, which will allow us to easily map our data values to pixel values in our SVG.&lt;/li&gt;
&lt;li&gt;Define a path with scaled x and y coordinates&lt;/li&gt;
&lt;li&gt;Create x and y-axis based on our scales&lt;/li&gt;
&lt;li&gt;Graph a straight horizontal line at y = 0 in the #LineChart SVG&lt;/li&gt;
&lt;li&gt;Transition that line into having the correct y values based on our data&lt;/li&gt;
&lt;li&gt;Append our axis to our SVG&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Note that with functions like d3.line(), d3.axisBottom() and d3.scaleLinear(), D3 is giving us tools for processes that are possible in vanilla javascript. Even though D3 is built to allow you to make your visualizations from the ground up, it offers a host of different functions like this.&lt;/p&gt;

&lt;p&gt;If all is working well, you should see the following Line Chart:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t--Cyj9K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64ggtikb77k5vmm4iie9.gif" alt="Alt Text"&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Again, this is only the bare bones of what is possible with D3. D3’s versatility and in-house toolset mean that the only limit to the beautiful visualizations you create is your imagination!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>react</category>
      <category>d3js</category>
      <category>datavisualization</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 21st May 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 21 May 2021 13:50:17 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-21st-may-2021-2c6h</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-21st-may-2021-2c6h</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-docz"&gt;
  &lt;/a&gt;
  1. Docz
&lt;/h3&gt;

&lt;p&gt;Docz makes it easy to write and publish beautiful interactive documentation for your code. Create MDX files showcasing your code and Docz turns them into a live-reloading, production-ready site.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pedronauck"&gt;
        pedronauck
      &lt;/a&gt; / &lt;a href="https://github.com/pedronauck/docz"&gt;
        docz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✍ It has never been so easy to document your things!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a140cc0533adb9753107f86b2885e53c6b720f76aa88b60a7d7e0750eb62a2f/68747470733a2f2f63646e2d7374642e64707263646e2e6e65742f66696c65732f6163635f3634393635312f4253506b337a"&gt;&lt;img src="https://camo.githubusercontent.com/1a140cc0533adb9753107f86b2885e53c6b720f76aa88b60a7d7e0750eb62a2f/68747470733a2f2f63646e2d7374642e64707263646e2e6e65742f66696c65732f6163635f3634393635312f4253506b337a"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/docz" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8ec7ab57ecf5bbdcd2d43f764b7acf6402561c5d87fe2e80becbec9aedb49b73/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f646f637a" alt=""&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/LICENSE.md"&gt;
    &lt;img src="https://camo.githubusercontent.com/fc684ae0666234940e2ed32d594f69fba54effe4aba6dced4146fb72f24d6658/68747470733a2f2f62616467656e2e6e65742f62616467652f6c6963656e73652f4d49542f626c7565" alt=""&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/docz" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/50ff15292811c069c95e58e484f3c92469d408b82d588ed3366ca8e96357c328/68747470733a2f2f62616467656e2e6e65742f6e706d2f64742f646f637a" alt=""&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Docz makes it easy to write and publish beautiful interactive documentation for your code.&lt;/p&gt;

&lt;p&gt;Create MDX files showcasing your code and Docz turns them into a live-reloading, production-ready site.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1519edd8f649bad5c0a7917e9d57bdaf84b5f284fe041fe13f6eca7823cdf424/68747470733a2f2f63646e2d7374642e64707263646e2e6e65742f66696c65732f6163635f3634393635312f533259434944"&gt;&lt;img src="https://camo.githubusercontent.com/1519edd8f649bad5c0a7917e9d57bdaf84b5f284fe041fe13f6eca7823cdf424/68747470733a2f2f63646e2d7374642e64707263646e2e6e65742f66696c65732f6163635f3634393635312f533259434944" alt="docz example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Table of Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#why"&gt;Why ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#start-a-new-project"&gt;Start a New Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#add-docz-to-an-existing-project"&gt;Add Docz to an Existing Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#build"&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#deploy"&gt;Deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#more-info-on-doczsite"&gt;More info on docz.site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#used-by"&gt;Used by&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Why ?&lt;/h2&gt;

&lt;p&gt;Documenting code is one of the most important and time-heavy processes when developing software.&lt;/p&gt;

&lt;p&gt;A lot of time is spent on building and maintaining custom documentation sites.&lt;/p&gt;

&lt;p&gt;Docz enables you to quickly create live-reloading, seo-friendly, production-ready documentation sites with MDX and customize the look, feel and behavior when required by leveraging &lt;a href="https://www.gatsbyjs.org" rel="nofollow"&gt;GatsbyJS&lt;/a&gt; and &lt;a href="https://www.gatsbyjs.org/docs/themes/shadowing/" rel="nofollow"&gt;Gatsby theme shadowing&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
Start a New Project&lt;/h2&gt;

&lt;p&gt;Use &lt;a href="https://www.npmjs.com/package/create-docz-app" rel="nofollow"&gt;create-docz-app&lt;/a&gt; to quickly get started :&lt;/p&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npx create-docz-app my-docz-app
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;
yarn create docz-app my-docz-app --example typescript&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Add Docz to an Existing Project&lt;/h2&gt;
&lt;p&gt;Start by adding &lt;code&gt;docz&lt;/code&gt; as a dependency :&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pedronauck/docz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#2-mo-js"&gt;
  &lt;/a&gt;
  2. mo · js
&lt;/h3&gt;

&lt;p&gt;The motion graphics toolbelt for the web. mo · js is a javascript motion graphics library that is a fast, retina ready, modular and open source.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mojs"&gt;
        mojs
      &lt;/a&gt; / &lt;a href="https://github.com/mojs/mojs"&gt;
        mojs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The motion graphics toolbelt for the web
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mo · js – &lt;a href="https://www.npmjs.com/package/@mojs/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc583d59478eb20c81962ccddcf7e72ebed40b8f4ec7753db4e93eacbf2c0ef1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f406d6f6a732f636f72652e737667" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://github.com/mojs/mojs/actions?query=workflow:%22CI%22"&gt;&lt;img src="https://camo.githubusercontent.com/6e08ec368d88d212d5e9662da4f0d96730b9eae452d2f915281b4e3d925c8774/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6d6f6a732f6d6f6a732f4349" alt="ci"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/mojs/mojs?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bea2e546bdb922ce5c30ad7d8371e1833571ae6623c9f57921694e9d7541ed71/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6f6a732f6d6f6a732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/mojs/shared_invite/zt-dlyxhupt-VR7eV2uwCnvu3Cx~Yc_L9Q" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f2125bb4be72646dafa9bc30cb8da50d072181b0f378eb9559f3da1376cfca2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374796c652d6a6f696e2d6666363962342e7376673f6c6162656c3d736c61636b" alt="Slack"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The motion graphics toolbelt for the web.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mojs.github.io/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cIak7oCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/mojs/mojs/master/logo.svg" alt="mo · js" title="mo · js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;mo · js&lt;/strong&gt; is a javascript motion graphics library that is a &lt;strong&gt;fast, retina ready, modular and open source&lt;/strong&gt;. In comparison to other libraries, it has a different syntax and code animation structure approach. The declarative API provides you a complete control over the animation, making it customizable with ease.&lt;/p&gt;
&lt;p&gt;The library provides &lt;strong&gt;built-in components&lt;/strong&gt; to start animating from scratch like html, shape, swirl, burst and stagger, but also bring you tools to help craft your animation in a most natural way. Using mojs on your site will enhance the user experience, enrich your content visually and create &lt;strong&gt;delightful animations&lt;/strong&gt; precisely.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;h3&gt;
Use with a bundler&lt;/h3&gt;
&lt;p&gt;Mojs is published on the &lt;strong&gt;NPM registry&lt;/strong&gt; and &lt;strong&gt;GPR registry&lt;/strong&gt;, so you can install it through the command line interpreter using your favorite package manager. This is the best way…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mojs/mojs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-twitter-api-client"&gt;
  &lt;/a&gt;
  3. Twitter API Client
&lt;/h3&gt;

&lt;p&gt;A user-friendly Node.js / JavaScript client library for interacting with the Twitter API.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/FeedHive"&gt;
        FeedHive
      &lt;/a&gt; / &lt;a href="https://github.com/FeedHive/twitter-api-client"&gt;
        twitter-api-client
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A user-friendly Node.js / JavaScript client library for interacting with the Twitter API.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Twitter API Client&lt;/h1&gt;
&lt;p&gt;Node.js client for Twitter API&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d8934d11f98ef14a7aebcd33b06a87cb9959845b7175238dc1ccac5f2712b9db/68747470733a2f2f692e696d6775722e636f6d2f4e666e4c48494d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d8934d11f98ef14a7aebcd33b06a87cb9959845b7175238dc1ccac5f2712b9db/68747470733a2f2f692e696d6775722e636f6d2f4e666e4c48494d2e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/twitter-api-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc77812758b05a6c15dccf45b3b2029ca3f753802549cf5e05f07e8f85982b48/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f747769747465722d6170692d636c69656e74" alt="NPM Version"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/FeedHive/twitter-api-client/workflows/build/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---b9a3mO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/FeedHive/twitter-api-client/workflows/build/badge.svg" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Table of content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#getting-started"&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#get-help"&gt;Get Help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;☑️ Includes 90% of the &lt;strong&gt;official Twitter API&lt;/strong&gt; endpoints.&lt;br&gt;
☑️ &lt;strong&gt;Promise-based!&lt;/strong&gt; No ugly callbacks.&lt;br&gt;
☑️ &lt;strong&gt;Fully typed!&lt;/strong&gt; Both for query parameters and responses.&lt;br&gt;
☑️ Inbuilt in-memory &lt;strong&gt;cache&lt;/strong&gt; for rate-limit friendly usage.&lt;/p&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;h3&gt;
Get your Twitter credentials&lt;/h3&gt;
&lt;p&gt;You will need to create a set of Twitter developer credentials from your Twitter Developer account.&lt;br&gt;
If you don't have one already, apply for a developer account &lt;a href="https://developer.twitter.com/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;br&gt;
It takes about 5 minutes.&lt;/p&gt;
&lt;h3&gt;
Install&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;npm i twitter-api-client&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;TwitterClient&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'twitter-api-client'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;twitterClient&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;TwitterClient&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;apiKey&lt;/span&gt;: &lt;span class="pl-s"&gt;'&amp;lt;YOUR-TWITTER-API-KEY&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;apiSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;'&amp;lt;YOUR-TWITTER-API-SECRET&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;accessToken&lt;/span&gt;: &lt;span class="pl-s"&gt;'&amp;lt;YOUR-TWITTER-ACCESS-TOKEN&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;accessTokenSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;'&amp;lt;YOUR-TWITTER-ACCESS-TOKEN-SECRET&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// Search for a user&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;data&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-s1"&gt;twitterClient&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;accountsAndUsers&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;usersSearch&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;q&lt;/span&gt;: &lt;span class="pl-s"&gt;'twitterDev'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/FeedHive/twitter-api-client"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-web3js"&gt;
  &lt;/a&gt;
  4. web3.js
&lt;/h3&gt;

&lt;p&gt;The Ethereum JavaScript API which connects to the Generic JSON-RPC spec.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ChainSafe"&gt;
        ChainSafe
      &lt;/a&gt; / &lt;a href="https://github.com/ChainSafe/web3.js"&gt;
        web3.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Ethereum JavaScript API
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/assets/logo/web3js.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FVN_tMtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/assets/logo/web3js.jpg" width="200" alt="web3.js"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
web3.js - Ethereum JavaScript API&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/ethereum/web3.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter"&gt;&lt;/a&gt; &lt;a href="https://ethereum.stackexchange.com/questions/tagged/web3js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eaf4ab03d793843e6a959459c3df633fac407aab79e99c0d21b7acd57c13d512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f776562336a732d737461636b65786368616e67652d627269676874677265656e" alt="StackExchange"&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/web3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/145f50ffc3edf4c709037dbc629d3418dd809df2c4d0a2a0de358479ce4bfd56/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f776562332e737667" alt="NPM Package Version"&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/web3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15b66faf94fb5d250e01c662aaad184e713da0b43f1c41c22dd14a3fbee819ee/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f776562332e737667" alt="NPM Package Downloads"&gt;&lt;/a&gt; &lt;a href="https://github.com/ethereum/web3.js/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vm4VHVDT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ethereum/web3.js/workflows/Build/badge.svg" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://david-dm.org/ethereum/web3.js/1.x?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc999a5745c613fe6dcebb7795fdac122c284db11b10cdaf7c3089412d71d92c/68747470733a2f2f64617669642d646d2e6f72672f657468657265756d2f776562332e6a732f312e782f6465762d7374617475732e737667" alt="Dev Dependency Status"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/ethereum/web3.js?branch=1.x" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7571dd8e6944b14066974df66999d68ce35f316bdb96a6bcd2160535aff15cf6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f657468657265756d2f776562332e6a732f62616467652e7376673f6272616e63683d312e78" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://lerna.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bc63f921dd60bac6d91aa900ef570c928b2aa4c2124ed23647e8fe9d2232853/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e6564253230776974682d6c65726e612d6363303066662e737667" alt="Lerna"&gt;&lt;/a&gt; &lt;a href="https://app.netlify.com/sites/web3-staging/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dfbacacbd55637663a1d81e6812379498a086fb881c22b7a5f7f90d16deb6977/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f31666336343933332d643137302d343933392d386264622d3530386563643230353531392f6465706c6f792d737461747573" alt="Netlify Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the Ethereum &lt;a href="http://web3js.readthedocs.io/" rel="nofollow"&gt;JavaScript API&lt;/a&gt;
which connects to the &lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC"&gt;Generic JSON-RPC&lt;/a&gt; spec.&lt;/p&gt;
&lt;p&gt;You need to run a local or remote &lt;a href="https://www.ethereum.org/" rel="nofollow"&gt;Ethereum&lt;/a&gt; node to use this library.&lt;/p&gt;
&lt;p&gt;Please read the &lt;a href="http://web3js.readthedocs.io/" rel="nofollow"&gt;documentation&lt;/a&gt; for more.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h3&gt;
Node&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install web3&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Yarn&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add web3&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
In the Browser&lt;/h3&gt;
&lt;p&gt;Use the prebuilt &lt;code&gt;dist/web3.min.js&lt;/code&gt;, or
build using the &lt;a href="https://github.com/ethereum/web3.js"&gt;web3.js&lt;/a&gt; repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm run build&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Then include &lt;code&gt;dist/web3.min.js&lt;/code&gt; in your html file
This will expose &lt;code&gt;Web3&lt;/code&gt; on the window object.&lt;/p&gt;
&lt;p&gt;Or via jsDelivr CDN:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;UNPKG:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/web3@latest/dist/web3.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// In Node.js&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;Web3&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'web3'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-s1"&gt;web3&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Web3&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'ws://localhost:8546'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;web3&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;eth&lt;/span&gt;: ... &lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;shh&lt;/span&gt;: ... &lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;utils&lt;/span&gt;: ...&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    ...
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Additionally you…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ChainSafe/web3.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-renature"&gt;
  &lt;/a&gt;
  5. renature
&lt;/h3&gt;

&lt;p&gt;A physics-based animation library for React focused on modeling natural world forces.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/FormidableLabs"&gt;
        FormidableLabs
      &lt;/a&gt; / &lt;a href="https://github.com/FormidableLabs/renature"&gt;
        renature
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A physics-based animation library for React focused on modeling natural world forces.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/FormidableLabs/formidable-oss-badges/master/src/assets/featuredLogos/renature.svg?sanitize=true"&gt;&lt;img width="300" alt="renature" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rKIaUe3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/FormidableLabs/formidable-oss-badges/master/src/assets/featuredLogos/renature.svg%3Fsanitize%3Dtrue"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;strong&gt;
    A physics-based animation library for React inspired by the natural world
  &lt;/strong&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;a href="https://npmjs.com/package/renature" rel="nofollow"&gt;
    &lt;img alt="NPM Version" src="https://camo.githubusercontent.com/af6c005408d3a39b4d95a8222ca4f80f2a9b13aa088048d746790ca515c0e0e4/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656e61747572652e737667"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/FormidableLabs/renature/actions"&gt;
    &lt;img alt="Test Status" src="https://res.cloudinary.com/practicaldev/image/fetch/s--IU5U3EGz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/FormidableLabs/renature/workflows/renature%2520CI/badge.svg%3Fbranch%3Dsaturn"&gt;
  &lt;/a&gt;
  &lt;a href="https://bundlephobia.com/result?p=renature" rel="nofollow"&gt;
    &lt;img alt="Minified gzip size" src="https://camo.githubusercontent.com/8cbaf8b3a588c5b209b9a81989208af123785fda9390084307be54f74aa45f11/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f72656e61747572652e7376673f6c6162656c3d677a697025323073697a65"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/FormidableLabs/renature#maintenance-status"&gt;
    &lt;img alt="Maintenance Status" src="https://camo.githubusercontent.com/8b80799a3325d65d592848509453e32538e07c511250a5873158447bf2471c7f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e74656e616e63652d6163746976652d677265656e2e737667"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/div&gt;
&lt;h1&gt;
&lt;code&gt;renature&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;renature&lt;/code&gt; is a physics-based animation library for React focused on modeling natural world forces like gravity, friction, and fluid dynamics, exposed as a set of React hooks.&lt;/p&gt;

&lt;h2&gt;
✨Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
🎣 A small set of declarative React hooks for animating with ease.&lt;/li&gt;
&lt;li&gt;
🌌 Support for non-traditional physics-based animations using gravity, friction, fluid resistance, and more.&lt;/li&gt;
&lt;li&gt;
🧮 Mathematically accurate and type-safe physics, powered by &lt;a href="https://rescript-lang.org/" rel="nofollow"&gt;ReScript&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🔁 Start, stop, delay, and loop animations with our Controller API.&lt;/li&gt;
&lt;li&gt;
0️⃣ A tiny animation library with zero dependencies!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
📃Documentation&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;renature&lt;/code&gt;'s documentation lives on our &lt;a href="https://formidable.com/open-source/renature/" rel="nofollow"&gt;docs site&lt;/a&gt;. Notice something inaccurate or confusing? Feel free &lt;a href="https://github.com/FormidableLabs/renature/issues"&gt;to open an issue&lt;/a&gt; or &lt;a href="https://github.com/FormidableLabs/renature/pulls"&gt;make a pull request&lt;/a&gt; to help improve the documentation for everyone! The source for our docs site lives in this repo in the &lt;a href="https://raw.githubusercontent.com/FormidableLabs/renature/saturn//docs/README.md"&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt;

&lt;h2&gt;
Maintenance Status&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Active:&lt;/strong&gt; Formidable is actively working…&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/FormidableLabs/renature"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#6-usegesture"&gt;
  &lt;/a&gt;
  6. use-gesture
&lt;/h3&gt;

&lt;p&gt;use-gesture is a library that let you bind richer mouse and touch events to any component or view. With the data you receive, it becomes trivial to set up gestures, and often takes no more than a few lines of code.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pmndrs"&gt;
        pmndrs
      &lt;/a&gt; / &lt;a href="https://github.com/pmndrs/use-gesture"&gt;
        use-gesture
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      👇Bread n butter utility for component-tied mouse/touch gestures in React
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
@use-gesture&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@use-gesture/react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f29e97df4c117c27748daa5ba9f1715dbde6978caa8d74551bc360e911013435/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030" alt="npm (tag)"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5e649b06a0d042e82a3176a7453169c9b58d3be8541f01d7afdb4c010ed02f6d/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030"&gt;&lt;img src="https://camo.githubusercontent.com/5e649b06a0d042e82a3176a7453169c9b58d3be8541f01d7afdb4c010ed02f6d/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030" alt="npm bundle size"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0d4b111835ca3eb2e4fe5cac5af19e4806f5bab63f06f6a736ffc9a24cd9f768/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030"&gt;&lt;img src="https://camo.githubusercontent.com/0d4b111835ca3eb2e4fe5cac5af19e4806f5bab63f06f6a736ffc9a24cd9f768/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030" alt="NPM"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/poimandres" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/693a48f4a77fd6b2d0d2a1894240dd96d4e88dc2e0a341f91b1cdf4fa716090d/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3734303039303736383136343635313030383f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030266c6162656c3d646973636f7264266c6f676f3d646973636f7264266c6f676f436f6c6f723d666666666666" alt="Discord Shield"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;@use-gesture is a library that let you bind richer mouse and touch events to any component or view. With the data you receive, it becomes trivial to set up gestures, and often takes no more than a few lines of code.&lt;/p&gt;
&lt;p&gt;You can use it stand-alone, but to make the most of it you should combine it with an animation library like &lt;a href="https://github.com/pmndrs/react-spring"&gt;react-spring&lt;/a&gt;, though you can most certainly use any other.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/draggable-list" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf652941d2d6a23c225eed68d78b4f2978307c8dd72c59604f52384cf2e0f93e/68747470733a2f2f692e696d6775722e636f6d2f714c4b4a6f64332e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/cards-stack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/972414c19ec3ba6ab61fa4350807726d26e8bab12005c67a32311d98f3f1138a/68747470733a2f2f692e696d6775722e636f6d2f48366e585145712e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/action-sheet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4997ee83de43e96cd8cd0ae613386fd357fcafd994e0ce75503fc1ebd95a3598/68747470733a2f2f692e696d6775722e636f6d2f54484b50726d522e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/infinite-slideshow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/04e1770c490328d74292facf7ff1ca2e47f9180a5f6777e05d8bd6b055fe8d1b/68747470733a2f2f692e696d6775722e636f6d2f63754f667153542e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/viewpager" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d856ca75e2baa270741156b7ac7ef58ec58afaf0ae11a564ffaa5f031ab6ff04/68747470733a2f2f692e696d6775722e636f6d2f69775a4f6654392e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/card-zoom" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5193850ca32018e88ab3ee363c167895f4838106cb7363cd04dec3ec178d10c2/68747470733a2f2f692e696d6775722e636f6d2f57616c743149702e676966" width="400"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;i&gt;The demos are real click them!&lt;/i&gt;&lt;/p&gt;

&lt;h2&gt;
Installation&lt;/h2&gt;

&lt;h3&gt;
React&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Yarn&lt;/span&gt;
yarn add @use-gesture/react
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;NPM&lt;/span&gt;
npm install @use-gesture/react&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Vanilla javascript&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Yarn&lt;/span&gt;
yarn add @use-gesture/vanilla

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;NPM&lt;/span&gt;
npm install @use-gesture/vanilla&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;a href="https://v10-beta--use-gesture.netlify.com" rel="nofollow"&gt;Full documentation website&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://v10-beta--use-gesture.netlify.com/docs/gestures" rel="nofollow"&gt;Available Gestures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v10-beta--use-gesture.netlify.com/docs/state" rel="nofollow"&gt;Gesture State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v10-beta--use-gesture.netlify.com/docs/options" rel="nofollow"&gt;Gesture Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v10-beta--use-gesture.netlify.com/docs/faq" rel="nofollow"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Simple example&lt;/h3&gt;
&lt;p&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/gesture-simplest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b536e97c966a7b81e318f9acb790a274acfd4fb3e5439569228ce1e3d77bb1f0/68747470733a2f2f692e696d6775722e636f6d2f414d7a734569332e676966" width="400"&gt;&lt;/a&gt;
&lt;/p&gt;

  React
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;useSpring&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;animated&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@react-spring/web'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;useDrag&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@use-gesture/react'&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-v"&gt;Example&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; x&lt;span class="pl-kos"&gt;,&lt;/span&gt; y &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;api&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSpring&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pmndrs/use-gesture"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-cheerio"&gt;
  &lt;/a&gt;
  7. cheerio
&lt;/h3&gt;

&lt;p&gt;Fast, flexible, and lean implementation of core jQuery designed specifically for the server.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cheeriojs"&gt;
        cheeriojs
      &lt;/a&gt; / &lt;a href="https://github.com/cheeriojs/cheerio"&gt;
        cheerio
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast, flexible, and lean implementation of core jQuery designed specifically for the server.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
cheerio&lt;/h1&gt;
&lt;h5&gt;
Fast, flexible &amp;amp; lean implementation of core jQuery designed specifically for the server.&lt;/h5&gt;
&lt;div&gt;
  &lt;a href="https://github.com/cheeriojs/cheerio/actions?query=workflow%3ACI+branch%3Amain"&gt;
    &lt;img src="https://camo.githubusercontent.com/42ffe839d9996bf82c79313a3878bb6e167163872f190fd91db28208ced88b69/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6368656572696f6a732f6368656572696f2f43492f6d61696e" alt="Build Status"&gt;
  &lt;/a&gt;
  &lt;a href="https://coveralls.io/github/cheeriojs/cheerio" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/d162b95038d3d64e8fdda615a4403c733fc7de42aa121638a4590707eef8250b/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f6368656572696f6a732f6368656572696f2f6d61696e" alt="Coverage"&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/cheeriojs/cheerio/main/Readme.md/#backers"&gt;
    &lt;img src="https://camo.githubusercontent.com/b3d8f2ae915bfbe4669be9733c9821802717e5a813693fcae7baaa838ef5aba4/68747470733a2f2f696d672e736869656c64732e696f2f6f70656e636f6c6c6563746976652f6261636b6572732f6368656572696f" alt="OpenCollective backers"&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/cheeriojs/cheerio/main/Readme.md/#sponsors"&gt;
    &lt;img src="https://camo.githubusercontent.com/5b04983e1c63a6b63202fdf273bf1d69c8fbfbe6fc135850f77e18b226d2ec80/68747470733a2f2f696d672e736869656c64732e696f2f6f70656e636f6c6c6563746976652f73706f6e736f72732f6368656572696f" alt="OpenCollective sponsors"&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="https://github.com/cheeriojs/cheerio/wiki/Chinese-README"&gt;中文文档 (Chinese Readme)&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;cheerio&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'cheerio'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;$&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;cheerio&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;load&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'&amp;lt;h2 class="title"&amp;gt;Hello world&amp;lt;/h2&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-s1"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'h2.title'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;text&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'Hello there!'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-s1"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'h2'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;addClass&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'welcome'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-s1"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;html&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;//=&amp;gt; &amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h2 class="title welcome"&amp;gt;Hello there!&amp;lt;/h2&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Note&lt;/h2&gt;
&lt;p&gt;We are currently working on the 1.0.0 release of cheerio on the &lt;code&gt;main&lt;/code&gt; branch. The source code for the last published version, &lt;code&gt;0.22.0&lt;/code&gt;, can be found &lt;a href="https://github.com/cheeriojs/cheerio/tree/aa90399c9c02f12432bfff97b8f1c7d8ece7c307"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm install cheerio&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;❤ Familiar syntax:&lt;/strong&gt;
Cheerio implements a subset of core jQuery. Cheerio removes all the DOM inconsistencies and browser cruft from the jQuery library, revealing its truly gorgeous API.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ϟ Blazingly fast:&lt;/strong&gt;
Cheerio works with a very simple, consistent DOM model. As a result parsing, manipulating, and…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/cheeriojs/cheerio"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-doctoc"&gt;
  &lt;/a&gt;
  8. DocToc
&lt;/h3&gt;

&lt;p&gt;Generates table of contents for markdown files inside local git repository. Links are compatible with anchors generated by github or other sites.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thlorenz"&gt;
        thlorenz
      &lt;/a&gt; / &lt;a href="https://github.com/thlorenz/doctoc"&gt;
        doctoc
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📜 Generates table of contents for markdown files inside local git repository. Links are compatible with anchors generated by github or other sites.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
DocToc &lt;a href="http://travis-ci.org/thlorenz/doctoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be5388b2baf722f371e7bb7fe6ec522444439514b163c4fb9f88c7997b81c15b/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f74686c6f72656e7a2f646f63746f632e737667" alt="build status"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/bePatron?u=8663953" rel="nofollow"&gt;&lt;img alt="become a patron" src="https://camo.githubusercontent.com/2b7105015397da52617ce6775a339b0b99d689d6f644c2ce911c5d472362bcbd/68747470733a2f2f63352e70617472656f6e2e636f6d2f65787465726e616c2f6c6f676f2f6265636f6d655f615f706174726f6e5f627574746f6e2e706e67" height="35px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generates table of contents for markdown files inside local git repository. Links are compatible with anchors generated
by github or other sites via a command line flag.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href="https://github.com/thlorenz/doctoc"&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#adding-toc-to-all-files-in-a-directory-and-sub-directories"&gt;Adding toc to all files in a directory and sub directories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#update-existing-doctoc-tocs-effortlessly"&gt;Update existing doctoc TOCs effortlessly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#adding-toc-to-individual-files"&gt;Adding toc to individual files&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#using-doctoc-to-generate-links-compatible-with-other-sites"&gt;Using doctoc to generate links compatible with other sites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#specifying-location-of-toc"&gt;Specifying location of toc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#specifying-a-custom-toc-title"&gt;Specifying a custom TOC title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#specifying-a-maximum-heading-level-for-toc-entries"&gt;Specifying a maximum heading level for TOC entries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#printing-to-stdout"&gt;Printing to stdout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#usage-as-a-git-hook"&gt;Usage as a &lt;code&gt;git&lt;/code&gt; hook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install -g doctoc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;In its simplest usage, you can pass one or more files or folders to the
&lt;code&gt;doctoc&lt;/code&gt; command. This will update the TOCs of each file specified as well as of
each markdown file found by recursively searching each folder. Below are some
examples.&lt;/p&gt;
&lt;h3&gt;
Adding toc to all files in a directory&lt;/h3&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thlorenz/doctoc"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-styleguidist"&gt;
  &lt;/a&gt;
  9. Styleguidist
&lt;/h3&gt;

&lt;p&gt;Isolated React component development environment with a living style guide &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/styleguidist"&gt;
        styleguidist
      &lt;/a&gt; / &lt;a href="https://github.com/styleguidist/react-styleguidist"&gt;
        react-styleguidist
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Isolated React component development environment with a living style guide
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e5957704abbb3c823da4dfd68a31665a1065b4c0de3d662e7f08f23684455fbc/68747470733a2f2f64337676366c703535716a6171632e636c6f756466726f6e742e6e65742f6974656d732f303631663041326e3142304833703054317031662f72656163742d7374796c65677569646973742d6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e5957704abbb3c823da4dfd68a31665a1065b4c0de3d662e7f08f23684455fbc/68747470733a2f2f64337676366c703535716a6171632e636c6f756466726f6e742e6e65742f6974656d732f303631663041326e3142304833703054317031662f72656163742d7374796c65677569646973742d6c6f676f2e706e67" alt="React Styleguidist" width="400"&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Isolated React component development environment with a living style guide&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/react-styleguidist" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/790eb9d9348d99d60de5793a98f4855f5804cf7a9b9d8228ddb00ee3fcffd419/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d7374796c65677569646973742e737667" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://github.com/styleguidist/react-styleguidist.git/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Umo3WsNd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/styleguidist/react-styleguidist/workflows/CI/badge.svg" alt="CI status"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/styleguidist/react-styleguidist" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/883e74b23f8facf0f9122f2c0ea145ee494503ba65980f8ccbf5a4b4619b9618/68747470733a2f2f636f6465636f762e696f2f67682f7374796c65677569646973742f72656163742d7374796c65677569646973742f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/styleguidist/styleguidist?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40b23e65a017f38ae7e77237e798f174fbcb92ee17638ef626f495524b6c34c9/68747470733a2f2f6261646765732e6769747465722e696d2f7374796c65677569646973742f7374796c65677569646973742e737667" alt="Join the chat at https://gitter.im/styleguidist/styleguidist"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/QWsybqJDTA" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cde77425d6175c85134c067dec6ffb2d077dec5494c4c6933aaefac01014bb4b/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3834323833323138363931343633353830363f6c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/styleguidist/react-styleguidist" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2d92fe1698553066c1adf9859746f619c2226c21f25a38cc19bee316ca5505b1/68747470733a2f2f7777772e636f64657472696167652e636f6d2f7374796c65677569646973742f72656163742d7374796c65677569646973742f6261646765732f75736572732e737667" alt="Open Source Helpers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;React Styleguidist is a component development environment with hot reloaded dev server and a living style guide that you can share with your team. It lists component &lt;code&gt;propTypes&lt;/code&gt; and shows live, editable usage examples based on Markdown files. Check out &lt;a href="https://react-styleguidist.js.org/examples/basic/" rel="nofollow"&gt;&lt;strong&gt;the demo style guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1703219/74945569-51c6ad00-543b-11ea-8351-f4d86860893a.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CuNtKtOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/1703219/74945569-51c6ad00-543b-11ea-8351-f4d86860893a.gif" alt="React Styleguidist in action"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://react-styleguidist.js.org/docs/getting-started" rel="nofollow"&gt;Getting Started&lt;/a&gt;: install and run Styleguidist&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/docs/documenting" rel="nofollow"&gt;Documenting components&lt;/a&gt;: how to write documentation&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/docs/components" rel="nofollow"&gt;Locating components&lt;/a&gt;: point Styleguidist to your React components&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/docs/webpack" rel="nofollow"&gt;Configuring webpack&lt;/a&gt;: tell Styleguidist how to load your code&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/docs/cookbook" rel="nofollow"&gt;Cookbook&lt;/a&gt;: how to solve common tasks with Styleguidist&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Advanced documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://react-styleguidist.js.org/docs/configuration" rel="nofollow"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://react-styleguidist.js.org/docs/cli" rel="nofollow"&gt;CLI commands and options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://react-styleguidist.js.org/docs/api" rel="nofollow"&gt;Node.js API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Examples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/examples/basic/" rel="nofollow"&gt;Basic style guide&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/basic"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Style guide with sections, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/sections"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Style guide with customized styles, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/customised"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Style guide with custom express endpoints, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/express"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Create React App integration, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/cra"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Showcase&lt;/h2&gt;
&lt;p&gt;Real projects using React Styleguidist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rumble-charts.github.io/rumble-charts/" rel="nofollow"&gt;Rumble Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://better-react-spinkit.benjamintatum.com/" rel="nofollow"&gt;better-react-spinkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hallister.github.io/semantic-react/" rel="nofollow"&gt;Semantic UI Components for React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/styleguidist/react-styleguidist"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-pts"&gt;
  &lt;/a&gt;
  10. Pts
&lt;/h3&gt;

&lt;p&gt;A library for visualization and creative-coding&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/williamngan"&gt;
        williamngan
      &lt;/a&gt; / &lt;a href="https://github.com/williamngan/pts"&gt;
        pts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A library for visualization and creative-coding
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Pts&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/williamngan/pts/master/./assets/pts-gif-10.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--29yDR8D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/williamngan/pts/master/./assets/pts-gif-10.gif" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pts is a typescript/javascript library for visualization and creative-coding.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Get started at &lt;a href="https://ptsjs.org" rel="nofollow"&gt;ptsjs.org&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Please give it a try, &lt;a href="https://github.com/williamngan/pts/issues"&gt;file issues&lt;/a&gt;, and send feedbacks to &lt;a href="https://twitter.com/williamngan" rel="nofollow"&gt;@williamngan&lt;/a&gt;. Thank you!&lt;/p&gt;

&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;&lt;br&gt;
Get the latest &lt;code&gt;pts.js&lt;/code&gt; or &lt;code&gt;pts.min.js&lt;/code&gt; (in &lt;a href="https://github.com/williamngan/pts/tree/master/dist"&gt;dist&lt;/a&gt; folder). Alternatively use a CDN service like &lt;a href="https://cdnjs.com/libraries/pts" rel="nofollow"&gt;cdnjs&lt;/a&gt; or &lt;a href="https://cdn.jsdelivr.net/gh/williamngan/pts/dist/pts.min.js" rel="nofollow"&gt;jsdelivr&lt;/a&gt; or &lt;a href="https://unpkg.com/pts/dist/pts.min.js" rel="nofollow"&gt;unpkg&lt;/a&gt;. Then add it to your html page like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;="&lt;span class="pl-s"&gt;text/javascript&lt;/span&gt;" &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;path/to/pts.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Pts is pretty lightweight. Currently at ~90kb minified and 26kb gzipped.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt;&lt;br&gt;
Install via &lt;code&gt;npm install pts&lt;/code&gt;. Then you can choose to import some parts of Pts into your project as needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-v"&gt;CanvasSpace&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-v"&gt;Pt&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-v"&gt;Group&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-v"&gt;Line&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'pts'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;To quickly get started, try download or clone these repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/williamngan/pts-starter-kit"&gt;pts-starter-kit&lt;/a&gt;: Get started with a sample app using npm and webpack&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/williamngan/pts-react-example"&gt;pts-react-example&lt;/a&gt;: Try…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/williamngan/pts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/thedaviddias/Front-End-Checklist"&gt;Front-End Checklist&lt;/a&gt; +1,665 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sdmg15/Best-websites-a-programmer-should-visit"&gt;Best websites a programmer should visit&lt;/a&gt; +1,445 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GitSquared/edex-ui"&gt;eDEX-UI&lt;/a&gt; +1,350 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +1,235 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mikecao/umami"&gt;umami&lt;/a&gt; +844 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/pveyes/htmr"&gt;htmr&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +24%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/observablehq/plot"&gt;Observable Plot&lt;/a&gt; +15%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Elderjs/elderjs"&gt;Elder.js&lt;/a&gt; +15%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +15%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +6,543 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +5,535 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Web Developer Roadmap&lt;/a&gt;  +5,200 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,960 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;Build your own X&lt;/a&gt; +4,350 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/github/github-elements"&gt;github-elements&lt;/a&gt; +132%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pankod/superplate"&gt;superplate&lt;/a&gt; +73%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yiliansource/party-js"&gt;party.js&lt;/a&gt; +72%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +72%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/supabase/supabase"&gt;Supabase&lt;/a&gt; +43%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
