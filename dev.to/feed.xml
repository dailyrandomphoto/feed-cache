<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Wikis don't work for software documentation</title>
      <author>Nik Begley</author>
      <pubDate>Tue, 21 Sep 2021 13:57:03 +0000</pubDate>
      <link>https://dev.to/doctave/wikis-don-t-work-for-software-documentation-1ejk</link>
      <guid>https://dev.to/doctave/wikis-don-t-work-for-software-documentation-1ejk</guid>
      <description>&lt;p&gt;If your software documentation lives in a Wiki, it's very likely out of date and possibly actively harming your engineering team's productivity. This is a story that repeats in almost every organization - a tool like Confluence or Notion is selected as the "corporate knowledge base" of choice and  developers start documenting code in them. But time and again that documentation goes stale and eventually serves no other purpose than to &lt;a href="http://geek-and-poke.com/geekandpoke/2012/4/25/the-new-developer.html"&gt;confuse eager new hires&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-wikis-good-for"&gt;
  &lt;/a&gt;
  What are wikis good for?
&lt;/h2&gt;

&lt;p&gt;First, let's take a look at what wikis &lt;em&gt;do&lt;/em&gt; work for. They are used actively by millions of people every day and absolutely have good use cases.&lt;/p&gt;

&lt;p&gt;We'd list the following reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Trivially easy to add new content&lt;/li&gt;
&lt;li&gt;WYSIWYG editing allows non-technical users to collaborate&lt;/li&gt;
&lt;li&gt;Searchability and linking across pages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wikis are an accessible and easy to use way to write down information. At a click of a button you can create a new page and the powerful in-built editors make it easy to add graphs and style to your thoughts. Finally, once it's all written down, you can reference other pages and search across the whole knowledge base. Wikis are the lowest common denominator that can work in &lt;em&gt;most&lt;/em&gt; cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-cant-you-do-with-wikis"&gt;
  &lt;/a&gt;
  What can't you do with wikis?
&lt;/h2&gt;

&lt;p&gt;But let's look at what you &lt;em&gt;cannot&lt;/em&gt; do with wikis:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integrate documentation changes into code review&lt;/li&gt;
&lt;li&gt;Atomic changes to your docs and code&lt;/li&gt;
&lt;li&gt;Programmatically generate docs at build time&lt;/li&gt;
&lt;li&gt;Edit the documentation using your IDE/editor of choice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wouldn't you want to be able to see during code review that the relevant documentation has been updated along with the code? Maybe the committer included a link to the updated wiki page, but are the docs changes already live before the PR is merged? Or will they remember to go submit the changes in the wiki once the code goes live? What if your update only applies to v2.5 of your product but not the newest v3.1 release and the documentation needs an important update?&lt;/p&gt;

&lt;p&gt;None of these questions have clear answers when using a wiki and most likely will lead to the documentation simply never being written or maintained.&lt;/p&gt;

&lt;p&gt;As &lt;a href="https://twitter.com/rionam"&gt;Riona MacNamara&lt;/a&gt;, who worked on Google's internal documentation tooling, put it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Documentation will never be part of engineering culture until it is integrated into the codebase&lt;br&gt;
and workflow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#a-better-tool-for-the-job"&gt;
  &lt;/a&gt;
  A better tool for the job
&lt;/h2&gt;

&lt;p&gt;We previously wrote about how &lt;a href="https://blog.doctave.com/2021/09/07/how-google-twitter-and-spotify-build-culture-of-documentation.html"&gt;Google, Twitter, and Spotify all built their own docs-as-code systems&lt;/a&gt; for managing internal technical documentation. They did not build wikis.&lt;/p&gt;

&lt;p&gt;Instead, they built systems that allowed documentation to live next to source code and get rendered into searchable pages in CI/CD. This practice is generally called "docs-as-code" and is not a new invention.&lt;/p&gt;

&lt;p&gt;What they all found was that allowing developers to update documentation as part of their regular workflow lowered the barrier to update docs and ultimately lead to better documented projects. Instead of having to step into a different system to make changes to the project docs, all they had to do was open a Markdown file and start writing. There was one way to document and it was optimized for developers.&lt;/p&gt;

&lt;p&gt;Removing friction leads to better documentation. We should be using better tools to remove all the friction we can.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tradeoffs"&gt;
  &lt;/a&gt;
  Trade-offs
&lt;/h2&gt;

&lt;p&gt;No solution is perfect, so let's take a moment to talk about the trade-offs of taking a docs-as-code approach.&lt;/p&gt;

&lt;p&gt;Firstly, using docs-as-code will make it more difficult for non-technical collaborators to edit documentation. That being said, for internal technical documentation the maintainers should be the engineers and technical writers. Also, GitHub allows editing directly in the browser, so everyone does not need to learn the correct &lt;code&gt;git&lt;/code&gt; incantations to contribute.&lt;/p&gt;

&lt;p&gt;Secondly, you have to think about search. If you use a documentation site generator to turn your Markdown docs into HTML sites, even if the toolchain builds a search index for the site, you will end up with N disconnected sites for N projects. &lt;a href="https://www.doctave.com"&gt;Doctave.com&lt;/a&gt; can help with this if you are using our open source &lt;a href="https://github.com/Doctave/doctave"&gt;documentation site generator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, your documentation will have to be limited to Markdown (or an equivalent format). Many would argue that this is a feature, not a limitation - forcing documentation to be in a simple format can make it easier to write and consume. Some tools will support useful "extensions" to Markdown. Our generator for example supports &lt;a href="https://mermaid-js.github.io/mermaid/#/"&gt;Mermaid JS&lt;/a&gt; diagrams, so that you can embed graphs and charts into your docs easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technology-options"&gt;
  &lt;/a&gt;
  Technology options
&lt;/h2&gt;

&lt;p&gt;Here's a quick list of some technology options if you want to look into docs-as-code.&lt;/p&gt;

&lt;p&gt;We are building &lt;a href="https://www.doctave.com"&gt;Doctave.com&lt;/a&gt; to be the best home for your technical documentation. If you want to do docs-as-code with a light-weight &lt;a href="https://https://github.com/Doctave/doctave"&gt;open source docs site generator&lt;/a&gt;, but host the docs in a centralized place that allows searching across all your projects, &lt;a href="https://www.doctave.com"&gt;check us out&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are also many open source generators out there that are worth mentioning: &lt;a href="https://www.mkdocs.org/"&gt;MkDocs&lt;/a&gt; and &lt;a href="https://docusaurus.io/"&gt;Docusaurus&lt;/a&gt; to name a couple popular ones. If you need something more customizable, &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; and &lt;a href="https://gohugo.io/"&gt;Hugo&lt;/a&gt; are good options. Generic static site generators however tend to add a lot of complexity so we'd recommend going for something more light-weight.&lt;/p&gt;

&lt;p&gt;In the end, the exact technology choice is less important. As long as it's not a wiki.&lt;/p&gt;

</description>
      <category>writing</category>
      <category>documentation</category>
      <category>agile</category>
    </item>
    <item>
      <title>How to Remove Underlines From Links with CSS</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Tue, 21 Sep 2021 13:39:37 +0000</pubDate>
      <link>https://dev.to/coderslang/how-to-remove-underlines-from-links-with-css-42kk</link>
      <guid>https://dev.to/coderslang/how-to-remove-underlines-from-links-with-css-42kk</guid>
      <description>&lt;p&gt;You know how hyperlinks always come with an underline, right? And you want to get rid of it so you can add your style. Well, you can do it by using the &lt;code&gt;text-decoration&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;text-decoration&lt;/code&gt; is a CSS property that will specify how to decorate the text. Since the hyperlink by default has a decoration, all you have to do is remove the text-decoration from the link.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-example-code"&gt;
  &lt;/a&gt;
  An example code
&lt;/h2&gt;

&lt;p&gt;Let us take an example of how to remove underline with the &lt;code&gt;text-decoration&lt;/code&gt; property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Example&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Definitely not a clickbait&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As shown from the example code above, the &lt;code&gt;text-decoration: none;&lt;/code&gt; basically tells the CSS not to have any decoration on the hyperlink. That means the hyperlink no longer has an underline.&lt;/p&gt;

&lt;p&gt;And that is pretty much of it. Quite simple, right?&lt;/p&gt;

&lt;p&gt;Get my &lt;a href="https://learn.coderslang.com/free-ebooks/"&gt;free e-book&lt;/a&gt; to prepare for the technical interview or start to &lt;a href="https://js.coderslang.com/"&gt;Learn Full-Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>css</category>
      <category>html</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>7 popular extensions from Microsoft Edge Addons</title>
      <author>nagachaitanyalokam</author>
      <pubDate>Tue, 21 Sep 2021 13:38:19 +0000</pubDate>
      <link>https://dev.to/naga_chaitanya_lokam/7-popular-extensions-from-microsoft-edge-addons-n0o</link>
      <guid>https://dev.to/naga_chaitanya_lokam/7-popular-extensions-from-microsoft-edge-addons-n0o</guid>
      <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;Microsoft Edge is rapidly growing as a preferred browser, thanks to its &lt;a href="https://aka.ms/EdgePerformsbetter"&gt;low resource consumption&lt;/a&gt;,&lt;a href="http://aka.ms/EdgeMoreSecure"&gt;strong security&lt;/a&gt; and &lt;a href="https://aka.ms/EdgeFeatures"&gt;innovative features&lt;/a&gt;. With Microsoft Edge Add-ons, users can personalize and do more with their browser.&lt;/p&gt;

&lt;p&gt;In addition to organizing your research with collections, working efficiently with vertical tabs, and taking back control with tracking prevention, you can also personalize your Microsoft Edge browser by downloading add-ons or extensions. Add-ons can enhance your browser experience and boost your productivity. For example, you can personalize your browser with themes, organize your work with performance tools and much more.&lt;/p&gt;

&lt;p&gt;To help you get started, here is a list of 7 highly user rated extensions* on Microsoft Edge Add-ons website that can enhance your browsing experience:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-grammar-and-spell-checkerlanguagetool"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://aka.ms/GrammarandSpellChecker"&gt;Grammar and Spell Checker-LanguageTool&lt;/a&gt;:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8cDMqFv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qnd0bqpk6a4vpbqqculg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8cDMqFv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qnd0bqpk6a4vpbqqculg.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
This add-on will check your texts for spelling and grammar problems by sending it to &lt;a href="https://aka.ms/LanguageTool"&gt;LanguageTool.org&lt;/a&gt; over an encrypted connection.&lt;/p&gt;

&lt;p&gt;LanguageTool is compatible with almost all text, regardless of source, including social networks such as Twitter or LinkedIn and online e-mail services, such as Gmail. This grammar and spelling correction works across all variations of common language.&lt;/p&gt;

&lt;p&gt;LanguageTool also features a personal dictionary for exceptions or words that you might commonly use but that are not found in a conventional dictionary. LanguageTool will recognize these words in future grammar checking and proofreading. Furthermore, it supports more than 25 languages, including English, Spanish, French, German, Polish, and Russian. No account is needed to use this add-on.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-qr-code-generator"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://aka.ms/QRCodeGenerator"&gt;QR Code Generator&lt;/a&gt;:
&lt;/h4&gt;

&lt;p&gt;This simple add-on by &lt;a href="https://aka.ms/AwesomeExtensions"&gt;Awesome Extensions&lt;/a&gt; is a super handy QR Code Generator that converts your current page into QR Code with one click and generates QR Codes from free text, URLs. Features include scan, analyze, decode, and read QR codes.&lt;/p&gt;

&lt;p&gt;It also offers the option to download the QR code as an image and you can use this add-on offline too.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-tampermonkey"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://aka.ms/Tampermonkey"&gt;Tampermonkey&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KKaZJJ8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8y3itk5yep4h44y0low.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KKaZJJ8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8y3itk5yep4h44y0low.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aka.ms/Tampermonkey.net"&gt;Tampermonkey&lt;/a&gt; is the most popular Free User Script manager, with over 10 million weekly users.&lt;/p&gt;

&lt;p&gt;This add-on manages User Script, which can change the appearance and function of the website completely and make sure they’re operating on the right site.&lt;/p&gt;

&lt;p&gt;It also provides features like a clear overview over the running scripts, a built-in editor, ZIP-based import and export, automatic update checks, and cloud storage-based synchronization.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-enhancer-for-youtube"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://aka.ms/EnhancerforYouTube"&gt;Enhancer for YouTube&lt;/a&gt;:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FT-aPQgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zunwiynhun9l15w7nkfm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FT-aPQgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zunwiynhun9l15w7nkfm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This add-on by &lt;a href="https://aka.ms/mrfdev"&gt;Maxime RF&lt;/a&gt; allows you to manage ads, control the playback speed and the volume level with the mouse wheel, automate repetitive tasks such as selecting the appropriate playback quality, and configure dozens of keyboard shortcuts to control on YouTube.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-infinity-new-tab-pro"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://aka.ms/InfinityNewTabPro"&gt;Infinity New Tab (Pro)&lt;/a&gt;:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mFPUJGzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bocba5kjlcjjfobvbodv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mFPUJGzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bocba5kjlcjjfobvbodv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Infinity New Tab Pro by &lt;a href="https://aka.ms/StarlabTechnology"&gt;Starlab Technology&lt;/a&gt; allows you to customize your New Tab page. This add-on changes your new tab experiences by offering options to add all your favorite sites. Additionally, you could add and check your To-Do list, notes and bookmarks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-microsoft-editor-spelling-amp-grammar-checker"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://aka.ms/MicrosoftSpellingandGrammarChecker"&gt;Microsoft Editor: Spelling &amp;amp; Grammar Checker&lt;/a&gt;:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--houRWeSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1reafmw84eh40snlds8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--houRWeSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1reafmw84eh40snlds8.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Microsoft Editor: Spelling &amp;amp; Grammar Checker proofreads the content written by the user, for correct grammar, spelling, and punctuation.&lt;/p&gt;

&lt;p&gt;This add-on provides grammar, spelling, and style suggestions across multiple websites. The editor checks spellings in more than 80 languages and provides grammar checking and writing improvements in 20+ languages. It also provides Editor’s assistance in the Office apps. Just open Word or Outlook on the web and get suggestions to improve one’s documents and e-mail.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-dark-reader"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://aka.ms/DarkReader"&gt;Dark Reader&lt;/a&gt;:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qWngISmG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d92eqbxxkudrhdhzkbvt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qWngISmG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d92eqbxxkudrhdhzkbvt.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dark Reader Add-on by &lt;a href="https://aka.ms/darkreader.org"&gt;alexanderby&lt;/a&gt;, &lt;a href="https://aka.ms/Darkreader2.org"&gt;William Zijl&lt;/a&gt; enables night mode and creates dark themes for websites. &lt;/p&gt;

&lt;p&gt;It automatically inverts bright colors, making them high in contrast and removing the white light brightness. You can easily adjust brightness, contrast, sepia filter, dark mode, font settings and ignore-list. Dark Reader neither shows ads nor sends user data anywhere. &lt;/p&gt;

&lt;p&gt;I'd love to hear your experience and feedback using the above extensions. Please comment and let us know what other extensions would you like us to feature.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Top 11 distributed tracing tools in 2021</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Tue, 21 Sep 2021 13:12:24 +0000</pubDate>
      <link>https://dev.to/signoz/top-11-distributed-tracing-tools-in-2021-54km</link>
      <guid>https://dev.to/signoz/top-11-distributed-tracing-tools-in-2021-54km</guid>
      <description>&lt;p&gt;Choosing the right distributed tracing tool is critical. How do you know which is the right one for you? Here are the top 11 distributed tracing tools that can solve your monitoring and observability needs.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What is a distributed tracing tool?&lt;br&gt;&lt;br&gt;
A distributed tracing tool enables you to track user requests across multiple servers and services in a microservice architecture. It gives you a central overview of how user requests are performing in different services.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Distributed tracing tools have become a critical component in a distributed and microservices-based architecture.&lt;/p&gt;

&lt;p&gt;So why is distributed software so popular?&lt;/p&gt;

&lt;p&gt;There are three major reasons for the popularity of distributed software: scalability, reliability, and maintainability.&lt;/p&gt;

&lt;p&gt;But it also comes with its own challenges. Distributed software becomes complex with scale, and no single team can fully comprehend how all services interact. Although engineering teams own single services, they become implicitly responsible for many services.&lt;/p&gt;

&lt;p&gt;A single user request can travel through hundreds or thousands of microservices. So to quickly identify where things are going wrong, you need a central overview of how requests are performing across services.&lt;/p&gt;

&lt;p&gt;Distributed tracing tools capture user requests as they travel through every service and measure things like latency.&lt;/p&gt;

&lt;p&gt;A great distributed tracing tool can improve your team's response to performance issues, thereby improving the end-user experience.&lt;/p&gt;

&lt;p&gt;Here's the list of the top 11 distributed tracing tools we will be looking at in this article:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#signoz"&gt;SigNoz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jaeger"&gt;Jaeger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zipkin"&gt;Zipkin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dynatrace"&gt;Dynatrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#new-relic"&gt;New Relic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#honeycomb"&gt;Honeycomb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lightstep"&gt;Lightstep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#instana"&gt;Instana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#datadog"&gt;DataDog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elastic-apm"&gt;Elastic APM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splunk"&gt;Splunk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before we deep dive into each of these distributed tracing tools, let's take a short detour to understand distributed tracing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-distributed-tracing"&gt;
  &lt;/a&gt;
  What is distributed tracing?
&lt;/h2&gt;

&lt;p&gt;In the world of microservices, a user request travels through hundreds of services before serving a user what they need. To make a business scalable, engineering teams are responsible for particular services with no insight into how the system performs as a whole. And that's where distributed tracing comes into the picture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G8Vee_gt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/jaeger_vs_zipkin_microservices_architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G8Vee_gt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/jaeger_vs_zipkin_microservices_architecture.png" alt="Microservices architecture"&gt;&lt;/a&gt;Microservice architecture of a fictional e-commerce application&lt;/p&gt;

&lt;p&gt;Distributed tracing gives you insight into how a particular service is performing as part of the whole in a distributed software system. There are two essential concepts involved in distributed tracing: &lt;strong&gt;Spans&lt;/strong&gt; and &lt;strong&gt;trace context&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;User requests are broken down into spans.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What are spans?&lt;br&gt;&lt;br&gt;
Spans represent a single operation within a trace. Thus, it represents work done by a single service which can be broken down further depending on the use case.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A &lt;strong&gt;trace context&lt;/strong&gt; is passed along when requests travel between services, which tracks a user request across services. Thus, you can see how a user request performs across services and identify what exactly needs your attention without manually shifting through multiple dashboards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXTMH1wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/opentelemetry_distributed_tracing-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXTMH1wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/opentelemetry_distributed_tracing-min.png" alt="Trace context is passed to track user requests across services"&gt;&lt;/a&gt;A trace context is passed when user requests pass from one service to another&lt;/p&gt;

&lt;p&gt;Below is a snapshot from SigNoz dashboard showing spans from a request as rectangular blocks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_dvN4DCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/spans_traces-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_dvN4DCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/spans_traces-min.jpg" alt="SigNoz dashboard showing spans from a request"&gt;&lt;/a&gt;Spans representing logical operations within a trace as rectangular blocks (Source: SigNoz dashboard)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-11-distributed-tracing-tools"&gt;
  &lt;/a&gt;
  Top 11 distributed tracing tools
&lt;/h2&gt;

&lt;p&gt;Now let's explore the top 11 distributed tracing tools in 2021.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#signoz"&gt;
  &lt;/a&gt;
  SigNoz
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; is a full-stack open-source APM and observability tool. It captures both metrics and traces with log management currently in the product roadmap. Logs, metrics, and traces are considered to be the three pillars of observability in modern-day distributed systems.&lt;/p&gt;

&lt;p&gt;SigNoz provides a unified UI for metrics and traces so that there is no need to switch between different tools like Jaeger and Prometheus.&lt;/p&gt;

&lt;p&gt;Using SigNoz, you can track things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User requests per second&lt;/li&gt;
&lt;li&gt;50th, 90th, and 99th percentile latencies of microservices in your application&lt;/li&gt;
&lt;li&gt;Error rate of requests to your services&lt;/li&gt;
&lt;li&gt;Slow endpoints in your application&lt;/li&gt;
&lt;li&gt;User requests across different microservices using distributed tracing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An open-source tool with the capabilities of SaaS vendors, SigNoz is a great choice for a distributed tracing tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" alt="Architecture of SigNoz with OpenTelemetry and ClickHouse"&gt;&lt;/a&gt;Architecture of SigNoz with ClickHouse as storage backend and OpenTelemetry for code instrumentatiion&lt;/p&gt;

&lt;p&gt;SigNoz uses OpenTelemetry for code instrumentation. OpenTelemetry provides vendor-agnostic instrumentation libraries and is quietly becoming the world standard for generating and managing telemetry data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" alt="SigNoz UI showing the popular RED metrics"&gt;&lt;/a&gt;SigNoz UI showing application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/p&gt;

&lt;p&gt;You can also use flamegraphs to visualize spans from your trace data. All of this comes out of the box with SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" alt=""&gt;&lt;/a&gt;Flamegraphs showing exact duration taken by each spans - a concept of distributed tracing&lt;/p&gt;

&lt;p&gt;Gantt charts make it easy to visualize your services and events in a parent-child relationship tree. You can easily figure out which events are causing latency in a request call.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ItU4B-3C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/signoz_gantt_chart-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ItU4B-3C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/signoz_gantt_chart-min.png" alt="Gantt charts on SigNoz dashboard"&gt;&lt;/a&gt;Gantt charts on SigNoz dashboard to visualize your spans in a parent-child relationship&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jaeger"&gt;
  &lt;/a&gt;
  Jaeger
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.jaegertracing.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Jaeger&lt;/b&gt;&lt;/a&gt; is an open-source APM tool developed at Uber, later donated to Cloud Native Computing Foundation(CNCF). Inspired by Google's Dapper, Jaeger is a distributed tracing system.&lt;/p&gt;

&lt;p&gt;It is used for monitoring and troubleshooting microservices-based distributed systems. Some of its key features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Distributed context propagation&lt;/li&gt;
&lt;li&gt;Distributed transaction monitoring&lt;/li&gt;
&lt;li&gt;Root cause analysis&lt;/li&gt;
&lt;li&gt;Service dependency analysis&lt;/li&gt;
&lt;li&gt;Performance / latency optimization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sPD4rjIu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/Jaeger_architecture-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sPD4rjIu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/Jaeger_architecture-min.jpg" alt="Jaeger Architecture"&gt;&lt;/a&gt;Architecture of Jaeger&lt;/p&gt;

&lt;p&gt;Jaeger supports two popular open-source NoSQL databases as trace storage backends: Cassandra and Elasticsearch. Jaeger's UI can be used to see individual traces. You can also filter the traces based on service, duration, and tags.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" alt="Jaeger UI"&gt;&lt;/a&gt;Jaeger UI showing services and corresponding traces&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zipkin"&gt;
  &lt;/a&gt;
  Zipkin
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://zipkin.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Zipkin&lt;/b&gt;&lt;/a&gt; is an open-source APM tool used for distributed tracing. Zipkin captures timing data need to troubleshoot latency problems in service architectures.&lt;/p&gt;

&lt;p&gt;Zipikin was initially developed at Twitter and drew inspiration from Google's Dapper. Unique identifiers called Trace ID are attached to each request which then identifies that request across services.&lt;/p&gt;

&lt;p&gt;Zipkin's architecture includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reporters to send data to Zipkin&lt;/li&gt;
&lt;li&gt;Collectors which persist trace data to storage&lt;/li&gt;
&lt;li&gt;API to query data&lt;/li&gt;
&lt;li&gt;UI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
    alt="Zipkin architecture"&lt;br&gt;
    height={500}&lt;br&gt;
    src="/img/blog/2021/09/zipkin_architecture-min.jpg"&lt;br&gt;
    title="Zipkin architecture (Source: Zipkin website)"&lt;br&gt;
    width={700}&lt;br&gt;
/&amp;gt;&lt;/p&gt;

&lt;p&gt;Zipkin's in-built UI is limited, and you can use Grafana or Kibana from the ELK stack for better analytics and visualizations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nmkD1fSP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/07/Zipkin_ui-min_o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmkD1fSP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/07/Zipkin_ui-min_o.png" alt="Zipkin UI"&gt;&lt;/a&gt;Zipkin UI (Source: Zipkin's GitHub repo)&lt;/p&gt;

&lt;p&gt;It also includes a dependency diagram that shows how many user requests went through each service. It can help you to identify error paths and calls to deprecated services.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Do5OAgEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/07/zipkin_dependency_diagram-min_o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Do5OAgEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/07/zipkin_dependency_diagram-min_o.png" alt="Zipkin dependency diagram"&gt;&lt;/a&gt;Zipkin dependency diagram (Source: GitHub repo)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynatrace"&gt;
  &lt;/a&gt;
  Dynatrace
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.dynatrace.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Dynatrace&lt;/b&gt;&lt;/a&gt; is an extensive SaaS enterprise tool targeting a broad spectrum of monitoring needs of large-scale enterprises. For distributed tracing, it provides a technology called &lt;a href="https://www.dynatrace.com/platform/purepath/"&gt;Purepath&lt;/a&gt;, which combines distributed tracing with code-level insights. When a user initiates a transaction with the application, PurePath gives the transaction a unique ID.&lt;/p&gt;

&lt;p&gt;Some of the key features provided by the Dynatrace distributed tracing tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automatic injection and collection of data&lt;/li&gt;
&lt;li&gt;Code-level visibility across all application tiers for web and mobile apps together&lt;/li&gt;
&lt;li&gt;Always-on code profiling and diagnostics tools for application analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WQuCCJYZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/dynatrace_purepath-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WQuCCJYZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/dynatrace_purepath-min.jpg" alt="Dynatrace distributed tracing dashboard"&gt;&lt;/a&gt;Distributed tracing by PurePath technology (Source: Dynatrace website)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gtzYTm1v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/dynatrace_purepath_code_level-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gtzYTm1v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/dynatrace_purepath_code_level-min.jpg" alt="Code-level insights with Dynatrace PurePath technology"&gt;&lt;/a&gt;Code-level insights shown on Dynatrace dashboard (Source: Dynatrace website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-relic"&gt;
  &lt;/a&gt;
  New Relic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://newrelic.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;New Relic&lt;/b&gt;&lt;/a&gt; is one of the oldest companies in the application performance monitoring domain. It offers multiple solutions to enterprises for performance monitoring. For distributed tracing, it offers New Relic Edge, which can observe 100% of an application's traces.&lt;/p&gt;

&lt;p&gt;Some of the key features of the New Relic distributed tracing tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Distributed tracing and sampling options for a wide range of technology stack&lt;/li&gt;
&lt;li&gt;Support for open-source tracing tools and standards like OpenTelemetry&lt;/li&gt;
&lt;li&gt;Correlation of tracing data with other aspects of application infrastructure and user monitoring&lt;/li&gt;
&lt;li&gt;Fully managed cloud-native experience with on-demand scalability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BIlJBwqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/new_relic_distributed_tracing-min_2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BIlJBwqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/new_relic_distributed_tracing-min_2.jpg" alt="New Relic distributed tracing dashboard"&gt;&lt;/a&gt;New Relic distributed tracing dashboard (Source: New Relic website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#honeycomb"&gt;
  &lt;/a&gt;
  Honeycomb
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.honeycomb.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Honeycomb&lt;/b&gt;&lt;/a&gt; is a full-stack cloud-based observability tool with support for events, logs, and traces. Honeycomb provides an easy-to-use distributed tracing solution.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Honeycomb distributed tracing tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quickly diagnose bottlenecks and optimize performance with a waterfall view to understand how your system is processing service requests&lt;/li&gt;
&lt;li&gt;Full-text search over trace spans and toggle to collapse and expand sections of trace waterfalls&lt;/li&gt;
&lt;li&gt;Provides Honeycomb beelines to automatically define key pieces of trace data like serviceName, name, timestamp, duration, traceID, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BedXJ_5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/honeycomb_tracing_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BedXJ_5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/honeycomb_tracing_dashboard-min.jpg" alt="Honeycomb tracing dashboard (Source: Honeycomb website)"&gt;&lt;/a&gt;Honeycomb distributed tracing dashboard (Source: Honeycomb website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lightstep"&gt;
  &lt;/a&gt;
  Lightstep
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://lightstep.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Lightstep&lt;/b&gt;&lt;/a&gt; is a distributed tracing tool that provides complete visibility to distributed systems based on microservices and multi-cloud environment. It uses open-source friendly data ingestion methods and is built to support applications of any scale.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Lightstep distributed tracing tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Move seamlessly from a high-level view of dependencies to specific services, operations, traces, or any other signals contributing to issues in production&lt;/li&gt;
&lt;li&gt;Provides full-context root cause analysis with exact logs, metrics, and traces to simplify and solve complex investigations&lt;/li&gt;
&lt;li&gt;Auto-instrumentation libraries powered by OpenTelemetry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wvvPe5sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/lightstep_tracing_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wvvPe5sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/lightstep_tracing_dashboard-min.jpg" alt="Lighstep tracing dashboard (Source: thenewstack.io)"&gt;&lt;/a&gt;Lighstep distributed tracing dashboard (Source: thenewstack.io)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#instana"&gt;
  &lt;/a&gt;
  Instana
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.instana.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Instana&lt;/b&gt;&lt;/a&gt; is a distributed tracing tool aimed at microservice applications. The Instana platform offers website monitoring, cloud &amp;amp; infrastructure monitoring, observability platform apart from distributed tracing of microservice applications.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Instana distributed tracing tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A single, lightweight agent per host to continually discover and monitor all components of the technology stack&lt;/li&gt;
&lt;li&gt;Dependency Map to continuously model application services and infrastructure&lt;/li&gt;
&lt;li&gt;Enriched trace data with information about the underlying service, application, and system infrastructure&lt;/li&gt;
&lt;li&gt;Root cause analysis with a correlated sequence of events and issues identifying the exact source of the problem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nxcc1h1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/instana_distributed_tracing_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nxcc1h1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/instana_distributed_tracing_dashboard-min.jpg" alt="Instana distributed tracing dashboard"&gt;&lt;/a&gt;Instana distributed tracing dashboard (Source: Instana website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datadog"&gt;
  &lt;/a&gt;
  DataDog
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.datadoghq.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;DataDog&lt;/b&gt;&lt;/a&gt;  is an enterprise APM tool that provides monitoring products ranging from infrastructure monitoring, log management, network monitoring to security monitoring. Its application performance monitoring tool has distributed tracing capabilities.&lt;/p&gt;

&lt;p&gt;Some of the key features of DataDog APM, which provides distributed tracing capabilities, includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Out of box performance dashboards for web services, queues, and databases to monitor requests, errors, and latency&lt;/li&gt;
&lt;li&gt;Correlation of distributed tracing to browser sessions, logs, profiles, network, processes, and infrastructure metrics&lt;/li&gt;
&lt;li&gt;Can ingest 50 traces per second per APM host&lt;/li&gt;
&lt;li&gt;Service maps to understand service dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N6YpMgnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/datadog_distributed_tracing_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N6YpMgnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/datadog_distributed_tracing_dashboard-min.jpg" alt="DataDog distributed tracing dashboard"&gt;&lt;/a&gt;DataDog distributed tracing dashboard (Source: DataDog website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elastic-apm"&gt;
  &lt;/a&gt;
  Elastic APM
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.elastic.co/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Elastic APM&lt;/b&gt;&lt;/a&gt; is an Application Performance Monitoring system built on the Elastic Stack - ElasticSearch, Logstash, and Kibana. It consists of four components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Elasticsearch - For data storage and indexing&lt;/li&gt;
&lt;li&gt;Kibana - For analyzing and visualizing the data&lt;/li&gt;
&lt;li&gt;APM agents - Collects the data to send to the APM server&lt;/li&gt;
&lt;li&gt;APM server - Receives data from APM agents and process it for storing in Elasticsearch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W-hckGxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/elastic_apm_distributed_tracing_dashboard-min.jp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W-hckGxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/elastic_apm_distributed_tracing_dashboard-min.jp" alt="Elastic APM distributed tracing dashboard"&gt;&lt;/a&gt;Elastic APM distributed tracing dashboard (Source: DataDog website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#splunk"&gt;
  &lt;/a&gt;
  Splunk
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.splunk.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Splunk&lt;/b&gt;&lt;/a&gt; provides a distributed tracing tool that can ingest all application data for a high-fidelity analysis. It stores all trace data in Splunk Cloud's offering.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Splunk distributed tracing tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No sample full fidelity trace data ingestion
With Splunk, you can capture all trace data to ensure your cloud-native application work the way it is supposed to.&lt;/li&gt;
&lt;li&gt;Full-stack observability
Splunk APM provides a seamless correlation between infrastructure metrics and application performance metrics.&lt;/li&gt;
&lt;li&gt;AI-Driven troubleshooting
Splunk APM provides uses an AI-driven approach to identify error-prone microservices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J7S7lnxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/splunk_distributed_tracing_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J7S7lnxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/splunk_distributed_tracing_dashboard-min.jpg" alt="Splunk distributed tracing dashboard"&gt;&lt;/a&gt;Splunk distributed tracing dashboard (Source: DataDog website)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-distributed-tracing-tool"&gt;
  &lt;/a&gt;
  How to choose the right distributed tracing tool?
&lt;/h2&gt;

&lt;p&gt;Tracing user requests is now critical for maintaining an exemplary user experience. Yes, distributed tracing directly impacts end-user experience as it gives your teams the right insights in the right amount of time to act on issues affecting application performance.&lt;/p&gt;

&lt;p&gt;In our view, distributed tracing tools should be developer first tools. As developers directly utilize these tools in critical situations, the codebase of the tools should be open-source. Open-source is the future of all software tools.&lt;/p&gt;

&lt;p&gt;Transparency and collaboration are some key benefits of open-source software tools. Developers want to see the code first hand, and if there are issues they want to address, they prefer to reach out to an active developer community than a customer support team.&lt;/p&gt;

&lt;p&gt;At the same time, most open-source tools don't provide the same user experience as provided by SaaS vendors. But it doesn't have to be that way. With that objective, we created SigNoz.&lt;/p&gt;

&lt;p&gt;SigNoz is a full-stack open-source application performance monitoring and observability tool. It provides a unified UI for both metrics and traces. Log management is also in the product roadmap and will be launched seen.&lt;/p&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>distributedsystems</category>
      <category>tracing</category>
      <category>monitoring</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 29, Sliders in Tkinter</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 21 Sep 2021 13:03:47 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-29-sliders-in-tkinter-5a6d</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-29-sliders-in-tkinter-5a6d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-let-us-learn-all-about-the-slider-widget-in-tkinter"&gt;
  &lt;/a&gt;
  Today let us learn all about the slider widget in Tkinter
&lt;/h2&gt;




&lt;p&gt;The slider widget is a widget that helps us choose values from a given range in a very interactive and graphical way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-a-slider-widget"&gt;
  &lt;/a&gt;
  Making a slider widget.
&lt;/h3&gt;

&lt;p&gt;We can make the slider widget using the following syntax&lt;br&gt;
&lt;code&gt;slider=Scale(master, from_=0, to=10)&lt;/code&gt; &lt;br&gt;
Parameters&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;master&lt;/code&gt; The main Tk() window.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;from_&lt;/code&gt; The starting value of the slider&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;to&lt;/code&gt; the ending value of the slider.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ennZah39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/du3lrwjchp98k1r0tth3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ennZah39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/du3lrwjchp98k1r0tth3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5l-VHn0r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/to9jg79v0m5xa0btz2ew.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5l-VHn0r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/to9jg79v0m5xa0btz2ew.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#setting-default-value"&gt;
  &lt;/a&gt;
  Setting default value
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;slider.set()&lt;/code&gt; is a method which sets the value of a slider. We can use this to initialize the default value of the slider.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1JGzL-cT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xrc9qlgnkzs6k9m0isb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1JGzL-cT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xrc9qlgnkzs6k9m0isb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;set()&lt;/code&gt; method can also be used to dynamically set the value of the slider variable. &lt;/p&gt;

&lt;p&gt;The program below is an example of the set() method. There is a button which runs a function which resets the value of the slider back to the default values when pressed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"reset"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On pressing the reset button, the value returns back to the default value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y6Cdpkrh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2bjdro1dj1xd9titudg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y6Cdpkrh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2bjdro1dj1xd9titudg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#orientation-of-the-slider"&gt;
  &lt;/a&gt;
  Orientation of the slider.
&lt;/h3&gt;

&lt;p&gt;By default, the slider is vertical. But we can use the &lt;code&gt;orient&lt;/code&gt; property to set the value of orientation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"horizontal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"reset"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQ8QHJS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i4ux523gdnaozry2nxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQ8QHJS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i4ux523gdnaozry2nxc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-the-value-from-the-slider"&gt;
  &lt;/a&gt;
  Getting the value from the slider.
&lt;/h3&gt;

&lt;p&gt;We can get the value of the slider using the &lt;code&gt;slider.get()&lt;/code&gt; method. The program below shows how to get the values of the slider using buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"horizontal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"show"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z2IAtUhO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqn4q0faeg31m1h38qu9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z2IAtUhO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqn4q0faeg31m1h38qu9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pAeqZqBv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ruqfwcqvtxs0dlkp9zi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAeqZqBv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ruqfwcqvtxs0dlkp9zi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-the-interval-length"&gt;
  &lt;/a&gt;
  Setting the interval length
&lt;/h3&gt;

&lt;p&gt;We can display the values of the sliders using the &lt;code&gt;tickinterval&lt;/code&gt; property. We can adjust the interval values of the slider using the &lt;code&gt;tickinterval&lt;/code&gt; attribute.  For example, setting the value to 10 equal will show the result as &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7-u427rz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1gvwrc5ojmu4cnp7id5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7-u427rz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1gvwrc5ojmu4cnp7id5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While setting the value to 1 will show the entire range&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgk5YjNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0bbmf2yc8hl4zxxru6y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgk5YjNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0bbmf2yc8hl4zxxru6y.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tickinterval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"horizontal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"show"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That looked a bit crowded. Didn't it? We can adjust it using the length property of the slider. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x1VD5jjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs88e5zx4f7phm6h0wgh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1VD5jjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs88e5zx4f7phm6h0wgh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the code-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tickinterval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"horizontal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"show"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;resetbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;So friends that was all for today. Tomorrow we will learn about the spinbox widget, and the day after that we will implement a program using the both widgets.&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The Ultimate Python Cheatsheet</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Tue, 21 Sep 2021 13:01:54 +0000</pubDate>
      <link>https://dev.to/abhirajb/the-ultimate-python-cheatsheet-56g7</link>
      <guid>https://dev.to/abhirajb/the-ultimate-python-cheatsheet-56g7</guid>
      <description>&lt;p&gt;The Ultimate Python CheatSheet&lt;/p&gt;

&lt;p&gt;Basics&lt;br&gt;
Basic syntax from the python programming language&lt;/p&gt;

&lt;p&gt;Showing Output To User&lt;br&gt;
the print function is used to display or print output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Content that you wanna print on screen"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Taking Input From User&lt;br&gt;
the input function is used to take input from the user&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;var1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter your name: "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Empty List&lt;br&gt;
This method allows you to create an empty list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Empty Dictionary&lt;br&gt;
By putting two curly braces, you can create a blank dictionary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Range Function&lt;br&gt;
range function returns a sequence of numbers, eg, numbers starting from 0 to n-1 for range(0, n)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comments&lt;br&gt;
Comments are used to make the code more understandable for programmers, and they are not executed by compiler or interpreter.&lt;/p&gt;

&lt;p&gt;Single line comment&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#This is a single line comment
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Multi-line comment&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="s"&gt;'''This is a
multi-line
comment'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Escape Sequence&lt;br&gt;
An escape sequence is a sequence of characters; it doesn't represent itself when used inside string literal or character.&lt;/p&gt;

&lt;p&gt;Newline&lt;br&gt;
Newline Character&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;\&lt;span class="n"&gt;n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Backslash&lt;br&gt;
It adds a backslash&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;\\
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Single Quote&lt;br&gt;
It adds a single quotation mark&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;\&lt;span class="s"&gt;'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tab&lt;br&gt;
It gives a tab space&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;\&lt;span class="n"&gt;t&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Backspace&lt;br&gt;
It adds a backspace&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;\&lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Octal value&lt;br&gt;
It represents the value of an octal number&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;\&lt;span class="n"&gt;ooo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hex value&lt;br&gt;
It represents the value of a hex number&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;\&lt;span class="n"&gt;xhh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Carriage Return&lt;br&gt;
Carriage return or \r is a unique feature of Python. \r will just work as you have shifted your cursor to the beginning of the string or line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;\&lt;span class="n"&gt;r&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Strings&lt;br&gt;
Python string is a sequence of characters, and each character can be individually accessed. Using its index.&lt;/p&gt;

&lt;p&gt;String&lt;br&gt;
You can create Strings by enclosing text in both forms of quotes - single quotes or double-quotes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;variable_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"String Data"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Slicing&lt;br&gt;
Slicing refers to obtaining a sub-string from the given string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;var_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;String Methods isalnum() method&lt;br&gt;
Returns True if all characters in the string are alphanumeric&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalnum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;isalpha() method&lt;br&gt;
Returns True if all characters in the string are alphabet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;isdecimal() method&lt;br&gt;
Returns True if all characters in the string are decimals&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdecimal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;isdigit() method&lt;br&gt;
Returns True if all characters in the string are digits&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;islower() method&lt;br&gt;
Returns True if all characters in the string are lower case&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;islower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;isspace() method&lt;br&gt;
Returns True if all characters in the string are whitespaces&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isspace&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;isupper() method&lt;br&gt;
Returns True if all characters in the string are upper case&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isupper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;lower() method&lt;br&gt;
Converts a string into lower case&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;upper() method&lt;br&gt;
Converts a string into upper case&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;strip() method&lt;br&gt;
It removes leading and trailing spaces in the string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string_variable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List&lt;br&gt;
A List in Python represents a list of comma-separated values of any data type between square brackets.&lt;/p&gt;

&lt;p&gt;List&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;var_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;element1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;element2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List Methods index method&lt;br&gt;
Returns the index of the first element with the specified value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;append method&lt;br&gt;
Adds an element at the end of the list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;extend method&lt;br&gt;
Add the elements of a list (or any iterable) to the end of the current list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;insert method&lt;br&gt;
Adds an element at the specified position&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;pop method&lt;br&gt;
Removes the element at the specified position and returns it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;remove method&lt;br&gt;
The remove( ) method removes the first occurrence of a given item from the list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;clear method&lt;br&gt;
Removes all the elements from the list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;count method&lt;br&gt;
Returns the number of elements with the specified value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;reverse method&lt;br&gt;
Reverse the order of the list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;sort method&lt;br&gt;
Sorts the list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tuples&lt;br&gt;
Tuples are represented as a list of comma-separated values of any data type within parentheses.&lt;/p&gt;

&lt;p&gt;Tuple Creation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;variable_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;element2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tuple Methods count method&lt;br&gt;
It returns the number of times a specified value occurs in a tuple&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;index method&lt;br&gt;
It searches the tuple for a specified value and returns the position.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sets&lt;br&gt;
A set is a collection of multiple values which is both unordered and unindexed. It is written in curly brackets.&lt;/p&gt;

&lt;p&gt;Set Creation: Way 1&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;var_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;element1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;element2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set Creation: Way 2&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;var_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;element1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;element2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set Methods: add() method&lt;br&gt;
Adds an element to a set&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;clear() method&lt;br&gt;
Remove all elements from a set&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;discard() method&lt;br&gt;
Removes the specified item from the set&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;discard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;intersection() method&lt;br&gt;
Returns intersection of two or more sets&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intersection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;set2&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;issubset() method&lt;br&gt;
Checks if a Set is Subset of Another Set&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;issubset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;pop() method&lt;br&gt;
Removes an element from the set&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;remove() method&lt;br&gt;
Removes the specified element from the Set&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;union() method&lt;br&gt;
Returns the union of Sets&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;union&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;set2&lt;/span&gt;&lt;span class="p"&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dictionaries&lt;br&gt;
The dictionary is an unordered set of comma-separated key: value pairs, within {}, with the requirement that within a dictionary, no two keys can be the same.&lt;/p&gt;

&lt;p&gt;Dictionary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;...}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adding Element to a dictionary&lt;br&gt;
By this method, one can add new elements to the dictionary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Updating Element in a dictionary&lt;br&gt;
If the specified key already exists, then its value will get updated&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deleting Element from a dictionary&lt;br&gt;
del let to delete specified key: value pair from the dictionary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dictionary Functions &amp;amp; Methods len() method&lt;br&gt;
It returns the length of the dictionary, i.e., the count of elements (key: value pairs) in the dictionary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;clear() method&lt;br&gt;
Removes all the elements from the dictionary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;get() method&lt;br&gt;
Returns the value of the specified key&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keyname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;items() method&lt;br&gt;
Returns a list containing a tuple for each key-value pair&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;keys() method&lt;br&gt;
Returns a list containing the dictionary's keys&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;values() method&lt;br&gt;
Returns a list of all the values in the dictionary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;update() method&lt;br&gt;
Updates the dictionary with the specified key-value pairs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Conditional Statements&lt;br&gt;
The if statements are the conditional statements in Python, and these implement selection constructs (decision constructs).&lt;/p&gt;

&lt;p&gt;if Statement&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;if-else Statement&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;if-elif Statement&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nested if-else Statement&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statements&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Iterative Statements&lt;br&gt;
An iteration statement, or loop, repeatedly executes a statement, known as the loop body, until the controlling expression is false (0).&lt;/p&gt;

&lt;p&gt;For Loop&lt;br&gt;
The for loop of Python is designed to process the items of any sequence, such as a list or a string, one by one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;sequence&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statements_to_repeat&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While Loop&lt;br&gt;
A while loop is a conditional loop that will repeat the instructions within itself as long as a conditional remains true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;logical&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Break Statement&lt;br&gt;
The break statement enables a program to skip over a part of the code. A break statement terminates the very loop it lies within.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;sequence&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statement1&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;break&lt;/span&gt;
&lt;span class="n"&gt;statement2&lt;/span&gt;
&lt;span class="n"&gt;statement_after_loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Continue Statement&lt;br&gt;
The continue statement skips the rest of the loop statements and causes the next iteration to occur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;sequence&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;statement1&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;continue&lt;/span&gt;
&lt;span class="n"&gt;statement2&lt;/span&gt;
&lt;span class="n"&gt;statement3&lt;/span&gt;
&lt;span class="n"&gt;statement4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Functions&lt;br&gt;
A function is a block of code that performs a specific task. You can pass parameters into a function. It helps us to make our code more organized and manageable.&lt;/p&gt;

&lt;p&gt;Function Definition&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="c1"&gt;# Statements
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;File Handling&lt;br&gt;
File handling refers to reading or writing data from files. Python provides some functions that allow us to manipulate data in the files.&lt;/p&gt;

&lt;p&gt;open() function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;var_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"file name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"opening mode"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;close() function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;var_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read () function&lt;br&gt;
The read functions contains different methods, read(),readline() and readlines()&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#return one big string
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It returns a list of lines&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It returns one line at a time&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;readline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Write () function&lt;br&gt;
This function writes a sequence of strings to the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#Used to write a fixed sequence of characters to a file
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is used to write a list of strings&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;writelines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Append () function&lt;br&gt;
The append function is used to append to the file instead of overwriting it. To append to an existing file, simply open the file in append mode (a):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exception Handling&lt;br&gt;
An exception is an unusual condition that results in an interruption in the flow of the program.&lt;/p&gt;

&lt;p&gt;try and except&lt;br&gt;
A basic try-catch block in python. When the try block throws an error, the control goes to the except block.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Statement&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="n"&gt;processing&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OOPS&lt;br&gt;
It is a programming approach that primarily focuses on using objects and classes. The objects can be any real-world entities.&lt;/p&gt;

&lt;p&gt;class&lt;br&gt;
The syntax for writing a class in python&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;class_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;#Statements
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;class with a constructor&lt;br&gt;
The syntax for writing a class with the constructor in python&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Abhiraj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="c1"&gt;# Default constructor
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Abhiraj"&lt;/span&gt;

&lt;span class="c1"&gt;# A method for printing data members
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_me&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;object&lt;br&gt;
Instantiating an object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;filter function&lt;br&gt;
The filter function allows you to process an iterable and extract those items that satisfy a given condition&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;issubclass function&lt;br&gt;
Used to find whether a class is a subclass of a given class (classinfo) or not&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;issubclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classinfo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Iterators and Generators&lt;br&gt;
Here are some of the advanced topics of the Python programming language like iterators and generators&lt;/p&gt;

&lt;p&gt;Iterator&lt;br&gt;
Used to create an iterator over an iterable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;iter_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'Harry'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Aakash'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Rohan'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iter_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iter_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iter_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Generator&lt;br&gt;
Used to generate values on the fly&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# A simple generator function
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_gen&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This is printed first'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Generator function contains yield statements
&lt;/span&gt;&lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This is printed second'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This is printed at last'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Decorators&lt;br&gt;
Decorators are used to modifying the behavior of function or class. They are usually called before the definition of a function you want to decorate.&lt;/p&gt;

&lt;p&gt;property Decorator (getter)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;property&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;setter Decorator&lt;br&gt;
It is used to set the property 'name'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setter&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deletor Decorator&lt;br&gt;
It is used to delete the property 'name'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deleter&lt;/span&gt; &lt;span class="c1"&gt;#property-name.deleter decorator
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Deleting..'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can support my blogs by buying me a coffee by clicking below...&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/rainboestrykr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="bmc"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>python</category>
      <category>productivity</category>
    </item>
    <item>
      <title>A guide to CSS container queries</title>
      <author>Tom Quinonero</author>
      <pubDate>Tue, 21 Sep 2021 12:46:10 +0000</pubDate>
      <link>https://dev.to/tomquinonero/a-guide-to-css-container-queries-1hho</link>
      <guid>https://dev.to/tomquinonero/a-guide-to-css-container-queries-1hho</guid>
      <description>&lt;p&gt;Right now (September 2021) container query is still an early stage specification.&lt;br&gt;
It is only supported by Chrome with a flag and the implementation might change in the future.&lt;br&gt;
But there is Polyfill based solution that we through at the end of the post.&lt;/p&gt;

&lt;p&gt;In CSS, we can use &lt;code&gt;media-queries&lt;/code&gt; to adapt the layout based on the viewport size. It allows us to adapt the layout based on the screen size of the user.&lt;/p&gt;

&lt;p&gt;We take it for granted but back in the days this was a life changer!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But we can still do better.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-use-case"&gt;
  &lt;/a&gt;
  The use case
&lt;/h2&gt;

&lt;p&gt;We think way more in terms of components nowadays and &lt;strong&gt;we'd like components to behave based on the space they've been given&lt;/strong&gt;, not the layout size.&lt;/p&gt;

&lt;p&gt;Let's say we have a card that supports a narrow and a compact layout.&lt;/p&gt;

&lt;p&gt;Wouldn't that be cool if CSS could switch this layout based on the parent width?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8YipiRI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wynwgnc6di5m3z2ldjia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YipiRI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wynwgnc6di5m3z2ldjia.png" alt="Two card components. One uses an horizontal layout and the other a vertical one."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Selecting the layout based on the viewport doesn't make a lot of sense here. What matter is how much room is available for the card, &lt;strong&gt;the container&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This open to a lot of neat things! We can now let our component adapt their layout seamlessly 🤙&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-code"&gt;
  &lt;/a&gt;
  The code
&lt;/h2&gt;

&lt;p&gt;Container queries needs the container to have a &lt;code&gt;container-type&lt;/code&gt; property. It defines which query type we can use. For example to query the width we'll put the following on the container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;container-type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now use &lt;code&gt;@container&lt;/code&gt; on our component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that is basically it, that simple.&lt;/p&gt;

&lt;p&gt;Have a look at that demo:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/tomquinonero/embed/eYRMzYg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polyfill-to-the-rescue"&gt;
  &lt;/a&gt;
  Polyfill to the rescue
&lt;/h2&gt;

&lt;p&gt;Right now, container queries are &lt;a href="https://chromium-review.googlesource.com/c/chromium/src/+/2784893"&gt;&lt;strong&gt;not supported&lt;/strong&gt; in any browser&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But hold on, we can still make it work. I found the easiest solution to be &lt;a href="https://twitter.com/jon_neal"&gt;Jonathan Neal&lt;/a&gt;'s &lt;a href="https://github.com/jsxtools/cqfill"&gt;CQFill&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We will need to make changes to the CSS&lt;/strong&gt;. Let's add a &lt;code&gt;--css-contain: layout inline-size;&lt;/code&gt; to the container and we'll make a new selector with &lt;code&gt;@media --css-container and (min-width: 400px)&lt;/code&gt; after the &lt;code&gt;@container&lt;/code&gt; one. There is also a &lt;a href="https://github.com/jsxtools/cqfill#usage-with-postcss"&gt;PostCSS plugin&lt;/a&gt; for that.&lt;/p&gt;

&lt;p&gt;Our code now look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;container-type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* For the Polyfill */&lt;/span&gt;
  &lt;span class="py"&gt;--css-contain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="n"&gt;inline-size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* For the Polyfill */&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;--css-container&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll also import the Polyfill itself in our code using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/cqfill"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that will make container queries work on any browser!&lt;/p&gt;

&lt;p&gt;For more information, check out the &lt;a href="https://github.com/jsxtools/cqfill"&gt;CQFill repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is everything needed to get started with container queries, congratulations 🥳&lt;/p&gt;

&lt;p&gt;If you want to apply your fresh knowledge, a good challenge is to create a blog post component that can be used in the main list, in the sidebar and in the recommended post list.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;I'm Tom Quinonero, I write about design systems and CSS, Follow me on twitter for more tips and resources 🤙&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>responsive</category>
      <category>mediaqueries</category>
    </item>
    <item>
      <title>Busting the 10x software engineer myth</title>
      <author>Ari Koponen</author>
      <pubDate>Tue, 21 Sep 2021 12:31:42 +0000</pubDate>
      <link>https://dev.to/apkoponen/busting-the-10x-software-engineer-myth-2gom</link>
      <guid>https://dev.to/apkoponen/busting-the-10x-software-engineer-myth-2gom</guid>
      <description>&lt;p&gt;&lt;em&gt;Leaders often feel proud of their high performers. In reality, having "10x engineers" in your software organization may be a sign of an organization that is set out to fail in the long run.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As an engineering leader, it is very tempting to focus on the few individuals performing well in your organization and build your success around these people. After all, they are – seemingly – the smartest and most reliable people who create the best solution in the shortest amount of time.&lt;/p&gt;

&lt;p&gt;Everyone working in software engineering has seen people who seem to get much more done than others. If not "10x," then at least “5x” or “3x engineers”. When looking at just everyday information, it seems reasonable that some engineers are just inherently more productive than others.&lt;/p&gt;

&lt;p&gt;However, the science behind "10x engineers" is not very solid. The most cited studies on the subject were done decades ago in a very different environment and – more importantly – with a fairly small sample size. One of &lt;a rel="noopener noreferrer" href="https://ieeexplore.ieee.org/document/8804291"&gt;the most interesting recent studies&lt;/a&gt; comes to a very different conclusion. In a controlled environment, the variation between most software engineers is much more modest. There is also a significant variation in how the same person performs across multiple tasks. A person who outperforms others in some task may be average in another. “In summary, while programmers are better and/or faster than others, the importance and scale has been greatly exaggerated.”&lt;/p&gt;

&lt;p&gt;The myth of 10x engineers is a great example of confirmation bias at work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-explains-productivity-differences-if-not-mere-individual-talent"&gt;
  &lt;/a&gt;
  What explains productivity differences, if not mere individual talent?
&lt;/h2&gt;

&lt;p&gt;When we take into account the surrounding environment – the organization as a whole – it is easy to spot multiple factors that affect performance in addition to individual talent. Do these two engineers have the same experience with the technology at hand? How familiar are they with the system they're working on? Do they have the same ability to make decisions on the go? How easily can they get help?&lt;/p&gt;

&lt;p&gt;Now, take a look at your “wow that person gets things done” -experiences with these factors in mind. They often become quite mundane. People love heroics and relish the possibility of working with “the best.” It is a comforting reality. Much nicer than being honest about the challenges and realities in the organization. The things that hinder performance. Things that often feel very hard – if not impossible – to change.&lt;/p&gt;

&lt;p&gt;As a real-life example, I once worked with a company where the company’s leadership considered a specific developer infinitely better than the others. The company's CEO would walk into the space where the developers worked and loudly comment – even to outsiders – “sometimes it feels like X is the only developer who gets anything done.” The developer was visibly proud of the feedback. Others were left obviously demotivated.&lt;/p&gt;

&lt;p&gt;No one talked about the fact that this particular developer had been developing the same system for the past 15 years, the first five almost alone. He relished being “the best." Wrote hard-to-understand procedural code to 5000-line files. Did not actively share knowledge with his peers. Over the years, some capable developers had joined the company. Most of them decided to move on. The ones left were happy to coast along and leave all the heroics to the “10x engineer.” As a result, the company had great difficulties in trying to scale its development efforts.&lt;/p&gt;

&lt;p&gt;This is, of course, a very extreme example but illustrates the problem well. Having a tiny percentage of high-performing engineers is often a symptom of bigger organizational issues like siloing or imbalance in power and responsibility. It is not just the natural order of things that is impossible for you to fight against.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-a-better-strategy-for-achieving-business-success"&gt;
  &lt;/a&gt;
  Building a better strategy for achieving business success
&lt;/h2&gt;

&lt;p&gt;From the perspective of the business's overall success, finding a few 10x unicorn developers is not what will make it or break it for you in the long run. The real key to success is to improve the average performance of everyone in the company. This is – statistically speaking – a more viable strategy.&lt;/p&gt;

&lt;p&gt;The likelihood for those unicorns staying in your company for 5 or 10 years is also very low – unless you have a somehow extraordinary company. Even if they stay, they’ll be changing teams – and every time, they leave the teams built around their behavior scrambling. Again, hurting your overall ability to execute your business goals.&lt;/p&gt;

&lt;p&gt;Instead, improving your organization to make more people productive will reap the greatest benefits. It will allow you to hire more people who can succeed in your engineering organization. The broader you can turn the pool of people you feel “could do great work at our company,” the better your odds for scaling with success. This realization should make us more holistic. Turn our attention from individuals to groups of people: teams, departments, and the whole organization.&lt;/p&gt;

&lt;p&gt;This is good news. There is plenty of good research on software team performance. If your team is struggling with too many bugs in production or you have issues with shipping changes quickly take a look at the &lt;a rel="noopener noreferrer" href="https://cloud.google.com/blog/products/devops-sre/using-the-four-keys-to-measure-your-devops-performance"&gt;DORA metrics&lt;/a&gt;. If your team does not collaborate well together or team members are not taking ownership, learn &lt;a rel="noopener noreferrer" href="https://rework.withgoogle.com/guides/understanding-team-effectiveness/steps/foster-psychological-safety/"&gt;how to foster psychological safety&lt;/a&gt;. To understand the full landscape of developer productivity, check out the &lt;a rel="noopener noreferrer" href="https://queue.acm.org/detail.cfm?id=3454124"&gt;SPACE framework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Whatever you do, the key to success is to understand your team's bottlenecks and take action together with the team to improve the situation. Some things need one-off changes. Other's require habits. All team habits should be documented into a common &lt;a href="https://www.swarmia.com/product/ways-of-working/"&gt;working agreement that everyone is aware of and follows&lt;/a&gt;. Useful habits compound over time and create productive teams and organizations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  &lt;strong&gt;TL;DR;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The best strategy for most companies is not a relentless focus on trying to hire “the best” in hopes of finding 10x unicorn engineers. Rather, it is to make sure that the normal, capable engineers you can hire and retain perform their best. The organizations that can turn ordinary teams into high-performing ones will be the winners – and the engineers in them too.&lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;p&gt;(Cover image: A 10x engineer at work in Chernobyl. The Hollywood Archive / Avalon)&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>career</category>
      <category>leadership</category>
    </item>
    <item>
      <title>Should I use SQLite, PostgreSQL, or MySQL?</title>
      <author>Saji Wang</author>
      <pubDate>Tue, 21 Sep 2021 12:26:39 +0000</pubDate>
      <link>https://dev.to/codesphere/should-i-use-sqlite-postgresql-or-mysql-1o4b</link>
      <guid>https://dev.to/codesphere/should-i-use-sqlite-postgresql-or-mysql-1o4b</guid>
      <description>&lt;p&gt;Database Management Systems (DBMS), in short, are collections of tools used to access and manipulate the data stored in a database. There are lots of different types of DB management systems but the most widely used are Relational Database Management Systems (RDBMSs). &lt;/p&gt;

&lt;p&gt;RDBMSs use the relational model to store data in the form of tables (referred to as relations). Each relation is then further organized into rows (tuples) and columns (attributes). A relation is managed and/or queried using Structured Query Language (SQL).&lt;/p&gt;

&lt;p&gt;There are many dialects of SQL, the three most popular of which are SQLite, PostgreSQL, and MySQL. Each has its own limitations and use cases, so let's take a look at &lt;strong&gt;when to use each to see which one might be the best fit for your next project.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yilm8BCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fz5mu9ulfmcaxq6lxg7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yilm8BCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fz5mu9ulfmcaxq6lxg7.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Let's start with a look at by far the most popular of the three - MySQL. Used by Google, Linkedin, Amazon, Netflix, and Twitter, it is an easily accessible, high-performing system that is most commonly used for web-based applications.&lt;/p&gt;

&lt;p&gt;MySQL is built into major content management systems like WordPress, so you can't go far online without finding something that is supported by it.&lt;/p&gt;

&lt;p&gt;Written in C and C++ and ACID compliant, MySQL is commonly used for enterprise applications thanks to its scalability, replication, and security features. It's also the go-to system if speed is a requirement for your application because the exclusion of some more advanced features MySQL is lightweight while still delivering high performance.&lt;/p&gt;

&lt;p&gt;MySQL's popularity also means it has the best resources to take advantage of. It's part of the Oracle ecosystem so if you're looking for support you'll have no trouble finding tools for management, monitoring, and learning.&lt;/p&gt;

&lt;p&gt;Overall MySQL provides a reliable DB solution that's simple to set up and requires minimal developer input. This, along with its great toolset and multi-user feature support, makes it the most accessible option out there.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use%C2%A0mysql"&gt;
  &lt;/a&gt;
  When to use MySQL:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Websites and Web-based applications&lt;/strong&gt; - MySQL's easy setup, huge support community, and robust security features make it a great choice for most websites and applications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;When speed is a requirement&lt;/strong&gt; - At the expense of some more advanced features you might find in PostgreSQL, MySQL is able to optimize speed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Distributed operations&lt;/strong&gt; - thanks to its replication support MySQL is the best choice for distributed database setups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;For predicted scaling and growth&lt;/strong&gt; - Thanks again to that wonderful replication support, it is easy to implement horizontal scaling on MySQL, so if your website is expected to take off, MySQL is your best choice.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rgw6yDR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skevmjtrhl7m5haz08tx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rgw6yDR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skevmjtrhl7m5haz08tx.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PostgreSQL is an open-source object RDBMS that is typically used in more complex websites and applications that require a customizable DB solution. PostgreSQL is ACID-compliant and is used by companies such as Apple and Cisco. Like MySQL, PostgreSQL also offers features such as security and replication. &lt;/p&gt;

&lt;p&gt;PostgreSQL is known for supporting a lot of data types and having deep functionality, but this comes at the cost of a more intensive setup than MySQL. It's more popular in teams that already have dedicated DB specialists as they can create and implement custom PostgreSQL functions in a variety of languages like C, C++, and Java.&lt;/p&gt;

&lt;p&gt;PostgreSQL is the go-to solution for complex analytical processes. It does, however, take a more specialist toolset to manage and due to its highly customizable nature, it can be harder to find support resources than MySQL. There may not always be a solution available for your specific issue in the forums and documentation but there are paid third-party setup services available, making it a viable solution for companies with specialized DB needs to have their system set up and their team trained.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use-postgresql"&gt;
  &lt;/a&gt;
  When to use PostgreSQL:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;For complex queries and operations&lt;/strong&gt; - PostgreSQL's ability to support multiple concurrent writers and query plans that can make use of multiple CPUs make it the clear choice for complex tasks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;When customizability is needed&lt;/strong&gt; - An extensive amount of customizability gives you far more control over MySQL when it comes to database setup.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data Warehousing&lt;/strong&gt; - Due to its ability to read/write at fast speeds, PostgreSQL is perfect for data analysis applications.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHUAqi1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlswfph3a09r7tk1dlrd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHUAqi1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlswfph3a09r7tk1dlrd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SQLite is a server-less and self-contained database that does not require any setup or installation to get started. Also known as an embedded database, SQLite runs as part of the app itself instead of part of a separate server process. &lt;/p&gt;

&lt;p&gt;SQLite is the most compact and easy-to-use entry of the three and is also ACID adherent. While it is a great out the box solution for low to medium traffic websites, its lack of versatility and feature set found in its more complete counterparts give it some major disadvantages. &lt;/p&gt;

&lt;p&gt;SQLite is best implemented in embedded software - anything that only requires a small amount of data to be saved or even websites with the south of 100k visitors a day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use%C2%A0sqlite"&gt;
  &lt;/a&gt;
  When to use SQLite:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Embedded applications&lt;/strong&gt; - when you want to save a small amount of data, systems like a telephone, fitness tracker, or air conditioning system would be a great time to use SQLite.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Low traffic website&lt;/strong&gt; - SQLite isn't the best choice for huge amounts of data or users, but for small operations, the no-setup and config requirements make SQLite the way to go.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt; - A great lightweight alternative to fast testing without the need to implement an actual database.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#horses-for%C2%A0courses"&gt;
  &lt;/a&gt;
  Horses for courses
&lt;/h3&gt;

&lt;p&gt;Looking at all three libraries it's clear that while they all have pros and cons, a direct comparison doesn't make sense, they all fill a specific need. MySQL with its great feature set, community support, and easy setup, is the best allrounder for most web-based applications. PostgreSQL is the way to go for high customizability and specific database requirements, and SQLite is the best option for an application with low DB storage needs or a website with low traffic.&lt;/p&gt;

&lt;p&gt;It's different horses for different courses, but here are some bonus rounds to help you a clearer picture:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h4&gt;

&lt;p&gt;All three options are open-source so they are completely free to implement!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-queries%C2%A0"&gt;
  &lt;/a&gt;
  Data Queries 
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MySQL - Is more &lt;em&gt;resource-efficient&lt;/em&gt; because it offers a scalable buffer pool to pull cache.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PostgreSQL - is more &lt;em&gt;organized&lt;/em&gt; because it isolates processes by treating them as a separate OS process.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#temporary-tables"&gt;
  &lt;/a&gt;
  Temporary tables
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;PostgreSQL - offers a lot more functionality than MySQL. Tables can be divided into local and global to be configured with flexible variables. If you're developing an application with a lot of complex processes, this is the choice for you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#memoryoptimized-tables%C2%A0"&gt;
  &lt;/a&gt;
  Memory-Optimized tables 
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MySQL - Memory-optimized tables are basically the native approach of MySQL is the best option and a great way to save resources.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Open source solutions like the ones we've looked at today are the best options for flexibility, cost efficiency, and innovation, but which one you use depends entirely on your needs.&lt;/p&gt;

&lt;p&gt;MySQL is the clear option for most applications and PostgreSQL is the choice for more complex and custom projects. SQLite is your best friend for small operations and embedded systems.&lt;/p&gt;




&lt;p&gt;At &lt;a href="https://link.codesphere.com/DR"&gt;Codesphere&lt;/a&gt;, we are happy to announce that we just added support for setting up SQLite databases seamlessly in a project, but more on that later this week!&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>sql</category>
      <category>database</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>PHP foreach() loop for indexed and associative arrays</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 21 Sep 2021 12:13:43 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/php-foreach-loop-for-indexed-and-associative-arrays-502i</link>
      <guid>https://dev.to/hrishikesh1990/php-foreach-loop-for-indexed-and-associative-arrays-502i</guid>
      <description>&lt;p&gt;In this tutorial, we look at the PHP foreach() loop. We also look at how to use it while working with an indexed or associative array.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-php-foreach"&gt;
  &lt;/a&gt;
  Table of Contents - PHP foreach:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-foreach-in-php"&gt;What is foreach()?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#code-amp-explanation"&gt;Code and Explanation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Indexed arrays&lt;/li&gt;
&lt;li&gt;Associative arrays&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-foreach-in-php"&gt;
  &lt;/a&gt;
  What is foreach in PHP?
&lt;/h2&gt;

&lt;p&gt;The foreach() method is used to loop through the elements in an indexed or associative array. It can also be used to iterate over objects. This allows you to run blocks of code for each element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-php-foreach"&gt;
  &lt;/a&gt;
  Syntax of PHP foreach():
&lt;/h3&gt;

&lt;p&gt;The foreach() method has two syntaxes, one for each type of array.&lt;/p&gt;

&lt;p&gt;The syntax for indexed arrays is as given in the following code block:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The syntax for associative arrays:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, “Iterable” is the required parameter. It is the array or the variable containing the array. “$value” is a variable that stores the current element in each iteration.&lt;/p&gt;

&lt;p&gt;Associated array, uses keys and values, and hence the $key &amp;amp; $values in the second syntax represent the same accordingly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-amp-explanation"&gt;
  &lt;/a&gt;
  Code &amp;amp; Explanation:
&lt;/h2&gt;

&lt;p&gt;In this section, we first look at how the foreach() function works on an indexed array followed by which we look at it’s working on an associative array.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#php-foreach-on-indexed-arrays"&gt;
  &lt;/a&gt;
  PHP Foreach() on Indexed arrays:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$flexiple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Hire"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"top"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"freelance"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"developers"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$flexiple&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt;br&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the above code snippet would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Hire&lt;/span&gt;
&lt;span class="nc"&gt;Top&lt;/span&gt;
&lt;span class="nc"&gt;Freelance&lt;/span&gt;
&lt;span class="n"&gt;developers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;PHP Foreach() on an Associative array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
&lt;span class="nv"&gt;$freelancer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
    &lt;span class="s2"&gt;"name"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Eric"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s2"&gt;"email"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Eric@gmail.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s2"&gt;"age"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s2"&gt;"gender"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"male"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="c1"&gt;// Loop through employee array &lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$freelancer&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;": "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;br&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the above code snippet would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Eric&lt;/span&gt;
&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Eric&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
&lt;span class="n"&gt;gender&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;male&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let’s look at a case where we pass a second argument. As you can see the key and the values of the associative array were printed. Additionally, we replaced “=&amp;gt;” with a “:” to make it more readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts:
&lt;/h2&gt;

&lt;p&gt;The foreach() method would return an error in case you use it on variables with a different data type. Additionally, the foreach() method does not modify the values of the internal pointer.&lt;/p&gt;

&lt;p&gt;Once you have understood the working to the foreach() method try working with the for loop.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>DevOps vs SRE: What's The Difference?</title>
      <author>Mike Levan</author>
      <pubDate>Tue, 21 Sep 2021 12:05:01 +0000</pubDate>
      <link>https://dev.to/thenjdevopsguy/devops-vs-sre-what-s-the-difference-560d</link>
      <guid>https://dev.to/thenjdevopsguy/devops-vs-sre-what-s-the-difference-560d</guid>
      <description>&lt;p&gt;Titles in the engineering space are a funny thing. They're important, but they're not important. The importance of a title comes from the salary/job you can get, for example, someone with a DevOps Engineer title gets paid pretty well. However, the title doesn't mean the person with "DevOps Engineer" on their resume is any smarter or more advanced than someone with "systems administrator" or "systems engineer" on their resume.&lt;/p&gt;

&lt;p&gt;The point is, titles are an odd form of justification.&lt;/p&gt;

&lt;p&gt;Arguably the oddest one of all is DevOps Engineer vs Site Reliability Engineer (SRE).&lt;/p&gt;

&lt;p&gt;What are the differences? Is one better than the other? What does it all actually mean? &lt;/p&gt;

&lt;p&gt;In this blog post, you'll learn about the differences between SRE and DevOps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#title-janga"&gt;
  &lt;/a&gt;
  Title Janga
&lt;/h2&gt;

&lt;p&gt;Titles are like Janga. Constantly changing, evolving, and the playing field is always being altered. One wrong move and we'll have ourselves a DevGitSecurityKubernetesDockerNetworkingCloudTerraform Engineer.&lt;/p&gt;

&lt;p&gt;The hottest titles right now to have on your resume are DevOps Engineer and SRE. Why? Because it's what the world thinks, or appears to think that they need right now.&lt;/p&gt;

&lt;p&gt;When you break it down and read between the lines, a company is typically looking for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloud experience&lt;/li&gt;
&lt;li&gt;CICD experience&lt;/li&gt;
&lt;li&gt;Some container and orchestration experience&lt;/li&gt;
&lt;li&gt;Infrastructure-as-Code/Configuration Management experience&lt;/li&gt;
&lt;li&gt;Scripting experience&lt;/li&gt;
&lt;li&gt;Monitoring and troubleshooting experience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you look at the list above, you may be thinking to yourself &lt;em&gt;wow, that's a lot&lt;/em&gt;. The answer is &lt;em&gt;yep, it is&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The reason why is because being an SRE or a DevOps engineer isn't an entry-level position. It takes years to collect all of the skills needed and to use them the proper way.&lt;/p&gt;

&lt;p&gt;The idea is to break down the job description and not care about the title. If you see an SRE role that looks more like a Systems Administrator, it's probably not the best environment to be in. Don't be fooled by the titles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-sre"&gt;
  &lt;/a&gt;
  The SRE
&lt;/h2&gt;

&lt;p&gt;You'll hear debates about this topic a lot in the SRE space - &lt;em&gt;should we follow Google's definition of an SRE?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The answer is yes for a few reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Google created the SRE, which means they definitely know what the role should be.&lt;/li&gt;
&lt;li&gt;Google has constantly strived for perfection from the SRE role and has succeeded.&lt;/li&gt;
&lt;li&gt;The definition is really spot on and it works.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what's an SRE?&lt;/p&gt;

&lt;p&gt;An SRE is someone who thinks about infrastructure from the lens of a Software Engineer/Developer.&lt;/p&gt;

&lt;p&gt;In the not too long ago past, developers cared about getting features out and shipping code, whereas infrastructure people cared about keeping the systems stable. The two biggest fights amongst the groups were &lt;em&gt;the systems only have issues when new code is introduced&lt;/em&gt; and &lt;em&gt;the systems can't handle the new code changes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;These were all valid arguments because both were true. With that, the SRE title was born.&lt;/p&gt;

&lt;p&gt;An SRE is someone who understands the infrastructure all the way down to the operating system bits. They know how systems work and how to keep them efficient. They have to know that stuff because code runs on those systems, and the only way for code to run efficiently is by having systems that are up and operational.&lt;/p&gt;

&lt;p&gt;Systems can be anything from bare metal to virtual machines to EC2 instances in AWS to virtual machines in Azure to Kubernetes to Serverless services in any public cloud. A system is anywhere that code is running.&lt;/p&gt;

&lt;p&gt;A few key job responsibilities of an SRE are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Monitoring systems&lt;/li&gt;
&lt;li&gt;Monitoring application performance&lt;/li&gt;
&lt;li&gt;Fixing on-call issues that may occur. This means figuring out why the issue occurred and fix it.&lt;/li&gt;
&lt;li&gt;Conduct blameless post mortems&lt;/li&gt;
&lt;li&gt;Write code for automation and create internal tools primarily in Python, Go, and using Infrastructure-as-Code.&lt;/li&gt;
&lt;li&gt;All of the DevOps duties (CICD, automation, etc.). The idea is to use automation to make everything repeatable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-devops-engineer"&gt;
  &lt;/a&gt;
  The DevOps Engineer
&lt;/h2&gt;

&lt;p&gt;In the previous section, &lt;strong&gt;The SRE&lt;/strong&gt;, you probably thought to yourself &lt;em&gt;a lot of that overlaps with what DevOps is&lt;/em&gt;, and you're absolutely correct.&lt;/p&gt;

&lt;p&gt;With that being said, what is DevOps?&lt;/p&gt;

&lt;p&gt;DevOps is a subset of SRE. They typically do a fraction of what an SRE does (in an organization that's using the SRE title properly).&lt;/p&gt;

&lt;p&gt;A DevOps Engineer is typically someone that's hired to do a lot of CICD, deploy code, and automate system creation. The unfortunate thing about a DevOps Engineer is that they're typically on a completely separate team than the developers.&lt;/p&gt;

&lt;p&gt;The question becomes &lt;em&gt;so how do they know anything about the code they're deploying&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;That's a battle that many hardcore engineers and developers have constantly. Pretty much what it comes down to is the simple fact that there are a lot of tools on the DevOps tool belt and a lot of developers are there to write code and plan the way an application will look. They really don't have the time to also handle the 10-15 different DevOps-related tools. Because of that, is why we have the DevOps Engineer title today.&lt;/p&gt;

&lt;p&gt;A few key job responsibilities of a DevOps engineer are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CICD&lt;/li&gt;
&lt;li&gt;Infrastructure-as-Code&lt;/li&gt;
&lt;li&gt;Automation&lt;/li&gt;
&lt;li&gt;Cloud management&lt;/li&gt;
&lt;li&gt;Scripting&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-direction-should-you-go-in"&gt;
  &lt;/a&gt;
  What Direction Should You Go In?
&lt;/h2&gt;

&lt;p&gt;The question of which direction you should go in is one that no one can answer for you, but there's a pretty easy way to find out which.&lt;/p&gt;

&lt;p&gt;The answer is simple - don't put too much emphasis on the title when you're searching.&lt;/p&gt;

&lt;p&gt;What you want to do is look at the job description. Why? Because the hiring world is extremely confused right now about what an SRE or a DevOps Engineer actually is. There's no definition that everyone is following, which is why you'll see job descriptions that are completely different from one another.&lt;/p&gt;

&lt;p&gt;What you should really be doing is look at the job description and see if it lines up with what you want to be doing and what will be beneficial for your career. If the title is DevOps, cool. If the title is SRE, cool. It doesn't really matter because when you're looking for a new job or to go out on your own and consult, no one really cares about the title you had. They care about the job responsibilities you've done.&lt;/p&gt;

</description>
      <category>sre</category>
      <category>devops</category>
      <category>engineering</category>
      <category>leadership</category>
    </item>
    <item>
      <title>A Nice Developer Joke For Today</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Tue, 21 Sep 2021 12:00:03 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/a-nice-developer-joke-for-today-351j</link>
      <guid>https://dev.to/dailydeveloperjokes/a-nice-developer-joke-for-today-351j</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3TrGczw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e12596739999.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3TrGczw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e12596739999.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ❤️ if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
      <category>watercooler</category>
    </item>
  </channel>
</rss>
