<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How we upload File with some data to nodeJS using Simple Form </title>
      <author>Deepak</author>
      <pubDate>Sat, 18 Dec 2021 07:50:27 +0000</pubDate>
      <link>https://dev.to/deepakjaiswal/how-we-upload-file-with-some-data-to-nodejs-using-simple-form-1he2</link>
      <guid>https://dev.to/deepakjaiswal/how-we-upload-file-with-some-data-to-nodejs-using-simple-form-1he2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h2&gt;

&lt;p&gt;first you have to install some libraray to your to your project&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;npm i express multer mongoose&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#indexjs"&gt;
  &lt;/a&gt;
  index.js
&lt;/h2&gt;

&lt;p&gt;app.use(express.static(__dirname('/public'))&lt;br&gt;
//set folder as static folder&lt;br&gt;
app.use(express.urlencoded({extended:false}))&lt;br&gt;
//set req.body of data are accessible from index.html&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;form action="/api/post" method="post" enctype="multipart/form-data" &amp;gt;&lt;br&gt;
&amp;lt;input type="text" name="name"/&amp;gt;&lt;br&gt;
&amp;lt;input type="email" name="email"/&amp;gt;&lt;br&gt;
&amp;lt;input type="file" name="file" id="file" /&amp;gt;&lt;br&gt;
&amp;lt;nput type="submit" /&amp;gt;&lt;br&gt;
&amp;lt;/form&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#indexjs"&gt;
  &lt;/a&gt;
  index.js
&lt;/h2&gt;

&lt;p&gt;`const upload = multer({ dest: 'uploads/' })&lt;/p&gt;

&lt;p&gt;const app = express()&lt;br&gt;
//this code for single file upload&lt;br&gt;
app.post('/api/post', upload.single('file'), function (req, res, next) {&lt;br&gt;
  const {name,email}=req.body&lt;br&gt;
  // req.file is the &lt;code&gt;file&lt;/code&gt; file&lt;br&gt;
     res.send({name,email,filename:req.file.filename})&lt;br&gt;
  // req.body will hold the text fields, if there were any&lt;br&gt;
})&lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>database</category>
    </item>
    <item>
      <title>How HTML attributes and CSS properties use name/value pairs.</title>
      <author>Jay Prakash</author>
      <pubDate>Sat, 18 Dec 2021 06:34:39 +0000</pubDate>
      <link>https://dev.to/jaysingh9518/how-html-attributes-and-css-properties-use-namevalue-pairs-40pj</link>
      <guid>https://dev.to/jaysingh9518/how-html-attributes-and-css-properties-use-namevalue-pairs-40pj</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nHnXlqKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vltnn6eiryr5lc6st4cq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHnXlqKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vltnn6eiryr5lc6st4cq.jpg" alt="Image description" width="880" height="705"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Path aliases in Nextjs</title>
      <author>Alexander Kim</author>
      <pubDate>Sat, 18 Dec 2021 05:31:45 +0000</pubDate>
      <link>https://dev.to/avxkim/path-aliases-in-nextjs-4pio</link>
      <guid>https://dev.to/avxkim/path-aliases-in-nextjs-4pio</guid>
      <description>&lt;p&gt;Tired of writing such imports?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../../components/Test.tsx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're using a typescript, you can create a path alias instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"compilerOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"baseUrl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"paths"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"@/*"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"./*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; 
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you can import more conveniently:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/components/Test.tsx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Don't forget to restart your running task to affect changes.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Deploy your Deep Learning model with Flask, on AWS EC2 Instance</title>
      <author>Dishant</author>
      <pubDate>Sat, 18 Dec 2021 05:08:45 +0000</pubDate>
      <link>https://dev.to/dishant2001/deploy-your-deep-learning-model-with-flask-on-aws-ec2-instance-5h34</link>
      <guid>https://dev.to/dishant2001/deploy-your-deep-learning-model-with-flask-on-aws-ec2-instance-5h34</guid>
      <description>&lt;p&gt;Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides secure, resizable compute capacity in the cloud. It is designed to make web-scale cloud computing easier for developers. AWS Free Tier provides 750 hours per month of Linux, RHEL, SLES t2.micro or t3.micro instances and 750 hours per month of Windows t2.micro or t3.micro instances. &lt;/p&gt;

&lt;p&gt;Any individual can Sign Up and use these services for free for 12 months. Your services will be activated after 24 hours of signing up.&lt;/p&gt;

&lt;p&gt;In this blog, I have demonstrated deployment of trained deep learning models with your Flask app, on AWS EC2 instances. &lt;/p&gt;

&lt;p&gt;I deployed a trained TensorFlow Deep Learning Flask API step by step, from scratch, along with setting up all the necessary resources and packages. &lt;/p&gt;

&lt;p&gt;The model is based on Transformer Neural Networks and was trained in Google Colab’s GPU runtime.&lt;/p&gt;

&lt;p&gt;So let’s get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-setting-up-your-aws-ec2-instance"&gt;
  &lt;/a&gt;
  Step 1: Setting Up your AWS EC2 instance
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--34gYJLs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/krjc4kwr1yrco25e8ml0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--34gYJLs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/krjc4kwr1yrco25e8ml0.png" alt="Image description" width="866" height="643"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the services dropdown, click “Compute”. This opens another right panel, as shown in the above pic. Click on the EC2 option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H3mJCtTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h1o7s4ihy8qumgqjtnk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H3mJCtTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h1o7s4ihy8qumgqjtnk.png" alt="Image description" width="880" height="296"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will see all your ec2 type instances running. Click “Launch Instances” to launch a new instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mSUu_6ug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53ayhnzd1yz10bbo72kg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mSUu_6ug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53ayhnzd1yz10bbo72kg.png" alt="Image description" width="880" height="223"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose your Ubuntu machine, here I have chosen Ubuntu Server 20.04 LTS, SSD Volume Type ,64-bit (x86).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3ox_R2z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h31pxww8e6pz9vvsqmws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3ox_R2z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h31pxww8e6pz9vvsqmws.png" alt="Image description" width="880" height="412"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose your instance type as t2.micro. Obviously, this is the only choice available for Free Tier. We’ll be modifying the memory partitions according to us, and increasing the internal storage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ey59baqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2tx98mg15955y8h2rmy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ey59baqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2tx98mg15955y8h2rmy.png" alt="Image description" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“Review and Launch” the instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AnfEJVoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kohpxbny9zzcafwnuk5r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnfEJVoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kohpxbny9zzcafwnuk5r.png" alt="Image description" width="820" height="541"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“Create a new key pair” to connect to your instance securely and remotely with SSH protocol. Name it and download it to the same folder with your Flask app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fpSi8_12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8loh9wix04lnqj5r4kd9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fpSi8_12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8loh9wix04lnqj5r4kd9.png" alt="Image description" width="818" height="656"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You’ll see your instance up and running. You can rename it as you want. I renamed it as “test_deploy”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lHodVPuR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6oaavdcv370wkl8tw2bm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lHodVPuR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6oaavdcv370wkl8tw2bm.png" alt="Image description" width="880" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we’ll be creating a security group for our instance.&lt;/p&gt;

&lt;p&gt;A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. Here, in the instances, scroll right and you will see the current default security groups for your instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NKhsI4Mt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuuzr99i4snoikggeqcw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NKhsI4Mt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuuzr99i4snoikggeqcw.png" alt="Image description" width="880" height="235"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to the Security Groups from the left panel, you see all the currently available Security Groups. &lt;/p&gt;

&lt;p&gt;“Create security group”. Give it a name, a description and click on “Add rule” to add your inbound rule.&lt;/p&gt;

&lt;p&gt;In my instance, I have set the type to “All Traffic” to allow access to all the available ports, and Source to “Anywhere with IPv4” which sets the Classless IP as 0.0.0.0/0 to allow any address. You can set these according to your requirements and what ports you want to expose.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tpDzPd5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w817uro9ygpnzxx9p93d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tpDzPd5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w817uro9ygpnzxx9p93d.png" alt="Image description" width="880" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Going back to the instances, &lt;br&gt;
right-click on your instance → Security → Change Security Groups.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-hhydJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i38p3vxukmj0o7gd78nq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-hhydJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i38p3vxukmj0o7gd78nq.png" alt="Image description" width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the search bar, you would see your created security group. Click on your security group, click on “Add Security Group”, and finally click “Save”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5CUgcL2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2q20lveskvk4nzy4qcy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5CUgcL2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2q20lveskvk4nzy4qcy.png" alt="Image description" width="880" height="518"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, going back to the Instances, you will see your security group applied to your instance.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-2-installing-necessary-software-for-ssh-remote-connection"&gt;
  &lt;/a&gt;
  Step 2: Installing necessary software for SSH remote connection
&lt;/h2&gt;

&lt;p&gt;We’ll not be typing each command in the terminal, instead we will be using light software like PuTTY, PuTTYgen (for PEM to PPK conversion), and WinSCP to establish SSH (Secure Shell) remote control.&lt;/p&gt;

&lt;p&gt;Download Links: &lt;br&gt;
PuTTYgen: &lt;a href="https://the.earth.li/%7Esgtatham/putty/0.76/w64/puttygen.exe"&gt;https://the.earth.li/~sgtatham/putty/0.76/w64/puttygen.exe&lt;/a&gt;&lt;br&gt;
PuTTY: &lt;a href="https://the.earth.li/%7Esgtatham/putty/0.76/w64/putty.exe"&gt;https://the.earth.li/~sgtatham/putty/0.76/w64/putty.exe&lt;/a&gt;&lt;br&gt;
WinSCP: &lt;a href="https://winscp.net/download/WinSCP-5.19.5-Setup.exe"&gt;https://winscp.net/download/WinSCP-5.19.5-Setup.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Start the puttygen.exe and load the .pem file from your directory. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pso81NjN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzpqrjxxthj5nbl2vddd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pso81NjN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzpqrjxxthj5nbl2vddd.png" alt="Image description" width="738" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_P7lzvS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cotmnnb8tt1coylprs67.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_P7lzvS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cotmnnb8tt1coylprs67.png" alt="Image description" width="666" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Provide the generated .ppk (putty private key) file with a name and save it in the same directory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a5My4BEK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7y0agdbjgwiueu3i5wz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a5My4BEK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7y0agdbjgwiueu3i5wz.png" alt="Image description" width="711" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, start WinSCP to establish SSH remote control.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Vk0Dwf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysww6tob2izwec5t6y90.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Vk0Dwf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysww6tob2izwec5t6y90.png" alt="Image description" width="646" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the Public IP address for your instance and paste it in the “Host Name” field. Click the “Advanced” option, select Authentication beneath SSH and load the previously generated .ppk file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g9OW7mjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlpbiafoj3piph635e7j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g9OW7mjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlpbiafoj3piph635e7j.png" alt="Image description" width="880" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xddAvrkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3htm6p3nebx9xqjim09o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xddAvrkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3htm6p3nebx9xqjim09o.png" alt="Image description" width="880" height="352"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter User Name as “ubuntu”, click save, and then click login.&lt;/p&gt;

&lt;p&gt;Congo!! Now you have successfully remote controlled your AWS EC2 instance. &lt;/p&gt;

&lt;p&gt;The left panel now shows your local directory, and the right panel shows the ubuntu remote directory. &lt;br&gt;
Transfer your program files just by dragging and dropping them into the right panel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yipotLbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlc4m76lgemm5fx7csnz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yipotLbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlc4m76lgemm5fx7csnz.png" alt="Image description" width="880" height="565"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, it’s time to start the remote machine’s terminal. Start putty.exe.&lt;br&gt;
Paste your instance public IP in the “Host Name” field.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FlJqZAvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imx4qafsqksapnaslp2f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FlJqZAvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imx4qafsqksapnaslp2f.png" alt="Image description" width="509" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to SSH → Auth in the left panel, and load the .ppk file again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BV1TFLJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4s0yayhjgfd9m5hp9ek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BV1TFLJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4s0yayhjgfd9m5hp9ek.png" alt="Image description" width="500" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the “Session” option in the left panel to come back, enter a name for your session and click “Save”.&lt;br&gt;
I entered the name as “test_deploy”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JpNaQmB0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3554jl7vzgachn2colxz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JpNaQmB0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3554jl7vzgachn2colxz.png" alt="Image description" width="496" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Double-click the name or click “Open” to start the terminal.&lt;br&gt;
Login as “ubuntu”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WSx0MRhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft2nqyxmh4ticav56ph1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WSx0MRhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft2nqyxmh4ticav56ph1.png" alt="Image description" width="680" height="431"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-3-terminal"&gt;
  &lt;/a&gt;
  Step 3: Terminal
&lt;/h2&gt;

&lt;p&gt;To view the files, and directories present in the root directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7fykVpak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pb6ih8ycyfnjpypupx4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7fykVpak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pb6ih8ycyfnjpypupx4c.png" alt="Image description" width="677" height="430"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are no dependencies already installed in the instance. Hence, we’ll be getting all the necessary updates followed by installation of python3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install python3-pip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A prompt asks for “Do you want to continue? (Y/n)”, press ‘y’ and continue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o88KeLQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6x1wcckw85gch8v2r7c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o88KeLQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6x1wcckw85gch8v2r7c.png" alt="Image description" width="666" height="110"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had prepared a requirements.txt file with all the dependencies and packages my application required. &lt;br&gt;
To install those, simply run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the installation of various libraries, we might not be left with enough space, needed for those heavy deep-learning models, or any other files. &lt;br&gt;
We go back to our AWS Management Console,&lt;br&gt;
 click checkbox near your instance → Storage tab → Click on volume id&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I15H8dNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yeplp3sbkcfw01wl4r2a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I15H8dNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yeplp3sbkcfw01wl4r2a.png" alt="Image description" width="880" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right click on volume → Modify Volume&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mvpPn9Zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bm1w85cg53ck586k7qp2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mvpPn9Zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bm1w85cg53ck586k7qp2.png" alt="Image description" width="880" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Change the volume as per your requirements. Here, I changed it to 20GB, maximum being 30GB. &lt;br&gt;
Click “Modify”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nbLCFTG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppl71u3j4x5tks0rlr0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nbLCFTG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppl71u3j4x5tks0rlr0d.png" alt="Image description" width="880" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! &lt;br&gt;
But wait, the partition hasn’t been extended. Let’s get back to the terminal…&lt;/p&gt;

&lt;p&gt;To check whether the volume has a partition that must be extended, use the lsblk command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lsblk
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qeuaGTEe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/308v62ojrxp8fwdgwglz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qeuaGTEe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/308v62ojrxp8fwdgwglz.png" alt="Image description" width="680" height="165"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, notice that dsk space is 20GB but our instance is still utilizing the 8GB partition.&lt;br&gt;
Check Space usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df -h
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_4z2VdAb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56u68dp0y3wwn7z4vgan.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_4z2VdAb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56u68dp0y3wwn7z4vgan.png" alt="Image description" width="666" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To extend the partition  :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo growpart /dev/xvda 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check again using lsblk&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOgsBBDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ap5hbea29agpa2fcv9sb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOgsBBDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ap5hbea29agpa2fcv9sb.png" alt="Image description" width="673" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the memory storage has been increased successfully!&lt;/p&gt;

&lt;p&gt;I had to install Tensorflow, but the “grpcio” package was causing some issues during Tensorflow's installation, so I installed “grpcio” independently.&lt;/p&gt;

&lt;p&gt;First update pip3:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo pip3 install -U pip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Installing grpcio==1.36.1&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo pip3 install grpcio==1.36.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--77imMfcc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2pee0s670zg44c7rn82.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--77imMfcc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2pee0s670zg44c7rn82.png" alt="Image description" width="683" height="161"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now installing Tensorflow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo pip3 install tensorflow
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2J-mrPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2ncb84oigk7114d7p12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2J-mrPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2ncb84oigk7114d7p12.png" alt="Image description" width="681" height="133"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ohh crap! Process killed!&lt;br&gt;
Possible reasons: might have to disable cache due to less space on the hard drive. Still?!!&lt;/p&gt;

&lt;p&gt;Thanks to StackOverflow! Execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo pip3 install tensorflow --no-cache-dir
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4-running-the-flask-app"&gt;
  &lt;/a&gt;
  Step 4: Running the Flask App
&lt;/h2&gt;

&lt;p&gt;In your app, modify the app.run() as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__=="__main__":
    app.run(host='0.0.0.0', port=80)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, host=’0.0.0.0’ means, any address would work, no such specification. &lt;br&gt;
And, port=80 (HTTP), anything works, 22 (SSH), 443 (HTTPS)...&lt;br&gt;
Remember how we modified the Inbound Rules for “All Traffic” while creating a security group. This is how it works!&lt;/p&gt;

&lt;p&gt;Run your app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you have your Standalone server running your API&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udyMeI6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ehnp41tzsx3qcqidwp0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udyMeI6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ehnp41tzsx3qcqidwp0.png" alt="Image description" width="681" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Visit the Instance IP appended with the port number:&lt;br&gt;
Eg: 3.134.92.137:80 &lt;br&gt;
My instance IP&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n6oLi0xQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzj9hu3y0uzhcdjto73g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n6oLi0xQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzj9hu3y0uzhcdjto73g.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-4-session"&gt;
  &lt;/a&gt;
  Step 4: Session
&lt;/h2&gt;

&lt;p&gt;Now, we’ll implement terminal multiplexing, in simple words, to keep the current session running even after we close our terminal.&lt;/p&gt;

&lt;p&gt;Stop your currently running app: Ctrl+C&lt;br&gt;
Again, execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tmux
sudo python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wqdp2Riq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n53k5cxxgacp1jkehz1u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wqdp2Riq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n53k5cxxgacp1jkehz1u.png" alt="Image description" width="683" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All done! Close your terminal, let your PC rest, and still flex your deployed Flask API from any device, any location.&lt;/p&gt;

&lt;p&gt;Remember this is a development server for testing/demonstration, and not a production deployment. You can use gunicorn for the same. Gunicorn is a Python WSGI HTTP server that many developers use to deploy their Python applications. This WSGI (Web Server Gateway Interface) is necessary because traditional web servers do not understand how to run Python applications.&lt;/p&gt;

&lt;p&gt;To end the terminal multiplexing, come back to your saved machine, using PuTTY.&lt;br&gt;
Run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tmux attach
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once inside the session:&lt;br&gt;
Stop the app and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tmux detach
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Terminal multiplexing has ended. Now you will not be able to run your app after closing the current session.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Kudos!! A Deep Learning Flask API deployed on your AWS EC2 instance!&lt;/em&gt;&lt;br&gt;
&lt;em&gt;That’s all for this lengthy blog.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;I hope you found this insightful!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Inputs, thoughts, improvements, suggestions are most welcomed!&lt;/em&gt;&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
Cover Image: &lt;a href="https://www.google.co.in/url?sa=i&amp;amp;url=https%3A%2F%2Fwww.brainvire.com%2Famazon-web-service%2F&amp;amp;psig=AOvVaw2xnyUGPMUMrb_mWlSXQzn5&amp;amp;ust=1639846510264000&amp;amp;source=images&amp;amp;cd=vfe&amp;amp;ved=0CAsQjRxqFwoTCICUsamm6_QCFQAAAAAdAAAAABAV"&gt;https://www.google.co.in/url?sa=i&amp;amp;url=https%3A%2F%2Fwww.brainvire.com%2Famazon-web-service%2F&amp;amp;psig=AOvVaw2xnyUGPMUMrb_mWlSXQzn5&amp;amp;ust=1639846510264000&amp;amp;source=images&amp;amp;cd=vfe&amp;amp;ved=0CAsQjRxqFwoTCICUsamm6_QCFQAAAAAdAAAAABAV&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>tutorial</category>
      <category>python</category>
      <category>deeplearning</category>
    </item>
    <item>
      <title>Download spotify music for no cost!</title>
      <author>C Vamshi Krishna</author>
      <pubDate>Sat, 18 Dec 2021 04:44:33 +0000</pubDate>
      <link>https://dev.to/insaiyancvk/download-spotify-music-for-no-cost-24aj</link>
      <guid>https://dev.to/insaiyancvk/download-spotify-music-for-no-cost-24aj</guid>
      <description>&lt;p&gt;Hey there!&lt;br&gt;
Check out this little project I worked on that you might find useful :)&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Download single song&lt;/li&gt;
&lt;li&gt;Download Youtube Playlist&lt;/li&gt;
&lt;li&gt;Download Spotify playlist/album (searches on youtube and downloads the top result)&lt;/li&gt;
&lt;li&gt;Convert downloaded songs to mp3 or flac&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
  &lt;a href="#the-final-result"&gt;
  &lt;/a&gt;
  The final result
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B4WOWONa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/insaiyancvk/pymusicdl/raw/main/assets/downloads.jfif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B4WOWONa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/insaiyancvk/pymusicdl/raw/main/assets/downloads.jfif" alt="https://open.spotify.com/playlist/4WtqLI6gaRFaWB4g6mDnAX" width="880" height="477"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out the demo, installation guide on YouTube or &lt;a href="https://github.com/insaiyancvk/pymusicdl"&gt;GitHub&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1_BmOtZoo1o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>python</category>
      <category>opensource</category>
      <category>spotify</category>
    </item>
    <item>
      <title>id() in python</title>
      <author>Siddhesh Agarwal</author>
      <pubDate>Sat, 18 Dec 2021 04:28:59 +0000</pubDate>
      <link>https://dev.to/siddhesh_agarwal/id-in-python-27b5</link>
      <guid>https://dev.to/siddhesh_agarwal/id-in-python-27b5</guid>
      <description>&lt;p&gt;In this post, I will try to improve your idea about memory in python using the in-built &lt;code&gt;id()&lt;/code&gt; function. For those of you who don't know what &lt;code&gt;id()&lt;/code&gt; is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;id()&lt;/code&gt; function returns a unique ID of the object. All objects in python have a unique ID and no 2 different values correspond to the same ID.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So let us begin with a small example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Fun fact:&lt;/strong&gt; In python, &lt;code&gt;id(a) == id(b)&lt;/code&gt; is analogous to &lt;code&gt;a is b&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The above code prints &lt;code&gt;True&lt;/code&gt; because python creates the variable &lt;code&gt;b&lt;/code&gt; with the value &lt;code&gt;500&lt;/code&gt; and then creates a variable &lt;code&gt;a&lt;/code&gt; pointing to the value of &lt;code&gt;b&lt;/code&gt;. This implies that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are pointing towards the same memory location and hence the same ID.&lt;/p&gt;




&lt;p&gt;Now let us raise the bar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code prints &lt;code&gt;False&lt;/code&gt; because: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python creates a variable &lt;code&gt;a&lt;/code&gt; pointing to the value &lt;code&gt;500&lt;/code&gt; in the memory. &lt;/li&gt;
&lt;li&gt;Then it creates another variable &lt;code&gt;b&lt;/code&gt; pointing to another value &lt;code&gt;500&lt;/code&gt; (yeah, both 500 are different).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hence, both have different IDs because both point towards different memory locations.&lt;/p&gt;




&lt;p&gt;I hope you guys aren't confused because there is more to come. Guess the output for this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You guys may think &lt;em&gt;"This is the previous question with different values. I know the answer is &lt;code&gt;False&lt;/code&gt;"&lt;/em&gt; but not so fast.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xy2VjLtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/zYO7NF-U234AAAAC/er-not-so-fast-hold-up.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xy2VjLtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/zYO7NF-U234AAAAC/er-not-so-fast-hold-up.gif" alt="Not so fast" width="498" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For small integers (The CPython range is -5 to 256, both inclusive), then integer objects (&lt;code&gt;&amp;lt;class 'int'&amp;gt;&lt;/code&gt;) are shared. This is done entirely to save space. The memory imprint of the console would be significantly larger if these objects weren’t sharing their memory.&lt;/p&gt;

&lt;p&gt;So the correct answer is &lt;code&gt;True&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;Okay, okay. Just one more to go. The last one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
&lt;span class="n"&gt;id1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
&lt;span class="n"&gt;id2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;id2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, even though I am re-declaring the same variable with the same value, the answer is &lt;strong&gt;most likely&lt;/strong&gt; to be &lt;code&gt;False&lt;/code&gt;. I'll explain to you why. When you re-declare a variable in python, the interpreter works in the same way as a declaration. i.e. It entirely deletes the before existing value and creates a variable with the new value. So when we give &lt;code&gt;a = 500&lt;/code&gt;, the second time the interpreter deletes the previously existing value of &lt;code&gt;a&lt;/code&gt; and create a new memory location for &lt;code&gt;500&lt;/code&gt; where &lt;code&gt;a&lt;/code&gt;  would point towards. Both these IDs are most likely to be different.&lt;/p&gt;

&lt;p&gt;SO, the answer is &lt;code&gt;False&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If the above example had a number belonging to the inclusive range -5 to 256, the answer would have been &lt;code&gt;True&lt;/code&gt;. this is because number belonging to the inclusive range have a fixed memory location.&lt;/p&gt;

</description>
      <category>python</category>
      <category>memorymanagement</category>
    </item>
    <item>
      <title>Our entrepreneur virtual coworking space setup</title>
      <author>Wannabe Entrepreneur 🎙️</author>
      <pubDate>Sat, 18 Dec 2021 04:13:40 +0000</pubDate>
      <link>https://dev.to/wbepodcast/our-entrepreneur-virtual-coworking-space-setup-3508</link>
      <guid>https://dev.to/wbepodcast/our-entrepreneur-virtual-coworking-space-setup-3508</guid>
      <description>&lt;p&gt;A virtual coworking space for entrepreneurs is a place where indie makers from all over the world can work together on their projects while supporting each other and feeling like part of a team.&lt;/p&gt;

&lt;p&gt;I have been growing the &lt;a href="https://wannabe-entrepreneur.com/coworking/"&gt;WBE space&lt;/a&gt; for the past 5 months to a community that has 40 members now and here is the setup that best works for us:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Slack Channel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This channel is the center of communication and the place where most of the indie makers hang out.  I have tried out multiple channels but here are the ones that have the most engagement:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- what-i-am-doing-today:&lt;/strong&gt; Everyday members write down their daily goals and support each other with encouraging words or relevant tips. I am quite surprised with the fact that people not only share their business-related tasks but also more personal ones... Really cool!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- victories-and-frustrations:&lt;/strong&gt; We celebrate each other victories and give support when needed. This channel is not used on a daily basis by every member but it's still very popular&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- introductions:&lt;/strong&gt; This is a classic but a must for every community. I set up an automatic message that asks every new member to introduce themselves in the channel. It works as an ice breaker for the newbie and the members are very welcoming.&lt;/p&gt;

&lt;p&gt;We have a couple of other popular channels like the &lt;strong&gt;looking-for-advice,&lt;/strong&gt; &lt;strong&gt;feedback&lt;/strong&gt;, and &lt;strong&gt;today-I-learned&lt;/strong&gt; which are used multiple times a week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Virtual Office Rooms&lt;/strong&gt;&lt;br&gt;
Using jitsi and the slack API I created two virtual rooms that are available 24/7:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- Work Room:&lt;/strong&gt; Entrepreneurs turn on the camera and work together in their individual tasks. Is like being in an office. I also implemented a shared Pomodoro timer 🍅 , so normally we work for 30min, have a 5min chat, and restart&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- Break Room:&lt;/strong&gt; Just a place to chill and drink a coffee or beer and chat about our projects and life in general. Once a month we also do a community event that gathers most of the members.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Entrepreneurs Wiki&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I put it together using netlify cms and it works great! Is a place where members can document their favorite tools together with how they use them. I also use it to document all the community-only discounts that I have been able to get from SaaS founders.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;br&gt;
A member pays 4 euros per month to be part of the space, I use &lt;a href="https://www.buymeacoffee.com/"&gt;buymeacoffee&lt;/a&gt; to manage the subscriptions. To be honest I haven't played much around the pricing but from what I gathered the members seem quite happy with it. One cool thing I noticed is that the paying members are much more active and engaged than the guests...&lt;/p&gt;

&lt;p&gt;And here is what I have learned so far and how our setup looks like. If you have a community I would love to hear about your setup and let me know if you have any questions.&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 5 Soft Skill for Software Developer</title>
      <author>Manthan Bhatt</author>
      <pubDate>Sat, 18 Dec 2021 04:07:22 +0000</pubDate>
      <link>https://dev.to/manthanbhatt/top-5-soft-skill-for-software-developer-3a55</link>
      <guid>https://dev.to/manthanbhatt/top-5-soft-skill-for-software-developer-3a55</guid>
      <description>&lt;p&gt;Soft skills are essential for software developers because they enable them to communicate and interact with other people in a meaningful and harmonious way. Besides being a good coder, every developer needs soft skills in their toolbox. These skills help developers to thrive in their professional as well as personal life.&lt;/p&gt;

&lt;p&gt;Here are the most useful soft skills for software developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#communication"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Communication&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;It is the most important soft skill for developers for any professional. However, effective communication is a two-way road and you not only need to be a great speaker but also a good listener. In the IT industry, you need to listen to your colleagues, customers, or target users to learn about new things, expand your horizons, and rank tasks and requirements. When it comes to speaking, make sure you are clear and confident.&lt;/p&gt;

&lt;p&gt;Communication is a very useful weapon and one should use it judiciously. However, there are a few things to be kept in mind while communicating, for example, one should always come out to be polite while conversing and also never interrupt while somebody is talking. In a communication, the participants should be patient, focused, and confident.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#empathy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Empathy&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;While you might spend a lot of your time writing code for machines, you are interacting with other people. “Putting your self in other person’s shoes” is a way to describe empathy in straightforward terms. Understanding other people, their belief systems, their mental and personal characteristics will benefit you. You will be able to adjust your behavior, to address their needs, and make sure that you are taking them into account. This is something that is often overlooked. But, the best developers will try and understand their customers or colleagues since it will enable them to do their job . Again, empathy is your advantage – it will allow you to see things with their eyes. It will make you more sensible and approachable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#critical-and-creative-thinking"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Critical and Creative Thinking&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The main job of a developer is to fix problems and work with different developers and designers. Development is all about solving complex problems that belong to various domains like the operating systems in your desktops and mobile phones to a bookkeeping software an accountant uses to making an automated vehicle. At the core, all these tasks include solving problems with different scopes and complexities. Hence, if you want to become a good developer, you will have to inculcate critical as well as creativity thinking. Critical thinking involves challenging yourself to solve complex problems and think creatively to find out different unorthodox approaches to a problem. As a developer, you stir your creative juices to devise techniques that solve complex issues. A developer’s ability to critically think and creatively implement and assess solutions will enable the developer to expand and build various applications and grow as a problem-solver.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#confidence"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Confidence&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Building confidence on solid foundation takes time. It’s often connected with the number of years of experience you have. Solving a similar problem for the fifth time should be easier and more familiar for you than solving it for the first time. It should give you a feeling of control and competence. Confidence grows when it’s fed with control and competence.&lt;/p&gt;

&lt;p&gt;We often see a lack of confidence with our junior developers and designers. They are unsure of how to proceed. They can get to the point where they are stuck, and you witness “analysis paralysis.” At that point, we take a step back. Building confidence also needs a nurturing environment. Someone willing to help, educate, and explain. People who are confident enough so they can be humble. See how it ties with humility.&lt;/p&gt;

&lt;p&gt;While it is okay to make mistakes, learn, and build your confidence over time, you need to show that you are capable of doing so. Few things are sadder (in the software development) than seeing smart people afraid of trying. People who start Googling and go to StackOverflow before they even consider the task at hand. Give it a try. Don’t start every job with “I don’t know how to solve this!” – Or, even worse – “This is not for me!“.&lt;/p&gt;

&lt;p&gt;You are engineers and problem-solvers. Try it before you quit. I had to let go of people who are not able to display the ability to try and solve their dev tasks. Make mistakes, who cares. But, be confident enough that you can find a solution or at least attack the problem from several angles.&lt;/p&gt;

&lt;p&gt;With time you will see that you are getting better at this. You will have more wins, and your confidence will grow. Now, be smart and don’t let it drive you to the point where you become unrealistic and vain. Remember, self-confidence needs humility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-and-people-management"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Time and People Management&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Software development is all about working in a team on a project in a stipulated time period. More often than not, software developers are involved with managing people as well as different types of projects. Hence, management is the most prominent soft skill for software developers.&lt;/p&gt;

&lt;p&gt;Time management is important because more often than not there are deadlines to meet and estimates to give and hence as a software developer, one must be conscious of the time spent on a particular project. People management is also essential because as mentioned in the blog earlier that software developers rarely work in an isolated environment.&lt;/p&gt;

&lt;p&gt;Time and people management are one of the key characteristics that a recruiter looks for a potential software developer candidate. A software developer from all experience levels is expected to work well in a team and meet their time estimates. Hence, if you are aiming to become a successful software developer in a good company, one skill that you need to inculcate is successful management of time and good coordination of people.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>challenge</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Run Js - The best code editor for JavaScript Developers </title>
      <author>duskycoders</author>
      <pubDate>Sat, 18 Dec 2021 03:13:27 +0000</pubDate>
      <link>https://dev.to/duskycoders/run-js-the-best-code-editor-for-javascript-developers-3jd1</link>
      <guid>https://dev.to/duskycoders/run-js-the-best-code-editor-for-javascript-developers-3jd1</guid>
      <description>&lt;p&gt;Run Js is a code editor for JavaScript developers with zero setup. There are lot of code editors and IDEs for JavaScript. There is Sublime a light weight code editor for all types of developers. We can easily build Laravel application with sublime. Atom on the other hand is another code editor with little bit look of IDE but it is not. It is a bit better than atom in sense it has own command line APM with no integrated terminal. It has nice GUI with ease in installing packages and themes. &lt;/p&gt;

&lt;p&gt;VS code is another famous boy not a kid. VS code still we can not say it is an IDE. But VS code is not a simple code editors with huge awesomeness like it has Integrated terminal, Code refactoring, code intelligence, themes and large marketplace for extensions. Web storm is super duper and complete solution for JavaScript ecosystem. But it is paid.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#problems-with-ordinary-code-editors-and-ides"&gt;
  &lt;/a&gt;
  Problems with ordinary code editors and IDEs
&lt;/h1&gt;

&lt;p&gt;JavaScript is a client side as well server language. It has two paths. On the client side we need a browser and terminal for the server side. A developer in hurry wants to test JavaScript code but he has number of hurdles like setting browser or setting up terminal for Node Js. You could lose your interest if you have to make huge setup before running hello world same as we do in Android Development setup. How you can solve your problems. Yeah I have solution! Run Js. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#run-js-for-the-developers-want-to-ace"&gt;
  &lt;/a&gt;
  Run Js - For the developers want to ace
&lt;/h1&gt;

&lt;p&gt;Run Js is zero setup, beginner friendly, with Node Js development support. RunJs is a good code editor and IDE for the Frontend Developers as well as Node Js Develoeprs. You don't need to inject script tag to html. You don't even need html to run JavaScript code. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is JavaScript playground for your desktop. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It would be like you are writing any other language like python that does not need html file or browser. It does not need any terminal or console. Everything inside RunJs is integrated and many features are out of the box. I&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#runjs-beginner-friendly-for-hurry-developers"&gt;
  &lt;/a&gt;
  RunJs - Beginner friendly | For hurry developers
&lt;/h2&gt;

&lt;p&gt;Explore and experiment with JavaScript and TypeScript, visualize your ideas and get instant feedback as you type. Some features are listed below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Exploring JavaScript has never been easier. Live feedback as you type, with per-line results makes it super clear what your code is doing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qt9ajs2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639795562163/3zC2H9KMq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qt9ajs2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639795562163/3zC2H9KMq.png" alt="screenshot-runjs.app-2021.12.18-07_44_25.png" width="771" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
In RunJS you have access to Node and Browser APIs, including full DOM access. This gives you a level of versatility that's not possible in a standard REPL or Chrome console.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yxLPQKsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639795735499/9hx0WJTm0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yxLPQKsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639795735499/9hx0WJTm0.png" alt="screenshot-runjs.app-2021.12.18-07_47_54.png" width="860" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Babel and TypeScript support enables you to write modern, up-to-date syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_fUc_HyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639795907081/hUK0I4Lkh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_fUc_HyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639795907081/hUK0I4Lkh.png" alt="screenshot-runjs.app-2021.12.18-07_50_49.png" width="772" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#freemium"&gt;
  &lt;/a&gt;
  Freemium
&lt;/h3&gt;

&lt;p&gt;Only cons you might consider that is price 28 $ -&amp;gt; &lt;a href="https://runjs.app/buy"&gt; Buy -&amp;gt; not affiliated link &lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7z5n9OqL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639796274576/WVKri91K-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7z5n9OqL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639796274576/WVKri91K-.png" alt="screenshot-runjs.app-2021.12.18-07_54_18.png" width="880" height="486"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download for free&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://runjs.app/#platforms"&gt;Get RunJs&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for spending your important time for reading this article.   &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>npm</category>
      <category>webdev</category>
    </item>
    <item>
      <title>RDS Encryption and Security</title>
      <author>Vijay Patel</author>
      <pubDate>Sat, 18 Dec 2021 03:10:41 +0000</pubDate>
      <link>https://dev.to/easyawslearn/rds-encryption-and-security-1l53</link>
      <guid>https://dev.to/easyawslearn/rds-encryption-and-security-1l53</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-amazon-rds"&gt;
  &lt;/a&gt;
  What is Amazon RDS?
&lt;/h2&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. &lt;br&gt;
It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching, and backups. &lt;br&gt;
It frees you to focus on your applications so you can give them the fast performance, high availability, security, and compatibility they need.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-rds-security"&gt;
  &lt;/a&gt;
  AWS RDS Security
&lt;/h2&gt;

&lt;p&gt;AWS provides multiple features to provide RDS security&lt;br&gt;
DB instance can be hosted in a VPC for the greatest possible network access control&lt;br&gt;
IAM policies can be used to assign permissions that determine who is allowed to manage RDS resources&lt;br&gt;
Security groups allow controlling what IP addresses or EC2 instances can connect to the databases on a DB instance&lt;br&gt;
Secure Socket Layer (SSL) connections with DB instances&lt;br&gt;
RDS encryption to secure RDS instances and snapshots at rest.&lt;br&gt;
Network encryption and transparent data encryption (TDE) with Oracle DB instances&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is the full tutorial video based on RDS Encryption and Security👇👇&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=77h8NnV2JAw"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t1vgUscF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38ho0x2dkijk9lvypodz.png" alt="Image description" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rds-authentication-and-access-control"&gt;
  &lt;/a&gt;
  RDS Authentication and Access Control
&lt;/h2&gt;

&lt;p&gt;IAM can be used to control which RDS operations each individual user has permission to call&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ssl-to-encrypt-a-connection-to-a-db-instance"&gt;
  &lt;/a&gt;
  SSL to Encrypt a Connection to a DB Instance
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Encrypt connections using SSL for data in transit between the applications and the DB instance&lt;/li&gt;
&lt;li&gt;Amazon RDS creates an SSL certificate and installs the certificate on the DB instance when RDS provisions the instance.&lt;/li&gt;
&lt;li&gt;SSL certificates are signed by a certificate authority. SSL certificate includes the DB instance endpoint as the Common Name (CN) for the SSL certificate to guard against spoofing attacks&lt;/li&gt;
&lt;li&gt;While SSL offers security benefits, be aware that SSL encryption is a compute-intensive operation and will increase the latency of the database connection.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#iam-database-authentication"&gt;
  &lt;/a&gt;
  IAM Database Authentication
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;IAM database authentication works with MySQL and PostgreSQL.&lt;/li&gt;
&lt;li&gt;IAM database authentication prevents the need to store static user credentials in the database because authentication is managed externally using IAM.&lt;/li&gt;
&lt;li&gt;IAM database authentication does not require a password but needs an authentication token&lt;/li&gt;
&lt;li&gt;An authentication token is a unique string of characters that RDS generates on request.&lt;/li&gt;
&lt;li&gt;Authentication tokens are generated using AWS Signature Version 4.&lt;/li&gt;
&lt;li&gt;Each Authentication token has a lifetime of 15 minutes&lt;/li&gt;
&lt;li&gt;IAM database authentication provides the following benefits:

&lt;ul&gt;
&lt;li&gt;Network traffic to and from the database is encrypted using Secure Sockets Layer (SSL).&lt;/li&gt;
&lt;li&gt;helps centrally manage access to the database resources, instead of managing access individually on each DB instance.&lt;/li&gt;
&lt;li&gt;enables using IAM Roles to access the database instead of a password, for greater security.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
GCP Tutorial ► &lt;a href="https://bit.ly/3mwh412"&gt;https://bit.ly/3mwh412&lt;/a&gt;&lt;br&gt;
Jenkins Tutorials ► [&lt;a href="https://bit.ly/3iHnfv4"&gt;https://bit.ly/3iHnfv4&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>aws</category>
      <category>rds</category>
      <category>security</category>
      <category>encryption</category>
    </item>
    <item>
      <title>Laravel breeze vs Jetstream</title>
      <author>oyedeletemitope</author>
      <pubDate>Sat, 18 Dec 2021 03:05:18 +0000</pubDate>
      <link>https://dev.to/oyedeletemitope/laravel-breeze-vs-jetstream-27hp</link>
      <guid>https://dev.to/oyedeletemitope/laravel-breeze-vs-jetstream-27hp</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;laravel offers several options for authentication in your applications to provide a robust and modern scaffolding for our authentication layer. Laravel starter kits are one of those options and this consists of breeze and jetstream.&lt;/p&gt;

&lt;p&gt;Laravel Breeze is an excellent choice when it comes to getting things running quickly,  And then there’s jetstream which offers two-factor auth, API tokens, and team management. If you are looking for additional features then jetstream is for you.&lt;/p&gt;

&lt;p&gt;In this article,  We will be exploring everything you need to know about getting started with both starter kits packages. We will look at the installation guide, discuss the differences between them, their similarities, and when to use them. So let's get started&lt;br&gt;
Objectives&lt;/p&gt;

&lt;p&gt;At the end of this article, we should be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Know what Laravel and jetstream are.&lt;/li&gt;
&lt;li&gt;Install Laravel and jetstream.&lt;/li&gt;
&lt;li&gt;Know their similarities.&lt;/li&gt;
&lt;li&gt;Identify their differences.&lt;/li&gt;
&lt;li&gt;Know when to use them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;To continue with this article you must have had prior knowledge as to what laravel is, and  have Laravel 8 installed on your pc. If not you can check out their documentation to get started with Laravel and also its installation process. You must also have a PHP version of 7.3 and above.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#laravel-breeze"&gt;
  &lt;/a&gt;
  Laravel Breeze
&lt;/h3&gt;

&lt;p&gt;Laravel Breeze is an implementation of all of Laravel’s authentication features, The Breeze in essence is a scaffold for solid authentication flow in your Laravel application with sleek views, component system, and a basic dashboard layout; it is built with Laravel Blade.&lt;/p&gt;

&lt;p&gt;If you’ve used Laravel before, Laravel Breeze is an upgrade of Laravel UI which sets up basic login, register logout, forgot password, create a password, email verification, and password confirmation functionality so you can customize it to your needs, Breeze doesn't rely on any job script framework, just Laravel, and blade. It does use the tailwind framework which is a CSS framework for the styling. If you haven’t heard of tailwind before it is a styling meaning of CSS. To learn more about tailwind visit this link.&lt;/p&gt;

&lt;p&gt;Laravel Breeze creates all the controllers, routes, and views needed to set up and configure authentication features and functionality.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;The installation looks pretty straightforward. For us to install Laravel Breeze, let’s head over to our terminal and run the following composer command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require laravel/breeze &lt;span class="nt"&gt;--dev&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we run our artisan command below to complete this installation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan breeze:install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This installs the necessary views, styles, and scaffolding. You will get the following output saying: &lt;code&gt;breeze scaffolding successfully&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Run your npm install &amp;amp;&amp;amp; npm run dev command to get our dependencies installed and compile our frontend assets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Visit your domain name or server IP address via your browser, you will be able to see the default Laravel page with a login and register link at the top.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--APUCD1WV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft3qpdjkcpjsnglrl181.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--APUCD1WV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft3qpdjkcpjsnglrl181.jpg" alt="laravel breeze" width="327" height="154"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s take a look at the file structure which includes the routes, the view, and the controllers and can be found at standard locations.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#routes"&gt;
  &lt;/a&gt;
  Routes
&lt;/h4&gt;

&lt;p&gt;The route is a way of creating a request URL for your application. The route files are located in the &lt;code&gt;routes/auth.php file&lt;/code&gt;, which, on the other hand, is included directly in your web.php file with the following line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;require__DIR__.&lt;span class="s1"&gt;'/auth.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Opening the auth.php is a list of authentication routes which includes routes for logging in, registration, password reset, email validation, password confirmation, and logging out.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#controllers"&gt;
  &lt;/a&gt;
  Controllers
&lt;/h4&gt;

&lt;p&gt;Controllers accept commands from the model and convert them so the data can be used by the view. All routers are directly linked to the controller. The Auth controllers are stored in &lt;code&gt;app/Http/Controllers/Auth/&lt;/code&gt;.&lt;br&gt;
In the folder, we have the following controllers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AuthenicatedSessionController.php&lt;/li&gt;
&lt;li&gt;ConfirmablePasswordController.php&lt;/li&gt;
&lt;li&gt;EmailVerificationNotificationController.php&lt;/li&gt;
&lt;li&gt;NewPasswordController.php&lt;/li&gt;
&lt;li&gt;PasswordResetLinkController.php&lt;/li&gt;
&lt;li&gt;RegisterdUserController.php&lt;/li&gt;
&lt;li&gt;VerifyEmailController.php&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#views"&gt;
  &lt;/a&gt;
  Views
&lt;/h4&gt;

&lt;p&gt;Views are methods in Laravel that separate the controller logic and domain logic from the presentation logic. Views are located in resources/views/auth/.&lt;/p&gt;

&lt;p&gt;The list of blade views available include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;confirm-password.blade.php&lt;/li&gt;
&lt;li&gt;forgot -password.blade.php&lt;/li&gt;
&lt;li&gt;login.blade.php&lt;/li&gt;
&lt;li&gt;register.blade.php&lt;/li&gt;
&lt;li&gt;reset-password.blade.php&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#when-should-you-use-breeze"&gt;
  &lt;/a&gt;
  When should you use Breeze?
&lt;/h4&gt;

&lt;p&gt;Breeze is perfect for you when:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your app mainly consists of an ordinary Laravel blade template or if you want to rapidly get authentication added to an application without a large amount of opinion needed code.&lt;/li&gt;
&lt;li&gt;You want to modify the authentication functionality of your app quickly.&lt;/li&gt;
&lt;li&gt;You're building an app from scratch that doesn't require the features that fortify or Jetstream provide.&lt;/li&gt;
&lt;li&gt;You just want a more up-to-date Laravel UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let’s move on to Jetstream.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#jetstream"&gt;
  &lt;/a&gt;
  Jetstream
&lt;/h4&gt;

&lt;p&gt;Jetstream takes things a bit more advanced than Breeze,  It adds a lot more features than the basic authentication features that we need. It’s a package that’s much bigger than Breeze. In Jetstream we get:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login and registration functionality&lt;/li&gt;
&lt;li&gt;Email verification&lt;/li&gt;
&lt;li&gt;Two-factor authentication&lt;/li&gt;
&lt;li&gt;Session management&lt;/li&gt;
&lt;li&gt;API authentication with Sanctum&lt;/li&gt;
&lt;li&gt;Team management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jetstream is meant to be a framework within a framework giving you a scaffold and library features to build a fully functioning Sass dashboard or another type of application out of. Laravel Jetstream is free and open-source.&lt;/p&gt;

&lt;p&gt;Jetstream actually uses a package called Fortify. Fortify actually does the job of defining the routes and controllers for implementing the application's authentication features while the Jetstream UI makes requests to those routes.&lt;/p&gt;

&lt;p&gt;When Jetstream is installed, the config/fortify.php configuration file is installed into your application. You can use this package if you want to have complete control of your frontend or maybe you're building an API and you don’t even need a front end altogether. Laravel Jetstream is free and open-source&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;Jetstream can be installed in different ways, You can use a composer or the Laravel installer&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#installing-with-laravel-installer"&gt;
  &lt;/a&gt;
  Installing with Laravel installer
&lt;/h4&gt;

&lt;p&gt;Get the latest version of Laravel installer, add &lt;code&gt;--jet&lt;/code&gt; flag in order to install a new Laravel Jetstream project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;laravel new project-name &lt;span class="nt"&gt;--jet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next thing is to run your migrations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#installing-jetstream-with-composer"&gt;
  &lt;/a&gt;
  Installing Jetstream with Composer
&lt;/h4&gt;

&lt;p&gt;For installation using composer, you need to run the following command inside your Laravel directory just like you would with any other package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require laravel/jetstream
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once that is finished  run the PHP artisan command along with our scaffold of choice&lt;/p&gt;

&lt;p&gt;• For those who prefer to use Livewire with Blade run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan jetstream:install livewire
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For those who prefer to  use Inertia with Vue run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan jetstream:install inertia
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may also add the &lt;code&gt;--teams&lt;/code&gt; flag to enable Laravel Jetstream team support.&lt;/p&gt;

&lt;p&gt;Download and compile assets with npm install and  npm run dev&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command above will build your assets. Finally, make sure to run your migrations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Jetstream has been given its own dedicated subdomain website and if we head over to it here &lt;a href="https://jetstream.laravel.com/2.x/introduction.html"&gt;link&lt;/a&gt; you can find all the information about what it does.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h4&gt;

&lt;p&gt;Our newly installed Jetstream comes with a login form,two-factor authentication, registration form password reset, email verification which can all be found in &lt;code&gt;resources/views/auth&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Like I mentioned before, Jetstream uses a package called fortify. You can find the fortify actions in &lt;code&gt;app/actions/Fortify/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The Fortify configurations can be found in config/fortify.php.&lt;/p&gt;

&lt;p&gt;Here you can make changes like enable and disable different features.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#profile-management"&gt;
  &lt;/a&gt;
  Profile Management
&lt;/h4&gt;

&lt;p&gt;Jetstream provides users with user profile management functionality which allows users to update their name, email address, and also upload their profile photos.&lt;/p&gt;

&lt;p&gt;The user profile view is stored in resources/views/profile/update-profile-information-form.blade.php.&lt;/p&gt;

&lt;p&gt;Just in case you’re using inertia you can find the views in &lt;code&gt;resources/js/Pages/Profile/UpdateProfileInformationForm.vue&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h4&gt;

&lt;p&gt;Worried about your application security? That’s not a problem, Laravel Jetstream comes with the standard functionality that allows users to update their password and log out which means it’s more than just safe.&lt;/p&gt;

&lt;p&gt;What’s more impressive is that it offers two-factor authentication with QR code, which the users could enable and disable directly. Also, users can log out of other browser sessions as well. The profile Blade views can be found in resources/views/profile/.&lt;/p&gt;

&lt;p&gt;And if you are working with inertia, you can find them in &lt;code&gt;resources/js/Pages/Profile/&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#jetstream-api"&gt;
  &lt;/a&gt;
  Jetstream API
&lt;/h4&gt;

&lt;p&gt;Laravel Jetstream uses Laravel Sanctum to provide a simple token-based API. It is a Laravel package created for the authentication of Single Page Applications (SPAs), mobile applications, and basic token-based APIs. &lt;br&gt;
To know more about APIs with sanctum I’ll recommend reading &lt;a href="https://www.twilio.com/blog/build-restful-api-php-laravel-sanctum"&gt;this&lt;/a&gt; article. Using Sanctum, each user can generate API tokens with specific permissions like Create, Read, Update, and Delete (CRUD).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#jetstream-teams"&gt;
  &lt;/a&gt;
  Jetstream Teams
&lt;/h4&gt;

&lt;p&gt;In case you used the &lt;code&gt;--team&lt;/code&gt;` flag during your Jetstream installation, your website would be able to support team creation and management.&lt;/p&gt;

&lt;p&gt;With the Jetstream teams feature, each user can create and belong to multiple teams.&lt;/p&gt;

&lt;p&gt;For more information about Jetstream teams, you can check out their official documentation here.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#when-should-you-use-jetstream"&gt;
  &lt;/a&gt;
  When should you use Jetstream?
&lt;/h4&gt;

&lt;p&gt;You should use Jetstream if:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You're conversant with Laravel Livewire, Inertia, and tailwind or you don’t mind taking time to learn them.&lt;/li&gt;
&lt;li&gt;You have an understanding&lt;/li&gt;
&lt;li&gt;You want to immediately start building the core functionality of your app without investing much time in procedures.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#differences"&gt;
  &lt;/a&gt;
  Differences
&lt;/h3&gt;

&lt;p&gt;One of the main differences between the two is that Jetstream relies heavily on a frontend stack. It comes with two different options which are the livewire blades and inertia Vue. If you're used to using Vue for your applications, then go down the inertia root otherwise go for live wire and blade. Also if you’ve used Laravel Jetstream before, you will notice that it is a little overwhelming and has a stiff learning curve while Laravel Breeze was developed to get you set up immediately.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#similarities"&gt;
  &lt;/a&gt;
  Similarities
&lt;/h3&gt;

&lt;p&gt;Their similarities are quite glaring as they are both packages that add pieces of frontend and backend functionality to your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;So far we’ve explored Laravel Breeze and Jetstream, how to install them, differences, similarities, and also when you can use them. Both have outstanding features for the authentication process these packages were introduced to protect a secured area or restricted actions. You just have to choose the one that best suits your style. Please share if this was helpful.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>100daysofcode</category>
      <category>programming</category>
    </item>
    <item>
      <title>Scheduled exports from Shopify to Google sheets</title>
      <author>Ajay Jarhad</author>
      <pubDate>Sat, 18 Dec 2021 02:50:57 +0000</pubDate>
      <link>https://dev.to/canonic/scheduled-exports-from-shopify-to-google-sheets-495l</link>
      <guid>https://dev.to/canonic/scheduled-exports-from-shopify-to-google-sheets-495l</guid>
      <description>&lt;p&gt;Next on our list to &lt;strong&gt;Integrate and optimize the daily workflow&lt;/strong&gt;, we have got a detailed guide on how to get scheduled exports from &lt;strong&gt;Shopify to Google sheets&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;By the end of this guide, you will be able to &lt;strong&gt;create a trigger&lt;/strong&gt; that &lt;strong&gt;updates the inventory on Shopify&lt;/strong&gt; whenever a new row is added to the inventory sheet. So let's begin, shall we! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started! 🚀
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Create necessary sheets to hold our inventory data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First thing first, let's create an empty google sheet to hold our inventory data. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lmarVBPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wzxuq18vhwvtmoplr0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmarVBPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wzxuq18vhwvtmoplr0h.png" alt="Sheet-Step1" width="688" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Let’s now work on those integrations!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to this &lt;a href="https://app.canonic.dev/projects/61af33b3b9347d002d5beb7b/api-2?utm_source=dev.to&amp;amp;utm_medium=organic_article&amp;amp;utm_campaign=30daysofcanonic_uc_3&amp;amp;utm_term=step2_sample_project&amp;amp;utm_content=day_18"&gt;sample project&lt;/a&gt; and click on the top right corner to clone it. This project already has YouTube integration for metrics set up. So all we have to do is clone it and get started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Nrj8r19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8hw7sohtk8szxohb4xa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Nrj8r19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8hw7sohtk8szxohb4xa.png" alt="Step 2" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Explore API tab&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the same project, from the left-hand navigation bar, move to the &lt;strong&gt;API tab&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;There, in the left-hand panel, you’ll find different divisions like - &lt;strong&gt;Endpoints, Scheduled triggers, DB triggers, Integration triggers, etc&lt;/strong&gt;. In the scheduled triggers, you should find it already set up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: The dailyInventoryReporting flow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's now build the &lt;strong&gt;integration scheduled trigger&lt;/strong&gt; that gets triggered every evening at 8 pm.&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;dailyInventoryReporting&lt;/strong&gt; trigger and it’ll open up the graph for it. Our flow looks something like this &lt;br&gt;
👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xaim5vPh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hsyef8mls4zzzc8h72p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xaim5vPh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hsyef8mls4zzzc8h72p.png" alt="Step 4" width="880" height="188"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5: Updating configuration of integrations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's start inspecting and correcting any integration settings should we have to. Click on the left most trigger will reveal its settings.&lt;/p&gt;

&lt;p&gt;As you can check we've set it up to execute every day around 8:00PM. You can change this schedule should you want to by clicking on the trigger.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jCd0KSGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3he4qxctdsofx31lovh2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jCd0KSGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3he4qxctdsofx31lovh2.png" alt="Step 5" width="818" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similarly in Shopify integration, you will have to enter your &lt;strong&gt;API key to authenticate&lt;/strong&gt;. You will then need the product ID for which you want to fetch the inventory of, once you input product ID in required fields, you are all set.&lt;/p&gt;

&lt;p&gt;And, the last is the Google Sheets API, after authenticating, in required fields you will need to input your Google Sheet's ID and Range. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hD2rZj_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euw30gij68aipplpxf09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hD2rZj_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euw30gij68aipplpxf09.png" alt="Step 5" width="818" height="1316"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you've reached here, you've successfully &lt;strong&gt;scheduled exports from Shopify to Google sheets&lt;/strong&gt;. 🥳&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out the sample project &lt;a href="https://app.canonic.dev/projects/61af33b3b9347d002d5beb7b/api-2?utm_source=dev.to&amp;amp;utm_medium=organic_article&amp;amp;utm_campaign=30daysofcanonic_uc_3&amp;amp;utm_term=step5_here&amp;amp;utm_content=day_18"&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Thank you for reading this guide. If you happen to create any of these integrations, please remember to mention us on social media or drop us a line on our &lt;a href="https://discord.gg/9dyytsM"&gt;discord channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also check out our other guides &lt;a href="https://dev.to/canonic/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Write to us for any support requests at &lt;a href="https://support@canonic.dev/"&gt;support@canonic.dev&lt;/a&gt;. Check out our &lt;a href="https://www.canonic.dev/30-days-of-canonic/?utm_source=dev.to&amp;amp;utm_medium=organic_article&amp;amp;utm_campaign=30daysofcanonic_uc_3&amp;amp;utm_term=conclusion_website&amp;amp;utm_content=day_18"&gt;website&lt;/a&gt; to know more about Canonic.&lt;/p&gt;

</description>
      <category>shopify</category>
      <category>showdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
