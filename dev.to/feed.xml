<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Add google analytics to your Next.js app ‚ú®</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Mon, 17 Jan 2022 03:32:04 +0000</pubDate>
      <link>https://dev.to/avneesh0612/add-google-analytics-to-your-nextjs-app-7pd</link>
      <guid>https://dev.to/avneesh0612/add-google-analytics-to-your-nextjs-app-7pd</guid>
      <description>&lt;p&gt;Wassup everyone, let's see how to add google analytics to your Next.js site. Google Analytics will help you to see the performance of each page, how well the site is doing in countries, different devices, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-google-analytics"&gt;
  &lt;/a&gt;
  Setup Google Analytics
&lt;/h2&gt;

&lt;p&gt;Go to  &lt;a href="https://analytics.google.com/analytics/web/#/report-home/a215528627w297101680p257398486"&gt;Google Analytics&lt;/a&gt; and click on admin in the sidebar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wu2fPiEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642347546151/V_VNBwjDM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wu2fPiEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642347546151/V_VNBwjDM.png" alt="image.png" width="248" height="997"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After clicking on admin you will see a screen similar to this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kzyBeXBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642347749350/EkD2EHa3Z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kzyBeXBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642347749350/EkD2EHa3Z.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on "Create Property", now fill in the form with your details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--egObt2-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642347967831/C2JOHnX-W.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--egObt2-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642347967831/C2JOHnX-W.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You also need to give basic business details.&lt;/p&gt;

&lt;p&gt;After you click submit your property will be created! You will see this screen and as we are using Next.js, select web-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--54mLsKd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642348270857/uZb1Ioz8s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--54mLsKd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642348270857/uZb1Ioz8s.png" alt="image.png" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fill in your website URL and title-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dq3YkfzX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642348443210/En2V_kUHK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dq3YkfzX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642348443210/En2V_kUHK.png" alt="image.png" width="880" height="459"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on add on Add new on-page inside &lt;strong&gt;Tagging instructions&lt;/strong&gt;-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Km9qIeF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642348649689/0fbjYdwFL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Km9qIeF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642348649689/0fbjYdwFL.png" alt="image.png" width="880" height="432"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the ID that you see and copy it as we are going to need it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-google-analytics-in-nextjs-app"&gt;
  &lt;/a&gt;
  Using Google Analytics in Next.js app
&lt;/h2&gt;

&lt;p&gt;Go inside &lt;code&gt;pages/_app.tsx&lt;/code&gt; and these two Next.js Scripts-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Script&lt;/span&gt;
    &lt;span class="nx"&gt;strategy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lazyOnload&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`https://www.googletagmanager.com/gtag/js?id=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_GOOGLE_ANALYTICS&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Script&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;google-analytics&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;strategy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lazyOnload&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', '&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_GOOGLE_ANALYTICS&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;', {
              page_path: window.location.pathname,
            });
                `&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is going to load google analytics via this script. As you can see we are using env variables for the google-analytics tag because it must remain a secret ü§´, so if you don't already have a &lt;code&gt;.env.local&lt;/code&gt; file create one and add the following-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEXT_PUBLIC_GOOGLE_ANALYTICS=YOUR_GOOGLE_ANALYTICS_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paste in the ID that we copied in the last step! Since we are changing the env variables you need to restart the server too.&lt;/p&gt;

&lt;p&gt;As we are using the Next.js script we also need to import it-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Script from "next/script";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open your localhost app in one tab and google analytics in another. If you click on Real-time inside of Reports you will see that you have 1 user!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aDsb_5OB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642350505812/oMFfF0elgj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDsb_5OB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642350505812/oMFfF0elgj.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Adding google analytics to your Next.js app was this easy! Hope you found it useful and insightful. See ya next time ‚úåÔ∏è&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://analytics.google.com/analytics/web/#/report-home/a215528627w297101680p257398486"&gt;Google Analytics&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://links.avneesh.tech/"&gt;Connect with me&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>analytics</category>
      <category>nextjs</category>
      <category>webdev</category>
      <category>google</category>
    </item>
    <item>
      <title>Bitcoin Private Key Finder and Generator address , hack wallet with python</title>
      <author>MMDRZA</author>
      <pubDate>Mon, 17 Jan 2022 02:40:22 +0000</pubDate>
      <link>https://dev.to/pymmdrza/bitcoin-private-key-finder-and-generator-address-hack-wallet-with-python-1eo0</link>
      <guid>https://dev.to/pymmdrza/bitcoin-private-key-finder-and-generator-address-hack-wallet-with-python-1eo0</guid>
      <description>&lt;p&gt;Bitcoin Private Key Wallet Finder &lt;br&gt;
Generator address and Private Key&lt;br&gt;
Received input Range For user &lt;br&gt;
use python 3.8 and Pycharm Professional , blockcypher , moneywagon urlib satoshi package for this project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install blockcypher
pip install moneywagon
pip install urllib
pip install satoshi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after install all package create file &lt;code&gt;utils.py&lt;/code&gt; for config and setting base program . you can visit my youtube channel and follow this project video ( title youtube on my channel ):&lt;/p&gt;

&lt;p&gt;Bitcoin Private Key Finder and Generator Auto With Python.&lt;br&gt;
youtu.be/0MvjIxy4vBQ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EGmk9oRw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgvxb6utb9e6pv4ilbk0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EGmk9oRw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgvxb6utb9e6pv4ilbk0.png" alt="bitcoin private key generator with python" width="758" height="800"&gt;&lt;/a&gt;&lt;br&gt;
after create file &lt;code&gt;utils.py&lt;/code&gt; on director base project first import this package from this python coding :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from hashlib import sha256
from typing import Union

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after insert this package entered all cod on file utils.py :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
class Point(object):
    def __init__(self, _x, _y, _order=None):
        self.x, self.y, self.order = _x, _y, _order

    def calc(self, top, bottom, other_x):
        ll = (top * inverse_mod(bottom)) % p
        x3 = (ll * ll - self.x - other_x) % p
        return Point(x3, (ll * (self.x - x3) - self.y) % p)

    def double(self):
        if self == INFINITY:
            return INFINITY
        return self.calc(3 * self.x * self.x, 2 * self.y, self.x)

    def __add__(self, other):
        if other == INFINITY:
            return self
        if self == INFINITY:
            return other
        if self.x == other.x:
            if (self.y + other.y) % p == 0:
                return INFINITY
            return self.double()
        return self.calc(other.y - self.y, other.x - self.x, other.x)

    def __mul__(self, e):
        if self.order:
            e %= self.order
        if e == 0 or self == INFINITY:
            return INFINITY
        result, q = INFINITY, self
        while e:
            if e &amp;amp; 1:
                result += q
            e, q = e &amp;gt;&amp;gt; 1, q.double()
        return result

    def __str__(self):
        if self == INFINITY:
            return "infinity"
        return "%x %x" % (self.x, self.y)


p, INFINITY = (
    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F,
    Point(None, None),
)  # secp256k1
g = Point(
    0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798,
    0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8,
    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141,
)


def inverse_mod(a):
    if a &amp;lt; 0 or a &amp;gt;= p:
        a = a % p
    c, d, uc, vc, ud, vd = a, p, 1, 0, 0, 1
    while c:
        q, c, d = divmod(d, c) + (c,)
        uc, vc, ud, vd = ud - q * uc, vd - q * vc, uc, vc
    if ud &amp;gt; 0:
        return ud
    return ud + p


BITCOIN_ALPHABET = b"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"


def scrub_input(v: Union[str, bytes]) -&amp;gt; bytes:
    if isinstance(v, str):
        v = v.encode("ascii")
    return v


def b58encode_int(
    i: int, default_one: bool = True, alphabet: bytes = BITCOIN_ALPHABET
) -&amp;gt; bytes:
    """
    Encode an integer using Base58
    """
    if not i and default_one:
        return alphabet[0:1]
    string = b""
    while i:
        i, idx = divmod(i, 58)
        string = alphabet[idx : idx + 1] + string
    return string


def b58encode(v: Union[str, bytes], alphabet: bytes = BITCOIN_ALPHABET) -&amp;gt; bytes:
    """
    Encode a string using Base58
    """
    v = scrub_input(v)

    nPad = len(v)
    v = v.lstrip(b"\0")
    nPad -= len(v)

    p, acc = 1, 0
    for c in reversed(v):
        acc += p * c
        p = p &amp;lt;&amp;lt; 8
    result = b58encode_int(acc, default_one=False, alphabet=alphabet)
    return alphabet[0:1] * nPad + result


def b58decode_int(v: Union[str, bytes], alphabet: bytes = BITCOIN_ALPHABET) -&amp;gt; int:
    """
    Decode a Base58 encoded string as an integer
    """
    v = v.rstrip()
    v = scrub_input(v)

    decimal = 0
    for char in v:
        decimal = decimal * 58 + alphabet.index(char)
    return decimal


def b58decode(v: Union[str, bytes], alphabet: bytes = BITCOIN_ALPHABET) -&amp;gt; bytes:
    """
    Decode a Base58 encoded string
    """
    v = v.rstrip()
    v = scrub_input(v)

    origlen = len(v)
    v = v.lstrip(alphabet[0:1])
    newlen = len(v)

    acc = b58decode_int(v, alphabet=alphabet)

    result = []
    while acc &amp;gt; 0:
        acc, mod = divmod(acc, 256)
        result.append(mod)
    return b"\0" * (origlen - newlen) + bytes(reversed(result))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;save this file and this directory create file btc with any name.py .( my  file name has " btcGeneratorWallet.py " ) and first import this package for project in first file :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import argparse
import hashlib
import os
from binascii import hexlify, unhexlify
from struct import Struct
from utils import g, b58encode, b58decode
import blockcypher
from moneywagon import AddressBalance
import requests
from urllib.request import urlopen
from urllib.request import Request
import satoshi
import re
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after import package can insert all code your file.py :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
PACKER = Struct("&amp;gt;QQQQ")


def count_leading_zeroes(s):
    count = 0
    for c in s:
        if c == "\0":
            count += 1
        else:
            break
    return count


def base58_check_encode(prefix, payload, compressed=False):
    # Add version byte in front of RIPEMD-160 hash (0x00 for Main Network)
    s = prefix + payload
    if compressed:
        s = prefix + payload + b"\x01"
    # Add the 4 checksum bytes at the end of extended RIPEMD-160 hash. This is the 25-byte binary Bitcoin Address.
    checksum = hashlib.sha256(hashlib.sha256(s).digest()).digest()[0:4]
    result = s + checksum
    return "1" * count_leading_zeroes(result) + b58encode(result).decode()


def pub_key_to_addr(s):
    ripemd160 = hashlib.new("ripemd160")
    hash_sha256 = hashlib.new("SHA256")
    # Perform SHA-256 hashing on the public key
    hash_sha256.update(bytes.fromhex(s))
    # Perform RIPEMD-160 hashing on the result of SHA-256
    ripemd160.update(hash_sha256.digest())
    return base58_check_encode(b"\0", ripemd160.digest())


def btcwb(number):
    number0 = number &amp;gt;&amp;gt; 192
    number1 = (number &amp;gt;&amp;gt; 128) &amp;amp; 0xFFFFFFFFFFFFFFFF
    number2 = (number &amp;gt;&amp;gt; 64) &amp;amp; 0xFFFFFFFFFFFFFFFF
    number3 = number &amp;amp; 0xFFFFFFFFFFFFFFFF

    private_key = hexlify(PACKER.pack(number0, number1, number2, number3)).decode(
        "utf-8"
    )

    ###############################################
    print("Converting from: " + str(int(private_key, 16)))
    ###############################################

    compressed_key = base58_check_encode(b"\x80", unhexlify(private_key), True)

    ###############################################
    print("Private key    : " + compressed_key)
    ###############################################

    # address
    x, y = str(g * int(private_key, 16)).split()
    len1 = len(x)
    len2 = len(y)
    if len1 != 64:
        z = 64 - len1
        x = "0" * z + x
    if len2 != 64:
        z = 64 - len2
        y = "0" * z + y
    compressed_public_key_with_out_prefix = x + y
    pk_prefix = "02"
    if not int(compressed_public_key_with_out_prefix[64:], 16) % 2 == 0:
        pk_prefix = "03"
    compressed_public_key = pk_prefix + compressed_public_key_with_out_prefix[:64]

    ###############################################

    print("Public key     : " + compressed_public_key)
    print("Bitcoin address: " + pub_key_to_addr(compressed_public_key))
    with open("wallet.txt", "a") as f:
        f.write(
            "Converting from: "
            + str(int(private_key, 16))
            + "\nPrivate key: "
            + compressed_key
            + "\nPublic key: "
            + compressed_public_key
            + "\nBitcoin address: "
            + pub_key_to_addr(compressed_public_key)
            + "\n#####################################################################\n\n\n\n"
        )


def int_to_address(number):
    number0 = number &amp;gt;&amp;gt; 192
    number1 = (number &amp;gt;&amp;gt; 128) &amp;amp; 0xFFFFFFFFFFFFFFFF
    number2 = (number &amp;gt;&amp;gt; 64) &amp;amp; 0xFFFFFFFFFFFFFFFF
    number3 = number &amp;amp; 0xFFFFFFFFFFFFFFFF

    private_key = hexlify(PACKER.pack(number0, number1, number2, number3)).decode(
        "utf-8"
    )

    ###############################################
    print("Converting from: " + str(int(private_key, 16)))
    ###############################################

    compressed_key = base58_check_encode(b"\x80", unhexlify(private_key), True)

    ###############################################
    print("Private key    : " + compressed_key)
    ###############################################

    # address
    x, y = str(g * int(private_key, 16)).split()
    len1 = len(x)
    len2 = len(y)
    if len1 != 64:
        z = 64 - len1
        x = "0" * z + x
    if len2 != 64:
        z = 64 - len2
        y = "0" * z + y
    compressed_public_key_with_out_prefix = x + y
    pk_prefix = "02"
    if not int(compressed_public_key_with_out_prefix[64:], 16) % 2 == 0:
        pk_prefix = "03"
    compressed_public_key = pk_prefix + compressed_public_key_with_out_prefix[:64]

    ###############################################

    print("Public key     : " + compressed_public_key)
    ###############################################

    ###############################################
    print("Bitcoin address: " + pub_key_to_addr(compressed_public_key))
    try:
        total = blockcypher.get_total_balance(pub_key_to_addr(compressed_public_key))
    except:
        total = AddressBalance().action("btc", pub_key_to_addr(compressed_public_key))
    total_fiat = satoshi.to_fiat(int(total))
    # r = requests.get("https://blockchain.infor/rawaddr/{}".format(pub_key_to_addr(compressed_public_key)))
    tr = Request(
        "https://blockchain.info/q/getreceivedbyaddress/"
        + pub_key_to_addr(compressed_public_key)
    )
    total_received = str(urlopen(tr).read())
    trr = total_received[2:][:-1]
    total_fiat_received = satoshi.to_fiat(int(trr))

    ts = Request(
        "https://blockchain.info/q/getsentbyaddress/"
        + pub_key_to_addr(compressed_public_key)
    )
    total_sent = str(urlopen(ts).read())
    tsr = total_sent[2:][:-1]
    total_fiat_sent = satoshi.to_fiat(int(tsr))
    # print('$'+str(s))
    print("Total Sent     : " + str(tsr) + " || $" + str(total_fiat_sent))
    print("Total Received : " + str(trr) + " || $" + str(total_fiat_received))
    print("Final Balance  : " + str(total) + " || $" + str(total_fiat) + "\n")
    # stotal = blockcypher.from_satoshis(total, 'btc')
    with open("walletb.txt", "a") as f:
        f.write(
            "Converting from: "
            + str(int(private_key, 16))
            + "\nPrivate key: "
            + compressed_key
            + "\nPublic key: "
            + compressed_public_key
            + "\nBitcoin address: "
            + pub_key_to_addr(compressed_public_key)
            + "\nFianl Balance: "
            + str(total)
            + "\nTotal Received : "
            + str(trr)
            + " || $"
            + str(total_fiat_received)
            + "\nTotal Sent     : "
            + str(tsr)
            + " || $"
            + str(total_fiat_sent)
            + "\n#####################################################################\n\n\n\n"
        )
    if 0 &amp;lt; total:
        print(pub_key_to_addr(compressed_public_key) + " : " + total)
        with open("wallet_with_money.txt", "a") as m:
            m.write(
                "Converting from: "
                + str(int(private_key, 16))
                + "\nPrivate key: "
                + compressed_key
                + "\nPublic key: "
                + compressed_public_key
                + "\nBitcoin address: "
                + pub_key_to_addr(compressed_public_key)
                + "\nBitcoin Balance: "
                + str(total)
                + "\n#####################################################################\n\n\n\n"
            )
    else:
        pass
    ###############################################


def wif_to_key(wif):
    slicer = 4
    if wif[0] in ["K", "L"]:
        slicer = 5
    return hexlify(b58decode(wif)[1:-slicer]).decode("utf-8")


def main():
    try:
        os.system(r"cls")
    except:
        os.system(r"clear")
    print(
        """
 ____ _____ ____  __        __    _ _      _      ____                           _             
| __ )_   _/ ___| \ \      / /_ _| | | ___| |_   / ___| ___ _ __   ___ _ __ __ _| |_ ___  _ __ 
|  _ \ | || |      \ \ /\ / / _` | | |/ _ \ __| | |  _ / _ \ '_ \ / _ \ '__/ _` | __/ _ \| '__|
| |_) || || |___    \ V  V / (_| | | |  __/ |_  | |_| |  __/ | | |  __/ | | (_| | || (_) | |   
|____/ |_| \____|    \_/\_/ \__,_|_|_|\___|\__|  \____|\___|_| |_|\___|_|  \__,_|\__\___/|_|  
    Author    : Mohammadreza (MMDRZA.COM)
    Github    : https://mmdrza.com                                                                                                                                                                                                    
[1] Generate a List of Wallets with a Range [with Balances]
[2] Generate a List of Wallets with a Range [without Balances]
[3] Guess a Number List to Generate a Wallet
'q' for quit
     """
    )

    x = input("&amp;gt;&amp;gt;&amp;gt; ")
    if x == "q":
        try:
            quit()
        except:
            exit()
    elif x == "1":
        r1 = int(input("Input Starting Range :&amp;gt; "))
        r2 = int(input("Input Ending Range   :&amp;gt; "))
        for x in range(r1, r2):
            int_to_address(x)
    elif x == "2":
        r1 = int(input("Input Starting Range :&amp;gt; "))
        r2 = int(input("Input Ending Range   :&amp;gt; "))
        for x in range(r1, r2):
            btcwb(x)
    elif x == "3":
        print("Enter your lucky number in the following format:")
        print("ex: 1 2 456 788 123 657 11 66 234 68 23\n")
        array = map(int, input("Enter Numbers by Keeping Space : ").split())
        for i in array:
            int_to_address(i)
            i += 1
    else:
        print("Command not Recognized")


main()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;for running this file and received result use this common in your terminal ( or cmd ) :&lt;br&gt;
&lt;code&gt;&lt;br&gt;
python btcGeneratorWallet.py ( this my file )&lt;br&gt;
python &amp;lt;filename&amp;gt;.py &lt;br&gt;
&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;easy finder bitcoin private key wallet ( generator and finder )&lt;br&gt;
can visit this site: &lt;a href="https://key.config.ws"&gt;https://key.config.ws&lt;/a&gt; for bitcoin wallet generator and keyword automatic finder free online .&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Some Javascript Methods: slice() &amp; splice()</title>
      <author>Allen Valdez</author>
      <pubDate>Mon, 17 Jan 2022 02:06:14 +0000</pubDate>
      <link>https://dev.to/avaldez98/some-javascript-methods-slice-splice-330f</link>
      <guid>https://dev.to/avaldez98/some-javascript-methods-slice-splice-330f</guid>
      <description>&lt;p&gt;Hey everyone, my name is Dez and I am new to programming as well. I wanted to share my understandings of some javascript methods I have learned. If I messed anything up PLEASE feel free to correct me and I will change it. Also if you want to add some more methods or tips/tricks in the comments that will be awesome!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-slice"&gt;
  &lt;/a&gt;
  1.) slice()
&lt;/h2&gt;

&lt;p&gt;Slice is a non-mutating method (this means it does not change the original array). This method extracts selected items from an array and returns the extracted items. The slice method looks like this &lt;code&gt;array.slice(from, until);&lt;/code&gt; Now you might be confused with the "until" part. SO I will do my best to explain it because the until part was CONFUSING!&lt;br&gt;
What I found was that the "until" part is NOT the end index, instead, it's until ANOTHER element index. For example, let's say I want to slice an array from index 2 to index 4 we will write &lt;code&gt;array.slice(2,5)&lt;/code&gt; Think of this 5 as in "STOP AT INDEX 5 BUT DO NOT INCLUDE". Now let's create an instance and try to use slice to get what we wanted&lt;/p&gt;

&lt;p&gt;EX 1-1:&lt;br&gt;
myHobbies.slice example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The following code is an array with my hobbies as elements&lt;br&gt;
&lt;code&gt;const myHobbies = ["Muay Thai", "Boxing", "Programming", "Lifting weights", "Learning about Artificial Intelligence"]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let's say we can extract Programming, Lifting Weights, and Learning about Artificial Intelligence. We will write it as follows:&lt;br&gt;
&lt;code&gt;myHobbies.slice(2, 5)&lt;/code&gt;&lt;br&gt;
This will extract my desired items and if I wanted to we can save them into a variable because the method RETURNS my selected items into a new array. So if I were to console.log what I wrote above I will get:&lt;br&gt;
&lt;code&gt;['Programming', 'Lifting Weights', 'Learning about Artificial Intelligence']&lt;/code&gt;&lt;br&gt;
Now if I were to console.log myHobbies I will get:&lt;br&gt;
&lt;code&gt;["Muay Thai", "Boxing", "Programming", "Lifting weights", "Learning about Artificial Intelligence"]&lt;/code&gt;&lt;br&gt;
This is because this method is non-mutating remember?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-splice"&gt;
  &lt;/a&gt;
  2.) splice()
&lt;/h2&gt;

&lt;p&gt;Splice IS NOT THE SAME AS SLICE!!! A lot of devs get this confused because the names are similar. Now splice CHANGES an array by adding or removing elements from the array.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Removing Elements with splice()
In order to remove elements using splice, we will need to provide the method with the index of the element along with the number of elements to be removed. It will be written as such: &lt;code&gt;array.splice(index, number of elements);&lt;/code&gt; Where "index" is the starting point and number of elements is how many elements we want to be removed starting from our desired start point going up. Now if we fail to include a second argument every single element starting from your start point and up will be REMOVED. Now let's see it in action&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;EX 2-1:&lt;br&gt;
Now let's say we have the same array as before which is &lt;code&gt;const myHobbies = ["Muay Thai", "Boxing", "Programming", "Lifting weights", "Learning about Artificial Intelligence"]&lt;/code&gt;. Now let's say we got injured and we are no longer interested in lifting weight. We also figured that we no longer want to learn about artificial intelligence. Now to remove these 2 elements from our myHobbies array we can use the splice method!&lt;br&gt;
`myHobbies.splice(3,2)'&lt;br&gt;
What this does is that it will begin on index 3 which is "Lifting Weights" and will REMOVE 2 elements. These elements will be the starting point and the next element. This means if we console.log myHobbies we will see ["Muay Thai", "Boxing", and "Programming"] Awesome right?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding Elements
In order to add elements, we will need to pass them as the 3rd, 4th, 5th ...nth parameter. Depending on how much you want to add of course. So it will look like this &lt;code&gt;array.splice(index, number of elements, element, element, element)&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;EX 2-2:&lt;/p&gt;

&lt;p&gt;Let's look at our previous array again which is &lt;code&gt;const myHobbies = ["Muay Thai", "Boxing", "Programming", "Lifting weights", "Learning about Artificial Intelligence"]&lt;/code&gt;. Let's say we picked up new hobbies and we want to add them. In order to NOT remove anything, but add new elements we can do it like this.&lt;br&gt;
&lt;code&gt;myHobbies.splice(5,0, 'Machine Learning', 'Running','CyberSecurity')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now if we console.log myHobbies we will see [ 'Muay Thai', 'Boxing', 'Programming', 'Lifting weights', 'Learning about Artificial Intelligence', 'Machine Learning', 'Running', 'CyberSecurity']&lt;br&gt;
NOTE: Notice how I put 5 as the index. This means I wanted to start on the 5th index which is "Learning about Artificial Intelligence" and add it at the end. You can begin in ANY index and add it in. This means you can throw in some elements in the center if you really wanted to.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Leading developer relations at a Silicon Valley Startup</title>
      <author>Hassan El Mghari</author>
      <pubDate>Mon, 17 Jan 2022 01:19:51 +0000</pubDate>
      <link>https://dev.to/nutlope/leading-developer-relations-at-a-silicon-valley-startup-kbd</link>
      <guid>https://dev.to/nutlope/leading-developer-relations-at-a-silicon-valley-startup-kbd</guid>
      <description>&lt;p&gt;Moving to San Fransisco and working for a startup in Silicon Valley has been a dream of mine for a while. After all, it is the startup tech hub of the world. As a fresh college graduate last year, I got a chance to make it a reality.&lt;/p&gt;

&lt;p&gt;I want to tell the story of leading growth and developer relations at an early stage devtool startup called &lt;a href="https://fig.io/"&gt;Fig&lt;/a&gt;. It all started with a &lt;a href="https://drive.google.com/file/d/1omm8WyOaTWf3vFMIEGd0eJQGO1hSq1bN/view?usp=sharing"&gt;Twitter DM&lt;/a&gt;, that lead to an interview, that a few weeks later, led to me moving across the country to San Fransisco.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-work"&gt;
  &lt;/a&gt;
  The work
&lt;/h2&gt;

&lt;p&gt;To set the scene, we were a small and scrappy team of 6 having recently raised a seed round of a few million dollars. And we just needed to execute.&lt;/p&gt;

&lt;p&gt;The fast pace was no joke. In the first week, we spent about 12h a day at the office for onboarding, that then decreased to ~10.5h a day. The founders spent even more time working. We prioritized tasks on a week to week basis which led to me being able to work on a wide variety of things. In terms of the &lt;a href="https://twitter.com/Nutlope/status/1459765327047315460"&gt;3 pillars of developer advocacy&lt;/a&gt;, I was lucky to do work in every pillar.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#what-i-did"&gt;
  &lt;/a&gt;
  What I did
&lt;/h1&gt;

&lt;p&gt;What I did while I was at Fig can be broken down into five primary areas:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-discord-community"&gt;
  &lt;/a&gt;
  1. Discord Community
&lt;/h2&gt;

&lt;p&gt;I helped grow the Fig Discord community by DMing new users and answering people's questions. At one point, I sent a personalized DM to every single user that joined until it become unscalable.&lt;/p&gt;

&lt;p&gt;I also livestreamed myself contributing to Fig's open source repo weekly on the Discord to encourage our users to contribute and did a livestream with &lt;a href="https://www.youtube.com/watch?v=Avsjqc2uWQc&amp;amp;t=1108s&amp;amp;ab_channel=NaderDabit"&gt;Nader + Fig's CEO&lt;/a&gt;. I ended up helping them scale their Discord community from 1k members to over 2k over the two months I was there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-twitter-account"&gt;
  &lt;/a&gt;
  2. Twitter Account
&lt;/h2&gt;

&lt;p&gt;I came up with our &lt;a href="https://elmghari.com/twitter-strategy"&gt;Twitter strategy&lt;/a&gt; and executed, posting a variety of tweets over an average of 5 times a week. Fig was a very visual product so I also recorded a lot of short videos and GIFs to show it off.&lt;/p&gt;

&lt;p&gt;We also ran promotions and giveaways on Twitter. Fig was invite-only at the time so we partnered with popular developer influencers to give away hundreds of Fig invites and increase our userbase. I ended up growing their Twitter from 2k to over 4.5k followers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-open-source-contributions"&gt;
  &lt;/a&gt;
  3. Open Source Contributions
&lt;/h2&gt;

&lt;p&gt;Another thing I did was manage our &lt;a href="https://github.com/withfig/autocomplete"&gt;open source repo&lt;/a&gt;. Along with a part-time team member, I reviewed dozens of PRs with some back and forth with our contributors to make sure we were pushing quality code and following best practices.&lt;/p&gt;

&lt;p&gt;I also submitted several PRs myself ‚Äì a total of &lt;a href="https://github.com/withfig/autocomplete/graphs/contributors"&gt;63 commits and 19k lines of code&lt;/a&gt;. Some of this code was generated using CLI parsers and scripts that I wrote. You can look through my commits &lt;a href="https://github.com/withfig/autocomplete/commits?author=Nutlope"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-writing-code"&gt;
  &lt;/a&gt;
  4. Writing code
&lt;/h2&gt;

&lt;p&gt;Yet another thing I helped with was the frontend for our Fig settings app. I redesigned and reimplemented it, fixed some bugs, and added features to make it easier for users to customize their settings.&lt;/p&gt;

&lt;p&gt;I also helped with creating parsers for popular CLI tools like curl and GCC. I did this to programatically grab all the different options and arguments of a CLI tool and generate a completion spec so Fig could &lt;a href="https://twitter.com/fig/status/1424856260780847113"&gt;autocomplete&lt;/a&gt; for them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-developer-experience"&gt;
  &lt;/a&gt;
  5. Developer Experience
&lt;/h2&gt;

&lt;p&gt;The final thing I did was help improve the overall developer experience of the product. I collected feedback from users each week through Discord chats, Twitter DMs, zoom calls, and my livestreams and relayed it over to our engineering team.&lt;/p&gt;

&lt;p&gt;I also revamped our entire documentation to improve the UI, base it on the &lt;a href="https://documentation.divio.com/"&gt;Divio system&lt;/a&gt; and write a few extra guides. Naturally, our docs used Next.js and were hosted on Vercel :)&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#lessons-learned"&gt;
  &lt;/a&gt;
  Lessons Learned
&lt;/h1&gt;

&lt;p&gt;Overall, my work contributed to us getting thousands of more members in our Discord and Twitter, which lead to more OSS contributors, more Github stars, and significantly more users. I'm proud of what I did at Fig.&lt;/p&gt;

&lt;p&gt;It was a hectic and rewarding couple months and even though it didn't work out in the end, I'm extremely thankful to Fig to giving me my start in the world of SF startups and for everything I learned.&lt;/p&gt;

&lt;p&gt;They taught me how to ruthlessly prioritize and focus on the biggest pain points first. They taught me that a plan means nothing without solid execution. And they taught me that unexpected events occur and you need to be ready to deal with them.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>javascript</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Rare &amp; useful Git commands summarized + solution to difficult scenarios while using Git</title>
      <author>Pranav</author>
      <pubDate>Mon, 17 Jan 2022 00:44:53 +0000</pubDate>
      <link>https://dev.to/pranav016/rare-useful-git-commands-summarized-solution-to-difficult-scenarios-while-using-git-3m4i</link>
      <guid>https://dev.to/pranav016/rare-useful-git-commands-summarized-solution-to-difficult-scenarios-while-using-git-3m4i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#git-commands"&gt;
  &lt;/a&gt;
  Git commands
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git restore .&lt;/code&gt; - restores the files to the previous commit/ undos all the local changes that haven't been commited.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git restore index.html&lt;/code&gt; - restores only that particular file to the recent commit/ undos all the local/uncommited changes for that file.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git reset --hard &amp;lt;hash code of the commit&amp;gt;&lt;/code&gt; - removes commits and goes back to the commit for that hash code&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git reset --source &amp;lt;hash code&amp;gt; index.html&amp;gt;&lt;/code&gt;- removes commits and goes back to the commit for that hash code only for that particular file.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git commit --amend -m 'Your message'&lt;/code&gt;- helps re-write messages&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git revert &amp;lt;hash code&amp;gt;&lt;/code&gt;- helps to roll back to a previous commit by creating a new commit for it. Doesn't removes those commits from the &lt;code&gt;log&lt;/code&gt; like &lt;code&gt;git reset&lt;/code&gt; does.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git reflog&lt;/code&gt;- this can be useful to bring back deleted commits/files/changes. Use &lt;code&gt;git reset &amp;lt;hash code of lost commit from reflog&amp;gt;&lt;/code&gt; to bring back rolled changes.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git reset HEAD~2&lt;/code&gt;- Helps roll back by 2 commits and unstage all the changes in those 2 removed commits.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git reset HEAD~2 --hard&lt;/code&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git rebase&lt;/code&gt; (most useful command)- Reapply commits on top of another base tip. ex. &lt;code&gt;git rebase master&lt;/code&gt; sets the branch at the tip of master branch&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#moving-commited-changes-to-a-new-branch-scenario-you-accidently-worked-on-master"&gt;
  &lt;/a&gt;
  Moving commited changes to a new branch: (scenario: you accidently worked on master)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  -   Use &lt;code&gt;git checkout -b new-feature&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  -   Then roll back commits on master using &lt;code&gt;git reset HEAD~1 --hard&lt;/code&gt;: (this command will roll back 1 commit)

&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stashing"&gt;
  &lt;/a&gt;
  Stashing-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Use &lt;code&gt;git stash&lt;/code&gt; when you want to record the current state of the working directory and the index, but want to go back to a clean working directory. The command saves your local modifications away and reverts the working directory to match the HEAD commit.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The modifications stashed away by this command can be listed with &lt;code&gt;git stash list&lt;/code&gt;, inspected with &lt;code&gt;git stash show&lt;/code&gt;, and restored (potentially on top of a different commit) with &lt;code&gt;git stash apply&lt;/code&gt;. Calling &lt;code&gt;git stash&lt;/code&gt; without any arguments is equivalent to &lt;code&gt;git stash push&lt;/code&gt;.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git stash&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  stashes/ saves the changes in the back of the project/ another directory of the project and the control moves back to the last working copy of the last commit.&lt;/li&gt;
&lt;li&gt;  saves the changes as a draft and moves back to code of the last commit

&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git stash push -m "Message"&lt;/code&gt;- Adds a message for the stash to the stash list&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git stash list&lt;/code&gt; - lists all the draft changes in the back of the project&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Tip-&lt;/strong&gt; The stash list stores all the stashes and each stashed feature/code has a unique index number to it. The last added stash always appears at the top with index 0.&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git stash apply&lt;/code&gt; - applies the last stashed draft to our current working directory&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git stash apply &amp;lt;index number&amp;gt;&lt;/code&gt; - applies the particular indexed stash to our current working directory&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git stash drop &amp;lt;index number&amp;gt;&lt;/code&gt; - drops the stash out of the stash list with the particular index&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git stash pop&lt;/code&gt;- pops the last draft changes back into the working directory/ on the working branch and that draft is then removed from the stash list&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git stash pop &amp;lt;index number&amp;gt;&lt;/code&gt;- pops the draft change with the particular index back into the working directory/ on the working branch and that draft is then removed from the stash list&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git stash clear&lt;/code&gt;- clears/ deletes all the draft changes stored&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#moving-commited-changes-to-an-already-existing-branch-using-cherrypick"&gt;
  &lt;/a&gt;
  Moving commited changes to an already existing branch using cherry-pick:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  -   &lt;code&gt;git checkout feature-branch&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  -   &lt;code&gt;git cherry-pick &amp;lt;hash code of that commit on master&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  -   &lt;code&gt;git checkout master&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  -   &lt;code&gt;git reset HEAD~1 --hard&lt;/code&gt; (rolls back 1 commit)

&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#squashing-commits"&gt;
  &lt;/a&gt;
  Squashing commits-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;git rebase -i &amp;lt;hash code of the commit above which all the commits need to be squashed&amp;gt;&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;  i stands for interactive squash&lt;/li&gt;
&lt;li&gt;  opens up squashing in vim editor where you can pick or squash and update commit messages&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>devops</category>
      <category>git</category>
      <category>opensource</category>
    </item>
    <item>
      <title>I erroneously deletedy root partition.  Now what?</title>
      <author>Calin Baenen</author>
      <pubDate>Sun, 16 Jan 2022 23:25:09 +0000</pubDate>
      <link>https://dev.to/baenencalin/i-erroneously-deletedy-root-partition-now-what-2oi3</link>
      <guid>https://dev.to/baenencalin/i-erroneously-deletedy-root-partition-now-what-2oi3</guid>
      <description>&lt;p&gt;Posted on Reddit's &lt;code&gt;r/archlinux&lt;/code&gt; and &lt;code&gt;r/techsupport&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Is there a way I can reinstall Arch from the bootstick I still have?  &lt;/p&gt;

&lt;p&gt;I've been following &lt;a href="https://www.diskpart.com/articles/grub-rescue-unknown-file-system-0825.html#toc.0.40649366859536595"&gt;this&lt;/a&gt; tutorial, and how my system and it differs is that all of my partitions have "unknown filesystems".&lt;/p&gt;

&lt;p&gt;Here's a backlog:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
    error: disk `lvmid/MMwt86-jYqe-hUn1 ... zo7KQw' not found.
    Entering rescue mode...
    grub rescue&amp;gt; ls
    (hd0) (hd1) (hd1,gpt2) (hd1,gpt1)
    grub rescue&amp;gt; ls (hd0)
    (hd0): File-system is unknown.
    grub rescue&amp;gt; set
    cmdpath=(hd1,gpt1)/EFI/grub_uefi
    prefix=(lvmid/MMwt86-jYqe ... zo7KQw)/boot/grub
    root=lvmid/MMwt86-jYqe-hUn1-x1eI-sqCk-RoXD-NihFx4/49zeY2-wEvE-jsN6-2EqG-5TW4-CeLE-zo7KQe
    grub rescue&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the same error I get for &lt;code&gt;(hd0)&lt;/code&gt; applies to the other three (&lt;code&gt;(hd1)&lt;/code&gt;, &lt;code&gt;(hd1,gpt2)&lt;/code&gt;, and &lt;code&gt;(hd1,gpt1)&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;IMPORTANT NOTE:&lt;br&gt;
&lt;code&gt;(hd1,)&lt;/code&gt; is my bootstick. Removing it beforehand results in &lt;code&gt;(hd0) (hd0,gpt2) (hd0,gpt1)&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>archlinux</category>
      <category>linux</category>
      <category>grub</category>
      <category>help</category>
    </item>
    <item>
      <title>Firing on all cylinders(Part 1): Understanding object value lookup in JavaScript interpreters and the rise of hidden classes</title>
      <author>Austin Burger</author>
      <pubDate>Sun, 16 Jan 2022 23:23:07 +0000</pubDate>
      <link>https://dev.to/about14sheep/firing-on-all-cylinderspart-1-understanding-object-value-lookup-in-dynamic-languages-and-the-rise-of-hidden-classes-in-v8-5h62</link>
      <guid>https://dev.to/about14sheep/firing-on-all-cylinderspart-1-understanding-object-value-lookup-in-dynamic-languages-and-the-rise-of-hidden-classes-in-v8-5h62</guid>
      <description>&lt;p&gt;There is a lot of information around writing performant JavaScript and optimizing your code for the v8 engine. When you are reading through this information you will see a lot of phrases like &lt;em&gt;inline caching&lt;/em&gt;, &lt;em&gt;hidden classes&lt;/em&gt;, and &lt;em&gt;memory offset&lt;/em&gt;; but what does it all mean? You'll come across quick one-liners about "always instantiating your object properties in the same order" or, better yet, "assign all of the objects properties in the constructor". You try to dive into the documentation only to see branching charts with a million tiny words in it that look more like Harry Potter's family tree. At the end of all this, you end up just trying to commit those one liners to memory without fully understanding &lt;em&gt;why&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In this series, I am going to attempt to explain these concepts in a way where we don't need pages of flow charts, and with approachable examples (not just look at this code).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-expect"&gt;
  &lt;/a&gt;
  What to expect
&lt;/h2&gt;

&lt;p&gt;We will start by going over the difference between dynamic and non-dynamic languages (mostly pertaining to how they store objects in memory). Then, in part 2, we will dive into the v8 engine and the methods it uses to efficiently handle the concepts we discuss in part 1. Also, in part 2, I will describe the common pitfalls and ways you can increase the performance of your code. However, you can't make the code better without first understanding the &lt;em&gt;why&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-begin"&gt;
  &lt;/a&gt;
  Before we begin
&lt;/h2&gt;

&lt;p&gt;Although I am going to try and explain these concepts in an approachable way, these are not easy concepts to grasp. Most developers can go their entire career without digging into the minute details of how a particular JavaScript engine accesses objects in memory. &lt;/p&gt;

&lt;p&gt;Modern JavaScript Interpreters, like v8, are amazing tech and mostly handle all of this for you. Furthermore, with TypeScript, you have a compiler that can help keep you from making a lot of the common mistakes that can lead to a decrease in performance. However, taking the time to try and understand what is happening under the hood can go a long way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-dynamic-language"&gt;
  &lt;/a&gt;
  The dynamic language
&lt;/h2&gt;

&lt;p&gt;JavaScript is a &lt;em&gt;dynamic&lt;/em&gt; programming language. This means that you can add, remove, and change (the type) property values of objects &lt;em&gt;after&lt;/em&gt; they are initialized. Let's look at the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Define a simple constructor function for an employee&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;salary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Instantiate a new employee&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newHire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sales&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Dynamically add the employee's desired pay day&lt;/span&gt;
&lt;span class="nx"&gt;newHire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payDay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the employee object is created, their preferred &lt;code&gt;payDay&lt;/code&gt; is added &lt;em&gt;dynamically&lt;/em&gt;. This is all perfectly valid JavaScript. It will run just fine and the newly hired employee will get paid every Saturday.&lt;/p&gt;

&lt;p&gt;The difference between a non-dynamic programming language (meaning all of an objects properties are fixed before compilation) is that new properties &lt;strong&gt;cannot&lt;/strong&gt; be added or removed at runtime. The benefit to a language being non-dynamic is that the values of these properties (or pointers) can be stored in memory with a fixed offset (an integer indicating the displacement between the beginning of an object in memory and any given property). This offset can be easily determined based on the properties type.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Skrrtttt... offset?!?! &lt;strong&gt;displacement&lt;/strong&gt;?!?! You said this would be easy to follow and approachable!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You're right, this is why I decided to do this blog in two parts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#memory-storage-displacement-offset"&gt;
  &lt;/a&gt;
  Memory storage displacement (offset)
&lt;/h2&gt;

&lt;p&gt;The easiest way to explain this is with a simple data structure like an array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We know we can access a value in that array using its index:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// this will get us the item at index 2 ('value3')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the first value (&lt;code&gt;'value1'&lt;/code&gt;) is at memory position 0, moving two places to the right will give you (&lt;code&gt;'value3'&lt;/code&gt;). So &lt;code&gt;'value3'&lt;/code&gt; has an offset of 2 from the &lt;em&gt;start&lt;/em&gt; of where the array is stored in memory.&lt;/p&gt;

&lt;p&gt;This is simple enough for an array, however not all objects are stored in memory sequentially like an array is. With more complex objects, like the employee function above, you can't be sure where the object, and its properties, will be stored. Thus making it harder to determine the offset between the objects 'shell' (to keep it simple) and its properties. You could have the 'shell' of the object (&lt;code&gt;function employee() {}&lt;/code&gt;) at position 0, then its property &lt;code&gt;this.salary&lt;/code&gt; at position 6 with other objects in between.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#back-to-dynamic-vs-nondynamic"&gt;
  &lt;/a&gt;
  Back to dynamic vs. non-dynamic
&lt;/h2&gt;

&lt;p&gt;In order to keep up with these offset values, non-dynamic languages (i'll use Java in this case) create a fixed object layout. This layout (or mapping) cannot be changed (as in changing the type), added too, or removed from at runtime. The offset is written in stone, making it easy (usually one instruction) to grab any property value of a given object.&lt;/p&gt;

&lt;p&gt;Since you can add, remove, and even change a properties type in JavaScript at runtime, the interpreter has to allocate a new space in memory and then add a new mapping (offset value) back to the object for every change. It will then have to go back through and clean up the memory by a process called &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management#garbage_collection"&gt;garbage collection&lt;/a&gt;. In order to keep up with these changes, JavaScript interpreters needed a data structure that can change at runtime. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hash-tables"&gt;
  &lt;/a&gt;
  Hash Tables
&lt;/h2&gt;

&lt;p&gt;Instead of using a fixed object layout, like in the non-dynamic Java, most JavaScript interpreters use a dictionary like structure (based on a hash function) to store the objects property values in memory. This is often referred to as a &lt;em&gt;hash table&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;A hash table, simply put, is a collection of key/value pairs. A over-simplified version of what the &lt;code&gt;employee&lt;/code&gt; object might look like in a hash table would be keys mapped to the values of where the &lt;code&gt;employee&lt;/code&gt; object starts in memory, along with the offset value of each of it properties. We can attempt to replicate this using a &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Basics"&gt;Plain Old JavaScript Object&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hashTable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;employeeInstance1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;memoryStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;salary_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;position_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;employeeInstance2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;memoryStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;salary_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;position_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you wanted to add a property to the table (after the value is added in memory), you can simply update that objects 'bucket' in the table.&lt;/p&gt;

&lt;p&gt;Adding &lt;code&gt;payDay&lt;/code&gt; to employee 1 would change the table to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hashTable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;employeeInstance1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;memoryStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;payDay_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// added property and offset&lt;/span&gt;
          &lt;span class="na"&gt;salary_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;position_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;employeeInstance2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;memoryStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;salary_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;position_offset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By doing this, the interpreter is able to add properties to the object anywhere in memory, because it has a dictionary (the hash table) keeping track of where the properties are located and what object they belong too.&lt;/p&gt;

&lt;p&gt;The downside of this is that grabbing the properties value from a hash table is more computationally expensive (more instructions) than the fixed object layout of a non-dynamic language. Instead of having a direct one-to-one mapping of object/property to the offset of where the value is located, the interpreter must search through the hash table for the employee instance, grab the correct property, then use the offset value to &lt;em&gt;finally&lt;/em&gt; get the property's value from memory!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is an extremely over-simplified explanation of how object memory storage hash tables work, but I think it helps in understanding at a very low level (and we are trying to keep this approachable). If you wanted to learn more you can start &lt;a href="https://en.wikipedia.org/wiki/Hash_function"&gt;here&lt;/a&gt; and I have added a very nice blog at the bottom of this post. Just know it is extremely inefficient compared to what is coming next.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#firing-on-all-cylinders"&gt;
  &lt;/a&gt;
  Firing on all cylinders
&lt;/h2&gt;

&lt;p&gt;Since using hash tables to get property values is so inefficient, the JavaScript engine NodeJS uses, 'v8', takes a different approach. This approach is built around using Hidden Classes and made faster by Inline Caching.&lt;/p&gt;

&lt;p&gt;OK! Now that the gritty stuff is out of the way. In part 2 of this series we will dive into hidden classes and inline caching. Once you better understand the concepts, it well help you understand those one-line suggestions, mentioned &lt;em&gt;everywhere&lt;/em&gt;, that can make your JavaScript code more performant.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://craftinginterpreters.com/hash-tables.html"&gt;Blog: Hash tables&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.programcreek.com/2011/11/what-do-java-objects-look-like-in-memory/"&gt;Blog: How Java stores objects in memory&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://v8.dev/blog"&gt;The official v8 engine blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures"&gt;MDN JavaScript types and data structures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Offset_%28computer_science%29"&gt;Wikipedia article on Offset&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>performance</category>
      <category>programming</category>
    </item>
    <item>
      <title>A Guide to writing to better comments</title>
      <author>Timilehin Bakare</author>
      <pubDate>Sun, 16 Jan 2022 23:22:24 +0000</pubDate>
      <link>https://dev.to/plainsight16/a-guide-to-writing-to-better-comments-3pol</link>
      <guid>https://dev.to/plainsight16/a-guide-to-writing-to-better-comments-3pol</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;You're probably thinking," &lt;em&gt;what's new with comments?&lt;/em&gt;" and you'll be right to think that.&lt;br&gt;
Often times, not much thought is put into writing a comment. They are mostly ignored and considered secondary(albeit as they should be) but this negligence has led many programmers into writing very awful comments.&lt;br&gt;
for example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--abUjYqfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u57obznnve450cconcvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--abUjYqfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u57obznnve450cconcvv.png" alt="bad comment code snippet" width="880" height="230"&gt;&lt;/a&gt;&lt;br&gt;
In order to avoid writing comments like this, I have written this article to serve as a guide to writing better comments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-some-guides-to-writing-better-comments"&gt;
  &lt;/a&gt;
  Here are some guides to writing better comments
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Avoid writing redundant comments&lt;/li&gt;
&lt;li&gt;Comments should be updated&lt;/li&gt;
&lt;li&gt;Do not excuse bad code with commenting&lt;/li&gt;
&lt;li&gt;Comments should not reference other codes&lt;/li&gt;
&lt;li&gt;Comments should be informative&lt;/li&gt;
&lt;li&gt;Comments could be used to provide links to original source code&lt;/li&gt;
&lt;li&gt;Comments should not be used for attribution&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The rest of this article explains these guides and provides examples to them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-avoid-writing-redundant-comments"&gt;
  &lt;/a&gt;
  1. Avoid writing redundant comments
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b_GgoW0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umtn14gpsu3kd9yeg7ex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_GgoW0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umtn14gpsu3kd9yeg7ex.png" alt="redundant comments" width="445" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above is common among early-beginners as they're introduced to code, While this could be very helpful with teaching beginners. Its considered redundant as it adds no information and merely causes visual clutter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-comments-should-be-updated"&gt;
  &lt;/a&gt;
  2. Comments should be updated.
&lt;/h3&gt;

&lt;p&gt;Overtime comments silently degrade. While code is continuously updated, the comments are forgotten. For a code cryptic in nature, readers turn to the comments to provide an explanation, and when that explanation is false it leaves the readers confused or worse mislead.&lt;br&gt;
for example: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w4x4lM_o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yjyud10vmvepgnnwrk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w4x4lM_o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yjyud10vmvepgnnwrk3.png" alt="regex-pattern comment" width="666" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The asterisks in the regex pattern show that  it matches a whole lot more than it was stated by the comments which could be very misleading to the readers who do not bother to check the regex pattern.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-do-not-excuse-bad-code-with-commenting"&gt;
  &lt;/a&gt;
  3. Do not excuse bad code with commenting
&lt;/h3&gt;

&lt;p&gt;Commenting should be used as a last resort. Every comment serves as a failure to express yourself clearly in code. Always try to clean the code to express yourself better before resulting to commenting. &lt;br&gt;
for example the code snippet below could have been cleaned up rather than using a comment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yqIpx8Zk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmqsphkf4zxz64lu771k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yqIpx8Zk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmqsphkf4zxz64lu771k.png" alt="bad code" width="877" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After cleaning it up&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXzCgUfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsz7950s8v6138x87e8k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXzCgUfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsz7950s8v6138x87e8k.png" alt="good code" width="423" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-comments-should-not-reference-other-codes"&gt;
  &lt;/a&gt;
  4. Comments should not reference other codes
&lt;/h3&gt;

&lt;p&gt;A comment should not reference a code that is not present or local because the reference code could change but the comment wouldn't&lt;br&gt;
for example&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fs0bXQYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arhaaxo6hj9xwondb10a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fs0bXQYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arhaaxo6hj9xwondb10a.png" alt="poor reference comment" width="880" height="442"&gt;&lt;/a&gt;&lt;br&gt;
The comment above references a "default" that is not present in the code block, this confuses the reader as they don't know what default in the comment means.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-comments-should-be-informative"&gt;
  &lt;/a&gt;
  5. Comments should be informative
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6sGQJtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iomphuwjkwz2sf3ycgay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6sGQJtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iomphuwjkwz2sf3ycgay.png" alt="Informative comment" width="788" height="378"&gt;&lt;/a&gt;&lt;br&gt;
The comment above informs the reader that SimpleDateFormat is not thread-safe, if the code is to be modified, the programmer would be well informed of its limitations. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-comments-could-be-used-to-provide-links-to-original-source-code"&gt;
  &lt;/a&gt;
  6. Comments could be used to provide links to original source code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kD8QWW6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amao4tevyuqdqqx96l49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kD8QWW6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amao4tevyuqdqqx96l49.png" alt="linked comment" width="880" height="301"&gt;&lt;/a&gt;&lt;br&gt;
Readers can follow the link provided in the comments to learn more&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-comments-should-not-be-used-for-attribution"&gt;
  &lt;/a&gt;
  7. Comments should not be used for attribution
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_GizK6pD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97u0u0j1wh138nx1wjjm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_GizK6pD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97u0u0j1wh138nx1wjjm.png" alt="Attribution comment" width="412" height="241"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comments like these are unacceptable especially in production. The source code control systems can always tell who the author was.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this article has been helpful in highlighting the importance of writing  proper comments and the guides provided were well understood.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;References&lt;/em&gt;: Clean code(A handbook of Agile Software Craftsmanship)&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>java</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Things I learned in my first experience as a Frontend Developer</title>
      <author>Beicker</author>
      <pubDate>Sun, 16 Jan 2022 22:39:13 +0000</pubDate>
      <link>https://dev.to/bakercode/things-i-learned-in-my-first-experience-as-a-frontend-developer-380d</link>
      <guid>https://dev.to/bakercode/things-i-learned-in-my-first-experience-as-a-frontend-developer-380d</guid>
      <description>&lt;p&gt;Throughout the last 2 years I have been working in the tech industry, I have learned many things that have made me grow as a person but also as a professional.&lt;/p&gt;

&lt;p&gt;Without a doubt, one of the experiences where I could learn more, was my first job as a developer. Where I learned many good things &lt;em&gt;and others not so good&lt;/em&gt; that helped me to understand too important things.&lt;/p&gt;

&lt;p&gt;Not everything is code. In a company there are more things to pay attention. And if it's small, sometimes is good we realize it to avoid future disasters of all kinds, setbacks, and so on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#always-consider-alternatives"&gt;
  &lt;/a&gt;
  Always consider alternatives
&lt;/h2&gt;

&lt;p&gt;My ex boss was a designer, a good designer. He was always providing the best user experience to anyone who was going to use his UI's. I always liked his way of thinking. His designer mindset was moved to his way of dealing with clients and the way to face clients requirements.&lt;/p&gt;

&lt;p&gt;When clients requirements were too demanding for us he used to &lt;strong&gt;try to understand the main problem&lt;/strong&gt;, the clients necessities and what we really had to solve. This was the way we found solutions that didn't fully meet clients requirements but &lt;strong&gt;were able to solve the problem&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Sometimes we get used to specifics solutions and we end up limiting ourselves unnecessarily while what really matters is &lt;em&gt;to solve a problem&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;No matters how you do it, as long as that doesn't add extra work for us in the future, the only thing you really need to focus on is to get rid of it as easy and efficient as possible. And if you can do it in the most comfortable way for your team, much better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#always-prioritize-your-comfort"&gt;
  &lt;/a&gt;
  Always prioritize your comfort
&lt;/h2&gt;

&lt;p&gt;In this company we had to use Shopify to maintain many online stores which is pretty good since it's a useful CMS for this kind of projects.&lt;/p&gt;

&lt;p&gt;The problem was that one of our clients was a big company and they used to demand very specific features that were a &lt;em&gt;headache&lt;/em&gt; for us because using Shopify for it was very uncomfortable.&lt;/p&gt;

&lt;p&gt;As a Junior dev with no experience taking important decisions I used to do what they told me to do. Working with Shopify code editor using Vanilla JS, HTML/CSS and Liquid (I wish there would've been Hydrogen) to make requests to Shopify API.&lt;/p&gt;

&lt;p&gt;At the beginning everything was going very good but little by slowly &lt;strong&gt;I was feeling worse and worse&lt;/strong&gt; working like that each passing day, which shouldn't happen to any employee.&lt;/p&gt;

&lt;p&gt;That was one of our biggest difficulties we had since development experience became too uncomfortable which led us to losing time, lower quality of our services and a team &lt;em&gt;unmotivated for keeping working&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And yeah, maybe in your company you never have done something like this, but the real problem is not the technology we use, &lt;strong&gt;but if we're thinking in our comfort or not&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This applies to everything, the way we write and organize our code, the methodologies we use in out team, how is our process to build a product as a team, and so on.&lt;/p&gt;

&lt;p&gt;Every "cheap decision" makes our work a little more difficult, and if we never stop they add up over time and we end up &lt;strong&gt;spending more energy just to keep maintaining our projects&lt;/strong&gt; without losing efficiency.&lt;/p&gt;

&lt;p&gt;All because we never thought that there could be a better way to do everything. This also doesn't mean that can't make these decisions, the thing is just to &lt;strong&gt;learn how to recognize when we are able to improve something&lt;/strong&gt; and work as a team to do it successfully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#organization-and-order-are-essential-for-a-team"&gt;
  &lt;/a&gt;
  Organization and order are essential for a team
&lt;/h2&gt;

&lt;p&gt;One of the things I liked about this company was that they didn't conform with just providing services for third parties but also they used to look for creating their own products and services where due to our low number of employees everyone had to be involved as much as possible providing ideas and new points of view.&lt;/p&gt;

&lt;p&gt;We was trying to get others financial sources so the company started to create new projects and spread our attention among many projects.&lt;/p&gt;

&lt;p&gt;We were few people and each of us was working on 3 - 4 projects. As you can imagine, tech teams are just a group of people and no matters how good you can be there is always a limit for humans.&lt;/p&gt;

&lt;p&gt;At some point we progressed with some projects but also we had to finish some features for another one, the deadline arrived and &lt;strong&gt;we ended up without finishing anything&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Again, always we have to prioritize our comfort. A small team with people focusing in only one big project can make much more progress in that project and make more money with it than the same team divided in several projects.&lt;/p&gt;

&lt;p&gt;A team needs order, methodologies and no uncertainty to give the 100% of their energy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We always can learn from our experiences and this wasn't the exception. I'm glad to have experienced this because now I can understand a little better the things that I have to avoid at teamwork to provide real value to a company. I hope to help more Junior devs who are starting their Journey to become a Senior in the areas they want. Thanks for reading :)&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>WTF JavaScript: A Variable with Side Effects</title>
      <author>Lars Grammel</author>
      <pubDate>Sun, 16 Jan 2022 22:38:12 +0000</pubDate>
      <link>https://dev.to/p42/wtf-javascript-a-variable-with-side-effects-5e3h</link>
      <guid>https://dev.to/p42/wtf-javascript-a-variable-with-side-effects-5e3h</guid>
      <description>&lt;p&gt;JavaScript has many quirks and difficult-to-understand behaviors. There are hilarious talks such as &lt;a href="https://www.youtube.com/watch?v=et8xNAc2ic8"&gt;WTFJS&lt;/a&gt; and &lt;a href="https://www.destroyallsoftware.com/talks/wat"&gt;WAT&lt;/a&gt; that make fun of JavaScript for its strangeness.&lt;/p&gt;

&lt;p&gt;Since I work on refactorings, I have to consider many weird and sometimes funny sides of JavaScript. I will share some of the surprising behaviors that I encounter, so if you see them (which you hopefully never will), it might hint at what's going on.&lt;/p&gt;

&lt;p&gt;This blog post explores an innocent-looking statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ... some code&lt;/span&gt;

&lt;span class="nx"&gt;helloWorld&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might intuitively think that nothing should happen here - the statement seems to do nothing because there is no obvious function call here.&lt;/p&gt;

&lt;p&gt;However, it can do anything, for example, print "Hello World!" to the console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ... some code&lt;/span&gt;

&lt;span class="nx"&gt;helloWorld&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c1"&gt;// prints "Hello World!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;How can this even be possible?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It turns out that global variables (in this case, &lt;code&gt;helloWorld&lt;/code&gt;) are properties of the &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Global_object"&gt;global object&lt;/a&gt;. And properties in JavaScript do not have to be simple values. They can be implemented using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get"&gt;getters&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set"&gt;setters&lt;/a&gt;, which can execute code. Since the global object inherits from &lt;code&gt;Object.prototype&lt;/code&gt; in modern JavaScript engines, adding properties to &lt;code&gt;Object.prototype&lt;/code&gt; creates properties on the global object.&lt;/p&gt;

&lt;p&gt;Here, &lt;code&gt;helloWorld&lt;/code&gt; is defined as such a getter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defineProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;helloWorld&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;helloWorld&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c1"&gt;// prints "Hello World!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thankfully this can only happen with global variables, and not with parameters or local variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defineProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;helloWorld&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;helloWorld&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// getter is evaluated, prints "Hello World!"&lt;/span&gt;
&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;// does nothing&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I learned about this strange behavior in a &lt;a href="https://mathiasbynens.be/notes/globalthis"&gt;blog post about the &lt;code&gt;globalThis&lt;/code&gt; polyfill&lt;/a&gt;. In the polyfill, a global property getter is used to access the global &lt;code&gt;this&lt;/code&gt; object in different environments such as browsers, web workers, frames, Node.js, and ES modules. Have a look if you want to know more!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Peregrine Update - The Python-like programming language that's as fast as C++</title>
      <author>Ethan Olchik</author>
      <pubDate>Sun, 16 Jan 2022 22:31:09 +0000</pubDate>
      <link>https://dev.to/ethanolchik/peregrine-update-the-python-like-programming-language-thats-as-fast-as-c-2bf1</link>
      <guid>https://dev.to/ethanolchik/peregrine-update-the-python-like-programming-language-thats-as-fast-as-c-2bf1</guid>
      <description>&lt;p&gt;&lt;em&gt;"Blazing-Fast Language for the Blazing-Fast World" - Peregrine Motto&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey guys, it's been a long time! If you don't already know me, my name is Ethan and I'm one of a few &lt;a href="https://github.com/Peregrine-lang/Peregrine"&gt;Peregrine Programming Language&lt;/a&gt; developers. Over the past few months, we've managed to surpass the progress in the 1st write (code for the 1st write has been deleted) and add new features. This post will be discussing the progress that has been made.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-peregrine"&gt;
  &lt;/a&gt;
  About Peregrine
&lt;/h2&gt;

&lt;p&gt;If you know Python, you know how easy it is. However, it also comes with a big downgrade. Python is slow, and I'm pretty sure every python developer knows this by now. This is kind of annoying. That's where Peregrine comes in. Me and 11 friends have been working on Peregrine for the past few months. Peregine's syntax is very similar to Python's, and it gets trans-compiled to C++, thus making it as fast as C++. Some of you may know Peregrine as the "Language that's as fast as C", however we've decided to trans-compile it to C++ instead of C.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-language-features"&gt;
  &lt;/a&gt;
  New Language Features
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#class"&gt;
  &lt;/a&gt;
  Class
&lt;/h3&gt;

&lt;p&gt;After a lot of work, &lt;a href="https://github.com/peregrine-lang/Peregrine/commit/d4de6e4ab15e866b044dab77009ce9b4b54fae23"&gt;classes have been added to Peregrine&lt;/a&gt;. They essentially act the same way you'd expect them to act in python. Here's a quick example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Vector3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Vector3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x=%d, y=%d, z=%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is pretty self-explanatory. If you put this code into python, you'd just have to change &lt;code&gt;printf&lt;/code&gt; to &lt;code&gt;print&lt;/code&gt; and change the string formatting and then it works like a charm.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enum"&gt;
  &lt;/a&gt;
  Enum
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/peregrine-lang/Peregrine/commit/b953ceba25a84c011068567d0befa7eae699eccc"&gt;Enums have also been added to Peregrine&lt;/a&gt;. They work like any other enum in any other language.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;enum&lt;/span&gt; &lt;span class="n"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;RED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;144&lt;/span&gt;
    &lt;span class="n"&gt;GREEN&lt;/span&gt;
    &lt;span class="n"&gt;BLUE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
    &lt;span class="n"&gt;OTHER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GREEN&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &lt;code&gt;RGB.GREEN&lt;/code&gt; = &lt;code&gt;155&lt;/code&gt;, because the value is defaulted to the previous value + 1. &lt;code&gt;RGB.OTHER&lt;/code&gt; = &lt;code&gt;164&lt;/code&gt;, because 155+9=164.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#union"&gt;
  &lt;/a&gt;
  Union
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/peregrine-lang/Peregrine/commit/599d12db39027a0d22f711a6bba69088cf7d5da3"&gt;Unions&lt;/a&gt;, like in C, C++ etc... are data types that allows the storage of different data types in the same memory location.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;union&lt;/span&gt; &lt;span class="n"&gt;abc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;_x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;abc&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;abc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;abc&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;NOTE: you don't have to create a pointer to a variable of type &lt;code&gt;abc&lt;/code&gt; in order to assign and access it's fields.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-decorators"&gt;
  &lt;/a&gt;
  custom decorators
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/peregrine-lang/Peregrine/commit/52b6129c1d770b90ff6e6b6fb6113e3466b06f9c"&gt;Peregrine supports user-defined decorators&lt;/a&gt;, just like Python. Here's an example that's taken from &lt;a href="https://github.com/peregrine-lang/Peregrine/blob/main/can_comp.pe"&gt;can_comp.pe&lt;/a&gt;, but slightly modified to improve readability (that file is hardcoded):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Answer is %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;decorator&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dec_test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;dec_test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see here, you must define a type for the function being decorated and a type for the return type of the decorator (should return a function).&lt;/p&gt;

&lt;p&gt;The program would output &lt;code&gt;Answer is 100&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more"&gt;
  &lt;/a&gt;
  More
&lt;/h2&gt;

&lt;p&gt;You can find some more code examples in &lt;a href="https://github.com/peregrine-lang/Peregrine/blob/main/can_comp.pe"&gt;can_comp.pe&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planned-features"&gt;
  &lt;/a&gt;
  Planned features
&lt;/h2&gt;

&lt;p&gt;Here are some features that are planned to be implemented into peregrine before the first release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Structs&lt;/li&gt;
&lt;li&gt;Python ecosystem in Peregrine

&lt;ul&gt;
&lt;li&gt;You will be able to use any python module in Peregrine&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Imports&lt;/li&gt;
&lt;li&gt;Standard Library&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Peregrine is planned to release version 0.0.1 sometime between March and April, so make sure to show some support by starring the &lt;a href="https://github.com/peregrine-lang/peregrine"&gt;repo&lt;/a&gt; and make sure to press on the "Watch" button so you don't miss any updates.&lt;/p&gt;

&lt;p&gt;We would greatly appreciate any contributions, so if you find something that you can improve, open a pull-request! You can also check out our &lt;a href="https://github.com/peregrine-lang/peregrine/issues/"&gt;open issues&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks so much for reading!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>cpp</category>
      <category>python</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Group Policy Management Editor'√ºn Dosya Yapƒ±sƒ±nƒ±n ƒ∞ncelenmesi</title>
      <author>Mete ARSLAN</author>
      <pubDate>Sun, 16 Jan 2022 22:28:53 +0000</pubDate>
      <link>https://dev.to/whitehare/group-policy-management-editorun-dosya-yapisinin-incelenmesi-47jm</link>
      <guid>https://dev.to/whitehare/group-policy-management-editorun-dosya-yapisinin-incelenmesi-47jm</guid>
      <description>&lt;h1&gt;
  &lt;a href="#group-policy-management-editor%C3%BCn-dosya-yap%C4%B1s%C4%B1n%C4%B1n-i%CC%87ncelenmesi"&gt;
  &lt;/a&gt;
  Group Policy Management Editor'√ºn Dosya Yapƒ±sƒ±nƒ±n ƒ∞ncelenmesi
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#group-policy-nedir"&gt;
  &lt;/a&gt;
  Group Policy Nedir?
&lt;/h2&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;Group Policy&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Active Directory&lt;/em&gt;&lt;/strong&gt; ortamƒ±nda bulunan kullanƒ±cƒ± ve bilgisayarlarƒ±n konfig√ºrasyonlarƒ±nƒ± kontrol etmemizi saƒülayan Windows y√∂netim √∂zelliƒüidir.&lt;/p&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;Group Policy&lt;/em&gt;&lt;/strong&gt; ile b√ºt√ºn birimler, siteler ve domainler tek ve merkezi bir yerden kontrol edilebilinir. Bu √∂zellik tek tek b√ºt√ºn bilgisayarlarƒ±n konfig√ºrasyonu yapƒ±lmadƒ±ƒüƒ± i√ßin zaman kazandƒ±rƒ±r.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#group-policy-management-editor-nedir"&gt;
  &lt;/a&gt;
  Group Policy Management Editor Nedir?
&lt;/h2&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;Group Policy Management Editor&lt;/em&gt;&lt;/strong&gt;, kullanƒ±cƒ±larƒ±n diƒüer bilgisayar ve kullanƒ±cƒ±larƒ±n konfig√ºrasyon politikalarƒ±nƒ± deƒüi≈ütirmesini saƒülayan Windows y√∂netici aracƒ±dƒ±r.&lt;/p&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;Kullanƒ±cƒ±&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;Bilgisayar&lt;/em&gt;&lt;/strong&gt; olarak ikiye ayrƒ±lƒ±r.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dosya-yap%C4%B1s%C4%B1n%C4%B1n-i%CC%87ncelenmesi"&gt;
  &lt;/a&gt;
  Dosya Yapƒ±sƒ±nƒ±n ƒ∞ncelenmesi
&lt;/h2&gt;

&lt;p&gt;‚Äã Group Policy Management Editor olu≈üturulurken  &lt;strong&gt;&lt;em&gt;" C:\Windows\PolicyDefinitions"&lt;/em&gt;&lt;/strong&gt; dizininin altƒ±ndaki &lt;strong&gt;&lt;em&gt;".admx"&lt;/em&gt;&lt;/strong&gt; uzantƒ±lƒ± dosyalar ve dil dizininin altƒ±ndaki &lt;strong&gt;&lt;em&gt;".adml"&lt;/em&gt;&lt;/strong&gt; uzantƒ±lƒ± dosyalar kullanƒ±lƒ±r. &lt;/p&gt;

&lt;p&gt;‚Äã Yapƒ±lan deƒüi≈üiklikler &lt;strong&gt;&lt;em&gt;"C:\Windows\SYSVOL\domain\Policies{uniqueId}"&lt;/em&gt;&lt;/strong&gt; dizininin altƒ±ndaki &lt;strong&gt;&lt;em&gt;"Machine"&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;"Users"&lt;/em&gt;&lt;/strong&gt; dizinlerindeki &lt;strong&gt;&lt;em&gt;"Registry.pol"&lt;/em&gt;&lt;/strong&gt; dosyasƒ±na kaydedilir.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#admx-uzant%C4%B1l%C4%B1-dosyalar%C4%B1n-i%CC%87ncelenmesi"&gt;
  &lt;/a&gt;
  ".admx" Uzantƒ±lƒ± Dosyalarƒ±n ƒ∞ncelenmesi
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--  (c) 2006 Microsoft Corporation  --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;policyDefinitions&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsd=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema"&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt; &lt;span class="na"&gt;revision=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt; &lt;span class="na"&gt;schemaVersion=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.microsoft.com/GroupPolicy/2006/07/PolicyDefinitions"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;policyNamespaces&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;target&lt;/span&gt; &lt;span class="na"&gt;prefix=&lt;/span&gt;&lt;span class="s"&gt;"diskquota"&lt;/span&gt; &lt;span class="na"&gt;namespace=&lt;/span&gt;&lt;span class="s"&gt;"Microsoft.Policies.DiskQuota"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;using&lt;/span&gt; &lt;span class="na"&gt;prefix=&lt;/span&gt;&lt;span class="s"&gt;"windows"&lt;/span&gt; &lt;span class="na"&gt;namespace=&lt;/span&gt;&lt;span class="s"&gt;"Microsoft.Policies.Windows"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/policyNamespaces&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;resources&lt;/span&gt; &lt;span class="na"&gt;minRequiredRevision=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;categories&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;category&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"DiskQuota"&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DiskQuota)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;parentCategory&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"windows:System"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/category&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/categories&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;policies&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;policy&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Enable"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"Machine"&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_Enable)"&lt;/span&gt; &lt;span class="na"&gt;explainText=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_Enable_Help)"&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"Software\Policies\Microsoft\Windows NT\DiskQuota"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"Enable"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;parentCategory&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"DiskQuota"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;supportedOn&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"windows:SUPPORTED_Win2k"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;enabledValue&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/enabledValue&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;disabledValue&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/disabledValue&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/policy&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;policy&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Enforce"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"Machine"&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_Enforce)"&lt;/span&gt; &lt;span class="na"&gt;explainText=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_Enforce_Help)"&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"Software\Policies\Microsoft\Windows NT\DiskQuota"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"Enforce"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;parentCategory&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"DiskQuota"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;supportedOn&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"windows:SUPPORTED_Win2k"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;enabledValue&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/enabledValue&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;disabledValue&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/disabledValue&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/policy&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;policy&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Limit"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"Machine"&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_Limit)"&lt;/span&gt; &lt;span class="na"&gt;explainText=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_Limit_Help)"&lt;/span&gt; &lt;span class="na"&gt;presentation=&lt;/span&gt;&lt;span class="s"&gt;"$(presentation.DQ_Limit)"&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"Software\Policies\Microsoft\Windows NT\DiskQuota"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;parentCategory&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"DiskQuota"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;supportedOn&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"windows:SUPPORTED_Win2k"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;elements&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LimitValue"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"Limit"&lt;/span&gt; &lt;span class="na"&gt;required=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;maxValue=&lt;/span&gt;&lt;span class="s"&gt;"1000"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;enum&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LimitUnits"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"LimitUnits"&lt;/span&gt; &lt;span class="na"&gt;required=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsKB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsMB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsGB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsTB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsPB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsEB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/enum&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_ThresholdValue"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"Threshold"&lt;/span&gt; &lt;span class="na"&gt;required=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;maxValue=&lt;/span&gt;&lt;span class="s"&gt;"1000"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;enum&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_ThresholdUnits"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"ThresholdUnits"&lt;/span&gt; &lt;span class="na"&gt;required=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsKB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsMB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsGB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsTB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsPB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_UnitsEB)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/enum&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/elements&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/policy&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;policy&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LogEventOverLimit"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"Machine"&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_LogEventOverLimit)"&lt;/span&gt; &lt;span class="na"&gt;explainText=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_LogEventOverLimit_Help)"&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"Software\Policies\Microsoft\Windows NT\DiskQuota"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"LogEventOverLimit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;parentCategory&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"DiskQuota"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;supportedOn&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"windows:SUPPORTED_Win2k"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;enabledValue&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/enabledValue&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;disabledValue&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/disabledValue&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/policy&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;policy&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LogEventOverThreshold"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"Machine"&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_LogEventOverThreshold)"&lt;/span&gt; &lt;span class="na"&gt;explainText=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_LogEventOverThreshold_Help)"&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"Software\Policies\Microsoft\Windows NT\DiskQuota"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"LogEventOverThreshold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;parentCategory&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"DiskQuota"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;supportedOn&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"windows:SUPPORTED_Win2k"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;enabledValue&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/enabledValue&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;disabledValue&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;decimal&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/disabledValue&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/policy&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;policy&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"DQ_RemovableMedia"&lt;/span&gt; &lt;span class="na"&gt;clientExtension=&lt;/span&gt;&lt;span class="s"&gt;"{3610eda5-77ef-11d2-8dc5-00c04fa31a66}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"Machine"&lt;/span&gt; &lt;span class="na"&gt;displayName=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_RemovableMedia)"&lt;/span&gt; &lt;span class="na"&gt;explainText=&lt;/span&gt;&lt;span class="s"&gt;"$(string.DQ_RemovableMedia_Help)"&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"Software\Policies\Microsoft\Windows NT\DiskQuota"&lt;/span&gt; &lt;span class="na"&gt;valueName=&lt;/span&gt;&lt;span class="s"&gt;"ApplyToRemovableMedia"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;parentCategory&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"DiskQuota"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;supportedOn&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"windows:SUPPORTED_Win2k"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/policy&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/policies&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/policyDefinitions&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kmyEEZKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxypodenw9xdzpfpu94p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kmyEEZKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxypodenw9xdzpfpu94p.png" alt="Image description" width="751" height="691"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚Äã Yukarƒ±da g√∂rd√ºƒü√ºn√ºz &lt;strong&gt;&lt;em&gt;"DiskQuota.admx"&lt;/em&gt;&lt;/strong&gt; dosyasƒ±ndandaki &lt;strong&gt;&lt;em&gt;"policy/elements"&lt;/em&gt;&lt;/strong&gt; altƒ±ndaki tag'ler ile &lt;strong&gt;&lt;em&gt;"Options"&lt;/em&gt;&lt;/strong&gt; kƒ±smƒ± olu≈üturulmaktadƒ±r. Bu kƒ±smda olu≈üacak girdi tipleri, girdilerin √∂zellikleri gibi bilgiler bulunur. ƒ∞stenilen ayarlar &lt;strong&gt;&lt;em&gt;"key"&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;"valueName"&lt;/em&gt;&lt;/strong&gt; ile bulunabilinir. Bazƒ± &lt;strong&gt;&lt;em&gt;"policy"&lt;/em&gt;&lt;/strong&gt; tag'lerinin altƒ±nda elements bulunmamaktadƒ±r. Bu durumda &lt;strong&gt;&lt;em&gt;"Options"&lt;/em&gt;&lt;/strong&gt; kƒ±smƒ± olu≈üturulmaz. Alƒ±nan deƒüer √ºste bulunan &lt;strong&gt;&lt;em&gt;"Not Configured"&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;"Enabled"&lt;/em&gt;&lt;/strong&gt; yada &lt;strong&gt;&lt;em&gt;"Disabled"&lt;/em&gt;&lt;/strong&gt; butonlarƒ± ile belirlenir.   &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adml-uzant%C4%B1l%C4%B1-dosyalar%C4%B1n-i%CC%87ncelenmesi"&gt;
  &lt;/a&gt;
  ".adml" Uzantƒ±lƒ± Dosyalarƒ±n ƒ∞ncelenmesi
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--  (c) 2006 Microsoft Corporation  --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;policyDefinitionResources&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsd=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema"&lt;/span&gt;
      &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt; &lt;span class="na"&gt;revision=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt; &lt;span class="na"&gt;schemaVersion=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt;
      &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.microsoft.com/GroupPolicy/2006/07/PolicyDefinitions"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;displayName&amp;gt;&lt;/span&gt;enter display name here&lt;span class="nt"&gt;&amp;lt;/displayName&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;description&amp;gt;&lt;/span&gt;enter description here&lt;span class="nt"&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;resources&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;stringTable&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DiskQuota"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Disk Quotas&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Enable"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Enable disk quotas&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Enable_Help"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This policy setting turns on and turns off disk quota management on all NTFS volumes of the computer, and prevents users from changing the setting.

                        If you enable this policy setting, disk quota management is turned on, and users cannot turn it off.

                        If you disable the policy setting, disk quota management is turned off, and users cannot turn it on.

                        If this policy setting is not configured, disk quota management is turned off by default, but administrators can turn it on.

                        To prevent users from changing the setting while a setting is in effect, the system disables the "Enable quota management" option on the Quota tab of NTFS volumes.

                        Note: This policy setting turns on disk quota management but does not establish or enforce a particular disk quota limit. To specify a disk quota limit, use the "Default quota limit and warning level" policy setting. Otherwise, the system uses the physical space on the volume as the quota limit.

                        Note: To turn on or turn off disk quota management without specifying a setting, in My Computer, right-click the name of an NTFS volume, click Properties, click the Quota tab, and then click "Enable quota management."&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Enforce"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Enforce disk quota limit&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Enforce_Help"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This policy setting determines whether disk quota limits are enforced and prevents users from changing the setting.

                        If you enable this policy setting, disk quota limits are enforced. If you disable this policy setting, disk quota limits are not enforced. When you enable or disable this policy setting, the system disables the "Deny disk space to users exceeding quota limit" option on the Quota tab so administrators cannot make changes while the setting is in effect.

                        If you do not configure this policy setting, the disk quota limit is not enforced by default, but administrators can change the setting.

                        Enforcement is optional. When users reach an enforced disk quota limit, the system responds as though the physical space on the volume were exhausted. When users reach an unenforced limit, their status in the Quota Entries window changes, but they can continue to write to the volume as long as physical space is available.

                        Note: This policy setting overrides user settings that enable or disable quota enforcement on their volumes.

                        Note: To specify a disk quota limit, use the "Default quota limit and warning level" policy setting. Otherwise, the system uses the physical space on the volume as the quota limit.&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Limit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Specify default quota limit and warning level&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Limit_Help"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This policy setting specifies the default disk quota limit and warning level for new users of the volume.

                        This policy setting determines how much disk space can be used by each user on each of the NTFS file system volumes on a computer. It also specifies the warning level, the point at which the user's status in the Quota Entries window changes to indicate that the user is approaching the disk quota limit.

                        This setting overrides new users‚Äô settings for the disk quota limit and warning level on their volumes, and it disables the corresponding options in the "Select the default quota limit for new users of this volume" section on the Quota tab.

                        This policy setting applies to all new users as soon as they write to the volume. It does not affect disk quota limits for current users, or affect customized limits and warning levels set for particular users (on the Quota tab in Volume Properties).

                        If you disable or do not configure this policy setting, the disk space available to users is not limited. The disk quota management feature uses the physical space on each volume as its quota limit and warning level.

                        When you select a limit, remember that the same limit applies to all users on all volumes, regardless of actual volume size. Be sure to set the limit and warning level so that it is reasonable for the range of volumes in the group.

                        This policy setting is effective only when disk quota management is enabled on the volume. Also, if disk quotas are not enforced, users can exceed the quota limit you set. When users reach the quota limit, their status in the Quota Entries window changes, but users can continue to write to the volume.&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LogEventOverLimit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Log event when quota limit is exceeded&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LogEventOverLimit_Help"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This policy setting determines whether the system records an event in the local Application log when users reach their disk quota limit on a volume, and prevents users from changing the logging setting.

                        If you enable this policy setting, the system records an event when the user reaches their limit. If you disable this policy setting, no event is recorded. Also, when you enable or disable this policy setting, the system disables the "Log event when a user exceeds their quota limit" option on the Quota tab, so administrators cannot change the setting while a setting is in effect.

                        If you do not configure this policy setting, no events are recorded, but administrators can use the Quota tab option to change the setting.

                        This policy setting is independent of the enforcement policy settings for disk quotas. As a result, you can direct the system to log an event, regardless of whether or not you choose to enforce the disk quota limit.

                        Also, this policy setting does not affect the Quota Entries window on the Quota tab. Even without the logged event, users can detect that they have reached their limit, because their status in the Quota Entries window changes.

                        Note: To find the logging option, in My Computer, right-click the name of an NTFS file system volume, click Properties, and then click the Quota tab.&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LogEventOverThreshold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Log event when quota warning level is exceeded&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LogEventOverThreshold_Help"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This policy setting determines whether the system records an event in the Application log when users reach their disk quota warning level on a volume.

                        If you enable this policy setting, the system records an event. If you disable this policy setting, no event is recorded. When you enable or disable this policy setting, the system disables the corresponding "Log event when a user exceeds their warning level" option on the Quota tab so that administrators cannot change logging while a policy setting is in effect.

                        If you do not configure this policy setting, no event is recorded, but administrators can use the Quota tab option to change the logging setting.

                        This policy setting does not affect the Quota Entries window on the Quota tab. Even without the logged event, users can detect that they have reached their warning level because their status in the Quota Entries window changes.

                        Note: To find the logging option, in My Computer, right-click the name of an NTFS file system volume, click Properties, and then click the Quota tab.&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_RemovableMedia"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Apply policy to removable media&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_RemovableMedia_Help"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This policy setting extends the disk quota policies in this folder to NTFS file system volumes on removable media.

                        If you disable or do not configure this policy setting, the disk quota policies established in this folder apply to fixed-media NTFS volumes only. Note: When this policy setting is applied, the computer will apply the disk quota to both fixed and removable media.&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_UnitsEB"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;EB&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_UnitsGB"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;GB&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_UnitsKB"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;KB&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_UnitsMB"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;MB&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_UnitsPB"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;PB&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_UnitsTB"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;TB&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;***".adml"***
            &lt;span class="nt"&gt;&amp;lt;/stringTable&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;presentationTable&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;presentation&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"DQ_Limit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&lt;/span&gt;Specify a quota limit and warning level applied to users when&lt;span class="nt"&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&lt;/span&gt;they first write to a quota-enabled volume.&lt;span class="nt"&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&lt;/span&gt;Default quota limit:&lt;span class="nt"&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;decimalTextBox&lt;/span&gt; &lt;span class="na"&gt;refId=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LimitValue"&lt;/span&gt; &lt;span class="na"&gt;defaultValue=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt; &lt;span class="na"&gt;spinStep=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Value&lt;span class="nt"&gt;&amp;lt;/decimalTextBox&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;dropdownList&lt;/span&gt; &lt;span class="na"&gt;refId=&lt;/span&gt;&lt;span class="s"&gt;"DQ_LimitUnits"&lt;/span&gt; &lt;span class="na"&gt;noSort=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;defaultItem=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Units&lt;span class="nt"&gt;&amp;lt;/dropdownList&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&lt;/span&gt;Default warning level:&lt;span class="nt"&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;decimalTextBox&lt;/span&gt; &lt;span class="na"&gt;refId=&lt;/span&gt;&lt;span class="s"&gt;"DQ_ThresholdValue"&lt;/span&gt; &lt;span class="na"&gt;defaultValue=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt; &lt;span class="na"&gt;spinStep=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Value&lt;span class="nt"&gt;&amp;lt;/decimalTextBox&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;dropdownList&lt;/span&gt; &lt;span class="na"&gt;refId=&lt;/span&gt;&lt;span class="s"&gt;"DQ_ThresholdUnits"&lt;/span&gt; &lt;span class="na"&gt;noSort=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;defaultItem=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Units&lt;span class="nt"&gt;&amp;lt;/dropdownList&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;/presentation&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/presentationTable&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/policyDefinitionResources&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Äã Dikkat ettiyseniz &lt;strong&gt;&lt;em&gt;".admx"&lt;/em&gt;&lt;/strong&gt; uzantƒ±lƒ± dosyalarda edit√∂rde g√∂rm√º≈ü olduƒüunuz yazƒ±lar bulunmamaktadƒ±r. Bu yazƒ±lar se√ßilen dile g√∂re olu≈üturulmu≈ü olan &lt;strong&gt;&lt;em&gt;".adml"&lt;/em&gt;&lt;/strong&gt; dosyalarƒ±nda bulunur. &lt;strong&gt;&lt;em&gt;".adml"&lt;/em&gt;&lt;/strong&gt; dosyasƒ±nda bizim inceleyeceƒüimiz kƒ±sƒ±m &lt;strong&gt;&lt;em&gt;"resources"&lt;/em&gt;&lt;/strong&gt; tag'i altƒ±nda bulunan tag'lerdir. &lt;strong&gt;&lt;em&gt;"enum"&lt;/em&gt;&lt;/strong&gt; gibi girdilerde &lt;strong&gt;&lt;em&gt;"stringTable"&lt;/em&gt;&lt;/strong&gt; altƒ±ndaki &lt;strong&gt;&lt;em&gt;"string"&lt;/em&gt;&lt;/strong&gt;ler, &lt;strong&gt;&lt;em&gt;"id"&lt;/em&gt;&lt;/strong&gt; ler aracƒ±lƒ±ƒüƒ±yla bulunabilir ve ilgili kƒ±smƒ±daki deƒüerin kar≈üƒ±lƒ±ƒüƒ± olan g√∂rsel ad olarak g√∂sterilebilir(√ñrneƒüin "GB" olarak g√∂rd√ºƒü√ºn√ºz giridnin kar≈üƒ±lƒ±ƒüƒ± aslƒ±nda "2" deƒüeridir). &lt;/p&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;"presentationTable"&lt;/em&gt;&lt;/strong&gt; altƒ±ndaki &lt;strong&gt;&lt;em&gt;"presentation"&lt;/em&gt;&lt;/strong&gt; tagi bize options kƒ±smƒ±ndaki yazƒ±larƒ± ve girdilerdeki bazƒ± √∂zellikleri belirtmektedir. ƒ∞stenilen &lt;strong&gt;&lt;em&gt;"presentation"&lt;/em&gt;&lt;/strong&gt; id'ye g√∂re se√ßilir ve refId'ler &lt;strong&gt;&lt;em&gt;".admx"&lt;/em&gt;&lt;/strong&gt; uzantƒ±lƒ± dosyalardaki id'ler ile e≈üle≈ütirilerek &lt;strong&gt;&lt;em&gt;"Options"&lt;/em&gt;&lt;/strong&gt; kƒ±smƒ± olu≈üturulur.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#registrypol-dosyas%C4%B1n%C4%B1n-i%CC%87ncelenmesi"&gt;
  &lt;/a&gt;
  "Registry.pol" Dosyasƒ±nƒ±n ƒ∞ncelenmesi
&lt;/h3&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;"Registry.pol"&lt;/em&gt;&lt;/strong&gt; dosyasƒ± yaptƒ±ƒüƒ±mƒ±z deƒüi≈üikliklerin kaydedildiƒüi dosyadƒ±r. Bu dosyadan her &lt;strong&gt;&lt;em&gt;"Unique Id"&lt;/em&gt;&lt;/strong&gt; i√ßin &lt;strong&gt;&lt;em&gt;"Machine"&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;"User"&lt;/em&gt;&lt;/strong&gt; dosyalarƒ± altƒ±nda birer adet bulunur. &lt;strong&gt;&lt;em&gt;"Registry.pol"&lt;/em&gt;&lt;/strong&gt; dosyasƒ± binrary formatƒ±nda okunulmasƒ± √∂nerilse de basit√ße &lt;strong&gt;&lt;em&gt;"NotePad"&lt;/em&gt;&lt;/strong&gt; kullanarak a√ßƒ±p okumayƒ± deneyebilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;b'PReg\x01\x00\x00\x00[\x00S\x00o\x00f\x00t\x00w\x00a\x00r\x00e\x00\\\x00P\x00o\xDataDirector00l\x00i\x00c\x00i\x00e\x00s\x00\\\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00 \x00S\x00e\x00a\x00r\x00c\x00h\x00\x00\x00;\x00D\x00a\x00t\x00a\x00D\x00i\x00r\x00e\x00c\x00t\x00o\x00r\x00y\x00\x00\x00;\x00\x01\x00\x00\x00;\x00\n\x00\x00\x00;\x00m\x00e\x00t\x00e\x00\x00\x00]\x00[\x00S\x00o\x00f\x00t\x00w\x00a\x00r\x00e\x00\\\x00P\x00o\x00l\x00i\x00c\x00i\x00e\x00s\x00\\\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00 \x00N\x00T\x00\\\x00D\x00i\x00s\x00k\x00Q\x00u\x00o\x00t\x00a\x00\x00\x00;\x00L\x00i\x00m\x00i\x00t\x00\x00\x00;\x00\x04\x00\x00\x00;\x00\x04\x00\x00\x00;\x00d\x00\x00\x00]\x00[\x00S\x00o\x00f\x00t\x00w\x00a\x00r\x00e\x00\\\x00P\x00o\x00l\x00i\x00c\x00i\x00e\x00s\x00\\\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00 \x00N\x00T\x00\\\x00D\x00i\x00s\x00k\x00Q\x00u\x00o\x00t\x00a\x00\x00\x00;\x00L\x00i\x00m\x00i\x00t\x00U\x00n\x00i\x00t\x00s\x00\x00\x00;\x00\x04\x00\x00\x00;\x00\x04\x00\x00\x00;\x00\x01\x00\x00\x00]\x00[\x00S\x00o\x00f\x00t\x00w\x00a\x00r\x00e\x00\\\x00P\x00o\x00l\x00i\x00c\x00i\x00e\x00s\x00\\\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00 \x00N\x00T\x00\\\x00D\x00i\x00s\x00k\x00Q\x00u\x00o\x00t\x00a\x00\x00\x00;\x00T\x00h\x00r\x00e\x00s\x00h\x00o\x00l\x00d\x00\x00\x00;\x00\x04\x00\x00\x00;\x00\x04\x00\x00\x00;\x00d\x00\x00\x00]\x00[\x00S\x00o\x00f\x00t\x00w\x00a\x00r\x00e\x00\\\x00P\x00o\x00l\x00i\x00c\x00i\x00e\x00s\x00\\\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00 \x00N\x00T\x00\\\x00D\x00i\x00s\x00k\x00Q\x00u\x00o\x00t\x00a\x00\x00\x00;\x00T\x00h\x00r\x00e\x00s\x00h\x00o\x00l\x00d\x00U\x00n\x00i\x00t\x00s\x00\x00\x00;\x00\x04\x00\x00\x00;\x00\x04\x00\x00\x00;\x00\x01\x00\x00\x00]\x00[\x00S\x00o\x00f\x00t\x00w\x00a\x00r\x00e\x00\\\x00P\x00o\x00l\x00i\x00c\x00i\x00e\x00s\x00\\\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00 \x00N\x00T\x00\\\x00D\x00i\x00s\x00k\x00Q\x00u\x00o\x00t\x00a\x00\x00\x00;\x00E\x00n\x00a\x00b\x00l\x00e\x00\x00\x00;\x00\x04\x00\x00\x00;\x00\x04\x00\x00\x00;\x00\x00\x00\x00\x00]\x00'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Äã Editorde deƒüi≈üiklik yaptƒ±ktan sonra dosyayƒ± ikilik(binrary) formatƒ±nda okutmayƒ± denediƒüinizde yukarƒ±daki yazƒ±ya benzer bir yazƒ± ile kar≈üƒ±la≈üacaksƒ±nƒ±z. ƒ∞lk ba≈üta karƒ±≈üƒ±k gelse de okumasƒ± kolay bir formatta yazƒ±lmƒ±≈ütƒ±r.&lt;/p&gt;

&lt;p&gt;‚Äã Dosya  &lt;strong&gt;&lt;em&gt;"PReg\x01\x00\x00\x00"&lt;/em&gt;&lt;/strong&gt; ifadesi ile ba≈ülar. Sonrasƒ±nda "[]" i√ßerisinde deƒüerler yazƒ±lƒ±r. Aralƒ±klara "\x00" biti konulur.&lt;/p&gt;

&lt;p&gt;‚Äã&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[\x00S\x00o\x00f\x00t\x00w\x00a\x00r\x00e\x00\\\x00P\x00o\x00l\x00i\x00c\x00i\x00e\x00s\x00\\\x00M\x00i\x00c\x00r\x00o\x00s\x00o\x00f\x00t\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00\\\x00W\x00i\x00n\x00d\x00o\x00w\x00s\x00 \x00S\x00e\x00a\x00r\x00c\x00h\x00\x00\x00;\x00D\x00a\x00t\x00a\x00D\x00i\x00r\x00e\x00c\x00t\x00o\x00r\x00y\x00\x00\x00;\x00\x01\x00\x00\x00;\x00\n\x00\x00\x00;\x00m\x00e\x00t\x00e\x00\x00\x00]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Äã Yazƒ±sƒ± kaydedilen ilk deƒüeri ifade etmektedir. Bu ifadede k√∂≈üeli parentezleri atƒ±p noktalƒ± virg√ºlle ayƒ±rƒ±p "\x00"larƒ± attƒ±ƒüƒ±mƒ±zda:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Software\Policies\Microsoft\Windows\Windows Search&lt;/li&gt;
&lt;li&gt;DataDirectory&lt;/li&gt;
&lt;li&gt;\x01&lt;/li&gt;
&lt;li&gt;\n&lt;/li&gt;
&lt;li&gt;mete&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‚Äã Deƒüerlei ortaya √ßƒ±kar. ƒ∞lk ba≈üta &lt;strong&gt;&lt;em&gt;"NotePad"&lt;/em&gt;&lt;/strong&gt; ile dosyasƒ± a√ßtƒ±ysanƒ±z bu yazƒ±lara benzer yazƒ±lar g√∂rm√º≈ü olmalƒ±sƒ±nƒ±z. Ancak "\x01" yada "\n" gibi ifadeleri muhtemelen g√∂rememi≈üsinizdir. Bunun nedeni &lt;strong&gt;&lt;em&gt;"NotePad"&lt;/em&gt;&lt;/strong&gt;'in bu karakterleri kullanƒ±cƒ±nƒ±n anlayacaƒüƒ± ≈üekilde yorumlamaya √ßalƒ±≈ümasƒ±dƒ±r. ≈ûimdi bu deƒüleri inceleyelim.&lt;/p&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;"Registry.pol"&lt;/em&gt;&lt;/strong&gt; dosyasƒ±nda her deƒüer "\x00" byte'ƒ± ile ba≈ülar. &lt;strong&gt;&lt;em&gt;"Software\Policies\Microsoft\Windows\Windows Search"&lt;/em&gt;&lt;/strong&gt; deƒüeri politikamƒ±zƒ±n  anahtarƒ±dƒ±r. Bu anahtar aracƒ±lƒ±ƒüƒ± ile bu deƒüerin hangi dizinde olduƒüu belirtilir.&lt;/p&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;"DataDirectory"&lt;/em&gt;&lt;/strong&gt; deƒüeri politikamƒ±zƒ±n id'sidir. Bu id aracƒ±lƒ±ƒüƒ±yla &lt;strong&gt;&lt;em&gt;".admx"&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;".adml"&lt;/em&gt;&lt;/strong&gt; dosyalarƒ±ndaki bize gerekli kƒ±sƒ±mlarƒ± alabiliriz.&lt;/p&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;"\x01"&lt;/em&gt;&lt;/strong&gt; veri tipini ifade eder. Ancak bu deƒüeri tek ba≈üƒ±na bu ≈üekilde almak deƒüer 255'i ge√ßince bizi hataya g√∂t√ºr√ºr. Tam sayƒ± deƒüerler d√∂rder bit olarak okunmalƒ±dƒ±r. &lt;strong&gt;&lt;em&gt;"\x01\x00\x00\x00"&lt;/em&gt;&lt;/strong&gt; ≈üeklinde soldan saƒüa okuduƒüumuzda deƒüerin ASCII kar≈üƒ±lƒ±ƒüƒ±nda denk gelen sayƒ±yƒ± aldƒ±ƒüƒ±mƒ±zda "1" deƒüeri √ßƒ±kar. Bu bize deƒüer tipinin "REG_BINRARY" olduƒüunu g√∂sterir(&lt;a href="https://docs.microsoft.com/en-us/previous-versions/windows/desktop/policy/registry-policy-file-format"&gt;Karakter tipleri hakkƒ±nda daha ayrƒ±ntƒ±lƒ± bilgi i√ßin bu yazƒ±yƒ± okuyun.&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;‚Äã &lt;strong&gt;&lt;em&gt;"\n\x00\x00\x00"&lt;/em&gt;&lt;/strong&gt; deƒüeri bize kaydedilen deƒüerin boyutunu ifade eder. ASCII'de kar≈üƒ±lƒ±ƒüƒ± "10"dur.&lt;/p&gt;

&lt;p&gt;‚Äã Son olarak &lt;strong&gt;&lt;em&gt;"mete"&lt;/em&gt;&lt;/strong&gt; deƒüeri kaydedilen deƒüerdir. Eƒüer karakter tipi "REG_BINRARY" deƒüil "REG_DWORD" olsaydƒ± karakter tipi yada boyutu gibi okumaya √ßalƒ±≈üacaktƒ±k.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#durum-de%C4%9Fi%C5%9Fiklikleri"&gt;
  &lt;/a&gt;
  Durum Deƒüi≈üiklikleri
&lt;/h4&gt;

&lt;p&gt;‚Äã Yaptƒ±ƒüƒ±nƒ±z ayarƒ± "Enabled" yada "Disabled" durumundan "Not Configured" durumuna getirip tekrar  &lt;strong&gt;&lt;em&gt;"Registry.pol"&lt;/em&gt;&lt;/strong&gt; dosyasƒ±nƒ± okuduƒüunuzda o deƒüerin silinmi≈ü olduƒüunu g√∂r√ºrs√ºn√ºz. Bunun nedeni konfig√ºre edilmemi≈ü ve varsayƒ±lan deƒüerinde bulunan politikalarƒ±nƒ±n kaydedilmemesidir.&lt;/p&gt;

&lt;p&gt;‚Äã "Disabled" durumunda da politika dosyaya yazƒ±lƒ±r. Ancak id'nin ba≈üƒ±na "\x00*\x00*\x00d\x00e\x00l\x00." ifade eklenir ve kaydedilen deƒüer yerine bo≈üluk yazƒ±lƒ±r. Tekrar "Enable" durmuna getirildiƒüinde "**del" ifadesi kalkar ve istenilen deƒüer yazƒ±lƒ±r.  &lt;/p&gt;

</description>
      <category>gpo</category>
      <category>windows</category>
      <category>registry</category>
    </item>
  </channel>
</rss>
