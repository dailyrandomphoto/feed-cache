<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>HackerRank #40 | Java Dequeue | üáßüá∑ </title>
      <author>Beatriz Maciel</author>
      <pubDate>Mon, 22 Nov 2021 20:35:53 +0000</pubDate>
      <link>https://dev.to/beatrizmaciel/hackerrank-40-java-dequeue--497h</link>
      <guid>https://dev.to/beatrizmaciel/hackerrank-40-java-dequeue--497h</guid>
      <description>&lt;p&gt;&lt;a href="https://www.hackerrank.com/challenges/java-dequeue/problem"&gt;Esse exerc√≠cio&lt;/a&gt; recebe dois inputs iniciais: um &lt;code&gt;integer&lt;/code&gt; N, relativo √† quantidade de n√∫meros em um array, e um &lt;code&gt;integer&lt;/code&gt; M, relativo a um subarray desloc√°vel que far√° a "varredura" dentro do array principal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jyelS81i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/622ln99nqilnyx4ludyb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jyelS81i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/622ln99nqilnyx4ludyb.png" alt="HackerRank Dequeue Imagem" width="185" height="102"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;N = quantidade de n√∫meros do array&lt;br&gt;
M = tamanho do subarray que varrer√° o array principal&lt;/p&gt;

&lt;p&gt;Dessa forma, os arrays estruturados com M = 3 ser√£o:&lt;/p&gt;

&lt;p&gt;[5, 3, 5]&lt;br&gt;
 . . . [3, 5, 2]&lt;br&gt;
  . . . . . [5, 2, 3]&lt;br&gt;
  .  . . . . . . [2, 3, 2]&lt;/p&gt;

&lt;p&gt;Como todos os subarrays precisam ter M n√∫meros, nesse caso esses ser√£o os subarrays poss√≠veis.&lt;/p&gt;

&lt;p&gt;Depois disso, precisamos que o programa contabilize qual √© o m√°ximo de n√∫meros √∫nicos existentes em um subarray de tamanho M.&lt;/p&gt;

&lt;p&gt;[5, 3, 5] = 2 n√∫meros √∫nicos&lt;br&gt;
[3, 5, 2] = 3 n√∫meros √∫nicos&lt;br&gt;
[5, 2, 3] = 3 n√∫meros √∫nicos&lt;br&gt;
[2, 3, 2] = 2 n√∫meros √∫nicos&lt;/p&gt;

&lt;p&gt;Sendo assim, o m√°ximo de n√∫meros √∫nicos em um subarray ser√° 3. Esse precisa ser o output.&lt;/p&gt;

&lt;p&gt;Vamos para a solu√ß√£o, dividida em partes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Primeiro declaramos um Array de Integers de nome deque.&lt;/li&gt;
&lt;li&gt;Declaramos tamb√©m um Hashset de Integers de nome hashset. Lembrando que um &lt;a href="https://dev.to/beatrizmaciel/hackerrank-39-hashset-3jb3"&gt;Hashset n√£o repete n√∫meros&lt;/a&gt;, e isso vai ser √∫til para que possamos contabilizar n√∫meros √∫nicos.&lt;/li&gt;
&lt;li&gt;Depois escaneamos os ints &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt; e &lt;code&gt;maxUniqueIntegers&lt;/code&gt; (nossa resposta final)&lt;/li&gt;
&lt;li&gt;Dentro de uma itera√ß√£o, pegaremos, atrav√©s de um input, os n√∫meros do array. Lembrando: a quantidade de n√∫meros do array √© delimitada por N, mas ser√° inserida pelo usu√°rio.&lt;/li&gt;
&lt;li&gt;Vamos adicionar todos os n√∫meros do input no &lt;code&gt;Array deque&lt;/code&gt; e no &lt;code&gt;Hashset hashset&lt;/code&gt; atrav√©s do &lt;code&gt;.add&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Faremos uma condicional que diz que nosso Array deque, tendo o mesmo tamanho de M, far√° com que o hashset receba o maxUniqueIntegers para ir contabilizando as entradas de n√∫meros √∫nicos. Como o hashset s√≥ permite n√∫meros √∫nicos, o maxUniqueIntegers tamb√©m s√≥ receber√° a quantidade de n√∫meros √∫nicos.&lt;/li&gt;
&lt;li&gt;Depois, declararemos uma vari√°vel firstQueueNumber que far√° a remo√ß√£o do primeiro n√∫mero do nosso array deque. A propriedade .remove sempre remove o primeiro elemento, ou o elemento que tem a menor posi√ß√£o i (leia mais sobre isso nas refer√™ncias)&lt;/li&gt;
&lt;li&gt;Por fim, imprimimos o maxUniqueNumbers, com a quantidade de n√∫meros √∫nicos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O c√≥digo final fica assim:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        Deque&amp;lt;Integer&amp;gt; deque = new ArrayDeque&amp;lt;&amp;gt;();
        HashSet&amp;lt;Integer&amp;gt; hashset = new HashSet&amp;lt;&amp;gt;();

        int n = in.nextInt();
        int m = in.nextInt();
        int maxUniqueIntegers = 0;

        for (int i = 0; i &amp;lt; n; i++) {
            int num = in.nextInt();

            deque.add(num);
            hashset.add(num);

            if (deque.size() == m) {
                if (hashset.size() &amp;gt; maxUniqueIntegers) {
                    maxUniqueIntegers = hashset.size();
                }
                int firstQueueNumber = deque.remove();
                if (!deque.contains(firstQueueNumber)) {
                    hashset.remove(firstQueueNumber);
                } 
            }
        }

        System.out.println(maxUniqueIntegers);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;=======&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Refer√™ncias:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html#remove-int-"&gt;ArrayList&lt;/a&gt; : Oracle&lt;/p&gt;

&lt;p&gt;============&lt;/p&gt;

&lt;p&gt;Essa publica√ß√£o faz parte de uma s√©rie de exerc√≠cios resolvidos em Java no HackerRank. Acesse a s√©rie completa:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-6-scanner-e-endoffile-462c"&gt;HackerRank #6 | Scanner e End-of-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-7-int-em-string-e-vice-versa-4n1e"&gt;HackerRank #7 | Int to String / String to Int&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-8-date-and-time-1f78"&gt;HackerRank #8 | Date and Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-9-static-initializer-block-48ha"&gt;HackerRank #9 | Static Initializer Block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-10-currency-formatter-22oj"&gt;HackerRank #10 | Currency Formatter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-11-datatypes-2e9h"&gt;HackerRank #11 | DataTypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-12-strings-introduction-2d1n"&gt;HackerRank #12 | Strings Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-13-substring-comparisons-57ha"&gt;HackerRank #13 | Substring Comparisons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-14-abstract-class-3h5d"&gt;HackerRank #14 | Abstract Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-18-biginteger-4jad"&gt;HackerRank #18 | BigInteger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-19-loops-ii-385n"&gt;HackerRank #19 | Loops II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-20-string-reverse-nec"&gt;HackerRank #20 | String Reverse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-23-instanceof-keyword-3lh6"&gt;HackerRank #23 | Instanceof keyword&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-26-generics-55p8"&gt;HackerRank #26 | Generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-27-1d-array-5f80"&gt;HackerRank #27 | 1D Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-28-anagrams-boi"&gt;HackerRank #28 | Anagrams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-33-arraylist-2lj1"&gt;HackerRank #33 | Arraylist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-34-exception-handling-try-catch-144f"&gt;HackerRank #34 | Exception Handling Try / Catch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-35-exception-handling-44e"&gt;HackerRank #36 | Exception Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-37-list-4gmj"&gt;HackerRank #37 | List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-38-subarray-1693"&gt;HackerRank #38 | SubArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/beatrizmaciel/hackerrank-39-hashset-3jb3"&gt;HackerRank #39 | HashSet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HackerRank #40 | Java Dequeue&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>java</category>
      <category>hackerrank</category>
      <category>queue</category>
    </item>
    <item>
      <title>My favorite image placeholder</title>
      <author>Zoran Stankovic</author>
      <pubDate>Mon, 22 Nov 2021 20:30:12 +0000</pubDate>
      <link>https://dev.to/ryunosukezoran/my-favorite-image-placeholder-4cfb</link>
      <guid>https://dev.to/ryunosukezoran/my-favorite-image-placeholder-4cfb</guid>
      <description>&lt;p&gt;For my first post, I decided to write about a tool that I always use gladly when mockup new websites. So here I would like to share with you my favorite image and video placeholder &lt;a href="http://placecorgi.com/"&gt;Place Corgi&lt;/a&gt;. As you can guess I am a Corgi lover and this image placeholder is just perfect for me, and everyone who loves dogs and especially Corgis.&lt;/p&gt;

&lt;p&gt;It is easy to use, just a link to Place Corgi site with a width and optional height specified after the URL.&lt;br&gt;
&lt;code&gt;http://placecorgi.com/width/height&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Also, we can place a video as a placeholder. To do that, we would add /v to the URL along with width and height&lt;br&gt;
&lt;code&gt;http://placecorgi.com/v/width/height&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can add the Place Corgi js file to your application, which will automatically replace any img tags that have the class corgi with images from Place Corgi.&lt;br&gt;
For this implementation visit site &lt;a href="http://placecorgi.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>imageplaceholder</category>
      <category>html</category>
    </item>
    <item>
      <title>Build a web crawler from scratch</title>
      <author>Salem Olorundareüë®‚Äçüíª</author>
      <pubDate>Mon, 22 Nov 2021 20:27:02 +0000</pubDate>
      <link>https://dev.to/itz_salemm/build-a-web-crawler-from-scratch-34on</link>
      <guid>https://dev.to/itz_salemm/build-a-web-crawler-from-scratch-34on</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Have you ever wondered how search engines like Google, fetch data from different parts of the web and serve it to you as a user, based on your query? The method used by applications like this is termed crawling. &lt;/p&gt;

&lt;p&gt;Search engines work and by crawling and indexing billions of web pages using different web crawlers called web spiders or search engine bots. What these web spiders do is follow links from each web page that have been indexed to discover new ages.&lt;/p&gt;

&lt;p&gt;In this short article, you will be building out your own web crawler using Python and its popular web framework for extracting the data you need from websites.&lt;/p&gt;

&lt;p&gt;Also, in this tutorial, developers tend to be confused with web crawling and web scraping. We would learn the difference between these two concepts and examine some examples &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites-and-requirements"&gt;
  &lt;/a&gt;
  Prerequisites and Requirements
&lt;/h2&gt;

&lt;p&gt;Before you begin with this tutorial, make sure you have a very basic understanding of python programming, as the article assumes you have gotten familiar and some of the concepts we would be discussing here would be new to you. &lt;/p&gt;

&lt;p&gt;To move and understand things quickly, you must also know how to use your chrome developer tools to find tags and classes, in other for you to scrap the website well. &lt;/p&gt;

&lt;p&gt;You also need to have the python package manager PIP, to enable you to install Scrapy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-web-crawlers"&gt;
  &lt;/a&gt;
  What are web crawlers?
&lt;/h2&gt;

&lt;p&gt;Web crawlers also known as spider bots are internet bots that search the entire Internet for content and prepare them for indexing. This is how crawlers work in a search engine.&lt;/p&gt;

&lt;p&gt;In how case the data were gotten from our crawler won't be indexed as we are not building a search engine (at least not yet).&lt;/p&gt;

&lt;p&gt;Crawlers consume and extract data from different pages it crawls from and gets them ready for use. Depending on the use case of the user. Crawlers can also be used for web scraping and data-driven programming. The Goal of each web crawler is to know what each web page is all about and to serve it when it is needed or requested for. It automatically accesses a website, consumes and downloads its data through software programs. &lt;/p&gt;

&lt;p&gt;Since the internet is constantly changing and it is impossible to know the total number of web pages on the internet, Web crawlers start crawling from a list of known URLs. They crawl the pages of those URLs first and then start looking for a hyperlink to other related web pages from those URLs. &lt;/p&gt;

&lt;p&gt;Though crawlers also crawl and find web pages based on the number of traffic on a website, the basic and default of how web crawlers find pages are from the list of known URLs or seeds.&lt;/p&gt;

&lt;p&gt;By applying proven algorithms to building crawlers and finding web pages, search engines can provide relevant links and respond almost accurately to user queries.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-scrapy-and-beautifulsoup"&gt;
  &lt;/a&gt;
  Difference between Scrapy and BeautifulSoup
&lt;/h2&gt;

&lt;p&gt;As we said earlier, we are going to be using scrapy for this tutorial. But there seems to be a couple of web crawling and scraping framework used in python. The most common of them all is Scrapy and BeautifulSoup.&lt;/p&gt;

&lt;p&gt;Although both of these tools are used for web scraping and crawling, there‚Äôs quite a large difference between them both. Unlike Scrapy which is used to be specifically created for downloading, cleaning, and saving data from the web and will help you end-to-end, BeautifulSoup is a smaller package that will only help you get information out of webpages with the request module.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scrapy-installation"&gt;
  &lt;/a&gt;
  Scrapy Installation
&lt;/h2&gt;

&lt;p&gt;To be able to make use of scrapy in our application we need to install scrapy to our local machine, and to do this, run the following command on your terminal:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;`pip install scrapy`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The code above downloads scrapy for us. Once it finishes downloading we will then move to create our project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-scrapy-app"&gt;
  &lt;/a&gt;
  Creating the Scrapy app
&lt;/h2&gt;

&lt;p&gt;Create a scrapy-python application with a name with the command below. In our case, we named our python application webcrawler.py. &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;`scrapy startproject webscrawler`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The code above starts a scrapy project in a folder with a scrapy boilerplate. The file structure created should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpyFNncz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F06200F0BABE67043DEC7956A6B1494B7432B642168C3FE6FF4875543859DA16_1637592532302_Untitled.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpyFNncz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F06200F0BABE67043DEC7956A6B1494B7432B642168C3FE6FF4875543859DA16_1637592532302_Untitled.png" alt="structure" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open your application folder (in my case webcrawler) in a code editor, and let's continue building our crawler.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-web-crawler"&gt;
  &lt;/a&gt;
  Creating Web Crawler
&lt;/h2&gt;

&lt;p&gt;Creating your first spider. Spider are classes we define, and scrapy uses to gather information from the web.&lt;br&gt;
To create your first spider in scrapy, navigate to the spider file and create and a new folder called spider1.py. This will be our first spider.&lt;/p&gt;

&lt;p&gt;All spiders or crawlers are created and stored in the spider folder. &lt;/p&gt;

&lt;p&gt;Open your spider1.py and paste the following codes, to create your first crawler, as we would be crawling through the &lt;a href="http://quotes.toscrape.com/page/1/"&gt;http://quotes.toscrape.com/page/1/&lt;/a&gt; web page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="c1"&gt;#imports
&lt;/span&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;scrapy&lt;/span&gt;

    &lt;span class="c1"&gt;#Spider class
&lt;/span&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QuotesSpider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scrapy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Spider&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="c1"&gt;#name of your spider
&lt;/span&gt;            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"quotes"&lt;/span&gt;

            &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_requests&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="c1"&gt;#Website links to crawl
&lt;/span&gt;                    &lt;span class="n"&gt;urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                            &lt;span class="s"&gt;'http://quotes.toscrape.com/page/1/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="s"&gt;'http://quotes.toscrape.com/page/2/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;]&lt;/span&gt;

                    &lt;span class="c1"&gt;#loop through the urls
&lt;/span&gt;                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;scrapy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'quotes-&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;.html'&lt;/span&gt;
                    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'wb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above crawls through the web links given and downloads the page and gets it ready to be scraped.&lt;/p&gt;

&lt;p&gt;To run the following codes, run the following code in your terminal in the directory of your scrapy project.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;scrapy crawl webscrawler&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When this code is run successfully, two files (quotes-1.html &amp;amp; quotes-2.html) will be created in your project directory. These are the two pages that are downloaded by scrapy and ready for scraping.&lt;/p&gt;

&lt;p&gt;Congratulations, you have built your first Web crawler. Tadaa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scraping-the-web-pages"&gt;
  &lt;/a&gt;
  Scraping the web pages
&lt;/h2&gt;

&lt;p&gt;Now that you have crawled the web pages and it has been downloaded. We then need to scrape or extract the data needed from the web page. And we would be using the css selector to get this data.&lt;/p&gt;

&lt;p&gt;Update your scraper1.py file with the following codes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;scrapy&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QuotesSpider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scrapy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Spider&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"quotes"&lt;/span&gt;

            &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_requests&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                            &lt;span class="s"&gt;'http://quotes.toscrape.com/page/1/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="s"&gt;'http://quotes.toscrape.com/page/2/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;]&lt;/span&gt;

                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;scrapy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'div.quote'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                    &lt;span class="s"&gt;'text'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'span::text'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                                    &lt;span class="s"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'small.author::text'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                                    &lt;span class="s"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'div.tags a.tag::text'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;getall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In above code extracts the text, author, and tags for each of the web pages listed in the URL. &lt;br&gt;
To see our results from the scraped webpages run the following command in your terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;`scrapy crawl quotes -o results.json`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;This command runs the scraper, scraps the data, and stores it in a folder called results.json.&lt;/p&gt;

&lt;p&gt;If you have followed the tutorial till this point, your code should run successfully and you shouldhave the following data in your results.json file, which is created in your project directory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M7xds0uF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F06200F0BABE67043DEC7956A6B1494B7432B642168C3FE6FF4875543859DA16_1637592689492_Untitled.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M7xds0uF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F06200F0BABE67043DEC7956A6B1494B7432B642168C3FE6FF4875543859DA16_1637592689492_Untitled.png" alt="data" width="880" height="306"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;Congratulations, on building your first web scraper. This is how simpler it is to create a web crawler and scrape data from it. By now you should have a basic idea of how web crawlers and web scrapers work and how it's being implemented with search engines to extract data from the web. &lt;/p&gt;

&lt;p&gt;There are a lot of things you can do with scrapy and web scrapy. Data scientists and AI engineers used web scraping to get a substantial amount of data to perform various data analyses and train a model with this data. &lt;/p&gt;

&lt;p&gt;I hope you enjoyed the tutorial and it was helpful. Be sure to build projects get a vast knowledge in performing web scraping and web crawling.&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Prometheus and Grafana, Part 2</title>
      <author>muckitymuck</author>
      <pubDate>Mon, 22 Nov 2021 20:13:46 +0000</pubDate>
      <link>https://dev.to/muckitymuck/prometheus-and-grafana-part-2-47bg</link>
      <guid>https://dev.to/muckitymuck/prometheus-and-grafana-part-2-47bg</guid>
      <description>&lt;p&gt;The Prometheus.yml:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.

scrape_configs:
  # The job name is added as a label `job=&amp;lt;job_name&amp;gt;` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'node-exporter'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    metrics_path: /metrics

    static_configs:
      - targets:
        - &amp;lt;PUBLIC IP&amp;gt;:9100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a good starting place for a monitoring system for Linux boxes&lt;/p&gt;

&lt;p&gt;Running the services in docker is also advised as it simplifies the rollout.&lt;/p&gt;

&lt;p&gt;Docker node exporter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo docker run --restart always -d --net="host" --pid="host"  -v "/:/host:ro,rslave"  prom/node-exporter:latest  --path.rootfs=/host
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Docker prometheus:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo docker service create --replicas 1 --name dockerprometheus     --mount type=bind,source=/home/ubuntu/prometheus/prometheus.yml,destination=/etc/prometheus/prometheus.yml     --publish published=9090,target=9090,protocol=tcp     prom/prometheus
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you get around to making panels in Grafana, these queries are very useful:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;100 - ((node_filesystem_avail_bytes{mountpoint="/",fstype!="rootfs"} * 100) /            node_filesystem_size_bytes{mountpoint="/",fstype!="rootfs"})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_filesystem_avail_bytes

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR you could just setup a template for Node Exporter:&lt;br&gt;
To import a new dashboard for Node Exporter, go to Dashboards -&amp;gt; Manage&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ytARl-mu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oije3p8c31dk0q4e9l1r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ytARl-mu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oije3p8c31dk0q4e9l1r.png" alt="Image description" width="213" height="319"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter &lt;strong&gt;405&lt;/strong&gt; for the Grafana ID.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wqo-wEiJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mznb1185qy8e232p8a2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wqo-wEiJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mznb1185qy8e232p8a2o.png" alt="Image description" width="663" height="561"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pick up the name and choose a Data Source for the dashboard.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6UY1RuA3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83rpzsyv4arll5w16mz8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UY1RuA3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83rpzsyv4arll5w16mz8.png" alt="Image description" width="710" height="592"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To make an alert, start a NEW dashboard and NEW panel. Template dashboards like above will not work. &lt;/p&gt;

&lt;p&gt;Enter the query for the item you want to track and press the Alert tab.&lt;br&gt;
That should do it for a basic monitoring service.&lt;/p&gt;

</description>
      <category>monitoring</category>
      <category>linux</category>
    </item>
    <item>
      <title>Learn How To Lazy Load Image Using Javascript In PHP</title>
      <author>Adeleye Ayodeji</author>
      <pubDate>Mon, 22 Nov 2021 20:09:30 +0000</pubDate>
      <link>https://dev.to/adeleyeayodeji/learn-how-to-lazy-load-image-using-javascript-in-php-1f1n</link>
      <guid>https://dev.to/adeleyeayodeji/learn-how-to-lazy-load-image-using-javascript-in-php-1f1n</guid>
      <description>&lt;h1&gt;
  &lt;a href="#do-you-want-to-increase-your-website-speed"&gt;
  &lt;/a&gt;
  Do you want to increase your website speed?
&lt;/h1&gt;

&lt;p&gt;Then you need this tutorial to lazy load your assets.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=kyU8GvHf3o4"&gt;https://www.youtube.com/watch?v=kyU8GvHf3o4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download Source Code: &lt;a href="https://www.biggidroid.com/product/javascript-lazy-image-script/"&gt;https://www.biggidroid.com/product/javascript-lazy-image-script/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have an issue? Comment below.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>BetterViewer ‚Äî A chrome extension for better image viewing experience</title>
      <author>Adem Kouki</author>
      <pubDate>Mon, 22 Nov 2021 20:04:17 +0000</pubDate>
      <link>https://dev.to/ademking/betterviewer-a-chrome-extension-for-better-image-viewing-experience-3k3m</link>
      <guid>https://dev.to/ademking/betterviewer-a-chrome-extension-for-better-image-viewing-experience-3k3m</guid>
      <description>&lt;p&gt;Hi everyone! &lt;/p&gt;

&lt;p&gt;After many cups of coffee and many more hours of hard work, I launched my free Open source Chrome extension: &lt;strong&gt;BetterViewer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;BetterViewer makes image viewing faster, easier, and more fun.&lt;/p&gt;

&lt;p&gt;BetterViewer was designed as a replacement for the image viewing mode built into Chrome-based web browsers.&lt;/p&gt;

&lt;p&gt;With BetterViewer you can use various keyboard shortcuts to quickly pan, zoom images, edit and a lot more!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3p7Jrdx2jOc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0qyL9xtb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kzlh1z1yze63lpgsiobs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0qyL9xtb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kzlh1z1yze63lpgsiobs.png" alt="screenshot1" width="880" height="550"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MskvxY1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kttpx8cdjvdcaqamw1np.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MskvxY1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kttpx8cdjvdcaqamw1np.png" alt="screenshot2" width="880" height="550"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gQ4VWNli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pux6vxwjcl8eo53dc3kl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gQ4VWNli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pux6vxwjcl8eo53dc3kl.png" alt="screenshot3" width="880" height="550"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TtwtxWr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/664e6x013fks8k9fm8xc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TtwtxWr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/664e6x013fks8k9fm8xc.png" alt="screenshot4" width="880" height="550"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2FsPEjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5d3y20b08ervf3q1ir7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2FsPEjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5d3y20b08ervf3q1ir7.png" alt="screenshot5" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Zoom in / Zoom Out / Reset &lt;/li&gt;
&lt;li&gt;Fullscreen &lt;/li&gt;
&lt;li&gt;Rotate Left / Rotate Right &lt;/li&gt;
&lt;li&gt;Flip Horizontal / Flip Vertical &lt;/li&gt;
&lt;li&gt;Crop Image &lt;/li&gt;
&lt;li&gt;Paint &lt;/li&gt;
&lt;li&gt;Download Image &lt;/li&gt;
&lt;li&gt;Upload Image to imgur.com &lt;/li&gt;
&lt;li&gt;Color picker &lt;/li&gt;
&lt;li&gt;Image Details &lt;/li&gt;
&lt;li&gt;Change background color (Dark / Light / Blurred) &lt;/li&gt;
&lt;li&gt;Print Image &lt;/li&gt;
&lt;li&gt;Extract Text from Image &lt;/li&gt;
&lt;li&gt;Edit in Photopea&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;üìå &lt;strong&gt;Product Hunt&lt;/strong&gt;: &lt;a href="https://www.producthunt.com/posts/betterviewer"&gt;https://www.producthunt.com/posts/betterviewer&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;üìå &lt;strong&gt;Chrome Web Store&lt;/strong&gt;: &lt;a href="https://chrome.google.com/webstore/detail/betterviewer/llcpfkbjgkpmapiidpnohffjmmnhpmpb"&gt;https://chrome.google.com/webstore/detail/betterviewer/llcpfkbjgkpmapiidpnohffjmmnhpmpb&lt;/a&gt; &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Ademking"&gt;
        Ademking
      &lt;/a&gt; / &lt;a href="https://github.com/Ademking/BetterViewer"&gt;
        BetterViewer
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      a replacement for the image viewing mode built into Chrome-based web browsers. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
    &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/12462188/141027406-7d2fecc5-0a4c-4389-adac-5cf9f7f317f3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iYXVJGLi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12462188/141027406-7d2fecc5-0a4c-4389-adac-5cf9f7f317f3.png" alt="Logo"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h3&gt;
    Fast, Simple, Easy image viewer
&lt;/h3&gt;
&lt;p&gt;BetterViewer makes image viewing faster, easier, and more fun.&lt;/p&gt;
&lt;p&gt;BetterViewer was designed as a replacement for the image viewing mode built into Chrome-based web browsers.&lt;/p&gt;
&lt;p&gt;With BetterViewer you can use various keyboard shortcuts to quickly pan, zoom images, edit and a lot more!&lt;/p&gt;
&lt;p&gt;
    Chrome Web Store: &lt;a href="https://chrome.google.com/webstore/detail/betterviewer/llcpfkbjgkpmapiidpnohffjmmnhpmpb" rel="nofollow"&gt;Click Here&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    &lt;a href="https://www.producthunt.com/posts/betterviewer?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-betterviewer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6b3dceb16a756e61b31e0fa7090ae9ec18967c963e954caf8c49fe6992d85f2d/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d333139383831267468656d653d6c69676874" alt="BetterViewer - A chrome extension for better image viewing experience | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;

   Screenshots
&lt;/h3&gt;

&lt;h1&gt;

    &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/12462188/141027643-e478175a-6c4f-41ec-b9dd-c0c8b754f703.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_izVqXBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12462188/141027643-e478175a-6c4f-41ec-b9dd-c0c8b754f703.png" alt="Preview 1"&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;

    &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/12462188/141027869-8c955f5b-241b-4155-811c-4fde4f456fa6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Lg9JphC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12462188/141027869-8c955f5b-241b-4155-811c-4fde4f456fa6.png" alt="Preview 2"&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;

  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/12462188/141028090-4edbe30e-284a-4ce4-b1fc-e2a41f6f7bdf.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ir0ilEkU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12462188/141028090-4edbe30e-284a-4ce4-b1fc-e2a41f6f7bdf.png" alt="Preview 3"&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Zoom in / Zoom Out / Reset&lt;/li&gt;
&lt;li&gt;Fullscreen&lt;/li&gt;
&lt;li&gt;Rotate Left / Rotate Right&lt;/li&gt;
&lt;li&gt;Flip Horizontal / Flip Vertical&lt;/li&gt;
&lt;li&gt;Crop Image&lt;/li&gt;
&lt;li&gt;Paint&lt;/li&gt;
&lt;li&gt;Download Image&lt;/li&gt;
&lt;li&gt;Upload Image to imgBB&lt;/li&gt;
&lt;li&gt;Color picker&lt;/li&gt;
&lt;li&gt;Image Details&lt;/li&gt;
&lt;li&gt;Change background color (Dark / Light / Blurred)&lt;/li&gt;
&lt;li&gt;Print Image&lt;/li&gt;
&lt;li&gt;Extract Text from Image&lt;/li&gt;
&lt;li&gt;Edit in Photopea (Thanks to @bbbenji)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
Changelog&lt;/h1&gt;

&lt;h2&gt;
[1.0.1] - 2021-11-20&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fix Crop problem&lt;/li&gt;
&lt;li&gt;Fix random shutdown&lt;/li&gt;
&lt;li&gt;Replace Imgur with ImgBB (Many users requested this)&lt;/li&gt;
&lt;li&gt;Add "Edit with Photopea"&lt;/li&gt;
&lt;li&gt;Add Contributors in About popup&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
[1.0.0] - 2021-11-10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;First version&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributors ‚ú®
&lt;/h2&gt;

&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key" rel="nofollow"&gt;emoji key&lt;/a&gt;):&lt;/p&gt;‚Ä¶&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ademking/BetterViewer"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>extensions</category>
      <category>chrome</category>
    </item>
    <item>
      <title>Cloud Migration Benefits and Challenges</title>
      <author>Reza Piri</author>
      <pubDate>Mon, 22 Nov 2021 19:46:26 +0000</pubDate>
      <link>https://dev.to/rezapped/cloud-migration-benefits-and-challenges-5aeb</link>
      <guid>https://dev.to/rezapped/cloud-migration-benefits-and-challenges-5aeb</guid>
      <description>&lt;p&gt;A growing number of organizations are switching to cloud services. In this guide, we‚Äôll outline the benefits and challenges of cloud migration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GK3WiLmr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldufrqz3t1u2bze51cj4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GK3WiLmr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldufrqz3t1u2bze51cj4.png" alt="cloudmigration" width="880" height="406"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By Reza Piri  Cloud  November 17, 2021&lt;/p&gt;

&lt;p&gt;Cloud computing has boomed in the last decade and cloud adoption is at the top of every tech exec‚Äôs to do list. More and more companies are considering migrating to the cloud, but what does cloud migration mean, what does the process involve, and what are the benefits and challenges? In this article we will cover this topic and explain how Gennovacap can help your company with &lt;a href="https://gennovacap.com/cloud-migration-services/"&gt;cloud migration services&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  TABLE OF CONTENTS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="#Introduction-what-is-cloud-migration"&gt;Introduction: What is Cloud Migration&lt;/a&gt;&lt;br&gt;
&lt;a href="#Types-of-cloud-migration"&gt;Types of Cloud Migration&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Software-as-a-service"&gt;Software as a Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Platform-as-a-service"&gt;Platform as a Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Infrastructure-as-a-service"&gt;Infrastructure as a Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#What-tools-are-used-in-cloud-migration"&gt;What Tools are Used in Cloud Migration&lt;/a&gt;&lt;br&gt;
&lt;a href="#AWS-cloud-migration-tools"&gt;AWS Cloud Migration Tools&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Azure-migration-tool"&gt;Azure Migration Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Corent-surpass-cloud-migration"&gt;Corent Surpass Cloud Migration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Cloudhealht-cloud-migration-by-vmware"&gt;Cloudhealth Cloud Migration by VMWare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#densify"&gt;Densify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#carbonite"&gt;Carbonite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#What-are-the-benefits-of-cloud-migration"&gt;What are the Benefits of Cloud Migration&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Optimized-costs"&gt;Optimized Costs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Flexibility-for-employees"&gt;Flexibility for Employees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scalability"&gt;Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Enhanced-data-security"&gt;Enhanced Data Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Faster-deployment"&gt;Faster Deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Built-in-backup-and-recovery-capabilities"&gt;Built-in Backup and Recovery Capabilities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#What-are-the-challenges-of-cloud-migration?"&gt;What Are The Challenges of Cloud Migration?&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Integration-strategy"&gt;Integration Strategy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Data-security-management"&gt;Data Security Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Proper-employment-training"&gt;Proper Employment Training&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Potential-ambiguous-costs"&gt;Potential Ambiguous Costs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#How-can-gennovacap-help-my-company"&gt;How can Gennovacap help my company?&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-what-is-cloud-migration"&gt;
  &lt;/a&gt;
  INTRODUCTION: WHAT IS CLOUD MIGRATION? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Cloud migration is the process of moving digital assets, such as data, IT resources and applications to cloud infrastructures. In most cases, businesses interested in cloud migration want to modernize systems. They want to move data from traditional infrastructures, computer rooms, IT suites and data centers to the cloud. &lt;/p&gt;

&lt;p&gt;Statistics suggest that &lt;a href="https://hostingtribunal.com/blog/cloud-adoption-statistics/#gref"&gt;cloud computing&lt;/a&gt; is growing at pace, with almost 95% of enterprises already making use of cloud services through cloud migration strategies. By 2025, it is estimated that cloud servers will store more than 100 zettabytes of data. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-cloud-migration"&gt;
  &lt;/a&gt;
  TYPES OF CLOUD MIGRATION &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The three main types of cloud migration are software as a service, platform as a service and infrastructure as a service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#software-as-a-service-saas"&gt;
  &lt;/a&gt;
  SOFTWARE AS A SERVICE (SAAS) &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Software as a Service is a form of cloud migration that involves using software provided over the Internet. With SaaS, we lift the software from data centers and move them to workloads on the cloud.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#platform-as-a-service-paas"&gt;
  &lt;/a&gt;
  PLATFORM AS A SERVICE (PAAS) &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Platform as a Service (PaaS) provides a blank canvas for DevOps engineers to create, modify and scale apps with cloud native infrastructure. This method removes all worry about infrastructure, storage limitations or compatible operating systems. Thus, your software becomes unstoppable and highly scalable. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infrastructure-as-a-service-iaas"&gt;
  &lt;/a&gt;
  INFRASTRUCTURE AS A SERVICE (IAAS) &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Infrastructure as a Service involves relocating infrastructure to the cloud. The most common example of this approach is leasing a server through a cloud provider. The provider retains ownership of the server and is responsible for management, maintenance and updates. Examples of IaaS include Google Cloud Platform, Microsoft Azure and AWS. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-tools-are-used-in-cloud-migration"&gt;
  &lt;/a&gt;
  WHAT TOOLS ARE USED IN CLOUD MIGRATION? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://techjury.net/blog/how-much-data-is-created-every-day/#gref"&gt;amount of data&lt;/a&gt; we produce and use is increasing year on year. Studies suggest that by 2020, we were creating 2.5 quintillion bytes per day. When dealing with large amounts of data, it is beneficial to utilize dedicated cloud migration tools to facilitate a seamless transition. There are several cloud migration tools available, including:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-cloud-migration-tools"&gt;
  &lt;/a&gt;
  AWS CLOUD MIGRATION TOOLS &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;With the AWS cloud migration tool, you can transfer data into and out of the cloud rapidly, undertake data migration and use continuous data replication across different places. This tool also targets efficiency and provides protection against downtime for apps that are reliant on cloud function. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#azure-migration-tool"&gt;
  &lt;/a&gt;
  AZURE MIGRATION TOOL &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The Azure migration tool provides integrated migration capabilities, which track migration processes and facilitate the smooth transfer of digital assets. Users only pay for the services they need, which makes this an effective solution for businesses. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#corent-surpass-cloud-migration"&gt;
  &lt;/a&gt;
  CORENT SURPASS CLOUD MIGRATION &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This tool is known for offering speedy conversion processes to turn apps into SaaS applications. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloudhealth-cloud-migration-by-vmware"&gt;
  &lt;/a&gt;
  CLOUDHEALTH CLOUD MIGRATION BY VMWARE &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The Cloudhealth tool offers reporting and analytic features to align infrastructure with company objectives, operations and requirements. It also enables individuals or teams to identify new measures and implement new policies to optimize performance. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#densify"&gt;
  &lt;/a&gt;
  DENSIFY &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Densify is an excellent tool for business owners and IT departments that are considering multiple cloud services and providers. This tool enables you to make comparisons before you reach a decision, and it also offers a free trial. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#carbonite"&gt;
  &lt;/a&gt;
  CARBONITE &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Carbonite is famed for its protective capabilities, with one of the primary aims is to prevent downtime and data loss. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m6CkwzSN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/peh5pikaeqogot2j77h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m6CkwzSN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/peh5pikaeqogot2j77h1.png" alt="cloudmigration" width="880" height="607"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Picture credit: &lt;a href="https://pixabay.com/illustrations/iot-internet-of-things-network-3337536/"&gt;https://pixabay.com/illustrations/iot-internet-of-things-network-3337536/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-cloud-migration"&gt;
  &lt;/a&gt;
  WHAT ARE THE BENEFITS OF CLOUD MIGRATION? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Surveys suggest that 68% of CIOs ranked migrating to the cloud, moving to hybrid cloud, or expanding cloud services as the most significant driver for &lt;a href="https://www2.deloitte.com/xe/en/insights/industry/technology/technology-media-and-telecom-predictions/2021/cloud-migration-trends-and-forecast.html"&gt;IT spending&lt;/a&gt; in 2021. Migrating data and applications to the cloud offers a raft of advantages for organizations across all sectors. Key benefits of cloud migration include:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimized-costs"&gt;
  &lt;/a&gt;
  OPTIMIZED COSTS &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Most businesses run on tight budgets. Migrating to the cloud is an effective means of &lt;a href="https://gennovacap.com/app-development/5-tips-every-entrepreneur-should-know-before-raising-money-a-checklist-for-raising-vc-money/"&gt;saving money&lt;/a&gt; and reducing IT expenses while benefiting from access to advanced systems and services. When you work with a cloud provider, you pay for the services you use. You also have access to the perks without kitting out an IT department or hiring a team of IT experts. &lt;/p&gt;

&lt;p&gt;If you choose to migrate to the cloud, you can divert funding that would have gone to maintenance, upgrades and updates to other departments or development projects. But, if you switch to cloud computing, your provider will cover upkeep costs, leaving you with more money to invest in innovation or growth. Thus, small, medium, and large businesses can benefit from streamlining outgoings and saving on IT by optimizing costs through cloud migration. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexibility-for-employees"&gt;
  &lt;/a&gt;
  FLEXIBILITY FOR EMPLOYEES &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Remote work was becoming more commonplace before the pandemic, but the Covid-19 crisis has undoubtedly impacted the way businesses operate and where employees work. Research indicates that in 2020, over 70% of US employees were &lt;a href="https://www.pewresearch.org/social-trends/2020/12/09/how-the-coronavirus-outbreak-has-and-hasnt-changed-the-way-americans-work/"&gt;working from home&lt;/a&gt;. One of the most significant benefits of cloud migration for company directors and employees is greater flexibility using cloud based systems. &lt;/p&gt;

&lt;p&gt;Whether you manage remote workers or you have employees who combine working from home with going into the office, the cloud offers a range of benefits. With access to cloud applications and services, employees can work almost anywhere. Additionally, business owners don‚Äôt have to worry about a decline in productivity or efficiency if employees are forced to change plans. &lt;/p&gt;

&lt;p&gt;In the aftermath of the pandemic, flexibility will be instrumental for employers, as studies show that it is now a driving factor for the majority of employees. Many employees (51%) now consider flexibility more important than salary. By embracing innovation and taking advantage of the cloud, businesses can &lt;a href="https://www.businesswire.com/news/home/20210331005138/en/Workplace-Flexibility-More-Important-to-Workers-Than-a-Pay-Rise"&gt;offer more flexibility&lt;/a&gt; for their workforce. This will benefit existing employees, as well as helping organizations to attract top talent. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scalability"&gt;
  &lt;/a&gt;
  SCALABILITY &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Cloud computing is incredibly flexible and adaptable, making it suitable for businesses that are scaling up. Furthermore, automated cloud resources scale down when demand falls. Organizations can quickly scale up in line with growth and increased workloads. The process is much simpler and faster than traditional methods. &lt;/p&gt;

&lt;p&gt;Without the cloud, an IT department would have to buy and set up servers, invest in network equipment and ensure they had the right software licenses. With the cloud, companies can access the resources they need as and when their requirements change. Being able to scale up rapidly enables business owners to also capitalize on market growth and opportunities to take advantage of increased demand for products and services. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enhanced-data-security"&gt;
  &lt;/a&gt;
  ENHANCED DATA SECURITY &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Data security should be a priority for every business. If you migrate to the cloud and you work with a reputable provider, you can benefit from enhanced security knowing sensitive data is safe. You can also take advantage of compliance guarantees. In addition to security measures and updates, the cloud also offers enhanced safety because there is no risk of physical theft. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#faster-deployment"&gt;
  &lt;/a&gt;
  FASTER DEPLOYMENT &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The cloud provides businesses with the opportunity to be more agile, which is crucial in the 21st century. With cloud computing, you can enjoy faster deployment and enhanced performance. You can respond to new or changing trends rapidly and you can also &lt;a href="https://gennovacap.com/devops/devops-services-and-managed-it-services-benefits/"&gt;develop, test and implement applications&lt;/a&gt; swiftly. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#builtin-backup-and-recovery-capabilities"&gt;
  &lt;/a&gt;
  BUILT-IN BACKUP AND RECOVERY CAPABILITIES &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is no secret that downtime is costly, both in terms of financial losses and damage to your reputation. According to Gartner, the average cost of downtime is estimated at $5,600 per minute. The cloud has built-in backup and recovery capabilities to protect company reputations and enable businesses to minimize risks and disruptions. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-challenges-of-cloud-migration"&gt;
  &lt;/a&gt;
  WHAT ARE THE CHALLENGES OF CLOUD MIGRATION? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;While there are several benefits to cloud migration, there are also challenges.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integration-strategy"&gt;
  &lt;/a&gt;
  INTEGRATION STRATEGY &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is common for businesses to enter into the cloud migration process without a clear strategy. To execute a seamless transition, it is essential to have detailed, robust plans in place.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-security-management"&gt;
  &lt;/a&gt;
  DATA SECURITY MANAGEMENT &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Data security and compliance can be a challenge because cloud providers typically utilize a shared responsibility structure, which relies on the client to implement measures to protect their data. The provider will assume responsibility for the infrastructure but not the individual workloads. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#proper-employment-training"&gt;
  &lt;/a&gt;
  PROPER EMPLOYMENT TRAINING &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Cloud migration represents a change in the way businesses work and employees may not be familiar with cloud applications and capabilities. Providing training can also help employees to adjust and ensure they are able to make the most of the benefits of cloud computing. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#potential-ambiguous-costs"&gt;
  &lt;/a&gt;
  POTENTIAL AMBIGUOUS COSTS &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;While cloud migration can be a cost-saving measure for organizations, cost of services can occasionally be difficult to estimate. Every business should outline KPIs before migration and research fees so that they have an accurate idea of how much services will cost on an ongoing basis. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-gennovacap-help-my-company"&gt;
  &lt;/a&gt;
  HOW CAN GENNOVACAP HELP MY COMPANY? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Gennovacap‚Äôs &lt;a href="https://gennovacap.com/devops-consulting/"&gt;devops advisory services&lt;/a&gt; and &lt;a href="https://gennovacap.com/cloud-migration-services/"&gt;cloud migration services&lt;/a&gt; are the bedrock of our cloud consulting services. Our cloud services team can help you successfully migrate to any public cloud environment.  &lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to build a search engine with word embeddings</title>
      <author>Mage</author>
      <pubDate>Mon, 22 Nov 2021 19:43:42 +0000</pubDate>
      <link>https://dev.to/mage_ai/how-to-build-a-search-engine-with-word-embeddings-56jd</link>
      <guid>https://dev.to/mage_ai/how-to-build-a-search-engine-with-word-embeddings-56jd</guid>
      <description>&lt;p&gt;Imagine you have a large set of news articles, and want to provide a way to allow your users to search through them. For example, here are 5 random articles from the Economist:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;An investment bonanza is coming&lt;/li&gt;
&lt;li&gt;Who governs a country‚Äôs airspace?&lt;/li&gt;
&lt;li&gt;What is a supermoon, and how noticeable is it to the naked eye?&lt;/li&gt;
&lt;li&gt;What the evidence says about police body-cameras&lt;/li&gt;
&lt;li&gt;Who controls Syria?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let‚Äôs think about what kind of queries potential users issue and the articles that we would want to return.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exact-and-substring-matches"&gt;
  &lt;/a&gt;
  Exact and Substring Matches
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A search for ‚Äúinvestment‚Äù should return the 1st article.&lt;/li&gt;
&lt;li&gt;A search for ‚Äúsupermoon‚Äù should return the 3rd article.&lt;/li&gt;
&lt;li&gt;A search for ‚Äúsyria‚Äù should return the 5th article.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is quite simple to implement with traditional information retrieval techniques, since these queries have keyword matching.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#harder-examples"&gt;
  &lt;/a&gt;
  Harder Examples
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A search for ‚Äúbanking‚Äù should probably return the 1st article.&lt;/li&gt;
&lt;li&gt;A search for ‚Äúastrology‚Äù should return the 3rd article.&lt;/li&gt;
&lt;li&gt;A search for ‚Äúmiddle east‚Äù should return the 5th article.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The challenge with these queries is that none of them are actually a keyword match in the original documents. However, there isn‚Äôt any string matching we can perform between the search query and the document.&lt;/p&gt;

&lt;p&gt;What we need is a way to perform searches over text without requiring exact keyword matches between words in the query and words in the documents.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#word-embeddings"&gt;
  &lt;/a&gt;
  Word Embeddings
&lt;/h3&gt;

&lt;p&gt;One way we can do this is with word embeddings, &lt;a href="https://blog.acolyer.org/2016/04/21/the-amazing-power-of-word-vectors/"&gt;which capture the semantics of words in vector representation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If we can find a way to create a vector for the query, and a vector for every document, in the same vector space, then we can just compute the similarity between our query vector, and every document, to retrieve the document that is most semantically similar to our query.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-document-embeddings-from-word-embeddings"&gt;
  &lt;/a&gt;
  Creating Document Embeddings from Word Embeddings
&lt;/h3&gt;

&lt;p&gt;Assuming we have lookup table of a word to its embedding, how do we actually create an embedding representing a string of words?&lt;/p&gt;

&lt;p&gt;We can think of the semantics of a document as just the average of the semantics of individual words, and compute a mean word embedding to represent a document.&lt;/p&gt;

&lt;p&gt;Specifically:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def create_mean_embedding(words):
    return np.mean(
        [model[word] for word in words if word in model],
        axis=0)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would capture the average semantic of a document or query.&lt;/p&gt;

&lt;p&gt;Another way we can build a document embedding is by by taking the coordinate wise max of all of the individual word embeddings:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def create_max_embedding(words, model):
    return np.amax(
        [model[word] for word in words if word in model],
        axis=0)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would highlight the max of every semantic dimension.&lt;/p&gt;

&lt;p&gt;We can also concatenate the two embedding types to get a better representation of the document:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def create_embedding(words):
    return np.concatenate([
        create_max_embedding(words),
        create_mean_embedding(words)
    ])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs try apply this to the simple example documents we highlighted above.&lt;/p&gt;

&lt;p&gt;We will be using &lt;a href="https://radimrehurek.com/gensim/"&gt;&lt;code&gt;gensim&lt;/code&gt;&lt;/a&gt; to load our &lt;a href="https://code.google.com/archive/p/word2vec/"&gt;Google News pre-trained word vectors&lt;/a&gt;. Find the code for this &lt;a href="https://github.com/czhu12/semantic-search/blob/master/search.py"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ranking-with-embeddings"&gt;
  &lt;/a&gt;
  Ranking with embeddings
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Query: "banking"

Rank: 0 | Top Article: An investment bonanza is coming
Rank: 1 | Top Article: Who governs a country's airspace?
Rank: 2 | Top Article: What is a supermoon, and how noticeable is it to the naked eye?
Rank: 3 | Top Article: Who controls Syria?
Rank: 4 | Top Article: What the evidence says about police body-cameras

Query: "astrology"

Rank: 0 | Top Article: What is a supermoon, and how noticeable is it to the naked eye?
Rank: 1 | Top Article: Who governs a country's airspace?
Rank: 2 | Top Article: Who controls Syria?
Rank: 3 | Top Article: What the evidence says about police body-cameras
Rank: 4 | Top Article: An investment bonanza is coming

Query: "middle east"

Rank: 0 | Top Article: Who controls Syria?
Rank: 1 | Top Article: Who governs a country's airspace?
Rank: 2 | Top Article: An investment bonanza is coming
Rank: 3 | Top Article: What is a supermoon, and how noticeable is it to the naked eye?
Rank: 4 | Top Article: What the evidence says about police body-cameras
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dual-space-embedding"&gt;
  &lt;/a&gt;
  Dual space embedding
&lt;/h2&gt;

&lt;p&gt;So far we‚Äôve used the standard pre-trained word2vec embeddings to represent both the query and document embeddings. But lets think about how word2vec constructs these vectors to come up with a more clever way to create these embeddings.&lt;/p&gt;

&lt;p&gt;The core idea of word2vec is that words that are used in similar contexts, will have similar meanings. Focusing on the skip-gram variant of the model, this idea is formulated as trying to predict the context words from any given word. Check out &lt;a href="http://mccormickml.com/2016/04/19/word2vec-tutorial-the-skip-gram-model/"&gt;this post&lt;/a&gt; if this is confusing to you.&lt;/p&gt;

&lt;p&gt;In a skip-gram model, a one-hot encoded word is mapped to a dense representation, which then is mapped back to the context of that word (context in this case refers to the words that surround the target word). Usually, we keep the first transformation matrix &lt;em&gt;W&lt;/em&gt; (in the diagram below), which becomes our word embeddings, and discard the matrix that maps to context words &lt;em&gt;W‚Äô&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lmgy5dNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vdmr67oc1007hva4nofy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lmgy5dNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vdmr67oc1007hva4nofy.png" alt="Image description" width="392" height="227"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we think deeply about the behavior of W and W‚Äô matrix: the W embedding‚Äôs goal is to map a word to an intermediate representation, and the W‚Äô matrix maps from the intermediate representation to a context. This naturally results in W capturing the semantics of a word, while W‚Äô captures the context of a word.&lt;/p&gt;

&lt;p&gt;We can frame our search problem in a similar way: The query being the ‚Äúword‚Äù and the document being the ‚Äúcontext‚Äù. In this way, if the query is embedded using W, while the document is embedded using W‚Äô, comparing the similarity between the two vectors would indicate &lt;strong&gt;whether or not the document acts as a good context for the query&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Lets consider two simple documents, that we could potentially return for a query ‚Äúharvard‚Äù, and decide which one is more relevant:&lt;/p&gt;

&lt;p&gt;Document 1:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Harvard alumni receives 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Document 2:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Yale, NYU and Harvard 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As a user, you‚Äôd probably want to see the first document. However, our current embedding model would assign the second document a higher relevance score. Why? Because the terms ‚ÄúPittsburg Steelers‚Äù, ‚ÄúBaltimore Ravens‚Äù and ‚ÄúCincinnati Bengals‚Äù are similar to the term ‚ÄúNew England Patriots‚Äù, since they are all football teams. (Recall that the word2vec model measures similarity as words that have similar contexts. Football team names would exists in similar context). Therefore, the embedding for the query and document 2 will be more similar than the query and document 1.&lt;/p&gt;

&lt;p&gt;However, using &lt;em&gt;W‚Äô&lt;/em&gt; to create the document embedding, and W to create the query embedding, will allow a similarity measure of &lt;em&gt;‚Äúhow well does this document represent the context of this query‚Äù&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Indeed, these are the results published in &lt;a href="https://arxiv.org/abs/1602.01137"&gt;A Dual Embedding Space Model for Document Ranking&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ViOcnXLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot3d7wvt10oa714jyacl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ViOcnXLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot3d7wvt10oa714jyacl.png" alt="Image description" width="880" height="248"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This table above shows the closest word embeddings to the words ‚Äúyale‚Äù with three different embedding comparisons.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;IN-IN: The bolded word is embedded with W and the words below are the closest word embeddings in W.&lt;/li&gt;
&lt;li&gt;OUT-OUT: The bolded word is embedded with W‚Äô and the words below are the closest word embeddings in W‚Äô.&lt;/li&gt;
&lt;li&gt;IN-OUT: The bolded word is embedded with W and the words below are the closest word embeddings in W‚Äô.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Observe that while ‚ÄúYale‚Äù is more semantically similar to ‚ÄúHarvard‚Äù, if a document about Harvard came up when searching ‚ÄúYale‚Äù, that wouldn‚Äôt make a lot of sense.&lt;/p&gt;

&lt;p&gt;With that in mind, it seems the IN-OUT embedding scheme provides the most relevant words for a search system. If someone searched for the word ‚ÄúYale‚Äù, I would expect documents with the terms ‚Äúfaculty‚Äù, ‚Äúalumni‚Äù, and ‚Äúorientation‚Äù rather than ‚Äúharvard‚Äù and ‚Äúnyu‚Äù.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-do-we-deploy-this"&gt;
  &lt;/a&gt;
  How do we deploy this?
&lt;/h2&gt;

&lt;p&gt;Too many ML articles stop here, but deployment is typically half the challenge.&lt;/p&gt;

&lt;p&gt;Typically, these models are deployed as a ranker after a retrieval model. The pipeline is typically structured like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PzveTYHr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fj16aog8vwn085kd2jhb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PzveTYHr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fj16aog8vwn085kd2jhb.png" alt="Image description" width="861" height="83"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The purpose of the retrieval model is to find the ~100 most similar documents based on keywords among millions of other documents, while the purpose of the ranking model is to find the most semantically relevant document in the set of 100.&lt;/p&gt;

&lt;p&gt;BM25 is a common document retrieval method which is implemented in &lt;a href="https://opensourceconnections.com/blog/2015/10/16/bm25-the-next-generation-of-lucene-relevation/"&gt;most search systems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, lets implement a retrieval model that leverages the &lt;a href="https://pypi.org/project/rank-bm25/"&gt;rank-bm25&lt;/a&gt; package. In a production setting, we would probably use something like Elasticsearch for this part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from rank_bm25 import BM25Okapi as BM25

class Retriever(object):
    def __init__(self, documents):
        self.corpus = documents
        self.bm25 = BM25(self.corpus)

    def query(self, tokenized_query, n=100):
        scores = self.bm25.get_scores(tokenized_query)
        best_docs = sorted(range(len(scores)), key=lambda i: -scores[i])[:n]
        return best_docs, [scores[i] for i in best_docs]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let‚Äôs build the ranking model, which takes a list of documents and re-ranks them according to the similarity between the query embedding and the document embedding.&lt;/p&gt;

&lt;p&gt;And now, let‚Äôs stitch the code together.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at a real example output of this for the query ‚Äú&lt;em&gt;harvard hockey&lt;/em&gt;‚Äù against the Microsoft News Dataset. However, there are no documents in the corpus containing both the terms ‚Äúharvard‚Äù and ‚Äúhockey‚Äù, making this a tricky problem.&lt;/p&gt;

&lt;p&gt;Here are the top 20 results for the query ‚Äú&lt;em&gt;harvard hockey&lt;/em&gt;‚Äù from the BM25 model.&lt;/p&gt;

&lt;p&gt;The documents with the highest score from the BM25 retrieval model is ‚Äú&lt;em&gt;Admissions scandals unfolding at Harvard university&lt;/em&gt;‚Äù and ‚Äú&lt;em&gt;How a Harvard class project changed barbecue&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;p&gt;I suspect many people do not think this is a very relevant article to ‚Äú&lt;em&gt;harvard hockey&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;p&gt;But if we re-rank the top 100 results from the BM25 model with the embedding based model, here is what we get:&lt;/p&gt;

&lt;p&gt;Now the results are much more semantically relevant to college hockey results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;A dual space embedding approach to creating query and document embeddings for embedding based ranking can offer more contextually relevant results than the traditional word embedding approach.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/research/project/dual-embedding-space-model-desm/"&gt;Dual Embedding Space Model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>wordembeddings</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>ai</category>
    </item>
    <item>
      <title>Adopting 200 OK! Error Handling strategy in GraphQL with Hot Chocolate (dotnet).</title>
      <author>Marcin Janiak</author>
      <pubDate>Mon, 22 Nov 2021 19:30:32 +0000</pubDate>
      <link>https://dev.to/marcinjaniak/adopting-200-ok-error-handling-strategy-in-graphql-with-hotchocolate-dotnet-54md</link>
      <guid>https://dev.to/marcinjaniak/adopting-200-ok-error-handling-strategy-in-graphql-with-hotchocolate-dotnet-54md</guid>
      <description>&lt;p&gt;This article is about the strategy of handling errors in your C# GraphQL APIs and is based on &lt;a href="https://sachee.medium.com/200-ok-error-handling-in-graphql-7ec869aec9bc"&gt;Sasha Solomon's article about handling errors in GraphQL environments&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;It's adopted to asp.net core server implementation (Hot Chocolate) and it's a glimpse of how it might look and be used in your next GraphQL application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR;
&lt;/h2&gt;

&lt;p&gt;Mostly, the mentioned article is about separating "errors" into categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;errors (e.g. Internal Server Error)&lt;/li&gt;
&lt;li&gt;results (Deleted User, Unavailable in Country)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Later on, it encourages to use union types for response modeling. It also highlights the pros of this approach and shows the cons of using the default approach.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#default-approach"&gt;
  &lt;/a&gt;
  Default approach
&lt;/h3&gt;

&lt;p&gt;GraphQL errors mostly look like this one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"errors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"user"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"locations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"line"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"column"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"extensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Object not found"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;That generates multiple problems:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;All errors are treated the same&lt;/li&gt;
&lt;li&gt;It‚Äôs hard to know where the error came from&lt;/li&gt;
&lt;li&gt;It‚Äôs hard for the client to know what errors to care about&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'd like to show you one extra problem that comes to my mind:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Due to app evolution and development of new business rules - some set of operations might return new kinds of errors which might be unknown until they occur...on production!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Really, go ahead and read the &lt;a href="(https://sachee.medium.com/200-ok-error-handling-in-graphql-7ec869aec9bc)"&gt;mentioned article&lt;/a&gt;, it's cool!&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before we start
&lt;/h3&gt;

&lt;p&gt;We will be creating a simple wallet app responsible for withdrawals, deposits and retrieving historical operations.&lt;/p&gt;

&lt;p&gt;To keep things simple, let's use an in-memory repository (registered as a singleton). Keep in mind that persistence isn't a subject of this post (and of a git repository)!&lt;/p&gt;

&lt;p&gt;We will be using &lt;strong&gt;.NET 6 framework&lt;/strong&gt; and a &lt;strong&gt;minimal API&lt;/strong&gt; approach. &lt;/p&gt;

&lt;p&gt;For a GraphQL server, we will be using &lt;strong&gt;Hot Chocolate (12.3.1 version)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you don't know &lt;strong&gt;Hot Chocolate framework&lt;/strong&gt;, feel free to read about it on &lt;a href="https://chillicream.com/"&gt;chillicream.com (official website)&lt;/a&gt; and feel free to &lt;a href="http://slack.chillicream.com/"&gt;join the great community (which is always willing to help) on slack&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Moreover, the guys from &lt;strong&gt;Chilli Cream&lt;/strong&gt; are really passionate about GraphQL - delivering the whole ecosystem to create and interact with your GraphQL solutions.&lt;/p&gt;

&lt;p&gt;Hot Chocolate allows us to create APIs in three ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Annotation based&lt;/li&gt;
&lt;li&gt;Code-First&lt;/li&gt;
&lt;li&gt;Schema-First&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will focus on Code-First, but it is possible to adapt the code to the other ones.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#first-things-first"&gt;
  &lt;/a&gt;
  First things first!
&lt;/h4&gt;

&lt;p&gt;The wallet app is a pretty simple case - we cannot withdraw an amount greater than our current balance and we cannot operate on a blocked wallet.&lt;/p&gt;

&lt;p&gt;Also, we might be able to perform these:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get a wallet&lt;/li&gt;
&lt;li&gt;Get a total balance&lt;/li&gt;
&lt;li&gt;Get a history of a operations&lt;/li&gt;
&lt;li&gt;Deposit&lt;/li&gt;
&lt;li&gt;Withdraw&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this post, we will focus on modelling the data and implementing withdrawals and deposits.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#model-the-data"&gt;
  &lt;/a&gt;
  Model the data
&lt;/h3&gt;

&lt;p&gt;Let's start with modeling the financial operation itself:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="n"&gt;OperationType&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Deposit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Withdrawal&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;FinancialOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OperationType&lt;/span&gt; &lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DateTimeOffset&lt;/span&gt; &lt;span class="n"&gt;At&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Continue with Wallet class&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Wallet&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;ICollection&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FinancialOperation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Operations&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ICollection&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FinancialOperation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;operations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Operations&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operations&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Implement both Deposit and Withdraw methods:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="nf"&gt;GetBalance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Operations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;OperationType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Deposit&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Withdraw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetBalance&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;InsufficientBalanceException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Operations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;FinancialOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;OperationType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Withdrawal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;DateTimeOffset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UtcNow&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Deposit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Operations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;FinancialOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;OperationType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Deposit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;DateTimeOffset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UtcNow&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We want to throw a custom exception if the balance is insufficient to perform a withdrawal:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InsufficientBalanceException&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;RequestedAmount&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;InsufficientBalanceException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;requestedAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;$"Insufficient balance to withdraw &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;requestedAmount&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;RequestedAmount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requestedAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#modeling-the-mutation"&gt;
  &lt;/a&gt;
  Modeling the mutation
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Mutation&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="nf"&gt;OpenNewWallet&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;IWalletRepository&lt;/span&gt; &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Guid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NewGuid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FinancialOperation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;Deposit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;IWalletRepository&lt;/span&gt; &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;wallet&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;wallet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Deposit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;Withdraw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;IWalletRepository&lt;/span&gt; &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;wallet&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;wallet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Withdraw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;With the current implementation, we are able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get NullException if the wallet wasn't created because we didn't do any null handling&lt;/li&gt;
&lt;li&gt;Get our custom Exception if a wallet was created, but no money was deposited.&lt;/li&gt;
&lt;li&gt;Withdraw successfully (and get true result)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We could improve it with exception handling - and return false for failed request - but we can do it even better.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#improving-withdrawal-with-union-response-the-kind-of-a-good-way"&gt;
  &lt;/a&gt;
  Improving withdrawal with union response (the kind of a good way)
&lt;/h3&gt;

&lt;p&gt;Let's model out the response the way it should look (at least in GraphQL ecosystem):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;WithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;WithdrawnAmount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;WalletNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;InsufficientFunds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The ObjectType (via Code First method in Hot Chocolate)&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WithdrawResultType&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UnionType&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IUnionTypeDescriptor&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WalletNotFound&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;InsufficientFunds&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Don't forget to use new ObjectType!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MutationType&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mutation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IObjectTypeDescriptor&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mutation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Withdraw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!))&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WithdrawResultType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HZUzSh3t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/362v1moucmrzkb6t1s7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HZUzSh3t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/362v1moucmrzkb6t1s7a.png" alt="Withdrawal result types" width="880" height="282"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The two biggest &lt;strong&gt;drawbacks&lt;/strong&gt; of this approach are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we can return anything and get a new kind of error. &lt;/li&gt;
&lt;li&gt;we don't know what the allowed types are&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sPEmkamm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ci09dhyx1ycue53bfm95.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sPEmkamm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ci09dhyx1ycue53bfm95.png" alt="Returning the not supported types (int)" width="816" height="285"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7NhJLQ-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49g6v2o76qemfrm96m05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7NhJLQ-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49g6v2o76qemfrm96m05.png" alt="Getting an error when server returns wrong type" width="863" height="393"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pushing-it-further-to-embrace-the-dotnet-typings"&gt;
  &lt;/a&gt;
  Pushing it further to embrace the dotnet typings
&lt;/h3&gt;

&lt;p&gt;Due to the missing of union types in dotnet (they might be available in C# 11) - we have to improvise.&lt;/p&gt;

&lt;p&gt;Let's have an empty interface IWithdrawalResult so we can prevent the wrong types from being returned.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt; &lt;span class="nf"&gt;Withdraw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;IWalletRepository&lt;/span&gt; &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* the body of Withdraw method stays the same */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IWithdrawalResult&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;WithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;WithdrawnAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;WalletNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;InsufficientFunds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WithdrawResultType&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UnionType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* the body of Configure method stays the same */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It's a little better, but...let's refactor the deposit method using the same approach.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#refactoring-the-whole-api-as-fast-as-possible"&gt;
  &lt;/a&gt;
  Refactoring the whole API as fast as possible
&lt;/h4&gt;

&lt;p&gt;The shown approach seems to be right and we want to refactor the whole API to use this instead. The fastest possible way &lt;strong&gt;might be&lt;/strong&gt; reusing the types. &lt;/p&gt;

&lt;p&gt;We are going to try achieving the following with the reuse of WalletNotFound result.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CLRJU2F5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz3rro6k6bqj6z8vykd6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CLRJU2F5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz3rro6k6bqj6z8vykd6.png" alt="Reused result records for multiple mutation fields" width="880" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create IDepositResult interface&lt;/li&gt;
&lt;li&gt;Create DepositResult and make it implement mentioned interface&lt;/li&gt;
&lt;li&gt;Make WalletNotFound implement IDepositResult&lt;/li&gt;
&lt;li&gt;Create DepositResultType and configure this union type&lt;/li&gt;
&lt;li&gt;Refactor Deposit method&lt;/li&gt;
&lt;li&gt;Configure Deposit field in MutationType
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IDepositResult&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;DepositResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;DepositedAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IDepositResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;WalletNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDepositResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="cm"&gt;/* Part of Mutation class */&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IDepositResult&lt;/span&gt; &lt;span class="nf"&gt;Deposit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;IWalletRepository&lt;/span&gt; &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;wallet&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;walletRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wallet&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WalletNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;wallet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Deposit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;DepositResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DepositResultType&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UnionType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IDepositResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IUnionTypeDescriptor&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DepositResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WalletNotFound&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MutationType&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mutation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IObjectTypeDescriptor&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mutation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Withdraw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!))&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WithdrawResultType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;

        &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Deposit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!))&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DepositResultType&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Hurray! It works!&lt;/strong&gt; We can freely reuse types and have cool schemas...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not really!&lt;/strong&gt; I really hope at this point you all know what's wrong.&lt;/p&gt;

&lt;p&gt;Imagine if any of the result interfaces would have some properties&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IDepositResult&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;DepositRelatedProperty&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IWithdrawalResult&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;WithdrawalRelatedProperty&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;WalletNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;DepositRelatedProperty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;WithdrawalRelatedProperty&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDepositResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Every time we want to return the WalletNotFound result we have to be aware of multiple properties coming from various sources. Also, we might end up having types implementing an enormous number of interfaces.&lt;/p&gt;

&lt;p&gt;The usability of this approach also depends on code organization in your project. Probably - if the results are scattered - you won't be having a good time searching for all of them.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#doing-it-the-good-way"&gt;
  &lt;/a&gt;
  Doing it the good way
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; This approach multiplies the amount of code you have to write but it feels much cleaner. Also - we are totally abandoning the concept of reusing the types.&lt;/p&gt;

&lt;p&gt;From now, we have only to do two things.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#refactoring-the-result-types-and-fixing-corresponding-ones"&gt;
  &lt;/a&gt;
  Refactoring the result types (and fixing corresponding ones)
&lt;/h4&gt;

&lt;p&gt;with a help of nested classes (records in this case).&lt;br&gt;
Keep in mind that now we can change names to be less expressive.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IDepositResult&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;Valid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;DepositedAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IDepositResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IDepositResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IWithdrawalResult&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;Valid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;WithdrawnAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;InsufficientFunds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;WalletId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWithdrawalResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#avoiding-conflicts-in-the-naming-of-types"&gt;
  &lt;/a&gt;
  Avoiding conflicts in the naming of types
&lt;/h4&gt;

&lt;p&gt;Due to how GraphQL works (and Hot Chocolate) - we cannot have multiple types with the same name (eg. subclass Valid in IDepositResult and IWithdrawResult)&lt;/p&gt;

&lt;p&gt;We can easily fix it by implementing our own DefaultNamingConventions.&lt;/p&gt;

&lt;p&gt;The example implementation might look like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomUnionTypesNamingConventions&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DefaultNamingConventions&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="n"&gt;NameString&lt;/span&gt; &lt;span class="nf"&gt;GetTypeName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeclaringType&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="nf"&gt;RemoveIFromDeclaringInterfaceName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="n"&gt;NameString&lt;/span&gt; &lt;span class="nf"&gt;GetTypeName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TypeKind&lt;/span&gt; &lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeclaringType&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="nf"&gt;RemoveIFromDeclaringInterfaceName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;TypeKind&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;NameString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Union"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;NameString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nf"&gt;RemoveIFromDeclaringInterfaceName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeclaringType&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeclaringType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsInterface&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeclaringType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeclaringType&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Empty&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeclaringType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJDSTqym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/betjt9vud25h1b5kuiys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJDSTqym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/betjt9vud25h1b5kuiys.png" alt="Voyager: Result types as subclasses" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can easily expand and modify each result type without the risk of breaking something else&lt;/li&gt;
&lt;li&gt;The compiler watches over the types we return&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frontend cannot use fragments&lt;/li&gt;
&lt;li&gt;We have a lot more types&lt;/li&gt;
&lt;li&gt;We cannot easily modify multiple results in API&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Each of shown methods might be sufficient for your needs, currently, I'm using two of them (the interface one and the subclass one) in two different projects.&lt;br&gt;
It feels like the last one is the most comfortable for me.&lt;/p&gt;

&lt;p&gt;The interface approach is most appropriate in terms of creating GraphQL API.&lt;/p&gt;

&lt;p&gt;On the second hand, the subclasses approach is better from the C# developer standpoint.&lt;/p&gt;

&lt;p&gt;Please keep in mind that it might be used for queries too.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-links-once-again"&gt;
  &lt;/a&gt;
  The links (once again)
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="https://sachee.medium.com/200-ok-error-handling-in-graphql-7ec869aec9bc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UjrrDQkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/56/56/1%2At0siYa8-hhE3cMnK4rEpSA.jpeg" alt="Sasha Solomon"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://sachee.medium.com/200-ok-error-handling-in-graphql-7ec869aec9bc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;200 OK! Error Handling in GraphQL | by Sasha Solomon | Medium&lt;/h2&gt;
      &lt;h3&gt;Sasha Solomon „Éª &lt;time&gt;Oct 23, 2020&lt;/time&gt; „Éª 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnDHPsJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium-f709f79cf29704f9f4c2a83f950b2964e95007a3e311b77f686915c71574fef2.svg" alt="Medium Logo"&gt;
        sachee.Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://chillicream.com/"&gt;chillicream.com (official website)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://slack.chillicream.com/"&gt;Chilli's Cream slack&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://chillicream.com/blog"&gt;Chilli's cream blog&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-full-code"&gt;
  &lt;/a&gt;
  The full code
&lt;/h4&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/marcin-janiak"&gt;
        marcin-janiak
      &lt;/a&gt; / &lt;a href="https://github.com/marcin-janiak/200ok-hotchocolate-error-handling"&gt;
        200ok-hotchocolate-error-handling
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Dotnet implementation of 200OK Error Handling in Hot Chocolate.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>graphql</category>
      <category>dotnet</category>
      <category>csharp</category>
      <category>hotchocolate</category>
    </item>
    <item>
      <title>Developer Bloggers/Technical Bloggers Wanted
</title>
      <author>Angela C</author>
      <pubDate>Mon, 22 Nov 2021 19:04:06 +0000</pubDate>
      <link>https://dev.to/hitsubscribe/developer-bloggerstechnical-bloggers-wanted-m7c</link>
      <guid>https://dev.to/hitsubscribe/developer-bloggerstechnical-bloggers-wanted-m7c</guid>
      <description>&lt;p&gt;Hit Subscribe is a company that hires engineers to write content for technical blogs. So what we're looking for is quite straightforward: engineers interested in a side hustle writing technical content for companies that sell to engineers. Or, put more simply, we want you to write content (mostly blog posts) about technical topics like DevOps, automated testing, machine learning, security, and more.&lt;br&gt;
If you like writing blog posts (or think you might, and have been meaning to start your own technical blog) let's talk.&lt;br&gt;
Apply here: &lt;a href="https://www.hitsubscribe.com/apply-to-be-an-author/"&gt;https://www.hitsubscribe.com/apply-to-be-an-author/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>security</category>
      <category>devops</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Learn how to use Git and GitHub in a team like a pro (part 2)</title>
      <author>Damian Demasi</author>
      <pubDate>Mon, 22 Nov 2021 19:03:17 +0000</pubDate>
      <link>https://dev.to/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-part-2-11j</link>
      <guid>https://dev.to/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-part-2-11j</guid>
      <description>&lt;p&gt;In the previous part of this tutorial, we learned how Harry and Hermione decided to build a SaaS app to allow people to build their own potions online and share them with the rest of the world. They named it &lt;strong&gt;Potionfy&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Hermione created a remote repository, then an &lt;code&gt;issue&lt;/code&gt; to address the task of building a landing page, and how Harry worked on that &lt;code&gt;issue&lt;/code&gt; locally and created a &lt;code&gt;pull request&lt;/code&gt; once he finished working on it.&lt;/p&gt;

&lt;p&gt;You can read the first part of the tutorial here:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/colocodes" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iYbdtIsq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2sZPQzQE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/420036/7f62b9dd-71f0-4e06-9466-1340b5d8a038.png" alt="colocodes"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-2dk7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn how to use Git and GitHub in a team like a pro&lt;/h2&gt;
      &lt;h3&gt;Damian Demasi „Éª Nov 17 „Éª 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Now, we are going to see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how Hermione reviews Harry's code,&lt;/li&gt;
&lt;li&gt;how the code is merged on the master branch,&lt;/li&gt;
&lt;li&gt;the decision of using a &lt;code&gt;develop&lt;/code&gt; branch,&lt;/li&gt;
&lt;li&gt;how the team works in the develop branch and merges changes into main,&lt;/li&gt;
&lt;li&gt;and how the team solves merge conflicts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/VwUquCGtIatGg/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/VwUquCGtIatGg/giphy.gif" width="500" height="202"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#code-review"&gt;
  &lt;/a&gt;
  Code review
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step-1-creating-a-review"&gt;
  &lt;/a&gt;
  Step 1: Creating a review
&lt;/h3&gt;

&lt;p&gt;Hermione has finished with her marketing and promotion tasks, and she now has time to review Harry's code. In order to do so, she opens the GitHub repository and clicks on the &lt;code&gt;Pull requests&lt;/code&gt; tab to find Harry's pull request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XAIqZGt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qytmh2qm30u2tfxfdc1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XAIqZGt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qytmh2qm30u2tfxfdc1p.png" alt="First pull request" width="852" height="649"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After clicking on it, she then clicks on the &lt;code&gt;Commits&lt;/code&gt; tab, and finally in Harry's last commit (this is just one way of accessing the files modified on the pull request).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s0lVRQrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zr6b36csbr9btula3rh9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s0lVRQrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zr6b36csbr9btula3rh9.png" alt="Reviewing code" width="852" height="777"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;She is not entirely convinced about the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; code, so she clicks on the plus icon that appears when she hovers that line of code, and writes a comment to Harry. Finally, she clicks on the &lt;code&gt;Start a review&lt;/code&gt; button. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5QgsM4_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ws8b6hfmuo9kqmun15q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5QgsM4_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ws8b6hfmuo9kqmun15q.png" alt="Comment on the code" width="852" height="1063"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As she has no other comments about the code, she now clicks on the &lt;code&gt;Review changes&lt;/code&gt; button to make the review visible to the rest of the team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C4Fgbgyq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hybyz2iwa71gsqbztvum.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C4Fgbgyq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hybyz2iwa71gsqbztvum.png" alt="Making a review" width="852" height="936"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find more information about making reviews in this &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/reviewing-proposed-changes-in-a-pull-request"&gt;Reviewing proposed changes in a pull request&lt;/a&gt; article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-addressing-the-review-and-creating-a-code-change"&gt;
  &lt;/a&gt;
  Step 2: addressing the review and creating a code change
&lt;/h3&gt;

&lt;p&gt;Harry checks his pull request and finds a new conversation there: Hermione's review.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CBv9p7Mj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pklnu1xdc1wmvf2mkl0f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CBv9p7Mj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pklnu1xdc1wmvf2mkl0f.png" alt="Working on the review" width="836" height="1128"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Harry answers Hermione's comment and clicks on the &lt;code&gt;Resolve conversation&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S89jVNku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofalfmz3ukitvnng7yha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S89jVNku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofalfmz3ukitvnng7yha.png" alt="Solving conversation" width="836" height="907"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that the conversation is resolved, Hermione can submit the review indicating that &lt;strong&gt;there are requested changes&lt;/strong&gt; so Harry can actually work on them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vcyj9zk5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reok6k1teor9ho43vltv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vcyj9zk5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reok6k1teor9ho43vltv.png" alt="Submitting review" width="849" height="1070"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this is just one version of the review process that can be achieved with GitHub and it can differ from the actual way your team chooses to handle them. &lt;/p&gt;

&lt;p&gt;Harry checks the pull request again and finds that it has &lt;code&gt;Changes requested&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CqRSeGjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rz496wfrvxdesf0ij75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CqRSeGjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rz496wfrvxdesf0ij75.png" alt="Changes requested" width="836" height="1172"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-implementing-the-changes"&gt;
  &lt;/a&gt;
  Step 3: implementing the changes
&lt;/h3&gt;

&lt;p&gt;As Harry likes to work locally, he continues working on the branch he had created in order to implement the code changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout 1-add-landing-message
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once he is sure he is working on the correct branch, he makes the changes in the &lt;code&gt;index.html&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Y98hve7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no7pmw3pck2cpgi3nl5n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Y98hve7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no7pmw3pck2cpgi3nl5n.png" alt="Implementing changes" width="880" height="614"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; for simplicity sake, we are not creating a separate CSS file here.&lt;/p&gt;

&lt;p&gt;Once Harry finishes tweaking the code, he stages the changes, commits them (making sure to include the &lt;code&gt;id&lt;/code&gt; of the issue because he is still working on it), and pushes them to GitHub.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Add colour and remove text. #1"&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4-merging-the-pull-request"&gt;
  &lt;/a&gt;
  Step 4: merging the pull request
&lt;/h3&gt;

&lt;p&gt;Now it's Hermione's turn. She goes to the pull request and finds a new commit: the one Harry did and pushed to GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oWorUbRK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4n6yso4pn6rfkdj0xioj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oWorUbRK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4n6yso4pn6rfkdj0xioj.png" alt="New commit" width="835" height="1168"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;She then clicks on the &lt;code&gt;Files changed&lt;/code&gt; tab and finds the ones that she suggested implemented on the &lt;code&gt;index.html&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XJWL_3z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tmudklpfre4op0afjem3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XJWL_3z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tmudklpfre4op0afjem3.png" alt="Changes in the file" width="850" height="648"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As she is satisfied with the changes, she proceeds to approve them by clicking on the &lt;code&gt;Review changes&lt;/code&gt; button and selecting the &lt;code&gt;Approve&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bMG2MgJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7soa00zfq791oa50b9j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bMG2MgJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7soa00zfq791oa50b9j.png" alt="Approving changes" width="850" height="863"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Harry sees that his pull request was approved by Hermione, and he proceeds to merge it into the main branch of the project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6yT9DJpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hdjyzbh1vxpyhf9joy0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6yT9DJpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hdjyzbh1vxpyhf9joy0.png" alt="Merging pull request" width="839" height="1335"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He decided not to delete the branch, as he wants to leave it there for future reference (although it would be a good idea to delete it).&lt;/p&gt;

&lt;p&gt;As Hermione is satisfied with how the issue was solved, she proceeds to close it by going to the &lt;code&gt;Issues&lt;/code&gt; tab and clicking on the &lt;code&gt;Close issue&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6dJp9OgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reqhbp9nrmvzxj46d9ms.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6dJp9OgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reqhbp9nrmvzxj46d9ms.png" alt="Closing issue" width="838" height="1245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to see a graphical representation of the whole process up to this point, you can click on the &lt;code&gt;Insights&lt;/code&gt; tab and then on the &lt;code&gt;Network&lt;/code&gt; option. You will be able to actually see how the branching and merging were performed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KLihmshm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u87v2ie8y93dq8ielyuq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KLihmshm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u87v2ie8y93dq8ielyuq.png" alt="Graphical representation" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#using-a-raw-develop-endraw-branch"&gt;
  &lt;/a&gt;
  Using a &lt;code&gt;develop&lt;/code&gt; branch
&lt;/h2&gt;

&lt;p&gt;When working with real projects, merging changes into the main branch like you saw up to this point is not recommended.  Instead of working directly with the &lt;code&gt;main&lt;/code&gt; branch (often called &lt;code&gt;production&lt;/code&gt;), you will be working with a &lt;code&gt;develop&lt;/code&gt; branch. You will be branching issues out of that &lt;code&gt;develop&lt;/code&gt; branch and merging them back into the &lt;code&gt;develop&lt;/code&gt; branch. Once a group of issues have been solved, that &lt;code&gt;develop&lt;/code&gt; branch will be merged into the &lt;code&gt;main&lt;/code&gt; (or &lt;code&gt;production&lt;/code&gt;) branch, usually denoting a version change in the app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Daeyxvoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94wbcj99uvf39ax8f3ab.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Daeyxvoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94wbcj99uvf39ax8f3ab.png" alt="Develop branch" width="880" height="373"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hermione is aware of this, and now that the landing page is live and accessible to customers, she decided to preserve that &lt;em&gt;production environment&lt;/em&gt; and work on a development branch. In order to do so, she creates a &lt;code&gt;develop&lt;/code&gt; branch out of the &lt;code&gt;main&lt;/code&gt; one, so she and Harry can work on that branch without impacting the production environment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F04UEyFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7okjo7adstn9af3rymu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F04UEyFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7okjo7adstn9af3rymu.png" alt="Creating a develop branch" width="853" height="602"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#merge-conflicts"&gt;
  &lt;/a&gt;
  Merge conflicts
&lt;/h2&gt;

&lt;p&gt;Hermione wants to add a new feature to the landing page: a form to capture clients' emails. In order to do so, she creates a new issue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqWeJ6GO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4v5lyxbk8a18fjvet99o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqWeJ6GO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4v5lyxbk8a18fjvet99o.png" alt="New issue" width="853" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the issue is created, Harry decides to start working on it. To do so, &lt;strong&gt;he branches out from the &lt;code&gt;develop&lt;/code&gt; branch&lt;/strong&gt; (by selecting that branch on the GitHub interface) a new one called &lt;code&gt;3-email-form&lt;/code&gt; (including the issue number at the front to make it clear how this branch will relate to the issues).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gE85HLU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km1xvg06alcri2d3q2uk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gE85HLU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km1xvg06alcri2d3q2uk.png" alt="New issue branch from develop" width="851" height="723"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He then pulls that branch locally and starts working on it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git pull

&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout 3-form
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Harry decides to include a simple form into the &lt;code&gt;index.html&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"mailto:hermione@potionfy.com"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt; &lt;span class="na"&gt;enctype=&lt;/span&gt;&lt;span class="s"&gt;"text/plain"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Name:&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    E-mail:&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"mail"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Send"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"reset"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Reset"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This code is just to exemplify how Harry is working on a file and it's not how this type of form could actually be built.&lt;/p&gt;

&lt;p&gt;Harry stages and commits his changes locally using the &lt;code&gt;Contact form. #3&lt;/code&gt; message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Contact form. #3"&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/7Yif3ae99ksCc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/7Yif3ae99ksCc/giphy.gif" width="500" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before Harry could create a &lt;strong&gt;new pull request&lt;/strong&gt;, Hermione decides to build a placeholder for the form on the &lt;code&gt;index.html&lt;/code&gt; file on her own. In order to do so, &lt;strong&gt;she creates a new branch&lt;/strong&gt; out of &lt;code&gt;develop&lt;/code&gt; called &lt;code&gt;3-email-form-placeholder&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pHIMtMZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtqld9mij5mxoj56qx4r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pHIMtMZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtqld9mij5mxoj56qx4r.png" alt="Hermione's branch" width="851" height="723"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To work on the &lt;code&gt;index.html&lt;/code&gt; file, she uses the GitHub online code editor (basically, a VSCode for the web). In order to open it, she just presses the &lt;code&gt;.&lt;/code&gt; key on her keyboard and the GitHub page is transformed into a VSCode interface (like magic üòâ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1VstsfMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/agznz5qsohwq8w7xh4xx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VstsfMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/agznz5qsohwq8w7xh4xx.png" alt="VSCode online" width="851" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;She then proceeds to add the following code to the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"mailto:harry@potionfy.com"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt; &lt;span class="na"&gt;enctype=&lt;/span&gt;&lt;span class="s"&gt;"text/plain"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After saving the file, she commits the changes right there on her browser window by using VSCode graphical interface:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ATnR1wk6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26bow6vevor0j2bz3g1e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ATnR1wk6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26bow6vevor0j2bz3g1e.png" alt="Committing changes" width="853" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the commit is complete, she opens GitHub again and decides to create her own pull request and merge her changes to the &lt;code&gt;develop&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qRXXCTj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ucvh19hp86eh6vwth49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qRXXCTj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ucvh19hp86eh6vwth49.png" alt="Creating a pull request" width="851" height="893"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AGua39wx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5p2ldzkvch67ziutdw5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AGua39wx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5p2ldzkvch67ziutdw5.png" alt="Merging changes to develop" width="851" height="887"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/OUwzqE4ZOk5Bm/source.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/OUwzqE4ZOk5Bm/source.gif" width="250" height="121"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the other hand, Harry also decides to create a &lt;code&gt;pull request&lt;/code&gt; to merge his changes into the &lt;code&gt;develop&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hbv62val--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slmwjb3s1z263tnbhvye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hbv62val--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slmwjb3s1z263tnbhvye.png" alt="Harry's pull request" width="851" height="776"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point, GitHub lets him know that his pull request won't be able to merge automatically to the &lt;code&gt;develop&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TbebKopv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvyambidieetr4u3puhi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TbebKopv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvyambidieetr4u3puhi.png" alt="Image description" width="851" height="869"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Harry supposes that his branch is no longer reflecting the state of the &lt;code&gt;develop&lt;/code&gt; branch and that the &lt;code&gt;develop&lt;/code&gt; branch has changed because someone else merged changes affecting the &lt;code&gt;index.html&lt;/code&gt; file on which he was working on&lt;/strong&gt;. Nevertheless, he proceeds to create a pull request.&lt;/p&gt;

&lt;p&gt;What he sees next is GitHub's way of letting him know that there is a conflict affecting the file he modified. He proceeds to click on the &lt;code&gt;Resolve conflicts&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OLCRISfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtxo3qpizp3gfcfpeo14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OLCRISfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtxo3qpizp3gfcfpeo14.png" alt="A conflict" width="837" height="893"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He can now see that the &lt;code&gt;index.html&lt;/code&gt; indeed was modified, and the changes made to that file are affecting the lines he himself modified.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hJAkR_m7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdg7jgxt3zcrwbn6p66h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hJAkR_m7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdg7jgxt3zcrwbn6p66h.png" alt="Conflicting changes" width="837" height="839"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For more information about solving conflicts, you can read the &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/addressing-merge-conflicts/resolving-a-merge-conflict-on-github"&gt;Resolving a merge conflict on GitHub&lt;/a&gt; article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Harry proceeds to modify the file directly on the GitHub site to remove the conflicting changes and then clicks on the &lt;code&gt;Mark as resolved&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ivGerFni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ijk9wdc6aenfwbzrt8z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ivGerFni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ijk9wdc6aenfwbzrt8z.png" alt="Solving conflict" width="837" height="748"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the conflict is marked as resolved, he clicks on the &lt;code&gt;Commit merge&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BdmLcxGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cp87juwh255hou1kipgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BdmLcxGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cp87juwh255hou1kipgv.png" alt="Commit merge" width="837" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, his branch was conflict-free and he can merge his pull request (assuming Hermione reviewed his code and approved it, just as she did earlier).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4tcRFSgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m3lr63hu68nv0xdk15i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4tcRFSgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m3lr63hu68nv0xdk15i.png" alt="Merging pull request" width="837" height="974"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conflicts ofter arise when teammates are working on different branches that affect a common file. A great way to prevent merge conflicts is to do a &lt;code&gt;pull&lt;/code&gt; request on the &lt;code&gt;develop&lt;/code&gt; branch, merge that updated &lt;code&gt;develop&lt;/code&gt; branch into the branch you are working on, and then do a &lt;code&gt;push&lt;/code&gt; followed by a &lt;code&gt;pull request&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch
x-my-branch &lt;span class="c"&gt;# This is an example name&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout develop

&lt;span class="nv"&gt;$ &lt;/span&gt;git pull

&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout x-my-branch

&lt;span class="nv"&gt;$ &lt;/span&gt;git merge develop

&lt;span class="c"&gt;# You make some changes on the files of the x-my-branch branch&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;a message&amp;gt;"&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;After working on their landing page, Harry and Hermione managed to get lots of email addresses from potential customers and continued developing their MVP. They managed to get funding from a local venture capital firm, and they are now in the process of hiring other developers to launch Potionfy to the public. I'm sure they would love to take a look at your resume to consider you for a position in their company, so good luck!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/gbErpwcLlizvi/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/gbErpwcLlizvi/giphy.gif" width="245" height="126"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;üóûÔ∏è &lt;strong&gt;NEWSLETTER -&lt;/strong&gt; &lt;em&gt;If you want to hear about my latest articles and interesting software development content, &lt;a href="https://chipper-designer-8106.ck.page/1a819bffe8"&gt;subscribe to my newsletter&lt;/a&gt;. &lt;strong&gt;I will be giving away a Udemy course among my newsletter subscribers&lt;/strong&gt; if we go over 100 during the month of November 2021!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;üê¶ &lt;strong&gt;TWITTER -&lt;/strong&gt; &lt;em&gt;Follow me on &lt;a href="https://twitter.com/DamianDemasi"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Monster 1.25.0 released</title>
      <author>Volker Schukai</author>
      <pubDate>Mon, 22 Nov 2021 18:59:19 +0000</pubDate>
      <link>https://dev.to/schukai/monster-1250-released-ic1</link>
      <guid>https://dev.to/schukai/monster-1250-released-ic1</guid>
      <description>&lt;p&gt;Today we released the latest edition of our Monster project. Monster is a collection of javascript classes that we need for daily work in &lt;a href="https://www.schukai.com/en/"&gt;our&lt;/a&gt; web projects.&lt;/p&gt;

&lt;p&gt;Besides small helper functions and classes it also provides useful functions to enable reactive programming.&lt;/p&gt;

&lt;p&gt;Monster is available via jsdelivr and npm.&lt;/p&gt;

&lt;p&gt;Only the changes are described here. The full functionality can be found in the &lt;a href="https://monsterjs.org/en/doc/1.24.0/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resource"&gt;
  &lt;/a&gt;
  Resource
&lt;/h2&gt;

&lt;p&gt;We have added a new class to handle resources. Resources are external content such as scripts, data, or stylesheets.&lt;/p&gt;

&lt;p&gt;These classes are usually used by the &lt;code&gt;ResourceManager&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The class takes care of creating the tags and monitors the load event.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resourcemanager"&gt;
  &lt;/a&gt;
  ResourceManager
&lt;/h2&gt;

&lt;p&gt;With the new class &lt;code&gt;RessourceManager&lt;/code&gt; scripts, styles and data can be included in an HTML page simply by specifying the URL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// new Object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;manager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ResourceManager&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// add resources&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addScript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/example.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/example.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStylesheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/example.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// insert the tags into the dom&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// wait for all resources to be loaded&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;available&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// do something&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#worker"&gt;
  &lt;/a&gt;
  Worker
&lt;/h2&gt;

&lt;p&gt;The class &lt;code&gt;Worker.Factory&lt;/code&gt; provides two small helper functions to start workers by script and URL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Factory&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
console.log('Hello Monster!');
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;worker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createFromScript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// terminate worker&lt;/span&gt;
&lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;terminate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;worker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#focusmanager"&gt;
  &lt;/a&gt;
  FocusManager
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;FocusManager&lt;/code&gt; bundles helpful functions for working with the focus. Besides an alias for the active element, there is a possibility to set the focus to the next or previous element and to save and reset the elements with the focus.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// new Object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;manager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ResourceManager&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Which element has the focus right now&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getActive&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// remember the current focus&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;storeFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// focus on the next element &lt;/span&gt;
&lt;span class="c1"&gt;// or if already at the end the first element&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focusNext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// and back to the starting position&lt;/span&gt;
&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;restoreFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;FocusManager&lt;/code&gt; can also be given a query so that only selected elements are focused to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uuid"&gt;
  &lt;/a&gt;
  UUID
&lt;/h2&gt;

&lt;p&gt;We have added a new class to create a version 4 (random) uuid.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UUID&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ‚Ü¶ 7111f7ca-5add-4947-828b-c3d9ae43eaf2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;hope you enjoy it!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/@schukai/monster"&gt;npm&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jsdelivr.com/package/npm/@schukai/monster"&gt;jsdelivr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID"&gt;developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caniuse.com/mdn-api_crypto_randomuuid"&gt;caniuse.com/mdn-api_crypto_randomuuid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Universally_unique_identifier"&gt;en.wikipedia.org/wiki/Universally_unique_identifier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>dom</category>
      <category>node</category>
    </item>
  </channel>
</rss>
