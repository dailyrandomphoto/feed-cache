<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>java traditional method to remove duplicate String </title>
      <author>Mohammed Riyas</author>
      <pubDate>Sun, 16 Jan 2022 05:09:07 +0000</pubDate>
      <link>https://dev.to/riyas07/java-core-method-to-remove-duplicate-string-6o8</link>
      <guid>https://dev.to/riyas07/java-core-method-to-remove-duplicate-string-6o8</guid>
      <description>&lt;p&gt;I just saw a post in dev someone solved same problem using collections in java. so i thought let me try the same problem to solve in traditional way`&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;public class Main&lt;br&gt;
{&lt;br&gt;
public static void main(String[] args) {&lt;br&gt;
    String s="abbvcddgtttt";&lt;br&gt;
    char c[]=s.toCharArray();&lt;br&gt;
    char cc[]=new char[c.length];&lt;br&gt;
    int index=0;&lt;br&gt;
    char same=' ';&lt;br&gt;
    for(int i=0;i&amp;lt;c.length;i++)&lt;br&gt;
    {&lt;br&gt;
       for(int j=i+1;j&amp;lt;c.length;j++)&lt;br&gt;
       {&lt;br&gt;
           if(c[i]==c[j])&lt;br&gt;
           {&lt;br&gt;
              c[i]=' ';&lt;br&gt;
           }&lt;br&gt;
       }&lt;br&gt;
       if(c[i]!=' ')&lt;br&gt;
       {&lt;br&gt;
            cc[index]=c[i];&lt;br&gt;
          index++;&lt;br&gt;
       }&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;}
for(char i:cc)
{
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;System.out.println(i);&lt;br&gt;
    }&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>java</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Leaving electron.js to the past.</title>
      <author>Akash Pattanaik</author>
      <pubDate>Sun, 16 Jan 2022 03:32:05 +0000</pubDate>
      <link>https://dev.to/akashpattnaik/leaving-electronjs-to-the-past-3mkl</link>
      <guid>https://dev.to/akashpattnaik/leaving-electronjs-to-the-past-3mkl</guid>
      <description>&lt;p&gt;So, I recently started using &lt;a href="//tauri.studio"&gt;&lt;code&gt;tauri&lt;/code&gt;&lt;/a&gt; because electron.js was no longer working on my pc... I was amazed to see the release build size of the &lt;code&gt;tauri&lt;/code&gt; app.&lt;br&gt;
It was way smaller than expected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#size-comparison"&gt;
  &lt;/a&gt;
  Size Comparison
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Electron.JS&lt;/th&gt;
&lt;th&gt;Tauri&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;62.5&lt;/code&gt;mb&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;4.32&lt;/code&gt;mb&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;These are the sized of installers for windows. The project was just a basic &lt;code&gt;hello world&lt;/code&gt; displaying page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So as you can see, &lt;code&gt;Tauri&lt;/code&gt; is the next desktop framework for webdevs... &lt;code&gt;Electron.JS&lt;/code&gt; is nothing compared to &lt;code&gt;Tauri&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;Tauri&lt;/code&gt; by default provides various templates for new projects like &lt;code&gt;vanilla.js&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;svelte.js&lt;/code&gt;, &lt;code&gt;vue.js&lt;/code&gt; and a lot more in the future. The &lt;code&gt;tauri&lt;/code&gt; devs are also working on bringing &lt;code&gt;Tauri&lt;/code&gt; to &lt;code&gt;Android&lt;/code&gt; and &lt;code&gt;IOS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Tauri&lt;/code&gt; depends upon &lt;code&gt;Microsoft Edge Runtime2&lt;/code&gt; and not bulky core apps like &lt;code&gt;Electron.JS&lt;/code&gt; depends on &lt;code&gt;chromium&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-tauri"&gt;
  &lt;/a&gt;
  Getting started with Tauri
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This is for windows only, get your OS instructions on tauri.studio&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;Microsoft Visual Studio C++ Build Tools&lt;/code&gt; &lt;a href="https://visualstudio.microsoft.com/visual-cpp-build-tools/"&gt;From Here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://nodejs.org/en/"&gt;&lt;code&gt;Node.JS&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.rust-lang.org/"&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Finally, Install &lt;a href="https://developer.microsoft.com/en-us/microsoft-edge/webview2/#download-section"&gt;&lt;code&gt;WebView2&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This will make your ready for developing in tauri...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;For Further Understanding, Check Out The &lt;a href="https://tauri.studio/"&gt;Docs&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tauri</category>
      <category>electron</category>
    </item>
    <item>
      <title>Introducing Myself.....</title>
      <author>Muhammed Fuhad</author>
      <pubDate>Sun, 16 Jan 2022 02:52:38 +0000</pubDate>
      <link>https://dev.to/muhammedfuhad/introducing-myself-4hob</link>
      <guid>https://dev.to/muhammedfuhad/introducing-myself-4hob</guid>
      <description>&lt;p&gt;Hey I'm Muhammed Fuhad. Iam New To This Development Community. First of all Iam introducing myself.Iam 13 years old boy intrested in coding. Currently iam learning the basics of coding.this are the all things about me now introduce yourself developers...&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What is Agile?</title>
      <author>Vijay Patel</author>
      <pubDate>Sun, 16 Jan 2022 02:40:41 +0000</pubDate>
      <link>https://dev.to/easyawslearn/what-is-agile-2mn5</link>
      <guid>https://dev.to/easyawslearn/what-is-agile-2mn5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-agile"&gt;
  &lt;/a&gt;
  What is Agile?
&lt;/h2&gt;

&lt;p&gt;Agile is an approach to project management that centers around incremental and iterative steps to completing projects. The incremental parts of a project are carried out in short-term development cycles. The approach prioritizes quick delivery, adapting to change, and collaboration rather than top-down management and following a set plan.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is the Tutorial video which is based upon Agile👇👇&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=_N66VnJlZs0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6YW04qP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dagdom7jdt1gsgwwnwrt.png" alt="Image description" width="600" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Agile processes, there is constant feedback, allowing for team members to adjust to challenges as they arise, and stakeholders an opportunity to communicate consistently. Though originally created for software development, the Agile approach is now widely used in executing many different types of projects and in running organizations.&lt;/p&gt;

&lt;p&gt;Contrast this with more traditional forms of project management. Traditional project management generally progresses linearly. Moving from planning, designing, implementation and closing stages happen after the previous stage is complete.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-should-you-use-agile-project-management"&gt;
  &lt;/a&gt;
  When should you use Agile project management?
&lt;/h2&gt;

&lt;p&gt;The tenets of Agile—adaptability, iteration, continuous delivery, and short time frames, among others—make it a project management style that’s better suited for ongoing projects and projects where certain details aren’t known from the outset. That means if a project doesn’t have clear constraints, timelines, or available resources, it’s a good candidate for an Agile approach.&lt;/p&gt;

&lt;p&gt;For example, designing and launching a new product might push a team against several unforeseen challenges. Having an Agile approach can mean the project already has the methodology in place to test products as often as needed, iterate quickly, and communicate changes with stakeholders.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traditional project management&lt;/strong&gt; approaches like Waterfall can be easier to plan out and progress easier to measure. This can make projects that have clearly demarcated constraints (like a strict budget or timeline), or projects where teams are expected to work independently of stakeholders better suited for traditional approaches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-both-agile-methods-and-waterfall-methods"&gt;
  &lt;/a&gt;
  Using both Agile methods and Waterfall methods
&lt;/h2&gt;

&lt;p&gt;Not all projects fit neatly into one category or the other. For the projects that might benefit from elements of both a traditional approach and iterative approach, an Agile-Waterfall hybrid approach can make sense. This could mean, for example, that planning and design are done in Waterfall, but development is carried out in short development cycles, Agile-style.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#agile-methodologies-and-frameworks"&gt;
  &lt;/a&gt;
  Agile methodologies and frameworks
&lt;/h2&gt;

&lt;p&gt;There are several Agile methodologies and frameworks, each with its own pros and cons. Some are hybrids of multiple methodologies. Scrum is by far the most commonly used Agile methodology; Digital.ai found that 58 percent of Agile adopters used Scrum, with the next most-used methodology being ScrumBan, at 10 percent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#popular-agile-methodologies-include"&gt;
  &lt;/a&gt;
  Popular Agile methodologies include:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Scrum&lt;/li&gt;
&lt;li&gt;Kanban&lt;/li&gt;
&lt;li&gt;Lean&lt;/li&gt;
&lt;li&gt;Crystal&lt;/li&gt;
&lt;li&gt;Extreme Programming (XP)&lt;/li&gt;
&lt;li&gt;Feature-Driven Development (FDD)&lt;/li&gt;
&lt;li&gt;Domain-Driven Design (DDD)&lt;/li&gt;
&lt;li&gt;Dynamic Systems Development Method (DSDM)&lt;/li&gt;
&lt;li&gt;ScrumBan&lt;/li&gt;
&lt;li&gt;Agile-Waterfall/Hybrid Agile&lt;/li&gt;
&lt;li&gt;Scrum XP Hybrid&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ► &lt;a href="https://bit.ly/30GFv1q"&gt;https://bit.ly/30GFv1q&lt;/a&gt;&lt;br&gt;
GCP Tutorial ► &lt;a href="https://bit.ly/3mwh412"&gt;https://bit.ly/3mwh412&lt;/a&gt;&lt;br&gt;
Jenkins Tutorials ► &lt;a href="https://bit.ly/3iHnfv4"&gt;https://bit.ly/3iHnfv4&lt;/a&gt;&lt;br&gt;
Jenkins Pipeline ► &lt;a href="https://bit.ly/30CJGLB"&gt;https://bit.ly/30CJGLB&lt;/a&gt;&lt;br&gt;
Python ► &lt;a href="https://bit.ly/3I7bewU"&gt;https://bit.ly/3I7bewU&lt;/a&gt;&lt;br&gt;
Python in just 1 video ► &lt;a href="https://bit.ly/3EeqGVy"&gt;https://bit.ly/3EeqGVy&lt;/a&gt;&lt;/p&gt;

</description>
      <category>agile</category>
      <category>scrum</category>
      <category>agilemethodology</category>
      <category>softwaredevlopement</category>
    </item>
    <item>
      <title>Using rxjs Operators to Call an API on User Input and Create a Unique Username Field</title>
      <author>Michael</author>
      <pubDate>Sun, 16 Jan 2022 02:31:39 +0000</pubDate>
      <link>https://dev.to/mikewestdev/using-rxjs-operators-to-call-an-api-on-user-input-and-create-a-unique-username-field-20bl</link>
      <guid>https://dev.to/mikewestdev/using-rxjs-operators-to-call-an-api-on-user-input-and-create-a-unique-username-field-20bl</guid>
      <description>&lt;p&gt;In this post I will demonstrate a general strategy for performing a search or other api call while a user is typing, by making an input field for a unique username.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bKxWpU0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4ctu90r2n0gh606kwlm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bKxWpU0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4ctu90r2n0gh606kwlm.png" alt="Image description" width="535" height="98"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yRqkTJ8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yv09m8xv9dcf1dvsydi8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yRqkTJ8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yv09m8xv9dcf1dvsydi8.png" alt="Image description" width="541" height="78"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I like this strategy because it is straight-forward, adaptable to any framework, and extendable to other use-cases where you might need to show immediate feedback to a user based on an action.&lt;/p&gt;

&lt;p&gt;First, create a BehaviorSubject of type string to record the user's actions and use the &lt;code&gt;asObservable()&lt;/code&gt; method on it to create a variable that will update with each key-press.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// Search&lt;/span&gt;
  &lt;span class="nx"&gt;inputActionSubject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BehaviorSubject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;inputAction$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputActionSubject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;asObservable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;     

  &lt;span class="nx"&gt;onUserInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;HTMLInputElement&lt;/span&gt;&lt;span class="p"&gt;)?.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputActionSubject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;   &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;   
     &lt;span class="na"&gt;matInput&lt;/span&gt;
     &lt;span class="na"&gt;[formControl]=&lt;/span&gt;&lt;span class="s"&gt;"inputControl"&lt;/span&gt;
     &lt;span class="na"&gt;(input)=&lt;/span&gt;&lt;span class="s"&gt;"onUserInput($event)"&lt;/span&gt;
     &lt;span class="na"&gt;#input&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;br&gt;
Apply the following rxjs operators to call the API each time the variable updates.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;debounceTime()&lt;/code&gt; Wait this many milliseconds before proceeding to avoid sending requests while the user is still typing&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;switchMap()&lt;/code&gt; Call the API with the input as a parameter, and unsubscribe from the previous call, since we're sending a new one&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tap()&lt;/code&gt; Connect to the observable returned by the API call within the observable for the user-input&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight typescript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// On Initialization&lt;/span&gt;
 &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputAction$&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="nx"&gt;debounceTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
     &lt;span class="nx"&gt;switchMap&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUsersByUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
         &lt;span class="nx"&gt;tap&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkForDuplicateUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="p"&gt;})&lt;/span&gt;
       &lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt; &lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Process the results from the API call and provide feedback to the user. In our case: set an error on the &lt;code&gt;FormControl&lt;/code&gt; if the list of users with the given username is not empty.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;   &lt;span class="c1"&gt;// Using Angular Reactive Forms&lt;/span&gt;
   &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ViewChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ElementRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLInputElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nx"&gt;inputControl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FormControl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="nx"&gt;Validators&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="nx"&gt;Validators&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;minLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;]);&lt;/span&gt;

   &lt;span class="nx"&gt;checkForDuplicateUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;[]):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setErrors&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;notUnique&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Trigger update&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Full Angular Implementation&lt;br&gt;
&lt;iframe src="https://stackblitz.com/edit/angular-ivy-idvw5c?embed=1&amp;amp;view=preview&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
    </item>
    <item>
      <title>100 Days of Code</title>
      <author>Sadie</author>
      <pubDate>Sun, 16 Jan 2022 02:08:59 +0000</pubDate>
      <link>https://dev.to/sadiejay/100-days-of-code-4ag4</link>
      <guid>https://dev.to/sadiejay/100-days-of-code-4ag4</guid>
      <description>&lt;p&gt;Hey, happy new year everyone! I'm hoping that 2022 will bring many positive changes for myself and whatever you, reader, may need!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h3&gt;

&lt;p&gt;With that said. I have some goals I want get down (in no order) and made known:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Job search&lt;/li&gt;
&lt;li&gt;New job (part/full time, remote + benefits, pays $35k+/$70k+)&lt;/li&gt;
&lt;li&gt;Regular Open Source Contributions&lt;/li&gt;
&lt;li&gt;Get really comfy with JS&lt;/li&gt;
&lt;li&gt;Reach out to working devs in different roles, see what yall are up to and where I fit in!&lt;/li&gt;
&lt;li&gt;Document my journey&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-im-doing-this"&gt;
  &lt;/a&gt;
  How I'm doing this:
&lt;/h3&gt;

&lt;p&gt;I want to get some learning in before diving head first into the job search with my bootcamp. So I'm doing 100daysofcode! What's my project pool looking like? Well,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I'm in a 6-week bootcamp that's working on freeCodeCamp's JavaScript Algorithms and Data Structures Certification.&lt;/li&gt;
&lt;li&gt;I'm also like 75% done with the Responsive Web Design Certificate on fCC! I started in 2017 and I think I just want to finish it.&lt;/li&gt;
&lt;li&gt;From there, I would switch to working on frontend mentor challenges for my js skills. &lt;/li&gt;
&lt;li&gt;I'd also like to keep my github active as well. Open source contributions and frontend mentor challenges will def help with that.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-rules"&gt;
  &lt;/a&gt;
  The rules:
&lt;/h3&gt;

&lt;p&gt;Check out &lt;a href="https://www.100daysofcode.com/"&gt;100daysofcode's website!&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I've also followed the tag on here. &lt;strong&gt;My official start date is JAN 11! End date is APRIL 21!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;I'm planning a weekly-ish update (Tuesday/Thursdays) will prob be my best bet. &lt;del&gt;I'll burn myself out trying to post a daily update but I think I could keep a good log going and the post one big chunk. We'll see. But updates will be weekly, &lt;em&gt;at least.&lt;/em&gt;&lt;/del&gt; Scratch that, I'm forking the 100 days of Code repo right now, I can keep my github active by logging my journey daily and code! &lt;/p&gt;

&lt;p&gt;These articles will be a more weekly thing, unless I'm confused on something, or need more space to flesh out some thoughts.&lt;/p&gt;

&lt;p&gt;I think I want to comment on other's doing the 100 challenge as well. Just to encourage and interact with others doing the challenge! :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-you"&gt;
  &lt;/a&gt;
  What about you?
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out and say hey. I'd love to hear how it's going for you and meet others on their journey :)&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Great chat with Devon on his new podcast DEVCODER TV</title>
      <author>sheriffderek</author>
      <pubDate>Sun, 16 Jan 2022 00:55:07 +0000</pubDate>
      <link>https://dev.to/sheriffderek/great-chat-with-devon-on-his-new-podcast-devcoder-tv-31id</link>
      <guid>https://dev.to/sheriffderek/great-chat-with-devon-on-his-new-podcast-devcoder-tv-31id</guid>
      <description>&lt;p&gt;I've been following Devon's journey for a while while I lurk around Career Karma.&lt;/p&gt;

&lt;p&gt;When I heard he was starting a podcast, I reached out - and guess what! I got to be the first guest.&lt;/p&gt;

&lt;p&gt;It was really nice to finally meet the real human and not just the avatar - and I think we had a great talk / and that you'd like it.&lt;/p&gt;

&lt;p&gt;@sherifferek Talks with Devon Curtis on DEVCODER TV: &lt;a href="https://anchor.fm/dev-codertv/episodes/Episode-1-Derek-Wood---The-Mindset-of-Becoming-a-Developer-e1d0gnv"&gt;The Mindset of Becoming a Developer&lt;/a&gt; Listen here!&lt;/p&gt;

&lt;p&gt;: )&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Start Contributing to Open Source</title>
      <author>Kendra Wing</author>
      <pubDate>Sun, 16 Jan 2022 00:39:44 +0000</pubDate>
      <link>https://dev.to/kwing25/how-to-start-contributing-to-open-source-12e9</link>
      <guid>https://dev.to/kwing25/how-to-start-contributing-to-open-source-12e9</guid>
      <description>&lt;p&gt;This has been my first year as a developer and I've learned a lot by contributing to multiple open source projects. I've heard from other Dev's that they've had trouble finding open source projects and just generally knowing where to start in the open-source community so I decided to write about resources &amp;amp; tips that helped me. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-open-source"&gt;
  &lt;/a&gt;
  What is Open Source?
&lt;/h3&gt;

&lt;p&gt;Open Source is a term that refers to software bases or platforms with source code &lt;em&gt;(GitHub, Gitlab, Bitbucket, etc.)&lt;/em&gt; that is accessible and can be modified or enhanced by anyone. &lt;/p&gt;

&lt;p&gt;Open source projects are a great way to collaborate with other Developers and build a network. Contributing to open source projects can help you develop &amp;amp; learn and make an impact to important projects in Tech. &lt;em&gt;Some popular examples of open source include- Mozilla Firefox, Linux, WordPress, Bitcoin, and Android.&lt;/em&gt;  ☞ &lt;strong&gt;&lt;em&gt;Learn more at &lt;a href="https://opensource.com/resources/what-open-source"&gt;opensource.com&lt;/a&gt;, &lt;a href="https://www.digitalocean.com/community/tutorial_series/an-introduction-to-open-source"&gt;digitalocean.com&lt;/a&gt;, and &lt;a href="https://docs.github.com/en/get-started/exploring-projects-on-github/finding-ways-to-contribute-to-open-source-on-github"&gt;github.com&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-start"&gt;
  &lt;/a&gt;
  Where to Start?
&lt;/h3&gt;

&lt;p&gt;I first started learning and contributing to open source during a Hackathon event. I was able to start my own open source project and found other developers to help grow the project. It was a great opportunity to connect and collaborate on some code. &lt;/p&gt;

&lt;p&gt;It's important to have an understanding of your skills level and to know the basics of GitHub and git &lt;em&gt;(git clone, git pull, git push, git status, git status, etc.)&lt;/em&gt; &lt;em&gt;☛ &lt;a href="https://training.github.com/"&gt;git cheatsheet&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Find Open Source Projects:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;    &lt;strong&gt;&lt;a href="https://www.firsttimersonly.com/"&gt;firsttimersonly.com&lt;/a&gt;&lt;/strong&gt; has links to everything you need to get started on open source.&lt;/li&gt;
&lt;li&gt;    &lt;strong&gt;&lt;a href="https://goodfirstissues.com/"&gt;goodfirstisssues.com&lt;/a&gt;&lt;/strong&gt; &amp;amp; &lt;a href="https://goodfirstissue.dev/"&gt;goodfirstissue.dev&lt;/a&gt; are the sites where I found open source repos that needed help and let me filter by the programming language &lt;em&gt;(HTML, CSS, JavaScript, etc.).&lt;/em&gt; &lt;em&gt;Anyone regardless of skill level can use these sites&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;    &lt;strong&gt;&lt;a href="https://devpost.com/hackathons"&gt;Devpost&lt;/a&gt;&lt;/strong&gt; has a list of multiple hackathons that you can participate in. &lt;em&gt;You DON'T need to do a Hackathon to contribute to open source it is just a good resource for new dev's.&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bTr6Br1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/Good%2520First%2520Issues%2520Gif.gif%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bTr6Br1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/Good%2520First%2520Issues%2520Gif.gif%3Fraw%3Dtrue" alt="demo gif" width="640" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Once you've found a project your interested in...&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;    Go to the repo's README.md &lt;/li&gt;
&lt;li&gt;    Look at the &lt;strong&gt;Contributing&lt;/strong&gt; section to find out the project's requirements and instructions on how to contribute. &lt;strong&gt;&lt;em&gt;⚠️ Make sure to find a project that clearly states the instructions for contributors. This is especially important if you are new to open source.&lt;/em&gt;&lt;/strong&gt;
&lt;em&gt;*Be sure to read the Code of Conduct before getting started on any project you contribute to!&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2IiiP7EX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/repodemogif.gif%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2IiiP7EX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/repodemogif.gif%3Fraw%3Dtrue" alt="demo gif" width="640" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Look at the project's open issues:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;    Most open source projects will have open &lt;strong&gt;Issues&lt;/strong&gt; that describe errors, updates, enhancements, and other things that are needed for the project. 
It is good to look through all the open issues and see if you can contribute &amp;amp; complete that issue. If there are no open issues and you would like to make your own contribution be sure to look at the README.md &lt;em&gt;(mentioned in Step 2)&lt;/em&gt; for instructions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4jAmXgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/issuedemogif.gif%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4jAmXgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/issuedemogif.gif%3Fraw%3Dtrue" alt="demo gif" width="640" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Fork &amp;amp; Clone the project down to your machine and start coding!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_edx-w7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/forkclonepicdemo.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_edx-w7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/forkclonepicdemo.png%3Fraw%3Dtrue" alt="demo pic" width="880" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Make a Pull Request&lt;/strong&gt;&lt;br&gt;
An open source project pull request template should include the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;    PR Title/Subject&lt;/li&gt;
&lt;li&gt;    Description of code changes, enhancements, etc.&lt;/li&gt;
&lt;li&gt;    Reason for submitting PR &lt;em&gt;(fixes bugs, enhancement, etc.)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;    Tests or Checks performed on code&lt;/li&gt;
&lt;li&gt;    &lt;em&gt;Any other documentation...&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;🚨 The most important things for any Pull Request is to write a clear and concise message of the changes you made. &lt;strong&gt;Proofread and correct any types in your code before you make a PR!&lt;/strong&gt; * &lt;em&gt;Be sure to do a git pull so you have the up to date code.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9RYwUl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/prdemogif.gif%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9RYwUl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/kwing25/assets/blob/main/posts/opensourcepostgraphics/prdemogif.gif%3Fraw%3Dtrue" alt="demo gif" width="640" height="456"&gt;&lt;/a&gt;  &lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#i-hope-you-find-this-brief-guide-helpful-contributing-to-open-source-is-a-great-way-to-connect-contribute-learn-and-develop-some-awesome-code-i-highly-recommend-any-new-devs-to-find-an-open-source-project-and-show-off-some-of-your-skills-best-of-luck-to-you-in-your-coding-journey"&gt;
  &lt;/a&gt;
  I hope you find this brief guide helpful. Contributing to Open Source is a great way to connect, contribute, learn, and develop some awesome code! I highly recommend any new Dev's to find an Open Source project and show off some of your skills! Best of luck to you in your coding journey! 💻💪💫
&lt;/h4&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;👋 Connect with me on &lt;a href="//linkedin.com/in/kendrawing"&gt;LinkedIn&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__717920"&gt;
  
    .ltag__user__id__717920 .follow-action-button {
      background-color: #ff006e !important;
      color: #000000 !important;
      border-color: #ff006e !important;
    }
  
    &lt;a href="/kwing25" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XQS7W9Hb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--cmZjYmqY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/717920/c8200055-8b62-4ac6-a1e0-2d28cdd06549.jpeg" alt="kwing25 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/kwing25"&gt;Kendra Wing&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/kwing25"&gt;Jr Full Stack Web Developer &amp;amp; DevOps Enthusiast | React | REST API's | JavaScript | HTML/CSS | Sass | Node | MySQL. ❤️🎨 Creative UI &amp;amp; Collaboration🤝 Seeking work in Web Dev &amp;amp; DevOps 💼  👩🏻‍💻&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;em&gt;I plan on writing additional posts on how to Create a PR, Write a good README.md, Repo Basics (Maintainer, Labels, Issues, Deployment, Code of Conduct, License, etc.), and good Collaboration with other Dev's tips. Being a Junior Dev I hope to pass on some tips to other Dev's who are starting out. &lt;a href="//dev.to/kwing25"&gt;Stay tuned for more updates!&lt;/a&gt;&lt;/em&gt; 

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>We made a website to  easily share links between our devices.</title>
      <author>AnxinYang</author>
      <pubDate>Sat, 15 Jan 2022 23:31:25 +0000</pubDate>
      <link>https://dev.to/anxinyang/we-made-a-website-to-easily-share-links-between-our-devices-5h93</link>
      <guid>https://dev.to/anxinyang/we-made-a-website-to-easily-share-links-between-our-devices-5h93</guid>
      <description>&lt;p&gt;My partner and I made a website to make us easily share links between our devices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkshared.io/"&gt;https://www.linkshared.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backstory"&gt;
  &lt;/a&gt;
  Backstory
&lt;/h2&gt;

&lt;p&gt;Many times when we found something interesting and wanted to share a link from one's phone or laptop to her desktop so we can both watch it on the big screen, we had to send the link by email, or sent to her phone via some app and she had to copy the link from her phone to the PC, Or we have to download some apps, etc.. The process was really annoying.&lt;/p&gt;

&lt;p&gt;Therefore, we decided to make a website that can allow people share link by simply visit our webpage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works:
&lt;/h2&gt;

&lt;p&gt;This webpage will hold the shared link for 2 minutes, for now, and people can share the link via a share code so other people can access the shared text.&lt;/p&gt;

&lt;p&gt;Steps are very simple:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Share your text on the website.&lt;/li&gt;
&lt;li&gt;Use the share code to get your text on other devices. If the text contains a URL, website will detect it and extract the link for you.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-we-made-it-amp-costs"&gt;
  &lt;/a&gt;
  How we made it &amp;amp; Costs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We used NextJS to implement both the frontend and backend API.&lt;/li&gt;
&lt;li&gt;We opened a free Redislabs account so we can host our cache.&lt;/li&gt;
&lt;li&gt;We used the free hosting service provide by Vercel.&lt;/li&gt;
&lt;li&gt;We brought a domain name on Vercel for $70/yr.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-a-two-minutes-limit"&gt;
  &lt;/a&gt;
  Why a two minutes limit?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;We don't want to make a cloud storage.&lt;/li&gt;
&lt;li&gt;We don't want to pay for a cloud storage.&lt;/li&gt;
&lt;li&gt;In most use cases, this webpage just works like clipboard, so no long term storage is needed.&lt;/li&gt;
&lt;li&gt;We don't want to pay for a cloud storage.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you!
&lt;/h2&gt;

&lt;p&gt;Please feel free to leave your comment!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>utility</category>
      <category>productivity</category>
    </item>
    <item>
      <title>The State of Copy-Pasting in JavaScript</title>
      <author>Slava Knyazev</author>
      <pubDate>Sat, 15 Jan 2022 22:55:34 +0000</pubDate>
      <link>https://dev.to/knyzorg/the-state-of-copy-pasting-in-javascript-bnp</link>
      <guid>https://dev.to/knyzorg/the-state-of-copy-pasting-in-javascript-bnp</guid>
      <description>&lt;p&gt;I recently did some work on &lt;a href="https://github.com/telesoho/vscode-markdown-paste-image"&gt;a VS Code extension&lt;/a&gt; whose purpose is to handle rich pastes. It prompted me to survey different copy-pasting libraries and the state of the NPM ecosystem as a whole.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-clipboards-work"&gt;
  &lt;/a&gt;
  How do clipboards work?
&lt;/h2&gt;

&lt;p&gt;Clipboards across different operating systems work essentially the same. For this reason, we will stick to looking at a single one -- Windows.&lt;/p&gt;

&lt;p&gt;A common misconception about how clipboards work is that they contain a single piece of data, such as text or an image. In reality, clipboards hold all the ways target software can represent the data.&lt;/p&gt;

&lt;p&gt;Consider if I copy the following &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_headers"&gt;webpage&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBKpbGQC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bbss.dev/images/copy-pasting-javascript/headings.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBKpbGQC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bbss.dev/images/copy-pasting-javascript/headings.png" alt="Headings" width="248" height="275"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;HTML headings as rendered by Firefox&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When pasting it into Microsoft Word, it appears formatted as rich content:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VAIqBY51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bbss.dev/images/copy-pasting-javascript/rich-word.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VAIqBY51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bbss.dev/images/copy-pasting-javascript/rich-word.png" alt="Microsoft Word" width="349" height="391"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Microsoft Word displays rich content exactly as Firefox does&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When pasting it into Notepad++, it appears as plain text:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JLKO-g9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bbss.dev/images/copy-pasting-javascript/notepad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JLKO-g9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bbss.dev/images/copy-pasting-javascript/notepad.png" alt="Notepad++" width="287" height="167"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Notepad++ does not handle rich content&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Pasting different content types depending on the software is possible because Firefox provides multiple representations of the rendered content to the clipboard.&lt;/p&gt;

&lt;p&gt;Let's see what types the clipboard is holding using Powershell:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$dataObj&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System.Windows.Forms.Clipboard&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetDataObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fmt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$dataObj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetFormats&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fmt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;## Output: ##&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;HTML&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Format&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;System.String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;UnicodeText&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;Chromium&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Custom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;MIME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Format&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Locale&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;OEMText&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can look inside some of the clipboard types using Powershell, mainly &lt;code&gt;HTML Format&lt;/code&gt; and &lt;code&gt;Text&lt;/code&gt; with the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Get Text&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System.Windows.Forms.Clipboard&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetText&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;System.Windows.Forms.TextDataFormat&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;## Output: ##&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;3&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;4&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;5&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;6&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Get HTML Format&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System.Windows.Forms.Clipboard&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetText&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;System.Windows.Forms.TextDataFormat&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;## Output: ##&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Version:0.9&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;StartHTML:00000174&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;EndHTML:00000410&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;StartFragment:00000208&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;EndFragment:00000374&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;SourceURL:https://www.w3schools.com/tags/tryit.asp&lt;/span&gt;&lt;span class="nf"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;tryhtml_headers&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nt"&gt;--StartFragment&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;1&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;2&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;3&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h4&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;4&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/h4&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;5&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h6&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;6&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/h6&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nt"&gt;--EndFragment&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;/body&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;/html&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The way to approach clipboards as a consumer is to consume the clipboard formats you know how to, prioritizing some over others. For example, Microsoft Word will prioritize pasting &lt;code&gt;HTML Format&lt;/code&gt; formats over &lt;code&gt;Text&lt;/code&gt; formats by default.&lt;/p&gt;

&lt;p&gt;While Powershell has some built-in parsers, implementing the format specification for every type of content is a lot of work. Are there libraries that can help us with this?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#copypasting-in-the-npm-ecosystem"&gt;
  &lt;/a&gt;
  Copy-Pasting in the NPM Ecosystem
&lt;/h2&gt;

&lt;p&gt;The simplest clipboard library would let us query the clipboard directly for binary data. This approach would require us to a parser per format per operating system. While such libraries deserve a place in this world, they are not helpful for most applications. Most applications want to handle copying and pasting only for text, rich text, images, and sometimes files. Let's go through the different clipboard management libraries and see how they fare.&lt;/p&gt;

&lt;p&gt;We are looking for a library that has the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pure JS, with native bindings&lt;/li&gt;
&lt;li&gt;Cross-Platform Support

&lt;ul&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;MacOS&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Copy to clipboard

&lt;ul&gt;
&lt;li&gt;Plain Text&lt;/li&gt;
&lt;li&gt;Rich Text&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Paste from clipboard

&lt;ul&gt;
&lt;li&gt;Plain Text&lt;/li&gt;
&lt;li&gt;Rich Text&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a table I made from the collected NPM packages, featuring the most popular clipboard-related libraries on NPM:&lt;/p&gt;

&lt;p&gt;Note: This table does not include browser-based copy-paste.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tr&gt;
  &lt;th&gt;
  Features / Libraries
  &lt;/th&gt;
  &lt;th&gt;
    &lt;a rel="nofollow" href="https://www.npmjs.com/package/clipboardy"&gt;clipboardy&lt;/a&gt;
  &lt;/th&gt;
  &lt;th&gt;
    &lt;a rel="nofollow" href="https://www.npmjs.com/package/copy-paste"&gt;copy-paste&lt;/a&gt;
  &lt;/th&gt;
  &lt;th&gt;
    &lt;a rel="nofollow" href="https://www.npmjs.com/package/clipboard-cli"&gt;clipboard-cli&lt;/a&gt;
  &lt;/th&gt;
  &lt;th&gt;
    &lt;a href="https://www.npmjs.com/package/node-clipboard-wd"&gt;node-clipboard-wd&lt;/a&gt;
  &lt;/th&gt;
  &lt;th&gt;
    &lt;a rel="nofollow" href="https://www.electronjs.org/docs/latest/api/clipboard"&gt;Electron&lt;/a&gt; (Not a library)
  &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Pure JS
  &lt;/th&gt;
  &lt;td&gt;
  Uses system utilties
  &lt;/td&gt;
  &lt;td&gt;
  Uses system utilties
  &lt;/td&gt;
  &lt;td&gt;
  Uses system utilties
  &lt;/td&gt;
  &lt;td&gt;
  Chromium binary
  &lt;/td&gt;
  &lt;td&gt;
  Uses native bindings
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Cross-Platform Support
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Windows
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Linux
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  MacOS
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Copy to Clipboard
  &lt;/th&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Plain Text
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Rich Text
  &lt;/th&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Images
  &lt;/th&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Files
  &lt;/th&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  Exposes binary API
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Paste from Clipboard
  &lt;/th&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Plain Text
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Rich Text
  &lt;/th&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Images
  &lt;/th&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Files
  &lt;/th&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Exposes binary API
  &lt;/td&gt;
&lt;/tr&gt;

&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Honorable mention: &lt;a href="https://www.npmjs.com/package/save-clipboard-image"&gt;save-clipboard-image&lt;/a&gt;, uses AppleScript to save an image from clipboard to a file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Before writing this post, I was unaware that the result would be this. It appears that all of NPM's clipboard libraries work the same way: they call built-in executables on their host operating system and return the data. Interestingly, none of them handle images, rich text, or files despite no reason they couldn't deal with them the same way.&lt;/p&gt;

&lt;p&gt;The only exceptions to this pattern are Electron and &lt;a href="https://github.com/knyzorg/node-clipboard-wd"&gt;&lt;code&gt;node-clipboard-wd&lt;/code&gt;&lt;/a&gt;. The former is a framework unsuitable for usage as a library. The latter was written by myself last week as an experiment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-do-we-go-from-here"&gt;
  &lt;/a&gt;
  Where do we go from here?
&lt;/h2&gt;

&lt;p&gt;Software developers have crossed the clipboard bridge in other environments before. In fact, NodeJS developers have &lt;em&gt;already&lt;/em&gt; crossed it in Electron, which uses native bindings under the hood. There is no reason we couldn't do the same using a more lightweight C++ library.&lt;/p&gt;

&lt;p&gt;I find &lt;a href="https://github.com/dacap/clip"&gt;clip&lt;/a&gt; particularly promising in this regard, and I've been looking into writing a NodeJS wrapper around it. For posterity, here is a table of possible native libraries that I have found so far:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tr&gt;
  &lt;th&gt;
  Features / Libraries
  &lt;/th&gt;
  &lt;th&gt;
    &lt;a rel="nofollow" href="https://github.com/dacap/clip"&gt;clip&lt;/a&gt;
  &lt;/th&gt;
  &lt;th&gt;
    &lt;a rel="nofollow" href="https://crates.io/crates/arboard"&gt;arboard&lt;/a&gt;
  &lt;/th&gt;
  &lt;th&gt;
    &lt;a href="https://github.com/golang-design/clipboard" rel="nofollow"&gt;clipboard&lt;/a&gt;
  &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Cross-Platform Support
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Windows
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Linux
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  MacOS
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Copy to Clipboard
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Plain Text
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Rich Text
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Images
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Files
  &lt;/th&gt;
  &lt;td&gt;
  Exposes binary API
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Paste from Clipboard
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
  &lt;td&gt;
  Partial
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Plain Text
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;  
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Rich Text
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;  
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Images
  &lt;/th&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt; 
  &lt;td&gt;
  Yes
  &lt;/td&gt;
  &lt;td&gt;
  Yes
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;
  Files
  &lt;/th&gt;
  &lt;td&gt;
  Exposes binary API
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
  &lt;td&gt;
  No
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Getting Started with open-wc and Web Components</title>
      <author>Andrew Maier</author>
      <pubDate>Sat, 15 Jan 2022 22:49:16 +0000</pubDate>
      <link>https://dev.to/mayormaier/getting-started-with-open-wc-and-web-components-1e16</link>
      <guid>https://dev.to/mayormaier/getting-started-with-open-wc-and-web-components-1e16</guid>
      <description>&lt;p&gt;&lt;em&gt;One month ago, I hadn't written a single line of JavaScript.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I knew that JavaScript was important, but I seemed to be scared away by the massive ecosystem. As I looked deeper into the powerful things that you can do with JavaScript, I knew I had to get my feet wet. If you're looking to get started with open-wc and Web Components, you're going to need to understand the fundamentals of plain vanilla JavaScript. That might sound daunting, but &lt;strong&gt;getting started with Javascript is easier than you think.&lt;/strong&gt; Today I'll show you why.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-basics"&gt;
  &lt;/a&gt;
  JavaScript Basics
&lt;/h2&gt;

&lt;p&gt;Before starting my journey with JavaScript I had intermediate programming experience. Most of my academic career I have used Java, and I've written my personal projects in python. If you've never written &lt;em&gt;any&lt;/em&gt; code, thats ok. We all start somewhere. Most language fundamental tutorials are beginner friendly.&lt;/p&gt;

&lt;p&gt;From a JavaScript newbie, &lt;strong&gt;I recommend the &lt;a href="https://www.linkedin.com/learning-login/share?account=76811570&amp;amp;forceAccount=false&amp;amp;redirect=https%3A%2F%2Fwww.linkedin.com%2Flearning%2Fjavascript-essential-training%3Ftrk%3Dshare_ent_url%26shareId%3DtagQlFJZTBmp1uXvG335Dw%253D%253D"&gt;JavaScript Essential Training LinkedIn Learning Course&lt;/a&gt;.&lt;/strong&gt; This course helped me to get an understanding od the language as a whole while also understanding the JavaScript ecosystem. I'm about 30% of the way through it, and plan on banging out some more after I finish this article.&lt;/p&gt;

&lt;p&gt;One more thing- one of the biggest surprises for me is that &lt;strong&gt;JavaScript's native runtime is in the browser&lt;/strong&gt; (Like Google Chrome). It took some getting used to, as I was more familiar with working completely in the command line. It is intuitive though, as a majority of JavaScript use cases involve the web in some capacity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparing-the-javascript-environment"&gt;
  &lt;/a&gt;
  Preparing the JavaScript Environment
&lt;/h2&gt;

&lt;p&gt;Unlike many languages (like Python, Java, and Go), you don't need to download a language interpreter to your machine. In fact, you run JavaScript code every time you visit &lt;em&gt;most&lt;/em&gt; websites. So, if you have a modern web browser installed, then you're golden.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vs-code"&gt;
  &lt;/a&gt;
  VS Code
&lt;/h3&gt;

&lt;p&gt;I use Visual Studio Code to write my JavaScript Code. It is very lightweight bare bones out of the box, but it has a rich extension ecosystem that you can use to increase its functionality. &lt;/p&gt;

&lt;p&gt;Head over to &lt;a href="https://code.visualstudio.com/"&gt;code.visualstudio.com&lt;/a&gt; to install VS Code. Click on the big blue installation button to download the installer and follow the prompts when running it.&lt;/p&gt;

&lt;p&gt;One key extension that you will need when writing and testing vanilla JS is "Live Server". This allows users to start a local web server for their current VS Code project with just one click.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodejs"&gt;
  &lt;/a&gt;
  Node.js
&lt;/h3&gt;

&lt;p&gt;The next step is to download Node.JS. You want to get the current LTS (Long Term Support) version for increased stability. To install, head to &lt;a href="https://nodejs.org/"&gt;nodejs.org&lt;/a&gt; and click the nice big green "LTS" button. The site should recognize the OS that you are working with and give you the right installer.&lt;/p&gt;

&lt;p&gt;Node.JS enables you to run server-side JavaScript applications on your machine. Some people think that Node.JS is a JavaScript library or a framework or its own separate language, but &lt;strong&gt;Node.JS is none of those. Node.JS is a runtime for JavaScript.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After running the installer, check that Node.js was installed properly with &lt;code&gt;node -v&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JMbumitj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njdfut6p7hnara15c1is.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JMbumitj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njdfut6p7hnara15c1is.png" alt="node -v output" width="687" height="149"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  npm
&lt;/h3&gt;

&lt;p&gt;Node comes with a package manager for JavaScript called &lt;a href="https://npmjs.com/"&gt;npm&lt;/a&gt;. npm enables you to use other people's code in your projects without needing to go and write it yourself. Users can find npm packages on the npm registry, then use them in their code by using the Node require() function and defining them in their projects' &lt;code&gt;package.json&lt;/code&gt; file, creating a dependency. All of this can sound confusing at first, but for now, just know that you can piggyback off of other projects with npm.&lt;/p&gt;

&lt;p&gt;To verify that npm was installed correctly when you installed Node.js, you can run &lt;code&gt;npm -v&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6GGpVxgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vxheujhvs0mzp23ec19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6GGpVxgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vxheujhvs0mzp23ec19.png" alt="npm -v output" width="684" height="147"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yarn"&gt;
  &lt;/a&gt;
  Yarn
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://yarnpkg.com"&gt;Yarn&lt;/a&gt; is another package manager for JavaScript. It is very similar to npm as it enables users to reuse code from other developers by helping them register dependencies in their project. It registers dependencies to the &lt;code&gt;package.json&lt;/code&gt; just like npm.&lt;/p&gt;

&lt;p&gt;With newer versions of Node, yarn comes pre-installed and can be installed without much hassle. Simply run &lt;code&gt;corepack enable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After doing this, you can verify that yarn is installed properly with &lt;code&gt;yarn -v&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8SPw8VYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kvilukqczym3hsfmtwlo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8SPw8VYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kvilukqczym3hsfmtwlo.png" alt="varn -v output" width="711" height="158"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#initializing-an-openwc-starter-project"&gt;
  &lt;/a&gt;
  Initializing an open-wc starter project
&lt;/h2&gt;

&lt;p&gt;Now that the basic software is installed and running, a new open-wc component can be created. This process is also relatively simple. First, create a new directory where your project will live and navigate to it. Then, run &lt;code&gt;npm init @open-wc&lt;/code&gt; If the command runs successfully, that means that you've installed everything correctly and you are beginning to work on your first web component!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_xF-nFhG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aauwov28d7m9coqn8kz5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_xF-nFhG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aauwov28d7m9coqn8kz5.png" alt="Shows expected output of the initialization for open-wc" width="716" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the screen that you will see with instructions to set up the project.&lt;/p&gt;

&lt;p&gt;I've initialized my starter project with the following settings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;New project scaffold&lt;/li&gt;
&lt;li&gt;Web Component&lt;/li&gt;
&lt;li&gt;Linting, Testing, and Demoing enabled&lt;/li&gt;
&lt;li&gt;No TypeScript&lt;/li&gt;
&lt;li&gt;installed using yarn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once these settings are selected, a browser window should open and connect to the Node web server that is serving the project. If that does not happen automatically, or you want to start up the server at a later date, simply run &lt;code&gt;npm start&lt;/code&gt;. Boom! Now you can take a look at how web components work on the web.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analyzing-a-web-component"&gt;
  &lt;/a&gt;
  Analyzing a Web Component
&lt;/h2&gt;

&lt;p&gt;Web Components, even in their most simple form have numerous files that provide functionality. Each of these files has a unique purpose that enables web components to function as the easy to use, reusable HTML elements.&lt;/p&gt;

&lt;p&gt;First, lets look at the &lt;code&gt;index.html&lt;/code&gt; of this project, the file that the browser loads when this project is opened.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"demo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../hello-world.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// takes elements with id=demo and replaces with hello-world element&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="s2"&gt;`
        &amp;lt;hello-world .title=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;
          some light-dom
        &amp;lt;/hello-world&amp;gt;
      `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#demo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this file, there is a div with id=demo, that is then replaced by the &lt;code&gt;&amp;lt;hello-world&amp;gt;&lt;/code&gt; element when the script is loaded. The &lt;code&gt;&amp;lt;hello-world&amp;gt;&lt;/code&gt; element is hydrated with content referenced in &lt;code&gt;hello-world.js&lt;/code&gt;, which is imported to the script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// imports the HelloWorld class from the source files&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;HelloWorld&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/HelloWorld.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// defines the "&amp;lt;hello-world&amp;gt;" HTML tag from the HelloWorld class in the imported module&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello-world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HelloWorld&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;hello-world.js&lt;/code&gt; defines the &lt;code&gt;&amp;lt;hello-world&amp;gt;&lt;/code&gt; HTML tag with the HelloWorld Web Component.&lt;/p&gt;

&lt;p&gt;The meat of the element is found in &lt;code&gt;./src/HelloWorld.js&lt;/code&gt;. This component defines the functions and properties of the HelloWorld web component, represented as a class that extends the base HelloWorld class. For example, one of the functions called &lt;code&gt;__increment()&lt;/code&gt; increments the counter property of the HelloWorld object every time a button in the component is pressed.&lt;/p&gt;

&lt;p&gt;Many of the other files that come with the base "hello-world" web component serve important purposes also. I've annotated many of the files found in this project and &lt;a href="https://github.com/mayormaier/edtechjoker-lab1/"&gt;uploaded them to a GitHub repository that can be found here.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>webcomponents</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Linux üzerinde Intel 6. nesil işlemcilerdeki titreme sorunu</title>
      <author>Ali Orhun Akkirman</author>
      <pubDate>Sat, 15 Jan 2022 22:48:18 +0000</pubDate>
      <link>https://dev.to/aciklab/linux-uzerinde-intel-6-nesil-islemcilerdeki-titreme-sorunu-1fjf</link>
      <guid>https://dev.to/aciklab/linux-uzerinde-intel-6-nesil-islemcilerdeki-titreme-sorunu-1fjf</guid>
      <description>&lt;p&gt;Intel 6. nesil işlemcilerin (Skylake) entegre ekran kartlarında "Screen Flickering" adı verilen ekranda hafif bir titreme sorunu bulunmakta. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sorun-%C3%A7%C3%B6z%C3%BCm%C3%BC"&gt;
  &lt;/a&gt;
  Sorun çözümü
&lt;/h1&gt;

&lt;p&gt;Bu sorunu gidermenin en önemli yollarından birisi X11 üzerinde ekran kartı ayarlarının düzenlenmesi olarak görülmekte.&lt;/p&gt;

&lt;p&gt;Sisteminizde yetkili kullanıcı olarak &lt;strong&gt;/usr/share/X11/xorg.conf.d/20-intel.conf&lt;/strong&gt; dosyası oluşturup içeriğini aşağıdaki gibi yapabilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Section "Device"
    Identifier "Intel Graphics"
    Driver "intel"
    Option "AccelMethod" "sna"
    Option "TearFree" "true"
    Option "DRI" "3"
EndSection
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Daha sonrasında X11 servisini yeniden başlatmak veya daha doğrusu olarak sistemi yeniden başlatmak gerekecektir.&lt;/p&gt;

</description>
      <category>intel</category>
      <category>skylake</category>
      <category>flickering</category>
      <category>titreme</category>
    </item>
  </channel>
</rss>
