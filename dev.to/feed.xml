<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üé¨Amazing Hover Effect On Social Media Buttons | HTML &amp; CSS‚ú®</title>
      <author>Robson Muniz</author>
      <pubDate>Thu, 08 Jul 2021 21:44:58 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/amazing-hover-effect-on-social-media-buttons-html-css-5bd0</link>
      <guid>https://dev.to/robsonmuniz16/amazing-hover-effect-on-social-media-buttons-html-css-5bd0</guid>
      <description>&lt;p&gt;Hey DEVs in today's episode we‚Äôre going to create ‚ÄúAmazing Hover Effect On Social Media Buttons | HTML &amp;amp; CSS‚Äù. Let‚Äôs do it step-by-step, buy the end of this tutorial you will know how to make it on your own.&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/E8r3f4HhuPI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;‚è±Ô∏è Chapters: &lt;br&gt;
00:00 - Intro &lt;br&gt;
00:45 - Create boilerplate &lt;br&gt;
01:58 - Markup &lt;br&gt;
03:09 - CSS&lt;/p&gt;




&lt;p&gt;üß† Concepts covered in this project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS - pseudo-class &lt;/li&gt;
&lt;li&gt;CSS - Positions Absolute &amp;amp; Relative &lt;/li&gt;
&lt;li&gt;CSS - Hover Effects&lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Star rating system - only 168 BYTES üò≤, no JS, no CSS, no images üò®, Accessible (kind of)...the war is over</title>
      <author>InHuOfficial</author>
      <pubDate>Thu, 08 Jul 2021 21:32:45 +0000</pubDate>
      <link>https://dev.to/inhuofficial/star-rating-system-only-168-bytes-no-js-no-css-no-images-accessible-kind-of-the-war-is-over-2pda</link>
      <guid>https://dev.to/inhuofficial/star-rating-system-only-168-bytes-no-js-no-css-no-images-accessible-kind-of-the-war-is-over-2pda</guid>
      <description>&lt;p&gt;What started as an innocent post on &lt;a href="https://dev.to/inhuofficial/5-star-rating-system-actually-accessible-no-js-no-wai-aria-3idl"&gt;creating an accessible star rating system&lt;/a&gt; that was useful and pointed out the problems with most solutions has descended into madness. In this post I end the star (rating) wars!&lt;/p&gt;

&lt;p&gt;People have started creating star rating systems that &lt;a href="https://dev.to/madsstoumann/mood-selector-jhi"&gt;don't use stars&lt;/a&gt; or &lt;a href="https://dev.to/link2twenty/unicode-mood-selector-star-rating-system-8g"&gt;anything even resembling a star&lt;/a&gt;, people are making &lt;a href="https://dev.to/lapstjup/implementing-a-star-rating-component-in-vanilla-js-20ob"&gt;inaccessible rating systems&lt;/a&gt; (the very thing I was rallying against - and &lt;a class="mentioned-user" href="https://dev.to/lapstjup"&gt;@lapstjup&lt;/a&gt;
 is certainly not alone!), some are even making &lt;a href="https://dev.to/afif/scalable-star-rating-without-js-and-no-svg-or-image-for-the-star-2mef"&gt;star rating systems that don't work on 20%+ of browsers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Well you know what, lets end this right now as I have:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/hokMyu1PAKfJK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/hokMyu1PAKfJK/giphy.gif" alt="unlimited power meme - emperor Palpatine star wars"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here it is, a star rating system that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;uses something resembling a fucking star&lt;/strong&gt; (the number 1 prerequisite for a star rating system!)&lt;/li&gt;
&lt;li&gt;works all the way back to IE9 and beyond! ‚úÖ&lt;/li&gt;
&lt;li&gt;is tiny at 168 &lt;strong&gt;bytes&lt;/strong&gt; all in! (and that includes the label which could probably be shorter!) ‚úÖ&lt;/li&gt;
&lt;li&gt;has validation built in ‚úÖ&lt;/li&gt;
&lt;li&gt;is easy to use ‚úÖ&lt;/li&gt;
&lt;li&gt;requires no JS ‚úÖ&lt;/li&gt;
&lt;li&gt;requires no CSS ‚úÖ&lt;/li&gt;
&lt;li&gt;is accessible (kind of, the control type is confusing, although if this wasn't silly you could use the &lt;code&gt;pattern&lt;/code&gt; attribute to fix this! Also as I stated in my other posts you should use &lt;strong&gt;explicit&lt;/strong&gt; labels rather than implicit ones (&lt;code&gt;for="id"&lt;/code&gt; style labels)) ‚úÖ&lt;/li&gt;
&lt;li&gt;even includes submission to your server (if you set the action - might double the size of the control though!) ‚úÖ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#i-present-to-you-the-winner-of-the-star-rating-wars"&gt;
  &lt;/a&gt;
  I present to you the winner of the star (rating) wars
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/v9zsnbrt//embedded/result,html//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;So there you go, it is all over, go home you all lost.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#in-case-you-wanted-to-catch-up-properly"&gt;
  &lt;/a&gt;
  In case you wanted to catch up properly
&lt;/h2&gt;

&lt;p&gt;This saga has been insanely funny, here are all the posts I can remember as part of this so far (I am sooo sorry I started this! üòãüòâ):&lt;/p&gt;

&lt;p&gt;An actually useful post:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/5-star-rating-system-actually-accessible-no-js-no-wai-aria-3idl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 star rating system - ACTUALLY accessible, no JS, no WAI-ARIA and Semantic HTML! ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê [Easily converted to any framework too!]&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Jul 2 „Éª 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;lapstjup came up with an interesting JS powered version, just has a few accessibility issues but overall a great contribution!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/lapstjup" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mmOMY4PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CrJ-tBeD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366670/7c384675-c0ae-4190-85c5-6de6cc849d34.jpg" alt="lapstjup"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lapstjup/implementing-a-star-rating-component-in-vanilla-js-20ob" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Implementing a Star Rating component in Vanilla JS&lt;/h2&gt;
      &lt;h3&gt;Lakshya Thakur „Éª Jul 2 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#uiweekly&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/madsstoumann"&gt;@madsstoumann&lt;/a&gt;
 fired back and I have to say I absolutely love this idea and I am stealing it, if you read any read this one as it is accessible and works in everything other than IE!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/madsstoumann" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoLwOpQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S8Kp4bXC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/515396/61d796b8-f5ce-468b-8cb5-808b2bbb9279.jpeg" alt="madsstoumann"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/madsstoumann/star-rating-using-a-single-input-i0l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star-Rating Using A Single Input&lt;/h2&gt;
      &lt;h3&gt;Mads Stoumann „Éª Jul 3 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/afif"&gt;@afif&lt;/a&gt;
 showing off his CSS skills as always!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/scalable-star-rating-without-js-and-no-svg-or-image-for-the-star-2mef" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Scalable "star rating" without JS (and no SVG or image for the star)&lt;/h2&gt;
      &lt;h3&gt;Temani Afif „Éª Jul 4 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/link2twenty"&gt;@link2twenty&lt;/a&gt;
 just got this one out before my rebuttal piece (and is better than mine)&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/link2twenty" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZ83AbfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mkPwwGe8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/21408/a5b38912-48cb-4f18-b6b2-40da7956d41d.png" alt="link2twenty"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/link2twenty/star-rating-using-unicode-stars-3np2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star-rating using Unicode stars&lt;/h2&gt;
      &lt;h3&gt;Andrew Bone „Éª Jul 5 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#where-it-all-started-to-become-very-silly"&gt;
  &lt;/a&gt;
  Where it all started to become very silly!
&lt;/h3&gt;

&lt;p&gt;Me again includes my &lt;strong&gt;lightsabre&lt;/strong&gt; star rating system at the bottom - this is where it all started to go wrong!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/star-rating-wars-the-madsafif-menice-an-even-better-star-rating-system-and-a-comparison-3pg5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star[Rating] Wars - The MadsAfif Menice [An even better star rating system and a comparison]&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Jul 5 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/siddharthshyniben"&gt;@siddharthshyniben&lt;/a&gt;
 came up with a version for the terminal&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/siddharthshyniben" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sfh5RaoM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--72D9ZbiM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/606915/21f22584-400f-41ab-bdf5-50f6435905fa.jpeg" alt="siddharthshyniben"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/siddharthshyniben/star-rating-in-the-terminal-12np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star rating in the Terminal&lt;/h2&gt;
      &lt;h3&gt;Siddharth „Éª Jul 6 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;A great take on star rating systems that shows us what we will be able to do in the future with CSS once the browser vendors catch up! Very educational and a clever concept too!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/the-one-star-rating-system-the-future-of-rating-4jl8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The ONE star rating system ‚Äî the future of rating&lt;/h2&gt;
      &lt;h3&gt;Temani Afif „Éª Jul 6 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;A better terminal version, taking the concept of the previous post but with ASCII text!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/siddharthshyniben" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sfh5RaoM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--72D9ZbiM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/606915/21f22584-400f-41ab-bdf5-50f6435905fa.jpeg" alt="siddharthshyniben"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/siddharthshyniben/the-superflexible-star-rating-system-the-future-of-star-rating-in-the-terminal-33j5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The SUPERFLEXIBLE star rating system ‚Äì the future of star rating in the Terminal&lt;/h2&gt;
      &lt;h3&gt;Siddharth „Éª Jul 7 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Simple but effective, accessible too!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/link2twenty" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZ83AbfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mkPwwGe8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/21408/a5b38912-48cb-4f18-b6b2-40da7956d41d.png" alt="link2twenty"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/link2twenty/star-rating-with-simple-animations-the-saga-continues-5cgj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star-rating with simple animations (the saga continues)&lt;/h2&gt;
      &lt;h3&gt;Andrew Bone „Éª Jul 7 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This is where "star rating" started being stretched&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/madsstoumann" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoLwOpQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S8Kp4bXC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/515396/61d796b8-f5ce-468b-8cb5-808b2bbb9279.jpeg" alt="madsstoumann"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/madsstoumann/mood-selector-jhi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Mood Selector Component&lt;/h2&gt;
      &lt;h3&gt;Mads Stoumann „Éª Jul 7 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Yet again, not even using stars anymore!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/link2twenty" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZ83AbfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mkPwwGe8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/21408/a5b38912-48cb-4f18-b6b2-40da7956d41d.png" alt="link2twenty"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/link2twenty/unicode-mood-selector-star-rating-system-8g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Unicode mood selector (star-rating)&lt;/h2&gt;
      &lt;h3&gt;Andrew Bone „Éª Jul 8 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/lionelrowe"&gt;@lionelrowe&lt;/a&gt;
 decided to spice things up with a rating that introduces negative ratings like rotten tomatoes! But doesn't use stars once again!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/lionelrowe" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JZYgfQ5g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--s1jo56Ci--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/169338/1b23b783-9452-493b-adbb-6e4aff12ad7c.jpeg" alt="lionelrowe"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lionelrowe/rotten-tomatoes-star-rating-system-with-webcomponents-5a04" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Rotten Tomatoes üçÖ star rating system ‚≠ê with Web Components üéÜ&lt;/h2&gt;
      &lt;h3&gt;lionel-rowe „Éª Jul 7 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/adam_cyclones"&gt;@adam_cyclones&lt;/a&gt;
 decided to put a very silly one in from their phone! Sorry Adam I only give you one star for this!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/adam_cyclones" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D36laJh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S8HxA-zD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/94715/06057d1d-f6cb-4ac1-895c-4f2e5012ead5.jpg" alt="adam_cyclones"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/adam_cyclones/star-rating-with-nothing-but-text-ef4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star rating with nothing but text! &lt;/h2&gt;
      &lt;h3&gt;Adam Crockett „Éª Jul 6 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;All caught up now with this post being the latest!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-silly-billy"&gt;
  &lt;/a&gt;
  You silly billy
&lt;/h2&gt;

&lt;p&gt;Yes I know! Sorry for polluting the feed with this crap. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am hoping everyone just gives up now because you know what, star rating systems are actually pretty rubbish as they don't give an accurate picture!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>html</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Got Bots? 1: Intro to Bots &amp; Ethical Bot Creation</title>
      <author>Chloe Condon üéÄ</author>
      <pubDate>Thu, 08 Jul 2021 21:24:15 +0000</pubDate>
      <link>https://dev.to/chloecondon/got-bots-1-intro-to-bots-ethical-bot-creation-2m17</link>
      <guid>https://dev.to/chloecondon/got-bots-1-intro-to-bots-ethical-bot-creation-2m17</guid>
      <description>&lt;p&gt;Thanks to everyone who joined me live for our 1st episode of &lt;a href="//aka.ms/gotbots"&gt;Got Bots? with the Microsoft Reactor&lt;/a&gt;- it was so much fun to chat with y'all, share bot knowledge, and swap stories of the early days of AOL bots. ü§ñ&lt;/p&gt;

&lt;p&gt;If you missed the fun live, don't worry- you can watch the replay &lt;a href="https://youtu.be/egozxtthkV4"&gt;here&lt;/a&gt;, and in the embedded video below!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/egozxtthkV4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On this episode we cover:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=330"&gt;5:35&lt;/a&gt; How I got started with bots (the birth of &lt;a href="https://twitter.com/bot_shania"&gt;Shania Bot&lt;/a&gt; ü§†üé∂)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=569"&gt;9:26&lt;/a&gt; Special guest, and co-creator of the Diva Bots &lt;a href="https://twitter.com/MetzinAround"&gt;Pj Metz&lt;/a&gt; joins the show! We chat about &lt;a href="https://docs.microsoft.com/en-us/learn/modules/intro-to-logic-apps/?WT.mc_id=academic-33451-chcondon"&gt;Azure Logic Apps&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=875"&gt;14:35&lt;/a&gt; We touch briefly on &lt;a href="https://docs.microsoft.com/en-us/learn/modules/build-faq-chatbot-qna-maker-azure-bot-service/?WT.mc_id=academic-33451-chcondon"&gt;Azure QnA maker&lt;/a&gt;, as well as my &lt;a href="https://dev.to/azure/wine-not-build-a-bot-32fk"&gt;Wine Bot&lt;/a&gt; post on Dev.to üç∑&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=1035"&gt;17:15&lt;/a&gt; Pj and I chat about &lt;a href="https://twitter.com/bot_shania"&gt;Shania Bot&lt;/a&gt;, &lt;a href="https://twitter.com/BotianaGrande"&gt;BotianaGrande&lt;/a&gt;, &lt;a href="https://twitter.com/MechanicalCarey"&gt;Mechanical Carey&lt;/a&gt;, &lt;a href="https://twitter.com/JustBotPaid"&gt;JustBotPaid&lt;/a&gt;, &lt;a href="https://twitter.com/itsbritneybott"&gt;Britney Bot&lt;/a&gt;, and more of our favs! üé∂&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=1461"&gt;24:21&lt;/a&gt; We throw it back to the OG bot: &lt;a href="https://www.vice.com/en/article/jpgpey/a-history-of-smarterchild"&gt;SmarterChild&lt;/a&gt;!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=1740"&gt;29:00&lt;/a&gt; I mention my pal &lt;a href="https://twitter.com/benparr"&gt;Ben Parr&lt;/a&gt; and his company &lt;a href="https://www.octaneai.com/"&gt;Octane AI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=1780"&gt;29:40&lt;/a&gt; Virtual &lt;a href="https://www.instagram.com/p/CN5olSVplT4/"&gt;Tinkerbell&lt;/a&gt; meet &amp;amp; greet?! üßöüèºüò±&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=2160"&gt;36:00&lt;/a&gt; I mention The Bot Father himself, &lt;a class="mentioned-user" href="https://dev.to/jaydestro"&gt;@jaydestro&lt;/a&gt;
! &lt;a href="https://dev.to/azure/azurefunbytes-episode-47-azure-logic-apps-with-chloecondon-511"&gt;Check out our episode&lt;/a&gt; where we chat all about Azure Logic Apps and build THE Bot Father!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=2466"&gt;41:06&lt;/a&gt; A personal story about ethical bot creation (and shirt bots- ugh üòíüòíüòí)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Did you have fun? Join us live for &lt;a href="//aka.ms/gotbots2"&gt;Got Bots? 2: Making Bots with Logic Apps&lt;/a&gt; where I'll be taking your questions and spinning up some fun bots with Azure Logic Apps- see ya then, and happy botting!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Wault: The future of password managers</title>
      <author>G√°l P√©ter</author>
      <pubDate>Thu, 08 Jul 2021 21:05:03 +0000</pubDate>
      <link>https://dev.to/wault/wault-the-future-of-password-storage-e3j</link>
      <guid>https://dev.to/wault/wault-the-future-of-password-storage-e3j</guid>
      <description>&lt;p&gt;Password managers are becoming more common these days as we are using an increasing number of sites each day. I have used several password managers for about 4 years, but I've never found the one that fits me. Everyone had some major flaws like it felt outdated or it was too expensive. Then it hit me... why shouldn't I create the next Facebook of password storage?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-were-the-main-goals-of-the-project"&gt;
  &lt;/a&gt;
  What were the main goals of the project?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. The app must have a generous free tier.&lt;/strong&gt; I wanted a personal plan, where you can store your passwords safely across multiple devices without hassle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. The app must feel new and responsive.&lt;/strong&gt; When I used Lastpass and Bitwarden I felt like I was using a slightly outdated piece of software. I think the best and easiest way to achieve this is by &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Be open-source.&lt;/strong&gt; I think this one is obvious. If you make an application open source, then it means that there is nothing to hide.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-this-app-compete-what-can-it-give-to-users-that-other-managers-cant"&gt;
  &lt;/a&gt;
  How can this app compete? What can it give to users, that other managers can't?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. The password manager without passwords.&lt;/strong&gt; The most common security threat for an application is user exploitation. You can easily create a clone of the original website and start phishing for passwords. But when you have no you don't have a way to gain access to a user's account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Free for the people, paid for organizations.&lt;/strong&gt; I have been using WinRAR and I love the idea behind it. My take on this idea is to give the free plan the ability to create &lt;strong&gt;2 people&lt;/strong&gt; teams (I haven't seen any other password manager do this) and when you want to add more users, then you must pay for the excess number of people. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. The ability to store crypto wallets.&lt;/strong&gt; I must admit: the crypto hype train got me too, but when you consider it, then it will look like a good idea. You can store crypto wallets in the application, check your balance, send and receive money. It is easy to implement and also it is unique for this application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Rich customization for secure notes.&lt;/strong&gt; I have been using Google Keep through my entire high school years, so I got used to it. But when I want to write a note in my Bitwarden Vault, I cannot format my text, nor can I create a checklist, so it is not convenient enough for everyday use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Zero trackings.&lt;/strong&gt; A password manager must be a private space. You don't want to be tracked when you are managing confidential information. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-to-help"&gt;
  &lt;/a&gt;
  Want to help?
&lt;/h3&gt;

&lt;p&gt;The project is already in a very early stage of development (as the application is only good enough to log in on the web interface), but any contribution is welcome.&lt;/p&gt;

&lt;p&gt;Github organization: &lt;a href="https://github.com/wault-app"&gt;github.com/wault-app&lt;/a&gt;&lt;br&gt;
Discord: &lt;a href="https://discord.gg/NxhdAf4azz"&gt;discord.gg/NxhdAf4azz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>nextjs</category>
      <category>typescript</category>
      <category>security</category>
    </item>
    <item>
      <title>15 HTML5 Best practices  for beginners. </title>
      <author>menomanabdulla</author>
      <pubDate>Thu, 08 Jul 2021 20:42:49 +0000</pubDate>
      <link>https://dev.to/menomanabdulla/15-html5-best-practices-for-beginners-194n</link>
      <guid>https://dev.to/menomanabdulla/15-html5-best-practices-for-beginners-194n</guid>
      <description>&lt;p&gt;Whether you are a beginner or an expert in Hyper Text Markup Language (HTML) it is important to follow some best practices in order to keep your HTML documents consistent and organized. &lt;br&gt;
HTML5 has been around for many years now and has been stable and supported at least partially supported by most major browsers since 2014. Here I present list of best coding practices regarding HTML5 markup. Let‚Äôs get started: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#file-structure"&gt;
  &lt;/a&gt;
  File Structure
&lt;/h3&gt;

&lt;p&gt;Be concerned to the project file structure from day one. It‚Äôs extremely important for mid to large scale application for batter maintenance.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;
  &lt;a href="#declare-correct-doctype"&gt;
  &lt;/a&gt;
  Declare correct Doctype
&lt;/h3&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If correct Doctype  is not declared new HTML5-specific tags will not interpreted by the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MikUpwuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkknbrm0ri9ehirr6bg7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MikUpwuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkknbrm0ri9ehirr6bg7.png" alt="Declare correct Doctype"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Write w3c valid markup&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Use validator like w3c validator to check your markup and write error free more structured code. Validator  will suggest you some best practice of  HTML5 coding standard. I strongly recommend you to valid your code by w3c validator.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###HTML5 semantic elements&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Make sure correct use of the HTML5 semantic elements like: ,,,.  It‚Äôs will help you to write more structured piece of code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIvKTHNz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt2pzl01rto12ppy2zge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIvKTHNz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt2pzl01rto12ppy2zge.png" alt="HTML5 semantic elements"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Meaningful img alt attribute&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Always try to use ‚Äúalt‚Äù attribute with meaningful text in img tag. It‚Äôs also best practice for SEO purpose.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rohnbQws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj1dihftv0qbmpm1n28i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rohnbQws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj1dihftv0qbmpm1n28i.png" alt="Meaningful img alt attribute"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Kebab-case class naming&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Use ‚Äúkebab-case‚Äù while class naming. If you don‚Äôt use any structured naming convention like,  BEM convention.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FlYxwAWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjde7gjd4a28bnjep2w0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FlYxwAWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjde7gjd4a28bnjep2w0.png" alt="Kebab-case class naming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Relevant selector naming&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tried to use meaningful class naming relevant to your block of ‚Äìcode .&lt;br&gt;
Tricks: Tried to use ‚Äú.noun-adjective‚Äù format.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QC3XThI7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgowlujz2oe7w805fp3c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QC3XThI7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgowlujz2oe7w805fp3c.png" alt="Relevant selector naming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Type attribute with  and &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Don‚Äôt need to use ‚Äútype‚Äù attribute for external styleSheet and script linking in HTML5 structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z-11y1de--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kur7637iz98osq9c6phy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z-11y1de--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kur7637iz98osq9c6phy.png" alt="Type attribute with &amp;lt;link&amp;gt; and &amp;lt;script&amp;gt;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Atomic Class&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Use specific class or atomic class when needed, try to use short meaningful class name.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6NV3c7FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/824axbvkmd8celpvdy8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6NV3c7FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/824axbvkmd8celpvdy8u.png" alt="Atomic Class"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Variant class  in parent element&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tried to added class in parent element if need give another style to the same block or need same block different style.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eGKnKlci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ba8ncgllour69jl8e16h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eGKnKlci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ba8ncgllour69jl8e16h.png" alt="Variant class  in parent element"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Complex wrapping&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For better performance please tried to avoid unnecessary wrapping. It will create unnecessary node in your HTML tree and reduce performance too.&lt;/p&gt;

&lt;p&gt;Bad Practice&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VOZiChke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z27yk65402ey9xb983zs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VOZiChke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z27yk65402ey9xb983zs.png" alt="Complex wrapping"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Good Practice&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2TUsbFt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8gqrfun6ht7nxusf10b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2TUsbFt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8gqrfun6ht7nxusf10b.png" alt="Good Practice"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Closing tag&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is best practice to always concern with closing starting tag even if it is self-closing tag.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wRTmJ-hB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybo8ge44alvph0nm5d57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wRTmJ-hB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybo8ge44alvph0nm5d57.png" alt="Closing tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Injecting external styleSheet&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;External styleSheet always injects in  tag. Because The HTML5 specification stated a  element must have a ‚Äúrel‚Äù attribute and if the ‚Äúrel‚Äù attribute us used, the element is restricted to the head element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F-1v2zTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjn26vh6h03pemsc6wb2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F-1v2zTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjn26vh6h03pemsc6wb2.png" alt="Injecting external styleSheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;###Injecting external script&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;External script always injects at end of the &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Itsiest, Bitsiest Eleventy Tutorial</title>
      <author>Sia Karamalegos</author>
      <pubDate>Thu, 08 Jul 2021 20:10:54 +0000</pubDate>
      <link>https://dev.to/thegreengreek/itsiest-bitsiest-eleventy-tutorial-1llc</link>
      <guid>https://dev.to/thegreengreek/itsiest-bitsiest-eleventy-tutorial-1llc</guid>
      <description>&lt;p&gt;Want to get started with Eleventy but feel overwhelmed? Try out this pared-down tutorial.&lt;/p&gt;

&lt;p&gt;I like to talk and write about Eleventy a LOT. I always run into this problem of having to introduce Eleventy to people not familiar with it in a short way. So, I wrote up this miniature demo to give people a flavor of Eleventy without overwhelming them with all the details. If you like it as much as I do, maybe it will inspire you to learn more!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you prefer learning by video?&lt;/strong&gt; I included a walkthrough of this demo in my &lt;a href="https://sia.codes/posts/webmentions-eleventy-talk/#magnolia-js-(includes-short-eleventy-tutorial)"&gt;talk on Webmentions + Eleventy at Magnolia JS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The code for this repo can be found on &lt;a href="https://github.com/siakaramalegos/eleventy-demo"&gt;Github&lt;/a&gt;. This article is meant for people new to Eleventy and will show you how to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start up the most minimal Eleventy project with one page (the &lt;code&gt;main&lt;/code&gt; branch)&lt;/li&gt;
&lt;li&gt;Add a layout and styles (the &lt;code&gt;2-layout-styles&lt;/code&gt; branch)&lt;/li&gt;
&lt;li&gt;Add a blog and a list of all blog posts (the &lt;code&gt;3-blog&lt;/code&gt; branch)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To get started, clone the &lt;a href="https://github.com/siakaramalegos/eleventy-demo"&gt;repo&lt;/a&gt;, cd into it, and run &lt;code&gt;npm install&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#taking-a-step-back"&gt;
  &lt;/a&gt;
  Taking a step back
&lt;/h2&gt;

&lt;p&gt;The steps to get it to this point ("step 1") were:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make a new directory&lt;/li&gt;
&lt;li&gt;cd into it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm init -y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install Eleventy with &lt;code&gt;npm install @11ty/eleventy&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Edit the package.json to add a &lt;code&gt;start&lt;/code&gt; script of &lt;code&gt;npx @11ty/eleventy --serve&lt;/code&gt; and a build script of &lt;code&gt;npx @11ty/eleventy&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create index.md&lt;/li&gt;
&lt;li&gt;Run the start script. Eleventy processes index.md into the default output folder &lt;code&gt;/_site/&lt;/code&gt; with the filename &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#step-2-add-a-layout-and-styles"&gt;
  &lt;/a&gt;
  Step 2: Add a layout and styles
&lt;/h2&gt;

&lt;p&gt;Checkout branch &lt;code&gt;2-layout-styles&lt;/code&gt; to see this next step. In this step, I move our source code to a &lt;code&gt;/src/&lt;/code&gt; folder, add a layout file, and add a CSS styles file.&lt;/p&gt;

&lt;p&gt;To build it on your own:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First, we move our source code to &lt;code&gt;/src/&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create &lt;code&gt;/src/&lt;/code&gt; and move &lt;code&gt;index.md&lt;/code&gt; into it.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;.eleventy.js&lt;/code&gt; file in the root of the project with the following content:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eleventyConfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Set custom directories for input, output, includes, and data&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_includes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_site&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most of those are defaults - change their name in this file if you'd like to use a different name. You'll need to restart your dev server for any changes in this file to take effect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next, add a layout:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;/src/_includes/layout.njk&lt;/code&gt;. This is a &lt;a href="https://mozilla.github.io/nunjucks/"&gt;Nunjucks&lt;/a&gt; template, but you can use &lt;a href="https://www.11ty.dev/docs/"&gt;many others&lt;/a&gt;. The stuff in curly brackets are things that we will fill in at build time:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Grab title from the page data and dump it here --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ title }}&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Grab the content from the page data, dump it here, and mark it as safe --&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Safe docs: https://mozilla.github.io/nunjucks/templating.html#safe --&amp;gt;&lt;/span&gt;
    {{ content | safe }}
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add &lt;a href="https://www.11ty.dev/docs/data-frontmatter/"&gt;YAML frontmatter&lt;/a&gt; to the top of our &lt;code&gt;/src/index.md&lt;/code&gt; file to tell it which layout to use and to set the &lt;code&gt;title&lt;/code&gt; data attribute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;---
layout: layout.njk
title: "The Best Eleventy Demo TM"
---
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Finally, add some CSS:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create &lt;code&gt;/src/style.css&lt;/code&gt;. Add some CSS to that file.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;&amp;lt;link rel="stylesheet" href="/style.css"&amp;gt;&lt;/code&gt; to the head of &lt;code&gt;/src/_includes/layout.njk&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now we need to tell Eleventy to &lt;a href="https://www.11ty.dev/docs/copy/#manual-passthrough-file-copy-(faster)"&gt;"pass through"&lt;/a&gt; any CSS files. We do this in &lt;code&gt;.eleventy.js&lt;/code&gt;:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eleventyConfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Copy `src/style.css` to `_site/style.css`&lt;/span&gt;
  &lt;span class="nx"&gt;eleventyConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addPassthroughCopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/style.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// When a passthrough file is modified, rebuild the pages:&lt;/span&gt;
    &lt;span class="na"&gt;passthroughFileCopy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_includes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_data&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_site&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3-add-a-blog"&gt;
  &lt;/a&gt;
  Step 3: Add a blog
&lt;/h2&gt;

&lt;p&gt;Checkout branch &lt;code&gt;3-blog&lt;/code&gt; to see this next step. In this step, I create blog posts and an index of those posts.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;/src/blog/&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Add our first post in that folder &lt;code&gt;welcome-to-my-blog.md&lt;/code&gt;, remembering to set the layout and title:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;--------
layout: layout.njk
title: Welcome to my blog
--------

# Welcome

These are profound thoughts.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now access it at &lt;a href="http://localhost:8080/blog/welcome-to-my-blog/"&gt;http://localhost:8080/blog/welcome-to-my-blog/&lt;/a&gt;, but it would be nice to get some links on our home page for all our posts. For that, we should make a &lt;a href="https://www.11ty.dev/docs/collections/"&gt;collection&lt;/a&gt; for our blog posts. We will do this using tags.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: You can log data to your terminal using the &lt;code&gt;log&lt;/code&gt; filter which is included in Eleventy for free! For example, &lt;code&gt;{{ collections | log }}&lt;/code&gt; to see all your collections. Right now, we only have the &lt;code&gt;all&lt;/code&gt; collection which contains all our pages (home and first blog post).&lt;/p&gt;

&lt;p&gt;Add a &lt;code&gt;blog&lt;/code&gt; tag to our blog post's frontmatter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  ---
  layout: layout.njk
  title: Welcome to my blog
  tags: blog
  ---
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change our &lt;code&gt;/src/index.md&lt;/code&gt; file to use Nunjucks instead by changing &lt;code&gt;.md&lt;/code&gt; to &lt;code&gt;.njk&lt;/code&gt; and changing the current content to html:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  ---
  layout: layout.njk
  title: The Best Eleventy Demo TM
  ---

  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Yo Eleventy&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This site rocks.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Render a list of blogs on our index/home page (&lt;code&gt;/src/index.njk&lt;/code&gt;) usink a &lt;a href="https://mozilla.github.io/nunjucks/templating.html#for"&gt;Nunjucks for loop&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  {% for post in collections.blog %}
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"{{ post.url }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ post.data.title }}&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  {% endfor %}
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add another post and see it magically appear!&lt;/p&gt;

&lt;p&gt;Add a "nav" to your home page so people can get back to it from the blog page. In &lt;code&gt;/src/_includes/layout.njk&lt;/code&gt; inside the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is when I'd probably make another layout for a blog post so that the title is automatically rendered in its &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, but then this baby demo would be longer. :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#moving-forward"&gt;
  &lt;/a&gt;
  Moving Forward
&lt;/h2&gt;

&lt;p&gt;Once you've had a chance to play with collections and other forms of data in Eleventy, I recommend you check out my article &lt;a href="https://sia.codes/posts/architecting-data-in-eleventy/"&gt;Architecting data in Eleventy&lt;/a&gt; to learn more. It might be a bit much if this is your first time.&lt;/p&gt;

&lt;p&gt;What else can Eleventy do? So much! Here's a list of some of my favorite features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generating &lt;a href="https://www.11ty.dev/docs/pages-from-data/"&gt;pages based on a data&lt;/a&gt; set (JavaScript, JSON), like my individual &lt;a href="https://games.sia.codes/terraforming-mars/"&gt;game pages&lt;/a&gt; in my &lt;a href="https://games.sia.codes/"&gt;boardgame shelf site&lt;/a&gt;. &lt;a href="https://github.com/siakaramalegos/games"&gt;Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creating &lt;a href="https://www.11ty.dev/docs/layout-chaining/"&gt;layouts&lt;/a&gt; within layouts and template &lt;a href="https://mozilla.github.io/nunjucks/templating.html#include"&gt;partials&lt;/a&gt; (like creating components)&lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://www.11ty.dev/docs/filters/"&gt;filters&lt;/a&gt; and &lt;a href="https://www.11ty.dev/docs/shortcodes/"&gt;shortcodes&lt;/a&gt; to make reusable functions and code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article was originally published on &lt;a href="https://sia.codes/posts/itsiest-bitsiest-eleventy-tutorial/"&gt;sia.codes&lt;/a&gt;. Head over there if you like this post and want to read others like it, or sign up for my &lt;a href="https://buttondown.email/sia.codes"&gt;newsletter&lt;/a&gt; to be notified of new posts!&lt;/p&gt;

</description>
      <category>eleventy</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>O Desenvolvimento do Desenvolvedor no S√©culo 21</title>
      <author>StefanoDucciConvenia</author>
      <pubDate>Thu, 08 Jul 2021 20:09:11 +0000</pubDate>
      <link>https://dev.to/convenia/o-desenvolvimento-do-desenvolvedor-no-seculo-21-150j</link>
      <guid>https://dev.to/convenia/o-desenvolvimento-do-desenvolvedor-no-seculo-21-150j</guid>
      <description>&lt;p&gt;Ol√°, meu nome √© Stefano e sou L√≠der em treinamento do time de SRE aqui na Convenia. Venho aqui hoje contar para voc√™s como est√° sendo o desafio de treinar novos Desenvolvedores nesse mundo cada vez mais complexo e avan√ßado da programa√ß√£o e tamb√©m sobre um case de sucesso de uma Desenvolvedora que se mostrou excepcional nesses seis meses que faz parte do meu time.&lt;/p&gt;

&lt;p&gt;Antes de come√ßar a falar sobre como est√° sendo hoje, convido voc√™s a uma viagem no tempo comigo, n√£o muito longe, s√≥ tr√™s anos atr√°s quando entrei aqui na Convenia como um Desenvolvedor Backend J√∫nior, naquela √©poca a Empresa estava terminando de passar por uma migra√ß√£o de tecnologia, indo de um modelo MVC usando Codeigniter e indo para um Monolito em Laravel. Ou seja, para conseguir desenvolver eu s√≥ precisava saber PHP e MYSQL, e no m√°ximo, um pouco de HTML para ajustar alguma coisa no que se mostra ser sempre um pesadelo na vida de qualquer desenvolvedor novo em uma institui√ß√£o, o famigerado ‚ÄúSistema Legado‚Äù.&lt;/p&gt;

&lt;p&gt;Nesses √∫ltimos anos, a Convenia passou por diversas mudan√ßas e moderniza√ß√µes, agora, um Desenvolvedor Junior cai direto em um sistema distribu√≠do com micro servi√ßos, bancos n√£o relacionais, SPA‚Äôs, BFF, Graphql e mensageria. Com tudo isso, fica f√°cil de ver como a curva de aprendizado de algu√©m novo vem se tornando cada vez mais √≠ngreme ao longo do tempo.&lt;/p&gt;

&lt;p&gt;Esse cen√°rio atual nos leva √† seguinte quest√£o: o que podemos fazer para que essa curva de aprendizado seja suavizada o m√°ximo poss√≠vel para que todos consigam escalar at√© o topo? Para conseguir chegar a uma resposta para isso, trabalhei em uma metodologia de treinamento e acompanhamento junto a essa Desenvolvedora que iniciou no meu time, e para chegar nesse resultado, nada melhor do que trazer todos os exemplos que tive das minhas lideran√ßas ao longo desses anos.&lt;/p&gt;

&lt;p&gt;√â um fato de que ao longo do seu desenvolvimento existem marcos e divisores de √°gua que te mostram uma nova realidade na qual voc√™ se sente cada vez mais motivado a continuar evoluindo, comigo por exemplo, o primeiro contato que tive com esse sentimento foi quando eu j√° estava a quase tr√™s horas tentando corrigir um c√≥digo de produ√ß√£o, mas ele estava complexo demais, foi quando meu primeiro l√≠der aqui na Convenia chegou do meu lado e me perguntou: ‚ÄúVoc√™ sabe o que esse c√≥digo deveria fazer?‚Äù, eu respondi: ‚ÄúSim, deveria fazer isso, isso e isso‚Äù, o que fez ele simplesmente selecionar todo aquele c√≥digo, apagar e dizer: ‚ÄúEnt√£o escreve o que ele deveria fazer ao inv√©s de tentar entender o que ele fazia antes, j√° que estava errado‚Äù.&lt;br&gt;
Esse pode at√© parecer um caso sem import√¢ncia √† primeira vista, mas isso para um cara inseguro como eu era, come√ßando a programar e se imaginando incapaz de dar conta do que estava enfrentando, aquilo mudou meu mundo. Nos pr√≥ximos 20 minutos aquele c√≥digo j√° estava sendo usado pelo cliente impactado por aquele bug, foi quando percebi que ‚Äúde repente‚Äù eu realmente comecei a entender o que estava fazendo.&lt;/p&gt;

&lt;p&gt;O segundo ponto, e talvez o mais importante, anda muito pr√≥ximo a esse: a confian√ßa, essa palavra expande os horizontes de  qualquer desenvolvedor j√∫nior, ent√£o precisamos trabalhar tanto a confian√ßa que ele deve ter no seu pr√≥prio c√≥digo e no produto em que ele trabalha, bem como a confian√ßa que passamos pra ele como l√≠der. Se tem uma coisa que aprendi com isso, foi que codar √© muito f√°cil, mas s√≥ se voc√™ sabe o que √© esperado daquele c√≥digo, uma vez que voc√™ entende a regra de neg√≥cio, coda-la √© um mero detalhe, e esse ensinamento eu devo totalmente ao CTO da Convenia, o cara que discute e estressa a regra de neg√≥cio junto com voc√™, sempre ouvindo seus pontos para trazer o m√°ximo desse conforto t√£o importante na hora de desenvolver.&lt;/p&gt;

&lt;p&gt;Foram essas li√ß√µes que me ajudaram a pavimentar o caminho que essa Desenvolvedora iria trilhar ao meu lado, incluindo essa √∫ltima que aprendi com meu l√≠der atual, nenhum time deve seguir uma lideran√ßa, todos devem caminhar juntos para o objetivo em comum que pode ser uma entrega importante, a resolu√ß√£o de um problema grave ou at√© mesmo no aprendizado do dia a dia.&lt;/p&gt;

&lt;p&gt;Agora sem mais delongas, vamos ao passo a passo que desenvolvi, come√ßando pelo passo mais importante: ‚ÄòAcompanhamento di√°rio do aprendizado‚Äô, que consiste em diariamente tirar entre cinco e dez minutos para ouvir tudo o que o desenvolvedor aprendeu nas √∫ltimas vinte e quatro horas, estendendo para at√© vinte minutos no fim da semana para repassarem um resum√£o de quais foram os maiores desafios, aprendizados  e d√∫vidas que surgiram nesse per√≠odo. Isso vai te ajudar a entender a melhor forma de se comunicar com essa pessoa, a quantidade de detalhes que voc√™ dever√° dar na pr√≥xima vez que passar uma tarefa ou dar uma explica√ß√£o, al√©m de te aproximar muito do seu liderado e permitir que voc√™ me√ßa diariamente seu n√≠vel. Mas o mais importante nesse passo √© garantir a concretiza√ß√£o do conhecimento, garantindo que nenhuma d√∫vida ficou em aberto e nenhuma li√ß√£o passou em branco.&lt;/p&gt;

&lt;p&gt;O segundo passo: ‚ÄòUma hora de estudos por dia‚Äô, foi algo que roubei de um ex-funcion√°rio e l√≠der do time considerado de maior desempenho, o  BPO, que nem √© de desenvolvimento, mas acredito que bons exemplos podem muito bem ser buscados de fora de nossas bolhas tamb√©m. Nessa uma hora, o ideal √© que os estudos sejam focados nas tecnologias da empresa, aqui no nosso caso, disponibilizamos uma lista de cursos sobre protocolo AMQP, MongoDB, PHP e Laravel para que na hora de desenvolver, eles tenham um estranhamento menor ao trabalhar nessas tecnologias.&lt;/p&gt;

&lt;p&gt;Como aqui estamos falando do exemplo de um time que tamb√©m faz a sustenta√ß√£o do produto, o terceiro passo: ‚ÄòIntegrar √†s resolu√ß√µes de bugs‚Äô, e o quarto passo: ‚ÄòTratativa de bugs j√° resolvidos em ambiente local desatualizado‚Äô, se fizeram bem necess√°rios, e em suma, se resumem a trazer essa nova pessoa junto √† tratativa de um problema, mostrando sua forma de pensar, explicando o background que voc√™ tem sobre essa parte do sistema antes de come√ßar a investigar e explicar por onde voc√™ come√ßa e porque. J√° o quarto passo existe por que com a correria do dia a dia, as vezes voc√™ acaba resolvendo um problema em produ√ß√£o durante uma outra reuni√£o ou durante o tempo de estudo do seu liderado, e esses s√£o os casos perfeitos para voc√™ deixar ele explorar o problema dentro do seu ambiente local, sem se preocupar com a press√£o envolvida em querer resolver um problema o mais r√°pido poss√≠vel, j√° que sempre existe um ou mais clientes impactados em um problema, e nesse setor, trabalhar o psicol√≥gico √© t√£o importante quanto trabalhar a confian√ßa.&lt;/p&gt;

&lt;p&gt;O que nos leva diretamente ao passo cinco: ‚ÄòEntrega de pequenas features‚Äô, muitas vezes voc√™s ver√£o desenvolvedores com medo de come√ßar a codar, aquele receio de querer sempre fazer tudo da melhor forma desde o come√ßo, mesmo a gente sabendo que √© imposs√≠vel. Dar entregas pequenas para um junior ajuda a melhorar a sua confian√ßa, al√©m de ajud√°-lo a organizar melhor suas ideias, entender seu pr√≥prio processo criativo, limita√ß√µes e medos.&lt;/p&gt;

&lt;p&gt;O sexto e √∫ltimo passo: ‚ÄòPassar a autoria de um servi√ßo‚Äô -  trata do sentimento de dono que todo desenvolvedor tem pelo seu c√≥digo -  nesse caso, como a Convenia trabalha nesse modelo distribu√≠do, eu ajudei minha Desenvolvedora desde o come√ßo na cria√ß√£o de um servi√ßo que viria a ser  mantido, melhorado e cuidado por ela. Esse sentimento √© transformador, durante o  desenvolvimento desse servi√ßo ela veio mostrando sinais claros de amadurecimento, evolu√ß√£o e senioridade que n√£o √© comum em um profissional no come√ßo da sua carreira.&lt;/p&gt;

&lt;p&gt;Agora, uma constante entre esses passos √© o passo oculto: ‚ÄòIntroduzir o m√°ximo de regras de neg√≥cio poss√≠vel‚Äô. Como falei anteriormente, √†s vezes ensinar a regra de neg√≥cio √© mais importante do que ensinar a forma de se fazer uma tarefa, ent√£o sempre que poss√≠vel aproveite para ensinar, ensine durante uma call com um cliente, ensine durante a reuni√£o di√°ria com o time, ensine durante o code review, ensine durante um deploy, ensine durante a explica√ß√£o da tarefa, ensine durante a resolu√ß√£o de um problema e quando voc√™ perceber, ser√° voc√™ que estar√° aprendendo com seus liderados.&lt;/p&gt;

&lt;p&gt;N√£o existem f√≥rmulas m√°gicas quando falamos de pessoas, cada um ter√° seu pr√≥prio tempo de desenvolvimento, sua pr√≥pria maneira de absorver as coisas, uma hora no dia que consegue aprender melhor e aquela que j√° n√£o consegue tanto, vai de cada l√≠der saber enxergar isso em cada liderado e ter  tato para tratar cada um de acordo com suas peculiaridades. Essa foi a f√≥rmula que encontrei para ajudar essa Desenvolvedora em particular, mas √© com muito orgulho que digo que os resultados foram incr√≠veis, em apenas seis meses, uma desenvolvedora j√∫nior que chegou com tr√™s meses de experi√™ncia j√° √© considerada de n√≠vel pleno por profissionais com mais tempo de carreira no PHP do que ela tem de vida.&lt;/p&gt;

&lt;p&gt;Vou concluir esse artigo deixando a seguinte li√ß√£o: trabalhe a confian√ßa de seus liderados, d√™ a eles um motivo para melhorar todos os dias, os desafie e mostre como eles s√£o capazes de evoluir, ensine, nunca perca essa oportunidade e sempre mostre para eles como essas li√ß√µes fizeram diferen√ßa ao longo de um code review ou de um feedback. E nunca se esque√ßa do mais importante: eles s√£o pessoas como voc√™, ir√£o cometer erros, mas esses erros jamais dever√£o ser passivos de puni√ß√£o ou vergonha e sim ser a melhor oportunidade de evoluir, aprender e repetir tudo de novo, afinal, esse √© o ciclo de desenvolvimento de um desenvolvedor.&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>Technical Leadership: Beyond Problem Solving w/ Pat Kua</title>
      <author>Conor Bronsdon</author>
      <pubDate>Thu, 08 Jul 2021 19:26:50 +0000</pubDate>
      <link>https://dev.to/linearb/technical-leadership-beyond-problem-solving-w-pat-kua-2222</link>
      <guid>https://dev.to/linearb/technical-leadership-beyond-problem-solving-w-pat-kua-2222</guid>
      <description>&lt;p&gt;The skills you use as a software engineer and the skills you need as a technical team leader are not the same. &lt;/p&gt;

&lt;p&gt;This week on &lt;a href="https://devinterrupted.com/podcast/technical-leadership-beyond-problem-solving/"&gt;Dev Interrupted&lt;/a&gt; Pat Kua, a former CTO turned engineering-leadership-coach, speaker and author, walks us through techniques to overcome the unique challenges that engineers face when taking on a leadership role.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2mWD7WZ0DtLmYeWNCTpjfV"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to identify team multipliers&lt;/li&gt;
&lt;li&gt;How to know if you‚Äôre doing a good job&lt;/li&gt;
&lt;li&gt;The different skills you need to be a great technical leader&lt;/li&gt;
&lt;li&gt;Tactics for staying focused on your goals and saying no to meeting requests&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>management</category>
      <category>culture</category>
      <category>programming</category>
    </item>
    <item>
      <title>Practice what's new in Java</title>
      <author>Jean-Michel Fayard üá´üá∑üá©üá™üá¨üáßüá™üá∏üá®üá¥</author>
      <pubDate>Thu, 08 Jul 2021 19:18:04 +0000</pubDate>
      <link>https://dev.to/jmfayard/practice-what-s-new-in-java-1j09</link>
      <guid>https://dev.to/jmfayard/practice-what-s-new-in-java-1j09</guid>
      <description>&lt;p&gt;You have read about the new features that have arrived in Java world but didn't have the opportunity to learn them yet? I have a challenge for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new-in-java-world"&gt;
  &lt;/a&gt;
  What's new in Java world
&lt;/h2&gt;

&lt;p&gt;I won't describe what's new in Java world because this article is hard to surpass:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/awwsmm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oj_t1Q27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15KZDeA3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/101393/56bf0c89-b8ca-4157-9c3b-79031045a21f.png" alt="awwsmm"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/awwsmm/20-reasons-to-move-on-from-java-8-1dio" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;20 Reasons to Move On from Java 8&lt;/h2&gt;
      &lt;h3&gt;Andrew (he/him) „Éª Nov 23 '19 „Éª 31 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#java&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#news&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#how-to-practice-it"&gt;
  &lt;/a&gt;
  How to practice it?
&lt;/h2&gt;

&lt;p&gt;But reading about what's new is not enough.&lt;/p&gt;

&lt;p&gt;Alas, your project at work may be stuck with Java 11 or even Java 8.&lt;/p&gt;

&lt;p&gt;In a previous article, I shared the tip that if you want to learn more about a programming language - or here its evolution - you should write unit tests about them.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jmfayard" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjlhV-kq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--oLH1L0EP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/17066/64e291f5-65fd-452a-88d9-a2f0c071f807.jpg" alt="jmfayard"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jmfayard/unit-test-your-knowledge-13j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Unit test your learning  üí° &lt;/h2&gt;
      &lt;h3&gt;Jean-Michel Fayard üá´üá∑üá©üá™üá¨üáßüá™üá∏üá®üá¥ „Éª May 28 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This is exactly what I've started to do here:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jmfayard"&gt;
        jmfayard
      &lt;/a&gt; / &lt;a href="https://github.com/jmfayard/java16-playground"&gt;
        java16-playground
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Life is too short for Java 8
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
java16-playground&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Life is too short for Java 8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Playground project demonstrating the new features from Java 8 to Java 16&lt;/p&gt;
&lt;p&gt;See article: &lt;a href="https://dev.to/jmfayard/practice-what-s-new-in-java-1j09" rel="nofollow"&gt;Practice what's new in Java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Contributions welcome, &lt;a href="https://github.com/jmfayard/java16-playground/issues"&gt;see open issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Reference: &lt;a href="https://dev.to/awwsmm/20-reasons-to-move-on-from-java-8-1dio" rel="nofollow"&gt;https://dev.to/awwsmm/20-reasons-to-move-on-from-java-8-1dio&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jmfayard/java16-playground"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;If you look in the &lt;strong&gt;src/main/test&lt;/strong&gt; folder, you will find snippets like this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RecordJava14&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;Employee&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;department&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;createRecord&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;patrik&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Patrick"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Marketing"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;patrik&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;isEqualTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Employee[name=Patrick, age=36, department=Marketing]"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;patrik&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;isEqualTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Patrick"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Patrick"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Marketing"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;isEqualTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;patrik&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This gives you a view of the features of modern Java that are already covered:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mkMM-uRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/124977195-7e7b6480-e030-11eb-9920-cc7cbf9fcfab.png" class="article-body-image-wrapper"&gt;&lt;img alt="java16-playground_‚Äì_README_md__java16-playground_" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mkMM-uRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/124977195-7e7b6480-e030-11eb-9920-cc7cbf9fcfab.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-challenge"&gt;
  &lt;/a&gt;
  Your challenge
&lt;/h2&gt;

&lt;p&gt;If you want to learn more about modern Java, I challenge you to pick one of the remaining issues and implement it. &lt;/p&gt;

&lt;p&gt;‚Äã &lt;a href="https://github.com/jmfayard/java16-playground/issues"&gt;https://github.com/jmfayard/java16-playground/issues&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(of course, you can also create a new issue)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mlrRWmK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/124977238-8a672680-e030-11eb-9b46-1cf87c497170.png" class="article-body-image-wrapper"&gt;&lt;img alt="Issues_¬∑_jmfayard_java16-playground" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mlrRWmK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/124977238-8a672680-e030-11eb-9b46-1cf87c497170.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Accessing Multiple Databases From a Spring Boot Application</title>
      <author>Davey</author>
      <pubDate>Thu, 08 Jul 2021 19:13:38 +0000</pubDate>
      <link>https://dev.to/davey/accessing-multiple-databases-from-a-spring-boot-application-1293</link>
      <guid>https://dev.to/davey/accessing-multiple-databases-from-a-spring-boot-application-1293</guid>
      <description>&lt;p&gt;When developing any application, it‚Äôs quite common to have to access multiple databases. Out of the box, Spring Boot provides easy access to a single datasource, in the simplest case just by specifying the JDBC driver on the class path!&lt;/p&gt;

&lt;p&gt;Accessing multiple databases however, is still straightforward with Spring Boot. This article shows how to connect to two different MySql datasources from a Spring Boot application.&lt;/p&gt;

&lt;p&gt;To showcase how to connect to to different databases, consider a products database and a customer database, with the following simplistic schema and data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database-one-products-database"&gt;
  &lt;/a&gt;
  Database One - Products Database
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#schema"&gt;
  &lt;/a&gt;
  Schema
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;PRODUCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;PRODUCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;values&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;‚Äò&lt;/span&gt;&lt;span class="n"&gt;XBox&lt;/span&gt;&lt;span class="s1"&gt;');
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#database-two-customer-database"&gt;
  &lt;/a&gt;
  Database Two - Customer Database
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#schema"&gt;
  &lt;/a&gt;
  Schema
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;CUSTOMER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;CUSTOMER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;values&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Daphne Jefferson‚Äô);
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To access the databases, we need to declare a &lt;code&gt;JdbcTemplate&lt;/code&gt; for each database. In Spring, JdbcTemplates are created from a &lt;code&gt;DataSource&lt;/code&gt; which has a set of connection properties (url, username, password etc.)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DataSourceConfig&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

  &lt;span class="nc"&gt;Bean&lt;/span&gt;
  &lt;span class="nd"&gt;@Qualifier&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customerDataSource"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nd"&gt;@Primary&lt;/span&gt;
  &lt;span class="nd"&gt;@ConfigurationProperties&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"customer.datasource"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nc"&gt;DataSource&lt;/span&gt; &lt;span class="nf"&gt;customerDataSource&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;DataSourceBuilder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@Bean&lt;/span&gt;
  &lt;span class="nd"&gt;@Qualifier&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"productDataSource"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nd"&gt;@ConfigurationProperties&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"product.datasource"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nc"&gt;DataSource&lt;/span&gt; &lt;span class="nf"&gt;productDataSource&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;DataSourceBuilder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@Bean&lt;/span&gt;
  &lt;span class="nd"&gt;@Qualifier&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customerJdbcTemplate"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nc"&gt;JdbcTemplate&lt;/span&gt; &lt;span class="nf"&gt;customerJdbcTemplate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@Qualifier&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customerDataSource"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nc"&gt;DataSource&lt;/span&gt; &lt;span class="n"&gt;customerDataSource&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;JdbcTemplate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customerDataSource&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@Bean&lt;/span&gt;
  &lt;span class="nd"&gt;@Qualifier&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"productJdbcTemplate"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nc"&gt;JdbcTemplate&lt;/span&gt; &lt;span class="nf"&gt;productJdbcTemplate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@Qualifier&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"productDataSource"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nc"&gt;DataSource&lt;/span&gt; &lt;span class="n"&gt;productDataSource&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;JdbcTemplate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;productDataSource&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code we can see that a &lt;code&gt;@Configuration&lt;/code&gt; bean has been declared that defines a &lt;code&gt;customerDatasource&lt;/code&gt; and a &lt;code&gt;customerJdbcTemplate&lt;/code&gt;. Each of these beans are annotated with the &lt;code&gt;@Qualifier('customer...')&lt;/code&gt; to identify them as relating to the customer database.&lt;/p&gt;

&lt;p&gt;Similarly, the above code defines a &lt;code&gt;productDataSource&lt;/code&gt; and a &lt;code&gt;productJdbcTemplate&lt;/code&gt;. Again these are annotated with &lt;code&gt;@Qualifier('product...')&lt;/code&gt; to identify them as relating to the product database.&lt;/p&gt;

&lt;p&gt;Finally, each &lt;code&gt;DataSource&lt;/code&gt; Bean is annotated with the &lt;code&gt;@ConfigurationProperties(prefix="...datasource")&lt;/code&gt; annotation. This tells Spring Boot what properties within the &lt;code&gt;application.properties&lt;/code&gt; file should be used for connecting to each database. The &lt;code&gt;application.properties&lt;/code&gt; file therefore looks like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight properties"&gt;&lt;code&gt;&lt;span class="py"&gt;product.datasource.url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;jdbc:mysql://localhost:3306/dbOne&lt;/span&gt;
&lt;span class="py"&gt;product.datasource.username&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;user1&lt;/span&gt;
&lt;span class="py"&gt;product.datasource.password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;password&lt;/span&gt;
&lt;span class="py"&gt;product.datasource.driverClassName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;com.mysql.jdbc.Driver&lt;/span&gt;

&lt;span class="py"&gt;customer.datasource.url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;jdbc:mysql://localhost:3306/dbTwo&lt;/span&gt;
&lt;span class="py"&gt;customer.datasource.username&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;user2&lt;/span&gt;
&lt;span class="py"&gt;customer.datasource.password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;password&lt;/span&gt;
&lt;span class="py"&gt;customer.datasource.driverClassName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;com.mysql.jdbc.Driver&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we've seen how to create a &lt;code&gt;DataSource&lt;/code&gt; and &lt;code&gt;JdbcTemplate&lt;/code&gt;, the &lt;code&gt;JdbcTemplate&lt;/code&gt; can be injected into a &lt;code&gt;@Repository&lt;/code&gt; for use, e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Repository&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerRepository&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;SELECT_SQL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"select NAME from CUSTOMER where ID=?"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
  &lt;span class="nd"&gt;@Autowired&lt;/span&gt;
  &lt;span class="nd"&gt;@Qualifier&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customerJdbcTemplate"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nc"&gt;JdbcTemplate&lt;/span&gt; &lt;span class="n"&gt;customerJdbcTemplate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getCustomerName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;customerJdbcTemplate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;queryForObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SELECT_SQL&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, note the use of the &lt;code&gt;@Qualifier&lt;/code&gt; annotation to specify which &lt;code&gt;JdbcTemplate&lt;/code&gt; is required for the different repositories.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;ProductRepository&lt;/code&gt; is similarly written to access the &lt;code&gt;productJdbcTemplate&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Repository&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductRepository&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;SELECT_SQL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"select NAME from PRODUCT where ID=?"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
  &lt;span class="nd"&gt;@Autowired&lt;/span&gt;
  &lt;span class="nd"&gt;@Qualifier&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"productJdbcTemplate"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nc"&gt;JdbcTemplate&lt;/span&gt; &lt;span class="n"&gt;productJdbcTemplate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getProductName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;productJdbcTemplate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;queryForObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SELECT_SQL&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With a few simple steps, Spring Boot allows us to easily connect to multiple databases when using JdbcTemplates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@jankolar?utm_source=medium&amp;amp;utm_medium=referral"&gt;Jan Antonin Kolar&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>springboot</category>
      <category>database</category>
    </item>
    <item>
      <title>Introduction to DevOps on AWS | AWS Whitepaper Summary</title>
      <author>Abdelrahman Khaled</author>
      <pubDate>Thu, 08 Jul 2021 19:00:51 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/introduction-to-devops-on-aws-aws-whitepaper-summary-877</link>
      <guid>https://dev.to/awsmenacommunity/introduction-to-devops-on-aws-aws-whitepaper-summary-877</guid>
      <description>&lt;h4&gt;
  &lt;a href="#this-paper-highlights"&gt;
  &lt;/a&gt;
  This paper highlights:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;AWS capabilities that help you accelerate your DevOps journey, and how AWS services can help remove the undifferentiated heavy lifting associated with DevOps adaptation.&lt;/li&gt;
&lt;li&gt;How to build a continuous integration and delivery capability without managing servers or build nodes, and how to leverage Infrastructure as Code to provision and manage your cloud resources in a consistent and repeatable manner.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-devops"&gt;
  &lt;/a&gt;
  What is DevOps?
&lt;/h2&gt;

&lt;p&gt;DevOps is the combination of cultural, engineering practices and patterns, and tools that increase an organization's ability to deliver applications and services at high velocity and better quality. Over time, several essential practices have emerged when adopting DevOps: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Continuous Integration&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continuous Delivery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring and Logging&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communication and Collaboration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#continuous-integration"&gt;
  &lt;/a&gt;
  Continuous Integration
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Continuous Integration (CI)&lt;/strong&gt; is a software development practice where developers regularly merge their code changes into a central code repository, after which automated builds and tests are run. CI helps find and address bugs quicker, improve software quality, and reduce the time it takes to validate and release new software updates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-o%EF%AC%80ers-the-following-services-for-continuous-integration"&gt;
  &lt;/a&gt;
  AWS oÔ¨Äers the following services for continuous integration:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AWS CodeCommit:&lt;/strong&gt; is a secure, highly scalable, managed source control service that hosts private git repositories. Some benefits of using AWS CodeCommit are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Collaboration:&lt;/strong&gt; CodeCommit is designed for collaborative software development where you can easily commit,branch, and merge your code to easily maintain control of your team‚Äôs projects. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Encryption:&lt;/strong&gt; your repositories are transefered using HTTPS or SSH and automatically encrypted through AWS Key Management Service (AWS KMS).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Access Control:&lt;/strong&gt; CodeCommit uses AWS Identity and Access Management (IAM) to control and also helps you monitor your repositories through AWS CloudTrail and Amazon CloudWatch.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;High Availability and Durability:&lt;/strong&gt; CodeCommit stores your repositories in Amazon Simple Storage Service (S3) and Amazon DynamoDB.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Notifications and Custom Scripts:&lt;/strong&gt; receive notifications with mazon Simple Notification Service (Amazon SNS) for events impacting your repositories.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS CodeBuild:&lt;/strong&gt; is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS CodeArtifact:&lt;/strong&gt; is a fully managed artifact repository service that can be used by organizations to securely store, publish, and share software packages used in their software development process.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#continuous-delivery"&gt;
  &lt;/a&gt;
  Continuous Delivery
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Continuous delivery (CD)&lt;/strong&gt; is a software development practice where code changes are automatically prepared for a release to production. &lt;br&gt;
it expands upon continuous integration by deploying all code changes to a testing environment and/or a production environment after the build stage.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-o%EF%AC%80ers-the-following-services-for-continuous-delivery"&gt;
  &lt;/a&gt;
  AWS oÔ¨Äers the following services for continuous delivery:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;AWS CodeDeploy:&lt;/strong&gt; is a fully managed deployment service that automates software deployments to a variety of compute services such as Amazon Elastic Compute Cloud (Amazon EC2), AWS Fargate, AWS Lambda, and your on-premises servers. CodeDeploy has several beneÔ¨Åts such as:

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Automated Deployments:&lt;/strong&gt; CodeDeploy fully automates software deployments, allowing you to deploy reliably and rapidly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Centralized control:&lt;/strong&gt; CodeDeploy enables you to easily launch and track the status of your application deployments 
through the AWS Management Console or the AWS CLI. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Minimize downtime:&lt;/strong&gt; CodeDeploy helps maximize your application availability by introducing changes incrementally, tracking application health according to configurable rules, providing an option to be easily stopped and rolled back if there are errors.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Easy to adopt:&lt;/strong&gt; CodeDeploy works with any application, and provides the same experience across different platforms and languages with easy integration with your existing continuous delivery toolchain. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;AWS CodePipeline:&lt;/strong&gt; service that enables you to model, visualize, and automate the steps required to release your software.
    CodePipeline, you model the full release process for building your code, deploying to pre-production environments, 
    testing your application, and releasing it to production. CodePipeline has several benefits such as:

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Rapid Delivery:&lt;/strong&gt; CodePipeline automates your software release process, allowing you to rapidly release new features to your users.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved Quality:&lt;/strong&gt; enables you to increase the speed and quality of your software updates by automating your build, test, and release processes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Easy to Integrate:&lt;/strong&gt; CodePipeline can easily be extended to adapt to your specific needs. You can use the pre-built plugins or your own custom plugins in any step of your release process. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Configurable Workflow:&lt;/strong&gt; CodePipeline enables you to model the different stages of your software release process using the console interface, the AWS CLI, AWS CloudFormation, or the AWS SDKs. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#deployment-strategies"&gt;
  &lt;/a&gt;
  Deployment Strategies
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Deployment Strategies&lt;/strong&gt; define how you want to deliver your software. Organizations follow different deployment strategies based on their business model. &lt;/p&gt;

&lt;p&gt;Some may choose to deliver software that is fully tested, and others may want their users to provide feedback and let their users evaluate under development features (for example, beta releases). Deployment strategies to be considered:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;In-Place Deployments:&lt;/strong&gt; deployment is done in line with the application on each instance in the deployment group is stopped, the latest application revision is installed, and the new version of the application is started and validated. These same deployment strategies for in-place deployments are available within blue/green deployments.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Blue/Green Deployments:&lt;/strong&gt; is a technique for releasing applications by shift traffic between two identical environments running differing versions of the application. It helps you minimize downtime during application updates mitigating risks surrounding downtime and rollback functionality. It also enables you to launch a new version (green) of your application alongside the old version (blue),  and monitor and test the new version before you reroute traffic to it, rolling back on issue detection.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Canary Deployments:&lt;/strong&gt; is a blue/green strategy that is more risk-averse, in which a phased approach is used. This can be two step or linear in which new application code is deployed and exposed for trial, and upon acceptance rolled out either to the rest of the environment or in a linear fashion.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Linear Deployments:&lt;/strong&gt; Linear deployments mean that traffic is shifted in equal increments with an equal number of minutes between each increment. You can choose from predefined linear options that specify the percentage of traffic shifted in each increment and the number of minutes between each increment.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;All-at-once Deployments:&lt;/strong&gt; All-at-once deployments mean that all traffic is shifted from the original environment to the replacement environment all at once.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#deployment-strategies-matrix"&gt;
  &lt;/a&gt;
  Deployment Strategies Matrix
&lt;/h2&gt;

&lt;p&gt;The following matrix lists the supported deployment strategies for Amazon Elastic Container Service (Amazon ECS), AWS Lambda, and Amazon EC2/On-Premise.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon ECS is a fully managed orchestration service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Lambda lets you run code without provisioning or managing servers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon EC2 enables you to run secure, resizable compute capacity in the cloud.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Deployment Strategies Matrix&lt;/th&gt;
&lt;th&gt;Amazon ECS&lt;/th&gt;
&lt;th&gt;AWS Lambda&lt;/th&gt;
&lt;th&gt;Amazon EC2/On-Premise&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;In-Place&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blue/Green&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;‚úì*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Canary&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linear&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;All-at-Once&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;‚úì&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that Blue/green deployment with EC2/On-Premise only works with EC2 instances.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aws-elastic-beanstalk-deployment-strategies"&gt;
  &lt;/a&gt;
  AWS Elastic Beanstalk Deployment Strategies
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AWS Elastic Beanstalk supports the following type of deployment strategies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;All-at-Once:&lt;/strong&gt; Performs in place deployment on all instances.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rolling:&lt;/strong&gt; Splits the instances into batches and deploys to one batch at a time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rolling with Additional Batch:&lt;/strong&gt; Splits the deployments into batches but for the first batch creates new EC2 instances instead of deploying on the existing EC2 instances.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Immutable:&lt;/strong&gt; If you need to deploy with a new instance instead of using an existing instance.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Traffic Splitting:&lt;/strong&gt; Performs immutable deployment and then forwards percentage of traffic to the new instances for a pre-determined duration of time. If the instances stay healthy, then forward all traffic to new instances and shut down old instances.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#infrastructure-as-code"&gt;
  &lt;/a&gt;
  Infrastructure as Code
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A fundamental principle of DevOps is to treat infrastructure the same way developers treat code.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;When code is compiled or built into applications, we expect a consistent application to be created, and the build is repeatable and reliable.&lt;/li&gt;
&lt;li&gt;All configurations should be defined in a declarative way and stored in a source control system such as AWS CodeCommit, the same as application code. Infrastructure provisioning, orchestration, and deployment should also support the use of the infrastructure as code.&lt;/li&gt;
&lt;li&gt;AWS provides services that enable the creation, deployment and maintenance of infrastructure in a programmatic, descriptive, and declarative way. These services provide rigor, clarity, and reliability. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-o%EF%AC%80ers-following-services-to-de%EF%AC%81ne-infrastructure-as-a-code"&gt;
  &lt;/a&gt;
  AWS oÔ¨Äers following services to deÔ¨Åne Infrastructure as a code:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AWS CloudFormation:&lt;/strong&gt; is a service that enables developers create AWS resources in an orderly and predictable fashion. &lt;br&gt;
    The templates require a specific syntax and structure that depends on the types of resources being created and managed.     &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A CloudFormation template is deployed into the AWS environment as a stack.&lt;/strong&gt; You can manage stacks through the AWS Management Console, AWS Command Line Interface, or AWS CloudFormation APIs.Before making changes to your resources, you can generate a change set, which is a summary of your proposed changes. Change sets enable you to see how your changes might impact your running resources, especially for critical resources, before implementing them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vM7qzH8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.aws.amazon.com/whitepapers/latest/introduction-devops-aws/images/figure-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vM7qzH8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.aws.amazon.com/whitepapers/latest/introduction-devops-aws/images/figure-1.png" alt="F-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CloudFormation creating an entire environment (stack) from one template workflow&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can use a single template to create and update an entire environment or separate templates to manage multiple layers within an environment. This enables templates to be modularized, and also provides a layer of governance that is important to many organizations.&lt;/li&gt;
&lt;li&gt;When you create or update a stack in the console, events are displayed showing the status of the configuration. If an error occurs, by default the stack is rolled back to its previous state. Amazon Simple Notification Service (Amazon SNS) provides notifications on events.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS Cloud Development Kit (CDK):&lt;/strong&gt; is an open source software development framework to model and provision your cloud application resources using familiar programming languages. AWS CDK enables you to model application infrastructure using TypeScript, Python, Java, and .NET. Developers can leverage their existing Integrated Development Environment (IDE), leveraging tools like autocomplete and in-line documentation to accelerate development of infrastructure. &lt;br&gt;&lt;br&gt;
    &lt;strong&gt;Constructs are the basic building blocks of CDK code.&lt;/strong&gt; A construct represents a cloud component and encapsulates everything AWS CloudFormation needs to create the component. &lt;br&gt;&lt;br&gt;
&lt;strong&gt;The AWS CDK includes the AWS Construct Library&lt;/strong&gt; containing constructs representing many AWS services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS Cloud Development Kit for Kubernetes:&lt;/strong&gt; is an open-source software development framework for defining Kubernetes applications using general-purpose programming languages. Once you have defined your application in a programming language, cdk8s will convert your application description in to pre-Kubernetes YML, which can be consumed by any Kubernetes cluster running anywhere.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#automation"&gt;
  &lt;/a&gt;
  Automation
&lt;/h2&gt;

&lt;p&gt;Automation focuses on the setup, configuration, deployment, and support of infrastructure and the applications that run on it.&lt;br&gt;
Internally AWS relies heavily on automation to provide the core features of elasticity and scalability. &lt;br&gt;
&lt;strong&gt;Manual processes are error prone, unreliable, and inadequate to support an agile business.&lt;/strong&gt;&lt;br&gt;
Frequently an organization may tie up highly skilled resources to provide manual configuration, when time could be better spent supporting other, more critical, and higher value activities within the business. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automation-has-the-following-key-benefits"&gt;
  &lt;/a&gt;
  Automation has the following key benefits:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Rapid changes&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Improved productivity&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Repeatable configurations&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reproducible environments&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Leveraged elasticity&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Leveraged automatic scaling&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Automated testing&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-o%EF%AC%80ers-the-following-services-for-automation"&gt;
  &lt;/a&gt;
  AWS oÔ¨Äers the following services for automation:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;AWS OpsWorks:&lt;/strong&gt; provides even more levels of automation with additional features like integration with configuration management software (Chef) and application lifecycle management. You can use application lifecycle management to define when resources are set up, configured, deployed, undeployed, or shut down. With AWS OpsWorks, &lt;strong&gt;you define your application in configurable stacks.&lt;/strong&gt; You can also select predefined application stacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uIuNGgXt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.aws.amazon.com/whitepapers/latest/introduction-devops-aws/images/figure-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uIuNGgXt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.aws.amazon.com/whitepapers/latest/introduction-devops-aws/images/figure-2.png" alt="F-2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AWS OpsWorks showing DevOps features and architecture&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application stacks are organized into architectural layers so that stacks can be maintained independently.&lt;/li&gt;
&lt;li&gt;Out of the box, AWS OpsWorks also simplifies setting up Auto Scaling groups and Elastic Load Balancing load balancers, further illustrating the DevOps principle of automation. &lt;/li&gt;
&lt;li&gt;AWS OpsWorks supports application versioning, continuous deployment, and infrastructure configuration management.&lt;/li&gt;
&lt;li&gt;AWS OpsWorks also supports the DevOps practices of monitoring and logging.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS Elastic Beanstalk:&lt;/strong&gt;  is a service to rapidly deploy and scale web applications developed with Java, .NET, PHP, Node.js, &lt;br&gt;&lt;br&gt;
Python, Ruby, Go, and Docker on familiar servers such as Apache, NGINX, Passenger, and IIS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Elastic Beanstalk is an abstraction&lt;/strong&gt; on top of Amazon EC2, Auto Scaling, and &lt;strong&gt;simplifies the deployment by giving additional features&lt;/strong&gt; such as cloning, blue/green deployments, Elastic Beanstalk Command Line Interface (EB CLI) and &lt;strong&gt;integration with AWS Toolkit&lt;/strong&gt; for Visual Studio, Visual Studio Code, Eclipse, and IntelliJ for increase developer productivity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#monitoring-and-logging"&gt;
  &lt;/a&gt;
  Monitoring and Logging
&lt;/h2&gt;

&lt;p&gt;Because feedback is critical. In AWS, feedback is provided by two core services: &lt;strong&gt;Amazon CloudWatch and AWS CloudTrail&lt;/strong&gt;. Together they provide a robust monitoring, alerting, and auditing infrastructure so developers and operations teams can work together closely and transparently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-provides-the-following-services-for-monitoring-and-logging"&gt;
  &lt;/a&gt;
  AWS provides the following services for monitoring and logging:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon CloudWatch:&lt;/strong&gt; Amazon CloudWatch metrics automatically collect data from AWS services such as Amazon EC2 instances, Amazon EBS volumes, and Amazon RDS DB instances.These metrics can then be organized as dashboards and alarms or events can be created to trigger events or perform Auto Scaling actions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon CloudWatch Alarms:&lt;/strong&gt; You can set up alarms based on the metrics collected by Amazon CloudWatch Metrics. The alarm can then send a notification to Amazon Simple Notification Service (Amazon SNS) topic or initiate Auto Scaling actions. An alarm requires &lt;strong&gt;period&lt;/strong&gt; (length of the time to evaluate a metric), &lt;strong&gt;Evaluation Period&lt;/strong&gt; (number of the most recent data points), and &lt;strong&gt;Datapoints to Alarm&lt;/strong&gt; (number of data points within the Evaluation Period).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Amazon CloudWatch Logs:&lt;/strong&gt; is a log aggregation and monitoring service. &lt;strong&gt;AWS CodeBuild, CodeCommit, CodeDeploy and CodePipeline provide integrations with CloudWatch logs&lt;/strong&gt; so that all of the logs can be centrally monitored.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;With CloudWatch Logs you can:&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Query Your Log Data&lt;/li&gt;
&lt;li&gt;Monitor Logs from Amazon EC2 Instances&lt;/li&gt;
&lt;li&gt;Monitor AWS CloudTrail Logged Events&lt;/li&gt;
&lt;li&gt;Define Log Retention Policy&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon CloudWatch Logs Insights:&lt;/strong&gt; scans your logs and enables you to perform interactive queries and visualizations. It understands various log formats and auto-discovers fields from JSON Logs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Amazon CloudWatch Events:&lt;/strong&gt; delivers a near real-time stream of system events that describe changes in AWS resources. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;You can match events and route them to one or more target functions or streams.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CloudWatch Events becomes aware of operational changes as they occur.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CloudWatch Events responds to these operational changes and takes corrective action as necessary&lt;/strong&gt;, by sending messages to respond to the environment, activating functions, making changes, and capturing state information. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon EventBridge:&lt;/strong&gt; is a serverless event bus that enables integrations between AWS services, Software as a services (SaaS), &lt;br&gt;&lt;br&gt;
and your applications. In addition to build event driven applications, &lt;strong&gt;EventBridge can be used to notify about events&lt;/strong&gt; from the services such as CodeBuild, CodeDeploy, CodePipeline, and CodeCommit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;AWS CloudTrail:&lt;/strong&gt; it‚Äôs important to &lt;strong&gt;understand who &lt;br&gt;
    is making modifications to your infrastructure.&lt;/strong&gt; In AWS this transparency is provided by AWS CloudTrail service.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All AWS interactions are handled through AWS API calls that are monitored and logged by AWS CloudTrail. &lt;/li&gt;
&lt;li&gt;All generated log files are stored in an Amazon S3 bucket that you define. &lt;/li&gt;
&lt;li&gt;Log files are encrypted using Amazon S3 server-side encryption (SSE). &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#communication-and-collaboration"&gt;
  &lt;/a&gt;
  Communication and Collaboration
&lt;/h2&gt;

&lt;p&gt;Whether you are adopting DevOps Culture in your organization or going through a DevOps cultural transformation, communication&lt;br&gt;
and collaboration is an important part of you approach. At Amazon, we have realized that there is need to bring a changed in the &lt;br&gt;
mindset of the teams and hence adopted the concept of &lt;strong&gt;Two-Pizza Teams.&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#twopizza-teams"&gt;
  &lt;/a&gt;
  Two-Pizza Teams
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;"We try to create teams that are no larger than can be fed by two pizzas," said Bezos.&lt;/strong&gt; "We call that the two-pizza team rule."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The smaller the team the better the collaboration.&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Collaboration&lt;/strong&gt; is also very important as the software releases are moving faster than ever. And a team‚Äôs ability to deliver the software can be a differentiating factor for your organization against your competition. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Communication&lt;/strong&gt; between the teams is also important we move towards the shared responsibility model and start moving out of the siloed development approach. This brings the concept of ownership in the team and shifts their perspective to look at this as an end-to-end. Your team should not think about your production environments as black boxes where they have no visibility.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cultural transformation&lt;/strong&gt; is also important as you may be building a common DevOps team or the other approach is that you have one or more DevOps-focused members on your team. Both of these approaches do introduce shared responsibility in to the team.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;Whether you are going through a DevOps Transformation or implementing DevOps principles for the first time, you should think about Security as integrated in your DevOps processes. This should be cross cutting concern across your build, test deployment stages.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aws-shared-responsibility-model"&gt;
  &lt;/a&gt;
  AWS Shared Responsibility Model
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VJCVeXqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.aws.amazon.com/whitepapers/latest/introduction-devops-aws/images/figure-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VJCVeXqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.aws.amazon.com/whitepapers/latest/introduction-devops-aws/images/figure-3.png" alt="F-3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Security is a shared responsibility between AWS and the customer. The different parts of the Shared Responsibility Model are explained below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS responsibility ‚ÄúSecurity of the Cloud‚Äù:&lt;/strong&gt; AWS is responsible for protecting the infrastructure that runs all of the services offered in the AWS Cloud. This infrastructure is composed of the hardware, software, networking, and facilities that run AWS Cloud services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Customer responsibility ‚ÄúSecurity in the Cloud‚Äù:&lt;/strong&gt; Customer responsibility is determined by the AWS Cloud services that a customer selects. This determines the amount of configuration work the customer must perform as part of their security responsibilities.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#identity-and-access-management-iam"&gt;
  &lt;/a&gt;
  Identity and Access Management (IAM)
&lt;/h4&gt;

&lt;p&gt;AWS Identity and Access Management (IAM) defines the &lt;strong&gt;controls and polices&lt;/strong&gt; that are used to manage access to AWS Resources. Using IAM you can create users and groups and define permissions to various DevOps services.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In addition to the users, &lt;strong&gt;various services may also need access to AWS resources.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;IAM is one component of the AWS security infrastructure.&lt;/strong&gt; With IAM, you can centrally manage groups, users, service roles and security credentials such as passwords, access keys, and permissions policies that control which AWS services and resources users can access. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;IAM Policy&lt;/strong&gt; lets you define the set of permissions, which can be attached to either a Role, User, or a Service to define their permission. You can also &lt;strong&gt;use IAM to create roles&lt;/strong&gt; that are used widely within your desired DevOps strategy.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h4&gt;

&lt;p&gt;You can find the original AWS Whitepaper &lt;a href="https://docs.aws.amazon.com/whitepapers/latest/introduction-devops-aws/welcome.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  Acknowledgements
&lt;/h4&gt;

&lt;p&gt;This is a contribution to &lt;a href="https://www.linkedin.com/company/awsmenacom/"&gt;AWS Community MENA&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more Whitepapers, please follow the hashtag &lt;a href="https://www.linkedin.com/feed/hashtag/?keywords=aws_whitepaper_summary"&gt;#aws_whitepaper_summary&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Connect with me on &lt;a href="https://www.linkedin.com/in/abdelrahman-khalid/"&gt;LinkedIn&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Follow  &lt;a href="https://www.linkedin.com/company/awsbelaraby/"&gt;AWSbelAraby&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>aws</category>
      <category>cloud</category>
    </item>
    <item>
      <title>How I set up my Web Dev environment in Linux</title>
      <author>Florencia Gonzalez</author>
      <pubDate>Thu, 08 Jul 2021 18:58:55 +0000</pubDate>
      <link>https://dev.to/rightonhana/how-i-set-up-my-web-dev-environment-in-linux-4n2h</link>
      <guid>https://dev.to/rightonhana/how-i-set-up-my-web-dev-environment-in-linux-4n2h</guid>
      <description>&lt;p&gt;Every time I install a Linux distro on my PC I ended up forgetting some configurations, so I created this article as a cheatsheet for setting up my Web Dev environment in Ubuntu.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all install curl
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;curl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH"&gt;Zsh&lt;/a&gt; and &lt;a href="https://github.com/ohmyzsh/ohmyzsh"&gt;Oh my Zsh&lt;/a&gt;. Also install &lt;a href="https://github.com/spaceship-prompt/spaceship-prompt"&gt;Spaceship ZSH&lt;/a&gt; theme.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install Zsh&lt;/span&gt;
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;zsh
&lt;span class="c"&gt;# Make it your default shell:&lt;/span&gt;
chsh &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;which zsh&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Install Oh my Zsh&lt;/span&gt;
sh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;curl &lt;span class="nt"&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="c"&gt;# Install Spaceship theme&lt;/span&gt;
git clone https://github.com/spaceship-prompt/spaceship-prompt.git &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ZSH_CUSTOM&lt;/span&gt;&lt;span class="s2"&gt;/themes/spaceship-prompt"&lt;/span&gt; &lt;span class="nt"&gt;--depth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="c"&gt;# Symlink spaceship.zsh-theme to your oh-my-zsh custom themes directory&lt;/span&gt;
&lt;span class="nb"&gt;ln&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ZSH_CUSTOM&lt;/span&gt;&lt;span class="s2"&gt;/themes/spaceship-prompt/spaceship.zsh-theme"&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ZSH_CUSTOM&lt;/span&gt;&lt;span class="s2"&gt;/themes/spaceship.zsh-theme"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After install the Spaceship theme, set &lt;code&gt;ZSH_THEME="spaceship"&lt;/code&gt; in your &lt;code&gt;.zshrc&lt;/code&gt; file (it should be on your user folder). I also use this moment to change some default configurations, it should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ini"&gt;&lt;code&gt;&lt;span class="c"&gt;# oh-my-zsh config
&lt;/span&gt;&lt;span class="err"&gt;export&lt;/span&gt; &lt;span class="py"&gt;ZSH&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/home/user/.oh-my-zsh"&lt;/span&gt;

&lt;span class="c"&gt;# zsh theme selection
&lt;/span&gt;&lt;span class="py"&gt;ZSH_THEME&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"spaceship"&lt;/span&gt;

&lt;span class="c"&gt;# oh-my-zsh plugins
&lt;/span&gt;&lt;span class="py"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;(&lt;/span&gt;
    &lt;span class="err"&gt;common-aliases&lt;/span&gt;
    &lt;span class="err"&gt;gitfast&lt;/span&gt;
    &lt;span class="err"&gt;git-extras&lt;/span&gt;
    &lt;span class="err"&gt;node&lt;/span&gt;
    &lt;span class="err"&gt;npm&lt;/span&gt;
    &lt;span class="err"&gt;sudo&lt;/span&gt;
    &lt;span class="err"&gt;web-search&lt;/span&gt;
&lt;span class="err"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# More oh-my-zsh stuff
&lt;/span&gt;&lt;span class="err"&gt;source&lt;/span&gt; &lt;span class="err"&gt;$ZSH/oh-my-zsh.sh&lt;/span&gt;

&lt;span class="c"&gt;# Adding a default user makes lots of themes look better:
&lt;/span&gt;&lt;span class="py"&gt;DEFAULT_USER&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt;

&lt;span class="c"&gt;# Node installation path
&lt;/span&gt;&lt;span class="err"&gt;export&lt;/span&gt; &lt;span class="py"&gt;PATH&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;$PATH:~/.node/bin&lt;/span&gt;

&lt;span class="c"&gt;# VSCode config.
&lt;/span&gt;&lt;span class="err"&gt;export&lt;/span&gt; &lt;span class="py"&gt;EDITOR&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"code"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you complete setting up the terminal, remember to reboot your PC to apply the changes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://github.com/powerline/fonts"&gt;Powerline Fonts&lt;/a&gt; for the terminal.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;fonts-powerline
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install git
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;.gitconfig&lt;/code&gt; in the user folder. This is my config:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ini"&gt;&lt;code&gt;&lt;span class="nn"&gt;[user]&lt;/span&gt;
    &lt;span class="py"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Your Name&lt;/span&gt;
    &lt;span class="py"&gt;email&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;username@mail.com&lt;/span&gt;
&lt;span class="nn"&gt;[color]&lt;/span&gt;
    &lt;span class="py"&gt;branch&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
    &lt;span class="py"&gt;diff&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
    &lt;span class="py"&gt;showbranch&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
    &lt;span class="py"&gt;status&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
    &lt;span class="py"&gt;ui&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="nn"&gt;[color "branch"]&lt;/span&gt;
    &lt;span class="py"&gt;current&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yellow reverse&lt;/span&gt;
    &lt;span class="py"&gt;local&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yellow&lt;/span&gt;
    &lt;span class="py"&gt;remote&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;green&lt;/span&gt;
&lt;span class="nn"&gt;[color "diff"]&lt;/span&gt;
    &lt;span class="py"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yellow bold&lt;/span&gt;
    &lt;span class="py"&gt;frag&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;magenta bold&lt;/span&gt;
    &lt;span class="py"&gt;old&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;red bold&lt;/span&gt;
    &lt;span class="py"&gt;new&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;green bold&lt;/span&gt;
&lt;span class="nn"&gt;[color "status"]&lt;/span&gt;
    &lt;span class="py"&gt;added&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yellow&lt;/span&gt;
    &lt;span class="py"&gt;changed&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;green&lt;/span&gt;
    &lt;span class="py"&gt;untracked&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;cyan&lt;/span&gt;
&lt;span class="nn"&gt;[log]&lt;/span&gt;
    &lt;span class="py"&gt;date&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;short&lt;/span&gt;
&lt;span class="nn"&gt;[alias]&lt;/span&gt;
    &lt;span class="py"&gt;commita&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;commit --amend --no-edit&lt;/span&gt;
    &lt;span class="py"&gt;lg&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;log --oneline&lt;/span&gt;
    &lt;span class="py"&gt;lgg&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;log --oneline --graph --decorate=short --branches='*'&lt;/span&gt;
    &lt;span class="py"&gt;pushf&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;push --force&lt;/span&gt;
    &lt;span class="py"&gt;st&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;status -sb&lt;/span&gt;
&lt;span class="nn"&gt;[push]&lt;/span&gt;
    &lt;span class="py"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;current&lt;/span&gt;
&lt;span class="nn"&gt;[core]&lt;/span&gt;
    &lt;span class="py"&gt;editor&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;code --wait&lt;/span&gt;
&lt;span class="nn"&gt;[init]&lt;/span&gt;
    &lt;span class="py"&gt;defaultBranch&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install the alternative of &lt;a href="https://www.ghisler.com/download.htm"&gt;Total Commander&lt;/a&gt; for Linux:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;mc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install &lt;a href="http://nodejs.org/"&gt;Node.js&lt;/a&gt;. Download the &lt;a href="https://nodejs.org/en/download/"&gt;Linux Binaries&lt;/a&gt;, extract the &lt;code&gt;.tar.gz&lt;/code&gt; file and copy all the internal files. Create a folder in your user folder called &lt;code&gt;.node&lt;/code&gt; and paste all the files there.
if you installed Zsh, you should add the node path to the &lt;code&gt;.zshrc&lt;/code&gt; file...
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ini"&gt;&lt;code&gt;&lt;span class="c"&gt;# Node installation path
&lt;/span&gt;&lt;span class="err"&gt;export&lt;/span&gt; &lt;span class="py"&gt;PATH&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;$PATH:~/.node/bin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install some global npm packages that I use frequently
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install pnpm&lt;/span&gt;
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; pnpm
&lt;span class="c"&gt;# Install some global packages&lt;/span&gt;
pnpm i &lt;span class="nt"&gt;-g&lt;/span&gt; fixpack fx live-server rimraf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://www.npmjs.com/package/fixpack"&gt;fixpack&lt;/a&gt;: To order and clean &lt;code&gt;package.json&lt;/code&gt; files&lt;br&gt;
&lt;a href="https://www.npmjs.com/package/fx"&gt;fx&lt;/a&gt;: To see and interact with &lt;code&gt;.json&lt;/code&gt; files in the terminal.&lt;br&gt;
&lt;a href="https://www.npmjs.com/package/live-server"&gt;live-server&lt;/a&gt;: A development server with live reload for HTML, CSS and Javascript.&lt;br&gt;
&lt;a href="https://www.npmjs.com/package/rimraf"&gt;rimraf&lt;/a&gt;: For removing files and stuff.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://launchpad.net/gdebi"&gt;Gdebi&lt;/a&gt;, a tool for installing &lt;code&gt;.deb&lt;/code&gt; files.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://brave.com/"&gt;Brave&lt;/a&gt; browser.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://keeweb.info/"&gt;Keeweb&lt;/a&gt; password manager.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;. Once it's downloaded sync your extensions and configurations (Thank you vs-code for this feature, it saves me a lot of time üò≠).&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://insomnia.rest/"&gt;Insomnia&lt;/a&gt; for building, designing and testing APIs. You can download the &lt;code&gt;.deb&lt;/code&gt; file &lt;a href="https://insomnia.rest/download"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://devcenter.heroku.com/articles/heroku-cli"&gt;Heroku CLI&lt;/a&gt;. I have some projects hosted on Heroku so I need to have the CLI installed.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install Heroku CLI&lt;/span&gt;
&lt;span class="nb"&gt;sudo &lt;/span&gt;snap &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--classic&lt;/span&gt; heroku
&lt;span class="c"&gt;# LogIn&lt;/span&gt;
heroku login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.gimp.org/"&gt;GIMP&lt;/a&gt; for editing images.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;snap &lt;span class="nb"&gt;install &lt;/span&gt;gimp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To make my own avatars, mock designs and create the logos for my apps I use &lt;a href="https://designer.gravit.io/"&gt;Gravit Designer&lt;/a&gt;'s PWA.&lt;/li&gt;
&lt;li&gt;Recently I started learning about 3D modeling and WebGL. The 3D software that I use is &lt;a href="https://www.blender.org/"&gt;Blender&lt;/a&gt;, so install it with the following command :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;snap &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--classic&lt;/span&gt; blender
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that‚Äôs it! Probably I‚Äôm forgetting something so I‚Äôll update the article if something comes to my mind.&lt;/p&gt;

&lt;p&gt;Thank you for reading! Hope you find it useful.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
