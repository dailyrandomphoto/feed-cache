<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Concurrency in modern programming languages: Java</title>
      <author>Deepu K Sasidharan</author>
      <pubDate>Fri, 30 Apr 2021 11:42:20 +0000</pubDate>
      <link>https://dev.to/deepu105/concurrency-in-modern-programming-languages-java-3l2c</link>
      <guid>https://dev.to/deepu105/concurrency-in-modern-programming-languages-java-3l2c</guid>
      <description>&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://deepu.tech/concurrency-in-modern-languages-java/"&gt;deepu.tech&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Please follow me on &lt;a href="https://twitter.com/deepu105"&gt;Twitter&lt;/a&gt; for updates and let me know what can be improved in the post.&lt;/p&gt;




&lt;p&gt;This is a multi-part series where I'll be talking about concurrency in modern programming languages and will be building and benchmarking a concurrent web server, inspired by the example from the &lt;a href="https://doc.rust-lang.org/book/ch20-00-final-project-a-web-server.html"&gt;Rust book&lt;/a&gt;, in popular languages like Rust, Go, JavaScript (NodeJS), TypeScript (Deno), Kotlin and Java to compare concurrency and its performance between these languages/platforms. The chapters of this series are as below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-introduction-ckk"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-rust-19co"&gt;Concurrent web server in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-golang-439i"&gt;Concurrent web server in Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-javascript-on-nodejs-epo"&gt;Concurrent web server in JavaScript with NodeJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-typescript-on-deno-hkb"&gt;Concurrent web server in TypeScript with Deno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concurrent web server in Java with JVM&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Concurrent web server in Kotlin with JVM&lt;/li&gt;
&lt;li&gt;Comparison and conclusion of benchmarks&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#concurrency-in-java"&gt;
  &lt;/a&gt;
  Concurrency in Java
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The Java programming language and the Java virtual machine (JVM) have been designed to support concurrent programming, and all execution takes place in the context of threads&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wikipedia&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Java had support for concurrent programming from its early days. Prior to Java 1.1 it even had support for green threads (virtual threads). Spoiler Alert! It's coming back again with &lt;a href="https://wiki.openjdk.java.net/display/loom/Main"&gt;Project Loom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Concurrent programming has always been at the core of Java as it was aimed at multi-threaded and multi-core CPUs. While not as simple as &lt;code&gt;goroutines&lt;/code&gt; to use, it was powerful and flexible for almost any use case. While powerful, it's also quite complex especially when you have to access data between threads since the default mechanism in Java, due to its OOP roots, is to use shared state concurrency by synchronizing the threads.&lt;/p&gt;

&lt;p&gt;Threads are at the core of concurrent &amp;amp; asynchronous programming in Java. From JDK 1.1 onwards these threads would map 1:1 to OS threads. Due to its early inception, the ecosystem has really mature libraries as well, from HTTP servers to concurrent message processors and so on. Asynchronous programming caught up a bit late in Java, the building blocks were there but it was practically useable only from Java 8, but it has matured as well and now has a great ecosystem with support for reactive programming and asynchronous concurrency.&lt;/p&gt;

&lt;p&gt;Java 8 bought a lot of improvements and simplifications to make it easier to do concurrency. For example, standard Java APIs like the Stream API even provides a way to do &lt;a href="https://docs.oracle.com/javase/tutorial/collections/streams/parallelism.html"&gt;parallel processing&lt;/a&gt; easily by just invoking a method call on complex and CPU intensive pipelines.&lt;/p&gt;

&lt;p&gt;With Java, it's possible to do multi-threaded concurrency or parallel programming as well as asynchronous programming. This means as we saw in the &lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-introduction-ckk"&gt;first chapter&lt;/a&gt;, we can mix and match these models to get the best possible performance for any use case.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multithreading"&gt;
  &lt;/a&gt;
  Multi-threading
&lt;/h3&gt;

&lt;p&gt;Java provides building blocks to create and manage OS threads as part of the standard library and it also provides implementations required for &lt;a href="https://docs.oracle.com/javase/tutorial/essential/concurrency/sync.html"&gt;shared-state concurrency&lt;/a&gt; using locks and synchronization. Message-passing concurrency is not provided by default but can be done using external libraries like &lt;a href="https://akka.io/"&gt;Akka&lt;/a&gt; or using an &lt;a href="https://en.wikipedia.org/wiki/Actor_model"&gt;Actor model&lt;/a&gt; implementation. However, due to the memory model, it's up to the developer to ensure there are no data races or memory leaks in the concurrent program.&lt;/p&gt;

&lt;p&gt;In order to make multi-threading even more efficient, Java provides ways to create thread pools and reuse those threads to increase throughput. This will become even better once Project loom is released, hopefully with Java 17 or 18. Technically Java has one of the most mature ecosystems when it comes to multi-threading and most Java frameworks that you would end up using will be making use of it internally for performance improvements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#asynchronous-processing"&gt;
  &lt;/a&gt;
  Asynchronous processing
&lt;/h3&gt;

&lt;p&gt;Technically asynchronous programming is not part of concurrency but in practice, it goes hand in hand for many use cases and improves performance, and makes resource usage more efficient. In Java asynchronous programming is achieved using the same building blocks as concurrent/parallel programming. a.k.a, Threads. This wasn't very popular in Java before Java 8 due to complexity and, let's be honest, the lack of things like lambdas, functional programming support, CompletableFuture, and so on.&lt;/p&gt;

&lt;p&gt;The latest versions of Java provide the building blocks required for asynchronous programming with standard interfaces and implementations. But do keep in mind that using an asynchronous programming model increases the overall complexity and the ecosystem is still evolving. There are also many popular libraries and frameworks like Spring and RxJava that support asynchronous/reactive programming.&lt;/p&gt;

&lt;p&gt;Java still doesn't have any syntax sugar for async/await though but there are alternatives like the &lt;a href="https://github.com/electronicarts/ea-async"&gt;EA Async&lt;/a&gt; library that's close enough.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benchmarking"&gt;
  &lt;/a&gt;
  Benchmarking
&lt;/h2&gt;

&lt;p&gt;Now that we have some basic understanding of concurrency features in Java, let us build a simple concurrent web server in Java. Since Java offers multiple ways to achieve this we'll be building two sample applications and comparing them. The Java version used is the latest (16.0.1) at the time of writing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multithreaded-concurrent-webserver"&gt;
  &lt;/a&gt;
  Multi-threaded concurrent webserver
&lt;/h3&gt;

&lt;p&gt;This example is closer to the Rust multi-threaded example we built in the &lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-rust-19co"&gt;rust chapter&lt;/a&gt;, I have omitted import statements for brevity. You can find the full example on &lt;a href="https://github.com/deepu105/concurrency-benchmarks/tree/main/javaws"&gt;GitHub here&lt;/a&gt;. We use &lt;code&gt;java.net.ServerSocket&lt;/code&gt; for this. We are not using any external dependency in this case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JavaHTTPServer&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// count used to introduce delays&lt;/span&gt;
        &lt;span class="c1"&gt;// bind listener&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;serverSocket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ServerSocket&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server is listening on port 8080"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
                &lt;span class="c1"&gt;// listen to all incoming requests and spawn each connection in a new thread&lt;/span&gt;
                &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ServerThread&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serverSocket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;accept&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;IOException&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server exception: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ServerThread&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Thread&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Socket&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;ServerThread&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Socket&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello.html"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
                &lt;span class="c1"&gt;// get the input stream&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;BufferedReader&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;InputStreamReader&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInputStream&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
                &lt;span class="c1"&gt;// get character output stream to client (for headers)&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PrintWriter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getOutputStream&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
                &lt;span class="c1"&gt;// get binary output stream to client (for requested data)&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;dataOut&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;BufferedOutputStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getOutputStream&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;FileInputStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// add 2 second delay to every 10th request&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Adding delay. Count: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="nc"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sleep&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;

            &lt;span class="c1"&gt;// read the request first to avoid connection reset errors&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;requestLine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readLine&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestLine&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;requestLine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;

            &lt;span class="c1"&gt;// read the HTML file&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fileLength&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;fileIn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileData&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;contentMimeType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"text/html"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// send HTTP Headers&lt;/span&gt;
            &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"HTTP/1.1 200 OK"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Content-type: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;contentMimeType&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Content-length: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fileLength&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Connection: keep-alive"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// blank line between headers and content, very important!&lt;/span&gt;
            &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;flush&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// flush character output stream buffer&lt;/span&gt;

            &lt;span class="n"&gt;dataOut&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;write&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileData&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fileLength&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// write the file data to output stream&lt;/span&gt;
            &lt;span class="n"&gt;dataOut&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;flush&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error with exception : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we bind a TCP listener using &lt;code&gt;ServerSocket&lt;/code&gt; to port 8080 and listen to all incoming requests. Each request is processed in a new thread.&lt;/p&gt;

&lt;p&gt;Let us run a benchmark using ApacheBench. We will make 10000 requests with 100 concurrent requests.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;❯ ab &lt;span class="nt"&gt;-c&lt;/span&gt; 100 &lt;span class="nt"&gt;-n&lt;/span&gt; 10000 http://127.0.0.1:8080/
This is ApacheBench, Version 2.3 &amp;lt;&lt;span class="nv"&gt;$Revision&lt;/span&gt;: 1879490 &lt;span class="nv"&gt;$&amp;gt;&lt;/span&gt;
...

Document Path:          /
Document Length:        176 bytes

Concurrency Level:      100
Time taken &lt;span class="k"&gt;for &lt;/span&gt;tests:   20.326 seconds
Complete requests:      10000
Failed requests:        0
Total transferred:      2600000 bytes
HTML transferred:       1760000 bytes
Requests per second:    491.98 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="c"&gt;#/sec] (mean)&lt;/span&gt;
Time per request:       203.262 &lt;span class="o"&gt;[&lt;/span&gt;ms] &lt;span class="o"&gt;(&lt;/span&gt;mean&lt;span class="o"&gt;)&lt;/span&gt;
Time per request:       2.033 &lt;span class="o"&gt;[&lt;/span&gt;ms] &lt;span class="o"&gt;(&lt;/span&gt;mean, across all concurrent requests&lt;span class="o"&gt;)&lt;/span&gt;
Transfer rate:          124.92 &lt;span class="o"&gt;[&lt;/span&gt;Kbytes/sec] received

Connection Times &lt;span class="o"&gt;(&lt;/span&gt;ms&lt;span class="o"&gt;)&lt;/span&gt;
              min  mean[+/-sd] median   max
Connect:        0    1   1.5      0      13
Processing:     0  201 600.0      1    2023
Waiting:        0  201 600.0      0    2023
Total:          0  202 600.0      1    2025

Percentage of the requests served within a certain &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;ms&lt;span class="o"&gt;)&lt;/span&gt;
  50%      1
  66%      2
  75%      4
  80%      6
  90%   2000
  95%   2001
  98%   2003
  99%   2006
 100%   2025 &lt;span class="o"&gt;(&lt;/span&gt;longest request&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see the request handler thread sleeps for 2 seconds for every 10th request. In a real-world scenario, the thread pool itself could become the bottleneck and you may not be able to set so many threads as the OS may not be able to provide so many thus creating increased resource usage and bottleneck. In this simple use case, since each thread spawns and processes the request really fast we won't encounter an issue.&lt;/p&gt;

&lt;p&gt;So let's see if we can have another solution without such a bottleneck.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#asynchronous-concurrent-webserver"&gt;
  &lt;/a&gt;
  Asynchronous concurrent webserver
&lt;/h3&gt;

&lt;p&gt;This example is closer to the asynchronous example from the &lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-rust-19co"&gt;rust chapter&lt;/a&gt;, I have omitted import statements for brevity. You can find the full example on &lt;a href="https://github.com/deepu105/concurrency-benchmarks/tree/main/javaws"&gt;GitHub here&lt;/a&gt;. Notice that we are using &lt;code&gt;java.nio.channels.AsynchronousServerSocketChannel&lt;/code&gt;here and no external dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JavaAsyncHTTPServer&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;JavaAsyncHTTPServer&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;currentThread&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;join&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Wait forever&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;IOException&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// we shouldn't use try with resource here as it will kill the stream&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;AsynchronousServerSocketChannel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;open&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;InetSocketAddress&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"127.0.0.1"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// bind listener&lt;/span&gt;
        &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setOption&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;StandardSocketOptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server is listening on port 8080"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt; &lt;span class="c1"&gt;// count used to introduce delays&lt;/span&gt;

        &lt;span class="c1"&gt;// listen to all incoming requests&lt;/span&gt;
        &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;accept&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;CompletionHandler&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nd"&gt;@Override&lt;/span&gt;
            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;completed&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;AsynchronousSocketChannel&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt; &lt;span class="n"&gt;attachment&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isOpen&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;accept&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]++;&lt;/span&gt;
                &lt;span class="n"&gt;handleAcceptConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;

            &lt;span class="nd"&gt;@Override&lt;/span&gt;
            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Throwable&lt;/span&gt; &lt;span class="n"&gt;exc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt; &lt;span class="n"&gt;attachment&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isOpen&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;accept&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                    &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Connection handler error: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;exc&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;});&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;handleAcceptConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;AsynchronousSocketChannel&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello.html"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;FileInputStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// add 2 second delay to every 10th request&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Adding delay. Count: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="nc"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sleep&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isOpen&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Read the first 1024 bytes of data from the stream&lt;/span&gt;
                &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;ByteBuffer&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ByteBuffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;allocate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="c1"&gt;// read the request fully to avoid connection reset errors&lt;/span&gt;
                &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

                &lt;span class="c1"&gt;// read the HTML file&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fileLength&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;fileIn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileData&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

                &lt;span class="c1"&gt;// send HTTP Headers&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"HTTP/1.1 200 OK\n"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                        &lt;span class="s"&gt;"Connection: keep-alive\n"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                        &lt;span class="s"&gt;"Content-length: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fileLength&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"\n"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                        &lt;span class="s"&gt;"Content-Type: text/html; charset=utf-8\r\n\r\n"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;String&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileData&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;StandardCharsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;UTF_8&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;getBytes&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

                &lt;span class="c1"&gt;// write the to output stream&lt;/span&gt;
                &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;write&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ByteBuffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wrap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

                &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;clear&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;IOException&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nc"&gt;InterruptedException&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nc"&gt;ExecutionException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Connection handler error: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we bind an asynchronous listener to port 8080 and listen to all incoming requests. Each request is processed in a new task provided by &lt;code&gt;AsynchronousServerSocketChannel&lt;/code&gt;. We are not using any thread pools here and all the incoming requests are processed asynchronously and hence we don't have a bottleneck for maximum connections. But one thing you may immediately notice is that the code is much more complex now.&lt;/p&gt;

&lt;p&gt;Let us run a benchmark using ApacheBench. We will make 10000 requests with 100 concurrent requests.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ab &lt;span class="nt"&gt;-c&lt;/span&gt; 100 &lt;span class="nt"&gt;-n&lt;/span&gt; 10000 http://127.0.0.1:8080/

This is ApacheBench, Version 2.3 &amp;lt;&lt;span class="nv"&gt;$Revision&lt;/span&gt;: 1879490 &lt;span class="nv"&gt;$&amp;gt;&lt;/span&gt;
...

Document Path:          /
Document Length:        176 bytes

Concurrency Level:      100
Time taken &lt;span class="k"&gt;for &lt;/span&gt;tests:   20.243 seconds
Complete requests:      10000
Failed requests:        0
Total transferred:      2770000 bytes
HTML transferred:       1760000 bytes
Requests per second:    494.00 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="c"&gt;#/sec] (mean)&lt;/span&gt;
Time per request:       202.431 &lt;span class="o"&gt;[&lt;/span&gt;ms] &lt;span class="o"&gt;(&lt;/span&gt;mean&lt;span class="o"&gt;)&lt;/span&gt;
Time per request:       2.024 &lt;span class="o"&gt;[&lt;/span&gt;ms] &lt;span class="o"&gt;(&lt;/span&gt;mean, across all concurrent requests&lt;span class="o"&gt;)&lt;/span&gt;
Transfer rate:          133.63 &lt;span class="o"&gt;[&lt;/span&gt;Kbytes/sec] received

Connection Times &lt;span class="o"&gt;(&lt;/span&gt;ms&lt;span class="o"&gt;)&lt;/span&gt;
              min  mean[+/-sd] median   max
Connect:        0    0   0.6      0       5
Processing:     0  201 600.0      0    2026
Waiting:        0  201 600.0      0    2026
Total:          0  202 600.0      0    2026

Percentage of the requests served within a certain &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;ms&lt;span class="o"&gt;)&lt;/span&gt;
  50%      0
  66%      1
  75%      3
  80%      4
  90%   2000
  95%   2001
  98%   2002
  99%   2003
 100%   2026 &lt;span class="o"&gt;(&lt;/span&gt;longest request&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We got almost identical results here, this one is even faster by 100ms. Hence this version seems much more efficient than the multi-threaded version for this particular use case. However at the cost of added complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As I explained in the &lt;a href="https://dev.to/deepu105/concurrency-in-modern-programming-languages-introduction-ckk"&gt;first part&lt;/a&gt; of this serious, this simple benchmarking is not an accurate representation for all concurrency use cases. It's a simple test for a very particular use case, a simple concurrent web server that just serves a file. The idea is to see the differences in solutions and to understand how concurrency works in Java. And for this particular use case, asynchronous solutions do seem to be the best choice.&lt;/p&gt;

&lt;p&gt;So stay tuned for the next post where we will look at concurrency in Kotlin and build the same use case in Kotlin.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blogs.oracle.com/javamagazine/going-inside-javas-project-loom-and-virtual-threads"&gt;blogs.oracle.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dzone.com/articles/java-concurrency-evolution"&gt;dzone.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.vogella.com/tutorials/JavaConcurrency/article.html"&gt;www.vogella.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dzone.com/articles/a-birds-eye-view-on-java-concurrency-frameworks-1"&gt;dzone.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.baeldung.com/java-asynchronous-programming"&gt;www.baeldung.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dzone.com/articles/async-await-in-java"&gt;dzone.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.baeldung.com/akka-actors-java"&gt;www.baeldung.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;If you like this article, please leave a like or a comment.&lt;/p&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/deepu105"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/deepu05/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cover image credit: Photo by &lt;a href="https://unsplash.com/@grape_eve"&gt;Evgeniya Litovchenko&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>concurrency</category>
      <category>java</category>
      <category>jvm</category>
      <category>languages</category>
    </item>
    <item>
      <title>What is Stored Procedure in SQL</title>
      <author>Abdur Rehman Khalid</author>
      <pubDate>Fri, 30 Apr 2021 11:37:21 +0000</pubDate>
      <link>https://dev.to/abdurrehmaan/what-is-stored-procedure-in-sql-4g9b</link>
      <guid>https://dev.to/abdurrehmaan/what-is-stored-procedure-in-sql-4g9b</guid>
      <description>&lt;p&gt;The new capabilities provided by stored procedures, require new disciplines for MySQL developers, only some of whom will have prior experience in stored program development using other relational databases.&lt;/p&gt;

&lt;h2&gt;what is store procedure &lt;/h2&gt;


&lt;p&gt;Stored Procedures are pre-compiled code which compiled for first time and its compiled format is saved, we call the compiled saved format whenever we want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H8yWkobd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkd01dzi0tda5398yuyb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H8yWkobd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkd01dzi0tda5398yuyb.png" alt="Store Procedure example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;How to create store procedure in sql ? &lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B9rEAmJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/835v8tvzx3j3ihc1lz3c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B9rEAmJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/835v8tvzx3j3ihc1lz3c.png" alt="How to create store procedur"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt; Stored Procedure Syntax &lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
CREATE PROCEDURE procedure_name
AS
sql_statement
GO;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt; Execute a Stored Procedure &lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
EXEC procedure_name; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>sql</category>
      <category>mysql</category>
      <category>database</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My roadmap to create makeresume.co</title>
      <author>Maximiliano Schvindt</author>
      <pubDate>Fri, 30 Apr 2021 11:36:21 +0000</pubDate>
      <link>https://dev.to/cuchu/my-roadmap-to-create-makeresume-co-27aa</link>
      <guid>https://dev.to/cuchu/my-roadmap-to-create-makeresume-co-27aa</guid>
      <description>&lt;p&gt;Hello people, this is my first post. I want to share a personal project and the roadmap (list of tools, languages or technologies) that I used to complete it. &lt;br&gt;
The project is &lt;strong&gt;&lt;a href="https://makeresume.co"&gt;makeresume.co&lt;/a&gt;&lt;/strong&gt;. There are a lot of similar projects with better qualities and features, but I was looking for the opportunity to learn and/or refresh some technologies, so, that wasn't a problem for me.&lt;/p&gt;

&lt;p&gt;The idea of this project was to learn/refresh some new technologies because I am currently working with some old ones (ColdFusion and AngularJS).&lt;/p&gt;

&lt;p&gt;So, some time ago I used &lt;a href="https://resume.io"&gt;resume.io&lt;/a&gt; and for me, that app is beautiful and I love it. "I can do something similar", I said.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intro&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I worked between 45 and 50 days (in my free time).&lt;/li&gt;
&lt;li&gt;The resume is generated using something similar to &lt;a href="https://jsonresume.org"&gt;jsonresume.org&lt;/a&gt; but with a few updates.&lt;/li&gt;
&lt;li&gt;The UI is like a copy (poor quality) of the &lt;a href="https://resume.io"&gt;resume.io&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Before starting the project, I watched some videos on YouTube to identify the best way to structure the code in the API (node.js) and also, I did a 5 hours duration free course to learn the basics about react.js.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;:&lt;br&gt;
&lt;em&gt;API&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9FLsZKS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfdjaama4e9pi0ffs16s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9FLsZKS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfdjaama4e9pi0ffs16s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
There is nothing strange here, a basic node.js project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;node.js - &lt;a href="https://nodejs.org"&gt;https://nodejs.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;express - &lt;a href="https://expressjs.com"&gt;https://expressjs.com&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;mongoose - &lt;a href="https://mongoosejs.com"&gt;https://mongoosejs.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;handlebars - &lt;a href="https://handlebarsjs.com"&gt;https://handlebarsjs.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;puppeteer - &lt;a href="https://pptr.dev"&gt;https://pptr.dev&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;nanoid - &lt;a href="https://www.npmjs.com/package/nanoid"&gt;https://www.npmjs.com/package/nanoid&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;dayjs - &lt;a href="https://day.js.org"&gt;https://day.js.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;PM2 - &lt;a href="https://pm2.keymetrics.io"&gt;https://pm2.keymetrics.io&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The API receives a json with the resume's data and it is processed with some services generating an HTML file (Handlebars) and then, generating a PDF (Puppeteer and Chrome).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;APP&lt;/em&gt;&lt;br&gt;
I tried to create most of the components and my idea is to create a repo with them and share it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;react.js using create-react-app - &lt;a href="https://create-react-app.dev/docs/getting-started"&gt;https://create-react-app.dev/docs/getting-started&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;react router dom - &lt;a href="https://reactrouter.com/web/guides/quick-start"&gt;https://reactrouter.com/web/guides/quick-start&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;axios - &lt;a href="https://www.npmjs.com/package/axios"&gt;https://www.npmjs.com/package/axios&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;fontawesome - &lt;a href="https://fontawesome.com"&gt;https://fontawesome.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;flexbox - &lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox"&gt;https://css-tricks.com/snippets/css/a-guide-to-flexbox&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;react draft wysiwyg - &lt;a href="https://www.npmjs.com/package/react-draft-wysiwyg"&gt;https://www.npmjs.com/package/react-draft-wysiwyg&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;smooth scrollbar - &lt;a href="https://idiotwu.github.io/smooth-scrollbar"&gt;https://idiotwu.github.io/smooth-scrollbar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;react tooltip - &lt;a href="https://wwayne.github.io/react-tooltip"&gt;https://wwayne.github.io/react-tooltip&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;react device detect - &lt;a href="https://www.npmjs.com/package/react-device-detect"&gt;https://www.npmjs.com/package/react-device-detect&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Deploy&lt;/em&gt;&lt;br&gt;
AWS - I am currently studying to get the AWS Practitioner Certification and the best way to learn something is using it.&lt;/p&gt;

&lt;p&gt;The landing page and the UI are in S3 buckets with a CloudFront. I am using CloudFront because I wanted to implement an SSL certificate.&lt;br&gt;
Domain and sub-domains with Route 53.&lt;br&gt;
The API runs with PM2 in an EC2 instance (Linux) with a Load Balancer (to use SSL).&lt;/p&gt;

&lt;p&gt;The database is hosted on MongoDB Atlas.&lt;/p&gt;

&lt;p&gt;And that is all at this moment, I will continue working to improve the application and learning new things.&lt;/p&gt;

&lt;p&gt;I made my resume with the app: &lt;a href="https://s.makeresume.co/4AQzSi8lCV"&gt;https://s.makeresume.co/4AQzSi8lCV&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading this article!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>career</category>
      <category>100daysofcode</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Optimization, the React way</title>
      <author>Prakhar Singh</author>
      <pubDate>Fri, 30 Apr 2021 10:58:56 +0000</pubDate>
      <link>https://dev.to/prx98/optimization-the-react-way-618</link>
      <guid>https://dev.to/prx98/optimization-the-react-way-618</guid>
      <description>&lt;p&gt;In this article, you'll learn about some of the best practices and how to optimize your React Web Application and create reusable components.&lt;/p&gt;

&lt;p&gt;1.Debouncing and Throttling: These are both optimization concepts which limit rate off function calls(API calls, loggers) with a delay.&lt;/p&gt;

&lt;p&gt;Debouncing:It takes a function and a delay and makes the function call only if the time interval between 2 calls is greater than delay. Use case: Search bar, scroll.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;debounce&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Throttling:It takes a function and a limit and makes the function call after the interval. Use case: Search bar, scroll.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;throttle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of writing them on your own, one can leverage it from Lodash as well.&lt;/p&gt;

&lt;p&gt;2.Component Composition: An alternative to prop drilling without using Redux or context API is Component composition. It relies heavily on the untamed power of children props.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Inner most passed prop&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Dashboard&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentNeedingProps&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Dashboard&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Dashboard&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;am&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;dashboard&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;     &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ComponentNeedingProps&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.Custom Hooks: A reusable custom hook is used to avoid creating too many similar components that share the same logic. It also improves the code of your application by removing duplicate code, making your application easier to maintain. Let's create a custom hook named useToggle that returns a status state and a toggleStatus handler function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useMemo&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;prevStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMemo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useToggle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now reuse our new custom hook as many times as needed in any component that will take advantage of using this shared logic.&lt;/p&gt;

&lt;p&gt;4.Optional Chaining and Nullish coalescing: Whenever you access a nested object property where you do not know if the sub object exists or not, we use &amp;amp;&amp;amp; operator to check.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nestedObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Prakhar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nestedObject&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;nestedObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;nestedObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nestedObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 22&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now with optional chaining&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nestedObject&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nullish coalescing operator (??) is a logical operator that returns its right-hand side expression when its left-hand side expression is null or undefined, and otherwise returns its left-hand side expression. Combining this with optional chaining we get:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nestedObject&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Address not specified&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Address not specified&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.Memoization: It is basically a form of optimization used mainly to speed up code by storing the results of expensive function calls and returning the stored result whenever the same expensive function is called again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Sample&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// memoize the component&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MemoizedSample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;memo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Sample&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Now when we call it&lt;/span&gt;
&lt;span class="c1"&gt;// On first render, React calls MemoizedSample function.&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MemoizedSample&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Alex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// On next render, React does not call MemoizedSample function,&lt;/span&gt;
&lt;span class="c1"&gt;// preventing rendering as the props are same&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MemoizedSample&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Alex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;6.Anonymous Functions: Avoid anonymous functions as they aren’t assigned an identifier (const/let/var), they aren’t persistent whenever a component inevitably gets rendered again. This causes JavaScript to allocate new memory each time this component is re-rendered, instead of allocating a single piece of memory only once, like when named functions are being used.&lt;/p&gt;

&lt;p&gt;There are many other ways of improving the performance of your React application and many blogs on it as well. If you have any questions, feel free to ask.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>react</category>
      <category>performance</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>UI testing - types of tests</title>
      <author>Kristijan Pajtasev</author>
      <pubDate>Fri, 30 Apr 2021 10:51:29 +0000</pubDate>
      <link>https://dev.to/hi_iam_chris/ui-testing-types-of-tests-4gea</link>
      <guid>https://dev.to/hi_iam_chris/ui-testing-types-of-tests-4gea</guid>
      <description>&lt;p&gt;If you like this text and are interested in more, follow me on Twitter or Linkedin and stay updated with my new posts.&lt;/p&gt;

&lt;p&gt;A question often asked in the interviews is: do you do any testing of your UI applications? And the expected answer is yes. But what kind of testing can you do for the UI applications? In this post, I am giving a top level of the four different types of testing.&lt;/p&gt;

&lt;p&gt;Unit testing&lt;br&gt;
The first and most basic type of testing is unit testing. You do this by taking a small piece of functionality and testing it independently from the rest of the system. One function, for example. Most often, you would test services this way. You pass the required parameters to the function and checking if the output is what you expect. There are few more things you might want to test with the unit tests. You could use spies for checking that your code runs some function, how many times, and with which parameters. When talking about unit tests, you can’t skip mocks. As said before, unit tests only test one piece of functionality. But what if that functionality uses some other service. With mocks, you can “fake” the response of that other service. A popular library for this kind of test is Chai.&lt;/p&gt;

&lt;p&gt;E2E testing&lt;br&gt;
The following most popular tests with the UI applications are end-to-end tests, or E2E for short. With this type of testing, you are testing your application as a whole. That might be manual clicking on your UI and checking that every button works as it is, that it interacts with API as intended and that the whole flow is correct. You can do it manually, and many companies have dedicated teams that run this manually. But there are excellent solutions that you can use for automatic tests like Selenium and Cypress.&lt;/p&gt;

&lt;p&gt;Integration testing&lt;br&gt;
Integration tests are a bit specific. In this case, you are combining multiple elements and testing how they work together. These tests kind of sit between the unit and E2E tests. An example of this test would be checking that the home page is showed after filling in the login details and clicking the button. You could mock login service, so you are not doing full e2e, just functionality between login page, router, and home page.&lt;/p&gt;

&lt;p&gt;Snapshot testing&lt;br&gt;
The final, and very UI-specific type of testing, is snapshot testing. During this type of testing, you generate a rendered version of your code—final HTML. Then you compare this version with the previous run version. If there are differences, the test fails. This way, you are getting a report of the effects your change has on the output, and you can detect any unwanted ones. If only wanted changes are present, you save the new snapshot and use it as the new version for the next run.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>testing</category>
      <category>codenewbie</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Some mistakes you may make in PHP</title>
      <author>Thien DX</author>
      <pubDate>Fri, 30 Apr 2021 10:20:01 +0000</pubDate>
      <link>https://dev.to/tdx/some-mistakes-you-may-make-in-php-3ld1</link>
      <guid>https://dev.to/tdx/some-mistakes-you-may-make-in-php-3ld1</guid>
      <description>&lt;p&gt;Fast, flexible and pragmatic, PHP powers everything from your blog to the most popular websites in the world. Still during my work, I found it can have tricky behaviors that you may not aware of (yet) and create bugs in your code. &lt;br&gt;
Here are some of the most common mistakes I encountered :&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#arraymerge"&gt;
  &lt;/a&gt;
  array_merge
&lt;/h2&gt;

&lt;p&gt;Syntax : &lt;em&gt;array_merge ( array ...$arrays ) : array&lt;/em&gt;&lt;br&gt;
The function simply merges the elements of arrays together. But it also &lt;strong&gt;reset&lt;/strong&gt; the keys of elements if it's numeric. &lt;br&gt;
For example, a very basic use-case where you have arrays storing &lt;code&gt;[UserId =&amp;gt; UserName]&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$userArr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"3"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Mary"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$userArr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Ted"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"22"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Doe"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;


&lt;span class="nv"&gt;$allUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$userArr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$userArr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// $allUser will be&lt;/span&gt;
&lt;span class="c1"&gt;// Array&lt;/span&gt;
&lt;span class="c1"&gt;// (&lt;/span&gt;
&lt;span class="c1"&gt;//    [0] =&amp;gt; John&lt;/span&gt;
&lt;span class="c1"&gt;//    [1] =&amp;gt; Mary&lt;/span&gt;
&lt;span class="c1"&gt;//    [2] =&amp;gt; Ted&lt;/span&gt;
&lt;span class="c1"&gt;//    [3] =&amp;gt; Doe&lt;/span&gt;
&lt;span class="c1"&gt;// )&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Casting the numeric value to string like (string)10 won't work. This behavior is same for &lt;code&gt;array_merge_recursive()&lt;/code&gt;, so you should keep this in mind when calling these functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#empty"&gt;
  &lt;/a&gt;
  empty
&lt;/h2&gt;

&lt;p&gt;Syntax : &lt;em&gt;empty ( mixed $var ) : bool&lt;/em&gt;&lt;br&gt;
This check whether a variable is empty. Many use this function to check whether a key is set in array. It's all good and simple until value 0 came in.&lt;br&gt;
For example, an user submit formed validation code :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Function to check all required field are provided by user&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;checkRequiredFields&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$requiredField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'number_of_kids'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 
    &lt;span class="nv"&gt;$errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requiredField&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nv"&gt;$errors&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="s2"&gt; is missing"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$errors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// A valid use-case in real likfe&lt;/span&gt;
&lt;span class="nv"&gt;$userData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'age'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'number_of_kids'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nv"&gt;$inputError&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;checkRequiredFields&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$userData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// This return "number_of_kids is missing"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is because 0 is also considered as "empty" even though it's a valid response in many use-cases. I find people make this mistake mostly when validating user's input.&lt;br&gt;
A work around is adding &lt;code&gt;strlen($var)&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ternary-operator-vs-null-coalescing-operator-"&gt;
  &lt;/a&gt;
  Ternary operator (?:) vs null coalescing operator (??)
&lt;/h2&gt;

&lt;p&gt;When your first argument is null, they're basically the same&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// default&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// default&lt;/span&gt;

&lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// default&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// default&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Except that the Ternary operator will output an E_NOTICE when you have an undefined variable.&lt;/p&gt;

&lt;p&gt;But when the first argument is not null, they are different :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// default&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it.
&lt;/h3&gt;

&lt;p&gt;Hope my short article can save you some debugging time.&lt;/p&gt;

</description>
      <category>php</category>
    </item>
    <item>
      <title>We Should Stop Hating Web Components </title>
      <author>rwbeast</author>
      <pubDate>Fri, 30 Apr 2021 10:19:13 +0000</pubDate>
      <link>https://dev.to/rwbeast/we-should-stop-hating-web-components-4a6h</link>
      <guid>https://dev.to/rwbeast/we-should-stop-hating-web-components-4a6h</guid>
      <description>&lt;p&gt;So you just heard about this thing called web components and you did a quick google search. apart from a few tutorials and some github pages you also see these catchy articles whose headings starts with "Web Components Doomed" or "Web Components are not the future". The Words might be different but each of those articles try to woo you away from using or even trying out Web Components.&lt;/p&gt;

&lt;p&gt;They tell you that Web Components are not being used anywhere and it was destined to fail. but they are telling you only the half truth.&lt;/p&gt;

&lt;p&gt;Although its true that Web Components aren't as popular as React or Vue or any other framework, but that does not means they are not being used anywhere. Google has been using web components for a while in many of its platforms. infact Angular also uses Web Components Under the hood.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0-PpZPAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6bkahnhnwqfpaew8kij.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0-PpZPAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6bkahnhnwqfpaew8kij.png" alt="Web.dev a part of Google Developers network"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github uses a set of custom elements called &lt;a href="https://github.com/github/github-elements"&gt;Github Elements&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HgjjuHqW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7ilxry2glo960h2o0so.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HgjjuHqW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7ilxry2glo960h2o0so.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They also try to scare you by saying there are only a few libraries available for making web components. But the fact is that there a lot of libraries available for easing the development process of web components like &lt;a href="https://lit-element.polymer-project.org/guide"&gt;LitElements&lt;/a&gt;, &lt;a href="https://www.fast.design/"&gt;FastElements&lt;/a&gt; by Microsoft and &lt;a href="https://github.com/salesforce/lwc"&gt;Lightning Web Components&lt;/a&gt; By Salesforce. These Libraries are not just actively maintained but infact the number of their users is also increasing. The &lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;State Of JS 2020&lt;/a&gt; ranks LitElements above Angular. There's also stencil, which is not a framework but a compiler which allows you to use technologies such as JSX and Virtual DOM for creating web components.&lt;/p&gt;

&lt;p&gt;But In the end, I accept at first Web Components seem to make simple tasks more complex because you have to use VanillaJS for interacting with the DOM and the state management is still a mystery. but it allows you to create a functional web app without any build process and its also very fast. What Web Components lack now are resources and good tutorials.&lt;/p&gt;

&lt;p&gt;Leave your thoughts about Web Components in the comments.&lt;/p&gt;

&lt;p&gt;Jai Hind!&lt;/p&gt;

</description>
      <category>webcomponents</category>
      <category>webdev</category>
      <category>vanillajs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The iOS journey</title>
      <author>Maarten van der Velden</author>
      <pubDate>Fri, 30 Apr 2021 10:02:39 +0000</pubDate>
      <link>https://dev.to/catawiki/the-ios-journey-2lba</link>
      <guid>https://dev.to/catawiki/the-ios-journey-2lba</guid>
      <description>&lt;p&gt;Catawiki is more than a great website, we also develop and maintain native mobile apps for both Android and iOS. This post will cover the history of our iOS app and evolution of our technological stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T2Rvi_-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtkepicz50360ewff68h.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T2Rvi_-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtkepicz50360ewff68h.jpeg" alt="Catawiki iOS app early days"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-early-days-20142016"&gt;
  &lt;/a&gt;
  The Early Days (2014-2016)
&lt;/h2&gt;

&lt;p&gt;When Catawiki was up-and-running as an &lt;a href="https://dev.to/catawiki/the-frontend-journey-ck"&gt;auction website&lt;/a&gt;, around 2013-2014, we started looking into new ways of reaching our customers and seeing opportunities in the world of smartphones. An external company was attracted to start work on native mobile apps for both Android and iOS and a dedicated API was set up to support this.Eventually the first internal iOS developers were hired to release and expand the app. Initially, this app only contained bidding and buying functionality.&lt;/p&gt;

&lt;p&gt;At that stage, the architecture of the app was pretty standard for its time: using Objective-C and an MVC architecture.The v1 generation of our app was only available on iPhone. In late 2015, we started working to make our app available on iPad, by making it universal. This means that we bundled iPhone and iPad screens in one app. It was released as our v2.0 in 2016, after testing this with external beta testers, for the first time. These testers were current app users and colleagues.&lt;/p&gt;

&lt;p&gt;In 2016, another team started building a separate app for Catawiki Sellers to submit lots for sale and to maintain an overview of these lots throughout the auction and sales process. With this change, we also slowly started introducing our first frameworks to be able to share code across the two apps.&lt;/p&gt;

&lt;p&gt;During this time, some pain points of the old approach became visible: having two separate apps made it harder to reuse the same code, having separate mobile teams and a dedicated mobile backend made it harder to keep feature parity with the backend and web teams, and increased the technical debt. It  was also confusing for users and hard to scale up the teams in a growing company.&lt;/p&gt;

&lt;p&gt;On a technical level, Swift was released and became a mature programming language and we started running into the issues with the MVC pattern: plenty of hard-to-maintain Massive View Controllers, lots of tight coupling which made maintenance difficult and new features that were hard to make.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rFIrPSUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifbizrssbouej7rjd0yl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rFIrPSUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifbizrssbouej7rjd0yl.png" alt="Old Catawiki iOS iPad app version"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#towards-a-more-mature-app-20172020"&gt;
  &lt;/a&gt;
  Towards a More Mature App (2017-2020)
&lt;/h2&gt;

&lt;p&gt;Around 2016-2017, a lot of big changes were about to happen to the Catawiki iOS app, both for users, for developers and for the code itself. After our first experiments with it in 2016, we decided to develop all new features in Swift from 2017 onwards.&lt;/p&gt;

&lt;p&gt;In 2017, we also integrated our seller app into our buyer app. We did this by extracting the seller code into an SDK, a separate Swift Framework, marking the start of modularisation of our code incrementally into separate frameworks. This became v3.0.&lt;/p&gt;

&lt;p&gt;To also start solving the maintenance issues involved with MVC, we started building new features in the &lt;a href="https://www.objc.io/issues/13-architecture/viper/"&gt;VIPER architecture&lt;/a&gt;. This has helped us a lot in giving our code more structure, making features and screens more reusable.&lt;/p&gt;

&lt;p&gt;Later in 2017, the development teams were reorganised and the mobile developers were integrated into full-stack feature teams. This helped us focus on getting rid of all the discrepancies between the mobile apps and web, including a push to use the same APIs for all three platforms.&lt;/p&gt;

&lt;p&gt;The combinations of all these changes, while still having a small team of around four iOS devs, meant that most of the transitions we started around this time weren’t completed overnight. Because there was also ongoing development for new features and fixes for our live app, we had to be very pragmatic in migrating to Swift, VIPER, Frameworks, and new APIs. We tried to do it all at once when a certain screen was scheduled for big features or changes, but in general the process required longer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1WI-H4m6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esacge3ckv9aisfh0xv0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1WI-H4m6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esacge3ckv9aisfh0xv0.png" alt="Catawi iOS app home screen before rebranding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-new-hope-amp-brand-2020"&gt;
  &lt;/a&gt;
  A New Hope (&amp;amp; Brand) (2020-)
&lt;/h2&gt;

&lt;p&gt;We were heading in a good direction. We accelerated our evolution when we started work on the Catawiki 2.0 branding. Simultaneously, we grew our iOS platform team to nine developers. Because of this, we were able to focus on some of our oldest parts of the code, and bring them up to the latest standards. This is a good example of how we take managing our technical debt seriously. In September 2020, we were able to release the new brand (v4.0), and are continuing to migrate the last old parts of the app to make them Swift, VIPER and use up-to-date Microservice APIs, while also creating more Swift Frameworks. We expect this effort to be finally finished by the end of 2021.&lt;/p&gt;

&lt;p&gt;Will that mean iOS developers at Catawiki will be “done”? Besides our product and UX people coming up with ever new and improved features, we’re already looking towards the iOS tech stack of the future, like how SwiftUI could (or rather, will) replace UIKit in our app, and whether VIPER will still be a good architecture for us in that case.&lt;/p&gt;

&lt;p&gt;If you’d like to &lt;a href="https://stackoverflow.com/jobs/companies/catawiki"&gt;join us on our journey&lt;/a&gt; of continuously improving our apps and delighting our customers, give us a &lt;a href="//mailto:recruitment@catawiki.nl"&gt;shout&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQJk0Y5y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kojjjmvavmc6ka3rsz2f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQJk0Y5y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kojjjmvavmc6ka3rsz2f.png" alt="Catawiki rebranded iOS app"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Co-authored by &lt;a href="https://dev.to/steveleviathan"&gt;Steve Overmars&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cover photo by &lt;a href="https://unsplash.com/@ernestovdp"&gt;Ernesto Velázquez&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>catawiki</category>
      <category>history</category>
      <category>ios</category>
    </item>
    <item>
      <title>How to Minimize Software Development Risks</title>
      <author>SolveIt</author>
      <pubDate>Fri, 30 Apr 2021 09:59:18 +0000</pubDate>
      <link>https://dev.to/solveit/how-to-minimize-software-development-risks-4fo4</link>
      <guid>https://dev.to/solveit/how-to-minimize-software-development-risks-4fo4</guid>
      <description>&lt;p&gt;There are many problems in the software development process: technical, organizational, human factors. In this article we'll talk about the six main risks faced by the client and the development team. We will also explain how to minimize software development risks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-software-development"&gt;
  &lt;/a&gt;
  What is Software Development?
&lt;/h2&gt;

&lt;p&gt;It is the process of development, identifying, projection, programming, documenting, testing, and bug fixing involved in making and maintaining applications, frameworks and other software components. It is a big process of creating and serving code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q0tlWL1l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/selfol45zgbumcjpt1xe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q0tlWL1l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/selfol45zgbumcjpt1xe.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-manage-risks-in-software-development"&gt;
  &lt;/a&gt;
  How To Manage Risks In Software Development
&lt;/h1&gt;

&lt;p&gt;Any mobile app development project involves certain risks. Risks can vary from project to project and should always be considered during development, but in general, they can be divided into six main categories. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-6-software-development-risks-and-mitigation"&gt;
  &lt;/a&gt;
  Top 6 Software Development Risks and Mitigation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-wrong-assessment"&gt;
  &lt;/a&gt;
  1. Wrong assessment
&lt;/h3&gt;

&lt;p&gt;When project estimates are created, it happens that they fall short of expectations. The team may select project iteration duration, technology stack and other factors. Disagreements often arise between the client and the team, which leads to an increase in the duration of the task, costs, which can lead to the client will run out of money and won't be able to finish the project.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-minimize-this-risk"&gt;
  &lt;/a&gt;
  How to minimize this risk:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Сomplete only those tasks that are most important;&lt;/li&gt;
&lt;li&gt;Add time for developers to learn and mitigate risks in a new project's parts;&lt;/li&gt;
&lt;li&gt;Add the assumed period for the development team during the week on a task beyond the project;&lt;/li&gt;
&lt;li&gt;In project management, the cone of uncertainty describes the development of best case uncertainty during the project. At the start of projects, little is known about the product or the results of the work, so estimates are subject to great uncertainty.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-capacity-variation"&gt;
  &lt;/a&gt;
  2. Capacity variation
&lt;/h3&gt;

&lt;p&gt;A сapacity variation happens if the power of an iteration is changed after the time ranges have been approved. Product owners often want to change the scope of a project. This puts a lot of risk on projects. When the сapacity varies, it greatly affects the developers' ability to follow the initial project schedule.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-minimize-this-risk"&gt;
  &lt;/a&gt;
  How to minimize this risk:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Small, easy-to-manage iterations of Agile methodology lets you to think and resize your project more frequently;&lt;/li&gt;
&lt;li&gt;Development of more important tasks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-enduser-engagement"&gt;
  &lt;/a&gt;
  3. End-user Engagement
&lt;/h3&gt;

&lt;p&gt;This is imperative due to the fact that users will almost accept the software and be connected with its success. You need to understand your users' feedback. These mitigation strategies simplify implementation through agile development.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-minimize-this-risk"&gt;
  &lt;/a&gt;
  How to minimize this risk:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;User testing and feedback;&lt;/li&gt;
&lt;li&gt;Focus groups;&lt;/li&gt;
&lt;li&gt;Frequent releases;&lt;/li&gt;
&lt;li&gt;Beta testing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-low-quality-code"&gt;
  &lt;/a&gt;
  4. Low quality code
&lt;/h3&gt;

&lt;p&gt;Poor code quality is one of the most common problems in development and one of the biggest pains of the client. Most often the client does not understand the code and cannot determine its quality. At the end of the project it turns out that the product doesn't work because the developers wrote low-quality code with a lot of bugs, without testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ljct3Wk6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcq3j7vkv0jxe72ioe73.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ljct3Wk6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcq3j7vkv0jxe72ioe73.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-minimize-this-risk"&gt;
  &lt;/a&gt;
  How to minimize this risk:
&lt;/h4&gt;

&lt;p&gt;It is important for developers to maintain a high standard for their code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implementing User Acceptance Criteria;&lt;/li&gt;
&lt;li&gt;A client can hire a project manager or CTO, who can check the quality of the code and supervise the development team;&lt;/li&gt;
&lt;li&gt;Follow the company's system of Clear Coding Standards and Guidelines;&lt;/li&gt;
&lt;li&gt;Testing after each code iteration; &lt;/li&gt;
&lt;li&gt;Before starting working with a development company, the client can look at a similar project, have a technical interview, or check out the company's Clear Coding Standards.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-low-stakeholder-engagement"&gt;
  &lt;/a&gt;
  5. Low Stakeholder Engagement
&lt;/h3&gt;

&lt;p&gt;In order to keep a high level of productivity and meet the agreed deadlines of the project, the client or stakeholder needs to communicate with the development team or project manager often enough. If this is not done, it is possible to lose contact with the team, which can lead to misunderstandings on both sides and increase the project's timeline. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-minimize-this-risk"&gt;
  &lt;/a&gt;
  How to minimize this risk:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It is necessary to clearly stipulate when the client and customer will be able to conduct User Acceptance Testing. It is important to agree on a response time if either party has a problem or question about the project;&lt;/li&gt;
&lt;li&gt;Effective selection of Delivery and project goals and priorities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-inadequate-human-resources"&gt;
  &lt;/a&gt;
  6. Inadequate Human Resources
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4XluwtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2sl2h1rctg2imtpav8t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4XluwtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2sl2h1rctg2imtpav8t.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sometimes a stakeholder or a team member has to leave a project unexpectedly for various reasons. Because of this, the project is put on hold until a replacement team member can be found, which increases the project's timeline.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-minimize-this-risk"&gt;
  &lt;/a&gt;
  How to minimize this risk:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Documentation of the whole process by the development team;&lt;/li&gt;
&lt;li&gt;A good internal hr-system that if such a situation arises, the team member can be quickly replaced with another;&lt;/li&gt;
&lt;li&gt;A Project Manager should frequently monitor his team's workload schedule to quickly replace a team member to another project.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#who-can-do-to-the-risk-management-in-software-development"&gt;
  &lt;/a&gt;
  Who Can Do To the Risk Management In Software Development
&lt;/h2&gt;

&lt;p&gt;A Project manager is responsible for all tasks related to the project. A Business analyst doing identification and analysis of project requirements. Together they can help to do successful products and to minimize software development risk. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eUJJiLbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8ixz720woyk7h9c0105.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eUJJiLbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8ixz720woyk7h9c0105.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-manager-and-risk-management"&gt;
  &lt;/a&gt;
  Project manager and risk management
&lt;/h3&gt;

&lt;p&gt;PM's primary responsibility is to carry the customer's idea to finality on time using existing resources. Project Manager needs to create a development plan, organize the team, set up the process of working on the project, give feedback between the teams and the customer, liquidate obstacles for the teams, control the quality and delivery of the product on time.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Development of a new product or new functionalities. The PM organizes a meeting with the technical architect and developers, announces the tasks that they have to solve. As a result, the team determines the solutions that development will take.&lt;/li&gt;
&lt;li&gt;Planning. It is important to take into account all the factors affecting the development progress, including the qualifications of employees and the associated risks, dependence on third-party services, and bug fixing.&lt;/li&gt;
&lt;li&gt;The control. A daily repeated action that a PM needs to understand what's going on in the project and always keep a finger on the pulse. &lt;/li&gt;
&lt;li&gt;Fast solution of emerging problems.&lt;/li&gt;
&lt;li&gt;Communication with the customer, the team, accompanying employees at all stages of the project development.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#business-analyst-and-software-development-risk-management"&gt;
  &lt;/a&gt;
  Business Analyst and software development risk management
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--atWViCpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oydz14k5cwrmplvxxjsp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--atWViCpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oydz14k5cwrmplvxxjsp.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Business Analyst is the person on the project who must identify the client's business problems and find the most effective solution to solve them. At all stages of software development the business analyst analyzes requirements and acts as a bridge between the development team and the client. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identifying customer requirements for the project;&lt;/li&gt;
&lt;li&gt;Documenting the requirements for the future project; &lt;/li&gt;
&lt;li&gt;Prototyping customer requirements, brainstorming with the customer and the development team, making tests and questionnaires to better understand and analyze the requirements;&lt;/li&gt;
&lt;li&gt;Identification of project pain points based on the analysis. Suggesting ways to optimize processes and solve possible problems on the project;&lt;/li&gt;
&lt;li&gt;Writing a specification, optimization of requirements for the project;&lt;/li&gt;
&lt;li&gt;Passing on the optimized and analyzed requirements from the customer to the development team. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-main-risk"&gt;
  &lt;/a&gt;
  The main risk
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#for-company"&gt;
  &lt;/a&gt;
  For company
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Make over budget if it was a fixed price method.&lt;/li&gt;
&lt;li&gt;Get more requirements from customers in the development process and violation Software Requirement Specification.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#for-clients"&gt;
  &lt;/a&gt;
  For clients
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Don't fit into the budget.&lt;/li&gt;
&lt;li&gt;Get a low-quality solution that will break. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The client's solution:&lt;/em&gt;&lt;/strong&gt; hire a specialist from your side, who will check the code and communicate competently with the development team. This is expensive, so many clients choose fixed prices from responsibility models in order not to go beyond the budget.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#follow-solveits-checklist-to-know-how-to-minimize-software-development-risk"&gt;
  &lt;/a&gt;
  Follow SolveIt’s checklist to know how to minimize software development risk:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Develop a detailed technical specification;&lt;/li&gt;
&lt;li&gt;Choose the right engagements model based on the funds and advice of the CTO;&lt;/li&gt;
&lt;li&gt;Follow the previously developed SRS documentation, avoid adding new product requirements during development.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Originally published at &lt;a href="https://solveit.dev"&gt;https://solveit.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>development</category>
      <category>software</category>
      <category>developers</category>
      <category>developmentrisks</category>
    </item>
    <item>
      <title>🦄 12 Iconic developer types</title>
      <author> 🐤🥇 Jasper de Jager</author>
      <pubDate>Fri, 30 Apr 2021 09:37:18 +0000</pubDate>
      <link>https://dev.to/jmdejager/12-iconic-developer-types-10gd</link>
      <guid>https://dev.to/jmdejager/12-iconic-developer-types-10gd</guid>
      <description>&lt;h1&gt;
  &lt;a href="#weve-made-it-to-twelve"&gt;
  &lt;/a&gt;
  We've made it to twelve! 🎉
&lt;/h1&gt;

&lt;p&gt;🧐🤠🤪🤓🦄🚫🏹🎅😳🤷‍♀️🐙🤑 &lt;/p&gt;

&lt;p&gt;Already twelve iconic developer types created 😎&lt;br&gt;
I noticed a lot of types were recognized by the readers, so I came up with the following questions for you:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What developer type(s) do you relate to the most?&lt;br&gt;
What developer types do you have in your team?&lt;br&gt;
What developer types could you use in your team?&lt;br&gt;
What is your favorite iconic developer type?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If, by thinking about this, you get some inspiration to write a new iconic developer profile please leave it in the comments!&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/jmdejager" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8W7sdD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LKoll5jw--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/585443/75085886-a2b8-4def-86e3-c1ece79db805.jpeg" alt="jmdejager image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jmdejager/iconic-developers-51m5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Iconic developers  🧐🤠🤪&lt;/h2&gt;
      &lt;h3&gt; 🐤🥇 Jasper de Jager ・ Apr 14 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
1) 🧐 The know-it-all&lt;br&gt;
2) 🤠 The cowboy&lt;br&gt;
3) 🤪 The funny one





&lt;div class="ltag__link"&gt;
  &lt;a href="/jmdejager" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8W7sdD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LKoll5jw--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/585443/75085886-a2b8-4def-86e3-c1ece79db805.jpeg" alt="jmdejager image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jmdejager/iconic-developers-part-2-250j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Iconic developers | part 2 🤓🦄🚫&lt;/h2&gt;
      &lt;h3&gt; 🐤🥇 Jasper de Jager ・ Apr 15 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
4) 🤓 The perfectionist&lt;br&gt;
5) 🦄 The Unicorn&lt;br&gt;
6) 🚫 Doctor no





&lt;div class="ltag__link"&gt;
  &lt;a href="/jmdejager" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8W7sdD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LKoll5jw--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/585443/75085886-a2b8-4def-86e3-c1ece79db805.jpeg" alt="jmdejager image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jmdejager/iconic-developers-part-3-47fc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Iconic developers | part 3 🏹🎅😳&lt;/h2&gt;
      &lt;h3&gt; 🐤🥇 Jasper de Jager ・ Apr 19 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
7) 🏹 The Bug Buster&lt;br&gt;
8) 🎅 The tools Santa&lt;br&gt;
9) 😳 The branch breaker





&lt;div class="ltag__link"&gt;
  &lt;a href="/jmdejager" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8W7sdD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LKoll5jw--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/585443/75085886-a2b8-4def-86e3-c1ece79db805.jpeg" alt="jmdejager image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jmdejager/iconic-developers-part-4-50nb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Iconic developers | part 4  🤷‍♀️🐙🤑&lt;/h2&gt;
      &lt;h3&gt; 🐤🥇 Jasper de Jager ・ Apr 23 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
10) 🤷‍♂️ The WOMM developer&lt;br&gt;
11) 🐙 The unfortunate full-stack&lt;br&gt;
12) 🤑 The Client's Butler




&lt;h2&gt;
  &lt;a href="#so-please-tell-me"&gt;
  &lt;/a&gt;
  So please tell me 😎
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;What developer type(s) do you relate to the most?&lt;br&gt;
What developer types do you have in your team?&lt;br&gt;
What developer types could you use in your team?&lt;br&gt;
What is your favorite iconic developer type?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@markuswinkler?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Markus Winkler&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/emoji?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>The &amp;lt;site-head&gt; Web Component you never see in F12 Dev Tools</title>
      <author>Danny Engelman</author>
      <pubDate>Fri, 30 Apr 2021 09:24:40 +0000</pubDate>
      <link>https://dev.to/dannyengelman/the-lt-site-head-web-component-you-never-see-in-f12-dev-tools-147f</link>
      <guid>https://dev.to/dannyengelman/the-lt-site-head-web-component-you-never-see-in-f12-dev-tools-147f</guid>
      <description>&lt;p&gt;I have a family of HTML websites that all have similar design, but different titles, description and SEO keywords&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/link2twenty/mxbf3c0v/embedded/result//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;For each and every site I need to add&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Title siteA"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Description siteA"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- and many more tags --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#i-want-a-single-location-to-update-all-sites-meta-data"&gt;
  &lt;/a&gt;
  I want a single location to update &lt;strong&gt;all&lt;/strong&gt; sites meta data
&lt;/h3&gt;

&lt;p&gt;Traditionally you would solve this with an &lt;strong&gt;SSR&lt;/strong&gt; (Server Side Rendering) solution.&lt;/p&gt;

&lt;p&gt;But my source is &lt;strong&gt;&lt;em&gt;bare&lt;/em&gt; HTML&lt;/strong&gt;, not created by any Server script.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;and&lt;/em&gt;&lt;/strong&gt; SSR can &lt;strong&gt;not read&lt;/strong&gt; any &lt;strong&gt;Client Side&lt;/strong&gt; settings, like URL Parameters, sessionStorage or localStorage.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#a-csr-client-side-rendering-web-component-ltsiteheadgt"&gt;
  &lt;/a&gt;
  a &lt;strong&gt;CSR&lt;/strong&gt; (Client Side Rendering) Web Component : &amp;lt;site-head&amp;gt;
&lt;/h2&gt;

&lt;p&gt;Web Components can create DOM elements. &lt;br&gt;
Then one Web Component can create all &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; DOM elements.&lt;/p&gt;

&lt;p&gt;⚠️ and after it has done the work, &lt;strong&gt;remove itself from the DOM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;site-head&lt;/span&gt; &lt;span class="na"&gt;site=&lt;/span&gt;&lt;span class="s"&gt;"A"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Description of this site&lt;span class="nt"&gt;&amp;lt;/site-head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The JavaScript required is very simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;site-head&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// append all &amp;lt;meta&amp;gt; tags to document.head&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#it-is-magic-raw-ltsiteheadgt-endraw-was-never-in-the-ltheadgt"&gt;
  &lt;/a&gt;
  It is magic, &lt;code&gt;&amp;lt;site-head&amp;gt;&lt;/code&gt; was never in the &amp;lt;head&amp;gt;
&lt;/h2&gt;

&lt;p&gt;If you do &lt;strong&gt;not&lt;/strong&gt; remove the &lt;code&gt;&amp;lt;site-head&amp;gt;&lt;/code&gt; element with &lt;code&gt;this.remove()&lt;/code&gt;, &lt;/p&gt;

&lt;p&gt;you will notice some (maybe) unexpected behaviour:&lt;/p&gt;

&lt;p&gt;Although the Web Component is &lt;strong&gt;defined&lt;/strong&gt; in the &lt;strong&gt;&amp;lt;head&amp;gt;&lt;/strong&gt; of the HTML document.&lt;/p&gt;

&lt;p&gt;⚠️ The Browser &lt;strong&gt;&lt;em&gt;moves&lt;/em&gt;&lt;/strong&gt; the Element  to the &lt;strong&gt;&amp;lt;body&amp;gt;&lt;/strong&gt; ⚠️&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will log &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
This is because &lt;code&gt;&amp;lt;site-head&amp;gt;&lt;/code&gt; is &lt;strong&gt;not a valid HEAD Element&lt;/strong&gt;: &lt;code&gt;meta, link, title, style, script, noscript, base&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The Web Component &lt;strong&gt;is correctly executed&lt;/strong&gt; after being placed in the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; by the Browser.&lt;/p&gt;




&lt;p&gt;This is very annoying when you create a CSR &lt;code&gt;&amp;lt;css-grid&amp;gt;&lt;/code&gt; that applies a CSS grid to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag, because &lt;code&gt;&amp;lt;site-head&amp;gt;&lt;/code&gt; now &lt;strong&gt;is&lt;/strong&gt; a grid element, until it is removed.&lt;/p&gt;

&lt;p&gt;And maybe you are doing async stuff in &lt;code&gt;&amp;lt;site-head&amp;gt;&lt;/code&gt;, so the &lt;code&gt;this.remove()&lt;/code&gt; executes late.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#vanish-go-away-get-out-of-that-raw-ltbodygt-endraw-"&gt;
  &lt;/a&gt;
  Vanish! Go away! Get out of that &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;!
&lt;/h2&gt;

&lt;p&gt;Because Web Components trigger the &lt;code&gt;disconnectedCallback&lt;/code&gt; when removed from the DOM. &lt;/p&gt;

&lt;p&gt;The Web Component can &lt;strong&gt;immediately be removed&lt;/strong&gt; from the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; in the &lt;code&gt;connectedCallback&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;⚠️ The element and all its attributes and content is still available in the &lt;code&gt;disconnectedCallback&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;⚠️ But the element is no longer in the DOM&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;site-head&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;disconnectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;site-head&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// null&lt;/span&gt;
    &lt;span class="c1"&gt;// append all &amp;lt;meta&amp;gt; tags to document.head&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#all-raw-ltsiteheadgt-endraw-web-component-code-required"&gt;
  &lt;/a&gt;
  All &lt;code&gt;&amp;lt;site-head&amp;gt;&lt;/code&gt; Web Component code required
&lt;/h2&gt;

&lt;p&gt;Here is code to get you started&lt;/p&gt;

&lt;p&gt;You can get inspiration from:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Everything you can do in &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; : &lt;a href="https://htmlhead.dev/#elements"&gt;https://htmlhead.dev/#elements&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Vue Component setting &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; content : &lt;a href="https://github.com/ktquez/vue-head"&gt;https://github.com/ktquez/vue-head&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/link2twenty/mxbf3c0v/embedded/js,html//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#challenge"&gt;
  &lt;/a&gt;
  Challenge
&lt;/h2&gt;

&lt;p&gt;Now it is your turn to create &lt;strong&gt;any&lt;/strong&gt; gameboard with a CSR &lt;code&gt;&amp;lt;css-grid&amp;gt;&lt;/code&gt; Web Component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;css-grid&lt;/span&gt; &lt;span class="na"&gt;background=&lt;/span&gt;&lt;span class="s"&gt;"khaki"&lt;/span&gt; 
          &lt;span class="na"&gt;files=&lt;/span&gt;&lt;span class="s"&gt;"ABCDEFGH"&lt;/span&gt; 
          &lt;span class="na"&gt;ranks=&lt;/span&gt;&lt;span class="s"&gt;"12345678"&lt;/span&gt; 
          &lt;span class="na"&gt;gap=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; 
          &lt;span class="na"&gt;colors=&lt;/span&gt;&lt;span class="s"&gt;"#f0e9c5/#b58863"&lt;/span&gt; 
          &lt;span class="na"&gt;labels=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/css-grid&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;







&lt;h3&gt;
  &lt;a href="#my-web-component-devto-posts"&gt;
  &lt;/a&gt;
  My Web Component Dev.to posts
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/dannyengelman/what-web-technologies-are-required-to-draw-a-pie-chart-in-2021-spoiler-alert-a-standard-web-component-will-do-1j56"&gt;What Web technologies are required to draw a Pie Chart in 2021? &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/dannyengelman/web-components-using-unknownhtmlelements-for-better-semantic-html-5d8c"&gt;Web Components using UnknownHTMLElements for better semantic HTML&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/dannyengelman/the-lt-site-head-web-component-you-never-see-in-f12-dev-tools-147f"&gt;The  Web Component you never see in F12 Dev Tools&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webcomponent</category>
      <category>webcomponents</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Use Reseter.css Instead Of Normalize and Reset.css. To Improve Cross Browser Experience.</title>
      <author>Krish Dev DB</author>
      <pubDate>Fri, 30 Apr 2021 09:06:49 +0000</pubDate>
      <link>https://dev.to/krishdevdb/use-reseter-css-instead-of-normalize-and-reset-css-to-improve-cross-browser-experience-13gn</link>
      <guid>https://dev.to/krishdevdb/use-reseter-css-instead-of-normalize-and-reset-css-to-improve-cross-browser-experience-13gn</guid>
      <description>&lt;p&gt;With the current web production, I think that the existing Reset.css and Normalize.css have fewer features and lack many things. I am introducing you to a new CSS Normalizer created as a futuristic alternative to normalize.css and reset.css.&lt;/p&gt;

&lt;p&gt;Reseter.css has customizable browser support, which is by default all not dead browsers. It has also taken accessibility into concern. It's also packed with modern CSS techniques.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-resetercss"&gt;
  &lt;/a&gt;
  Features of Reseter.css
&lt;/h2&gt;

&lt;p&gt;It unifies all of your browser default styles by redefining premade styles. That's a big difference where normalize tries to preserve and reseter.css redefines for even more browser support. Normalize works with the browsers kept in mind while building it. Reseter.css supports every single browser. Reseter.css improves cross-browser support. &lt;/p&gt;

&lt;p&gt;Fixed bugs and browser inconsistencies&lt;br&gt;
Reboots various element styles&lt;br&gt;
Available in Sass, Scss, Less, Stylus, Styled Components (js, mjs, ts)&lt;br&gt;
The file size is 2.59Kb&lt;br&gt;
Includes normalization of all elements&lt;br&gt;
box-sizing: border-box; set&lt;br&gt;
Validated on all browsers using BrowserStack&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eG4oCAIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639406018/tPvFRnOBQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eG4oCAIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639406018/tPvFRnOBQ.png" alt="Reseter.css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BPEuf5Md--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639508069/PKzGVnzNE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BPEuf5Md--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639508069/PKzGVnzNE.png" alt="Reseter.css Compared To Other CSS Reset"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Down is the result of the same HTML file of 3 browsers. All of the chrome's headings are bolded nicely. Firefox ones are also bolded, but IE ones are bolded too much. The font on paragraphs is also bolded in IE. The border of the button is blue in IE. There's A little thinner border on buttons in Firefox. Below are only &lt;strong&gt;three browsers&lt;/strong&gt; and &lt;strong&gt;5 HTML tags&lt;/strong&gt;. There are more than 100 browsers available to the public. There are plenty of tags there too. No one knows how many of them are not public. 1000's versions of these 100's of browsers are available. How to keep us with these browsers? The answer is &lt;strong&gt;Reseter.css&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6sVmL9X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639682600/4T-OtBk37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6sVmL9X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639682600/4T-OtBk37.png" alt="Difference In Browsers"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/gh/krishdevdb/reseter.css/css/reseter.min.css&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Unpkg, CDNJS, Github, and many more CDNs are also available. Check the &lt;a href="https://github.com/krishdevdb/reseter.css"&gt;GitHub Repository&lt;/a&gt;. Of course, the files can also be downloaded and used, and package managers such as NPM, Yarn, PNPM, and Bower are also available.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# NPM&lt;/span&gt;
npm &lt;span class="nb"&gt;install &lt;/span&gt;reseter.css
&lt;span class="c"&gt;# YARN&lt;/span&gt;
yarn add reseter.css
&lt;span class="c"&gt;# PNPM&lt;/span&gt;
pnpm &lt;span class="nb"&gt;install &lt;/span&gt;reseter.css
&lt;span class="c"&gt;# Bower&lt;/span&gt;
bower &lt;span class="nb"&gt;install &lt;/span&gt;krishdevdb/reseter.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Go Check The GitHub&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/krishdevdb"&gt;
        krishdevdb
      &lt;/a&gt; / &lt;a href="https://github.com/krishdevdb/reseter.css"&gt;
        reseter.css
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Reseter.css - A Futuristic Alternative To Normalize.css And CSS Resets
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://www.codefactor.io/repository/github/krishdevdb/reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2fede2b44501f497a2691de3b8b7b11ebf8f7a9c9ea66f61947dd77dec7701f/68747470733a2f2f696d672e736869656c64732e696f2f636f6465666163746f722f67726164652f6769746875622f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d636f6465666163746f72"&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29b708c0ed8384ab58d50b884ff2ccef2b5ecf575ed0175efbe548d6c6caef16/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f726573657465722e6373733f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt; &lt;a href="https://github.com/krishdevdb/reseter.css/commits/master"&gt;&lt;img src="https://camo.githubusercontent.com/05c44c52429302f7c2f40cf932851f8fe0830c287db702e040dabe4d61e57c6c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d676974"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/5a8ea4a11056968ed6325b3b97e4321f6d02243c0f3aacfb6285d3bcac5451d6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616c6c2d636f6e7472696275746f72732f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d676974687562"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.com/github/krishdevdb/reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d17ce4977c6410fd6461d2c3ae1b5d32c82992515d6c1ad70fe284d5af69f10d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d7472617669732d6369"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/xqh38kb6sv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/14a89e119890ee2da249d6c8b202ea235f8da094ffb3c0dd3e257cadb7f0de00/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3831343730313738363932303931303930393f7374796c653d666c61742d737175617265266c6f676f3d646973636f7264"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/krishdevdb/reseter.css/raw/master/logo.png"&gt;&lt;img height="100px" width="100px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--LERtZEbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/krishdevdb/reseter.css/raw/master/logo.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;h1&gt;
Reseter.css&lt;/h1&gt;
&lt;h5&gt;
A Futuristic Alternative To Normalize.css And CSS Resets&lt;/h5&gt;
&lt;a href="https://twitter.com/intent/tweet?url=https://github.com/krishdevdb/reseter.css&amp;amp;text=Reseter.css%20helped%20me%20out%20in%20my%20website%20by%20normalizing%20everything.%20And%20Reseting%20The%20Browser%20Default%20Styles.%20Now%20My%20Website%20Looks%20The%20Same%20Across%20All%20Browsers" rel="nofollow"&gt;&lt;img alt="Twitter URL" src="https://camo.githubusercontent.com/7324ebbea2468b0720e11275d57bbce60155f408873d8ba7b0b29adc71b1c35a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f636f6c6f723d2532336666666666663030266c6f676f3d74776974746572267374796c653d666f722d7468652d62616467652675726c3d68747470732533412532462532466769746875622e636f6d2532466b726973686465766462253246726573657465722e637373"&gt;&lt;/a&gt;
&lt;a href="https://github.com/krishdevdb/reseter.css/stargazers"&gt;&lt;img alt="GitHub Repo stars" src="https://camo.githubusercontent.com/71f4e7fb710e6ac587c58ac7bb7c8a906b5cbe0370c982e314eaadd08d5c1a1c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6b7269736864657664622f726573657465722e6373733f6c6f676f3d476974687562267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;&lt;br&gt;&lt;p&gt;&lt;br&gt;&lt;a rel="noopener noreferrer" href="https://github.com/krishdevdb/reseter.css/raw/master/.github/assets/showcase.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NqvBpcXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/krishdevdb/reseter.css/raw/master/.github/assets/showcase.png" height="400"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://krishdevdb.github.io/reseter.css" rel="nofollow"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/krishdevdb/reseter.css/issues/new?assignees=krishdevdb%27&amp;amp;labels=feature+request&amp;amp;template=feature-request.md&amp;amp;title=Request%3A+"&gt;Request A Feature&lt;/a&gt; · &lt;a href="https://github.com/krishdevdb/reseter.css/issues/new?assignees=krishdevdb&amp;amp;labels=bug&amp;amp;template=bug-report.md&amp;amp;title=Bug%3A+"&gt;Report A Bug&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#quick-start"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;br&gt;
Already Used And Trusted By 45k Developers&lt;/h3&gt;


Table Of Contents
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#features"&gt;Features&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#resetercss-vs-normalizecss-vs-sanitizecss-vs-resetcss"&gt;&lt;em&gt;Reseter.css&lt;/em&gt; vs &lt;em&gt;Normalize.css&lt;/em&gt; vs &lt;em&gt;Sanitize.css&lt;/em&gt; vs &lt;em&gt;Reset.css&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#why-use-resetercss-must-read"&gt;Why Use Reseter.css (Must Read)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#manual"&gt;Manual&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#codepen"&gt;CodePen&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#codesandbox"&gt;CodeSandBox&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#installation"&gt;Installation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#package-managers"&gt;Package Managers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#cdn"&gt;CDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#downloads"&gt;Downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#clone-repository"&gt;Clone Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#usage"&gt;Usage&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#import-in-css"&gt;Import In CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#link-tag"&gt;Link Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#react"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#styled-components"&gt;Styled-Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#vue"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#nextjs"&gt;Next.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#get-support"&gt;Get Support&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#support-us"&gt;Support Us&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#review"&gt;Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#spread"&gt;Spread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#sponsor"&gt;Sponsor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#authors"&gt;Authors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#contributors"&gt;Contributors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#supporters"&gt;Supporters&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#stargazers"&gt;Stargazers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#forks"&gt;Forks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#special-mentions"&gt;Special Mentions&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#stars"&gt;Stars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#license"&gt;License&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#status"&gt;Status&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Adds New Better Styles For Elements&lt;/li&gt;
&lt;li&gt;Source In 4 Different Formats&lt;/li&gt;
&lt;li&gt;Reboots styles for a wide range of elements.&lt;/li&gt;
&lt;li&gt;Corrects bugs and browser inconsistencies.&lt;/li&gt;
&lt;li&gt;Sized 2.6kb&lt;/li&gt;
&lt;li&gt;Includes all normalizations&lt;/li&gt;
&lt;li&gt;Sets `box-sizing: border-box&lt;/li&gt;
&lt;li&gt;Fully tested&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#resetercss"&gt;Back To Top&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;em&gt;Reseter.css&lt;/em&gt; vs &lt;em&gt;Normalize.css&lt;/em&gt; vs &lt;em&gt;Sanitize.css&lt;/em&gt; vs &lt;em&gt;Reset.css&lt;/em&gt;
&lt;/h2&gt;


&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;br&gt;
&lt;thead&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Reseter.css&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Normalize.css&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Sanitize.css&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Reset.css&lt;/th&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;/thead&gt;
&lt;br&gt;
&lt;tbody&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;td&gt;Normalizations&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;td&gt;Basic Elemental Styles&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;⭕&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;td&gt;Size (By &lt;a href="http://bundlephobia.com/" rel="nofollow"&gt;Bundlephobia&lt;/a&gt;)&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b3242f10cef6e3d27641a2df9be98c1505a4dca4956d1bd3e07d04652bcc24b2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73697a652f6b7269736864657664622f726573657465722e6373732f6373732f726573657465722e6373733f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/b3242f10cef6e3d27641a2df9be98c1505a4dca4956d1bd3e07d04652bcc24b2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73697a652f6b7269736864657664622f726573657465722e6373732f6373732f726573657465722e6373733f7374796c653d666c61742d737175617265" alt="GitHub file size in bytes"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3ec036cdc252f30c4c40c8d320682244271fc01fb974cafb37fd5d6708bd1987/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73697a652f6e65636f6c61732f6e6f726d616c697a652e6373732f6e6f726d616c697a652e6373733f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/3ec036cdc252f30c4c40c8d320682244271fc01fb974cafb37fd5d6708bd1987/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73697a652f6e65636f6c61732f6e6f726d616c697a652e6373732f6e6f726d616c697a652e6373733f7374796c653d666c61742d737175617265" alt="GitHub file size in bytes"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fd1146044686bbdaba232bf5e35d6e35b254a4eefa70bd8738ae0db84b43f6e1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73697a652f637373746f6f6c732f73616e6974697a652e6373732f73616e6974697a652e6373733f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/fd1146044686bbdaba232bf5e35d6e35b254a4eefa70bd8738ae0db84b43f6e1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73697a652f637373746f6f6c732f73616e6974697a652e6373732f73616e6974697a652e6373733f7374796c653d666c61742d737175617265" alt="GitHub file size in bytes"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d118adf363acd8f7d83f6565e48b8c0ed59ecf5202e8eef73d23960b50adfaac/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73697a652f7368616e6e6f6e6d6f656c6c65722f72657365742d6373732f72657365742e6373733f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/d118adf363acd8f7d83f6565e48b8c0ed59ecf5202e8eef73d23960b50adfaac/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73697a652f7368616e6e6f6e6d6f656c6c65722f72657365742d6373732f72657365742e6373733f7374796c653d666c61742d737175617265" alt="GitHub file size in bytes"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;td&gt;Minified Version&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/dae093bebd5e8aceb58a4b032e52c6a1984fadbc1352dc6af1e56ccce97f70ad/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e2f726573657465722e6373733f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/dae093bebd5e8aceb58a4b032e52c6a1984fadbc1352dc6af1e56ccce97f70ad/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e2f726573657465722e6373733f7374796c653d666c61742d737175617265" alt="npm bundle size"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;br&gt;
&lt;td&gt;
&lt;br&gt;
❌ (Minify Yourself)&lt;/td&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;/tbody&gt;
&lt;br&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/krishdevdb/reseter.css"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>opensource</category>
      <category>githunt</category>
      <category>webdev</category>
      <category>css</category>
    </item>
  </channel>
</rss>
