<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Can you find the bug in this piece of php code? 🤹</title>
      <author>Keff</author>
      <pubDate>Tue, 26 Oct 2021 09:55:19 +0000</pubDate>
      <link>https://dev.to/nombrekeff/can-you-find-the-bug-in-this-piece-of-php-code-g7l</link>
      <guid>https://dev.to/nombrekeff/can-you-find-the-bug-in-this-piece-of-php-code-g7l</guid>
      <description>&lt;p&gt;Hey there! 👋&lt;/p&gt;

&lt;p&gt;I was doing a bit of bug-hunting in an old project of mine when I found an interesting bug. Can you find it?&lt;/p&gt;

&lt;p&gt;If you know your security or PHP this might be quite easy for you. Otherwise, it might be a good exercise.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-dont-look-at-the-comments-to-prevent-spoilers-if-you-want-to-solve-it-by-yourself-"&gt;
  &lt;/a&gt;
  !! Don't look at the comments to prevent spoilers if you want to solve it by yourself !!
&lt;/h4&gt;




&lt;p&gt;This is the request you would make to the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;--location&lt;/span&gt; &lt;span class="nt"&gt;--request&lt;/span&gt; POST &lt;span class="s1"&gt;'https://super.secure-api.com/check-pin'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer &amp;lt;token&amp;gt;'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--data-raw&lt;/span&gt; &lt;span class="s1"&gt;'{
      "pin": &amp;lt;you_answer&amp;gt;
    }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the code for that given endpoint (&lt;code&gt;/check-pin&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pin'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPin&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HttpException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"The pin is incorrect"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"The pin is correct!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;PD: This is just a demo, not real code. You should never check passwords/pins/secrets like this.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#what-input-would-you-need-to-pass-as-raw-pin-endraw-to-be-able-to-bypass-the-check"&gt;
  &lt;/a&gt;
  What input would you need to pass as &lt;code&gt;pin&lt;/code&gt; to be able to bypass the check?
&lt;/h4&gt;

&lt;p&gt;I will release a post in a couple of days explaining the bug in detail and how to fix it.&lt;/p&gt;

</description>
      <category>php</category>
      <category>security</category>
      <category>beginners</category>
      <category>bugs</category>
    </item>
    <item>
      <title>Kubernetes Logging in Production</title>
      <author>Kentaro Wakayama</author>
      <pubDate>Tue, 26 Oct 2021 09:23:33 +0000</pubDate>
      <link>https://dev.to/coder_society/kubernetes-logging-in-production-1ld3</link>
      <guid>https://dev.to/coder_society/kubernetes-logging-in-production-1ld3</guid>
      <description>&lt;p&gt;Historically, in monolithic architectures, logs were stored directly on bare metal or virtual machines. They never left the machine disk and the operations team would check each one for logs as needed.&lt;/p&gt;

&lt;p&gt;This worked on long-lived machines, but machines in the cloud are ephemeral. As more companies run their services on containers and orchestrate deployments with Kubernetes, logs can no longer be stored on machines and implementing a log management strategy is of the utmost importance.&lt;/p&gt;

&lt;p&gt;Logs are an effective way of debugging and monitoring your applications, and they need to be stored on a separate backend where they can be queried and analyzed in case of pod or node failures. These separate backends include systems like Elasticsearch, GCP’s Stackdriver, and AWS’ Cloudwatch.&lt;/p&gt;

&lt;p&gt;Storing logs off of the cluster in a storage backend is called cluster-level logging. In this article we’ll discuss how to implement this approach in your own Kubernetes cluster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#logging-architectures"&gt;
  &lt;/a&gt;
  Logging Architectures
&lt;/h2&gt;

&lt;p&gt;In a Kubernetes cluster there are two main log sources, your application and the system components.&lt;/p&gt;

&lt;p&gt;Your application runs as a container in the Kubernetes cluster and the container runtime takes care of fetching your application’s logs while Docker redirects those logs to the stdout and stderr streams. In a Kubernetes cluster, both of these streams are written to a JSON file on the cluster node.&lt;/p&gt;

&lt;p&gt;These container logs can be fetched anytime with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl logs podname
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The other source of logs are system components. Some of the system components (namely &lt;code&gt;kube-scheduler&lt;/code&gt; and &lt;code&gt;kube-proxy&lt;/code&gt;) run as containers and follow the same logging principles as your application.&lt;/p&gt;

&lt;p&gt;The other system components (&lt;code&gt;kubelet&lt;/code&gt; and &lt;code&gt;container runtime&lt;/code&gt; itself) run as a native service. If &lt;code&gt;systemd&lt;/code&gt; is available on the machine the components write logs in &lt;code&gt;journald&lt;/code&gt;, otherwise they write a &lt;code&gt;.log&lt;/code&gt; file in &lt;code&gt;/var/log&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Now that we understand which components of your application and cluster generate logs and where they’re stored, let’s look at some common patterns to offload these logs to separate storage systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#logging-patterns"&gt;
  &lt;/a&gt;
  Logging Patterns
&lt;/h2&gt;

&lt;p&gt;The two most prominent patterns for collecting logs are the sidecar pattern and the DaemonSet pattern.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-daemonset-pattern"&gt;
  &lt;/a&gt;
  1. DaemonSet pattern
&lt;/h3&gt;

&lt;p&gt;In the DaemonSet pattern, logging agents are deployed as pods via the DaemonSet resource in Kubernetes. Deploying a DaemonSet ensures that each node in the cluster has one pod with a logging agent running. This logging agent is configured to read the logs from &lt;code&gt;/var/logs&lt;/code&gt; directory and send them to the storage backend. You can see a diagram of this configuration in figure 1.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TzJHu8lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-daemonset.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzJHu8lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-daemonset.png" alt="DaemonSet pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 1: A logging agent running per node via a DaemonSet&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-sidecar-pattern"&gt;
  &lt;/a&gt;
  2. Sidecar pattern
&lt;/h3&gt;

&lt;p&gt;Alternatively, in the sidecar pattern a dedicated container runs along every application container in the same pod. This sidecar can be of two types, streaming sidecar or logging agent sidecar.&lt;/p&gt;

&lt;p&gt;The streaming sidecar is used when you are running an application that writes the logs to a file instead of stdout/stderr streams, or one that writes the logs in a nonstandard format. In that case, you can use a streaming sidecar container to publish the logs from the file to its own stdout/stderr stream, which can then be picked up by Kubernetes itself.&lt;/p&gt;

&lt;p&gt;The streaming sidecar can also bring parity to the log structure by transforming the log messages to standard log format. You can see this pattern in figure 2.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--plvsdl6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-streaming-sidecar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plvsdl6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-streaming-sidecar.png" alt="Streaming sidecar pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 2: Streaming sidecar pattern&lt;/p&gt;

&lt;p&gt;Another approach is the logging agent sidecar, where the sidecar itself ships the logs to the storage backend. Each pod contains a logging agent like Fluentd or Filebeat, which captures the logs from the application container and sends them directly to the storage backend, as illustrated in figure 3.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3bIP7Sn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-logging-agent-sidecar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3bIP7Sn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-logging-agent-sidecar.png" alt="Logging agent sidecar pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 3: Logging agent sidecar pattern  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons"&gt;
  &lt;/a&gt;
  Pros and Cons
&lt;/h2&gt;

&lt;p&gt;Now that we’ve gone over both the DaemonSet and sidecar approaches, let’s get acquainted with the pros and cons of each.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-daemonset-node-level"&gt;
  &lt;/a&gt;
  1. DaemonSet (Node Level)
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Node-level logging is easier to implement because it hooks into the existing file based logging and is less resource intensive than a sidecar approach as there are less containers running per node.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The logs are available via the kubectl command for debugging, as the log files are available to kubelet which returns the content of the log file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Less flexibility in supporting different log structures or applications that write to log files instead of streams. You would need to modify the application log structure to achieve parity, or handle the difference in your storage backend.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Since they’re stored as JSON files on the node disk, logs can’t be held forever. You need to have a log rotation mechanism in place to recycle old logs. If you are using Container Runtime Interface, kubelet takes care of rotating the logs and no explicit solution needs to be implemented.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-sidecar"&gt;
  &lt;/a&gt;
  2. Sidecar
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You have the flexibility to customize sidecars per application container. For example, an application might not have the ability to write to &lt;code&gt;stdout/stderr&lt;/code&gt;, or it might have some different logging format. In these cases, a sidecar container can bring parity to the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you’re using a logging agent sidecar without streaming, you don't need to rotate the logs because no logs are being stored on the node disk.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Running a sidecar for each application container is quite resource intensive when compared to node-level pods.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adding a sidecar to each deployment creates an extra layer of complexity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you’re using a streaming sidecar for an application that writes its logs to files, you’ll use double the storage for the same logs because you’ll be duplicating the entries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you’re using a logging agent sidecar without streaming, you’ll lose the ability to access logs via &lt;code&gt;kubectl&lt;/code&gt;. This is because &lt;code&gt;kubelet&lt;/code&gt; no longer has access to the JSON logs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With a logging agent sidecar you also need a node-level agent, otherwise you won’t be able to collect the system component logs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#putting-theory-into-practice"&gt;
  &lt;/a&gt;
  Putting Theory into Practice
&lt;/h2&gt;

&lt;p&gt;Now that we’ve looked at the possible patterns for logging in a Kubernetes cluster, let’s put them into action. We’ll deploy dummy containers generating logs and create Kubernetes resources to implement the logging patterns we discussed above.&lt;/p&gt;

&lt;p&gt;For this example we’ll use Fluentd as a logging agent, and we will install Elasticsearch for logging backend and Kibana for visualization purposes. We will install Elasticsearch and Kibana using Helm charts into the same cluster. Do note however that your storage backend should not be on the same cluster and we are doing it for demo purposes only. Thanks to Fluentd’s pluggable architecture, it supports various different sinks. That’s why the Elasticsearch backend can be replaced by any cloud-native solution, including Stackdriver or Cloudwatch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-installing-elasticsearch-and-kibana"&gt;
  &lt;/a&gt;
  1. Installing Elasticsearch and Kibana
&lt;/h3&gt;

&lt;p&gt;We will deploy the Elasticsearch and Kibana using the official Helm charts which can be found here(&lt;a href="https://github.com/elastic/helm-charts/blob/master/elasticsearch"&gt;Elasticsearch&lt;/a&gt;, &lt;a href="https://github.com/elastic/helm-charts/blob/master/kibana"&gt;Kibana&lt;/a&gt;). For installing via Helm you would need a helm binary on your path but installation of Helm is outside the scope of this post.&lt;/p&gt;

&lt;p&gt;Let us start by adding helm repos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo add elastic https://helm.elastic.co
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we will install the Elasticsearch and Kibana charts into our cluster.&lt;br&gt;
&lt;br&gt;
 &lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm &lt;span class="nb"&gt;install &lt;/span&gt;elasticsearch elastic/elasticsearch
helm &lt;span class="nb"&gt;install &lt;/span&gt;kibana elastic/kibana
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will install the latest version of Elasticsearch and Kibana in your cluster which can then be used as storage backend for your logs.&lt;/p&gt;

&lt;p&gt;We have used the default values in our charts but you can change any parameter based on your needs when you are installing this in production.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-daemonset"&gt;
  &lt;/a&gt;
  2. DaemonSet
&lt;/h3&gt;

&lt;p&gt;We will be deploying Fluentd as a DaemonSet. To keep the verbosity low, we won’t be creating a separate ServiceAccount and ClusterRole.  But in a production environment, Fluentd pods should run with a separate service account with limited access.&lt;/p&gt;

&lt;p&gt;You can deploy Fluentd as a DaemonSet by using following the Kubernetes resource:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;extensions/v1beta1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DaemonSet&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd&lt;/span&gt;
&lt;span class="na"&gt;  namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kube-system&lt;/span&gt;
&lt;span class="na"&gt;  labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;    k8s-app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd-logger&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;    metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;      labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;        k8s-app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd-logger&lt;/span&gt;
&lt;span class="na"&gt;    spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;      containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;      - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd&lt;/span&gt;
&lt;span class="na"&gt;        image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluent/fluentd-kubernetes-daemonset:elasticsearch&lt;/span&gt;
&lt;span class="na"&gt;        env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;        - name:  FLUENT\_ELASTICSEARCH\_HOST&lt;/span&gt;
&lt;span class="na"&gt;          value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;elasticsearch-master"&lt;/span&gt;
&lt;span class="s"&gt;        - name:  FLUENT\_ELASTICSEARCH\_PORT&lt;/span&gt;
&lt;span class="na"&gt;          value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;9200"&lt;/span&gt;
&lt;span class="na"&gt;        volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;        - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;          mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;        - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dockerlogs&lt;/span&gt;
&lt;span class="na"&gt;          mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/docker/containers&lt;/span&gt;
&lt;span class="na"&gt;          readOnly&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;      volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;      - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;        hostPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;          path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;      - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dockerlogs&lt;/span&gt;
&lt;span class="na"&gt;        hostPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;          path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/docker/containers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we’re mounting two volumes: one at &lt;code&gt;/var/log&lt;/code&gt; and another at &lt;code&gt;/var/log/docker/containers&lt;/code&gt;, where the system components and Docker runtime put the logs, respectively.&lt;/p&gt;

&lt;p&gt;The image we are using is already configured with smart defaults to be used with DaemonSet, but &lt;a href="https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset"&gt;you can change the configuration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Save the above YAML resource in a file named &lt;code&gt;fluentd-ds.yaml&lt;/code&gt; and apply the resource via the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; fluentd-ds.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will start a Fluentd pod on each node in your Kubernetes cluster. &lt;/p&gt;

&lt;p&gt;Now we’ll see how to implement streaming and logging agent sidecar patterns.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-sidecar"&gt;
  &lt;/a&gt;
  3. Sidecar
&lt;/h3&gt;

&lt;p&gt;First, let’s look at the streaming sidecar pattern when our application is writing logs to a file instead of stream. We’re running a sidecar to read those logs and write it back to the stdout/stderr stream.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pod&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-app&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;legacy-app&lt;/span&gt;
&lt;span class="na"&gt;    image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;    args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;    - /bin/sh&lt;/span&gt;
&lt;span class="s"&gt;    - -c&lt;/span&gt;
&lt;span class="s"&gt;    - &amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;      i=0;&lt;/span&gt;
&lt;span class="s"&gt;      while &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt;;&lt;/span&gt;
&lt;span class="s"&gt;      do&lt;/span&gt;
&lt;span class="s"&gt;        echo "$i&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(date)" &amp;gt;&amp;gt; /var/log/output.log;&lt;/span&gt;
&lt;span class="s"&gt;        i=$((i+1));&lt;/span&gt;
&lt;span class="s"&gt;        sleep 1;&lt;/span&gt;
&lt;span class="s"&gt;      done      &lt;/span&gt;
&lt;span class="na"&gt;    volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;    - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;      mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;  - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;streaming-sidecar&lt;/span&gt;
&lt;span class="na"&gt;    image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;    args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;\[/bin/sh, -c, 'tail -n+1 -f /var/log/output.log'\]&lt;/span&gt;
&lt;span class="na"&gt;    volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;    - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;      mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;  volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;    emptyDir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we have a dummy container writing logs to files in the &lt;code&gt;/var/log&lt;/code&gt; directory of the container. Now these logs can’t be fetched by the container runtime, that’s why we implemented a streaming sidecar to tail the logs from the &lt;code&gt;/var/log&lt;/code&gt; location and redirect it to the &lt;code&gt;stdout&lt;/code&gt; stream.&lt;/p&gt;

&lt;p&gt;This log stream will be picked up by the container runtime and stored as a JSON file at the &lt;code&gt;/var/log&lt;/code&gt; directory on the node, which will in turn be picked up by the node-level logging agent.&lt;/p&gt;

&lt;p&gt;Now, let’s look at the logging agent sidecar. In this pattern we’ll deploy Fluentd as a sidecar, which will directly write to our Elasticsearch storage backend.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is no prebuilt image with an Elasticsearch plugin installed, and creating a custom Docker image is out of the scope of this article. Instead, we’ll use the same Fluentd image that we used in the DaemonSet example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pod&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-app&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;count&lt;/span&gt;
&lt;span class="na"&gt;    image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;    args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;    - /bin/sh&lt;/span&gt;
&lt;span class="s"&gt;    - -c&lt;/span&gt;
&lt;span class="s"&gt;    - &amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;      i=0;&lt;/span&gt;
&lt;span class="s"&gt;      while &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt;;&lt;/span&gt;
&lt;span class="s"&gt;      do&lt;/span&gt;
&lt;span class="s"&gt;        echo "$i&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(date)" &amp;gt;&amp;gt; /var/log/output.log;&lt;/span&gt;
&lt;span class="s"&gt;        i=$((i+1));&lt;/span&gt;
&lt;span class="s"&gt;        sleep 1;&lt;/span&gt;
&lt;span class="s"&gt;      done      &lt;/span&gt;
&lt;span class="na"&gt;    volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;    - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;      mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;  - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging-agent&lt;/span&gt;
&lt;span class="na"&gt;    image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluent/fluentd-kubernetes-daemonset:elasticsearch&lt;/span&gt;
&lt;span class="na"&gt;     env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;      - name:  FLUENT\_ELASTICSEARCH\_HOST&lt;/span&gt;
&lt;span class="na"&gt;        value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;elastisearch-master"&lt;/span&gt;
&lt;span class="s"&gt;      - name:  FLUENT\_ELASTICSEARCH\_PORT&lt;/span&gt;
&lt;span class="na"&gt;        value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;9200"&lt;/span&gt;
&lt;span class="na"&gt;    volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;    - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;      mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;  volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;  - name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;    emptyDir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Given the ephemeral nature of pods and nodes, it’s very important to store logs from your Kubernetes cluster in a separate storage backend. There are multiple patterns that you can use to set up the logging architecture that we discussed in this article.&lt;/p&gt;

&lt;p&gt;Note that we suggest a mix of both sidecar and node-level patterns for your production systems. This includes setting up cluster-wide, node-level logging using a DaemonSet pattern, and implementing a streaming sidecar container for applications that do not support writing logs to stream (&lt;code&gt;stdout/stderr&lt;/code&gt;) or that don’t write in a standard log format. This streaming container will automatically surface logs for node-level agents to be picked up.&lt;/p&gt;

&lt;p&gt;For the choice of storage backend, you can choose self-hosted, open-source solutions such as Elasticsearch, or you can go the managed service route with options like cloud-hosted Elasticsearch, Stackdriver, or Cloudwatch. The choice of backend that’s right for you will depend on the cost, query, and log analysis requirements that you want to implement with your architecture.&lt;/p&gt;

&lt;p&gt;For our latest insights and updates, &lt;a href="https://www.linkedin.com/company/codersociety/"&gt;follow us on LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>logging</category>
      <category>devops</category>
    </item>
    <item>
      <title>Let's program the Arduino with Javascript🤯</title>
      <author>Patrick</author>
      <pubDate>Tue, 26 Oct 2021 09:17:10 +0000</pubDate>
      <link>https://dev.to/patik123/lets-program-the-arduino-with-javascript-3doj</link>
      <guid>https://dev.to/patik123/lets-program-the-arduino-with-javascript-3doj</guid>
      <description>&lt;p&gt;Have you ever programmed an Arduino? Did you know that Arduino can be programmed with JavaScript?😏&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://store.arduino.cc/products/arduino-uno-rev3"&gt;Arduino UNO microcontroller&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;LED,&lt;/li&gt;
&lt;li&gt;220-ohm resistor,&lt;/li&gt;
&lt;li&gt;Arduino IDE installed,&lt;/li&gt;
&lt;li&gt;NodeJS installed (I recommend the latest LTS version),&lt;/li&gt;
&lt;li&gt;Visual Studio Code (or another code editor).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We must first assemble the circuit we are going to work with.&lt;/p&gt;

&lt;p&gt;A circuit similar to this is created in TinkerCad.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djPPccT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf7kr02x6h4d9d74b33n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djPPccT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf7kr02x6h4d9d74b33n.png" alt="Arduino circuit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we have the circuit assembled we need to prepare our Arduino for programming with JavaScript not yet completely.&lt;/p&gt;

&lt;p&gt;We must first install the Firmata library on it.&lt;/p&gt;

&lt;p&gt;Navigate to File&amp;gt; Examples&amp;gt; Firmata&amp;gt; StandardFirmataPlus and upload the file that opens to our Arduino.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpMTrRWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3aig949h01ou5jdu2aw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpMTrRWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3aig949h01ou5jdu2aw.png" alt="Where can find Firmata Library in Arduino IDE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upload the code to the Arduino board by pressing the Upload.&lt;/p&gt;

&lt;p&gt;After a successful upload, we need to install some pre-required tools.&lt;/p&gt;

&lt;p&gt;Now is the time to make a directory where we will write our code for Arduino.&lt;/p&gt;

&lt;p&gt;Since I'm using a Windows computer, I had to do a couple of things before I could start programming Arduino with JavaScript.&lt;/p&gt;

&lt;p&gt;In the console with administrative privileges, enter two commands to install two more programs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nt"&gt;--add-python-to-path&lt;/span&gt; &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--global&lt;/span&gt; &lt;span class="nt"&gt;--production&lt;/span&gt; windows-build-tools
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and install the &lt;code&gt;node-gyp&lt;/code&gt; JavaScript library with the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; node-gyp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For your operating system, check what you need to install before starting at &lt;a href="https://github.com/rwaldron/johnny-five/wiki/Getting-Started#trouble-shooting"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After installing everything you need, we can start working.&lt;/p&gt;

&lt;p&gt;We will use the &lt;code&gt;johnny-five&lt;/code&gt; library to program the Arduino, which is one of the better libraries for programming microcontrollers. It supports Arduino, Raspberry Pi and more ... A list of all is available at &lt;a href="http://johnny-five.io/platform-support/"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The library allows us to program many components for the Arduino. The advantage I see is that it makes many tasks easier for us compared to C ++.&lt;/p&gt;

&lt;p&gt;Code for our simple circuit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Led&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;johnny-five&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;board&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;COM3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// Check if is your Arduino on this port (this you can make in Arduino IDE)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Led&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;led&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;blink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, all we have to do is run the program on our Arduino. To do this, type in the command line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node main.js &lt;span class="c"&gt;# In case if our file is named main.js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's your turn to start creating a variety of circuits with JavaScript and the Arduino microcontroller.&lt;/p&gt;

&lt;p&gt;If you like the content I create, you can start following me on my &lt;a href="https://twitter.com/Patik123_"&gt;Twitter account&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>arduino</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Automated Magento Extension for Facebook Shop</title>
      <author>Ashutoshsonker786</author>
      <pubDate>Tue, 26 Oct 2021 09:08:35 +0000</pubDate>
      <link>https://dev.to/ashutoshsonker786/automated-magento-extension-for-facebook-shop-56gg</link>
      <guid>https://dev.to/ashutoshsonker786/automated-magento-extension-for-facebook-shop-56gg</guid>
      <description>&lt;p&gt;Looking to improve your sales on the world's most popular social media platform? Here's the perfect shop connector to help you grow your online store.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cedcommerce.com/magento-2-extensions/magento-2-facebook-shop-integration?utm_source=Quora&amp;amp;utm_campaign=sonker"&gt;Magento 2 Facebook Shop Integration&lt;/a&gt; is a tool that connects the Magento 2 seller panel to Facebook Shop. With its revolutionary Facebook shop product feed management, which automatically refreshes and provides updated data to the Magento store, it establishes flawless sync between Facebook shop and Magento store. Merchants can use this interface to gain access to cutting-edge online selling services such as automated product listing, synced inventory, and more. This integration acts as a link between the Facebook shop and the Magento store, allowing you to create and expand your Facebook business.&lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>java</category>
      <category>react</category>
    </item>
    <item>
      <title>Server-Side Rendering of DataTables in Laravel</title>
      <author>Arman Hassan</author>
      <pubDate>Tue, 26 Oct 2021 09:03:20 +0000</pubDate>
      <link>https://dev.to/sharman/server-side-rendering-of-datatables-in-laravel-4c1i</link>
      <guid>https://dev.to/sharman/server-side-rendering-of-datatables-in-laravel-4c1i</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello&lt;/strong&gt; artisans how's everything going as a Laravel developer? Hopefully great. Working in Laravel locally or in production we need to work with datatables in many manners. Now We will see the yajra datatable with proper oriented steps to handle small and huge data records. Usually most of the developers render data on the client-side using jQuery Datatables. But when the volume of data is big, server-side rendering can boost performance. In this article, I'll discuss the process of rendering datatables on server-side using one of the most popular packages out there.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#Prerequisite"&gt;Prerequisite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Installation&amp;amp;Configuration"&gt;Installation &amp;amp; Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ModelandMigrations"&gt;Model and Migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#DatabaseConnection"&gt;Database Connection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#DummyDataWithFaker"&gt;Dummy Data With Faker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Controller&amp;amp;Routes"&gt;Controller &amp;amp; Routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SetupBladeFile"&gt;Setup Blade File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
&lt;a href="#p"&gt;&lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;Basically the prerequisite will already filled up with Laravel installation because you have to have &lt;em&gt;composer&lt;/em&gt; and installed &lt;em&gt;Laravel&lt;/em&gt; project to use yajra as well&lt;br&gt;
To install Laravel demo application latest version use the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;composer&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="n"&gt;laravel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;laravel&lt;/span&gt; &lt;span class="n"&gt;demoapp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#Installation&amp;amp;Configuration"&gt;&lt;/a&gt;
  Installation &amp;amp; Configuration
&lt;/h3&gt;

&lt;p&gt;In the Laravel project folder &lt;code&gt;demoapp&lt;/code&gt; and open command prompt to execute this command to get the latest updated version of yajra package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;composer&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="n"&gt;yajra&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;laravel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;datatables&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now need to published the vendod files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Yajra\DataTables\DataTablesServiceProvider"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in your 'demoapp/composer.json' file you can see this yajra added to your application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt; &lt;span class="s2"&gt;"require"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"yajra/laravel-datatables-oracle"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^9.18"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you have to add those providers and aliases array's in &lt;code&gt;root/config/app.php&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="s1"&gt;'providers'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       
    &lt;span class="nc"&gt;Yajra\DataTables\DataTablesServiceProvider&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="s1"&gt;'aliases'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
    &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'DataTables'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Yajra\DataTables\Facades\DataTables&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after adding the line in provider list&lt;br&gt;
then need to run this command to update and published the vendor files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Yajra\DataTables\DataTablesServiceProvider"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now good to go and serve the application, with artisan command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 now type this url in the browser to see the welcome page of laravel  &lt;code&gt;http://127.0.0.1:8000/&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--le8ZFIoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnl19slj28sfobqwwmvu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--le8ZFIoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnl19slj28sfobqwwmvu.png" alt="Laravel welcome page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ModelandMigrations"&gt;&lt;/a&gt;
  Model and Migrations
&lt;/h3&gt;

&lt;p&gt;To set up the database we need to create a model and migration table for the schema. run this command to create a model and migration at the same time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are creating a &lt;code&gt;customer&lt;/code&gt; schema table for our &lt;code&gt;demoapp&lt;/code&gt; and the &lt;code&gt;-m&lt;/code&gt; is responsible for creating the migration table.&lt;br&gt;
Open up the &lt;code&gt;database/migrations/2021_10_05_100745_create_customers_table&lt;/code&gt; file and create the customer table schema.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Migrations\Migration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Schema\Blueprint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Schema&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreateCustomersTable&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Migration&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Blueprint&lt;/span&gt; &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'phone'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'address'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;dropIfExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open up the &lt;code&gt;app/Models/Customer.php&lt;/code&gt; to add the $fillable array in the &lt;code&gt;Customer Model&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Models&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Factories\HasFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Model&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;HasFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$fillable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'phone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#DatabaseConnection"&gt;&lt;/a&gt;
  Database Connection
&lt;/h3&gt;

&lt;p&gt;Create a database to connect with the laravel application. I'm using &lt;code&gt;MySQl&lt;/code&gt; database for my &lt;code&gt;demoapp&lt;/code&gt; now got to the &lt;code&gt;demoapp/.env&lt;/code&gt; file and the database name and connection setup&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="no"&gt;DB_CONNECTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;
&lt;span class="no"&gt;DB_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;
&lt;span class="no"&gt;DB_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3306&lt;/span&gt;
&lt;span class="no"&gt;DB_DATABASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;demoapp&lt;/span&gt;
&lt;span class="no"&gt;DB_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;
&lt;span class="no"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#DummyDataWithFaker"&gt;&lt;/a&gt;
  Dummy Data With Faker
&lt;/h3&gt;

&lt;p&gt;we need to create some dummy data to test the yajra-datatables. using faker and DatabaseSeeder.&lt;br&gt;
need to this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="nc"&gt;CustomerFactory&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Customer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;command to create &lt;code&gt;CustomerFactory&lt;/code&gt; go to the &lt;code&gt;database/factories/CustomerFactory.php&lt;/code&gt; and add those code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;Database\Factories&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Factories\Factory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerFactory&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Factory&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;definition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;"name"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="s2"&gt;"phone"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;phoneNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"email"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;safeEmail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"address"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the &lt;code&gt;database/seeds/DatabaseSeeder.php&lt;/code&gt; file add this line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;Database\Seeders&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Seeder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DatabaseSeeder&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Seeder&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now run this command to seed data into the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now we got 1000 customer data in the database&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A9MbkD3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5ia2txfba9nsdyobd4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A9MbkD3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5ia2txfba9nsdyobd4.png" alt="database"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#Controller&amp;amp;Routes"&gt;&lt;/a&gt;
  Controller &amp;amp; Routes
&lt;/h3&gt;

&lt;p&gt;Need to create a CustomerController for the functions for fetch data and display in the Yajra database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;controller&lt;/span&gt; &lt;span class="nc"&gt;CustomerController&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;app/Http/Controllers/CustomerController.php&lt;/code&gt; need to write the method for fetching the data dynamically into the yajra datatables&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;DataTables&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Datatables&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addIndexColumn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addColumn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="nv"&gt;$actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
                    &lt;span class="s1"&gt;'&amp;lt;a href="#" class="btn btn-sm btn-primary"&amp;gt;Edit&amp;lt;/a&amp;gt;
                    &amp;lt;a href="#" class="btn btn-sm btn-danger"&amp;gt;Delete&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$actions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;rawColumns&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create a route for handling the request responses&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Route&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Controllers\CustomerController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'welcome'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/customer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nc"&gt;CustomerController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customer'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#SetupBladeFile"&gt;&lt;/a&gt;
  Setup Blade Files
&lt;/h3&gt;

&lt;p&gt;Go to &lt;code&gt;resources/views/welcome.blade.php&lt;/code&gt; file and set the blade file to show datatable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Laravel Yajra Datatable&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"csrf-token"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"{{ csrf_token() }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"margin: 1rem;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-center "&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Laravel Yajra Datatable&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"padding-top:40px; border-radius: 5px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"table table-striped yajra-datatable"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"padding-top:10px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;thead&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;No&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Name&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Phone&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Email&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Address&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Action&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.yajra-datatable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;DataTable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;processing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;serverSide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{{ url('customer') }}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;phone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;phone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;orderable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;searchable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's all the data loaded in server-side&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SdpnbS7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na456hi927prxj9pache.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SdpnbS7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na456hi927prxj9pache.png" alt="welcome page with data"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#Conclusion"&gt;&lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Yajra DataTables server-side processing system is much easier to use and render huge datas within a few minutes. Highly recommended to use yajra datatables.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>UI Design Process</title>
      <author>Krutik Raut</author>
      <pubDate>Tue, 26 Oct 2021 08:49:11 +0000</pubDate>
      <link>https://dev.to/reboot13_dev/ui-design-process-1g5k</link>
      <guid>https://dev.to/reboot13_dev/ui-design-process-1g5k</guid>
      <description>&lt;p&gt;Here are the 6 steps I go through whenever I create &lt;strong&gt;UI Design&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Understand the problem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Albert Einstein said: "If I had an hour to solve a problem, I would spend 55 minutes thinking about the problem and 5 minutes about the solutions.&lt;/p&gt;

&lt;p&gt;It's probably the crucial part of any process that ensures that design will be usable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Create very rough sketches&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next step is to create super rough sketches of my ideas after thinking about the problem and solutions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Create detailed Wireframes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After I'm happy with the sketches (they need to be perfect)&lt;br&gt;
I use Figma to create detailed wireframes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.Selects Assets&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eg: Fonts and Colors&lt;br&gt;
After the wireframes done, I choose fonts, colors and icons for the project , and also pick some photos and illustrations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.Apply Assets to wireframes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After this step I am pretty much done. It's basically connecting together to an actual screen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.Present it Properly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After applying assets, now its time to enhance your design presentation.&lt;/p&gt;

&lt;p&gt;Credits: &lt;a href="https://dribble.com/yasirnoori"&gt;https://dribble.com/yasirnoori&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me&lt;/strong&gt;&lt;br&gt;
Instagram: &lt;a href="https://instagram.com/reboot13_dev"&gt;https://instagram.com/reboot13_dev&lt;/a&gt;&lt;br&gt;
Telegram: &lt;a href="https://telegram.me/reboot13_dev"&gt;https://telegram.me/reboot13_dev&lt;/a&gt;&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/reboot13_dev"&gt;https://twitter.com/reboot13_dev&lt;/a&gt;&lt;br&gt;
LinkedIn: &lt;a href="https://linkedin.com/in/reboot13"&gt;https://linkedin.com/in/reboot13&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/reboot13-git"&gt;https://github.com/reboot13-git&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>ui</category>
      <category>uidesign</category>
      <category>design</category>
    </item>
    <item>
      <title>Another reason why developers leave their jobs: to escape from a bad codebase</title>
      <author>Alex Omeyer</author>
      <pubDate>Tue, 26 Oct 2021 08:43:43 +0000</pubDate>
      <link>https://dev.to/alexomeyer/another-reason-why-developers-leave-their-jobs-to-escape-from-a-bad-codebase-2324</link>
      <guid>https://dev.to/alexomeyer/another-reason-why-developers-leave-their-jobs-to-escape-from-a-bad-codebase-2324</guid>
      <description>&lt;p&gt;Recently, we have surveyed 200+ Software Engineers from different industries to learn how codebase health impacts Engineering hiring and retention.&lt;/p&gt;

&lt;p&gt;In this article, I’ll share some of the key stats from the survey, why investing in a codebase is crucial for businesses, and questions you can ask on the interview as an Engineer to learn about the company’s codebase health.&lt;/p&gt;

&lt;p&gt;You can download &lt;a href="https://www.stepsize.com/how-codebase-health-impacts-hiring-and-retention-2021-report"&gt;the full report here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is what we found out:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;51% of Engineers left or considered leaving a job because of technical debt.&lt;/li&gt;
&lt;li&gt;82% believe that lack of proper development practices affects their job satisfaction.&lt;/li&gt;
&lt;li&gt;62% consider code quality as an important factor when choosing a new job.&lt;/li&gt;
&lt;li&gt;For 21% of engineers, excessive amounts of technical debt have been the number one reason for changing a job.&lt;/li&gt;
&lt;li&gt;Both junior and senior developers equally consider codebase health to be an important factor when choosing a new job.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today, hiring and retaining developers is one of the biggest challenges for tech companies. And while recruiters, hiring managers, and leaders are focusing on attracting new tech talent, they might be ignoring one of the biggest reasons they are losing them in the first place — codebase health.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-debt-leads-to-employee-churn"&gt;
  &lt;/a&gt;
  Technical debt leads to employee churn
&lt;/h2&gt;

&lt;p&gt;More than half of the Engineers (51%) have left a company or considered leaving a company due to large amounts of technical debt, and 20% of Engineers say that technical debt is the primary reason for them to leave the company.&lt;/p&gt;

&lt;p&gt;As discovered in &lt;a href="https://www.stepsize.com/report"&gt;The State of Technical Debt 2021 Report&lt;/a&gt;, technical debt has a huge impact on developer team morale, causing frustration and hindering innovation.&lt;/p&gt;

&lt;p&gt;Given how much it costs to hire new engineers, companies need to keep their staff turnover as low as possible. And the best way to do that is to carefully manage technical debt to maintain a healthy codebase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-engineers-care-about-when-looking-for-a-new-role"&gt;
  &lt;/a&gt;
  What do Engineers care about when looking for a new role?
&lt;/h2&gt;

&lt;p&gt;Salary, technical challenges, and remote work opportunities are the 3 most important factors that Engineers pay attention to during their interview process.&lt;/p&gt;

&lt;p&gt;Compensation and workplace flexibility is at the top of the list for engineers when they’re looking for a new job. But 62% admit that they also consider code quality as an important factor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aZx3nwQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bpo27uym542dgdx3kv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aZx3nwQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bpo27uym542dgdx3kv.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code health or code quality refers to the characteristics of the code, such as clean, consistent, easy to understand, testable. Engineers often feel pressure to sacrifice code quality to meet deadlines and ship features fast which leads to frustration and decreases team morale.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Code quality definition is very unique for each engineering team and product. However, every engineer wants to write code that is scalable, performant, reliable, and most of all easy to maintain for future engineers,” says Shamma Pathan, Senior Software Engineer at LinkedIn.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#10-questions-engineers-ask-to-get-a-gauge-of-your-codebase-health"&gt;
  &lt;/a&gt;
  10 questions engineers ask to get a gauge of your codebase health
&lt;/h2&gt;

&lt;p&gt;Unlike salary and remote work opportunities, understanding the state of the codebase and software development practices can be challenging.&lt;/p&gt;

&lt;p&gt;Engineers suggest asking the following questions during the interview process:&lt;/p&gt;

&lt;p&gt;• What are the complexity metrics, defect metrics, and coding standards of the codebase?&lt;br&gt;
What does the workflow before deployment look like?&lt;br&gt;
• Do all projects for each tech stack have consistent and identical CI/CD pipelines?&lt;br&gt;
• How is refactoring built into your development process?&lt;br&gt;
What does the code review process look like?&lt;br&gt;
• Do you dedicate time to fixing technical debt?&lt;br&gt;
• How do you balance building new functionality and resolving technical debt?&lt;br&gt;
• How much time does the team spend on refactoring?&lt;br&gt;
• What processes are set up to ensure the company uses all the modern/latest stack?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#job-satisfaction"&gt;
  &lt;/a&gt;
  Job satisfaction
&lt;/h2&gt;

&lt;p&gt;When it comes to the job itself, 82% of Engineers admit that lack of proper development practices plays a crucial role in their job satisfaction.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“The mess slows developers down and sometimes even prevents them from doing their actual job. Technical debt can make it difficult to be proud of the work you’re doing, as a lot of time is lost dealing with annoying obstacles,” says Maarten Dalmijn is the head of product at Rodeo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tM65uXZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq2533zdvo4ozx8vwuyz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tM65uXZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq2533zdvo4ozx8vwuyz.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The right way to fight technical debt is to talk about codebase-related issues across the whole company so that everyone can understand why it’s vital to manage it carefully.&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>programming</category>
      <category>career</category>
      <category>news</category>
    </item>
    <item>
      <title>How to make a Glassorphism Calculator</title>
      <author>Codeflix</author>
      <pubDate>Tue, 26 Oct 2021 08:30:15 +0000</pubDate>
      <link>https://dev.to/codeflix/how-to-make-a-glassorphism-calculator-dhk</link>
      <guid>https://dev.to/codeflix/how-to-make-a-glassorphism-calculator-dhk</guid>
      <description>&lt;p&gt;Hello Readers, welcome to my new blog, today in this blog I'm going to make a calculator using HTML CSS &amp;amp; JavaScript. Earlier I have shared, How To Make a Responsive Website With HTML &amp;amp; CSS, that website was in glassmorphism UI, and now this calculator design is also in glass morphism UI.&lt;br&gt;
As we know, a Calculator is a mechanical device that is used to calculate numerical numbers. There are various types and designs of calculators that we can found but the main motive of the calculator is calculation.&lt;/p&gt;

&lt;p&gt;As you can see on the given image of this program [Glasss Morphism Calculator], on the webpage. There is one calculator design in glassmorphism UI. All essential buttons are available there like addition, subtraction, multiplication, divide, and so on. These all buttons worked perfectly. Those different sizes of small boxes around that calculator make this glassmorphism design of the calculator really awesome. These all small boxes move upward direction continuously.&lt;/p&gt;

&lt;p&gt;If you want the real animation of these small boxes and the code behind making this calculator, you can watch the full video tutorial of this program [Animated Glass Morphism Calculator].&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tutorial-of-calculator-using-html-css-amp-javascript"&gt;
  &lt;/a&gt;
  Tutorial of Calculator using HTML CSS &amp;amp; JavaScript
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/S44SDUwWHIQ"&gt;Glassorphism Calculator Preview&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  STEPS
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  STEP 1
&lt;/h2&gt;

&lt;p&gt;Make a file named index.html and write the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;

&amp;lt;html lang="en" dir="ltr"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
   &amp;lt;!--- &amp;lt;title&amp;gt; Glassmorphism Calculator| Codeflix &amp;lt;/title&amp;gt;---&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
   &amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  STEP 2
&lt;/h2&gt;

&lt;p&gt;This is the animation part (Do it carefully). Each lot contains 7 bubbles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  STEP 3
&lt;/h2&gt;

&lt;p&gt;This code will make the container of the calculator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;div class="container"&amp;gt;
   &amp;lt;form action="#" name="forms"&amp;gt;
     &amp;lt;input type="text" name="answer"&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="AC" onclick="forms.answer.value = ''"&amp;gt;
       &amp;lt;input type="button" value="DEL" onclick="forms.answer.value = forms.answer.value.substr(0 , forms.answer.value.length -1)"&amp;gt;
       &amp;lt;input type="button" value="%" onclick="forms.answer.value += '%'"&amp;gt;
       &amp;lt;input type="button" value="/" onclick="forms.answer.value += '/'"&amp;gt;
     &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  STEP 4
&lt;/h2&gt;

&lt;p&gt;This code represents how buttons should function and their size and all other content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="7" onclick="forms.answer.value += '7'"&amp;gt;
       &amp;lt;input type="button" value="8" onclick="forms.answer.value += '8'"&amp;gt;
       &amp;lt;input type="button" value="9" onclick="forms.answer.value += '9'"&amp;gt;
       &amp;lt;input type="button" value="*" onclick="forms.answer.value += '*'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="4" onclick="forms.answer.value += '4'"&amp;gt;
       &amp;lt;input type="button" value="5" onclick="forms.answer.value += '5'"&amp;gt;
       &amp;lt;input type="button" value="6" onclick="forms.answer.value += '6'"&amp;gt;
       &amp;lt;input type="button" value="-" onclick="forms.answer.value += '-'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="1" onclick="forms.answer.value += '1'"&amp;gt;
       &amp;lt;input type="button" value="2" onclick="forms.answer.value += '2'"&amp;gt;
       &amp;lt;input type="button" value="3" onclick="forms.answer.value += '3'"&amp;gt;
       &amp;lt;input type="button" value="+" onclick="forms.answer.value += '+'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="0"  onclick="forms.answer.value += '0'"&amp;gt;
       &amp;lt;input type="button" value="00" onclick="forms.answer.value += '00'"&amp;gt;
       &amp;lt;input type="button" value="." onclick="forms.answer.value += '.'"&amp;gt;
       &amp;lt;input type="button" value="=" onclick="forms.answer.value = eval(forms.answer.value)"&amp;gt;
     &amp;lt;/div&amp;gt;
   &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  Css
&lt;/h2&gt;

&lt;p&gt;CSS is designed to enable the separation of presentation and content, including layout, colors, and fonts.  This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, enable multiple web pages to share formatting by specifying the relevant CSS in a separate .css file which reduces complexity and repetition in the structural content as well as enabling the .css file to be cached to improve the page load speed between the pages that share the file and its formatting.&lt;/p&gt;

&lt;p&gt;Separation of formatting and content also makes it feasible to present the same markup page in different styles for different rendering methods, such as on-screen, in print, by voice (via speech-based browser or screen reader), and on Braille-based tactile devices. CSS also has rules for alternate formatting if the content is accessed on a mobile device.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-codes-in-this-project"&gt;
  &lt;/a&gt;
  Css codes in this project
&lt;/h2&gt;

&lt;h6&gt;
  &lt;a href="#css-plays-an-important-role-in-this-project-and-css-codes-are-also-available-below"&gt;
  &lt;/a&gt;
  Css plays an important role in this project and Css codes are also available below.
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#css-codes"&gt;
  &lt;/a&gt;
  Css codes
&lt;/h2&gt;

&lt;p&gt;Now we will make a file named style.css and write paste the following code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  STEP 1
&lt;/h2&gt;

&lt;p&gt;This code represents Fonts, Container, Background Colour&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&amp;amp;display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins',sans-serif;
}
body{
  height: 100vh;
  width: 100%;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(#2196f3 , #e91e63);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  STEP 2
&lt;/h2&gt;

&lt;p&gt;This Css code is used to add animation,Colour to the bubbles. &lt;br&gt;
Each lot contains 7 bubbles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.bubbles{
  position: absolute;
  bottom: -120px;
  display: flex;
  flex-wrap: wrap;
  margin-top: 70px;
  width: 100%;
  justify-content: space-around;
}
.bubbles span{
  height: 60px;
  width: 60px;
  background: rgba(255, 255, 255, 0.1);
  animation: move 10s linear infinite;
  position: relative;
  overflow: hidden;
}
@keyframes move {
  100%{
    transform: translateY(-100vh);
  }
}
.bubbles span.one{
  animation-delay: 2.2s;
  transform: scale(2.15)
}
.bubbles span.two{
  animation-delay: 3.5s;
  transform: scale(1.55)
}
.bubbles span.three{
  animation-delay: 0.2s;
  transform: scale(0.35)
}
.bubbles span.four{
  animation-delay: 6s;
  transform: scale(2.15)
}
.bubbles span.five{
  animation-delay: 7s;
  transform: scale(0.5)
}
.bubbles span.six{
  animation-delay: 4s;
  transform: scale(2.5)
}
.bubbles span.seven{
  animation-delay: 3
  transform: scale(1.5)
}
.bubbles span:before{
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 60px;
  width: 40%;
  transform: skew(45deg) translateX(150px);
  background: rgba(255, 255, 255, 0.15);
  animation: mirror 3s linear infinite;
}
@keyframes mirror {
  100%{
    transform: translateX(-450px);
  }
}
.bubbles span.one:before{
  animation-delay: 1.5s;
}
.bubbles span.two:before{
  animation-delay: 3.5s;
}
.bubbles span.three:before{
  animation-delay: 2.5s;
}
.bubbles span.four:before{
  animation-delay: 7.5s;
}
.bubbles span.five:before{
  animation-delay: 4.5s;
}
.bubbles span.six:before{
  animation-delay: 0.5s;
}
.bubbles span.seven:before{
  animation-delay: 6s;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  STEP 3
&lt;/h2&gt;

&lt;p&gt;This code represents container's colour, Text input in the container , Colour Of the buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  z-index: 12;
  width: 360px;
  padding: 15px;
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.1);
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  border-top: 1px solid rgba(255, 255, 255, 0.5);
  border-left: 1px solid rgba(255, 255, 255, 0.5);
}
.container input[type="text"]{
  width: 100%;
  height: 100px;
  margin: 0 3px;
  outline: none;
  border: none;
  color: #fff;
  font-size: 20px;
  text-align: right;
  padding-right: 10px;
  pointer-events: none;
  background: transparent;
}
.container input[type="button"]{
  height: 65px;
  color: #fff;
  width: calc(100% / 4 - 5px);
  background: transparent;
  border-radius: 12px;
  margin-top: 15px;
  outline: none;
  border: none;
  font-size: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
}
.container input[type="button"]:hover{
  background: rgba(255, 255, 255, 0.1);
}```




&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>css</category>
    </item>
    <item>
      <title>How to Expose Your Local Host URL as a Public URL</title>
      <author>Rahul Banerjee</author>
      <pubDate>Tue, 26 Oct 2021 07:54:02 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/how-to-expose-your-local-host-url-as-a-public-url-34mh</link>
      <guid>https://dev.to/rahulbanerjee99/how-to-expose-your-local-host-url-as-a-public-url-34mh</guid>
      <description>&lt;p&gt;There might be times when you wish to access your API or React project using a public URL but do not want to go through the hassle of deploying it. Basically, instead of &lt;a href="http://127.0.0.1:5000/"&gt;http://127.0.0.1:5000/&lt;/a&gt;, you'd want something like &lt;a href="http://35cc-69-58-102-156.ngrok.io"&gt;http://35cc-69-58-102-156.ngrok.io&lt;/a&gt; so that others could access it as well. This article will talk about two ways you can do so.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-it-mean-to-expose-your-localhost-url"&gt;
  &lt;/a&gt;
  What does it mean to expose your localhost URL?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First of all, it is temporary. Unless you opt for a paid option, most public URLs will expire in a few hours. You can always generate a new one. &lt;/li&gt;
&lt;li&gt;The exposed URL will basically be in sync with your localhost URL. Any requests made to your localhost URL will also be made to the exposed URL and vice versa. &lt;/li&gt;
&lt;li&gt;Your public URL will only be active as long as your local API or React Project is active.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#why-would-you-want-to-expose-your-localhost-url"&gt;
  &lt;/a&gt;
  Why would you want to expose your localhost URL?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Working with Webhook: Webhooks require a public URL. Exposing your localhost URL generates a public URL for you. The Webhook request can be made to this public URL and your localhost URL will also receive the request. Check out &lt;a href="https://www.realpythonproject.com/intro-to-webhooks-with-and-how-to-receive-them-with-python/"&gt;this article&lt;/a&gt; to learn more about webhooks and how to use them with Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Testing your project on other devices: You might want to test your React project on an actual mobile or any other device.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Making your server accessible to others: Exposing your localhost URL will let anyone with the URL access it. This can help you to share your server/react project with others for feedback or debugging.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will look at two free options to expose your localhost URL. The first option will require you to download a software while the second option will require an NPM package.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#option-1-ngrok"&gt;
  &lt;/a&gt;
  Option 1: Ngrok
&lt;/h3&gt;

&lt;p&gt;You will need to sign up for &lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt;. After you sign up, you will have to download the software.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DoVyO1mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226921573/lM5MkEfJ8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DoVyO1mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226921573/lM5MkEfJ8.png" alt="Screen Shot 2021-10-26 at 1.41.52 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the download is complete, unzip the file. Remember the directory where you unzipped the file. This will be needed in the next step.&lt;/p&gt;

&lt;p&gt;Open a terminal and navigate to the location of the unzipped file using the 'cd' command. Once your terminal is at the directory with the unzipped file, type the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ngrok  http &amp;lt;PORT NUMBER&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eg: If your react project is running on port 3000, you'd have to type the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ngrok http 3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nHpnjmzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226711318/if00V8gy05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHpnjmzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226711318/if00V8gy05.png" alt="Screen Shot 2021-10-26 at 1.38.25 AM.png"&gt;&lt;/a&gt;&lt;br&gt;
 You should see a similar output in your terminal. The public URL is the URL next to 'Forwarding'. In my case it is &lt;a href="http://35cc-69-58-102-156.ngrok.io"&gt;http://35cc-69-58-102-156.ngrok.io&lt;/a&gt;. If you access your public URL, you should see the same thing you see when you access your localhost URL. Note the value next to 'Session Expires'. After the allotted time, the public URL will expire and you will have to generate a new URL.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#option-2-localtunnel"&gt;
  &lt;/a&gt;
  Option 2: Localtunnel
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://localtunnel.github.io/www/"&gt;Localtunnel&lt;/a&gt; is an npm package that can be installed using a node. Type the following command to install it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; localtunnel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the '-g' tag to install it globally so that it can be accessed by multiple projects. After installation is complete, type the following command to expose your localhost URL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;lt &lt;span class="nt"&gt;--port&lt;/span&gt; 3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If successful you should see a similar URL&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;your url is: https://fast-cow-24.loca.lt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you get the following error message&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;command &lt;/span&gt;not found: lt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Locate where the node installed the package. It should be inside a node modules folder. Once you find the node modules folder, cd to the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;node_modules/localtunnell/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and type the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./lt.js &lt;span class="nt"&gt;--port&lt;/span&gt; 3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;If you are looking for a more detailed article on exposing localhost URLs, I recommend checking &lt;a href="https://chenhuijing.com/blog/tunnelling-services-for-exposing-localhost-to-the-web/#%F0%9F%91%9F"&gt;this article&lt;/a&gt;.&lt;br&gt;
I hope you found this article helpful. Connect with on &lt;a href="https://www.linkedin.com/in/rahulbanerjee2699/"&gt;LinkedIn&lt;/a&gt; , &lt;a href="https://twitter.com/rahulbanerjee99"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 10 Information Technology Quizzes to Test Your Knowledge of the IT Industry</title>
      <author>Liudmila Klimusheuskaja</author>
      <pubDate>Tue, 26 Oct 2021 07:47:53 +0000</pubDate>
      <link>https://dev.to/0prvona2lupchiq/top-10-information-technology-quizzes-to-test-your-knowledge-of-the-it-industry-51n1</link>
      <guid>https://dev.to/0prvona2lupchiq/top-10-information-technology-quizzes-to-test-your-knowledge-of-the-it-industry-51n1</guid>
      <description>&lt;p&gt;If you love Information Technology, and you code day and night, take a break, test your IT general knowledge, and have some fun. We have compiled a list of 10 information technology quizzes to test your knowledge of the IT industry. Try them now and compete with your friends: &lt;/p&gt;

&lt;p&gt;1) &lt;strong&gt;ProProfs Quizzes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ProProfs contains numerous professional quizzes and tests covering a wide range of topics, from entertainment quizzes about TikTokers, popular movies, and celebrities and finishing with quizzes related to business, education, and other specific fields. &lt;/p&gt;

&lt;p&gt;We’ve found &lt;a href="https://www.proprofs.com/quiz-school/topic/information-technology"&gt;information technology quizzes and trivia&lt;/a&gt; on ProProfs where you can prove your specific IT knowledge or you can try a simple “Fundamentals of Information Technology Trivia” game.&lt;/p&gt;

&lt;p&gt;2) &lt;strong&gt;Quizizz&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quizizz is a learning platform that allows people to learn anything they want by passing gamified quizzes. The platform is widely used by teachers and students to learn school subjects in a fun and interactive way. It also gives you the option to create your own quizzes, customize them, and assign them to a group of people. You can find almost any topic using their search bar. &lt;/p&gt;

&lt;p&gt;Try some of these information technology quizzes: &lt;a href="https://quizizz.com/admin/quiz/57289bd771d491296531f0c7/javascript"&gt;JavaScript quiz&lt;/a&gt; , &lt;a href="https://quizizz.com/admin/quiz/5c6f102201a3d6001dc4e6ba/web-development"&gt;Web Development quiz&lt;/a&gt;, or &lt;a href="https://quizizz.com/admin/quiz/597eca541bb9c41700175518/chapter-1-information-technology"&gt;Information Technology quiz.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3) &lt;strong&gt;Internet of Think Quiz Show&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The format of this quiz is totally different compared to most of what we’ve found online. This is a YouTube information technology quiz show where any information technology specialist can apply to participate and compete for cash prizes. The quiz show consists of three rounds; round 1 is general information technology trivia, round 2 is IT-themed images and questions, and round 3 is a series of rapid-fire IT-related questions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3GqMwaa"&gt;Check out the latest episode&lt;/a&gt; to see what it’s like and apply to participate to win cash and check your IT general skills and knowledge. You can even practice using other quizzes from this article and then put your newfound skills to use to win real money! &lt;/p&gt;

&lt;p&gt;4) &lt;strong&gt;Britannica&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Britannica is a leading online encyclopedia that provides products including courses, digital encyclopedias, training, and quizzes.&lt;/p&gt;

&lt;p&gt;Britannica sorts their quizzes by category. Check out this link to find all the &lt;a href="https://www.britannica.com/quiz/browse/Technology"&gt;technology quizzes&lt;/a&gt; that are available on Britannica right now. Try some of these IT quizzes from the list; they range from computers and technology, tech companies, computers and operating systems, to mobile phones. Keep in mind that you have only 30 seconds to answer each question.&lt;/p&gt;

&lt;p&gt;5) &lt;strong&gt;Study.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Study.com is an online education platform offering courses, education programs, video lessons, and more. They also have a huge range of quizzes — more than 65,000! &lt;/p&gt;

&lt;p&gt;Use &lt;a href="https://study.com/learn/information-technology-quizzes.html"&gt;this link&lt;/a&gt; to try information technology quizzes from study.com. There are currently 781 quizzes to test your IT skills. You can try one about IT terms &amp;amp; Abbreviations, iOS Architecture Components, and many others. Just bear in mind, you’ll have to make an account to see the full range of quizzes. The upside is that each quiz has a description, learning goals, related skills, and places to find more information about the topic. &lt;/p&gt;

&lt;p&gt;6) &lt;strong&gt;Quizstone&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quizstone is a quiz website offering quizzes in numerous categories, as well as daily general trivia questions. &lt;/p&gt;

&lt;p&gt;Their &lt;a href="https://quizstone.com/en/c/internet_technology_quiz/"&gt;Information Technology quiz&lt;/a&gt; has questions about the Internet, computers, games, programs, software, and hardware. Try their &lt;a href="https://quizstone.com/en/c/internet_technology_quiz/internet/"&gt;Internet Quiz&lt;/a&gt; to check your knowledge about Internet services, web sites, and search engines. Their &lt;a href="https://quizstone.com/en/c/internet_technology_quiz/hardware/"&gt;Hardware Quiz&lt;/a&gt; will help you see how much you know about hardware, computers, routers, and computer manufacturers. Their computer games quiz checks knowledge about console, PC, and mobile games, and their software quiz tests programming language knowledge and more.&lt;/p&gt;

&lt;p&gt;7) &lt;strong&gt;GeeksforGeeks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GeeksforGeeks is a computer science portal with programming articles, tutorials, courses, quizzes, and interview questions.&lt;/p&gt;

&lt;p&gt;In their &lt;a href="https://www.geeksforgeeks.org/quiz-corner-gq/?ref=ndm"&gt;quiz section&lt;/a&gt;, you will find things about C++, Java, Python, data structure, algorithms, and more. The questions are pretty technical and contain code examples as well, so this source might be a good way to test your skills before passing an interview. When you answer the questions in the quiz, you’ll get an explanation to help you understand the topic better.&lt;/p&gt;

&lt;p&gt;8) &lt;strong&gt;SkillValue by Pentagon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SkillValue, a recruitment platform for hiring tech freelancers, offers &lt;a href="https://skillvalue.com/en/quiz/"&gt;1000+ quizzes&lt;/a&gt; about different programming languages. You can take quizzes about .Net, Java, and Javascript, as well as machine learning, software testing, information security, and more. All the quizzes have different difficulty levels and have time limits to answer all the questions. You’ll need to make an account to start taking quizzes.&lt;/p&gt;

&lt;p&gt;9) &lt;strong&gt;Sporcle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sporcle provides quizzes, not only on the web and mobile, but also in live trivia shows at bars and restaurants. Their website has a database of more than 1 million quizzes, all sorted by category. You can also sort by most popular. In addition, the platform allows you to create your own quizzes and share them with your friends. &lt;/p&gt;

&lt;p&gt;Find information technology trivia quizzes and games &lt;a href="https://www.sporcle.com/games/tags/informationtechnology"&gt;here.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;10) &lt;strong&gt;Aliensbrain&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aliensbrain is an online test portal with more than 15,000 quizzes.&lt;/p&gt;

&lt;p&gt;Try &lt;a href="https://www.aliensbrain.com/"&gt;quizzes&lt;/a&gt; about the .Net framework, C &amp;amp; C++ programming, Java, SQL, web development, and many fields. You can either take quizzes or create your own. Searching by tags you can find the questions and quizzes that are most interesting to you. &lt;/p&gt;

&lt;p&gt;Now you have the list of information technology quizzes to test your knowledge and skills in the IT industry. Have fun learning! &lt;/p&gt;

</description>
      <category>career</category>
      <category>learning</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Mine Ripple XRP with Your Computer Under 5 Minutes in 2021</title>
      <author>Course Probe</author>
      <pubDate>Tue, 26 Oct 2021 07:38:05 +0000</pubDate>
      <link>https://dev.to/courseprobe/how-to-mine-ripple-xrp-with-your-computer-under-5-minutes-in-2021-4hlk</link>
      <guid>https://dev.to/courseprobe/how-to-mine-ripple-xrp-with-your-computer-under-5-minutes-in-2021-4hlk</guid>
      <description>&lt;p&gt;A Step by Step Guide to Pool Mining Ripple XRP in 2021 with a CPU or GPUs!&lt;/p&gt;

&lt;p&gt;Sometimes mining can seem to be too complex for the average computer user, so I thought about putting together a quick guide to get you excited about mining cryptocurrency and XRP in particular.&lt;/p&gt;

&lt;p&gt;Anyone can start mining Ripple XRP with any computer in under 5 minutes using this guide, regardless of your technical skill level you will be able to increase your crypto knowledge and start mining XRP with your CPU and GPU today!!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;XRP is a digital asset built for payments. It is the native digital asset on the XRP Ledger—an open-source, permissionless and decentralized blockchain technology that can settle transactions in 3-5 seconds.&lt;/p&gt;

&lt;p&gt;XRP can be sent directly without needing a central intermediary, making it a convenient instrument in bridging two different currencies quickly and efficiently.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How Is XRP Used?&lt;/p&gt;

&lt;p&gt;Faster, less costly and more scalable than any other digital asset, XRP and the XRP Ledger are used to power innovative technology across the payments space.&lt;/p&gt;

&lt;p&gt;Ripple is focused on building technology to help unleash new utility for XRP and transform global payments. Third parties are also pursuing other XRP-related use cases.&lt;/p&gt;




&lt;p&gt;Now let's get you started !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Get yourself a Wallet.&lt;/p&gt;

&lt;p&gt;I recommend getting Trustwallet in order for you to get a public Address for XRP to receive your funds.&lt;/p&gt;

&lt;p&gt;You can visit the Official Site &lt;a href="https://trustwallet.com/"&gt;TrustWallet&lt;/a&gt; and Download it from there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Download the Unmineable Miner Software&lt;/p&gt;

&lt;p&gt;Before downloading the file, set some folder exclusions on Windows Defender, in your antivirus and also in your browser so you can download the file without being bothered with notifications of dangerous files.&lt;/p&gt;

&lt;p&gt;Official Unmineable software can be downloaded from this site: &lt;a href="https://www.unmineable.com/miner"&gt;Unmineable Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the MFI version (Miners files included).&lt;/p&gt;

&lt;p&gt;The unmineable software is just one executable file, it already contains all the configurations so it is the best and easiest way to mine XRP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the file as an Administrator in windows.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It looks exactly like this when you run it: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" alt="Unmineable Start Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select GPU cards or CPU.&lt;/p&gt;

&lt;p&gt;It will take you to the second screen where you will enter your Ripple XRP Address and also &lt;strong&gt;the code which will allow you to drop your Dev Fee from 1% to 0.75%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use the code: &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; to drop your Dev Fee from 1% to 0.75% (it makes a difference).&lt;/p&gt;

&lt;p&gt;Your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OBrJWXUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bhwlxu3gwwefasif3hh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OBrJWXUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bhwlxu3gwwefasif3hh.png" alt="Unmineable XRP mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click on the Start button, you should see a similar screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" alt="Unmineable Mining Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point I would recommend you to click the option at the bottom to display the logs (Looks like a sheet of paper), here click Force Stop. &lt;/p&gt;

&lt;p&gt;Then click the Settings Icon (Looks like a cog wheel), in the screen that pops up you want to double check a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure the algorithm selected is ETCHASH if you are mining with 4GB cards, use ETHASH for cards with 6GB or more, if you selected CPU everything is ready to start mining no need to select anything.&lt;/li&gt;
&lt;li&gt;Make sure the Code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; is showing in the referral box (Recommended, not mandatory).&lt;/li&gt;
&lt;li&gt;Set a name for your worker (The computer you are mining from).&lt;/li&gt;
&lt;li&gt;Set your mining Intensity at the top, I would recommend High for those periods when you are not using the computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It looks similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" alt="Unmineable Settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the Save &amp;amp; Restart button to start mining !!&lt;/p&gt;

&lt;p&gt;Once it starts you can check the speed of your Graphic card which shows as the Current Hashrate.&lt;/p&gt;

&lt;p&gt;Also you can click on the stats button on the top right to go directly to the Unmineable website where you can check your balance and request a manual payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; it is recommended you change a few settings in Windows, there's people that disable the Updates and also disable sleeping mode, hibernation or anything that could turn off the computer while it is not in use.&lt;/p&gt;

&lt;p&gt;If you are using a Laptop, make sure it has some battery or is plugged so it won't shut down.&lt;/p&gt;

&lt;p&gt;Congrats, if you are using Unmineable you are now a miner !!&lt;/p&gt;




&lt;p&gt;If you want a bit more of control over the mining software and configurations then you can download the miners and manually set them up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with CPU then you could follow below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to the xmrig site to download the latest version (MSVC) or from the oficial github repository: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download the latest version you would have to edit a file named "pool_mine_example.bat" or "start.com" or "start.bat" Inside this file you need to modify 2 lines.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if the file doesn't exists you would have to create it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It could look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd %~dp0
xmrig.exe -o rx.unmineable.com:3333 -u XRP:rDE9nDFxx7pxEFACbpFZbV1o3AxwMAGf4x.wrkID#e4xd-wmzl -p x
pause
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the second line after the -o you can see the Pool URL, in this case all you have to do depending on your location is to use one of the following URLs (select the one closer to your location).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USA:&lt;/strong&gt; rx-us.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Europe:&lt;/strong&gt; rx-eu.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Asia:&lt;/strong&gt; rx-asia.unmineable.com:3333&lt;/p&gt;

&lt;p&gt;Then, the third line is where you will enter your wallet's public address (copied in STEP 1), place it after the XRP: and before the first dot "." .&lt;/p&gt;

&lt;p&gt;The general structure of the address needs to be:&lt;/p&gt;

&lt;p&gt;[COIN]:[Wallet address].[workerID]#[Code to lower mining fee]&lt;/p&gt;

&lt;p&gt;The workerID is any name you want to give to each computer where you are running the miner so it can easily be identified later on under the pool stats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code after the # is important&lt;/strong&gt; because mining with that code will drop the Mining Fee from 1% to 0.75% (it makes a difference). You can start mining using that code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Run the file as an administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" alt="XMRig Mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything goes well, you are now running XMRig and are mining. Congrats !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with GPU:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would recommend you to get: Teamredminer (AMD cards), Phoenixminer (AMD/NVIDIA) or Trex (Nvidia).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download these miner from the oficial sites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Phoenix miner: &lt;a href="https://bitcointalk.org/index.php?topic=2647654.0"&gt;Bitcoin Talk forum&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Teamred miner: &lt;a href="https://github.com/todxx/teamredminer/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trex: &lt;a href="https://github.com/trexminer/T-Rex/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then set them up with a smilar Start.bat file as mentioned in the CPU section above. &lt;/p&gt;

&lt;p&gt;Pay attention to some changes you would need to implement: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 4gb cards you need to set the algo on the miner to ETCHASH and the coin to ETC. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 6gb cards or more then you need to set the algo on the miner to ETHAS and the coin to ETH. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to also set the pool url accordingly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ETCHASH: etchash.unmineable.com:3333&lt;/li&gt;
&lt;li&gt;ETHASH:  ethash.unmineable.com:3333&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once done, run the file as administrator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can Log into Unmineable to check your stats:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unmineable.com is a mining Pool which allows you to mine with your CPU using RandomX or GPUS using Etchash or Ethash and pay you in any coin you select. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" alt="Unmineable Site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember when you set up the address inside the Miner starter file ? &lt;/p&gt;

&lt;p&gt;Well, there you just let Unmineable know the coin you want to be paid in, in this example XRP and then the address where they will transfer the mined coins.&lt;/p&gt;

&lt;p&gt;In order to check your balance, log into &lt;a href="https://unmineable.com"&gt;Unmineable&lt;/a&gt; and then select the coin you want to mine. In this example, Ripple XRP.&lt;/p&gt;

&lt;p&gt;Then you can select the Tab that reads RandomX or ETCHAS or ETHASH depending on your algo, and enter your address in the box that reads "Enter your address to check your stats:". &lt;/p&gt;

&lt;p&gt;After doing this you will see the balance on your account and you will even be able to request a payment.&lt;/p&gt;




&lt;p&gt;Congrats, you are a miner now! &lt;/p&gt;

&lt;p&gt;I recommend downloading some software to monitor the running temperature of your CPU and GPU, a good and free one is Hardware Monitor.&lt;/p&gt;

&lt;p&gt;Try not to exceed the temperature more than 90 degrees celsius. In case you are mining with a laptop, change the thermal paste of your CPU, get it cleaned inside, and get some heat extractors for laptops.&lt;/p&gt;

&lt;p&gt;If you take care of the temperature your computer should work very well, the amount of coins you can mine will depend on the hashrate of your CPU and GPUs. &lt;/p&gt;

&lt;p&gt;For GPUS download MSI Afterburner and set the appropriate Overclocking profile so you can get higher hashrates.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember to use a valid address for each coin, for example if you want to be paid in ADA then you need a valid Cardano blockchain address. In this example Binance Smart Chain is used and you would receive a CAKE token on the BSC blockchain.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;If you are looking for more information into CPU mining, there's a good guide in a PDF ebook and is Free, get it at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" alt="Mining with CPU"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Referral Disclosure:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Please read the Unmineable Referral Policy at the following link to better understand How the referral code works in detail &lt;a href="https://www.unmineable.com/referrals"&gt;Unmineable Referrals&lt;/a&gt;&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>ripple</category>
    </item>
    <item>
      <title>API Testing - Executing API Tests on the command line</title>
      <author>Dheeraj Aggarwal</author>
      <pubDate>Tue, 26 Oct 2021 07:36:08 +0000</pubDate>
      <link>https://dev.to/dheerajaggarwal/api-testing-executing-api-tests-on-the-command-line-jia</link>
      <guid>https://dev.to/dheerajaggarwal/api-testing-executing-api-tests-on-the-command-line-jia</guid>
      <description>&lt;p&gt;vREST NG allows you to write your API tests via easy-to-use UI and scriptless assertions. And you may execute them using the command line module by just providing the project directory path. This video explains how you execute those API tests on the command line.&lt;/p&gt;

&lt;p&gt;vREST NG is a script less API test automation tool. It helps you to write maintainable test cases quickly for functional and regression testing of APIs. You can download and install the vREST NG application directly on Windows, OSX, and Linux via our website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Video Link:&lt;/strong&gt; &lt;a href="https://youtu.be/wDUDCPfbphk"&gt;https://youtu.be/wDUDCPfbphk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Testing Tutorials Playlist:&lt;/strong&gt; &lt;a href="https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0"&gt;https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Important Links:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://vrest.io/?utm_source=devto&amp;amp;utm_medium=devto-desc&amp;amp;utm_campaign=video"&gt;vREST NG Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/NtRa7kw"&gt;Community Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meetings.hubspot.com/dheeraj-aggarwal"&gt;Book a Live Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please do like and share if you found this video helpful and let the voice heard by the testing community. Also, let us know your feedback by commenting on this post.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>tutorial</category>
      <category>apitesting</category>
      <category>vrest</category>
    </item>
  </channel>
</rss>
