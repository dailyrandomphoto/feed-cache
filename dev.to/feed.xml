<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>QuestDB raises $12M Series A as the adoption of its time series database grows</title>
      <author>Brian Thomas Smith</author>
      <pubDate>Thu, 04 Nov 2021 09:53:05 +0000</pubDate>
      <link>https://dev.to/questdb/questdb-raises-12m-series-a-as-the-adoption-of-its-time-series-database-grows-1j26</link>
      <guid>https://dev.to/questdb/questdb-raises-12m-series-a-as-the-adoption-of-its-time-series-database-grows-1j26</guid>
      <description>&lt;p&gt;To continue development on &lt;a href="https://github.com/questdb/questdb"&gt;QuestDB&lt;/a&gt;, the open source database for time series, we have raised a $12 million Series A investment led by 468 Capital, with participation from Uncorrelated Ventures and more than 15 enterprise open source founders and executives to grow the team, increase product development and accelerate adoption. In tandem with the funding round, Florian Leibert, co-founder of Mesosphere, joined QuestDB’s board of directors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#funded-by-leaders-in-open-source"&gt;
  &lt;/a&gt;
  Funded by leaders in open source
&lt;/h2&gt;

&lt;p&gt;The backing comes from innovators such as Tom Preston-Werner, GitHub co-founder, Sebastien Pahl, Docker co-founder, Alexis Ohanian, Reddit co-founder, Mirko Novakovic, Instana co-founder, Andrey Alekseev, NGINX co-founder and Tobi Knaup, D2iQ CEO, as well as Michael Li, VP Data at Coinbase and Grace Francisco, VP Developer Relations Strategy at Cisco.&lt;/p&gt;

&lt;p&gt;The round of funding was also made possible with participation from Sumedh Pathak, Citus Data co-founder, James Hawkins, PostHog CEO, Paul Copplestone, Supabase CEO, and Dan Pinto, FingerprintJS CEO. QuestDB is now supported by investors who bring years of collective experience in open source and enterprise software domains and have invested personally in the expansion and success of the company at a phase of rapid growth.&lt;/p&gt;

&lt;p&gt;The infusion of funds will support continued growth and drive product innovation, building up support and success functions to meet expanding user demand. These resources will enable us to continue powering high-performance applications that rely on robust, easy-to-use analytics. This round also allows the engineering team behind QuestDB to develop new features for a cloud-native database and launch a DBaaS platform that offers fully managed time series database solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-fastest-open-source-time-series-database"&gt;
  &lt;/a&gt;
  The fastest open source time series database
&lt;/h2&gt;

&lt;p&gt;Developers rely on QuestDB for time series insights and real-time applications in FinTech, DevOps monitoring, asset tracking, Big Data, machine learning engines, digital factories, geospatial analysis, autonomous vehicles, and a growing list of use cases that depend on high-performance ingestion and queries over massive data sets in real-time. Collecting data quickly and efficiently allows for the storage of vast amounts of information without wasting compute resources; making sense of the collected data is a different challenge.&lt;/p&gt;

&lt;p&gt;QuestDB allows developers to use SQL as a query language to answer questions about how their data looks without the barrier of entry that comes with proprietary query languages. Analyzing historical aspects of data allows users to understand changes over time, identify patterns, and make better decisions on future trends. The engineering team behind QuestDB has built a system that's easier to use and more powerful than open source alternatives by providing support for SQL, faster queries through massively parallelized execution via SIMD, and ingestion speeds that reach millions of rows per second.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#driven-by-productled-growth"&gt;
  &lt;/a&gt;
  Driven by product-led growth
&lt;/h2&gt;

&lt;p&gt;The QuestDB team is dedicated to improving product functionality and enhancements, and regularly delivers features and stability improvements. In the last six months alone, the engineering team has delivered geospatial data support, out-of-order data ingestion, new SQL extensions and accelerators for working with time series data and time zones, along with &lt;a href="https://aws.amazon.com/marketplace/pp/prodview-cddeafdirexw6?sr=0-1&amp;amp;ref_=beagle&amp;amp;applicationId=AWSMPContessa"&gt;AWS Marketplace&lt;/a&gt; offerings and &lt;a href="https://marketplace.digitalocean.com/apps/questdb"&gt;DigitalOcean applications&lt;/a&gt; for flexible deployments. These features empower users to work with complex data sets, including spatial data and allow developers to quickly and easily build time series applications where their infrastructure operates.&lt;/p&gt;

&lt;p&gt;Since QuestDB &lt;a href="https://news.ycombinator.com/item?id=23975807"&gt;launched at Y Combinator&lt;/a&gt; one year ago, the company has been embraced by developers looking for high-ingestion and query speeds, and an open source alternative to proprietary solutions. Engineers continue to support QuestDB, which now consists of a community of more than 10,000 developers and is reflected in the DB-Engines ranking, which shows &lt;a href="https://db-engines.com/en/ranking/time+series+dbms"&gt;a 187% increase in popularity&lt;/a&gt; over the last 12 months. The adoption of QuestDB continues to expand with unique deployed instances growing 20% per month, and powering the infrastructure of industry leaders such as &lt;a href="https://questdb.io/customers"&gt;Airbus and Yahoo&lt;/a&gt;. The success of this funding round increases the company's valuation 10 times versus seed a year ago and will invigorate product and community development in preparation for upcoming launches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-users-say-about-questdb"&gt;
  &lt;/a&gt;
  What users say about QuestDB
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;"QuestDB is used at Airbus for real-time applications involving hundreds of millions of data points per day. For us, QuestDB is an outstanding solution that meets (and exceeds) our performance requirements." - &lt;strong&gt;Oliver Pfeiffer, Software Architect, Airbus&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;"We use QuestDB to monitor metrics for autoscaling decisions within our ML engine that provides search, recommendation, and personalization via models and aggregations on continuously changing data." - &lt;strong&gt;Jon Bratseth, VP Architect, Yahoo&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;"When we set out to design the next generation of our execution platform, one of our requirements was large-scale model calibration based on real-time market data streams. QuestDB allows us to derive quick insights on live and historical data that would not be achievable with other open source time series databases." - &lt;strong&gt;Jean-François Perreton, Head of Algo Quant, Kepler Cheuvreux&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#about-questdb"&gt;
  &lt;/a&gt;
  About QuestDB
&lt;/h2&gt;

&lt;p&gt;QuestDB is an open source high-performance time series database built from the ground up to offer breakthrough performance for real-time analytics using SQL. The team behind QuestDB brings decades of experience and technical approaches from low-latency applications to leverage real-time data processing. QuestDB is a remote-first company and is backed by leading venture capital firms and Y Combinator. For more information, visit &lt;a href="https://questdb.io/"&gt;questdb.io&lt;/a&gt;, &lt;a href="https://github.com/questdb/questdb"&gt;QuestDB on GitHub&lt;/a&gt;, or follow &lt;a href="https://twitter.com/QuestDb"&gt;@QuestDB&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>database</category>
      <category>news</category>
      <category>timeseries</category>
    </item>
    <item>
      <title>Why Programs Fail – a Book Review</title>
      <author>Shai Almog</author>
      <pubDate>Thu, 04 Nov 2021 09:49:45 +0000</pubDate>
      <link>https://dev.to/codenameone/why-programs-fail-a-book-review-41c3</link>
      <guid>https://dev.to/codenameone/why-programs-fail-a-book-review-41c3</guid>
      <description>&lt;p&gt;&lt;strong&gt;First in a long series of book reviews focusing on production, debugging and developer relations.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I got my new job as developer advocate at Lightrun, one of the first things I asked for was books. Lots of books. Some of them cover my new job and others talk about debugging. I’ve been debugging for decades, but I feel like the theory around debugging is a bit vague. My goal was to bolster my terminology used by academics and peers. A secondary goal is to see how others teach ideas related to debugging. &lt;/p&gt;

&lt;p&gt;The first book I received was  &lt;a href="https://www.whyprogramsfail.com/"&gt;“Why Programs Fail – a guide to systematic debugging” (second edition) by Andreas Zeller&lt;/a&gt; . I think this book is only half of the equation, the other half is Andreas’s wonderful website &lt;a href="https://www.debuggingbook.org/"&gt;https://www.debuggingbook.org/&lt;/a&gt;. I liked both even though I’m not exactly in the target demographic for either one. Andreas is a professor at Saarland University and as such has written a book and website both of which are designed as course material. They are still enjoyable without taking a course. I will qualify that both are (for the most part) mostly aimed at beginners.&lt;/p&gt;

&lt;p&gt;I used the word mostly since the book includes some more intermediate concepts and might be difficult for complete novices. My review focuses on the book since the website is a moving target and you can probably check it out faster than you can read this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-it-about"&gt;
  &lt;/a&gt;
  What is it About
&lt;/h2&gt;

&lt;p&gt;I was mostly looking for a debugging book. This isn’t a debugging book. At least not in the way I was hoping for, in fact his website is closer to what I was looking for in the first place.&lt;/p&gt;

&lt;p&gt;The book is about preventing failures, by preventing/lowering bugs. It classifies and organizes the terms we use to define a bug e.g.:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Defect – that’s a bug in the code&lt;/li&gt;
&lt;li&gt;Infection – incorrect program state&lt;/li&gt;
&lt;li&gt;Failure – observable incorrect behavior&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These definitions might seem semantic and related. After all a defect will usually be the cause of an infection/failure or both. But I see his point. I see developers often fix the infection instead of the defect or fix the defect without dealing with the infection. &lt;/p&gt;

&lt;p&gt;I’ll give an example, say we have a defect in the code that causes “undefined” values to pass into the application. That’s an infection. It went into the database which now has many cells with “undefined” as a value… That’s a failure a user might see in the UI.&lt;/p&gt;

&lt;p&gt;A bad fix will be to have a special case for the “undefined” string that would just hide the problem. Or stopping the undefined value before it enters the database. &lt;/p&gt;

&lt;p&gt;We need to fix the root defect. &lt;/p&gt;

&lt;p&gt;But that’s not enough, now that we have an infection we also need to clean up the bad data.&lt;/p&gt;

&lt;p&gt;The book doesn’t stop here, it talks about reproducibility and goes deep into testing, observability, anomalies etc.&lt;/p&gt;

&lt;p&gt;The book spends a lot of time on the process surrounding the actual debugging. Issue tracking, testing, logging and defensive coding practices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-liked"&gt;
  &lt;/a&gt;
  What I Liked
&lt;/h2&gt;

&lt;p&gt;The book is filled with anecdotes and stories that I loved. A lot of them are well known (first bug, F16 etc.) but for the target audience they might be new. As the book progresses there are more personal and lesser known stories which were my personal favorites. The basic story on the Commodore 64 made me laugh out loud.&lt;/p&gt;

&lt;p&gt;The Lufthansa Warsaw accident was a perfect example of a workaround to a design flaw. I think I might use that in future talks, very interesting.&lt;/p&gt;

&lt;p&gt;The explanations in the book and deduction are top notch. I particularly liked the discussion on slicing program logic to find the culprit in a case of failure. It’s a great way to explain such an elaborate process. The process of slicing is divided in a very methodical way. The process makes a lot of sense and I think I intuitively used a similar process when debugging but never actually followed a clear path like that.&lt;/p&gt;

&lt;p&gt;I think the sections about process are especially important for beginners. Usually when we onboard college graduates we need to explain the tools and they eventually understand the theory behind this. This book might explain the theory beforehand so they might pick the tools more easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-didnt-like"&gt;
  &lt;/a&gt;
  What I Didn’t Like
&lt;/h2&gt;

&lt;p&gt;I’d like to qualify this by saying that I like the book. I think most of the problems I had relate to me. I’m not a college student and I was looking for a book about debugging. There is one objective problem about the book though: it’s out of date. This isn’t too bad. It highlights how everything stays the same in some regards.&lt;br&gt;
Whenever the book talks about tools (bugzilla anyone?) It feels a bit like a blast from the past. &lt;/p&gt;

&lt;p&gt;While the core concepts in terms of developers are surprisingly similar to the ones in the book… The industry has shifted a lot. SRE, devops and QA industries completely changed the way we handle regressions and track issues. Modern APMs, log processing tools, continuous observation tools etc. are a seismic shift in our industry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;If you want to learn debugging as a beginner check out this site and also &lt;a href="https://www.debuggingbook.org/"&gt;https://www.debuggingbook.org/&lt;/a&gt; which seems like a great resource to learn debugging. This book provides the theoretical infrastructure you need to go through the whole quality process. Viewed under that lens as a tutorial it’s pretty good. The content is somewhat out of date but that doesn’t matter much if the target demographic is students.&lt;/p&gt;

&lt;p&gt;If you want to read it to learn more about these processes I suggest bolstering it with some newer books that cover newer thinking on these subjects. &lt;/p&gt;

&lt;p&gt;Alternatively, a 3rd edition can probably revisit a lot of the chapters and revitalize this book. Here’s hoping it will happen at some point.&lt;/p&gt;

</description>
      <category>books</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Why you should never use random module for generating passwords.</title>
      <author>Vaarun Sinha</author>
      <pubDate>Thu, 04 Nov 2021 09:43:19 +0000</pubDate>
      <link>https://dev.to/vaarun_sinha/why-you-should-never-use-random-module-for-generating-passwords-38nl</link>
      <guid>https://dev.to/vaarun_sinha/why-you-should-never-use-random-module-for-generating-passwords-38nl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-random-numbers-are-not-random"&gt;
  &lt;/a&gt;
  Why Random Numbers Are Not Random?
&lt;/h2&gt;

&lt;p&gt;The Random Numbers come from a particular seed number which is usually the system clock.Run the program below to understand the security risk.&lt;/p&gt;


&lt;div class="ltag__replit"&gt;
  &lt;iframe height="550px" src="https://repl.it/@MRINDIA1/Random-Numbers-Are-Not-Random?lite=true"&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;The Python Documentation also has a warning about the same: "The &lt;strong&gt;pseudo-random&lt;/strong&gt; generators of this module &lt;strong&gt;should not be used for security purposes&lt;/strong&gt;."&lt;/p&gt;

&lt;p&gt;So all the password generators you have built using random module are not secure!? So How do we generate cryptographically secure numbers/passwords?&lt;/p&gt;

&lt;p&gt;But there is another line after that warning:&lt;br&gt;
"&lt;em&gt;For security or cryptographic uses, see the secrets module.&lt;/em&gt;"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-this-secrets-module"&gt;
  &lt;/a&gt;
  What is this secrets module?
&lt;/h2&gt;

&lt;p&gt;The secrets module is used for generating cryptographically strong random numbers suitable for managing data such as passwords, account authentication, security tokens, and related secrets. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-it-is-different-from-the-random-module"&gt;
  &lt;/a&gt;
  How it is different from the random module?
&lt;/h3&gt;

&lt;p&gt;I found a really good post on reddit from which you can understand what is the difference between these two modules.&lt;/p&gt;

&lt;p&gt;The Post says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"with random your numbers come from some seed number, usually based on the system clock, which generates pseudo-random numbers. That means that if you get guess the seed, you can generate the same sequence of numbers. If you used pseudorandomly generated numbers as salts for all your passwords, then brute forcing the keys would become trivial.&lt;br&gt;
true random numbers come from "high entropy" seeds, meaning it's not just some number you can guess, it's things that are impossible to reproduce algorithmically. Imagine things like keyboard inputs, time between keystrokes, mouse movements, cpu usage, number of programs running, etc. It might not use those exactly, but you can see how the numbers it generates from those sources are literally impossible to reproduce which is why you want to use those ones as your encryption keys and salts."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And another post says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"It's more secure because it's less predictable. The random module uses an algorithm that's fast but it's possible to calculate what the next random number will be. That's fine for randomly placing things on the screen or something but for generating passwords it's important that the number is not predictable."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So basically it makes the seed really hard to guess( less predictable) &lt;/p&gt;

&lt;p&gt;Reddit Post 1: &lt;a href="https://www.reddit.com/r/learnpython/comments/7w8w6y/comment/dtyg7wd/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3"&gt;https://www.reddit.com/r/learnpython/comments/7w8w6y/comment/dtyg7wd/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Reddit Post 2:&lt;br&gt;
&lt;a href="https://www.reddit.com/r/learnpython/comments/7w8w6y/comment/dtyi6z8/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3"&gt;https://www.reddit.com/r/learnpython/comments/7w8w6y/comment/dtyi6z8/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stay tuned for the next blog where we make a password generator which generates cryptographically strong passwords.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>security</category>
    </item>
    <item>
      <title>Day 27 of 100 Days of Code &amp; Scrum: Rest Day &amp; Company Banner  </title>
      <author>Rammina</author>
      <pubDate>Thu, 04 Nov 2021 09:42:55 +0000</pubDate>
      <link>https://dev.to/rammina/day-27-of-100-days-of-code-scrum-rest-day-company-banner-20k5</link>
      <guid>https://dev.to/rammina/day-27-of-100-days-of-code-scrum-rest-day-company-banner-20k5</guid>
      <description>&lt;p&gt;Good day, everyone!&lt;/p&gt;

&lt;p&gt;I'm doing a lot better now compared to yesterday. Thank you for the kind concern and support!&lt;/p&gt;

&lt;p&gt;I decided to take it easier today compared to usual. However, I managed to get a lot done and I do have something to show. I've finally made a temporary, prototype design template for my company.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;I finished the official Next.js tutorial.&lt;/li&gt;
&lt;li&gt;finished reading &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I learned about Next.js performance and Core Web vitals.&lt;/li&gt;
&lt;li&gt;Also, I wrote Agile user stories for my company website.&lt;/li&gt;
&lt;li&gt;I read about scrum of scrums and distributed Agile teams.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;working on my company website.&lt;/li&gt;
&lt;li&gt;here is a temporary, prototype banner I've made for my company:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AXuEuIIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4z5xqz6wfpqcq6z6gmq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AXuEuIIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4z5xqz6wfpqcq6z6gmq.png" alt="Company Banner" width="880" height="335"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;I read about how to split user stories into tasks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once again, thank you to everyone for reading and supporting me! I wish you all the best!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dgd-9ezP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jhveg4yy4q0yqpb6nuy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgd-9ezP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jhveg4yy4q0yqpb6nuy.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Exploring the concept of the Metaverse and what it could mean for humans.</title>
      <author>Babatunde Fatai</author>
      <pubDate>Thu, 04 Nov 2021 09:39:33 +0000</pubDate>
      <link>https://dev.to/babatunde/exploring-the-concept-of-the-metaverse-and-what-it-could-mean-for-humans-5dbe</link>
      <guid>https://dev.to/babatunde/exploring-the-concept-of-the-metaverse-and-what-it-could-mean-for-humans-5dbe</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This Metaverse is going to be far more pervasive and powerful than anything else. If one central company gains control of this, they will become more powerful than any government and be a god on Earth. Timothy Dean Sweeney (Epic Games) &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-metaverse"&gt;
  &lt;/a&gt;
  What is the Metaverse?
&lt;/h2&gt;

&lt;p&gt;Before I begin, I would like to inform those of you who are well-versed in the Metaverse concept that this article may not be for you, that the vast majority of people I have spoken to have no idea what the Metaverse is, and it is to them that I write. &lt;/p&gt;

&lt;p&gt;There are currently many definitions and speculations on what the Metaverse is and how it should be defined, for this article I will be sticking with a definition from the &lt;a href="https://www.matthewball.vc/all/forwardtothemetaverseprimer"&gt;Metaverse Primer&lt;/a&gt; by venture capitalist and writer Matthew Ball (who was previously head of strategy at Amazon Studios):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Metaverse is a massively scaled and interoperable network of real-time rendered 3D virtual worlds which can be experienced synchronously and persistently by an effectively unlimited number of users, and with continuity of data, such as identity, history, entitlements, objects, communications, and payments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To put it simply, the Metaverse is a virtual universe made up of connected experiences built to be cross-platform. That is, it isn't just accessible by VR headsets alone, but a whole range of devices including but not limited to computer systems, gaming consoles, mobile phones, XR hardware not leaving out physical presence. &lt;/p&gt;

&lt;p&gt;The term Metaverse comes from Neal Stephenson’s 1992 sci-fi novel Snow Crash, where it was used to describe a VR successor to the internet. The Novel inspired the popular Ready Player One movie, which portrays a possibility of what the Metaverse could shape up to look like. It is important to note however that the Novel proposes VR as the Metaverse of the future, but current trajectories and experts say otherwise. The Metaverse is perceived by many experts as the successor of mobile internet and 2D communications. Rather than just having access to the internet when virtually communicating with friends, the metaverse would empower us to exist within the internet in what will lead to increased Social Presence. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#social-presence-and-the-metaverse"&gt;
  &lt;/a&gt;
  Social Presence and the Metaverse
&lt;/h2&gt;

&lt;p&gt;Social presence is important because it goes beyond just communicating in real-time, which your phone and various meeting apps can do, to communicating and interacting as if you are physically together, with gestures, reactions, impressions, and interactions playing a very big role, &lt;a href="https://dev.to/babatunde/the-impact-of-social-presence-and-co-presence-on-virtual-and-augmented-reality-4b9h"&gt;my article&lt;/a&gt; about the impact of Social presence and Co-presence dives deeper into this.&lt;/p&gt;

&lt;p&gt;The concept of "presence" distinguishes the Internet from the metaverse; Matthew Ball, who has written extensively on the subject, defined the Metaverse in 2020 as possessing the seven qualities, the Metaverse must:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Be persistent – which is to say, it never “resets” or “pauses” or “ends”, it just continues indefinitely.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be synchronous and live – even though pre-scheduled and self-contained events will happen, just as they do in “real life”, the Metaverse will be a living experience that exists consistently for everyone and in real-time&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be without any cap to concurrent users, while also providing each user with an individual sense of “presence” – everyone can be a part of the Metaverse and participate in a specific event/place/activity together, at the same time and with individual agency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be a fully functioning economy – individuals and businesses will be able to create, own, invest, sell, and be rewarded for an incredibly wide range of “work” that produces “value” that is recognized by others.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be an experience that spans both the digital and physical worlds, private and public networks/experiences, and open and closed platforms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Offer unprecedented interoperability of data, digital items/assets, content, and so on across each of these experiences – your “Counter-Strike” gun skin, for example, could also be used to decorate a gun in Fortnite, or be gifted to a friend on/through Facebook. Similarly, a car designed for Rocket League (or even for Porsche’s website) could be brought over to work in Roblox. Today, the digital world basically acts as though it were a mall where every store used its own currency, required proprietary ID cards, had proprietary units of measurement for things like shoes or calories, and different dress codes, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be populated by “content” and “experiences” created and operated by an incredibly wide range of contributors, some of whom are independent individuals, while others might be informally organized groups or commercially-focused enterprises.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#facebooks-meta-name-change-and-effect"&gt;
  &lt;/a&gt;
  Facebook’s (Meta) name change and effect.
&lt;/h2&gt;

&lt;p&gt;The Metaverse will introduce a new degree of freedom in social communication. Not one person or brand can tell you how it would shape up to look like, although many companies are already shaping various aspects of its possible future. &lt;/p&gt;

&lt;p&gt;A few weeks before Facebook's name change to Meta, Microsoft’s CEO Satya Nadella &lt;a href="https://www.youtube.com/watch?v=uS46IO_sKwc"&gt;endorsed the Metaverse&lt;/a&gt; as a strategic goal for Microsoft, where he talked about the use of both Azure digital Twin and Azure IoT to implement Metaverse like solutions, he was also quoted saying:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"as the virtual and physical worlds converge the metaverse made up of digital twins, simulated environments, and mixed reality, is emerging as a first-class platform."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Microsoft later used the word “enterprise metaverse" in a subsequent event, making it clear that it isn’t only Facebook that has its eyes on the ball nor understands the opportunities this new and emerging landscape will provide.&lt;/p&gt;

&lt;p&gt;The truth is we may not fully know what the Metaverse of the future will look like, the first reason being that it is at a very early stage and it is obvious that Facebook's name change and works in the hardware, software and gaming ecosystem has stirred things up, Facebook's ambition is bold, not just the name change, the Oculus Quest 2 released by Facebook has surpassed expectations with over 1.8 million units sold as of 2020, making the company one of the top deliverers of immersive experiences. &lt;/p&gt;

&lt;p&gt;With over 3 billion users of Facebook products worldwide, a dedication to research and development, a maturing immersive ecosystem and more, their goal of creating a shared reality for more than half of the world seems like a feasible aim. However, that reality will most certainly coexist with multiple realities, it is very important to note that there are thousands of brands pushing forward the establishment of the Metaverse, an example is &lt;a href="https://www.vaulthill.io/"&gt;Vault Hill&lt;/a&gt; a decentralised virtual reality (VR) and augmented reality (AR) world where users can interact with computer-generated imagery (CGI) and other users and &lt;a href="https://decentraland.org/"&gt;Decentraland&lt;/a&gt; a decentralised 3D virtual reality platform which uses the Ethereum blockchain which was opened to the public in February 2020. There are also many more brands building connected experiences and technologies that would be instrumental in shaping what the Metaverse would look like and how we will interact with it. Facebook may have changed its name to Meta, but we all hold the brush and if you are reading this, you must have noticed that the painting on the canvas has begun.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-the-metaverse-is-not"&gt;
  &lt;/a&gt;
  What the Metaverse is not?
&lt;/h2&gt;

&lt;p&gt;Metaverse is a relatively new term in terms of it going mainstream. Because of the kind of relationship and similarities shared between it and many experiential technologies it is quite understandable that confusion may arise in trying to understand or define what it is or isn’t, this is why I will be going through a few major misconceptions and try my best to clarify to the best of my knowledge.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Metaverse is not a game
The Metaverse is not a game, because it goes far beyond gaming, though the gaming ecosystem is one of the major drivers of the concept and is probably one of the closest in implementing a working prototype. You may not have made the connection if you are not a gamer, but the gaming ecosystem has for a long time started exhibiting symptoms of shifting towards a Metaverse like state, and Epic Games have been very vocal about this, their popular multiplayer game Fortnite demonstrates very strong attributes of a Metaverse, admittedly it still has a long way to go it has served as a testbed for the metaverse concept. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Taking a close look at where it is now; Players designing their own avatars from a variety of skins that span a wide range of IPs, the ability to purchase products that only exist in virtual spaces, in game-exclusive currency, the interaction between players, events such as concerts, movies, and others… etc. Fortnite may possess and are integrating attributes similar to a Metaverse, but they still have much to do in implementing the seven main qualities that define a Metaverse as stated above. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sidenote: I think bridging these sorts of highly interactive and immersive gaming platforms, for example making it easy for players to be able to move their characters, values and more across platforms may further advance the shift towards the Metaverse. There are some things working for and against the establishment of a true Metaverse and we will discuss them down the line.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R2mP8oiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yhx33wgfzhenf28xf188.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R2mP8oiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yhx33wgfzhenf28xf188.jpg" alt="Fortnite " width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Metaverse is not Virtual Reality&lt;br&gt;
It may be a little tricky to differentiate between the Metaverse and a virtual reality platform, especially when the name originates from a fictional VR metaverse concept, but just as mobile phones, computer hardware and more are devices used to access the metaverse so are VR headsets, they provide a way to experience and interact with virtual worlds, but they are by no means the only way to access the Metaverse.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Metaverse is not a virtual world/space&lt;br&gt;
Virtual worlds have been in existence for a while now, a game such as GTA possesses AI-driven characters in a virtual world which even accepts human inputs, there are also virtual worlds that are populated by humans that still do not qualify as Metaverses. Things like gaming, shopping, attending classes and meetings, interacting with friends... etc. which many virtual spaces currently provide will only be parts of the features of a fully functional Metaverse.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#my-top-3-predictions-on-the-future-of-metaverse"&gt;
  &lt;/a&gt;
  My Top 3 Predictions on the Future of Metaverse
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It will be bigger in terms of population and economy than many nations on earth.&lt;/li&gt;
&lt;li&gt;It will not replace physical reality and activities because even the physical is also seen by many experts as a component of the Metaverse. I predict, however, that having a Metaverse will have a positive impact on the environment, individuals and brands that utilize it properly.&lt;/li&gt;
&lt;li&gt;I believe some companies may try to claim significant parts of the Metaverse to have strategic control, making accessibility harder further damaging the goal of making it decentralized, cross-platform and open. (I hope not but predict so).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#some-things-working-for-or-against-the-establishment-of-a-true-metaverse"&gt;
  &lt;/a&gt;
  Some things working for or against the establishment of a true Metaverse?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Technological Limitations: Without ultrafast, low-latency internet, the metaverse would never attain its full potential — millions of people accessing with various devices and living in the virtual world from anywhere, at any time in real-time isn't an easy thing to achieve. Today's third and fourth-generation (4G) connections can manage streaming multiplayer games like Call of Duty and Fortnite, but they can't handle hundreds of simultaneous transmissions of time-sensitive data to the degree needed for a fully functional Metaverse just yet. This is why the development of 5G networks and 6G networks will go a long way in achieving the goal.&lt;/li&gt;
&lt;li&gt;Governmental regulations: There are increasingly growing number of people &lt;a href="https://www.bloomberg.com/news/articles/2021-03-19/virtual-land-prices-are-booming-and-now-there-s-a-fund-for-that"&gt;buying virtual lands&lt;/a&gt; and spending their money on virtual properties and services, things such as entitlements, properties, payment platforms amongst many would exist within the Metaverse and we need to start having serious thoughts on how these things will be regulated, will they be regulated by private institutions or would the Government want to have a hand in it? If they do, what would this mean in terms of accessibility and adoption? Would the Metaverse truly be decentralized?&lt;/li&gt;
&lt;li&gt;Technological Advancements: Advancement in technology like Blockchain, cryptocurrencies, NFTs, Extended Reality hardware (eg. VR headsets)..etc. has been a strong driving force in making the Metaverse concepts catch on, many of the new platforms are based on or utilize some of these technology in some way, allowing a new kind of decentralised digital asset to be built, owned and monetised.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We should expect more, probably much more than we currently do on the impact the Metaverse would have on our lives and businesses, it is also an extremely advantageous thing that large brands with experience designing, developing and pushing out products are putting their money and workforce into this. My next writup on this will be addressing how everyday people and medium sized businesses should prepare themselves and their businesses for a future in which Metaverses exist, either fully or in a higher capacity than they currently do, I will also focus on the possible impact this may have on the African continent and how youths can strategically position themselves in preparation for the future. Until then, Keep learning.&lt;/p&gt;

</description>
      <category>metaverse</category>
      <category>socialpresence</category>
      <category>facebook</category>
      <category>beginners</category>
    </item>
    <item>
      <title>GraphQL in React</title>
      <author>theDro</author>
      <pubDate>Thu, 04 Nov 2021 09:35:24 +0000</pubDate>
      <link>https://dev.to/dro1/graphql-in-react-97k</link>
      <guid>https://dev.to/dro1/graphql-in-react-97k</guid>
      <description>&lt;p&gt;Hello guys👋🏼, today we'd be talking about graphQL and how it works with React. We'd also be looking at a popular library called Apollo that helps handle GraphQL requests in most frontend frameworks including React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What is GraphQL&lt;/li&gt;
&lt;li&gt;REST vs GraphQL&lt;/li&gt;
&lt;li&gt;Making Requests to REST &amp;amp; GraphQL APIs&lt;/li&gt;
&lt;li&gt;Making GraphQL requests with Apollo&lt;/li&gt;
&lt;li&gt;Should you use GraphQL?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-graphql"&gt;
  &lt;/a&gt;
  What is GraphQL
&lt;/h3&gt;

&lt;p&gt;GraphQL (publicly released in 2015) is a query language for APIs and server-side runtime for fulfilling those queries with your existing data (as stated on the GraphQL documentation). Simply put, GraphQL is a way of interacting with your APIs that involves using a query language to send requests and the server sending responses based on the query. This query can also be in form of a mutation in cases where we want to edit or update a particular document. GraphQL works with schemas which are simply rules that dictate the type of data we can query or mutate and the queries or mutations that can be performed on them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rest-vs-graphql"&gt;
  &lt;/a&gt;
  REST vs GraphQL
&lt;/h3&gt;

&lt;p&gt;REST (Representational State Transfer) was the de-facto standard (some would argue it still is) for building APIs as it enabled a whole lot of simplicity while using APIs as compared to its predecessors (SOAP and CORBA). With REST:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Every request is handled independently, therefore, a request must be accompanied with every bit of information needed for the server to successfully process it. &lt;/li&gt;
&lt;li&gt;REST also brought about the use of HTTP verbs: GET, POST, PUT, PATCH, DELETE, OPTIONS, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seems like REST has done a lot of good already, then why, why would we want to leave our good ol' REST for this new (REST was popularised in 2000) tool?&lt;/p&gt;

&lt;p&gt;Well, as good as our RESTful APIs are, they have some drawbacks:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#statelessness"&gt;
  &lt;/a&gt;
  Statelessness
&lt;/h4&gt;

&lt;p&gt;This actually seems to fall on both sides of the spectrum as it can be advantageous too. The fact that we don't handle state on the server makes our server lightweight and reduces its complexity but this state management is then pushed to the frontend thereby increasing its complexity.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h4&gt;

&lt;p&gt;SOAP APIs are more secure as opposed to REST APIs as they undergo more stringent security protocols but evidently require more management.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#overfetching-underfetching-data"&gt;
  &lt;/a&gt;
  Overfetching / Underfetching Data
&lt;/h4&gt;

&lt;p&gt;Say we had an ecommerce app and we're trying to get the reviews of a particular user's product. We'd probably have a route to get the list of users and we could make this route return all products of a particular user as well as the reviews of each product. Whenever we need the names of users only, we will be overfetching data because we'd be getting the products and their reviews. &lt;/p&gt;

&lt;p&gt;On the other hand, we could break it down by having a route to get all users, another route to get the list of products owned by a user and one more route to get the reviews of that product. This would be underfetching because we had to make 3 requests to get our desired response.&lt;/p&gt;

&lt;p&gt;Lastly, we could have two &lt;code&gt;getUsers&lt;/code&gt; routes with one responding with the list of users only and the other responding with the products and reviews too. Unfortunately, this would break our DRY (Don't Repeat Yourself) rule and might increase the complexity of our server.&lt;/p&gt;

&lt;p&gt;GraphQL helps us solve this last issue effortlessly through the use of its query language because we're specifying exactly what we want from the server on every request. REST and GraphQL can be used together on one server but that will also cause an increase in complexity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-requests-to-rest-amp-graphql-apis"&gt;
  &lt;/a&gt;
  Making Requests to REST &amp;amp; GraphQL APIs
&lt;/h3&gt;

&lt;p&gt;Sending requests to both APIs are similar in the sense that they use JSON to send and receive data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;get&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/todos/1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// data: {&lt;/span&gt;
  &lt;span class="c1"&gt;//   firstName: 'Finn',&lt;/span&gt;
  &lt;span class="c1"&gt;//   lastName: 'Williams'&lt;/span&gt;
  &lt;span class="c1"&gt;// }&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above is the typical way to send requests to a REST API using the &lt;code&gt;axios&lt;/code&gt; package. The &lt;code&gt;method&lt;/code&gt; stands for the HTTP verb, and &lt;code&gt;data&lt;/code&gt;, the request body we want to send along with the request.&lt;/p&gt;

&lt;p&gt;With GraphQL, all requests are POST requests going to a particular route usually &lt;code&gt;/graphql&lt;/code&gt; and the code snippet is like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`query GetProductById($id: String){
     getProductById(id: $id){
       name
       price
       imageUrl
 }
}`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;productId&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;post&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.mygraphqlserver.com/graphql,
  data: body
}).then((resp) =&amp;gt; {
  console.log(resp.data);
});

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We write our query (or mutation) in template literals, and our variables in an object. variables are simply values in our code we want to pass into our query. The keys &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;variables&lt;/code&gt; of our body object must be named like that for our graphQL request to be successful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-graphql-request-with-apollo"&gt;
  &lt;/a&gt;
  Making GraphQL Request with Apollo
&lt;/h3&gt;

&lt;p&gt;Apollo is a library that can be used on the client to communicate with GraphQL servers, serve as a state management library on the client and can also be used to set up a GraphQL server on the backend. When using Apollo on the client (and utilizing it's state management feature) , it sort of combines our GraphQL server schema with the schema we provide it on the client side (the client side schema represents our client side state). When making requests, we then specify in our query if Apollo should check on the client or on the server. We won't be using the state management features of Apollo in this tutorial though.&lt;/p&gt;

&lt;p&gt;To get started, create a React App by running &lt;br&gt;
&lt;code&gt;yarn create react-app apollo-app&lt;/code&gt; &lt;br&gt;
then install Apollo and GraphQL by running &lt;code&gt;yarn apollo/client graphql&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Head to the index.js file and paste the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ApolloClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;InMemoryCache&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ApolloProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@apollo/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;InMemoryCache&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ApolloClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://mygraphqlserver.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;cache&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ApolloProvider&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ApolloProvider&amp;gt;, document.getElementById&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;"root"&lt;/span&gt;&lt;span class="se"&gt;))&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We simply created the &lt;code&gt;client&lt;/code&gt; passing in the URL of our GraphQL server and &lt;code&gt;cache&lt;/code&gt;. The &lt;code&gt;client&lt;/code&gt; object is then passed as a prop to the &lt;code&gt;ApolloProvider&lt;/code&gt;. This enables us make GraphQL requests in our components with Apollo.&lt;/p&gt;

&lt;p&gt;Then in the component where the request is to be made, App.js in this case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@apollo/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GET_COLLECTIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="s2"&gt;`
query GetProductById($id: String){
     getProductById(id: $id){
       name
       price
       imageUrl
 }
}`&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GET_COLLECTIONS&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;productId&lt;/span&gt; &lt;span class="c1"&gt;//Where id is the product id&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;An&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="nx"&gt;Occurred&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;StaBlitz&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Start&lt;/span&gt; &lt;span class="nx"&gt;editing&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;see&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="nx"&gt;magic&lt;/span&gt; &lt;span class="nx"&gt;happen&lt;/span&gt; &lt;span class="p"&gt;:)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the component, we first import &lt;code&gt;useQuery&lt;/code&gt; and &lt;code&gt;gql&lt;/code&gt;. &lt;code&gt;useQuery&lt;/code&gt; helps us to actually make the request while &lt;code&gt;gql&lt;/code&gt; helps us create the query (or mutation). You pass the query as the first argument to the &lt;code&gt;useQuery&lt;/code&gt; function. In cases where you have variables (like we do), you pass them in an object as the second argument to the &lt;code&gt;useQuery&lt;/code&gt; function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#should-you-use-graphql"&gt;
  &lt;/a&gt;
  Should you use GraphQL
&lt;/h3&gt;

&lt;p&gt;Well, like most things in software engineering, &lt;strong&gt;It depends&lt;/strong&gt;. GraphQL has grown in popularity since its release mainly due to the problem it solves and probably because it's backed by Meta (Facebook). It has garnered a lot more users and seems to have become a serious opponent but REST is still being used by most companies. My advice will be to play around with GraphQL on side projects cause what do you lose from learning something new 😏🤷🏽‍♂️.&lt;/p&gt;

&lt;p&gt;Feel free to comment what you think about GraphQL overtaking REST and any other thing you think I missed in the article.&lt;br&gt;
Thanks for reading the article ❤. Till we meet again, I remain &lt;a href="https://twitter.com/the_dro_"&gt;@the_dro&lt;br&gt;
_&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>graphql</category>
      <category>apollo</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to get the size of a directory in Linux</title>
      <author>Boyan Iliev</author>
      <pubDate>Thu, 04 Nov 2021 09:17:37 +0000</pubDate>
      <link>https://dev.to/boiliev/how-to-get-the-size-of-a-directory-in-linux-3bhd</link>
      <guid>https://dev.to/boiliev/how-to-get-the-size-of-a-directory-in-linux-3bhd</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Linux is one of the most popular operating systems in the world. It is Unix-like, and it is also open-source. Quite a big percentage of developers use Linux because it can be customized in so many ways.&lt;/p&gt;

&lt;p&gt;What's cool about Linux is its command line. Every 'hackers' paradise. There are a ton of commands. If you aren't familiar with any Linux commands, be sure to check out this post on the &lt;a href="https://devdojo.com/bo-iliev/8-linux-commands-everyone-should-know"&gt;8 Linux Commands Everyone Should Know&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There is probably a command for almost anything that you want to do. For example what if you wanted to get the size of a directory? Well luckily for you there is a command for that. In this post, we are going to talk about that command and see what it can offer.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-raw-du-endraw-command"&gt;
  &lt;/a&gt;
  The &lt;code&gt;du&lt;/code&gt; command
&lt;/h1&gt;

&lt;p&gt;This command lets the user get a quick view of the &lt;strong&gt;disk usage&lt;/strong&gt;. The best way to use it is by giving it the directory you want to see the size of. It should look a little something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;du directory_name

// output
2314    directory_name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give you the size of all the files and at the very end, it will give you the size of the directory itself. You could point out the full path, or you could just give the name of the directory you want to see if you are already on the same path.&lt;/p&gt;

&lt;p&gt;But we could make this even easier just b adding 2 &lt;strong&gt;flags&lt;/strong&gt;. Flags help the command change its behavior. For the &lt;code&gt;du&lt;/code&gt; command we could add the flags &lt;code&gt;-s&lt;/code&gt; and &lt;code&gt;-h&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-s&lt;/code&gt; stands for &lt;strong&gt;summarize&lt;/strong&gt; and it will show you only the total size of the directory, without all those files popping up on your screen.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-h&lt;/code&gt; stands for &lt;strong&gt;human-readable&lt;/strong&gt; and it will convert the size so that you can read it easier. Just by running the command without the &lt;code&gt;-h&lt;/code&gt; flag doesn't specify you a unit of measurement.&lt;/p&gt;

&lt;p&gt;So now to get the best of this command, you should run it like this with the &lt;code&gt;-s&lt;/code&gt; and &lt;code&gt;-h&lt;/code&gt; flags:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;du -sh directory_name

// output
44.5M   directory_name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And if you wanted to see all of the directories sizes, you could just run this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;du -sh ./*

// output
12.2M   dir1
 2.5M   dir2
  55M   dir3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another thing you can do is use pipe(&lt;code&gt;|&lt;/code&gt;) and sort them by size, which will make it even easier for you to see their sizes. What &lt;code&gt;|&lt;/code&gt; does is get the output from the command behind it and add it into the input of the command after it. So to sort the directories by size just run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;du -sh ./* | sort -h

// output
  55M   dir3
12.2M   dir1
 2.5M   dir2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This is a pretty useful command that I think everybody should know, just because of how short and easy it is. I hope that this post has helped you and I wish you happy coding.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>terminal</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>dApps / Web3 - Help me finally understand / ELI5! </title>
      <author>InHuOfficial</author>
      <pubDate>Thu, 04 Nov 2021 08:09:50 +0000</pubDate>
      <link>https://dev.to/inhuofficial/dapps-web3-help-me-finally-understand-eli5-4dc3</link>
      <guid>https://dev.to/inhuofficial/dapps-web3-help-me-finally-understand-eli5-4dc3</guid>
      <description>&lt;p&gt;OK so I have read a few things about blockchain and dApps, I have listened to a few Twitter spaces and tried to educate myself on this.&lt;/p&gt;

&lt;p&gt;But I am still not seeing the actual big picture, rather than a hype train and I want to understand it finally!&lt;/p&gt;

&lt;p&gt;Crypto currencies make sense, NFTs kind of make sense (although the current "NFT points at a URL to prove ownership" model is flimsy at best) but dApps...they make no sense to me!&lt;/p&gt;

&lt;p&gt;How do you get minimal latency lookups (like how does DNS work on such a complex network). &lt;/p&gt;

&lt;p&gt;Why is it beneficial to have a distributed network where you don't control when the core "operating system" software updates and may be running different versions on different nodes. &lt;/p&gt;

&lt;p&gt;How do you roll back a major mistake that exposes user data (for example) fast enough to avoid problems? And on the same track, if a node gets compromised in some way, who is responsible for the breach (my understanding is limited so this might be unlikely, I don't know!) &lt;/p&gt;

&lt;p&gt;How is it better when it will inevitably result in more jumps and hops to data nodes, which won't be as efficient as large data centres and therefore use &lt;strong&gt;more&lt;/strong&gt; energy. &lt;/p&gt;

&lt;p&gt;Updating 10,000+ different data nodes rather than 6/7 CDNs seems like it is going to exponentially multiply data transmission data costs and energy costs.&lt;/p&gt;

&lt;p&gt;All of these questions assume that "Gas prices" drop to next to nothing and it becomes commercially viable of course, which at the moment it certainly isn't.&lt;/p&gt;

&lt;p&gt;Please, I may sound cynical, I am not really, I just don't see the Web3 benefits as clearly as everyone else apparently does!&lt;/p&gt;

&lt;p&gt;Also if my terminology is crap, apologies, ask me if something doesn't make sense!&lt;/p&gt;

</description>
      <category>web3</category>
      <category>webdev</category>
      <category>explainlikeimfive</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Angular 13 ya esta disponible</title>
      <author>Antonio Cardenas </author>
      <pubDate>Thu, 04 Nov 2021 08:02:43 +0000</pubDate>
      <link>https://dev.to/macaoblog/angular-13-ya-esta-disponible-2oce</link>
      <guid>https://dev.to/macaoblog/angular-13-ya-esta-disponible-2oce</guid>
      <description>&lt;p&gt;Articulo original de &lt;a href="https://blog.angular.io/"&gt;Angular Blog&lt;/a&gt; por &lt;a href="https://blog.angular.io/@markathompson"&gt;Mark Thompson&lt;/a&gt;&lt;br&gt;
¡Estamos de regreso con la nueva versión de Angular v13 para compartir con todos ustedes! Esta última versión trae todo tipo de actualizaciones y funciones para ayudar a sus equipos a crear aplicaciones geniales.&lt;br&gt;
Obtenga Angular v13 ahora ejecutando &lt;code&gt;ng update&lt;/code&gt; en su proyecto. También tenemos una guía de actualización disponible en update.angular.io para ayudar a los equipos a obtener instrucciones sobre cómo actualizar sus proyectos.&lt;/p&gt;

&lt;p&gt;Con cada nuevo lanzamiento  nuestro objetivo es encontrar maneras de mejorar Angular. En esta versión, lo hemos logrado mediante la expansión de las funciones y optimizaciones basadas en Ivy, asociándonos con nuestra excelente comunidad Angular y continuando brindando un proceso de actualización estable y fluido para sus equipos y proyectos.&lt;br&gt;
Comencemos con un vistazo a cómo estamos moviendo Angular hacia adelante con el poder de Ivy.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#moviendo-el-renderizado-angular-hacia-el%C2%A0futuro"&gt;
  &lt;/a&gt;
  Moviendo el renderizado Angular hacia el futuro
&lt;/h2&gt;

&lt;p&gt;En la versión v12 de mayo de 2021 hablamos sobre "Ivy Everywhere" y mencionamos que habría algunos cambios importantes en Angular para respaldar esta iniciativa. Hemos sido diligentes en la búsqueda de esto y estamos muy contentos de haber logrado algunos cambios impactantes en la versión 13, ya que Ivy continúa abriendo puertas para optimizaciones y mejoras.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#motor-de-estado-de-vista-state-of-view%C2%A0engine"&gt;
  &lt;/a&gt;
  Motor de estado de vista( State of View Engine)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;View Engine&lt;/strong&gt; ya no está disponible en Angular a partir de v13. Esta es una gran noticia porque Angular puede continuar creando funciones basadas en Ivy que refuerzan su productividad con la plataforma. Eliminar View Engine también significa que Angular puede reducir su dependencia de ngcc (compilador de compatibilidad Angular) en el futuro, y los equipos pueden esperar una compilación más rápida porque los metadatos y los archivos de resumen ya no están incluidos.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#cambios-en-el-formato-de-paquete-angular%C2%A0apf"&gt;
  &lt;/a&gt;
  Cambios en el formato de paquete angular (APF)
&lt;/h2&gt;

&lt;p&gt;El formato de paquete angular (APF) se ha simplificado y modernizado para brindar un mejor servicio a los desarrolladores. Para optimizar el APF en v13, hemos eliminado los formatos de salida más antiguos, incluidos los metadatos específicos de View Engine.&lt;/p&gt;

&lt;p&gt;Para modernizarlo, lo hemos estandarizado en formatos JS más modernos, como ES2020. Las bibliotecas creadas con la última versión de APF ya no requerirán el uso de ngcc. Como resultado de estos cambios, los desarrolladores de bibliotecas pueden esperar un resultado de paquete más reducido y una ejecución más rápida.&lt;/p&gt;

&lt;p&gt;También actualizamos el APF para admitir las exportaciones de paquetes de nodos. Esto ayudará a los desarrolladores a no depender inadvertidamente de las API internas que pueden cambiar.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#actualizaciones-de-la-api-de-componentes"&gt;
  &lt;/a&gt;
  Actualizaciones de la API de componentes
&lt;/h2&gt;

&lt;p&gt;Ivy también permite mejoras en la calidad de vida en la forma en que los desarrolladores pueden crear componentes dinámicamente. La API ahora se ha simplificado. Antes de los cambios en Angular v13, la creación dinámica de componentes requería mucho código repetitivo.&lt;br&gt;
La nueva API elimina la necesidad de inyectar  &lt;code&gt;ComponentFactoryResolver&lt;/code&gt; en el constructor. Ivy crea la oportunidad de crear una instancia del componente con &lt;code&gt;ViewContainerRef.createComponent&lt;/code&gt; sin crear una fábrica asociada.&lt;/p&gt;

&lt;p&gt;A continuación, se muestra un ejemplo de creación de componentes con versiones anteriores de Angular:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Con la nueva API, este código puede convertirse en:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Tenemos muchas más mejoras de API como esta en proceso que serán habilitadas por Ivy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fin-del-soporte-de%C2%A0ie11"&gt;
  &lt;/a&gt;
  Fin del soporte de IE11
&lt;/h2&gt;

&lt;p&gt;Escuchamos sus comentarios y trabajamos para allanar el camino adelante hacia eliminación del soporte de IE11 en Angular v13.&lt;/p&gt;

&lt;p&gt;La eliminación de la compatibilidad con IE11 permite a Angular aprovechar las funciones modernas del navegador, como las variables CSS y las animaciones web a través de las API web nativas. Además, las aplicaciones serán más pequeñas y se cargarán más rápido porque podemos eliminar polyfills y rutas de código específicos de IE. También elimina la necesidad de carga diferencial. Los desarrolladores se beneficiarán de las API mejoradas y la infraestructura de construcción, mientras que los usuarios de la aplicación se beneficiarán de una carga más rápida y una experiencia de usuario mejorada.&lt;/p&gt;

&lt;p&gt;La ejecución de &lt;code&gt;ng update&lt;/code&gt; eliminará automáticamente estos polyfills específicos de IE y reducirá el tamaño del paquete durante la migración del proyecto.&lt;/p&gt;

&lt;p&gt;Gracias a todos los que participaron en la solicitud de comentarios (RFC). Los desarrolladores que aún necesitan admitir a los usuarios de IE11 para proyectos existentes pueden continuar usando Angular v12 y será admitido hasta noviembre de 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mejoras-en-el-cli-de%C2%A0angular"&gt;
  &lt;/a&gt;
  Mejoras en el CLI de Angular
&lt;/h2&gt;

&lt;p&gt;A las actualizaciones de las herramientas de Angular. Angular ahora admite el uso de caché de compilación persistente de forma predeterminada para nuevos proyectos v13. Los valiosos comentarios de [RFC] Caché de compilación persistente de forma predeterminada llevaron a esta actualización de herramientas que da como resultado una mejora de hasta un 68% en la velocidad de compilación y opciones más ergonómicas. Para que los proyectos existentes que se han actualizado a v13 habiliten estas características, los desarrolladores pueden agregar esta configuración a &lt;code&gt;angular.json&lt;/code&gt;:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Obtenga más detalles en la &lt;a href="https://next.angular.io/cli/cache"&gt;documentación&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;¡ESBuild también ve algunas mejoras de rendimiento en esta versión! Presentamos &lt;code&gt;esbuild&lt;/code&gt;, que ahora funciona con &lt;code&gt;terser&lt;/code&gt; para optimizar los scripts globales. Además, &lt;code&gt;esbuild&lt;/code&gt; admite mapas de origen CSS y puede optimizar CSS global, así como optimizar todas las hojas de estilo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cambios-en-el-framework-y-actualizaciones-de-dependencias"&gt;
  &lt;/a&gt;
  Cambios en el Framework y actualizaciones de dependencias
&lt;/h2&gt;

&lt;p&gt;Angular v13 también presenta algunas actualizaciones útiles y cambios importantes. Primero, RxJS 7.4 es ahora el predeterminado para las aplicaciones creadas con ng new. Las aplicaciones existentes que usen RxJS v6.x deberán actualizarse manualmente usando el comando npm install &lt;a href="mailto:rxjs@7.4"&gt;rxjs@7.4&lt;/a&gt;. Para obtener más información sobre los cambios de la versión 6 a la versión 7, consulte este resumen en rxjs.dev.&lt;/p&gt;

&lt;p&gt;Si eso no fuera suficiente, ahora hay soporte para TypeScript 4.4. Puede encontrar más información consultando el blog de versiones de TypeScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mejoras-en-las-pruebas-en%C2%A0angular"&gt;
  &lt;/a&gt;
  Mejoras en las pruebas en Angular
&lt;/h2&gt;

&lt;p&gt;Hemos realizado algunas mejoras importantes en TestBed que ahora hacen un mejor trabajo al derribar los módulos y entornos de prueba después de cada prueba. El DOM ahora se limpia después de cada prueba y los desarrolladores pueden esperar pruebas más rápidas, menos intensivas en memoria, menos interdependientes y más optimizadas.&lt;/p&gt;

&lt;p&gt;Esta función se ha habilitado desde la versión 12.1.0 y ahora será la predeterminada y seguirá siendo personalizable. He aquí cómo: se puede configurar para todo el conjunto de pruebas a través del método &lt;code&gt;TestBed.initTestEnvironment&lt;/code&gt;:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;O se puede configurar por módulo actualizando el método &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt;:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Esto proporciona la flexibilidad para aplicar estos cambios donde tengan más sentido para cada proyecto y sus pruebas. Consulte este &lt;a href="https://dev.to/this-is-angular/improving-angular-tests-by-enabling-angular-testing-module-teardown-38kh"&gt;blog&lt;/a&gt; de &lt;a href="https://twitter.com/LayZeeDK"&gt;Lars Gyrup Brink Nielsen&lt;/a&gt; para obtener más información.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#todo-sobre-componentes"&gt;
  &lt;/a&gt;
  Todo sobre componentes
&lt;/h2&gt;

&lt;p&gt;La accesibilidad (a11y) tiene que ser la base de todo lo que construimos dentro y fuera de la comunidad Angular. Nos tomamos esta responsabilidad en serio y el &lt;a href=""&gt;trabajo que hemos realizado&lt;/a&gt; ha dado como resultado mejoras y cambios significativos en los componentes de &lt;a href=""&gt;Angular Material&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Todos los componentes basados en MDC han sido evaluados para cumplir con estándares elevados en áreas como contraste, objetivos táctiles, ARIA y más.&lt;/p&gt;

&lt;p&gt;Para tener una mejor idea de cómo estos cambios afectan a los componentes, eche un vistazo a los ajustes que hemos realizado en los tamaños de los objetivos táctiles para componentes como la casilla de verificación y el botón de radio.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dBBtKeH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2A_FqkArEGigX11xR-" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dBBtKeH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2A_FqkArEGigX11xR-" alt="Una comparación de los tamaños de los objetivos táctiles." width="700" height="396"&gt;&lt;/a&gt; Los tamaños de la derecha son los nuevos tamaños.&lt;br&gt;
También ha habido algunas mejoras en los modos de alto contraste para múltiples componentes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uxsQ6d1A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AoCPIThGrOpBrudqA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uxsQ6d1A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AoCPIThGrOpBrudqA" alt="Componentes de material en modo de alto contraste" width="700" height="362"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Obtenga más información sobre estos cambios en la publicación de nuestro blog sobre &lt;a href="http://goo.gle/v13-accessibility"&gt;cómo mejorar la accesibilidad de Componentes en Angular&lt;/a&gt;. Esperamos que esto ayude a todos a crear aplicaciones angulares más inclusivas.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#otras-actualizaciones-notables"&gt;
  &lt;/a&gt;
  Otras actualizaciones notables
&lt;/h2&gt;

&lt;p&gt;Con el lanzamiento de &lt;a href="https://medium.com/ngesyfirebase/angular-11-7a6f8284ecbf"&gt;Angular v11&lt;/a&gt; en 2020, presentamos soporte para insertar fuentes de Google. Ahora, estamos ampliando la compatibilidad con &lt;a href="https://fonts.adobe.com"&gt;Adobe Fonts&lt;/a&gt;. Recuerde, las fuentes insertadas pueden mejorar el rendimiento de su aplicación al acelerar el &lt;a href="https://web.dev/first-contentful-paint"&gt;First Contentful Paint (FCP)&lt;/a&gt;. ¡Este cambio ahora está habilitado para todos de forma predeterminada! Todo lo que necesita hacer es actualizar. Tenemos un video sobre la inserción de fuentes que puede ser útil, compruébalo aquí:&lt;/p&gt;

&lt;p&gt;YouTube: &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yOpy9UMQG-Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hicimos cambios importantes en los documentos de angular.io para brindarles a los desarrolladores más información sobre la API de localización. Las guías de localización se han actualizado para incluir secciones más pequeñas para que el viaje de aprendizaje sea más claro. También agregamos más documentación de API para &lt;code&gt;$localize.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribuciones-de-la-comunidad"&gt;
  &lt;/a&gt;
  Contribuciones de la comunidad
&lt;/h2&gt;

&lt;p&gt;La comunidad Angular nunca deja de destacar de una manera enorme al agregar características al framework. El equipo de Angular está increíblemente agradecido por una comunidad tan vibrante y solidaria. Dediquemos un momento a destacar algunas de las contribuciones que se incluyeron en esta versión.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#activardesactivar-validadores-din%C3%A1micamente"&gt;
  &lt;/a&gt;
  Activar/desactivar validadores dinámicamente
&lt;/h2&gt;

&lt;p&gt;Enviado por &lt;a href="https://twitter.com/iReal_Nirmal"&gt;Nirmal Bhagwani&lt;/a&gt;, este &lt;a href="https://github.com/angular/angular/pull/42565"&gt;PR&lt;/a&gt; permite que los validadores integrados se deshabiliten estableciendo el valor en &lt;code&gt;null&lt;/code&gt;. Esto se vuelve cada vez más útil al construir formularios dinámicos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#restaurar-el-historial-despu%C3%A9s-cancelar-la-navegaci%C3%B3n"&gt;
  &lt;/a&gt;
  Restaurar el historial después cancelar la navegación
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/aahmedayed"&gt;Ahmed Ayed&lt;/a&gt; contribuyó con un &lt;a href="https://github.com/angular/angular/pull/38884"&gt;PR&lt;/a&gt; que permite que el indicador del enrutador &lt;code&gt;canceledNavigationResolution&lt;/code&gt; restaure el valor calculado del historial del navegador cuando se configura como &lt;code&gt;computed&lt;/code&gt;(calculado).&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Estas son algunas de las actualizaciones que destacamos, pero aún más contribuciones vinieron de la comunidad:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular/commit/59225f5586f1319a47768cef2e3325d7ab6940aff"&gt;Haciendo que la API de SwUpdate sea un poco más ergonómica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/vscode-ng-language-service/commit/4fcbdb74ab82f74a832f7dbbc36adbffe51cc411"&gt;Configuración de Language Service para habilitar la aplicación automática del encadenamiento opcional en el símbolo que acepta valores NULL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular/commit/4f3beffdbfa974b380b2225f163d363dd17e10bd"&gt;El enrutador emite eventos de activación / desactivación cuando un oulet se conecta/desconecta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;¡Y más!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un enorme agradecimiento a todos los miembros de la comunidad que han hecho contribuciones al Framework. Avanzamos juntos con Angular.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pensamientos-finales"&gt;
  &lt;/a&gt;
  Pensamientos finales
&lt;/h2&gt;

&lt;p&gt;Angular continúa avanzando con la ayuda de la comunidad estelar de Angular. Gracias a todos por sus contribuciones al repositorio. Además, gracias por sus valiosos comentarios en las RFC. Su apoyo nos ayuda a dar forma al futuro de Angular avanzando con &lt;a href="https://github.com/angular/angular/discussions/43784"&gt;componentes independientes&lt;/a&gt; y compatibles con los estándares web modernos.&lt;/p&gt;

&lt;p&gt;Para obtener una descripción general más detallada, consulte nuestro &lt;a href="https://github.com/angular/angular/blob/master/CHANGELOG.md"&gt;registro de cambios completo&lt;/a&gt;. Obtenga la última versión de Angular y háganos saber lo que piensa; puede encontrar una guía de actualización detallada en &lt;a href="https://update.angular.io/?locale=es-CR&amp;amp;v=12.0-13.0"&gt;update.angular.io.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hasta la próxima, amigos, vayan a crear aplicaciones geniales.&lt;/p&gt;

&lt;p&gt;Gracias a Igor Minar.&lt;/p&gt;

&lt;p&gt;puedes leer el articulo original &lt;a href="https://blog.angular.io/angular-v13-is-now-available-cce66f7bc296"&gt;aquí&lt;/a&gt; , Muchas gracias a la comunidad de Angular al equipo de desarrollo y a todos los que leen y comparten el contenido&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>spanish</category>
    </item>
    <item>
      <title>Luos community is open!</title>
      <author>Emanuel Allely</author>
      <pubDate>Thu, 04 Nov 2021 07:54:23 +0000</pubDate>
      <link>https://dev.to/luos/luos-community-is-open-3bp5</link>
      <guid>https://dev.to/luos/luos-community-is-open-3bp5</guid>
      <description>&lt;p&gt;📢 Hey fellow developers, the Luos Community is now open! Join it and discuss with other embedded developers searching for new open-source tools and methodologies to unleash embedded systems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Join the &lt;a href="http://bit.ly/JoinLuosSlack"&gt;Luos Slack Community&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join the &lt;a href="http://bit.ly/JoinLuosDiscord"&gt;Luos Discord Community&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join the &lt;a href="http://bit.ly/JoinLuosReddit"&gt;Luos Reddit Community&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join the &lt;a href="http://bit.ly/JoinLuosForum"&gt;Luos Forum&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's build the future of #embedded together 🤲&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sTUbXRiW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqt9n26p2ap1ir1cvm9t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sTUbXRiW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqt9n26p2ap1ir1cvm9t.png" alt="Image description" width="880" height="253"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>luos</category>
      <category>embedded</category>
      <category>community</category>
      <category>opensource</category>
    </item>
    <item>
      <title>File Upload in Next js </title>
      <author>es404020</author>
      <pubDate>Thu, 04 Nov 2021 07:49:33 +0000</pubDate>
      <link>https://dev.to/es404020/file-upload-in-next-js-12i6</link>
      <guid>https://dev.to/es404020/file-upload-in-next-js-12i6</guid>
      <description>&lt;p&gt;As easy as file upload my sound to mid level or senior developer, junior developer still struggle to implement file upload without having to use the default input tag for file upload .In this tutorial we would learn how to implement file upload on a button click with next.js and Chakara UI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;input type="file"
                  ref={hiddenFileInput}
                  onChange={handleChange}

                  accept="image/*"
                  style={{ display: 'none' }} /&amp;gt;


&amp;lt;IconButton onClick={handleClick} size="xx-small" pos="absolute" zIndex="10" left="5px" bottom="5px"
 aria-label="file upload " icon={&amp;lt;BiCloudUpload /&amp;gt;} /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h2&gt;

&lt;p&gt;We have to create an input filed with a style display to none. This helps us hide the input tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const hiddenFileInput = useRef(null);

  const handleChange = event =&amp;gt; {

    if (event.target.files &amp;amp;&amp;amp; event.target.files[0]) {
      const i = event.target.files[0];
      const body = new FormData();
      body.append("image", i);


    }
  };


  const handleClick = event =&amp;gt; {
    hiddenFileInput.current.click();
  };

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the react useRef hook  as a reference on the input tag we can  access the content of tag .&lt;/p&gt;

&lt;p&gt;Calling the handleClick helps call a click event on the invisible input tag giving us the chances to pick a file for upload.&lt;/p&gt;

&lt;p&gt;The handleChange help to listern to change on the input tag. When handling file upload it is important to use FormData() if you intend to store on a server.&lt;/p&gt;

&lt;p&gt;Thanks for reading .&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>HTML tags | select</title>
      <author>Carlos Espada</author>
      <pubDate>Thu, 04 Nov 2021 07:20:12 +0000</pubDate>
      <link>https://dev.to/carlosespada/html-tags-select-2ne5</link>
      <guid>https://dev.to/carlosespada/html-tags-select-2ne5</guid>
      <description>&lt;p&gt;It is used to &lt;strong&gt;represent a control that provides a menu of options&lt;/strong&gt;. Each menu option is defined by an &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element nested inside the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Each &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element should have a &lt;code&gt;value&lt;/code&gt; attribute containing the data value to submit to the server when that option is selected. If no &lt;code&gt;value&lt;/code&gt; attribute is included, the value defaults to the text contained inside the element. You can include a &lt;code&gt;selected&lt;/code&gt; attribute on an &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element to make it selected by default when the page first loads.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element has some unique attributes you can use to control it, such as &lt;code&gt;multiple&lt;/code&gt; to specify whether multiple options can be selected, and &lt;code&gt;size&lt;/code&gt; to specify how many options should be shown at once. It also accepts most of the general form input attributes such as &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;autofocus&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;You can further &lt;strong&gt;nest&lt;/strong&gt; &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; &lt;strong&gt;elements inside&lt;/strong&gt; &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; &lt;strong&gt;elements to create separate groups of options&lt;/strong&gt; inside the dropdown.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#autocomplete"&gt;
  &lt;/a&gt;
  autocomplete
&lt;/h3&gt;

&lt;p&gt;A &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMString"&gt;DOMString&lt;/a&gt; providing a hint for a user agent's autocomplete feature.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#autofocus"&gt;
  &lt;/a&gt;
  autofocus
&lt;/h3&gt;

&lt;p&gt;This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form element in a document can have the &lt;code&gt;autofocus&lt;/code&gt; attribute.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disabled"&gt;
  &lt;/a&gt;
  disabled
&lt;/h3&gt;

&lt;p&gt;This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example&lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;; if there is no containing element with the &lt;code&gt;disabled&lt;/code&gt; attribute set, then the control is enabled.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#form"&gt;
  &lt;/a&gt;
  form
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element to associate the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; with (its form owner). The value of this attribute must be the &lt;code&gt;id&lt;/code&gt; of a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; in the same document. (If this attribute is not set, the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; is associated with its ancestor &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element, if any.)&lt;/p&gt;

&lt;p&gt;This attribute lets you associate &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; elements to &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;s anywhere in the document, not just inside a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;. It can also override an ancestor &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiple"&gt;
  &lt;/a&gt;
  multiple
&lt;/h3&gt;

&lt;p&gt;This Boolean attribute indicates that multiple options can be selected in the list. If it is not specified, then only one option can be selected at a time. When &lt;code&gt;multiple&lt;/code&gt; is specified, most browsers will show a scrolling list box instead of a single line dropdown.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#name"&gt;
  &lt;/a&gt;
  name
&lt;/h3&gt;

&lt;p&gt;This attribute is used to specify the name of the control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#required"&gt;
  &lt;/a&gt;
  required
&lt;/h3&gt;

&lt;p&gt;A Boolean attribute indicating that an option with a non-empty string value must be selected.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#size"&gt;
  &lt;/a&gt;
  size
&lt;/h3&gt;

&lt;p&gt;If the control is presented as a scrolling list box (e.g. when &lt;code&gt;multiple&lt;/code&gt; is specified), this attribute represents the number of rows in the list that should be visible at one time. Browsers are not required to present a select element as a scrolled list box. The default value is &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;According to the HTML5 specification, the default value for size should be &lt;code&gt;1&lt;/code&gt;; however, in practice, this has been found to break some web sites, and no other browser currently does that, so Mozilla has opted to continue to return &lt;code&gt;0&lt;/code&gt; for the time being with Firefox.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling"&gt;
  &lt;/a&gt;
  Styling
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element is notoriously difficult to style productively with CSS. You can affect certain aspects like any element — for example, manipulating the &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model"&gt;box model&lt;/a&gt;, the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts"&gt;displayed font&lt;/a&gt;, etc., and you can use the &lt;code&gt;appearance&lt;/code&gt; property to remove the default system appearance.&lt;/p&gt;

&lt;p&gt;However, &lt;strong&gt;these properties don't produce a consistent result across browsers&lt;/strong&gt;, and it is hard to do things like line different types of form element up with one another in a column. The &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element's internal structure is complex, and hard to control. If you want to get full control, &lt;strong&gt;you should consider using a library&lt;/strong&gt; with good facilities for styling form widgets, or try rolling your own dropdown menu using non-semantic elements, JavaScript, and &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/WAI-ARIA_basics"&gt;WAI-ARIA&lt;/a&gt; to provide semantics.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type: &lt;em&gt;inline-block&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Self-closing: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Semantic value: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/tags/tag_select.asp"&gt;Definition&lt;/a&gt; | &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_select"&gt;Example&lt;/a&gt; | &lt;a href="https://caniuse.com/mdn-html_elements_select"&gt;Support&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tags</category>
      <category>select</category>
    </item>
  </channel>
</rss>
