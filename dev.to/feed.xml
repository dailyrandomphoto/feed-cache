<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The 4 Frontend tips about a11y and UX for October</title>
      <author>Stas Melnikov</author>
      <pubDate>Tue, 19 Oct 2021 17:00:43 +0000</pubDate>
      <link>https://dev.to/melnik909/the-4-frontend-tips-about-a11y-and-ux-for-october-1801</link>
      <guid>https://dev.to/melnik909/the-4-frontend-tips-about-a11y-and-ux-for-october-1801</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-button-role-isnt-enough-for-an-accessible-interface"&gt;
  &lt;/a&gt;
  The button role isn't enough for an accessible interface
&lt;/h2&gt;

&lt;p&gt;There is a practice of overriding the button's default role. It's a bad practice already because authors of the ARIA in HTML standard prohibit overriding of default roles in section 2.1.&lt;/p&gt;

&lt;p&gt;But in addition, people think if they define role="button" this element becomes accessible. Yes, it's true for screen readers. But that's only one case!&lt;/p&gt;

&lt;p&gt;This "button" isn't accessible for a keyboard. Users can't focus on this element using the tab key. Also, this "button" isn't accessible for interaction using the enter or space keys.&lt;/p&gt;

&lt;p&gt;So if you want to define role="button" don't do that. Just use the button element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-bigger-clickable-area-the-better-userfriendly-interactive-elements"&gt;
  &lt;/a&gt;
  The bigger clickable area the better user-friendly interactive elements
&lt;/h2&gt;

&lt;p&gt;When we design interactive elements we have to think about how users will interact with them, in particular, a clickable area. &lt;/p&gt;

&lt;p&gt;That is important because users use different kinds of interactions. I often see designers and developers make a clickable area that is equal sizes of the element. &lt;/p&gt;

&lt;p&gt;It's nice for users who use a mouse. But that's a big problem for other users. If users have  a motor disability click on such an element is a nearly impossible task,&lt;/p&gt;

&lt;p&gt;Sometimes I can't hit on such elements when I tap on them using a finger. Also outline around elements has not enough contrast, if I focused on them using a keyboard,&lt;/p&gt;

&lt;p&gt;But we can solve these problems easily. Just we should design more largest clickable area that will not conflict with other elements around.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-arialabelledby-simplify-navigation-for-users-of-screen-readers"&gt;
  &lt;/a&gt;
  The aria-labelledby simplify navigation for users of screen readers
&lt;/h2&gt;

&lt;p&gt;Any web interface has a lot of sections that help users without vision disabilities orient at the page. We just see headings and understand that is a section and also its sense.&lt;/p&gt;

&lt;p&gt;But some users can't see. They use the special quick navigation mode known as "Regions list" in screen readers. In this mode screen readers display all regions on the page. So users can go to any by some taps.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is a problem that is section elements aren't displayed in this mode until we associate section heading with a section using the aria-labelledby attribute.&lt;/p&gt;

&lt;p&gt;So we have to add the id to the heading and add this as a value to the aria-labelledby attribute that is defined for the section element.  As a result, this section will be added to the regions list and users will know about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#where-are-the-buttons-here"&gt;
  &lt;/a&gt;
  Where are the buttons here?
&lt;/h2&gt;

&lt;p&gt;Unfortunately, designers and developers don't know the importance of using the button element for any elements for which users can click. So why is that important?&lt;/p&gt;

&lt;p&gt;Yes, by default click applies on any elements. But not all users use a mouse for interaction with UI. For example, some users want to use tab, enter and space keys for interaction with UI. &lt;/p&gt;

&lt;p&gt;If we think about users of screen readers they can't interact with UI if button elements aren't on the page. &lt;/p&gt;

&lt;p&gt;So if you want to create an element by which users will click, please, make it is a button. &lt;/p&gt;

&lt;p&gt;For inspiration, I collected a few examples where the button element will be helpful. As a result, users will get a more user-friendly web interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cFP-1RfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/57394376/e15dcab999b0459cb6341f370c73c32a/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DafeXIOr2WFoLscg-HWErfvhNb44hMyoBY5jDfhu0aFI%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cFP-1RfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/57394376/e15dcab999b0459cb6341f370c73c32a/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DafeXIOr2WFoLscg-HWErfvhNb44hMyoBY5jDfhu0aFI%253D" alt="All dates inside a calendar are buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G52erXTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/81e352bb434747368259abb64bb60192/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DwKox3i0AZcg9AidPHEBlfco88LVTX5B37b3rP9w_FvQ%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G52erXTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/81e352bb434747368259abb64bb60192/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DwKox3i0AZcg9AidPHEBlfco88LVTX5B37b3rP9w_FvQ%253D" alt="The button for clearing selected dates inside a calendar is a button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XE7VsoCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/975142f987d249fea31cf6bfaecf112f/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DJtTF9f4zus9ce3HiMel5vXGXukm-1OdiLCYN1yVjVP0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XE7VsoCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/975142f987d249fea31cf6bfaecf112f/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DJtTF9f4zus9ce3HiMel5vXGXukm-1OdiLCYN1yVjVP0%253D" alt="The toggle on a previous month inside a calendar is a button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aznxhJmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/ce0d494c321d4415b8cfad42d350e339/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DLsiNIl0tnfUBiDViu10y8TqvnSSSiQZPVts1rNy1XvY%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aznxhJmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/ce0d494c321d4415b8cfad42d350e339/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DLsiNIl0tnfUBiDViu10y8TqvnSSSiQZPVts1rNy1XvY%253D" alt="The toggle on a next month inside a calendar is a button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SBRPEhZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/e6ac857309b94b6297d8f8ffa52c4438/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DNI9XILGhD9eLhUzvGCbezoZPP6TOG_f-mzZ-1qgGXKA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SBRPEhZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/e6ac857309b94b6297d8f8ffa52c4438/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DNI9XILGhD9eLhUzvGCbezoZPP6TOG_f-mzZ-1qgGXKA%253D" alt="All points that mark apartaments on a map are buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
Folks, I love to share my tips with you. I do that with the help of donations from my sponsors since content creating is my full-time job.&lt;/p&gt;

&lt;p&gt;For this reason I ask you to join my sponsors if you like what I do &lt;br&gt;
&lt;a href="https://www.patreon.com/melnik909"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0zkeHmS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3IjoxOTIwLCJ3ZSI6MX0%253D/patreon-media/p/campaign/2871133/09751df69a6d4a3990d4f6a2fb77340f/19.jpg%3Ftoken-time%3D1633305600%26token-hash%3DF2s9h-8VI8cZLJiiUalO1rewbCh6FPD_Qyepp1C7Aiw%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/melnik909"&gt;Go to Patreon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;❤ Thank you so much, my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten, Spiridon Konofaos.&lt;/p&gt;

&lt;p&gt;👀 Also I tell stories from my career on Substack. Join &lt;a href="https://stasmelnikov.substack.com"&gt;my free newsletter&lt;/a&gt;, if you're interested in my background&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>ux</category>
      <category>a11y</category>
    </item>
    <item>
      <title>Zoho corp campus...</title>
      <author>Lenin MariaJoseph 🎓</author>
      <pubDate>Tue, 19 Oct 2021 16:41:24 +0000</pubDate>
      <link>https://dev.to/lenin55555/zoho-corp-campus-2c6j</link>
      <guid>https://dev.to/lenin55555/zoho-corp-campus-2c6j</guid>
      <description>&lt;p&gt;Zoho corp, my company where I work for long time in chennai, India.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/lenin5/full/rNNQLgp"&gt;https://codepen.io/lenin5/full/rNNQLgp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This pen has been built using pure HTML, SCSS and javascript with no frameworks and images had been used.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to use React History in React JS</title>
      <author>Saleh-Mubashar</author>
      <pubDate>Tue, 19 Oct 2021 16:41:03 +0000</pubDate>
      <link>https://dev.to/salehmubashar/how-to-use-react-history-in-react-js-8dl</link>
      <guid>https://dev.to/salehmubashar/how-to-use-react-history-in-react-js-8dl</guid>
      <description>&lt;p&gt;Hi guys.&lt;/p&gt;

&lt;p&gt;Ok so today we I will give you all the simple steps to use&lt;br&gt;
&lt;strong&gt;Browser History&lt;/strong&gt; in React JS.&lt;br&gt;
Now you might be wondering, what is it for?&lt;br&gt;
**React Router History **can be used to go to a previous page or to go to the appropriate response page, for example after the&lt;br&gt;
a user logs in, he should be redirected to the dashboard page.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Install &lt;strong&gt;react router dom&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save react-router-dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;Import the history package from react router dom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useHistory&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;Assign the history function to a variable (not necessary but &lt;br&gt;
recommended)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useHistory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h3&gt;

&lt;p&gt;Use the &lt;code&gt;push()&lt;/code&gt; function to redirect the user &lt;em&gt;after a successful login, for example.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/dashboard&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are sending the user to the dashboard.&lt;/p&gt;




&lt;p&gt;And there you go!.&lt;br&gt;
Thank you all for reading this post.&lt;br&gt;
If it was helpful, please consider following :)&lt;br&gt;
Until next time&lt;br&gt;
Bye!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>How To Clone A Repository From Github Using Visual Studio 2019</title>
      <author>Benjamin Fadina</author>
      <pubDate>Tue, 19 Oct 2021 16:25:15 +0000</pubDate>
      <link>https://dev.to/benjaminsqlserver/how-to-clone-a-repository-from-github-using-visual-studio-2019-178j</link>
      <guid>https://dev.to/benjaminsqlserver/how-to-clone-a-repository-from-github-using-visual-studio-2019-178j</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/d2eWbYOjhhQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>repository</category>
      <category>github</category>
      <category>clone</category>
    </item>
    <item>
      <title>How to practice JavaScript ?</title>
      <author>ubuntu-mohammed-qasim</author>
      <pubDate>Tue, 19 Oct 2021 16:22:55 +0000</pubDate>
      <link>https://dev.to/mohammed_qasim_sattar/how-to-practice-javascript--a1i</link>
      <guid>https://dev.to/mohammed_qasim_sattar/how-to-practice-javascript--a1i</guid>
      <description>&lt;p&gt;I need to practice javascript anyone have idea how to start?&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>Circular Progress Bar using HTML and CSS</title>
      <author>Shantanu Jana</author>
      <pubDate>Tue, 19 Oct 2021 16:12:59 +0000</pubDate>
      <link>https://dev.to/shantanu_jana/circular-progress-bar-using-html-and-css-1oda</link>
      <guid>https://dev.to/shantanu_jana/circular-progress-bar-using-html-and-css-1oda</guid>
      <description>&lt;p&gt;Circular Progress Bar is a popular web element that is mainly used on business or personal websites. If you want to create a circular progress bar using HTML and CSS, then this article will help you. Here I am going to show you how to make a simple CSS circle progress bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.foolishdeveloper.com/2021/09/circular-progress-bar-using-html-css.html"&gt;Watch its live demo&lt;/a&gt; to learn how it works. When you load the page, this animation will go from zero to your assigned meaning. A percentage of text is used here, but no animation is used in this text. It is made in a very simple way. &lt;/p&gt;

&lt;p&gt;In this article, I will show you step by step how I made this circular progress bar design.To make it, you need to have an idea about basic HTML and CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-the-basic-structure-of-circular-progress-bar"&gt;
  &lt;/a&gt;
  Step 1: The basic structure of Circular Progress Bar
&lt;/h3&gt;

&lt;p&gt;I have used HTML and CSS to create the basic structure of the Circular Progress Bar. I have created a small circle on the webpage.&lt;/p&gt;

&lt;p&gt;The width and height of this circle are 150 px. The background color of the circle is white and margins are used to place it in the middle.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"circle-wrap"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Roboto"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#d2eaf1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.circle-wrap&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fefcff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#cdcbd0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Op7W0CU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4skngoh6mu01aq3woav.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Op7W0CU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4skngoh6mu01aq3woav.jpg" alt="The basic structure of Circular Progress Bar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-half-of-the-simple-css-circle-progress-bar"&gt;
  &lt;/a&gt;
  Step 2: Half of the simple CSS circle progress bar
&lt;/h3&gt;

&lt;p&gt;As I said before, the animation in this circle is divided into two parts. This means that the animation has been divided into two parts up to the customer value.&lt;/p&gt;

&lt;p&gt;I have made the first part of those two parts. Width and height 150 have been used to make this animation equal in size to the Circular Progress Bar. Similarly, &lt;code&gt;border-radius 50%&lt;/code&gt; has been used to make it round. &lt;/p&gt;

&lt;p&gt;Here I have set the background-color to blue. If you want to play an animation in another color, you can use that color here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mask half"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fill"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.circle-wrap&lt;/span&gt; &lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="nc"&gt;.mask&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.circle-wrap&lt;/span&gt; &lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="nc"&gt;.fill&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.mask&lt;/span&gt; &lt;span class="nc"&gt;.fill&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;75px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#227ded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ngE1Nxqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v5u3cfmktpzvox8vkbj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ngE1Nxqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v5u3cfmktpzvox8vkbj.jpg" alt="Half of the simple CSS circle progress bar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-the-other-half-of-the-circular-progress-bar"&gt;
  &lt;/a&gt;
  Step 3: The other half of the Circular Progress Bar
&lt;/h3&gt;

&lt;p&gt;Now I have designed the other half of the Circular Progress Bar. I set the time to three seconds by adding animation here. This means that when this page is opened, the animation will take 3 seconds to reach the meaning you set from zero.&lt;/p&gt;

&lt;p&gt;Here 135 degrees have been used using transform. This transform will determine where the animation will end in this circle. &lt;/p&gt;

&lt;p&gt;➤ We know that a circle is formed by 360. Since here we have divided the &lt;strong&gt;&lt;a href="https://www.foolishdeveloper.com/2021/09/circular-progress-bar-using-html-css.html"&gt;CSS circle progress bar&lt;/a&gt;&lt;/strong&gt; into two parts, so each part is 180 degrees. &lt;/p&gt;

&lt;p&gt;➤ Here we have set a &lt;code&gt;135-degree&lt;/code&gt; animation for each part using Transform. So it will be &lt;code&gt;270 degrees&lt;/code&gt; for the total circle. Here I want to increase the animation to 75% so I have used 270 degrees.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(360/100) * 75 = 270 &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You determine the value of this degree according to your needs. For example, if you want the animation of the Circular Progress Bar will be up to 80%. But for that, you have to use &lt;code&gt;144 degrees here&lt;/code&gt;. Lastly, I have implemented this animation using @keyframes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mask full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fill"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.circle-wrap&lt;/span&gt; &lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="nc"&gt;.mask&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;75px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.mask.full&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="nc"&gt;.fill&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt; &lt;span class="m"&gt;3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;135deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;135deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oozo6kfd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8q105trln1dtnyf1uhc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oozo6kfd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8q105trln1dtnyf1uhc.jpg" alt="The other half of the Circular Progress Bar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-create-a-percentage-in-the-circular-progress-bar"&gt;
  &lt;/a&gt;
  Step 4: Create a percentage in the Circular Progress Bar
&lt;/h3&gt;

&lt;p&gt;Now I have added percentages in this circular progress bar. Although that percentage of animation is not added. &lt;/p&gt;

&lt;p&gt;Added text using basic HTML and CSS code. I have used &lt;code&gt;text-align: center&lt;/code&gt; and position: absolute to place the text in the middle of the Circular Progress Bar.&lt;/p&gt;

&lt;p&gt;I used &lt;code&gt;border-radius: 50%&lt;/code&gt; to make its background width and height 122 px and round. Here I have used &lt;code&gt;font-size: 2em&lt;/code&gt; to make the size of the text smaller and larger.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"inside-circle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 75% &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.circle-wrap&lt;/span&gt; &lt;span class="nc"&gt;.inside-circle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;122px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;122px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#d2eaf1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1e51dc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F4urdXLs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/akm0ix0uean3sbz4t88u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F4urdXLs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/akm0ix0uean3sbz4t88u.jpg" alt="Circular Progress Bar using HTML and CSS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the picture above, now this CSS Circular Progress Bar is absolutely ready. Hope you find out from this article how I created this &lt;strong&gt;Circular Progress Bar using HTML and CSS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can visit my blog for more tutorials like this. 😊&lt;br&gt;
&lt;a href="https://www.foolishdeveloper.com/"&gt;https://www.foolishdeveloper.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Solution to Missing DOMContentLoaded Event when Enabling both HTML Auto Minify and Rocket Loader in Cloudflare</title>
      <author>Hollow Man</author>
      <pubDate>Tue, 19 Oct 2021 16:09:49 +0000</pubDate>
      <link>https://dev.to/hollowman6/solution-to-missing-domcontentloaded-event-when-enabling-both-html-auto-minify-and-rocket-loader-in-cloudflare-5ch8</link>
      <guid>https://dev.to/hollowman6/solution-to-missing-domcontentloaded-event-when-enabling-both-html-auto-minify-and-rocket-loader-in-cloudflare-5ch8</guid>
      <description>&lt;p&gt;Recently, I moved &lt;a href="https://hollowman.ml"&gt;my domain&lt;/a&gt; DNS record under &lt;a href="https://cloudflare.com/"&gt;Cloudflare&lt;/a&gt;. Cloudflare can smartly optimize web pages. But when I enabled HTML Auto Minify and Rocket Loader simultaneously, I found that the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event was missing when accessing the web pages. In this post, I’ll share my experience and solutions to this problem.&lt;/p&gt;

&lt;h2&gt;Introduction to Auto Minify and Rocket Loader&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://support.cloudflare.com/hc/en-us/articles/200168196-How-do-I-minify-HTML-CSS-and-JavaScript-to-optimize-my-site-"&gt;Auto Minify&lt;/a&gt; can delete unnecessary characters (such as spaces, comments, etc.) in the website source code to reduce the source file size, including CSS, Javascript, and HTML. As a result, it reduces the amount of data that needs to be transmitted to the visitor and shortens the page loading time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://support.cloudflare.com/hc/en-us/articles/200168056-What-does-Rocket-Loader-do-"&gt;Rocket Loader&lt;/a&gt; reduces rendering time by asynchronously loading JavaScript, including embedded JavaScript in web pages and third-party scripts. Please refer to &lt;a href="https://blog.cloudflare.com/we-have-lift-off-rocket-loader-ga-is-mobile/"&gt;their blog&lt;/a&gt; for further details.&lt;/p&gt;

&lt;h2&gt;Finding that the DOMContentLoaded event is missing&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState"&gt;As we all know&lt;/a&gt;, &lt;code&gt;document.readyState&lt;/code&gt; is defined as three states in Chrome:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the value is &lt;code&gt;loading&lt;/code&gt;, it means that the browser is rendering the web page.&lt;/li&gt;
&lt;li&gt;When it becomes &lt;code&gt;interactive&lt;/code&gt;, DOM elements on the web page can be accessed. However, resources such as images, style sheets, and frames are still being loaded.&lt;/li&gt;
&lt;li&gt;When finally it becomes &lt;code&gt;complete&lt;/code&gt;, it means that all resources of the webpage have been loaded.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;DOMContentLoaded&lt;/code&gt; window event is triggered when the state changes from &lt;code&gt;loading&lt;/code&gt; to &lt;code&gt;interactive&lt;/code&gt;. The &lt;code&gt;load&lt;/code&gt; window event is triggered when the state changes from &lt;code&gt;interactive&lt;/code&gt; to &lt;code&gt;complete&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, after enabling HTML Auto Minify and Rocket Loader simultaneously, I found that the functions meant to be executed when the &lt;code&gt;DOMContentLoaded&lt;/code&gt; window event was triggered were not executed actually.&lt;/p&gt;

&lt;p&gt;First of all, I judged that it’s impossible to be caused by bugs from web pages, as the website is working normally when I test them locally, and I also used the following code to ensure that the functions are directly executed when &lt;code&gt;document.readyState&lt;/code&gt; is &lt;code&gt;interactive&lt;/code&gt; or &lt;code&gt;complete&lt;/code&gt;:&lt;/p&gt;



&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;interactive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;complete&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DOMContentLoaded&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;So it’s puzzling.&lt;/p&gt;

&lt;p&gt;Then I embed the following code into the web page so that starting from the time when JavaScript is executed, the console will show the value of &lt;code&gt;document.readyState&lt;/code&gt; every time the state changes:&lt;/p&gt;



&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Then learned from the result that after enabling both HTML Auto Minify and Rocket Loader, &lt;code&gt;document.readyState&lt;/code&gt; only has two states, &lt;code&gt;loading&lt;/code&gt; and &lt;code&gt;complete&lt;/code&gt;. The state &lt;code&gt;interactive&lt;/code&gt; is missing, and when the state changes from &lt;code&gt;loading&lt;/code&gt; to &lt;code&gt;complete&lt;/code&gt;, only the &lt;code&gt;load&lt;/code&gt; window event will be triggered. The &lt;code&gt;DOMContentLoaded&lt;/code&gt; event has never been triggered.&lt;/p&gt;

&lt;p&gt;It seems to be a bug to Rocket Loader or may be just intentional.&lt;/p&gt;

&lt;p&gt;According to the principles of Rocket Loader introduced by Cloudflare, it will postpone the loading of all JavaScript until rendering is finished. When rendering completes and the JavaScript code is being executed, &lt;code&gt;document.readyState&lt;/code&gt; should already be &lt;code&gt;interactive&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, if HTML Auto Minify is also turned on simultaneously, &lt;code&gt;document.readyState&lt;/code&gt; is incorrectly set to &lt;code&gt;loading&lt;/code&gt; concluded from the result fore-mentioned. (I guess maybe a piece of code in Rocket Loader incorrectly assigned &lt;code&gt;document.readyState&lt;/code&gt; to &lt;code&gt;loading&lt;/code&gt; when it starts to execute Javascript code. Because Rocket Loader is not open-sourced, the reasons for doing this are unknown. Of course, the fact may be completely different from my guess.) As a result, the situation makes judgment for whether to directly execute functions completely invalid, resulting in the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event still being registered.&lt;/p&gt;

&lt;h2&gt;Solution&lt;/h2&gt;

&lt;p&gt;Now that the mechanism is known to us, the solution is also straightforward. Add the following code before all &lt;code&gt;DOMContentLoaded&lt;/code&gt; event listeners. You don’t need to change any of the original codes and then, congratulations, you fixed this.&lt;/p&gt;



&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;inCloudFlare&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DOMContentLoaded&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;inCloudFlare&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;loading&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inCloudFlare&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatchEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DOMContentLoaded&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;This code judges that if the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event has still not occurred after the &lt;code&gt;load&lt;/code&gt; event occurs, the code will manually triggers the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event, thereby making the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event equivalent to the &lt;code&gt;load&lt;/code&gt; event. The only disadvantage of this solution is that the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event is only triggered when &lt;code&gt;document.readyState&lt;/code&gt; is &lt;code&gt;complete&lt;/code&gt;, but this is currently a necessary cost for fixing.&lt;/p&gt;

&lt;p&gt;Of course, you can also resolve this problem by directly disabling the global Auto Minify for HTML, or &lt;a href="https://support.cloudflare.com/hc/en-us/articles/218411427-Understanding-and-Configuring-Cloudflare-Page-Rules-Page-Rules-Tutorial-"&gt;Configure Page Rules&lt;/a&gt; for HTML pages that use the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event so that the Auto Minify can be disabled on those pages.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>🥴💭Don’t be afraid to ask or to admit that you need help</title>
      <author>Maria Antonella 🦋</author>
      <pubDate>Tue, 19 Oct 2021 16:06:20 +0000</pubDate>
      <link>https://dev.to/antoomartini/dont-be-afraid-to-ask-or-to-admit-that-you-need-help-4pkf</link>
      <guid>https://dev.to/antoomartini/dont-be-afraid-to-ask-or-to-admit-that-you-need-help-4pkf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#help-i-need-somebody-the-beatles-would-say"&gt;
  &lt;/a&gt;
  Help, I need somebody! .... The Beatles would say.
&lt;/h2&gt;

&lt;p&gt;Today I am writing this post from an experience that happened to me last week. I was working on my current project when it came up that there was a very important functionality, which had a bug. A bug that had to be fixed as soon as possible.&lt;/p&gt;

&lt;p&gt;A bug that took me about one week to fix.🥴&lt;/p&gt;

&lt;p&gt;But my goal today is to talk about the fear we feel about asking when we don't know something or don't know how to move forward.&lt;/p&gt;

&lt;p&gt;😵🌳 When we were kids, we were planted the seed that it's not okay to ask. We learned that if we ask, we'll get a finger pointed at us like we have a big "I'm a fool" in the face. But that's not true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;When I was younger, so much younger than today
I never needed anybody's help in any way
But now these days are gone, I'm not so self assured
Now I find I've changed my mind and opened up the doors
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#learning-is-an-continuos-process"&gt;
  &lt;/a&gt;
  Learning is an continuos process.
&lt;/h3&gt;

&lt;p&gt;It never ends. Even more so in the field of computer science. New tools, frameworks and languages emerge every day.  We learn every day, with small steps, small changes. 🧐 So we have no obligation to know everything. But we can take responsibility for our actions. 🤗&lt;/p&gt;

&lt;p&gt;💡 Someone once told me that there are no dumb questions, but there are fools who don't ask.💡 So true! &lt;/p&gt;

&lt;p&gt;So here I was, in the middle of my frustrated and stressed work week. So I decided to ask for help. &lt;/p&gt;

&lt;p&gt;Think of it this way: we're here at Dev.to to ask and learn. To be better. And that's great. So why not do it at work too?&lt;/p&gt;

&lt;p&gt;Not to be told how to do it. I looked for solutions, possible ways forward and asked if I was on the right path. I asked the questions I felt were necessary to understand the context in which I was working. &lt;/p&gt;

&lt;p&gt;I think the most important thing is that I told myself was I could. I could solve this. Whatever it cost me. 💪💪&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-you-find-yourself-saying-i-dont-know-make-sure-follow-it-with-but-i-will-find-it"&gt;
  &lt;/a&gt;
  When you find yourself saying: &lt;strong&gt;I don't know&lt;/strong&gt; , make sure follow it with &lt;strong&gt;but I will find it&lt;/strong&gt;.
&lt;/h3&gt;

&lt;p&gt;As I read in the pages of the book The Pragmatic Programmer: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#its-a-great-way-to-admit-what-you-dont-know-but-then-take-responsibility-like-a-pro"&gt;
  &lt;/a&gt;
  It's a great way to admit what you don't know but then take responsibility like a pro.
&lt;/h3&gt;

&lt;p&gt;🧐 And taking responsibility means that many times you're going to have to ask for help. So to solve my big problem, I asked for help, and that's fine. And it's part of being a good professional, being a programmer. &lt;strong&gt;&lt;em&gt;It helps us grow&lt;/em&gt;&lt;/strong&gt;. Personally and professionally.🤗❗❗&lt;/p&gt;

&lt;p&gt;I always say that we always learn from others. So let's not be afraid to ask when we don't know something. Because we will learn it. A lot!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Help me if you can, I'm feeling down
And I do appreciate you being round
Help me, get my feet back on the ground
Won't you please, please help me?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>programming</category>
      <category>devjournal</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to access Amazon Connect contact logs</title>
      <author>JC San Juan 🏳️‍🌈</author>
      <pubDate>Tue, 19 Oct 2021 15:59:23 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-access-amazon-connect-contact-logs-2dn2</link>
      <guid>https://dev.to/aws-builders/how-to-access-amazon-connect-contact-logs-2dn2</guid>
      <description>&lt;p&gt;Logging mechanisms are essential tools that aid in identifying possible issues, and easing the troubleshooting process. If you're planning to keep track of your cloud contact center logs, you can do so with these simple steps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-contact-search"&gt;
  &lt;/a&gt;
  Using Contact Search
&lt;/h3&gt;

&lt;p&gt;Amazon Connect has a Contact Search feature which allows you to search for contacts as far back as two years ago, but search results are limited to the first 10,0000. To access this, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log in to your instance. Hover over the second icon and choose &lt;code&gt;Contact Search&lt;/code&gt; from the selection.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fOPFC1Z8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42lq01fxs5auehi6fmvs.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;On the Contact Search page, you can filter the results by date, channel, and a few more parameters. Click on each result to view more information. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GCSjLsZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isb1641v7a03aao1jyca.png" alt="image"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#using-cloudwatch-logs"&gt;
  &lt;/a&gt;
  &lt;br&gt;Using CloudWatch Logs
&lt;/h3&gt;

&lt;p&gt;You can examine each items further using CloudWatch. This approach allows a more detailed view on how each block in your contact flow was executed. Each call made to your contact center is identified by a unique Contact ID, which you will see later on. To access this,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Search for &lt;code&gt;CloudWatch&lt;/code&gt; on the search bar, and click on the first result.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yJGDOv8E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghdzshg6th0kqpev5tyi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yJGDOv8E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghdzshg6th0kqpev5tyi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expand &lt;code&gt;Logs&lt;/code&gt;, then click on &lt;code&gt;Log Groups&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--th00RTtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vee8u5mtxqg5gkr3px48.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--th00RTtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vee8u5mtxqg5gkr3px48.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose the log group of your Connect instance. It usually goes in this format: &lt;code&gt;aws/connect/NAME_OF_YOUR_CONNECT_INSTANCE&lt;/code&gt;. Simply click an item from the log streams to view more information about the call.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dQkKB3u_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0rqo5rlvrw802uabw25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dQkKB3u_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0rqo5rlvrw802uabw25.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Examine the content of the log stream. Again, each item will contain detailed information on how blocks in your contact flows were executed. You would usually find the following elements:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g5K8Kwqo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n88xl3q8a7orm2ypama7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g5K8Kwqo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n88xl3q8a7orm2ypama7.png" alt="Amazon Connect Logs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ContactId - a unique identifier for the call&lt;/li&gt;
&lt;li&gt;ContactFlowId - specifies the ARN of the contact flow to which the block belongs to&lt;/li&gt;
&lt;li&gt;ContactFlowModuleType - represents the type of module that is being executed&lt;/li&gt;
&lt;li&gt;Timestamp - specifies the time of execution&lt;/li&gt;
&lt;/ul&gt;



&lt;center&gt;***&lt;/center&gt;I hope you found this helpful. You can reach me on &lt;a href="https://www.linkedin.com/in/sanjuanjc/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://www.twitter.com/codingjc/"&gt;Twitter&lt;/a&gt;, or you can leave a comment if you have further questions. I'd be glad to help you out.

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>serverless</category>
      <category>womenintech</category>
    </item>
    <item>
      <title>Why Headless Is the Future of Mobile Development</title>
      <author>Shada </author>
      <pubDate>Tue, 19 Oct 2021 15:46:40 +0000</pubDate>
      <link>https://dev.to/strapi/why-headless-is-the-future-of-mobile-development-4590</link>
      <guid>https://dev.to/strapi/why-headless-is-the-future-of-mobile-development-4590</guid>
      <description>&lt;p&gt;In the world of mobile development, the content management system (CMS) reigns supreme as the go-to method for delivering content. As of January this year, &lt;a href="https://firstsiteguide.com/cms-stats/"&gt;nearly 65 million websites leveraged CMSes&lt;/a&gt;. You’ve likely heard of WordPress, Wix, and Squarespace, for example—three development platforms commanding immense market share. &lt;/p&gt;

&lt;p&gt;This practice has also become commonplace during mobile application development. It’s no secret that this process is complicated—since teams must often develop for multiple devices and operating systems (i.e., iOS and Android). A centralized CMS acts as a reliable, time-saving backend, allowing developers to simultaneously push changes to multiple platforms.&lt;/p&gt;

&lt;p&gt;There are two ways to accomplish this. The traditional, “headful” approach involves coupling databases to specific frontends. As a result, it’s easy for data to become siloed. Any updates across the application’s production lifetime (and versions) become that much more tedious. It’s also common for templates and themes to be outdated. That problem becomes compounded when different application architectures exist side-by-side. &lt;/p&gt;

&lt;p&gt;Conversely, the &lt;em&gt;headless&lt;/em&gt; approach involves both decoupling and consolidation. By simplifying the processes behind publishing content and updates, developers can streamline development while saving energy for other tasks.&lt;/p&gt;

&lt;p&gt;Today’s software landscape is dominated by agility. Teams well-versed in headless development spend much less time extracting value from their products. Here, we’ll discuss the various mechanisms and benefits of going headless—and why it’s the future of mobile development. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-headless-cms"&gt;
  &lt;/a&gt;
  What Is a Headless CMS?
&lt;/h2&gt;

&lt;p&gt;To understand how a headless CMS works, first take a look at an app’s core components, all of which unite to power user experiences. The backend, behind-the-scenes component fetches data that’s either session-dependent or shared. Servers and databases store this information and send it back and forth between themselves and end users.&lt;/p&gt;

&lt;p&gt;The frontend is where this data is displayed and arranged according to predesigned, coded layouts. This interactive layer is where users can authenticate credentials, sift through content, and make requests. &lt;/p&gt;

&lt;p&gt;A headless application challenges traditional approaches by asking, “What if we could separate business logic, storage, and complex functions from the user interface?”&lt;/p&gt;

&lt;p&gt;Storing information within the application itself is often unnecessary. Consequently, apps become needlessly bloated and consume more storage on user devices. Developers would also have to submit app updates if they wanted to refresh core content in a “headful” CMS. The editor would make changes within their CMS, push those to a specific website or application, after which they’d be displayed on the user’s machine. &lt;/p&gt;

&lt;p&gt;In a headless implementation, APIs are critical to delivering similar changes to a whole host of client devices: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dlgp-3JC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/81xcE8o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dlgp-3JC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/81xcE8o.png" alt="Headless CMS with API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The headless system acts as a repository for vital content. You’re given more control over where your content ends up in relation to changing app layouts and workflows. This is a modern step forward from the traditional CMS when we consider the current services landscape.&lt;/p&gt;

&lt;p&gt;Many organizations have implemented cloud-based microservices: applications composed of multiple loosely-coupled features, typically powered by APIs. Microservices employ a modular, piecemeal approach to application development—one where integrations mean everything. The movement toward API-powered content management is a logical development in lockstep with this trend. &lt;/p&gt;

&lt;p&gt;The authoring and data layers are connected to the publishing API, which feeds into the rendering process. Note that rendering remains fundamentally separated from these application components, thus avoiding rigidity. Developers serve content by querying these APIs. Accordingly, certain user behaviors within applications (and mobile web apps) can influence how content is dynamically fetched in the background. &lt;/p&gt;

&lt;p&gt;Hosting these core APIs in the cloud is essential to successful development. While editors still enjoy a CMS interface, the changes they make within it are unified.&lt;/p&gt;

&lt;p&gt;Think of the content-publishing experience like flipping a master switch, as opposed to manually flipping ten switches in sequence to achieve similar results. Your headless CMS treats content as data, and this data is thankfully easy to transmit via HTTP (RESTful) web requests.&lt;/p&gt;

&lt;p&gt;Many companies who make these systems actually offer them as SaaS applications—a nod to their flexibility and agnosticism to various tech stacks already leveraged in production. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-headless-for-mobile-development"&gt;
  &lt;/a&gt;
  Advantages of Headless for Mobile Development
&lt;/h2&gt;

&lt;p&gt;We’ve touched on app updates and the tech-stack friendly nature of the headless CMS. Migrating away from one-size-fits-all, traditional approaches means not relying on your team members to bring specialized experience to be successful. You’re able to implement your own mobile content backend and really run with it.&lt;/p&gt;

&lt;p&gt;However, that does &lt;em&gt;not&lt;/em&gt; mean that you have to pour numerous hours into building a customized backend. That option is available, though teams can sidestep that expense with a reputable vendor. &lt;/p&gt;

&lt;p&gt;Going headless is better (based on the richness of your application) than signing on with a mobile backend-as-a-service (MBaaS) provider. These methods don’t provide many mobile-friendly workflows and are inherently more “techy” than a typical headless CMS.&lt;/p&gt;

&lt;p&gt;Today’s mobile applications are by-and-large a collective effort. An app must provide both rich functionality and &lt;em&gt;business value&lt;/em&gt; to an organization. Stakeholders from marketing, DevOps, and beyond might desire daily editing access to publish content meaningful to them. The headless CMS is a user-friendly option for all team members regardless of technical knowledge. &lt;/p&gt;

&lt;p&gt;Feel free to bring your own frontend stack in a headless environment. Mobile applications and web apps commonly use frameworks like React, Angular, VueJS, jQuery, and EmberJS for dynamic content rendering. These programming languages and libraries do the heavy lifting here, as opposed to the CMS. That frees the headless CMS up for other core publishing tasks. &lt;/p&gt;

&lt;p&gt;Headless CMSes already excel at rapid editing. They’re also multi-channel friendly; supporting content production for internal apps, external apps, websites, and more. The headless approach maximizes productivity and reach—easily connecting your users with content, whether they’re on the couch, at the office, or catching public transit. &lt;/p&gt;

&lt;p&gt;Headless also allows you to scale more effectively. The CMS acts as a single source of truth for your data, instead of spreading it amongst multiple locations. All members with access to that data can learn from it. You also don’t have to query numerous databases in order to fetch information for users. This equates to seamless functionality that feels more responsive to the user. Performance enhancements have been proven to markedly improve user perceptions of apps and services.    &lt;/p&gt;

&lt;p&gt;While we’ve been so focused on mobile applications, it’s crucial to highlight how headless applications can also be managed via mobile devices. Administrators and marketers are no longer tied to on-premises machines—an indispensable advantage in a world where telecommuting is becoming mainstream. &lt;/p&gt;

&lt;p&gt;Whether you’re building a website, web app, managing products and services, or powering ecommerce experiences, headless CMSes are handy allies. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pain-points-of-existing-tools"&gt;
  &lt;/a&gt;
  Pain Points of Existing Tools
&lt;/h3&gt;

&lt;p&gt;Common platforms like Flutter, Ionic, and SwiftUI place more control in the hands of developers, but unfortunately, they can contribute a fair amount of bloat. Often, they don’t necessarily excel at building “native-looking” apps, and cater to certain OSes. For example, Apple’s SwiftUI is purpose-built for iOS, watchOS, and macOS, and in some opinions, &lt;a href="https://www.ukad-group.com/blog/6-pros-and-3-cons-of-ionic-development/"&gt;lacks the polish of Ionic for Android&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While these toolkits can indeed be useful for building apps, they leave content management on the backburner. This is where an effective headless CMS can shine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There’s little mystery behind why headless CMSes have gained so much steam recently. They’re centralized, performant, secure, and welcoming to users of most backgrounds. Despite relying on APIs, their GUIs simplify content management for all mobile applications. They cut down on bloat and reduce the overhead incurred by traditional applications on resource-strapped devices. &lt;/p&gt;

&lt;p&gt;Are you looking to manage your content more easily and design APIs quickly? The &lt;a href="https://strapi.io"&gt;Strapi&lt;/a&gt; headless CMS is a leading, open-source system based on Node.js. Our solution is fully customizable, developer-first, and 100 percent JavaScript—making it immediately familiar to most. Strapi is also committed to platform inclusivity, supporting iOS, Android, and progressive web apps. &lt;/p&gt;

&lt;p&gt;Whether you’re a small team or enterprise customer looking for advanced permissions control, Strapi’s headless CMS has you covered. Delivering your content faster and keeping it updated has never been easier. We invite you to &lt;a href="https://strapi.io/documentation/developer-docs/latest/getting-started/quick-start.html#_1-install-strapi-and-create-a-new-project"&gt;give Strapi a try today&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Hoping to learn more about mobile, headless development? Consider following &lt;a href="https://academy.jahia.com/tutorials/headless-introduction"&gt;Jahia Academy’s Headless Tutorial&lt;/a&gt;, or even explore how to &lt;a href="https://upstatement.com/blog/building-a-headless-mobile-app-cms-from-scratch/"&gt;build your own headless mobile CMS&lt;/a&gt; from scratch. If React is your jam, Blessing Krofegha &lt;a href="https://www.smashingmagazine.com/2020/04/web-app-headless-cms-react/"&gt;offers a wonderful guide&lt;/a&gt; to headless web-app development, within Smashing Magazine.&lt;/p&gt;

</description>
      <category>headless</category>
      <category>mobile</category>
      <category>cms</category>
    </item>
    <item>
      <title>CodeChef - ATM Problem</title>
      <author>Atharva Siddhabhatti</author>
      <pubDate>Tue, 19 Oct 2021 15:46:34 +0000</pubDate>
      <link>https://dev.to/atharvasiddhabhatti/codechef-atm-problem-5bgi</link>
      <guid>https://dev.to/atharvasiddhabhatti/codechef-atm-problem-5bgi</guid>
      <description>&lt;p&gt;CodeChef ATM Problem- Problem Code: HS08TEST&lt;/p&gt;

&lt;p&gt;Basic Programming Series....&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Problem Statement:- Pooja would like to withdraw X $US from an ATM. The cash machine will only accept the transaction if X is a multiple of 5, and Pooja's account balance has enough cash to perform the withdrawal transaction (including bank charges). For each successful withdrawal the bank charges 0.50 $US. Calculate Pooja's account balance after an attempted transaction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input
&lt;/h3&gt;

&lt;p&gt;Positive integer 0 &amp;lt; X &amp;lt;= 2000 - the amount of cash which Pooja wishes to withdraw.&lt;/p&gt;

&lt;p&gt;Nonnegative number 0&amp;lt;= Y &amp;lt;= 2000 with two digits of precision - Pooja's initial account balance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h3&gt;

&lt;p&gt;Output the account balance after the attempted transaction, given as a number with two digits of precision. If there is not enough money in the account to complete the transaction, output the current bank balance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h3&gt;

&lt;p&gt;Entered amount must be multiple of 5 that's why we are checking it by using modulus operator which returns the remainder of the numbers after dividing it with 0, if the remainder is 0 then it is multiple of 5. Second condition is to check whether the withdraw amount is available in her bank account after adding the 0.50$ charges, If both the condition are true then this expression is executed &lt;strong&gt;"balance = balance-amount-charges"&lt;/strong&gt;. If both condition doesn't satisfy then the available balance needs to be printed. &lt;/p&gt;

&lt;p&gt;Also the output is required  number with two digits of precision i.e balance must be shown with two decimal points. for that the below printf statement is used to format the output as per our need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(amount%5==0 &amp;amp;&amp;amp; amount+charges&amp;lt;=balance) {
            balance = balance-amount-charges;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;System.out.printf("%.2f", balance);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Example - Successful Transaction&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;30 120.00
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;89.50
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Example - Incorrect Withdrawal Amount (not multiple of 5)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;42 120.00
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;120.00
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Example - Insufficient Funds&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;300 120.00
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;120.00
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check output here:- &lt;a href="https://blog.atharvasid.me/atm-problem"&gt;CLICK HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to the Series:- &lt;a href="https://blog.atharvasid.me/series/basic-programming"&gt;CLICK HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to original problem &lt;a href="https://www.codechef.com/problems/HS08TEST"&gt;https://www.codechef.com/problems/HS08TEST&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LIKE! SHARE! COMMENT!&lt;/p&gt;

&lt;p&gt;More problems will be added regularly to this series.&lt;/p&gt;

</description>
      <category>codechef</category>
      <category>programming</category>
      <category>beginners</category>
      <category>java</category>
    </item>
    <item>
      <title>Learning Python Intermediate Course- yearning for suggestions</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 19 Oct 2021 15:46:10 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-yearning-for-suggestions-3kb</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-yearning-for-suggestions-3kb</guid>
      <description>&lt;p&gt;The intermediate part of the Learning Python course ended last week.&lt;br&gt;
In case you missed it, you might check out the series &lt;a href="https://dev.to/aatmaj/series/13315"&gt;here&lt;/a&gt;. So I am asking you all for any suggestions you might want to add to help me improve.&lt;/p&gt;




&lt;p&gt;So guys if anyone of you have any suggestions of doubts or anything to add, please comment them below. 😊&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
