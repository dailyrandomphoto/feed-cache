<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Javascript - Object is loopable too??</title>
      <author>Atif Aiman</author>
      <pubDate>Sat, 02 Oct 2021 14:11:34 +0000</pubDate>
      <link>https://dev.to/alserembani/javascript-object-is-loopable-too-7fo</link>
      <guid>https://dev.to/alserembani/javascript-object-is-loopable-too-7fo</guid>
      <description>&lt;p&gt;Well, salam and hello again!&lt;/p&gt;

&lt;p&gt;Previously, I discussed array loops, from the basics of the loop to using array loop methods. If you haven't read about it, head to the article straight away! 👇&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/alserembani" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XfqPzcq4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--BEjPGr6W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/186380/b3ea7705-180e-4b18-979d-1e6467225f89.png" alt="alserembani"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/alserembani/javascript-into-the-loop-of-arrays-51ep" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Javascript - Into The Loop of Arrays&lt;/h2&gt;
      &lt;h3&gt;Atif Aiman ・ Sep 25 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This time, I want to discuss another loop-related thing, and that is the object. Chotto matte kudasai, the object is loopable too??&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#understanding-objects-in-javascript"&gt;
  &lt;/a&gt;
  Understanding Objects in Javascript
&lt;/h2&gt;

&lt;p&gt;Have you ever wonder what type exists in Javascript? Well, though Javascript is loosely typed language (note that you didn't even need to declare whether your &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; is a &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; or anything), we can still get what type is our variable is.&lt;/p&gt;

&lt;p&gt;To know what type is your variable, just use &lt;code&gt;typeof&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "string"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;team7&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sasuke&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sakura&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kakashi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sai&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Yamato&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;team7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "object"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, Javascript has 2 general types of variables - primitives and objects. Primitive type includes string, number, symbol, boolean. And, there are objects.&lt;/p&gt;

&lt;p&gt;Remember that I told you that array is also an object? Well, that's how it works. An array is an object, with certain features attached to it, that enable several methods along the way like &lt;code&gt;.map&lt;/code&gt;, &lt;code&gt;.forEach&lt;/code&gt; and others. While that is the case that makes array iterable, the native object doesn't have them. That means all array loop methods we discussed before cannot be used with objects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hokage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;village&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Leaf Village&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fire Country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// This will throw error for sure!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, how do we iterate objects then? 🤔&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#back-to-loop-basics"&gt;
  &lt;/a&gt;
  Back to loop basics
&lt;/h2&gt;

&lt;p&gt;We already discussed a way to loop in Javascript, mainly &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; and &lt;code&gt;do...while&lt;/code&gt;. And later, I told you about there are two loops available, one for arrays and one for objects. Do you remember which one is which?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;for...of&lt;/code&gt; is for the array. Since the index is in sequence, getting an index is not necessary, unless if you need one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;team7&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sasuke&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sakura&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kakashi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sai&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Yamato&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;member&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;team7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/*
The output should be

Naruto
Sasuke
Sakura
Kakashi
Sai
Yamato

*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the other hand, &lt;code&gt;for...in&lt;/code&gt; is specifically for objects. Though the loop only fetches the key for you, but you know the rest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hokage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;village&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Leaf Village&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fire Country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/*
The output should be

name: Naruto
position: Hokage
village: Leaf Village
country: Fire Country

*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, that's it about looping object..............wait! There is another way as well if you want to use the array loop methods we discussed before. But that means, we need to change our object to arrays, am I right?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#objects-as-arrays"&gt;
  &lt;/a&gt;
  Objects as arrays
&lt;/h2&gt;

&lt;p&gt;There are in some dire situations, you had to execute a mission with a different approach. While we already have &lt;code&gt;for...in&lt;/code&gt; for objects, we also have "some other way" to loop object.&lt;/p&gt;

&lt;p&gt;Of course, we need to turn the object into an array, so the object can access all goodness offered by array loop methods. Though, in my experience, it's not that much, but pretty useful when you meet other data structures, especially Python that has dictionaries and tuples.&lt;/p&gt;

&lt;p&gt;Well, shall we?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-objectkeys-endraw-"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you only need keys in the objects, &lt;code&gt;for...in&lt;/code&gt; already did a good job on that. However, there is a way to convert it to an array with just keys. Using &lt;code&gt;Object&lt;/code&gt; class inside Javascript, we can use methods offered for all objects. YES, I really mean in, ALL OBJECTS! That means, arrays can also use these methods as well, but what for, right?&lt;/p&gt;

&lt;p&gt;One &lt;code&gt;Object&lt;/code&gt; method is &lt;code&gt;.keys&lt;/code&gt;, where it will convert to a list of keys of the object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hokage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;village&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Leaf Village&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fire Country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// ["name", "position", "village", "country"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you see, the result will be an array. So, do you know where we are heading to? You are right! Array loop methods! You can use all array loop methods, maybe just in case you didn't need one of the properties, or maybe you need to count all letters, or maybe all starts with "A"? Who knows what your use case is, but this is neat, right?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-objectvalues-endraw-"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values"&gt;&lt;code&gt;Object.values&lt;/code&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Of course, when we talked about objects, we need the values. The method that do the thing is &lt;code&gt;Object.values&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hokage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;village&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Leaf Village&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fire Country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// ["Naruto", "Hokage", "Leaf Village", "Fire Country"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of getting keys, we can straight away get all the values inside an object. Then, proceed with the array loop methods. But how about getting both keys and values?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-objectentries-endraw-"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries"&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The last &lt;code&gt;Object&lt;/code&gt; method, that I used most of the time is &lt;code&gt;Object.entries&lt;/code&gt;, since I need both keys and values to execute my functions based on the keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hokage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;village&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Leaf Village&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fire Country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// [["name", "Naruto"], ["position", "Hokage"], ["village", "Leaf Village"], ["country", "Fire Country"]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, what did you notice? Well, &lt;code&gt;.keys&lt;/code&gt; and &lt;code&gt;.values&lt;/code&gt; generate 1-dimensional array, but &lt;code&gt;.entries&lt;/code&gt; generate 2-dimensional array. That means, if I use methods, I still have to call which index it is, right? Like entry[0] and entry[1]?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#destructuring-2dimensional-array"&gt;
  &lt;/a&gt;
  Destructuring 2-dimensional array
&lt;/h2&gt;

&lt;p&gt;Well, I will write a more descriptive article about destructuring in future, but I will try my best to explain how it works specifically for the array loop method for &lt;code&gt;Object.entries&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Take an example, where we will have an object, that lists all members of the ninja team in the Naruto era (sorry for non-anime followers, bear with me a little 😖).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;konohaNinja&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;sandSibling&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Gaara&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kankuro&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Temari&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;team7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Naruto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sasuke&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sakura&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kakashi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;team8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shino&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hinata&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kiba&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kurenai&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;teamGuy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rock Lee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Neji&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tenten&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mighty Guy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;team10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ino&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shikamaru&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Choji&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Asuma&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See how the object is structured? Keys that contains the team's name, and values that contains all the members of the team. This has been a complex data structure 🥶. So, how should I tackle this solution? Of course, I need to split the team first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;konohaTeams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;konohaNinja&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, I can do all sorts of things with this array. What about making a string that says "The members of {team} are {team members}"?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;teams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;konohaTeams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;teamName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;teamMembers&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`The members of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;teamName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; are &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;teamMembers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Chotto matte, what happened here? Okay, I have to admit, there are a lot of things that happened here. So let me go layer by layer.&lt;/p&gt;

&lt;p&gt;Remember that when I use &lt;code&gt;.map&lt;/code&gt;, I passed the value for each index? Yes, I do just that. So supposedly, I should write something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;teams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;konohaTeams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/**
  * since konohaTeams is a 2-dimensional array,
  * (in this case, 3-dimensional array in fact),
  * when you loop the object-turns-array, you will still get
  * the array, except now you know all subarray has 2 elements
  * only, which is key-value pair, given team[0] is a team name
  * and team[1] is the array of team members
  */&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`The members of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt; are &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, it is hard to read. Maybe you already know what is team[0] and what team[1] stands for. But, is it better, if you can understand what variables are? Of course, there is a better way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;teams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;konohaTeams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;teamName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;teamMembers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`The members of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;teamName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; are &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;teamMembers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a step better than a previous example. You rename each of the keys and values, then use it in your return. But do you know, that destructuring can do that much for you, and has shorter syntax?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;teams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;konohaTeams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;teamName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;teamMembers&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`The members of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;teamName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; are &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;teamMembers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What happened here? We all already know index 0 equals teamName, and index1 equals teamMembers. Using a declaration way of extracting our array, we can rename each index, so later in our function, we can use those. Shorter and cleaner, right? Okay, can we make it shorter? Of course, instead of destructuring it inside your function, why not we destructure during parameter passing? That is why, now we replace from &lt;code&gt;(team) =&amp;gt;&lt;/code&gt; to &lt;code&gt;([teamName, teamMembers]) =&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;teams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;konohaTeams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;teamName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;teamMembers&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`The members of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;teamName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; are &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;teamMembers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;teams&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cm"&gt;/*
The output should be
[
  "The members of sandSibling are Gaara, Kankuro, Temari,",
  "The members of team7 are Naruto, Sasuke, Sakura, Kakashi,",
  "The members of team8 are Shino, Hinata, Kina, Kurenai,",
  "The members of teamGuy are Rock Lee, Neji, Tenten, Mighty Guy,",
  "The members of team10 are Ino, Shikamaru, Choji, Asuma,"
]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I know, for some beginners, this concept is hard to grasp, but try to take it to step by step, and understand what happens here.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The main point here, it is possible to loop objects as well, as much as how we loop arrays. When converting from object to array, we already provide powers given to arrays and use it for objects.&lt;/p&gt;

&lt;p&gt;Of course, there is still a lot of things going on, but if you master how to loop arrays and objects, and how to modify them, either by changing the original one or create a new entity out of them by using array loop methods, I believe you can be a really good Javascript coder at this point.&lt;/p&gt;

&lt;p&gt;Well, until next week, peace be upon ya!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Web Dev Repos for Hacktoberfest</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Sat, 02 Oct 2021 13:44:37 +0000</pubDate>
      <link>https://dev.to/abhirajb/web-dev-repos-for-hacktoberfest-4g83</link>
      <guid>https://dev.to/abhirajb/web-dev-repos-for-hacktoberfest-4g83</guid>
      <description>&lt;p&gt;First time participating in &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Well, I have got a solution for all the newbie web devs out there.&lt;/p&gt;

&lt;p&gt;If you are having a problem in searching for repos to contribute to, then read this till the end.&lt;/p&gt;

&lt;p&gt;I present before you &lt;a href="https://github.com/Gamesflow"&gt;Gamesflow&lt;/a&gt;&lt;br&gt;
Gamesflow is a combination of 5 web browser based games built on HTML, CSS and Javascript&lt;/p&gt;

&lt;p&gt;This org account contains 5 repositories divided on the basis of level of advancement.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#beginners"&gt;
  &lt;/a&gt;
  Beginners
&lt;/h2&gt;

&lt;p&gt;For beginner repos, the HTML-CSS-JS code is based in one html file.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#repo-1-2048-game"&gt;
  &lt;/a&gt;
  Repo 1. &lt;a href="https://two0four8.onrender.com"&gt;2048 game&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This repo is for a fun and animated version of the OG 2048 game. It is a game where you add numbers of similar values to reach the number 2048. So, this is a good place to start.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Gamesflow"&gt;
        Gamesflow
      &lt;/a&gt; / &lt;a href="https://github.com/Gamesflow/2048-game"&gt;
        2048-game
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An animated and fun version of the popular 2048 game. Built with HTML, CSS and Javascript.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
2048 with Bubbles&lt;/h1&gt;
&lt;p&gt;An animated and fun version of the popular 2048 game. Built with HTML, CSS and Javascript.&lt;/p&gt;
&lt;h2&gt;
How to play&lt;/h2&gt;
&lt;p&gt;Move the bubbles with your mouse and add up the same numbers. After adding up two bubbles, two more drop and will not return if they fall over the sofa.&lt;/p&gt;
&lt;p&gt;You can turn off the music and sound effects from the home page and also choose the quality of game.&lt;/p&gt;
&lt;h2&gt;
Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/40971262dd57d89d6cb5f40b5ddc481ae3415416b46ab3198849b79ca2da08db/68747470733a2f2f692e6962622e636f2f62737250776e792f323034382d62792d4162686972616a2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/40971262dd57d89d6cb5f40b5ddc481ae3415416b46ab3198849b79ca2da08db/68747470733a2f2f692e6962622e636f2f62737250776e792f323034382d62792d4162686972616a2e706e67" alt="App Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Built with&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465" alt="HTML5"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465" alt="CSS"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145"&gt;&lt;img src="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145" alt="JS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are always welcome!&lt;/p&gt;
&lt;p&gt;This repo is open for Hacktoberfest PRs.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;contributing.md&lt;/code&gt; for ways to get started.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/" rel="nofollow"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
🔗 Links&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.dev.to/abhirajb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f197926b3f46805a357c60a0a97f5efe372dae954778834cb640846741d4b39d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6465762e746f2d3041304130413f7374796c653d666f722d7468652d6261646765266c6f676f3d646576646f74746f266c6f676f436f6c6f723d7768697465" alt="dev.to"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2cd48af2c91f407a2ead4a09f7eeb5d7271c861a9c7b17aa805da83e994f5bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d3144413146323f7374796c653d666f722d7468652d6261646765266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465" alt="twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Feedback&lt;/h2&gt;
&lt;p&gt;If you have any feedback, please reach out to us at &lt;a href="https://github.com/Gamesflow/2048-gamemailto:rainboestrykr@gmail.com"&gt;rainboestrykr@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://buymeacoffee.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab6dddafd2bdfc2a0e66b6f4eae6f508a308c085a3093bea8b1a143ac909f14a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275795f4d655f415f436f666665652d4646444430303f7374796c653d666f722d7468652d6261646765266c6f676f3d6275792d6d652d612d636f66666565266c6f676f436f6c6f723d626c61636b" alt="bmc"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Gamesflow/2048-game"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#repo-2-tetradic"&gt;
  &lt;/a&gt;
  Repo 2. &lt;a href="https://tetradic.onrender.com"&gt;Tetradic&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a fun and music-based concentration game where you have to repeat the musical patters. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Gamesflow"&gt;
        Gamesflow
      &lt;/a&gt; / &lt;a href="https://github.com/Gamesflow/Tetradic"&gt;
        Tetradic
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A fun game with music for people to practice their focus and concentration.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Tetradic&lt;/h1&gt;
&lt;p&gt;A fun game with music for people to practice their focus and concentration.&lt;/p&gt;
&lt;h2&gt;
How to play&lt;/h2&gt;
&lt;p&gt;Follow the pattern and repeat it with music to complete levels.&lt;/p&gt;
&lt;p&gt;You can turn off the music and sound effects from the home page and just use the colors to play.&lt;/p&gt;
&lt;h2&gt;
Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b3a41df0af118d50fb4094216eeecc24b9a1e7917179414e05df5bd9aa419534/68747470733a2f2f692e6962622e636f2f305a514a6a7a6e2f54657472616469632d47616d652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b3a41df0af118d50fb4094216eeecc24b9a1e7917179414e05df5bd9aa419534/68747470733a2f2f692e6962622e636f2f305a514a6a7a6e2f54657472616469632d47616d652e706e67" alt="App Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Built with&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465" alt="HTML5"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465" alt="CSS"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145"&gt;&lt;img src="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145" alt="JS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are always welcome!&lt;/p&gt;
&lt;p&gt;This repo is open for Hacktoberfest PRs.&lt;/p&gt;
&lt;p&gt;First time Hacktoberfest participants are welcome.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/" rel="nofollow"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
🔗 Links&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.dev.to/abhirajb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f197926b3f46805a357c60a0a97f5efe372dae954778834cb640846741d4b39d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6465762e746f2d3041304130413f7374796c653d666f722d7468652d6261646765266c6f676f3d646576646f74746f266c6f676f436f6c6f723d7768697465" alt="dev.to"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2cd48af2c91f407a2ead4a09f7eeb5d7271c861a9c7b17aa805da83e994f5bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d3144413146323f7374796c653d666f722d7468652d6261646765266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465" alt="twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Feedback&lt;/h2&gt;
&lt;p&gt;If you have any feedback, please reach out to us at &lt;a href="https://github.com/Gamesflow/Tetradicmailto:rainboestrykr@gmail.com"&gt;rainboestrykr@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://buymeacoffee.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab6dddafd2bdfc2a0e66b6f4eae6f508a308c085a3093bea8b1a143ac909f14a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275795f4d655f415f436f666665652d4646444430303f7374796c653d666f722d7468652d6261646765266c6f676f3d6275792d6d652d612d636f66666565266c6f676f436f6c6f723d626c61636b" alt="bmc"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Gamesflow/Tetradic"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#intermediate"&gt;
  &lt;/a&gt;
  Intermediate
&lt;/h2&gt;

&lt;p&gt;For intermediate repos, there are separate files for languages along with a little intro to ThreeJS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#repo-3-the-lost-ball"&gt;
  &lt;/a&gt;
  Repo 3. &lt;a href="https://thelostball.onrender.com"&gt;The Lost Ball&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This game is inspired from Subway Surfers and it is a 3D runner type game. There is a high score feature too.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Gamesflow"&gt;
        Gamesflow
      &lt;/a&gt; / &lt;a href="https://github.com/Gamesflow/The-Lost-Ball"&gt;
        The-Lost-Ball
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A 3D runner game inspired from Subway Surfers
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
The Lost Ball&lt;/h1&gt;
&lt;p&gt;A 3D runner game inspired from Subway Surfers and built on ThreeJS.&lt;/p&gt;
&lt;h2&gt;
How to play&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Controls&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Spacebar/Up arrow&lt;/td&gt;
&lt;td&gt;Jump&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Right Arrow&lt;/td&gt;
&lt;td&gt;Go Right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Left Arrow&lt;/td&gt;
&lt;td&gt;Go left&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4153c3a586a66282cf8ee0769cdf914cb92d4c82168364a1dabf1b5376bcaf13/68747470733a2f2f692e6962622e636f2f3547544c5339422f5468652d4c6f73742d42616c6c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4153c3a586a66282cf8ee0769cdf914cb92d4c82168364a1dabf1b5376bcaf13/68747470733a2f2f692e6962622e636f2f3547544c5339422f5468652d4c6f73742d42616c6c2e706e67" alt="App Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Built with&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465" alt="HTML5"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465" alt="CSS"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145"&gt;&lt;img src="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145" alt="JS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are always welcome!&lt;/p&gt;
&lt;p&gt;This repo is open for Hacktoberfest PRs.&lt;/p&gt;
&lt;p&gt;First time Hacktoberfest participants are welcome.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/" rel="nofollow"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
🔗 Links&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.dev.to/abhirajb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f197926b3f46805a357c60a0a97f5efe372dae954778834cb640846741d4b39d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6465762e746f2d3041304130413f7374796c653d666f722d7468652d6261646765266c6f676f3d646576646f74746f266c6f676f436f6c6f723d7768697465" alt="dev.to"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2cd48af2c91f407a2ead4a09f7eeb5d7271c861a9c7b17aa805da83e994f5bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d3144413146323f7374796c653d666f722d7468652d6261646765266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465" alt="twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Feedback&lt;/h2&gt;
&lt;p&gt;If you have any feedback, please reach out to us at &lt;a href="https://github.com/Gamesflow/The-Lost-Ballmailto:rainboestrykr@gmail.com"&gt;rainboestrykr@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://buymeacoffee.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab6dddafd2bdfc2a0e66b6f4eae6f508a308c085a3093bea8b1a143ac909f14a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275795f4d655f415f436f666665652d4646444430303f7374796c653d666f722d7468652d6261646765266c6f676f3d6275792d6d652d612d636f66666565266c6f676f436f6c6f723d626c61636b" alt="bmc"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Gamesflow/The-Lost-Ball"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#repo-4-shinigami-world"&gt;
  &lt;/a&gt;
  Repo 4. &lt;a href="https://shinigamiworld.onrender.com"&gt;Shinigami World&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;For all of you anime fans out there, this game is a ripoff of The Lost ball game above but with completely different aesthetics.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Gamesflow"&gt;
        Gamesflow
      &lt;/a&gt; / &lt;a href="https://github.com/Gamesflow/Shinigami-World"&gt;
        Shinigami-World
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The anime version of "The Lost Ball"
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Shinigami World&lt;/h1&gt;
&lt;p&gt;The official anime version of "&lt;a href="https://github.com/Gamesflow/The-Lost-Ball"&gt;The Lost Ball&lt;/a&gt;"&lt;/p&gt;
&lt;h2&gt;
How to play&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Controls&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Spacebar/Up arrow&lt;/td&gt;
&lt;td&gt;Jump&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Right Arrow&lt;/td&gt;
&lt;td&gt;Go Right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Left Arrow&lt;/td&gt;
&lt;td&gt;Go left&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d190e971dec2c56b8c1e5985347c04e2e3683863fccb0c277dfdf91474b57bc3/68747470733a2f2f692e6962622e636f2f523432726764432f5368696e6967616d692d576f726c642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d190e971dec2c56b8c1e5985347c04e2e3683863fccb0c277dfdf91474b57bc3/68747470733a2f2f692e6962622e636f2f523432726764432f5368696e6967616d692d576f726c642e706e67" alt="App Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Built with&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465" alt="HTML5"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465" alt="CSS"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145"&gt;&lt;img src="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145" alt="JS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are always welcome!&lt;/p&gt;
&lt;p&gt;This repo is open for Hacktoberfest PRs.&lt;/p&gt;
&lt;p&gt;First time Hacktoberfest participants are welcome.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/" rel="nofollow"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
🔗 Links&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.dev.to/abhirajb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f197926b3f46805a357c60a0a97f5efe372dae954778834cb640846741d4b39d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6465762e746f2d3041304130413f7374796c653d666f722d7468652d6261646765266c6f676f3d646576646f74746f266c6f676f436f6c6f723d7768697465" alt="dev.to"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2cd48af2c91f407a2ead4a09f7eeb5d7271c861a9c7b17aa805da83e994f5bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d3144413146323f7374796c653d666f722d7468652d6261646765266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465" alt="twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Feedback&lt;/h2&gt;
&lt;p&gt;If you have any feedback, please reach out to us at &lt;a href="https://github.com/Gamesflow/Shinigami-Worldmailto:rainboestrykr@gmail.com"&gt;rainboestrykr@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://buymeacoffee.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab6dddafd2bdfc2a0e66b6f4eae6f508a308c085a3093bea8b1a143ac909f14a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275795f4d655f415f436f666665652d4646444430303f7374796c653d666f722d7468652d6261646765266c6f676f3d6275792d6d652d612d636f66666565266c6f676f436f6c6f723d626c61636b" alt="bmc"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Gamesflow/Shinigami-World"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#advance"&gt;
  &lt;/a&gt;
  Advance
&lt;/h2&gt;

&lt;p&gt;For advance repo, there are different kinds of functions and variables for you to try your hand at them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#repo-5-pongzoid"&gt;
  &lt;/a&gt;
  Repo 5. &lt;a href="https://pongzoid.onrender.com"&gt;PongZoid&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a mouse-controlled version of the OG pong game with a home page and color changing graphics. This had been a project of mine earlier and I had been working on its multiplayer version. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Gamesflow"&gt;
        Gamesflow
      &lt;/a&gt; / &lt;a href="https://github.com/Gamesflow/PongZoid"&gt;
        PongZoid
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A new version of the evergreen and OG pong game.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
PongZoid&lt;/h1&gt;
&lt;p&gt;The new version of the OG and evergreen pong game with mouse functionality and cool colors.&lt;/p&gt;
&lt;h2&gt;
How to play&lt;/h2&gt;
&lt;p&gt;Move the mouse to move the platform and don't let the ball touch the floor. Survive and create high scores.&lt;/p&gt;
&lt;p&gt;You can change paddle speed and view more info on the home page.&lt;/p&gt;
&lt;h2&gt;
Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/125d080ab1b288c57ce76caf3daa54179a9b18a214f660cc123ae683372852e6/68747470733a2f2f692e6962622e636f2f436d5a5a77536d2f506f6e677a6f69642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/125d080ab1b288c57ce76caf3daa54179a9b18a214f660cc123ae683372852e6/68747470733a2f2f692e6962622e636f2f436d5a5a77536d2f506f6e677a6f69642e706e67" alt="App Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Built with&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/d63d473e728e20a286d22bb2226a7bf45a2b9ac6c72c59c0e61e9730bfe4168c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c352d4533344632363f7374796c653d666f722d7468652d6261646765266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465" alt="HTML5"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/3a0f693cfa032ea4404e8e02d485599bd0d192282b921026e89d271aaa3d7565/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f435353332d3135373242363f7374796c653d666f722d7468652d6261646765266c6f676f3d63737333266c6f676f436f6c6f723d7768697465" alt="CSS"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145"&gt;&lt;img src="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145" alt="JS"&gt;&lt;/a&gt;
Based on a tutorial from &lt;a href="https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are always welcome!&lt;/p&gt;
&lt;p&gt;This repo is open for Hacktoberfest PRs.&lt;/p&gt;
&lt;p&gt;First time Hacktoberfest participants are welcome.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/" rel="nofollow"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
🔗 Links&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.dev.to/abhirajb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f197926b3f46805a357c60a0a97f5efe372dae954778834cb640846741d4b39d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6465762e746f2d3041304130413f7374796c653d666f722d7468652d6261646765266c6f676f3d646576646f74746f266c6f676f436f6c6f723d7768697465" alt="dev.to"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2cd48af2c91f407a2ead4a09f7eeb5d7271c861a9c7b17aa805da83e994f5bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d3144413146323f7374796c653d666f722d7468652d6261646765266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465" alt="twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Feedback&lt;/h2&gt;
&lt;p&gt;If you have any feedback, please reach out to us at &lt;a href="https://github.com/Gamesflow/PongZoidmailto:rainboestrykr@gmail.com"&gt;rainboestrykr@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://buymeacoffee.com/rainboestrykr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab6dddafd2bdfc2a0e66b6f4eae6f508a308c085a3093bea8b1a143ac909f14a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275795f4d655f415f436f666665652d4646444430303f7374796c653d666f722d7468652d6261646765266c6f676f3d6275792d6d652d612d636f66666565266c6f676f436f6c6f723d626c61636b" alt="bmc"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Gamesflow/PongZoid"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;If these have helped you in any way, you can extend your support by buying me a coffee maybe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rainboestrykr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading!
&lt;/h2&gt;

&lt;p&gt;Hope this will help you this month, feel free to reach out to me on &lt;a href="https://twitter.com/rainboestrykr"&gt;twitter&lt;/a&gt; for any queries or suggestions. Happy Hacktober to you!&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>javascript</category>
      <category>opensource</category>
      <category>contributorswanted</category>
    </item>
    <item>
      <title>I am a Web Dev. And I am Burnt The F#*K Out.</title>
      <author>Michael Jordan</author>
      <pubDate>Sat, 02 Oct 2021 13:42:38 +0000</pubDate>
      <link>https://dev.to/sulekha_gee_cf35cdedaedb9/i-am-a-web-dev-and-i-am-burnt-the-f-k-out-42n5</link>
      <guid>https://dev.to/sulekha_gee_cf35cdedaedb9/i-am-a-web-dev-and-i-am-burnt-the-f-k-out-42n5</guid>
      <description>&lt;p&gt;TL;DR; A rant from a dinosaur that can't keep up anymore. How do you guys do this?&lt;/p&gt;

&lt;p&gt;EDIT: Holy cow. This turned into a real thing, didn't it? Thanks everyone for the replies. At this point if I keep responding to everything, I'm just digging myself a whole I'll spend the rest of the week crawling out of, but I appreciate all of your continued responses and advice. Even if I don't response, keep it coming!&lt;/p&gt;

&lt;p&gt;UPDATE:&lt;/p&gt;

&lt;p&gt;To be completely honest I wrote that post as a cathartic rant in the depths a particularly exhausted moment. I fully expected to get down-voted and/or removed. I did not expect it to catch fire in the way that it did.&lt;/p&gt;

&lt;p&gt;What I discovered is that there are a lot of people that are in a similar place: overworked, burnt-out, and/or frustrated by the constant skill set churn.&lt;/p&gt;

&lt;p&gt;But I found out there are a lot of others who aren't: they're still happy and excited, and don't feel over-worked.&lt;/p&gt;

&lt;p&gt;Then there were a handful of folks who basically said "quit yer bitchin'." Fair enough. But I have to question whether they'd say that to a nurse, a doctor, or a tradesman that started his own business and burnt himself out trying to grow it. I appreciate everyone who shared, and gave me some much-needed perspective in all directions.&lt;/p&gt;

&lt;p&gt;And I question how much money you think I'm making. As I said I work a lot of 14 hour days. And til' it's all said and done I made around $80,000 last year. No benefits. Supporting a family of 4. We don't struggle to put food on the table, but we don't make enough money to be frivolous either. And not once have I complained about the money. I know I'm blessed, if not as wealthy as some of you seem to think I am!&lt;/p&gt;

&lt;p&gt;So here's what I've learned from you all:&lt;/p&gt;

&lt;p&gt;Those that have long-term happiness in this career are those that can put it to rest at the end of the day. It is ultimately a job that makes other parts of their life better. For me starting my own business basically killed that possibility. I work 8:00 AM - 5:00 PM. Then 9:00 PM - 2:00 AM. And in between, I'm "on call." I also know there are plenty of you that aren't owners that feel similar pressures, and I feel for you. This was a choice I made, and it's mine to fix.&lt;/p&gt;

&lt;p&gt;I noticed a trend between childhood passion for coding and adult career burnout. I noticed this as I read all 800+ comments. Those of us with stories about cutting our teeth on DOS and coding games for our TI-82 calculators all seemed to share a similar "malignancy." I'm not sure why. Was it a mistake turning something we loved into a career? Are humans just not meant to do (and love) the same activity for 25+ years? Are we expecting too much? I don't know. its just interesting to notice.&lt;/p&gt;

&lt;p&gt;Maybe web development as a career has some problems. Some of you have pointed out that you've simply accepted that a full day of work each week will be spent re-educating yourself and not earning money. I think everyone should be thrilled to be lifelong learners. But I think nobody should have to accept losing a day each week, essentially unpaid, simply to keep their job. It's also a real possible that these problems are working themselves out. The web job market has expanded. There are now entire career paths around more specific skill sets. Its far more manageable to keep up with "Local SEO" or "front-end developer" or "UX engineer" or even "React Developer" than wearing and maintaining all of those hats at once. A lot of people told me to limit my scope but deepen my knowledge of whatever I'm left with. That's a great idea that I took to heart.&lt;/p&gt;

&lt;p&gt;The agency model sucks for developers. Period. When I left my old agency and started my business, I didn't leave the agency model. I just made myself the agency. That was a mistake. A lot of folks suggested that I need to do more to move myself out of the developer role and into a management role, and put young blood in the coder's seat. I've actually tried this through the past year. It's been difficult, but I'm going to try harder. Others told me life is completely different working a 9-5 development job that's not agency. I'm going to give serious consideration to closing my business and taking a job working for the man again. I'm not precious about "ownership." Especially if it makes my life more balanced.&lt;/p&gt;

&lt;p&gt;The speed at which front-end development changes is maddening and that seems to be an idea that's far more accepted than the more general premise of my original post. But we are under no obligation to learn every new technology/framework. Fair enough! I prefer back-end and I have entirely skipped Ruby, RoR, Node, and Python. Zero regrets. My background in pure computer science will help me get up to speed if and when I need to.&lt;/p&gt;

&lt;p&gt;There are a lot of ways to do this career path. If balance is important to me, then I am doing it wrong. That's on me. I take full ownership of the mistakes I made to get to where I am. I can't tell you how much I appreciate the advice all of you who are "doing it right" gave me.&lt;/p&gt;

&lt;p&gt;Going forward I have a lot of things to think about. To start, for the next 6 months I'm planning to put my clients in "maintenance mode." I won't accept new clients or ambitious new projects during that time. Incoming maintenance work and ongoing retainers are enough to sustain my family for now. This is a buffer to give me time to sort out my career and work/&lt;a href="https://www.nvidia.com/en-us/geforce/forums/geforce-graphics-cards/5/470258/dubai-call-girls-00971569341582/"&gt;life&lt;/a&gt; balance.&lt;/p&gt;

&lt;p&gt;I'll use that time to think about my future. If I want to keep my business, how do I do it in a way that supports the lifestyle I want for me and my family? If that's not possible, how do I responsibly walk away, and where do I go from here? Ultimately nobody has a gun to my head forcing me to perform agency-style development. It is a choice.&lt;/p&gt;

&lt;p&gt;In conclusion: I thought it was worth pointing out to folks that are considering web development or are just getting into it that my experience is not everyone's experience&lt;a href="https://www.facebook.com/dubaigirlsCallO569341582/"&gt;.&lt;/a&gt; And that I take responsibility for decisions that contributed to my burn-out. Learn from my mistakes, as I've learned from everyone who responded to me.&lt;/p&gt;

&lt;p&gt;Hopefully in a year I will post a far more positive follow-up.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ORIGINAL POST-----------------------------&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I'm 37 which in web developer years mean's I'm a dinosaur. I've been programming since I was 13. I thought I was "l33t" because I made a pixely snowstorm in QBASIC in high school.&lt;/p&gt;

&lt;p&gt;I've been making websites since 28.8 kb/s was standard. I've been doing it for money since 2003. I was around when nested tables were the only way to do layout. I embedded my share of animated GIFs and MIDIs, unironically. I was there when "To Hell with Bad Browsers" was published. I remember WASP, unaccompanied by Ant Man. I was there when Jeff Zeldman taught us how to Design with Web Standards and Eric Meyer introduced us to CSS. I'm pretty sure I probably masturbated to CSS Zen Garden at some point or another.&lt;/p&gt;

&lt;p&gt;I've written guestbooks in C and home-brewed a CMS in Perl. I was building websites when the world was more familiar with Java than JavaScript, and people assumed they were related. I used MooTools, Prototype, and Dojo. I'm still maintaining web apps I wrote when ExtJS was still ExtJS and was open source. I was there when jQuery was new. I was there when jQuery for all intents and purposes WAS JavaScript. And I'm here today, wondering why half the web is still loading it.&lt;/p&gt;

&lt;p&gt;I learned to love the HTML 5 DOCTYPE. I've coded in PHP 3, 4, 5, and 7, Zend Framework 1 and 2, Symfony 3 and 4. I've built enough WordPress sites to both understand the love, and the hate. I've slung gigabytes of data between MySQL, PostgreSQL, SQLite, and SQL Server and mish-mashed it all into XML, JSON, and YAML. I've learned to love vanilla JavaScript again. And I've watched the JavaScript ecosystem spread out on the front and back-end. Sometimes, I feel, like a cancer.&lt;/p&gt;

&lt;p&gt;Dudes.... I'm tired.&lt;/p&gt;

&lt;p&gt;This was fun when I was young and cared about nothing else. I felt like I was doing something interesting. I felt like I was solving problems and building things that nobody else could build.&lt;/p&gt;

&lt;p&gt;But then I discovered the outdoors, and hobbies. I got married. I had kids. I discovered the world outside the familiar glow of my screen is full of interesting things and unique challenges.&lt;/p&gt;

&lt;p&gt;All the while, I've been through cycles upon cycles of changes in web technology. It's a hamster wheel. It's a rat race. It's whatever rodent metaphor accurately describes both the feeling of constant struggle and the utter pointlessness of going through it. We're a digital Sisyphys being crushed by gigabytes of npm modules that seem to be required to do anything useful nowadays.&lt;/p&gt;

&lt;p&gt;I've realized that there are other people that are far better at this than me. I've realized that the myth of /u/breich having a genius level mind for technology only exists in comparison to the other minds in the small, rural community in which he grew up. And I've realized that I don't actually care.&lt;/p&gt;

&lt;p&gt;I spent years terrified that website builders, automation, and machine learning would replace me. And I stuck it out long enough to be sitting her begging for website builders, automation, and machine learning to replace me.&lt;/p&gt;

&lt;p&gt;How do you stay both excited and relevant in this career while developing as a well-rounded human being? Can you develop as a well-rounded human being and a web developer?&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>python</category>
      <category>laravel</category>
    </item>
    <item>
      <title>COPS(IITBHU) APIS 101 WITH POSTMAN </title>
      <author>Yash Raj</author>
      <pubDate>Sat, 02 Oct 2021 13:42:07 +0000</pubDate>
      <link>https://dev.to/tigeryash/cops-iitbhu-apis-101-with-postman-1743</link>
      <guid>https://dev.to/tigeryash/cops-iitbhu-apis-101-with-postman-1743</guid>
      <description>&lt;p&gt;API stands for &lt;strong&gt;Application Programming Interface&lt;/strong&gt;.&lt;br&gt;
APIs are the little pieces of code that make it possible for digital devices, software applications, and data servers to talk with each other, and they’re the essential backbone of so many services we now rely on.&lt;/p&gt;

&lt;p&gt;Any Developer, regardless of the Tech Stack they use, should know at least the basic of this fascinating yet simple technology. &lt;br&gt;
To ensure this, COPS (IITBHU) organised a hands-on workshop, hosted by Postman Student Expert &lt;a href="https://dev.to/king11"&gt;Lakshya Singh&lt;/a&gt;! &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-initiation"&gt;
  &lt;/a&gt;
  The Initiation
&lt;/h2&gt;

&lt;p&gt;Lakshya Kicked-Off the Session by introducing himself to the participants and was quick to create a very interactive environment by asking everyone to mention the Engineering Branch they are enrolled in.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B0cNSh4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n33ig889ta0bnjdq5095.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B0cNSh4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n33ig889ta0bnjdq5095.png" alt="Engineer"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-presentation"&gt;
  &lt;/a&gt;
  The Presentation
&lt;/h2&gt;

&lt;p&gt;The Workshop began with a Presentation meant to Familiarise everyone with the basics of APIs and Postman.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#agendas-of-the-workshop"&gt;
  &lt;/a&gt;
  Agendas of the workshop
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Intro to APIs and Postman&lt;/li&gt;
&lt;li&gt;Requests and Responses&lt;/li&gt;
&lt;li&gt;Trying things out&lt;/li&gt;
&lt;li&gt;Follow-up resources&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#apis"&gt;
  &lt;/a&gt;
  APIs
&lt;/h3&gt;

&lt;p&gt;Lakshya gave the non-technical explanation of an API using the example of a Restaurant where the waiter &lt;em&gt;(API)&lt;/em&gt; takes the Orders of the Customers &lt;em&gt;(Requests)&lt;/em&gt;, Passes it on to the Chef and then returns with the Dish &lt;em&gt;(Response)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The Technical Definition followed, which in brief was :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;API is a software intermediary that allows two applications to talk to each other by taking requests and returning responses&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A few more examples were explain what APIs are and what they are used for.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#postman-introduction"&gt;
  &lt;/a&gt;
  Postman Introduction
&lt;/h3&gt;

&lt;p&gt;Lakshya started-off this section by drawing a comparison between the Terminal (which uses &lt;em&gt;Curl&lt;/em&gt;) and Postman for using the API functionalities.&lt;br&gt;
Postman clearly turned out to be the Best choice for API related work since its UI makes it very simple for us to send or receive data and then to process/understand the responses.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pEEZlHAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dd3s1x9zr4m6snf877iv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pEEZlHAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dd3s1x9zr4m6snf877iv.jpg" alt="Postman is Best"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ingredients-to-make-a-request"&gt;
  &lt;/a&gt;
  Ingredients to make a Request
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Method&lt;/strong&gt; - Type of Request&lt;/p&gt;

&lt;p&gt;&lt;code&gt;GET&lt;/code&gt; &lt;code&gt;POST&lt;/code&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;code&gt;PATCH&lt;/code&gt; &lt;code&gt;DELETE&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Endpoint&lt;/strong&gt; - Target URL&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://postman-student.herokuapp.com/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Path&lt;/strong&gt; - The exact location of the desired API&lt;/p&gt;

&lt;p&gt;&lt;code&gt;jokes/1/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;A complete API Request made using Axios:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   axios({
         headers: {
             Authorization: "Token " + " "
         },
         url: http://postman-student.herokuapp.com/ + "jokes/1/",
         method: "GET",
         data: {}
     })
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#response"&gt;
  &lt;/a&gt;
  Response
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Status Code&lt;/strong&gt; - Signify the Success of Failure of Requests/Responses&lt;/p&gt;

&lt;p&gt;&lt;code&gt;200 OK&lt;/code&gt; &lt;code&gt;201 Created&lt;/code&gt; &lt;code&gt;404 Not Found&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Response Data&lt;/strong&gt; - JSON&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "id": "1",
  "author": "User",
  "joke": "Bugs are features",
  "source": "jokes.dev"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-handon-session"&gt;
  &lt;/a&gt;
  The Hand-On Session
&lt;/h2&gt;

&lt;p&gt;This part of the Workshop Lakshya showed us practical use of APIs using Postman to Create request bodies, send Requests, and then to comprehend the Response received.&lt;br&gt;
We were asked to fork this &lt;a href="https://www.postman.com/postman/workspace/postman-student-api-101-workshop/collection/13935790-3246e804-99c9-444e-8248-59da3f9f6122?ctx=documentation"&gt;Basics of API&lt;/a&gt;, and then we were able to follow along.&lt;/p&gt;

&lt;p&gt;Lakshya like a true expert showed us all the Request Methods and resolved the issues and queries of the participants instantly.&lt;br&gt;
There were many funny instances also along the way, one of which is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lakshya was unable to pick an ID for a new &lt;code&gt;POST&lt;/code&gt; request on the &lt;code&gt;jokes/&lt;/code&gt; API because the participants has already taken most of the IDs including 11 (his B'Day Date xD), 22, 101.... &lt;br&gt;
He finally chose the ID 111 suggested by me in the comments!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E-w1AgWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/baly5riozx8inmjmx8ds.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E-w1AgWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/baly5riozx8inmjmx8ds.gif" alt="Laughing Gif"&gt;&lt;/a&gt;&lt;br&gt;
We as the Participants were surely amused ;) ! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The workshop was wrapped-up with Lakshya sharing the information about being a Postman Student Expert, about Postman being an Organisation in GSOC and how we can contribute to this Splendid Technology as Developers.&lt;/p&gt;

&lt;p&gt;He then shared more Resources related to APIs and Postman and ended the workshop with a Q&amp;amp;A session.&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;em&gt;The Workshop was a Great Learning experience for me and I was able to make myself more familiar with APIs and how I can use Postman seamlessly to test the APIs I create.&lt;br&gt;
The Host was extremely Co-operative, Friendly and Knowledgeable which made the session even more Interesting and Interactive.&lt;/em&gt;

&lt;p&gt;&lt;strong&gt;Thank You : ) !&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>api</category>
      <category>postmanstudent</category>
      <category>postman</category>
      <category>backend</category>
    </item>
    <item>
      <title>Sites for beginner web developers </title>
      <author>saket chandorkar</author>
      <pubDate>Sat, 02 Oct 2021 13:29:45 +0000</pubDate>
      <link>https://dev.to/saket2001/sites-for-beginner-web-developers-1ch8</link>
      <guid>https://dev.to/saket2001/sites-for-beginner-web-developers-1ch8</guid>
      <description>&lt;p&gt;This is part 1 of cool sites you need to start using if you aren't using yet. A &lt;strong&gt;must read for every beginner web developer&lt;/strong&gt; for taking thier static sites a level up. A perfect and right site for all your web developing task like background images, background gradient, color palettes, illustrations and icons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-pixels"&gt;
  &lt;/a&gt;
  1) Pixels
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-hwA1bD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cx4teie156ken14corr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-hwA1bD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cx4teie156ken14corr7.png" alt="Pixel site cover image"&gt;&lt;/a&gt;&lt;br&gt;
One site for all your static images, backgrounds. It contains HD and images in all sizes. Using images from this site will surely take your site to next level.&lt;br&gt;
Do check it out- &lt;a href="https://www.pexels.com/"&gt;https://www.pexels.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-color-hunt"&gt;
  &lt;/a&gt;
  2) Color Hunt
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QwycFJIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75sma3re7p0ovvilgruh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QwycFJIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75sma3re7p0ovvilgruh.png" alt="Color hunt site"&gt;&lt;/a&gt;&lt;br&gt;
An awesome site for getting cool, calm and good color palettes. When I started my web developing journey, I always used to use random colors for my site which is bad because your site wont't professional and clean. So start using this site for making professional, clean and good UI sites.&lt;br&gt;
Do check it out- &lt;a href="https://colorhunt.co/"&gt;https://colorhunt.co/&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-drawkit"&gt;
  &lt;/a&gt;
  3) Drawkit
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3vHSxkZb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1mlfjhro2icsws3mbax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3vHSxkZb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1mlfjhro2icsws3mbax.png" alt="Drawkit site"&gt;&lt;/a&gt;&lt;br&gt;
One of the best site today in this post has it helps you get all actions vector illustrations. If you aren't using illustrations in your website, I suggest your start using this site and using illustration in your websites. &lt;br&gt;
Do check it out- &lt;a href="https://drawkit.com/"&gt;https://drawkit.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-ui-gradients"&gt;
  &lt;/a&gt;
  4) UI Gradients
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgcaGfwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfz8bl978zrill1t5m3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgcaGfwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfz8bl978zrill1t5m3n.png" alt="UI Gradients site"&gt;&lt;/a&gt;&lt;br&gt;
If you are looking for awesome and easy to use background gradients in your sites, then this site you should must checkout.&lt;br&gt;
It has gradients in all colors and very good UI for searching perfect gradients for your site. &lt;br&gt;
Do check it out- &lt;a href="https://uigradients.com"&gt;https://uigradients.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-neumorphism"&gt;
  &lt;/a&gt;
  5) Neumorphism
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zaYHeUHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pye11jln4w1pfzhmcdpi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zaYHeUHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pye11jln4w1pfzhmcdpi.png" alt="Neumorphism site"&gt;&lt;/a&gt;&lt;br&gt;
If you want perfect and good looking box shadows to UI elements then I suggest using this site for that. It allows you to customize shadows according to your need, the best feature it has.&lt;br&gt;
Do check it out- &lt;a href="https://neumorphism.io/"&gt;https://neumorphism.io/&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-font-awesome"&gt;
  &lt;/a&gt;
  6) Font Awesome
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eTLp2NbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3rw0pyd79jzy1mvy88x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eTLp2NbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3rw0pyd79jzy1mvy88x.png" alt="Font awesome site"&gt;&lt;/a&gt;&lt;br&gt;
No doubt one of the best website for free and good icons currently. Using their icons is easy, just use their cdn to start using 100s of icons for free. One other site for icons you can use is &lt;strong&gt;Heroicons&lt;/strong&gt; &lt;a href="https://heroicons.com/"&gt;https://heroicons.com/&lt;/a&gt;&lt;br&gt;
Do check it out- &lt;a href="https://fontawesome.com/"&gt;https://fontawesome.com/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This was all for part1 of sites every beginner in web developer should use for good and attractive site. Stay tunned for part2 for learning new awesome sites.&lt;/p&gt;

&lt;p&gt;Other sites worth checking are- &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Undraw for illustrations- &lt;a href="https://undraw.co/"&gt;https://undraw.co/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Google fonts for fonts- &lt;a href="https://fonts.google.com/"&gt;https://fonts.google.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Icons8 for icons and illustrations- &lt;a href="https://icons8.com/"&gt;https://icons8.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Glassmorphism generator- &lt;a href="https://ui.glass/generator/"&gt;https://ui.glass/generator/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading my first post. If you know other cool sites you want other beginners to know about, mention them in the commands as helping other web developer is our duty.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>todayilearned</category>
      <category>beginners</category>
      <category>tutoria</category>
    </item>
    <item>
      <title>5 Free react template and themes</title>
      <author>Tamizh Techie</author>
      <pubDate>Sat, 02 Oct 2021 13:20:31 +0000</pubDate>
      <link>https://dev.to/tamizh_techie/5-free-react-template-and-themes-f</link>
      <guid>https://dev.to/tamizh_techie/5-free-react-template-and-themes-f</guid>
      <description>&lt;p&gt;Free React resources are very difficult to find when searching for templates and themes on the Internet. So we give link for download free templates and themes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tealfeed.com/5-free-react-template-themes-dgnkc"&gt;https://tealfeed.com/5-free-react-template-themes-dgnkc&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Contribute to Codename One during Hacktoberfest</title>
      <author>Shai Almog</author>
      <pubDate>Sat, 02 Oct 2021 13:09:44 +0000</pubDate>
      <link>https://dev.to/codenameone/contribute-to-codename-one-during-hacktoberfest-2e4b</link>
      <guid>https://dev.to/codenameone/contribute-to-codename-one-during-hacktoberfest-2e4b</guid>
      <description>&lt;p&gt;&lt;strong&gt;It’s Hacktoberfest time! 🎃 Contribute to Codename One for Hacktoberfest to give back to open-source this October.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We’re excited that Codename One is participating in Hacktoberfest this year. Now in its eighth year, Hacktoberfest is a global online festival aiming to drive contribution and involvement in open source projects.&lt;/p&gt;

&lt;p&gt;We encourage contributions from the Hacktoberfest community. People of all backgrounds and skill levels are welcome!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-hacktoberfest"&gt;
  &lt;/a&gt;
  What is Hacktoberfest?
&lt;/h2&gt;

&lt;p&gt;Hacktoberfest is a month-long global celebration of open source software run by DigitalOcean with a strong focus on encouraging contributions to open source projects.&lt;/p&gt;

&lt;p&gt;From senior developers to students learning to code; open source enthusiasts of all skill levels can participate.&lt;/p&gt;

&lt;p&gt;The rules are simple: create a minimum of 4 quality Pull Requests on GitHub to any open source project repo during the whole month of October and have them accepted by a maintainer.&lt;/p&gt;

&lt;p&gt;By completing this challenge, you will earn your Hacktoberfest 👕 swag or help plant a 🌲 tree. Just make sure to &lt;a href="https://hacktoberfest.digitalocean.com/register"&gt;register&lt;/a&gt; first!&lt;/p&gt;

&lt;p&gt;👉 Learn more about Hacktoberfest &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-contribute-to-codename-one"&gt;
  &lt;/a&gt;
  Why Contribute to Codename One?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#history"&gt;
  &lt;/a&gt;
  History
&lt;/h3&gt;

&lt;p&gt;Codename One is a revolutionary mobile development solution started by ex-Sun Microsystems developers based on work that started within Sun. Codename One delivers the Write Once Run Anywhere (WORA) promise of Java for mobile devices by intelligently cross compiling to native code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#established-amp-mature"&gt;
  &lt;/a&gt;
  Established &amp;amp; Mature
&lt;/h3&gt;

&lt;p&gt;Codename One version 1.0 was released in 2012. It was the first solution to build native iPhone apps in Java and is still the most mature, performant and stable cross-platform mobile toolkit on the market.&lt;/p&gt;

&lt;p&gt;It is now being used by many well-known organizations including banks, government agencies and startups.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#free-amp-open-source"&gt;
  &lt;/a&gt;
  Free &amp;amp; Open Source
&lt;/h3&gt;

&lt;p&gt;The core of Codename One is free and open source. GPL + CE licensed so it is free to use with commercial projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h3&gt;

&lt;p&gt;Codename One has a consolidated and active community of developers and enthusiasts. &lt;/p&gt;

&lt;p&gt;If you are a true believer in Java and the power of cross-platform, you can help make Codename One even better! 🙌&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-contribute-to-codename-one"&gt;
  &lt;/a&gt;
  How to Contribute to Codename One?
&lt;/h2&gt;

&lt;p&gt;Before you start working on something, we would suggest talking to us in the cn1 &lt;a href="https://www.reddit.com/r/cn1/"&gt;subreddit&lt;/a&gt; or asking a question on &lt;a href="http://stackoverflow.com/tags/codenameone"&gt;stack overflow with the codenameone tag&lt;/a&gt;. You can also contact us via the chat widget on our website.&lt;/p&gt;

&lt;p&gt;To make it easier to start contributing to Codename One, we’ve outlined some guidelines in our &lt;a href="https://github.com/codenameone/CodenameOne/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file available at our GitHub repository.&lt;/p&gt;

&lt;p&gt;Steps to Contribute:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Visit &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest website&lt;/a&gt; and sign in with your GitHub account ✅&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose your favorite &lt;a href="https://github.com/codenameone/CodenameOne/labels/Hacktoberfest"&gt;Codename One issue&lt;/a&gt; and submit your Pull Request 👨‍💻&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wait for your PR to be reviewed and merged 💕&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To make issues easier to discover, we have tagged them with relevant labels 🏷️ i.e. Hacktoberfest, good first issue etc.&lt;/p&gt;

&lt;p&gt;Best of luck and Happy Hacktoberfest! 🎃&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>java</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Nodejs Best Practices(part 1- Introduction)</title>
      <author>ADJARO OGAGA</author>
      <pubDate>Sat, 02 Oct 2021 12:27:19 +0000</pubDate>
      <link>https://dev.to/ogagacodes/nodejs-best-practices-part-1-introduction-49fl</link>
      <guid>https://dev.to/ogagacodes/nodejs-best-practices-part-1-introduction-49fl</guid>
      <description>&lt;p&gt;I once heard a colleague ask, 'how do you survive with javascript(js), so many libraries. Nodejs, Reactjs, Angularjs, Vuejs, expressjs. Terrible, I pity you guys. Infact I know there is probably another js cooking', laughing hysterically. &lt;br&gt;
Hmmmmmmmmm. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TM26FlCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syqexxfcsjlu0xb5irzs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TM26FlCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syqexxfcsjlu0xb5irzs.jpg" alt="A man sighing"&gt;&lt;/a&gt;&lt;br&gt;
Well, in this series we will embark on a gradual understanding of concepts in Nodejs that most junior Nodejs developers struggle with. What better place to start than how to structure your code!!&lt;br&gt;
But for starter, just what is nodejs?&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-is-nodejs"&gt;
  &lt;/a&gt;
  What is Nodejs?
&lt;/h1&gt;

&lt;p&gt;I forgave my colleague for saying nodejs is a Javascript library, because he is wrong and nodejs is not a Javascript library.&lt;br&gt;
Technical Jargon: &lt;strong&gt;Nodejs is runtime environment for javascript on the server. It uses the javascript v8 engine, hence it's a single threaded, event driven environment.&lt;/strong&gt; &lt;br&gt;
Well!! If you understand that , good for you. But let's talk to the lay men( no disrespect intended).&lt;br&gt;
During the early days of Js, Js can only power the web, meaning Javascript could only be run in the browser, strictly for websites interactivity, then came Nodejs passionately designed by My Very Respected colleague Ryan Dahl, making it possible to write code that servers understand. Take it that Nodejs is a microwave that made cooking with plates(Javascript) possible. You won't place your plate on a gas fire. But with the microwave plates can now be used to cook meals.&lt;br&gt;
How this happens: Nodejs is a bunch of many smaller instructions written in C, C++ and of course javascript. Instructions that make it possible so the servers(other computers connected to your computer) that have the v8 engine installed can in turn run your custom instructions. Confusing?? Ok its like a tanker that has to be fueled to deliver it's product, fuel. Javascript needs Javascript to run Javascript in a computer. Lol. How funny? Well, I promise as we proceed you'll get the point, if you haven't already.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#setting-up-a-nodejs-application"&gt;
  &lt;/a&gt;
  Setting Up A Nodejs Application
&lt;/h1&gt;

&lt;p&gt;Tools you Need&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Nodejs:
Download at &lt;a href="https://nodejs.org/en/download/"&gt;Get Nodejs&lt;/a&gt;
The instructions are quite clear, but if you have any 
difficulty, please drop in comment section below&lt;/li&gt;
&lt;li&gt;A Code Editor (I will use vscode throughout this tutorial)
Download at &lt;a href="https://code.visualstudio.com/download"&gt;Get VsCode&lt;/a&gt;.
I really hope most of those reading this already are familiar with these tools, hence we shall not deliberate on setting up these tools. But as I have stated, I am here to help.
OK.. Now let build our firsT server.
Steps&lt;/li&gt;
&lt;li&gt;Create a folder
2.Open vscode and open the folder&lt;/li&gt;
&lt;li&gt;Press (control and backtick) to open an integrated terminal in vscode). Make sure your'e in the folder, the run
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -Y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;npm comes with nodejs, so you don't need to install it. Then if you have the challenge of command not recognized or some kindaa error, share please, but for windows my best guess is you have to update your path variable. Check this resource &lt;a href="https://www.computerhope.com/issues/ch000549.htm"&gt;Update Path Variable&lt;/a&gt; for that.&lt;/p&gt;

&lt;p&gt;Moving on....&lt;br&gt;
STEP 4 : For this tutorial, since we more concerned with best practices, we will be using a nodejs library and many other helper libraries to make things easy. I choose koa.js. Also note we will also make our api requests using graphql. Now let ride.....&lt;br&gt;
Make sure you're still in the folder you ran npm init from. Now run the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i koa koa-mount graphql -S
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For now these are all we need. Now lets write a basic sever.&lt;br&gt;
Create a file index.mjs, and copy the code below and paste&lt;/p&gt;

&lt;p&gt;index.mjs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Koa from 'koa';
const app = new Koa();
// import {
  // response
app.use(ctx =&amp;gt; {
  ctx.body = 'Hello Koa';
});

  app.listen(8080, () =&amp;gt; {
      console.log("Server running.......")
  });


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point before running the application or even explaining each line, make sure you have done the following steps...&lt;br&gt;
1.Run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Added a start script in your package.json
"start":"node index.mjs"&lt;/li&gt;
&lt;li&gt;Made sure you're file is correctly named index.mjs not index.js.&lt;/li&gt;
&lt;li&gt;And make sure you have the below file structure
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zO2_FCp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ap2w467bidz338gy4r40.png" alt="image"&gt;
Then run
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now pay attention to your console... You should see  "Server running..."&lt;br&gt;
Go to localhost:8080&lt;br&gt;
'Hello koa'&lt;br&gt;
Did you see that? If yes, weldone!!!&lt;br&gt;
You have built a nodejs server....&lt;br&gt;
Now is this just it? How boring! Relax and go over this again this is going get very interesting.. Part 2 loading.......&lt;/p&gt;

</description>
      <category>backend</category>
      <category>architecture</category>
      <category>node</category>
      <category>bestpractices</category>
    </item>
    <item>
      <title>Demand Forecasting with AWS Forecast
</title>
      <author>Amit Kayal</author>
      <pubDate>Sat, 02 Oct 2021 12:24:08 +0000</pubDate>
      <link>https://dev.to/aws-builders/demand-forecasting-with-aws-forecast-pc8</link>
      <guid>https://dev.to/aws-builders/demand-forecasting-with-aws-forecast-pc8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-forecasting"&gt;
  &lt;/a&gt;
  What is forecasting?
&lt;/h2&gt;

&lt;p&gt;A time series essentially is a series of quantitative values. These values are obtained over time, and often have equal time intervals between them. These intervals can be quite different and may consist of yearly, quarterly, monthly or hourly buckets for instance.&lt;/p&gt;

&lt;p&gt;Time-series methods are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Moving Average&lt;/li&gt;
&lt;li&gt;Autoregression&lt;/li&gt;
&lt;li&gt;Vector Autoregression&lt;/li&gt;
&lt;li&gt;Autoregressive Integrated Moving Average&lt;/li&gt;
&lt;li&gt;Autoregressive Moving Average&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#components-of-time-series"&gt;
  &lt;/a&gt;
  Components of Time Series
&lt;/h2&gt;

&lt;p&gt;Key classifications of the components of the time series are: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Random or Irregular movements.&lt;/li&gt;
&lt;li&gt;Cyclic Variations.&lt;/li&gt;
&lt;li&gt;Seasonal Variations.&lt;/li&gt;
&lt;li&gt;Trend.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#why-amazon-forecast"&gt;
  &lt;/a&gt;
  Why Amazon Forecast
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fully managed service that uses machine learning to deliver highly accurate forecasts. &lt;/li&gt;
&lt;li&gt;Based on the same machine learning forecasting technology used by Amazon.com.&lt;/li&gt;
&lt;li&gt;Automated machine learning

&lt;ul&gt;
&lt;li&gt;Includes AutoML capabilities that take care of the machine learning for you.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Works with any historical time series data to create accurate forecasts

&lt;ul&gt;
&lt;li&gt; in a retail scenario, Amazon Forecast uses machine learning to process your time series data (such as price, promotions, and store traffic) and combines that with associated data (such as product features, floor placement, and store locations) to determine the complex relationships between them. &lt;/li&gt;
&lt;li&gt;So, it can combine combining time series data with additional variables for time series prediction&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-amazon-forecast-works"&gt;
  &lt;/a&gt;
  How Amazon Forecast works?
&lt;/h2&gt;

&lt;p&gt;Here is the flow diagram taken from AWS site and key points here to note are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Historical data can be pushed into S3&lt;/li&gt;
&lt;li&gt;Forecast can be triggered on data arrival in S3&lt;/li&gt;
&lt;li&gt;Output of forecast can be pushed into S3 for further actions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7mSrifu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1.awsstatic.com/r2018/r/seer/diagrams/Seer_HowitWorks_Final.44b02658b17d05e9242b450b220f6e0ca4065638.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mSrifu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1.awsstatic.com/r2018/r/seer/diagrams/Seer_HowitWorks_Final.44b02658b17d05e9242b450b220f6e0ca4065638.png" alt="im"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#forecasting-automation-with-amazon-forecast-by-applying-mlops"&gt;
  &lt;/a&gt;
  Forecasting automation with Amazon Forecast by applying MLOps
&lt;/h2&gt;

&lt;p&gt;The following model architecture taken from AWS site allows us to build, train, and deploy a time-series forecasting model leveraging an MLOps pipeline encompassing Amazon Forecast, &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt;, and &lt;a href="https://aws.amazon.com/step-functions/"&gt;AWS Step Functions&lt;/a&gt;. To visualize the generated forecast, we will use a combination of AWS serverless analytics services such as &lt;a href="https://aws.amazon.com/athena/"&gt;Amazon Athena&lt;/a&gt; and &lt;a href="https://aws.amazon.com/quicksight/"&gt;Amazon QuickSight&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6e3R1W-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2020/06/22/Screen-Shot-2020-06-19-at-15.00.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6e3R1W-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2020/06/22/Screen-Shot-2020-06-19-at-15.00.38.png" alt="im"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Key components of this architecture are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dataset is uploaded to the Amazon S3 cloud storage under the &lt;code&gt;/**train**&lt;/code&gt; directory (prefix).&lt;/li&gt;
&lt;li&gt;uploaded file triggers Lambda, which initiates the MLOps pipeline built using a Step Functions state machine.&lt;/li&gt;
&lt;li&gt;The state machine stitches together a series of Lambda functions to build, train, and deploy a ML model in Amazon Forecast. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws.amazon.com/cloudwatch/"&gt;Amazon CloudWatch&lt;/a&gt;, which captures Forecast metrics is being used for log analysis&lt;/li&gt;
&lt;li&gt;SNS being used for Forecasting job status change notification

&lt;ul&gt;
&lt;li&gt; final forecasts become available in the source Amazon S3 bucket in the &lt;code&gt;**/forecast**&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;ML pipeline saves any old forecasts in the &lt;code&gt;**/history**&lt;/code&gt; directory.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#forecast-workflow"&gt;
  &lt;/a&gt;
  Forecast Workflow
&lt;/h2&gt;

&lt;p&gt;The workflow to generating forecasts consists of the following steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creating related datasets and a dataset group&lt;/li&gt;
&lt;li&gt;Retrieving training data&lt;/li&gt;
&lt;li&gt;Training predictors (trained model) using an algorithm or AutoML&lt;/li&gt;
&lt;li&gt;Evaluating the predictor with metrics&lt;/li&gt;
&lt;li&gt;Creating a forecast&lt;/li&gt;
&lt;li&gt;Retrieving forecast for users&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Amazon Forecast supports the following dataset domains:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/forecast/latest/dg/retail-domain.html"&gt;RETAIL Domain&lt;/a&gt; – For retail demand forecasting&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/forecast/latest/dg/inv-planning-domain.html"&gt;INVENTORY_PLANNING Domain&lt;/a&gt; – For supply chain and inventory planning&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/forecast/latest/dg/ec2-capacity-domain.html"&gt;EC2 CAPACITY Domain&lt;/a&gt; – For forecasting Amazon Elastic Compute Cloud (Amazon EC2) capacity&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/forecast/latest/dg/workforce-domain.html"&gt;WORK_FORCE Domain&lt;/a&gt; – For work force planning&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/forecast/latest/dg/webtraffic-domain.html"&gt;WEB_TRAFFIC Domain&lt;/a&gt; – For estimating future web traffic&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/forecast/latest/dg/metrics-domain.html"&gt;METRICS Domain&lt;/a&gt; – For forecasting metrics, such as revenue and cash flow&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/forecast/latest/dg/custom-domain.html"&gt;CUSTOM Domain&lt;/a&gt; – For all other types of time-series forecasting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example 1: Dataset Types in the RETAIL Domain&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are a retailer interested in forecasting demand for items, you might create the following datasets in the RETAIL domain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Target time series is the required dataset of historical time-series demand (sales) data for each item (each product a retailer sells). In the RETAIL domain, this dataset type requires that the dataset includes the &lt;code&gt;item_id&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;, and the &lt;code&gt;demand&lt;/code&gt; fields. The &lt;code&gt;demand&lt;/code&gt; field is the forecast target, and is typically the number of items sold by the retailer in a particular week or day.&lt;/li&gt;
&lt;li&gt;Optionally, a dataset of the related time series type. In the RETAIL domain, this type can include optional, but suggested, time-series information such as &lt;code&gt;price&lt;/code&gt;, &lt;code&gt;inventory_onhand&lt;/code&gt;, and &lt;code&gt;webpage_hits&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Optionally, a dataset of the item metadata type. In the RETAIL domain, Amazon Forecast suggests providing metadata information related to the items that you provided in target time series, such as &lt;code&gt;brand&lt;/code&gt;, &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;category&lt;/code&gt;, and &lt;code&gt;genre&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-case-study"&gt;
  &lt;/a&gt;
  A case study
&lt;/h2&gt;

&lt;p&gt;I took the dataset from Kaggle &lt;strong&gt;Store Item Demand Forecasting Challenge&lt;/strong&gt; which has given 5 years of store-item sales data, and asked to predict 3 months of sales for 50 different items at 10 different stores.&lt;/p&gt;

&lt;p&gt;Here is the way I have used AWS Forecasting with minimal coding.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#import-your-data"&gt;
  &lt;/a&gt;
  Import your data
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#dataset-details"&gt;
  &lt;/a&gt;
  Dataset Details
&lt;/h4&gt;

&lt;p&gt;Following are the details needs to be provided.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dataset name&lt;/li&gt;
&lt;li&gt;Frequency of your data’&lt;/li&gt;
&lt;li&gt;Data schema

&lt;ul&gt;
&lt;li&gt;I have used here schema builder option which is more visual one. Another option is json schema which allows us to specify AttributeName and AttributeType in the JSON format. &lt;/li&gt;
&lt;li&gt;Forecast data schema has concept of domain to make our dataset creation much easier. I have selected retail domain option here and forecast has guided me to have following attributes.&lt;/li&gt;
&lt;li&gt;item_id (attribute type: string) - &lt;strong&gt;Mandatory by forecast&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;timestamp(attribute type: timestamp and have selected format as yyyy-mm-dd) - &lt;strong&gt;Mandatory by forecast&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;demand(attribute type float) - &lt;strong&gt;Mandatory by forecast&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;store (attribute type: string) - Had to add this as my forecast has to be based on timestamp, store id and item id.&lt;/li&gt;
&lt;li&gt;It is essential that &lt;strong&gt;All attributes displayed must exist in your CSV file and must be ordered in the same order that they appear in your CSV file&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have used following python code to process my dataset from kaggle.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;train_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"train.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;train_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"timestamp"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'timestamp'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;train_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"timestamp"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'timestamp'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                     &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'%Y%m%d %H:%M:%S'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;train_df_final&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_df_final&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s"&gt;'item_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'timestamp'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'demand'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'store'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;train_df_final&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"train_df.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;date_format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'%Y-%m-%d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#upload-dataset-into-aws-s3"&gt;
  &lt;/a&gt;
  Upload dataset into AWS S3
&lt;/h4&gt;

&lt;p&gt;Create an AWS S3 bucket, and upload the time-series data into the bucket.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bucket&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bucketName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upload_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"data/item-demand-time.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Bucket&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#dataset-import-details"&gt;
  &lt;/a&gt;
  Dataset import details
&lt;/h4&gt;

&lt;p&gt;Following are the details needs to be provided for Import task.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Dataset import name&lt;/li&gt;
&lt;li&gt;Select time zone  Info

&lt;ul&gt;
&lt;li&gt;My dataset does not have TZ as any variable and so I have selected the option of do&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Data location Info

&lt;ul&gt;
&lt;li&gt;This is input file path from my S3 bucket which needs to be provided&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;IAM Role Info

&lt;ul&gt;
&lt;li&gt;Dataset groups require permissions from IAM to read your dataset files in S3. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now it will give us option to import and once this is done then we should get &lt;strong&gt;Successfully imported your data.&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#train-a-predictor"&gt;
  &lt;/a&gt;
  Train a predictor
&lt;/h4&gt;

&lt;p&gt;Train a predictor, a custom model with underlying infrastructure that Amazon Forecast trains on your datasets.&lt;br&gt;
Following are the key parameters required here.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#additional-configurations-to-be-set-during-this-phase-include"&gt;
  &lt;/a&gt;
  Additional configurations to be set during this phase include
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;How the training dataset is to be split into training and testing dataset ?&lt;/li&gt;
&lt;li&gt;How the missing data is to be addressed ?&lt;/li&gt;
&lt;li&gt;How the model validation is to be performed (i.e., back test window in the context of time-series analysis)&lt;/li&gt;
&lt;li&gt;How many times the model validation is to be performed during the model training phase (i.e., number of back test windows in the context of time-series analysis)&lt;/li&gt;
&lt;li&gt;What is the forecast horizon ?&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#predictor-settings"&gt;
  &lt;/a&gt;
  Predictor settings
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Forecast name&lt;/li&gt;
&lt;li&gt;Forecast horizon

&lt;ul&gt;
&lt;li&gt;This number tells Amazon Forecast how far into the future to predict your data at the specified forecast frequency.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Forecast frequency

&lt;ul&gt;
&lt;li&gt;My data set has timestamp daily and hence i have set this as 1 day&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#predictor-details"&gt;
  &lt;/a&gt;
  Predictor details
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Algorithm selection

&lt;ul&gt;
&lt;li&gt;Here i have selected the option of &lt;strong&gt;AutoML&lt;/strong&gt; which allows me to let Amazon Forecast choose the right algorithm for dataset.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optimization metric

&lt;ul&gt;
&lt;li&gt;I have selected default here.&lt;/li&gt;
&lt;li&gt;Amazon Forecast provides Root Mean Square Error (RMSE), Weighted Quantile Loss (wQL), Average Weighted Quantile Loss (Average wQL), Mean Absolute Scaled Error (MASE), Mean Absolute Percentage Error (MAPE), and Weighted Absolute Percentage Error (WAPE) metrics to evaluate your predictors.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Forecast dimensions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Item id is used in training by default and that has been added as mandatory by Forecast. Additionally I have selected Store because my aim is to have forecast based on store and item id.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Forecast type&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose up to 5 quantiles between 0.01 and 0.99 (by increments of 0.01). AWS allows us to have by default 0.1,0.5 and 0.9.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#advanced-configuration"&gt;
  &lt;/a&gt;
  Advanced Configuration
&lt;/h5&gt;

&lt;p&gt;Here this is the default FeaturizationMethod being recommended by Amazon Forecast. Provides information about the method that featurizes (transforms) a dataset field. &lt;/p&gt;

&lt;p&gt;Here this method is only being applied for my element demand which is specified by AttrubuteName.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"AttributeName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"demand"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"FeaturizationPipeline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"FeaturizationMethodName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"filling"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"FeaturizationMethodParameters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"aggregation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sum"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"frontfill"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"none"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"middlefill"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"zero"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"backfill"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"zero"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#supplementary-features"&gt;
  &lt;/a&gt;
  Supplementary features
&lt;/h5&gt;

&lt;p&gt;This is quite crucial information and can impact business problem sometime. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Weather info

&lt;ul&gt;
&lt;li&gt;Amazon Forecast Weather Index combines multiple weather metrics from historical weather events and current forecasts at a given location to increase your demand forecast model accuracy.&lt;/li&gt;
&lt;li&gt;In retail inventory management use cases, day-to-day weather variation impacts foot traffic and product mix. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Holiday info&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#create-a-forecaster"&gt;
  &lt;/a&gt;
  Create a Forecaster
&lt;/h4&gt;

&lt;p&gt;Once the Predictor is trained, it is to be prepared to provide the forecasting.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;create_forecast_response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_forecast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                           &lt;span class="n"&gt;ForecastName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forecastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="n"&gt;PredictorArn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;predictorArn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following key inputs needs to be provided from console and then we can start the process of forecast.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forecast name&lt;/li&gt;
&lt;li&gt;Predictor (This is the one was created in earlier step)&lt;/li&gt;
&lt;li&gt;Forecast types 

&lt;ul&gt;
&lt;li&gt;By default, Amazon Forecast will generate forecasts for 0.10, 0.50 and 0.90 quantiles.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#make-forecasts"&gt;
  &lt;/a&gt;
  Make Forecasts
&lt;/h4&gt;

&lt;p&gt;Now we are ready to make forecasts. In our case, we are going to write the forecasted outputs back in S3 bucket.&lt;/p&gt;

&lt;p&gt;Following inputs needs to be provided.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start date Info&lt;/li&gt;
&lt;li&gt;End date&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have given below a snapshot of the forecasts which I got using the Predictor that I trained.&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4BSJuJxw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/amitkayal/akDeepLearningMaster/blob/master/aws-forecast.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4BSJuJxw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/amitkayal/akDeepLearningMaster/blob/master/aws-forecast.png%3Fraw%3Dtrue" alt="im"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/machine-learning/amazon-forecast-weather-index-automatically-include-local-weather-to-increase-your-forecasting-model-accuracy/"&gt;Amazon Forecast Weather Index – automatically include local weather to increase your forecasting model accuracy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/machine-learning/tailor-and-prepare-your-data-for-amazon-forecast/"&gt;Prepare and clean your data for Amazon Forecast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/forecast/latest/dg/howitworks-domains-ds-types.html"&gt;Predefined Dataset Domains and Dataset Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>machinelearning</category>
      <category>deeplearning</category>
    </item>
    <item>
      <title>Navigating an API from the terminal</title>
      <author>Jakub Roztocil</author>
      <pubDate>Sat, 02 Oct 2021 12:16:56 +0000</pubDate>
      <link>https://dev.to/pie/how-to-navigate-an-api-from-the-terminal-3bmg</link>
      <guid>https://dev.to/pie/how-to-navigate-an-api-from-the-terminal-3bmg</guid>
      <description>&lt;p&gt;Today, we'll be diving into &lt;a href="https://themoviedb.org"&gt;The Movie Database&lt;/a&gt; and learning how to navigate its API efficiently with &lt;a href="https://httpie.io"&gt;HTTPie&lt;/a&gt;, &lt;a href="https://stedolan.github.io/jq/"&gt;jq&lt;/a&gt;, and &lt;a href="https://github.com/simeji/jid"&gt;jid&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When it comes to movie and TV show data, the first thing that comes to mind is likely to be Amazon's IMDB service. IMDB lacks a public, supported REST API though. Historically people have used various URL scraping techniques and well-known paths to get data out of IMDB, but that is very fragile. The Movie Database, on the other hand, has a REST API for developers (with free access) and commercial licensing for money-making projects making it a useful resource.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dive-preparation"&gt;
  &lt;/a&gt;
  Dive preparation
&lt;/h2&gt;

&lt;p&gt;When you start from scratch working or playing with a new API, there are three important questions to answer up front:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-wheres-the-documentation"&gt;
  &lt;/a&gt;
  1. Where's the documentation?
&lt;/h3&gt;

&lt;p&gt;The first question's answer is easy enough — &lt;code&gt;developers.themoviedb.org&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-whats-the-root-endpoint"&gt;
  &lt;/a&gt;
  2. What's the root endpoint?
&lt;/h3&gt;

&lt;p&gt;This should be answered by the documentation, but not always. The MovieDB docs don’t mention the root endpoint. Spoiler, the endpoint is &lt;code&gt;api.themoviedb.org&lt;/code&gt;. You'll only find that though after you have signed up as a user and requested an API key. It’s then that you are given an example URL with the API key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.themoviedb.org/3/movie/550?api_key=7e23cee5bfb742e781fccc26b9e9009f
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-is-there-authentication-and-how-does-it-work"&gt;
  &lt;/a&gt;
  3. Is there authentication and how does it work?
&lt;/h3&gt;

&lt;p&gt;Yes, there is authentication in the form of an API key which is passed in the query parameter &lt;code&gt;api_key&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That's a fake API key we're showing so do remember to substitute it with your own API key if you are following along. You can obtain an API key by &lt;a href="https://www.themoviedb.org/signup"&gt;signing up for a TMDB account&lt;/a&gt; and &lt;a href="https://www.themoviedb.org/settings/api"&gt;requesting API access in the settings&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ready-to-httpie"&gt;
  &lt;/a&gt;
  Ready to HTTPie
&lt;/h2&gt;

&lt;p&gt;(If you haven’t already, now’s the time to &lt;a href="https://httpie.io/docs#installation"&gt;install HTTPie&lt;/a&gt; so that you can follow along.) Let's translate that URL to an HTTPie command first. We'll use the &lt;code&gt;https&lt;/code&gt; command to match the protocol from the URL. The first parameter, in the example and as defined in the API docs, is the endpoint and path like so. Let’s try just that, with no authentication:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/movie/550
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run that, you'll get:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight http"&gt;&lt;code&gt;&lt;span class="k"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;401&lt;/span&gt; &lt;span class="ne"&gt;Unauthorized&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;application/json&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"status_code"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"status_message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Invalid API key: You must be granted a valid key."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The HTTP status reflects an unauthorised access but there’s also a dump of response headers and the JSON error response. All because we didn't include the &lt;code&gt;api_key&lt;/code&gt; value to authorise the request. That was deliberate, because it's a good idea to see what the error responses look like early on. With this API we get both an HTTP status code for a type of error, an explicit error message and &lt;code&gt;”success”: false&lt;/code&gt; in the JSON body. The API’s own error codes are listed in the &lt;a href="https://www.themoviedb.org/documentation/api/status-codes"&gt;documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can add in our required authentication. With HTTPie, you can list headers and form values after the URL as name value pairs. What happens to them depends on the characters that separate them.&lt;/p&gt;

&lt;p&gt;If they are separated with a &lt;code&gt;:&lt;/code&gt; then they go into the HTTP request headers.&lt;/p&gt;

&lt;p&gt;If they are separated with an &lt;code&gt;=&lt;/code&gt; then they both go into a JSON body (and the request becomes a JSON body POST).&lt;/p&gt;

&lt;p&gt;And, this is the one we are interested in, if they are separated with an &lt;code&gt;==&lt;/code&gt; they get added to the query string parameters. This is what we want to do with the api_key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/movie/550 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;api_key&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;7e23cee5bfb742e781fccc26b9e9009f
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight http"&gt;&lt;code&gt;&lt;span class="k"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;application/json&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"adult"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"backdrop_path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/rr7E0NoGKxvbkb89eR1GwfoYjpA.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"belongs_to_collection"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"budget"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;63000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"genres"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Drama"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"homepage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"http://www.foxmovies.com/movies/fight-club"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;550&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"imdb_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tt0137523"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"original_language"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"original_title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Fight Club"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"overview"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"A ticking-time-bomb insomniac and a slippery soap salesman channel primal male aggression into a shocking new form of therapy."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"popularity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;39.996&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"poster_path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/pB8BM7pdSp6B6Ih7QZ4DrQ3PmJK.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"production_companies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;711&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"logo_path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/tEiIH5QesdheJmDAqQwvtN60727.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Fox 2000 Pictures"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"origin_country"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"US"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"production_countries"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"iso_3166_1"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"US"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"United States of America"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"release_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1999-10-15"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"revenue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100853753&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"runtime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;139&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"spoken_languages"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"english_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"English"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"iso_639_1"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"English"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Released"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tagline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Mischief. Mayhem. Soap."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Fight Club"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"video"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vote_average"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;8.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vote_count"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;21654&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before we move on, a quick pro-tip: never forget that your command line shell can save you typing. Export the &lt;code&gt;api_key&lt;/code&gt; section as an environment variable like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;API_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"api_key==7e23cee5bfb742e781fccc26b9e9009f"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and then you can just do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/movie/550 &lt;span class="nv"&gt;$API_KEY&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#working-with-responses"&gt;
  &lt;/a&gt;
  Working with responses
&lt;/h2&gt;

&lt;p&gt;There's a lot of JSON in the response we just got and, thanks to HTTPie, it is both formatted and syntax-coloured for easier reading. That formatted and coloured view is the default when HTTPie is outputting to a console. If you want to page through the results, you would usually pipe the output through the &lt;code&gt;more&lt;/code&gt; or &lt;code&gt;less&lt;/code&gt; commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/movie/550 &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; | less
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But if you do that, you'll see unformatted, colour-less output. That is because the HTTPie default for output to a pipe or anything that isn't a console is to leave the content untouched for other commands to consume.&lt;/p&gt;

&lt;p&gt;If you want to force formatted output, add &lt;code&gt;--pretty=format&lt;/code&gt; to the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https &lt;span class="nt"&gt;--pretty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;format api.themoviedb.org/3/movie/550 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; | less
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can read the formatted results at your own pace. If you want the colour back too, use &lt;code&gt;--pretty=all&lt;/code&gt; and the &lt;code&gt;-R&lt;/code&gt; flag of the &lt;code&gt;less&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https &lt;span class="nt"&gt;--pretty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;all api.themoviedb.org/3/movie/550 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; | less &lt;span class="nt"&gt;-R&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll now get formatted and colourised output you can page through.&lt;/p&gt;

&lt;p&gt;There is one other difference between the defaults for output to the console and redirected output. Headers are output to the console, but skipped when outputting to another program through a pipe. If you want only headers output to a pipe, use the &lt;code&gt;-h&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;You can learn more about HTTPie's default options for terminal and redirected output in the &lt;a href="https://httpie.io/docs#terminal-output"&gt;Terminal Output&lt;/a&gt; section of the documentation. If you want to take direct control of what is output, check out the &lt;a href="https://httpie.io/docs#output-options"&gt;Output Options&lt;/a&gt;. They control which parts of the request/response exchange are output.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digging-into-responses"&gt;
  &lt;/a&gt;
  Digging into responses
&lt;/h2&gt;

&lt;p&gt;If you're trying to work out the structure and content of an API's JSON responses, you can keep paging through the documentation and the paged output of &lt;code&gt;less&lt;/code&gt; or you can reach for more precise JSON parsing tools such as, &lt;a href="https://stedolan.github.io/jq/"&gt;jq&lt;/a&gt; and &lt;a href="https://github.com/simeji/jid"&gt;jid&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;jq&lt;/code&gt;, a command line JSON processor, you can write expressions to extract and format data from JSON streams. &lt;code&gt;jid&lt;/code&gt; is an interactive JSON digger which lets you use some of jq's expressions and auto-completion to explore JSON files. For example, if we run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/movie/550 &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; | jid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Up comes a view of the JSON, formatted and colourised. Control-N and Control-P will let you page up and down through the returned data, but that's just the start.&lt;/p&gt;

&lt;p&gt;Say, for example, we are looking for which country the production occurred in. Start typing a name for a field like &lt;code&gt;pro&lt;/code&gt;, and you'll see &lt;code&gt;jid&lt;/code&gt; offers up &lt;code&gt;production_co&lt;/code&gt; as a potential autocomplete. Tap &lt;strong&gt;Tab&lt;/strong&gt; and you'll be able to alternate between &lt;code&gt;production_companies&lt;/code&gt; and &lt;code&gt;production_countries&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hit return and &lt;code&gt;jid&lt;/code&gt; displays the contents of the production_companies array. Tap &lt;strong&gt;Tab&lt;/strong&gt; again and you'll be able to enter an array index &lt;code&gt;1&lt;/code&gt; and &lt;strong&gt;Tab&lt;/strong&gt; again to display just one entry from the array. Type &lt;code&gt;.&lt;/code&gt; and you can auto-complete through that entry’s field names. &lt;code&gt;jid&lt;/code&gt; is great for locating data in nested structures and the queries you use work in the command line with &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now with these two tools to hand, you're ready to explore more of the MovieDB API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-more-about-a-movie"&gt;
  &lt;/a&gt;
  Finding more about a movie
&lt;/h2&gt;

&lt;p&gt;While there are endpoints for every movie under the /movie/ path — they are located with an id — there are also subsections to each movie entry for release dates, keywords, ratings, credits, all with a path that comes after the id. So if you want to get the credits for a movie, you'd call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/movie/550/credits &lt;span class="nv"&gt;$API_KEY&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This does seem to be a query for, potentially, just a small snippet of data. That's where &lt;code&gt;append_to_response&lt;/code&gt; in the &lt;a href="https://developers.themoviedb.org/3/getting-started/append-to-response"&gt;MovieDB API&lt;/a&gt; comes in. This lets you add, for particular endpoints like /movie, the various subsections. So, if we want a movie’s credits and images embedded into our response, we do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/movie/550 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;append_to_response&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;credits,images
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It only costs us one request and merges all the data together into one JSON object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-a-movie"&gt;
  &lt;/a&gt;
  Finding a movie
&lt;/h2&gt;

&lt;p&gt;What about finding a movie? For that, there's a search endpoint, &lt;code&gt;/search/movies&lt;/code&gt;. It takes a &lt;code&gt;query&lt;/code&gt; parameter which "must be URI-encoded". If your query value has a space in it, you can use quotes around the value and HTTPie will take care of URL-encoding the value for you. No hand-encoding spaces to &lt;code&gt;&amp;amp;20&lt;/code&gt; or similar. All we need to do is remember to put quotes around our value like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/search/movie &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;query&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;"O.C. and Stiggs"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That'll return JSON data designed for paginated search results. If we wanted to look up more about the movie, we'd want the id from the first result. For that we can pipe the results to &lt;code&gt;jq ".results[0].id"&lt;/code&gt; and we'll get the movie id. From there, it's a call to the &lt;code&gt;/movie/{id}&lt;/code&gt; to get the movie details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ MOVIE_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;
    https api.themoviedb.org/3/search/movie &lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nv"&gt;query&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;'O.C. and Stiggs'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        | jq .results[0].id
&lt;span class="si"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/movie/&lt;span class="nv"&gt;$MOVIE_ID&lt;/span&gt; &lt;span class="nv"&gt;$API_KEY&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, if you want to pack it all into one line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https &lt;span class="si"&gt;$(&lt;/span&gt;
    https api.themoviedb.org/3/search/movie &lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; &lt;span class="nv"&gt;query&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;'O.C. and Stiggs'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        | jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s1"&gt;'.results[0] | "api.themoviedb.org/3/movie/\(.id)"'&lt;/span&gt;
&lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$API_KEY&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#discovering-movies"&gt;
  &lt;/a&gt;
  Discovering movies
&lt;/h2&gt;

&lt;p&gt;One of the richest API endpoints in The Movie DB API is /discover/movie. It lets you specify over thirty different properties for searching across films.&lt;/p&gt;

&lt;p&gt;So say you want the most popular science fiction movies on The Movie Database. Genres are represented in the API with an integer id so we need to look up what the id for “Science Fiction” is. The full genre list is available on another endpoint, &lt;code&gt;/genres/movie/list&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/genre/movie/list &lt;span class="nv"&gt;$API_KEY&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight http"&gt;&lt;code&gt;&lt;span class="k"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;application/json&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"genres"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Action"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Adventure"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Animation"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;…&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can manually work your way through the list or use &lt;code&gt;jq&lt;/code&gt; to find the entry we are interested in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/genre/movie/list &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    | jq &lt;span class="s1"&gt;'.genres[] | select(.name=="Science Fiction")'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;878&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Science Fiction"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So that tells us the genre id we are looking for is 878. Back at the /discover/movie endpoint, there’s a property called &lt;code&gt;with_genre&lt;/code&gt; which we’ll set to 878. Another property available on the endpoint is &lt;code&gt;sort_by&lt;/code&gt; which takes a field name and a sort order. We’ll set that to &lt;code&gt;popularity.desc&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/discover/movie &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;with_genre&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;878 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;sort_by&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;popularity.desc &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;$API_KEY&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight http"&gt;&lt;code&gt;&lt;span class="k"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;application/json&lt;/span&gt;

&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"page"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"results"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"adult"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"backdrop_path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/9yBVqNruk6Ykrwc32qrK2TIE5xw.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"genre_ids"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="mi"&gt;878&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;460465&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"original_language"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"original_title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Mortal Kombat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"overview"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Washed-up MMA fighter Cole Young, unaware of his heritage, and hunted by Emperor Shang Tsung's best warrior, Sub-Zero, seeks out and trains with Earth's greatest champions as he prepares to stand against the enemies of Outworld in a high stakes battle for the universe."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"popularity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;5817.001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"poster_path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/xGuOF1T3WmPsAcQEQJfnG7Ud9f8.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"release_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-04-07"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Mortal Kombat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"video"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"vote_average"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;7.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"vote_count"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2266&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;…&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"total_pages"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"total_results"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The results are paginated and this is page 1 with 20 results a page. If we want to compress this down to a simple list, we can use &lt;code&gt;jq&lt;/code&gt; again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https api.themoviedb.org/3/discover/movie &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;with_genre&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;878 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;sort_by&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;popularity.desc &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;$API_KEY&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    | jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s1"&gt;'.results[] | "\(.title) \(.popularity)"'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Mortal Kombat 5817.001
Godzilla vs. Kong 3608.866
Tom Clancy's Without Remorse 4266.181
Nobody 2993.014
Vanquish 3156.355
Zack Snyder's Justice League 1992.158
…
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That snippet of jq just extracts and formats the title and popularity from the results array for each item. The &lt;code&gt;-r&lt;/code&gt; option just stops jq wrapping all its output in quotes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;Creating queries on The MovieDB API is quick thanks to HTTPie and with jq and jid, you can make sense of the results with the least amount of fuss.&lt;/p&gt;

&lt;p&gt;In the next part of this dive, we’ll look at how TMDB’s API now handles user-generated lists and how HTTPie makes it simpler to explore.&lt;/p&gt;




&lt;p&gt;Written by &lt;a href="https://twitter.com/codepope"&gt;Dj Walker-Morgan&lt;/a&gt; and originally published on &lt;a href="https://httpie.io/blog/cli-api-diving"&gt;HTTPie blog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>api</category>
      <category>cli</category>
      <category>httpie</category>
      <category>devtools</category>
    </item>
    <item>
      <title>Enjoy Programming-Themed Humor? Here's today's daily developer joke!</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Sat, 02 Oct 2021 12:00:28 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/enjoy-programming-themed-humor-here-s-today-s-daily-developer-joke-2fnk</link>
      <guid>https://dev.to/dailydeveloperjokes/enjoy-programming-themed-humor-here-s-today-s-daily-developer-joke-2fnk</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSz_uEzY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e12593f93b65.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSz_uEzY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e12593f93b65.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ❤️ if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>Embed VSCode single file editor in your website.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Sat, 02 Oct 2021 11:45:07 +0000</pubDate>
      <link>https://dev.to/ksengine/embed-vscode-single-file-editor-in-your-website-176j</link>
      <guid>https://dev.to/ksengine/embed-vscode-single-file-editor-in-your-website-176j</guid>
      <description>&lt;p&gt;Today we're going to embed an code editor in website.&lt;br&gt;
I had chosen the most popular IDE Visual Studio Code.&lt;br&gt;
The Monaco Editor is the code editor that powers VS Code.&lt;br&gt;
So we can use it to build a single file code editor&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Rich IntelliSense, Validation
&lt;p&gt;&lt;code&gt;TypeScript, JavaScript, CSS, LESS, SCSS, JSON, HTML&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Basic Syntax Colorization
&lt;p&gt;&lt;code&gt;XML, PHP, C#, C++, Razor, Markdown, Diff, Java, VB, CoffeeScript, Handlebars, Batch, Pug, F#, Lua, Powershell, Python, Ruby, SASS, R, Objective-C&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mn30-gMR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5engj79t8or6xnw40y0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mn30-gMR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5engj79t8or6xnw40y0.jpg" alt="coding on laptop"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;This is an quick example for embed vscode.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ksenginew/embed/dyRLmrQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-explained"&gt;
  &lt;/a&gt;
  Example explained
&lt;/h2&gt;

&lt;p&gt;First create a container for editor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"width:100%;height:80vh;border:1px solid grey"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;width:100%;&lt;/code&gt; - takes full width&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;height:80vh;&lt;/code&gt; - takes 80% of the viewport height.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;border:1px solid grey&lt;/code&gt; - just a border.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then add loader for editor.&lt;br&gt;
Here I am using jsDelivr as my CDN.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/monaco-editor@0.27.0/min/vs/loader.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the working code part. add this code inside an script tag below above code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;vs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.jsdelivr.net/npm/monaco-editor@0.27.0/min/vs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vs/editor/editor.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;monaco&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;typescript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;automaticLayout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;require&lt;/code&gt; - AMD module loader(loads editor)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;require.config()&lt;/code&gt; - configure to use jsDelivr.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;value: code&lt;/code&gt; - code can be any code as string.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;language: "typescript"&lt;/code&gt; - set programming language of code for language features.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;automaticLayout: true&lt;/code&gt; - Makes it responsive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then enjoy it.&lt;br&gt;
I hope to write more articles with advanced use cases of embedded editor. &lt;br&gt;
Follow 🏃‍♂️ me for more articles.&lt;br&gt;
Ask🙏 any question on comments section.&lt;br&gt;
Star⭐ me if you love this article.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;cover image by &lt;a href="https://unsplash.com/photos/oXlXu2qukGE?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditShareLink"&gt;Unsplash&lt;/a&gt;&lt;/sup&gt;&lt;br&gt;
&lt;sup&gt;image(laptop) by &lt;a href="https://unsplash.com/photos/m_HRfLhgABo?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditShareLink"&gt;Unsplash&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding 👩‍💻👩‍💻👩‍💻...&lt;br&gt;
Thanks. ❤️❤️❤️&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>vscode</category>
    </item>
  </channel>
</rss>
