<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Weekly web development resources #98</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 01 Dec 2021 06:52:12 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-98-3o6i</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-98-3o6i</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#twind"&gt;
  &lt;/a&gt;
  &lt;a href="https://twind.dev/"&gt;Twind&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twind.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7zN34OGp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/twind.jpg" alt="Twind" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A small, fast, most feature complete tailwind-in-js solution.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#using-emojis-in-html-css-and-javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.kirupa.com/html5/emoji.htm"&gt;Using Emojis in HTML, CSS, and JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.kirupa.com/html5/emoji.htm"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w_EZHiJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/emojis.jpg" alt="Using Emojis in HTML, CSS, and JavaScript" width="880" height="480"&gt;&lt;/a&gt;&lt;br&gt;
An article on how to use emojis in your web documents.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#nnnoise"&gt;
  &lt;/a&gt;
  &lt;a href="https://fffuel.co/nnnoise/"&gt;nnnoise&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://fffuel.co/nnnoise/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SLTT0jon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/nnnoise.jpg" alt="nnnoise" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
A SVG generator for subtle or not-so-subtle noise textures.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#icons-in-pure-css"&gt;
  &lt;/a&gt;
  &lt;a href="https://antfu.me/posts/icons-in-pure-css"&gt;Icons in Pure CSS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://antfu.me/posts/icons-in-pure-css"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KuN8mvG0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/icons-css.jpg" alt="Icons in Pure CSS" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
An article on how to use any icons on-demand in purely CSS.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#image-optimizer"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/antonreshetov/image-optimizer"&gt;Image Optimizer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/antonreshetov/image-optimizer"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ek3I5Mi6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/image-optimizer.jpg" alt="Image Optimizer" width="880" height="601"&gt;&lt;/a&gt;&lt;br&gt;
A free and open source tool for optimizing images and vector graphics.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#42-things-i-learned-from-building-a-production-database"&gt;
  &lt;/a&gt;
  &lt;a href="https://maheshba.bitbucket.io/blog/2021/10/19/42Things.html"&gt;42 things I learned from building a production database&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://maheshba.bitbucket.io/blog/2021/10/19/42Things.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a1RwBYxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/database.jpg" alt="42 things I learned from building a production database" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A nice article by Mahesh Balakrishnan.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a11y-myths"&gt;
  &lt;/a&gt;
  &lt;a href="https://a11ymyths.com/"&gt;a11y myths&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://a11ymyths.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmOhNt5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/a11y-myths.jpg" alt="a11y myths" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
A small website debunking common accessibility myths.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#emailtimer"&gt;
  &lt;/a&gt;
  &lt;a href="https://easytimer.app/"&gt;EmailTimer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://easytimer.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5yS469Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/timer.jpg" alt="EmailTimer" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
A free countdown timer for your emails.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pexel"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.pexel.xyz"&gt;Pexel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.pexel.xyz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7CIAOVsU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/98/pexel.jpg" alt="Pexel" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A Canva style Social Media Kit for creating quick social media creatives.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>weekly</category>
      <category>webdev</category>
    </item>
    <item>
      <title>🔑 Habilidad Técnica: 2. Conocimiento de frameworks 🧱</title>
      <author>Mariano Rentería</author>
      <pubDate>Wed, 01 Dec 2021 06:42:10 +0000</pubDate>
      <link>https://dev.to/marianorenteria/habilidad-tecnica-2-conocimiento-de-frameworks-3ilo</link>
      <guid>https://dev.to/marianorenteria/habilidad-tecnica-2-conocimiento-de-frameworks-3ilo</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cdFswd5U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckx7irlwehexx26evr29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdFswd5U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckx7irlwehexx26evr29.png" alt="Image description" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Los frameworks en los lenguajes de programación son un paradigma importante porque nos ayudan a estandarizar la forma de trabajo con algún lenguaje. &lt;/p&gt;

&lt;p&gt;No son absolutamente necesarios, sin embargo, es simplemente una de las herramientas disponibles que te ayudará a desarrollar mejor y más rápido. &lt;/p&gt;

&lt;p&gt;Mejor porque estarás seguro de que al desarrollar una aplicación estás siguiendo una estructura que te permitirá crecerlo y darle mantenimiento. &lt;/p&gt;

&lt;p&gt;Más rápido porque te permitirá ahorrarte tiempo de desarrollo mientras reutilizas módulos genéricos, por ejemplo, login, consultas a base de datos,  y entonces mejor te enfocas en otras áreas a lo que el negocio necesita, o el problema a resolver. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#invierte-tu-tiempo-en-agregar-valor-no-en-la-tecnolog%C3%ADa"&gt;
  &lt;/a&gt;
  Invierte tu tiempo en agregar valor, no en la tecnología
&lt;/h2&gt;

&lt;p&gt;El principio básico de cualquier framework es: no re-inventes la rueda o no descubras el hilo negro.&lt;/p&gt;

&lt;p&gt;Tu objetivo como senior es agregar valor, un framework evitará que pases días creando una forma de autenticación, ese tiempo lo puedes invertir en agregar reglas de negocio, pruebas automatizadas, mejorar tu código etc. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mantenimiento-y-upgrades-garantizados"&gt;
  &lt;/a&gt;
  Mantenimiento y upgrades garantizados
&lt;/h2&gt;

&lt;p&gt;A largo plazo un framework asegura la longevidad de tu aplicación, porque si el equipo decide trabajar con su propio &lt;em&gt;estilo&lt;/em&gt;  ese será la estructura de la aplicación. &lt;/p&gt;

&lt;p&gt;En cambio si el equipo usa un framework, este proporcionará una estructura que el equipo adoptará, además las personas que mantienen el framework buscarán mejorarlo de forma constante con el fin de que se ajuste a nuevas prácticas y necesidades. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusiones"&gt;
  &lt;/a&gt;
  Conclusiones
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Un framework no es indispensable, pero si es muy útil. &lt;/li&gt;
&lt;li&gt;Un framework es una prenda de calidad, actualización y mantenimiento a bajo costo. &lt;/li&gt;
&lt;li&gt;Las aplicaciones desarrolladas empleando frameworks utilizan los estándares del mercado. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Todos los frameworks tienen &lt;em&gt;cookbooks&lt;/em&gt; y manuales avanzados, te recomiendo que identifiques sus funcionalidades principales y hagas los ejercicios que ahí vienen, de un Senior se espera que sepa aprovechar los recursos que el framework ofrece, que conozca las diferencias entre una u otra versión e incluso que sepa como hacer el upgrade.&lt;/p&gt;




&lt;p&gt;Esta serie de blog posts tiene contenido de mi &lt;a href="https://marianorenteria.gumroad.com/l/guia-junio-senior"&gt;libro 📕 el cual se encuentra en preventa y saldrá antes de terminar 2021&lt;/a&gt;. &lt;/p&gt;




&lt;p&gt;Sigo trabajando en mis productos con el fin de ayudar de forma más estructurada a la comunidad de TI, si te interesan &lt;a href="https://marianorenteria.gumroad.com/"&gt;pásale a mi perfil de Gumroad&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;📕 Líder Técnico&lt;/li&gt;
&lt;li&gt;📘 De Junior a Senior&lt;/li&gt;
&lt;li&gt;🗓 Mentorías&lt;/li&gt;
&lt;li&gt;📑 Revisión de C.V.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Te invito a que &lt;strong&gt;&lt;a href="https://twitter.com/marianorenteria/"&gt;me sigas en Twitter&lt;/a&gt;&lt;/strong&gt; para que te enteres de todo el contenido que hago normalmente 🙃.&lt;/p&gt;

&lt;p&gt;También soy creador del &lt;a href="#"&gt;podcast Chile, Mole &amp;amp; Tech&lt;/a&gt;(&lt;a href="https://dev.to/chilemoleytech"&gt;https://dev.to/chilemoleytech&lt;/a&gt;), el cual esta &lt;a href="#"&gt;en todas las plataformas&lt;/a&gt;(&lt;a href="https://linktr.ee/chilemoleytech"&gt;https://linktr.ee/chilemoleytech&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-si-te-gusto-este-post-no-dudes-en-compartirlo-me-ayuda-mucho-"&gt;
  &lt;/a&gt;
  ** Si te gusto este post, no dudes en compartirlo, me ayuda mucho. **
&lt;/h2&gt;

</description>
      <category>spanish</category>
      <category>beginners</category>
      <category>career</category>
      <category>latam</category>
    </item>
    <item>
      <title>Study with Free Online study resources</title>
      <author>Krishna Pichai</author>
      <pubDate>Wed, 01 Dec 2021 06:39:52 +0000</pubDate>
      <link>https://dev.to/krishna_pichai/study-with-free-online-study-resources-1o7g</link>
      <guid>https://dev.to/krishna_pichai/study-with-free-online-study-resources-1o7g</guid>
      <description>&lt;p&gt;November 30, 2021&lt;br&gt;
Do you know when I first started to study with free resources, I was not sure that whether I can do this or not?  It takes a lot of time and passion to build consistency for the first time. But when you start doing so regularly. It can be easy. The strategy I think really helped me, I feel happy to share with you.&lt;/p&gt;

&lt;p&gt;Here are some steps which will help you :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Choose your field of study&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take a syllabus from online sources: This will help you to maintain your flow and not get distracted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do your research on topics:  According to your syllabus and topics try to collect as much as relevant information.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Search for free blogs and resources: You can find free resources on y&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--13tGhHsJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kbacnzb7o1fvmyb9v1r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--13tGhHsJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kbacnzb7o1fvmyb9v1r.jpg" alt="Image description" width="500" height="333"&gt;&lt;/a&gt;outube and Google mostly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then start studying.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to look out for free resources, I can suggest free websites and blogs for you.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://cognitiveclass.ai/courses"&gt;IBM Cognitive Class.ai&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://intellipaat.com/blog/"&gt;Intellipaat Free Blogs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://learndigital.withgoogle.com/digitalgarage"&gt;Google Digital Garage&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/training/"&gt;AWS Free Training by Amazon&lt;/a&gt;&lt;br&gt;
These are some of the technology websites which helped me a lot when I was studying Data Science with Python. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please let us know if there are any other free resources.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>python</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Prevent NPM from installing packages outside of a Docker container</title>
      <author>Tyler Smith</author>
      <pubDate>Wed, 01 Dec 2021 06:32:27 +0000</pubDate>
      <link>https://dev.to/tylerlwsmith/prevent-npm-from-installing-packages-outside-of-a-docker-container-akh</link>
      <guid>https://dev.to/tylerlwsmith/prevent-npm-from-installing-packages-outside-of-a-docker-container-akh</guid>
      <description>&lt;p&gt;If you're developing a Node.js app in a Docker container, you may want to prevent the host machine from running &lt;code&gt;npm install&lt;/code&gt; for a number of reasons. For example: a Linux container won't be able to run packages that include bundled binaries if they were installed from MacOS or Windows. Node packages can also run arbitrary (and &lt;a href="https://harry.garrood.me/blog/malicious-code-in-purescript-npm-installer/"&gt;potentially malicious&lt;/a&gt;) code during installation, so you may want to isolate your host machine.&lt;/p&gt;

&lt;p&gt;Even still, it's easy to accidentally run &lt;code&gt;npm install&lt;/code&gt; on the host.&lt;/p&gt;

&lt;p&gt;Thankfully, NPM provides &lt;em&gt;some&lt;/em&gt; ways to mitigate this. NPM has a &lt;code&gt;preinstall&lt;/code&gt; hook that runs before the &lt;code&gt;npm install&lt;/code&gt; command, and if it returns an error, it will prevent the install command from executing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-npms-raw-preinstall-endraw-hook"&gt;
  &lt;/a&gt;
  Using NPM's &lt;code&gt;preinstall&lt;/code&gt; hook
&lt;/h2&gt;

&lt;p&gt;We can use NPM's &lt;code&gt;preinstall&lt;/code&gt; hook to prevent running &lt;code&gt;npm install&lt;/code&gt; on the host by checking for an environment variable that is only present in the container.&lt;/p&gt;

&lt;p&gt;Take a look at the following &lt;code&gt;package.json&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"preinstall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;$IS_CONTAINER&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; != 1 ] &amp;amp;&amp;amp; echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Installing packages is not permitted outside of a container!&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; 1&amp;gt;&amp;amp;2 &amp;amp;&amp;amp; exit 1; exit 0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the environment variable &lt;code&gt;IS_CONTAINER&lt;/code&gt; doesn't exist or isn't set to &lt;code&gt;1&lt;/code&gt;, NPM will echo an error message, then exit with an error code (&lt;code&gt;exit 1&lt;/code&gt; means&lt;br&gt;
the program exited with an error). If &lt;code&gt;IS_CONTAINER&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;, the script will exit with &lt;code&gt;0&lt;/code&gt;, which means it was successful and the dependencies will install without issue.&lt;/p&gt;

&lt;p&gt;Now we need to make sure that our Docker container has the &lt;code&gt;IS_CONTAINER&lt;/code&gt; environment variable. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-an-environment-variable-in-the-container"&gt;
  &lt;/a&gt;
  Setting an environment variable in the container
&lt;/h2&gt;

&lt;p&gt;We can set a &lt;code&gt;IS_CONTAINER&lt;/code&gt; environment variable using one of the following three methods:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. We can set this variable in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;node&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node:lts-alpine&lt;/span&gt;
    &lt;span class="na"&gt;working_dir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/srv/app&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node index.js&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;.:/srv/app&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;IS_CONTAINER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3000:3000"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. We can set this variable in a Dockerfile (if you're using one).&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:lts-alpine&lt;/span&gt;

&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; IS_CONTAINER=1&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["node", "index.js"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. We can set it as an environment variable from the command line.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose run &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;IS_CONTAINER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 &lt;span class="nt"&gt;--rm&lt;/span&gt; node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the combination of adding the &lt;code&gt;preinstall&lt;/code&gt; script in your &lt;code&gt;package.json&lt;/code&gt; file and setting the &lt;code&gt;IS_CONTAINER&lt;/code&gt; environment variable using one of the methods above, your Node packages will install in your container without issue when you run &lt;code&gt;npm install&lt;/code&gt;. Conversely: if you run &lt;code&gt;npm install&lt;/code&gt; on your host, you'll get an error that says &lt;code&gt;Installing packages is not permitted outside of a container!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unfortunately, this method will not prevent you from installing individual packages outside of your container: it will only prevent &lt;code&gt;npm install&lt;/code&gt; from installing the packages inside &lt;code&gt;package.json&lt;/code&gt;.&lt;/strong&gt; For example, if you ran &lt;code&gt;npm install lodash&lt;/code&gt; in a console on your host machine, it would install lodash without an error. There is &lt;a href="https://github.com/npm/rfcs/issues/325"&gt;an NPM RFC&lt;/a&gt; that would change this behavior, but as of time of writing this post (November 2021), it hasn't gone through.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prevent-npm-scripts-from-running-outside-of-a-container"&gt;
  &lt;/a&gt;
  Prevent NPM scripts from running outside of a container
&lt;/h2&gt;

&lt;p&gt;You can also prevent custom NPM scripts from running outside of a container by using NPM's &lt;code&gt;pre&lt;/code&gt; scripts. If you had an NPM script called &lt;code&gt;dev&lt;/code&gt; (example: &lt;code&gt;npm run dev&lt;/code&gt;), you could create a &lt;code&gt;predev&lt;/code&gt; script that would run before &lt;code&gt;dev&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Prepending any script name with &lt;code&gt;pre&lt;/code&gt; will cause NPM to run that script first. If you had a &lt;code&gt;build&lt;/code&gt; script, you could have a &lt;code&gt;prebuild&lt;/code&gt;. If you had a &lt;code&gt;start&lt;/code&gt; script, you could have a &lt;code&gt;prestart&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can use these &lt;code&gt;pre&lt;/code&gt; scripts to look for an &lt;code&gt;IS_CONTAINER&lt;/code&gt; environment variable the way that we did in the &lt;code&gt;preinstall&lt;/code&gt; script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"preinstall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;$IS_CONTAINER&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; != 1 ] &amp;amp;&amp;amp; echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Installing packages is not permitted outside of a container!&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; 1&amp;gt;&amp;amp;2 &amp;amp;&amp;amp; exit 1; exit 0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"predev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;$IS_CONTAINER&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; != 1 ] &amp;amp;&amp;amp; echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Running the development script is not permitted outside of a container!&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; 1&amp;gt;&amp;amp;2 &amp;amp;&amp;amp; exit 1; exit 0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon index.js"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can learn more about &lt;code&gt;pre&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; scripts in &lt;a href="https://docs.npmjs.com/cli/v8/using-npm/scripts#pre--post-scripts"&gt;the official NPM docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please let me know if this post helped you, and let me know in the comments if you know a better way of doing this!&lt;/p&gt;

</description>
      <category>docker</category>
      <category>node</category>
      <category>npm</category>
      <category>javascript</category>
    </item>
    <item>
      <title>AWS IoT TwinMaker: The Hidden Gem of re:Invent</title>
      <author>Brooke Jamieson</author>
      <pubDate>Wed, 01 Dec 2021 06:31:35 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-iot-twinmaker-the-hidden-gem-of-reinvent-2kkk</link>
      <guid>https://dev.to/aws-builders/aws-iot-twinmaker-the-hidden-gem-of-reinvent-2kkk</guid>
      <description>&lt;p&gt;Overnight, AWS made lots of product announcements at &lt;a href="https://reinvent.awsevents.com/"&gt;re:Invent 2021&lt;/a&gt;, and while lots of these are getting good coverage, I wanted to quickly bring everyone up to speed on what I think is the hidden gem of re:Invent - &lt;a href="https://aws.amazon.com/iot-twinmaker/"&gt;AWS IoT TwinMaker&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Before I started as Head of Enablement for AI Machine Learning and Data at &lt;a href="https://blackbook.ai/"&gt;Blackbook.ai&lt;/a&gt; and before I became an &lt;a href="https://aws.amazon.com/developer/community/community-builders/"&gt;AWS Community Builder&lt;/a&gt; for Machine Learning, I was actually User Experience Lead and then Analytics Lead at a global IoT Proptech platform, so I've actually got heaps of experience with digital twins for facilities optimisation, and I've seen a lot when it comes to integrating disparate data sources in the built environment. &lt;/p&gt;

&lt;p&gt;This is why I'm so excited about AWS IoT TwinMaker which is a new service which makes it faster and easier for developers to create and use digital twins of real-world systems to monitor and optimise operations. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Diagram from the AWS IoT TwinMaker Product Page: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kM6apv8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gec2803qa3bus28g4go.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kM6apv8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gec2803qa3bus28g4go.png" alt="Diagram from the AWS IoT TwinMaker Product Page" width="880" height="298"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Data from sources like equipment sensors, video cameras, and business applications is being collected and processed by all sorts of organisations about their equipment and facilities. In order to optimise industrial operations, improve production output, and improve equipment performance, most companies want to combine these disparate data sets to create a digital replica of their physical systems. This is called a Digital Twin. Although creating and maintaining Digital Twins may seem difficult and time-consuming, it doesn't have to be anymore.&lt;br&gt;
With AWS IoT TwinMaker, you can quickly get started with creating digital twins of equipment, processes, and facilities. This is done by connecting data from different data sources like time series sensor data from equipment, video feeds from cameras, and maintenance histories from business applications. Importantly, You won't have to move the data into a single repository for this to work.  &lt;/p&gt;

&lt;p&gt;Building a Digital Twin Graph allows your operators to make better data-driven decisions by understanding and connecting all the sources of your data into a 3D application of the physical environment that displays data and insights in a spatial context. &lt;/p&gt;

&lt;p&gt;There's built-in data connectors for services like &lt;a href="https://aws.amazon.com/iot-sitewise/"&gt;AWS IoT SiteWise&lt;/a&gt; for equipment and time-series sensor data, &lt;a href="https://aws.amazon.com/kinesis/video-streams/"&gt;Amazon Kinesis Video Streams&lt;/a&gt; for video data, and &lt;a href="https://aws.amazon.com/s3/"&gt;Amazon S3&lt;/a&gt; for storage of visual resources like CAD files and data from business applications.&lt;/p&gt;

&lt;p&gt;AWS IoT TwinMaker forms a digital twin graph that combines and understands the relationships between virtual representations of your physical systems and connected data sources, so you can intuitively and accurately model what's happening in your real-world environment.&lt;/p&gt;

&lt;p&gt;Once you've built the digital twin graph, you can visualise the data using the context of the physical data using your existing CAD files or point cloud scans to make 3D models of your space. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Example from &lt;a href="https://github.com/aws-samples/aws-iot-twinmaker-samples"&gt;Github repo of AWS IoT TwinMaker Samples&lt;/a&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BAKH2gv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/virp7xll5b30tzn0oomp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BAKH2gv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/virp7xll5b30tzn0oomp.png" alt="Screenshot from Github repo for AWS IoT TwinMaker showing a dashboard with 3d renderings of physical spaces" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From here, you can then overlay video and sensor data overlays from your connected data sources as well as insights from connected machine learning or simulation services. But it's not just forecasts and projections, you can also add practical elements like equipment maintenance records and manuals to the digital twin which becomes your single source of truth. &lt;/p&gt;

&lt;p&gt;AWS IoT TwinMaker is available today in preview in US East, US West, Europe and Asia Pacific, and this is again just a preview service so this list will grow. The AWS Free tier will include 50 million API calls per month for 12 months, so I'm excited to get building with this! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dnZh68sE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qznjy7c17vimjhk95epi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dnZh68sE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qznjy7c17vimjhk95epi.jpg" alt="Just a teal divider line" width="880" height="5"&gt;&lt;/a&gt;&lt;br&gt;
About the Author: &lt;a href="https://twitter.com/brooke_jamieson"&gt;Brooke Jamieson&lt;/a&gt; is the Head of Enablement - AI/ML and Data at Blackbook.ai, an Australian consulting firm specialising in AI, Automation, DataOps and Digital. Learn more about Blackbook.ai &lt;a href="https://blackbook.ai/"&gt;here&lt;/a&gt; and learn more about Brooke &lt;a href="https://www.linkedin.com/in/brookejamieson/"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>iot</category>
      <category>digitaltwins</category>
      <category>proptech</category>
    </item>
    <item>
      <title>What I learned from Virtual Coffee's Tech blogging challenge</title>
      <author>Jessica Wilkins</author>
      <pubDate>Wed, 01 Dec 2021 06:26:29 +0000</pubDate>
      <link>https://dev.to/codergirl1991/what-i-learned-from-virtual-coffees-tech-blogging-challenge-186</link>
      <guid>https://dev.to/codergirl1991/what-i-learned-from-virtual-coffees-tech-blogging-challenge-186</guid>
      <description>&lt;p&gt;During the month of November, &lt;a href="https://virtualcoffee.io/"&gt;Virtual Coffee&lt;/a&gt; members participated in a &lt;a href="https://virtualcoffee.io/monthlychallenges/nov-2021/"&gt;blogging challenge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The goal was to write 50,000 words as a community. This challenged all of the members to write thoughtful tech blogs and publish them on sites like Devto. &lt;/p&gt;

&lt;p&gt;The community ended up exceeding that goal and writing over 120,000 words.&lt;/p&gt;

&lt;p&gt;It was great to see all of the amazing articles and grow personally as a writer. &lt;/p&gt;

&lt;p&gt;In this article, I am going to break down some of the articles I submitted for this challenge and what I learned by writing them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-overcame-my-fear-of-technical-writing-and-landed-a-job-at-freecodecamp"&gt;
  &lt;/a&gt;
  How I overcame my fear of technical writing and landed a job at freeCodeCamp
&lt;/h2&gt;

&lt;p&gt;This was probably my most popular &lt;a href="https://dev.to/codergirl1991/how-i-overcame-my-fear-of-technical-writing-and-landed-a-job-at-freecodecamp-37d6"&gt;article&lt;/a&gt; from this month.&lt;/p&gt;

&lt;p&gt;I decided to tell the story of how I started learning how to code and wound up working for &lt;a href="https://www.freecodecamp.org/learn/"&gt;freeCodeCamp&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I felt like it was important to tell this story because everyone has a unique journey into tech. &lt;/p&gt;

&lt;p&gt;I think it is inspiring to learn about everyone's past careers and how they wound up as developers.&lt;/p&gt;

&lt;p&gt;It was nice to see the positive reception to my story and seeing it shared across social media. I hope to write more articles talking about my journey in the near future. 😃&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-website-free-of-cost-website-builder-platform-guide"&gt;
  &lt;/a&gt;
  How to Create a Website Free of Cost – Website Builder Platform Guide
&lt;/h2&gt;

&lt;p&gt;As a staff author for &lt;a href="https://www.freecodecamp.org/news/"&gt;freeCodeCamp News&lt;/a&gt;, this was one of the assigned headlines. &lt;/p&gt;

&lt;p&gt;My task was to come up with a list of website builders that were completely free. That includes free hosting. &lt;/p&gt;

&lt;p&gt;The target audience for &lt;a href="https://www.freecodecamp.org/news/how-to-create-a-website-free-of-cost-website-builder-platform-guide/"&gt;this article&lt;/a&gt; were those that were actively searching for free options to build websites that required zero coding knowledge. &lt;/p&gt;

&lt;p&gt;At first, I wasn't sure how many free options there were still out there. My initial impression was that were was always going to be some sort of hidden cost built in.&lt;/p&gt;

&lt;p&gt;But to my suprise, there are a few options where you can build high quality sites without any coding experience.&lt;/p&gt;

&lt;p&gt;All of these options have drag and drop features and pre made template designs to choose from.&lt;/p&gt;

&lt;p&gt;These were the four sites I found during my research.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.wix.com/"&gt;Wix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.weebly.com/"&gt;Weebly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.site123.com/"&gt;SITE123&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carrd.co/"&gt;Carrd&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I really hope this guide will help those non-coders who want to build beautiful websites. 😃&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-run-the-freecodecamp-backend-challenges-locally"&gt;
  &lt;/a&gt;
  How to Run the freeCodeCamp Backend Challenges Locally
&lt;/h2&gt;

&lt;p&gt;I decided to come up with &lt;a href="https://www.freecodecamp.org/news/how-to-run-the-freecodecamp-backend-challenges-locally/"&gt;this article&lt;/a&gt;, because I was surprised that &lt;a href="https://www.freecodecamp.org/learn/"&gt;freeCodeCamp&lt;/a&gt; did not have a guide to teach users how to run the backend challenges locally. &lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/"&gt;curriculum&lt;/a&gt;, most users decide to complete the challenges using the Replit starter project. &lt;/p&gt;

&lt;p&gt;But the few users that do decide to run the project locally, try to submit their GitHub repository links but are confused why the system doesn't except their submission.&lt;/p&gt;

&lt;p&gt;I decided to create a walkthrough guide of how to clone the freeCodeCamp backend repositories and get the project running using the local server.&lt;/p&gt;

&lt;p&gt;I enjoyed writing this short guide to help freeCodeCamp users through the backend certifications. 😃&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-a-weather-converter-series"&gt;
  &lt;/a&gt;
  How to Build a Weather Converter Series
&lt;/h2&gt;

&lt;p&gt;I wanted to create a tutorial for beginners for a few months now, but was always too nervous to write it. &lt;/p&gt;

&lt;p&gt;I wanted to create a step by step guide to give beginners extra practice creating small web projects.&lt;/p&gt;

&lt;p&gt;This was my &lt;a href="https://dev.to/codergirl1991/series/15503"&gt;first tutorial&lt;/a&gt; and it was to show beginners how to build a Weather Temperature converter using HTML, CSS and JavaScript. &lt;/p&gt;

&lt;p&gt;I initially struggled with how to structure the series and how detailed I should get when it came to using a code editor. &lt;/p&gt;

&lt;p&gt;I tried to be aware of the fact that many beginners might not be familiar with a code editor. So I wanted to walk them through the basics.&lt;/p&gt;

&lt;p&gt;I also wanted to explain each step of the project and how parts of the code were working.&lt;/p&gt;

&lt;p&gt;I was happy to see that the project received positive reviews and that people were following along with the series. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stress-and-mental-health-in-tech-what-i-learned-from-dr-jennifer-akullians-freecodecamp-tech-talk"&gt;
  &lt;/a&gt;
  Stress and Mental Health in Tech – What I learned from Dr. Jennifer Akullian's freeCodeCamp Tech Talk
&lt;/h2&gt;

&lt;p&gt;I decided to write &lt;a href="https://www.freecodecamp.org/news/stress-and-mental-health-in-tech/"&gt;this article&lt;/a&gt; because the issue of mental health in tech is not discussed that often. &lt;/p&gt;

&lt;p&gt;I learned a lot from this &lt;a href="https://www.youtube.com/watch?v=xgDX8dwiF5w"&gt;freeCodeCamp Tech Talk&lt;/a&gt;, and wanted to share my thoughts with the community. &lt;/p&gt;

&lt;p&gt;The main takeaway I received from the talk, were exercises I could do throughout the day to manage my stress at work.&lt;/p&gt;

&lt;p&gt;I have even started to implement some of those daily exercises throughout my work day.&lt;/p&gt;

&lt;p&gt;I encourage everyone to give this 19 minute talk a listen because mental health is important. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This has been a great month of writing. I am really fortunate to be apart of a great community like &lt;a href="https://virtualcoffee.io/"&gt;Virtual Coffee&lt;/a&gt; and I look forward to next month's challenge. 😃&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>Tips to improve your Android Development skills</title>
      <author>Sagnik Sahoo</author>
      <pubDate>Wed, 01 Dec 2021 06:23:49 +0000</pubDate>
      <link>https://dev.to/heysagnik/tips-to-improve-your-android-development-skills-4kfe</link>
      <guid>https://dev.to/heysagnik/tips-to-improve-your-android-development-skills-4kfe</guid>
      <description>&lt;p&gt;Today, &lt;strong&gt;Android&lt;/strong&gt; remains to dominate on a global scale.Approximately 75% of the world population prefers using Android as against the 15% of iOS. It is an operating system that has a huge market for apps.So in this article let’s discuss &lt;em&gt;“Tips to improve your Android Development Skills”&lt;/em&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Follow The Trend But Think Unique&lt;/strong&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KL_xdAwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337951/20_Design-Mind_Trends-Header_sbrpjg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KL_xdAwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337951/20_Design-Mind_Trends-Header_sbrpjg.gif" alt="Following the Metaverse Trend " width="880" height="337"&gt;&lt;/a&gt;&lt;br&gt;
You have to follow the ongoing trend. But remember, millions of people are following the same trend too. So you, definitely need to think out of the box about the same that how can you make it attractive. You need to learn to increase the engagement with your app user. To know the current trend explore apps that have already been featured on the play store. Do some research on the Play Store, pick some apps with labels like Editors’ Pick and Top Developer, and install them on your Android phone. Then, analyze the apps, giving attention to what characteristics they have in common. In particular, check thoroughly the apps’ design, functionality, and everything that makes them stand out from similar apps in the category.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Get Over the FOMO (Fear of Missing Out)&lt;/strong&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sCq8CWKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337944/d84037d4eb627ef6d116c377a6a05f9f_ofmjou.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCq8CWKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337944/d84037d4eb627ef6d116c377a6a05f9f_ofmjou.webp" alt="Fear of errors" width="880" height="660"&gt;&lt;/a&gt;Android is a very huge domain. One can’t learn it completely end to end in a month. As a beginner, it’s quite common to be worried that you’re missing out on learning essential information by trying to build things while still in a state of great confusion but try to get over it. Just start with basics fundamentals Android concepts and slowly build your command on it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Give Priority to Security&lt;/strong&gt;:&lt;br&gt;
&lt;br&gt;
In the era of internet security plays the most important role. Whether it may be a website or an Android app if there is no security guarantee then there is no use of that. So while building an app development, make sure that the user’s data is safe and secure if they are using your app. Beware of the hackers in the market and find a solution to what problems they can create.&lt;br&gt;
4.&lt;strong&gt;Focus on Reading More Codes&lt;/strong&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fm_C_j5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337951/image_processing20210510-2700-1oal4i5_ejbchp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fm_C_j5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337951/image_processing20210510-2700-1oal4i5_ejbchp.gif" alt="Fear of errors" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Most Android developers don’t spend the time to read what other developers are writing. And they pay most of their time writing what they already know. But this is not going to help you to become a perfect Android developer. The only way to become a more expert developer is to read the excellent code of more skilled developers. The more you read, the more you learn. If you are developing something it is possible that you code everything on your own. But, if you start reading other’s codes, it helps in raising your vision and might also result in giving some new ideas.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;5.&lt;strong&gt;Start Contributing to Open Source&lt;/strong&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sCq8CWKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337944/d84037d4eb627ef6d116c377a6a05f9f_ofmjou.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCq8CWKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337944/d84037d4eb627ef6d116c377a6a05f9f_ofmjou.webp" alt="Fear of errors" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
If you have developed a library, plugin, or other helpful pieces of code and you’re utilizing it in your app, consider open-sourcing it. There’s enough to discover in the process of contributing to open-source projects. Even the least bit of contribution like fixing some grammatical errors in the docs will be beneficial for the project maintainer to keep the project running. And this will surely help you to improve your Android Development skill.&lt;/p&gt;

&lt;p&gt;6.&lt;strong&gt;Do Test Your Creation&lt;/strong&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WKoB63ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337947/justdebugit_zo7nnt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WKoB63ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337947/justdebugit_zo7nnt.png" alt="Fear of errors" width="800" height="600"&gt;&lt;/a&gt;&lt;br&gt;
Before, releasing your product, you must test whether it works on the smartphone efficiently and effectively and observe if it is going to impress the users. Most importantly accommodate low-end devices and smaller screens that mean in the emerging markets, many devices tend to have small screens, so make sure you optimize your UI by testing on multiple screen sizes. You should also adapt your app to low-end devices, which may have low memory, low processing power, and low resolution. Also, consider backward compatibility to jelly bean, and where practical, back to ice cream sandwich.&lt;/p&gt;

&lt;p&gt;7.&lt;strong&gt;Observe The Feedback&lt;/strong&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSrxUbwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337946/fda0dd72802bace4e1a865fc1710064c_ug7nat.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSrxUbwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/virtuonic/image/upload/v1638337946/fda0dd72802bace4e1a865fc1710064c_ug7nat.jpg" alt="feedback" width="736" height="552"&gt;&lt;/a&gt;&lt;br&gt;
You must observe the feedback that the users make and keep in mind the good and bad in your application. One of the most important things about an app is to maintain the app regularly. Keep your app up-to-date. Track the problems users are facing with your app and provide them solutions regarding the issues through regular updates. So that the next time you can deliver the best to your users. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;That's it 🤠 for today !&lt;/em&gt;&lt;br&gt;
Thank you 💞 &lt;br&gt;
Do share your valuable feedback 💬&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>android</category>
      <category>motivation</category>
      <category>programming</category>
    </item>
    <item>
      <title>Building a Clubhouse clone with 100ms Javascript SDK</title>
      <author>Nilay Jayswal</author>
      <pubDate>Wed, 01 Dec 2021 06:03:22 +0000</pubDate>
      <link>https://dev.to/100mslive/building-a-clubhouse-clone-with-100ms-javascript-sdk-4bo1</link>
      <guid>https://dev.to/100mslive/building-a-clubhouse-clone-with-100ms-javascript-sdk-4bo1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.100ms.live/"&gt;100ms&lt;/a&gt; offers a video conferencing infrastructure that provides web and mobile — native iOS and Android SDK, to add live video &amp;amp; audio conferencing to your applications.&lt;/p&gt;

&lt;p&gt;100ms is built by the same team that built live infrastructure at &lt;a href="https://www.hotstar.com/in/disneyplus"&gt;Disney&lt;/a&gt; and &lt;a href="https://web.facebook.com/?_rdc=1&amp;amp;_rdr"&gt;Facebook&lt;/a&gt;, so be sure that you are in safe hands.&lt;/p&gt;

&lt;p&gt;In this article, we will demonstrate the power of the &lt;a href="https://docs.100ms.live/javascript/v2/features/integration"&gt;100ms SDK&lt;/a&gt; by building a &lt;a href="https://www.joinclubhouse.com/"&gt;Clubhouse&lt;/a&gt; clone.&lt;/p&gt;

&lt;p&gt;Clubhouse is a revolutionary audio-based social media network that features chat rooms where users connect, listen, and learn from each other.  &lt;/p&gt;

&lt;p&gt;Let’s get started with creating our Clubhouse clone in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Our Clubhouse clone will be built with &lt;a href="https://parceljs.org/"&gt;Parcel&lt;/a&gt;, &lt;a href="https://docs.100ms.live/javascript/v2/features/integration"&gt;100ms JavaScript SDK&lt;/a&gt;, &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To get started, clone &lt;a href="https://github.com/lawrenceagles/clubhouse-jSDK-starter"&gt;this repository&lt;/a&gt; to get the starter files.&lt;/p&gt;

&lt;p&gt;Now you can run &lt;code&gt;npm install&lt;/code&gt; to install all dependencies and &lt;code&gt;npm start&lt;/code&gt; to start the dev server. After this we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HQzASTtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfkfut9ce9hm6o1onf8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HQzASTtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfkfut9ce9hm6o1onf8d.png" alt="Image description" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: the room section is not displayed because we added a &lt;code&gt;hidden&lt;/code&gt; class in the boilerplate above — in the element with &lt;code&gt;room-section&lt;/code&gt; id. We only want to display this view when the user joins a room — at that time we would hide the join form.&lt;/p&gt;

&lt;p&gt;In the next subsection, we will set up our 100ms credentials. Let’s jump in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-100ms-credentials"&gt;
  &lt;/a&gt;
  Setting up 100ms credentials
&lt;/h2&gt;

&lt;p&gt;To use the 100ms SDK in our app, we need a &lt;code&gt;token_endpoint&lt;/code&gt; and a &lt;code&gt;room_id&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;a href="https://en.parceljs.org/env.html"&gt;Parcel supports environment variables&lt;/a&gt;, create a &lt;code&gt;.env&lt;/code&gt; file in your app’s root directory and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TOKEN_ENDPOINT=&amp;lt;!-- your token endpoint --&amp;gt;
ROOM_ID=&amp;lt;!-- your room id --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get our &lt;code&gt;token_endpoint&lt;/code&gt;, register and &lt;a href="https://dashboard.100ms.live/login?__hstc=19694910.329979dc69ac6211c451a608deb47ead.1629813148407.1638280799524.1638335711945.143&amp;amp;__hssc=19694910.4.1638335711945&amp;amp;__hsfp=263881901"&gt;log in&lt;/a&gt; to your 100ms dashboard and go to the &lt;a href="https://dashboard.100ms.live/developer?__hstc=19694910.329979dc69ac6211c451a608deb47ead.1629813148407.1638280799524.1638335711945.143&amp;amp;__hssc=19694910.4.1638335711945&amp;amp;__hsfp=263881901"&gt;developer section&lt;/a&gt;. Copy the &lt;code&gt;token_endpoint&lt;/code&gt; and update the &lt;code&gt;.env&lt;/code&gt; file accordingly. Also, to get the &lt;code&gt;room_id&lt;/code&gt;  we need to create a room. But before we create a room, we first need to create a custom app and custom roles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-custom-app"&gt;
  &lt;/a&gt;
  Create custom app
&lt;/h2&gt;

&lt;p&gt;After registration, you would redirect to your dashboard to create an app.&lt;/p&gt;

&lt;p&gt;Add a unique subdomain, and from the template, options choose the “Create your Own” option to create a custom template as seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t2-8g5Jj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8p23u4em19z2409uazh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t2-8g5Jj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8p23u4em19z2409uazh.gif" alt="Image description" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-roles"&gt;
  &lt;/a&gt;
  Create Roles
&lt;/h2&gt;

&lt;p&gt;A role defines who a peer can see/hear, their permissions to mute/unmute someone, change someone's role, etc. Note a peer simply refers to a participant in the room — someone who has joined the room.&lt;/p&gt;

&lt;p&gt;Our clubhouse clone would have the following roles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Listener — can only listen to others. To create this role, turn off all publish strategies and click save.&lt;/li&gt;
&lt;li&gt;Speaker — can listen and speak. Can mute and unmute himself. To create this role, turn off all publish strategies and leave only &lt;code&gt;can share audio&lt;/code&gt; on.&lt;/li&gt;
&lt;li&gt;Moderator — can do everything a speaker can do. Also, can mute/unmute others and change their role. To create this role, turn on only &lt;code&gt;can share audio&lt;/code&gt; as in speaker. And modify its permission by turning on &lt;code&gt;can change any participant's role&lt;/code&gt; and &lt;code&gt;can mute any participant&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now click on “Setup App”, and we have:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uz9abat2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op4da8mh0yth9w76lq0k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uz9abat2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op4da8mh0yth9w76lq0k.png" alt="Image description" width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can create our room.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-room"&gt;
  &lt;/a&gt;
  Create Room
&lt;/h2&gt;

&lt;p&gt;When users join a conference call, they are said to join a room. And these users are referred to as peers. &lt;/p&gt;

&lt;p&gt;To create a room, click on Rooms from the dashboard then Create Room as seen in the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--npcerkaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j09lfxgomzptjk0oiufg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--npcerkaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j09lfxgomzptjk0oiufg.png" alt="Image description" width="880" height="420"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now fill out the room details and click “Create Room” and you will be redirected to the room details page. From there, copy your &lt;code&gt;room_id&lt;/code&gt; and update the &lt;code&gt;.env&lt;/code&gt; file accordingly.&lt;/p&gt;

&lt;p&gt;Now that we have finished setting up our 100ms app, we can start building our application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-the-app"&gt;
  &lt;/a&gt;
  Building the App
&lt;/h2&gt;

&lt;p&gt;To use the 100ms JavaScript SDK we installed previously, there are three entities we need to be familiar with, from the &lt;a href="https://docs.100ms.live/javascript/v2/features/integration#java-script"&gt;documentation&lt;/a&gt; these hooks are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;hmsStore&lt;/code&gt; - this contains the complete state of the room at any given time. This includes, for example, participant details, messages, and track states.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;hmsActions&lt;/code&gt; - this is used to perform any action such as joining, muting, and sending a message.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;hmsNotifications&lt;/code&gt; - this can be used to get notified on peer join/leave and new messages to show toast notifications to the user.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To keep things clean, let’s set up our 100ms JavaScript SDK and grab all the needed DOM elements. Add the following code to your &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import {
    HMSReactiveStore,
    selectPeers,
    selectIsConnectedToRoom,
    selectIsLocalAudioEnabled
} from '@100mslive/hms-video-store';

const hms = new HMSReactiveStore();
const hmsStore = hms.getStore();
const hmsActions = hms.getHMSActions();

// Get DOM elements
const Form = document.querySelector('#join-form');
const FormView = document.querySelector('#join-section');
const RoomView = document.querySelector('#room-section');
const PeersContainer = document.querySelector('#peers-container');
const LeaveRoomBtn = document.querySelector('#leave-room-btn');
const AudioBtn = document.querySelector('#audio-btn');
const JoinBtn = document.querySelector('#join-btn');

// handle submit form

// handle join room view

// leave room

// display room

//handle mute/unmute peer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can create the &lt;code&gt;join room&lt;/code&gt; view.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#joining-room"&gt;
  &lt;/a&gt;
  Joining Room
&lt;/h2&gt;

&lt;p&gt;Add the following code to your &lt;code&gt;index.html&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form id="join-form" class="mt-8"&amp;gt;
    &amp;lt;div class="mx-auto max-w-lg "&amp;gt;
        &amp;lt;div class="py-1"&amp;gt;
            &amp;lt;span class="px-1 text-sm text-gray-600"&amp;gt;Username&amp;lt;/span&amp;gt;
            &amp;lt;input id="username" 
                   placeholder="Enter Username" 
                   name="username" 
                   type="text"
                   class="text-md block px-3 py-2 rounded-lg 
                          w-full bg-white border-2 border-gray-300 
                          placeholder-gray-600 shadow-md 
                          focus:placeholder-gray-500 focus:bg-white 
                          focus:border-gray-600 focus:outline-none" /&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class="py-1"&amp;gt;
            &amp;lt;span class="px-1 text-sm text-gray-600"&amp;gt;Role&amp;lt;/span&amp;gt;
            &amp;lt;select id="roles"
                class="text-md block px-3 py-2 rounded-lg 
                       w-full bg-white border-2 border-gray-300 
                       placeholder-gray-600 shadow-md 
                       focus:placeholder-gray-500 focus:bg-white 
                       focus:border-gray-600 focus:outline-none"&amp;gt;
                &amp;lt;option&amp;gt;Speaker&amp;lt;/option&amp;gt;
                &amp;lt;option&amp;gt;Listener&amp;lt;/option&amp;gt;
                &amp;lt;option&amp;gt;Moderator&amp;lt;/option&amp;gt;
            &amp;lt;/select&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;button id="join-btn" type="submit"
            class="mt-3 text-lg font-semibold bg-gray-800 w-full 
                   text-white rounded-lg px-6 py-3 block shadow-xl 
                   hover:text-white hover:bg-black"&amp;gt;
            Join
        &amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The form above provides an input field for the username and a select option for the roles. We will handle submitting this form by adding the following code to the &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Form.addEventListener('submit', async function handleSubmit(e) {
    // prevents form reload
    e.preventDefault();
    // get input fields
    const userName = Form.elements['username'].value; // by name
    const role = Form.elements['roles'].value; // by name
    // simple validation
    if (!userName) return; // makes sure user enters a username
    JoinBtn.innerHTML = 'Loading...';
    try {
        // gets token
        const authToken = await getToken(role);
        // joins rooms
        hmsActions.join({
            userName,
            authToken,
            settings: {
                isAudioMuted: true
            }
        });
    } catch (error) {
        // handle error
        JoinBtn.innerHTML = 'Join';
        console.log('Token API Error', error);
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above gets the value of the form fields, gets an &lt;code&gt;authToken&lt;/code&gt; by calling the &lt;code&gt;getToken&lt;/code&gt; method, and joins the room by calling the join method in &lt;code&gt;hmsActions&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getToken&lt;/code&gt; function is a utility function. We will use two utility functions for the purpose of this tutorial. Let's quickly create them.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;src&lt;/code&gt; folder, create a utils folder and with the following files: &lt;code&gt;getToken.js&lt;/code&gt;, &lt;code&gt;createElem.js&lt;/code&gt;, and &lt;code&gt;index.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;getToken.js&lt;/code&gt; add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { v4 as uuidv4 } from 'uuid';
const TOKEN_ENDPOINT = process.env.TOKEN_ENDPOINT;
const ROOM_ID = process.env.ROOM_ID;

const getToken = async (user_role) =&amp;gt; {
    const role = user_role.toLowerCase();
    const user_id = uuidv4();
    const room_id = ROOM_ID;
    const response = await fetch(`${TOKEN_ENDPOINT}api/token`, {
        method: 'POST',
        body: JSON.stringify({
            user_id,
            role,
            room_id
        })
    });
    const { token } = await response.json();
    return token;
};
export default getToken;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And in the &lt;code&gt;createElem.js&lt;/code&gt; add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const createElem = () =&amp;gt; {}
export default createElem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will update this when we are working on rendering peers to the view. But for now, let’s leave it as a noop.&lt;/p&gt;

&lt;p&gt;Next, in the &lt;code&gt;index.js&lt;/code&gt; file add the following code to export the above utility functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import createElem from './createElem';
import getToken from './getToken';

export { createElem, getToken };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we will import these functions in our &lt;code&gt;app.js&lt;/code&gt; file as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import {
    HMSReactiveStore,
    selectPeers,
    selectIsConnectedToRoom,
    selectIsLocalAudioEnabled
} from '@100mslive/hms-video-store';
import { getToken, createElem } from '../utils';
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when we run our server we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---U4tWbuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pphq4y7cb69xvjfsdljm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---U4tWbuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pphq4y7cb69xvjfsdljm.png" alt="Image description" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When a user joins a room, we want to hide this form and display the room view. And to do this add the following code to your &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function handleConnection(isConnected) {
    if (isConnected) {
        console.log('connected');
        // hides Form
        FormView.classList.toggle('hidden');
        // displays room
        RoomView.classList.toggle('hidden');
    } else {
        console.log('disconnected');
        // hides Form
        FormView.classList.toggle('hidden');
        // displays room
        RoomView.classList.toggle('hidden');
    }
}
// subscribe to room state
hmsStore.subscribe(handleConnection, selectIsConnectedToRoom);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we subscribed to the room state; consequently, &lt;code&gt;handleConnection&lt;/code&gt; is called whenever we join or leave a room. This is possible because &lt;code&gt;hmsStore&lt;/code&gt; is reactive and it enables us to register a state. The result of this is that the registered function is called whenever the selected state changes.&lt;/p&gt;

&lt;p&gt;To handle leaving a room add the following code to the &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function leaveRoom() {
    hmsActions.leave();
    JoinBtn.innerHTML = 'Join';
}
LeaveRoomBtn.addEventListener('click', leaveRoom);
window.onunload = leaveRoom;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above, calls the &lt;code&gt;leaveRoom&lt;/code&gt; function when the &lt;code&gt;LeaveRoomBtn&lt;/code&gt; is clicked to handle leaving a room. &lt;/p&gt;

&lt;p&gt;Note: call leave on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunload"&gt;window.onunload&lt;/a&gt; to handle when a user closes or refreshes the tab.&lt;/p&gt;

&lt;p&gt;Now we can join a room and we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CHCyhib_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw1012erynd7w2g428d5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHCyhib_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw1012erynd7w2g428d5.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following this, all that is left is to create our room. Let’s do that in the next subsection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-room"&gt;
  &lt;/a&gt;
  Create Room
&lt;/h2&gt;

&lt;p&gt;First, update the &lt;code&gt;createElem.js&lt;/code&gt; function with the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// helper function to create html elements
function createElem(tag, attrs = {}, ...children) {
    const newElement = document.createElement(tag);
    Object.keys(attrs).forEach((key) =&amp;gt; {
        newElement.setAttribute(key, attrs[key]);
    });

    children.forEach((child) =&amp;gt; {
        newElement.append(child);
    });
    return newElement;
}
export default createElem;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will use this helper function to render the peers in a room. To do this, add the following code to the &lt;code&gt;app.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function renderPeers(peers) {
    PeersContainer.innerHTML = ''; // clears the container
    if (!peers) {
        // this allows us to make peer list an optional argument
        peers = hmsStore.getState(selectPeers);
    }
    peers.forEach((peer) =&amp;gt; {
        // creates an image tag
        const peerAvatar = createElem('img', {
            class: 'object-center object-cover w-full h-full',
            src: 'https://cdn.pixabay.com/photo/2013/07/13/10/07/man-156584_960_720.png',
            alt: 'photo'
        });

        // create a description paragrah tag with a text
        peerDesc = createElem(
            'p',
            {
                class: 'text-white font-bold'
            },
            peer.name + '-' + peer.roleName
        );
        const peerContainer = createElem(
            'div',
            {
                class:
                    'w-full bg-gray-900 rounded-lg sahdow-lg overflow-hidden flex flex-col justify-center items-center'
            },
            peerAvatar,
            peerDesc
        );

        // appends children
        PeersContainer.append(peerContainer);
    });
}
hmsStore.subscribe(renderPeers, selectPeers);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;renderPeers&lt;/code&gt;  function above, &lt;code&gt;selectPeers&lt;/code&gt; gives us an array of peers — remote and your local peer, present in the room.&lt;/p&gt;

&lt;p&gt;Next, we create two HTML elements: &lt;code&gt;peerAvatar&lt;/code&gt; , and &lt;code&gt;peerDesc&lt;/code&gt; by using the &lt;code&gt;createElem&lt;/code&gt; helper function. And we appended these elements as children to &lt;code&gt;peerContainer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Also, since we are subscribed to peer state, our view gets updated whenever something changes with any of the peers.&lt;/p&gt;

&lt;p&gt;Note, in our small contrived example above, we used a random avatar from &lt;a href="https://pixabay.com/"&gt;Pixabay&lt;/a&gt; as the &lt;code&gt;src&lt;/code&gt; for the &lt;code&gt;peerAvatar&lt;/code&gt; element. In a real situation, this should be the link to the user profile photo. &lt;/p&gt;

&lt;p&gt;Finally, we will handle mute/unmute by adding the following code to &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AudioBtn.addEventListener('click', () =&amp;gt; {
    let audioEnabled = !hmsStore.getState(selectIsLocalAudioEnabled);
    AudioBtn.innerText = audioEnabled ? 'Mute' : 'Unmute';
    AudioBtn.classList.toggle('bg-green-600');
    AudioBtn.classList.toggle('bg-red-600');
    hmsActions.setLocalAudioEnabled(audioEnabled);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can test our app by running &lt;code&gt;npm start&lt;/code&gt;, filling out, and submitting the form. And after joining a room we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3_VENkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyhwju02zzvwvcq7mavo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3_VENkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyhwju02zzvwvcq7mavo.png" alt="Image description" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can mute/unmute yourself, and leave the room. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#role-change"&gt;
  &lt;/a&gt;
  Role change
&lt;/h2&gt;

&lt;p&gt;Our current setup does not support the “change role” feature, but in this section, we will add this feature. &lt;/p&gt;

&lt;p&gt;Currently, a listener can mute/unmute but it is best we hide this feature since the listener does not have publish permissions.&lt;/p&gt;

&lt;p&gt;So we need to upgrade our mute/unmute feature to work with roles. We will get the permissions of the local peer from the &lt;a href="https://docs.100ms.live/api-reference/javascript/v2/home/content#select-local-peer-role"&gt;selectLocalPeerRole&lt;/a&gt; variable but first, import it by updating &lt;code&gt;app.js&lt;/code&gt; as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import {
    HMSReactiveStore,
    selectPeers,
    selectIsConnectedToRoom,
    selectIsLocalAudioEnabled,
    selectLocalPeerRole // imports selectLocalPeerRole
} from '@100mslive/hms-video-store';
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, update the &lt;code&gt;handleConnection&lt;/code&gt; function as seen below to hide the mute/unmute button from the listener update:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// handle join room view
function handleConnection(isConnected) {
    // get local peer role.
    const role = hmsStore.getState(selectLocalPeerRole);

    if (isConnected) {
        console.log('connected');

        //hides mute btn for listner
        if (role.name === 'listener') {
            AudioBtn.classList.add('hidden');
        }

        // hides Form
        FormView.classList.toggle('hidden');
        // displays room
        RoomView.classList.toggle('hidden');
    } else {
        console.log('disconnected');
        // hides Form
        FormView.classList.toggle('hidden');
        // displays room
        RoomView.classList.toggle('hidden');
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will start working on the role change feature. &lt;/p&gt;

&lt;p&gt;Update the &lt;code&gt;renderPeer&lt;/code&gt; function’s forEach loop as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
    peers.forEach((peer) =&amp;gt; {
        // creates an image tag
        const peerAvatar = createElem('img', {
            class: 'object-center object-cover w-full h-full',
            src: 'https://cdn.pixabay.com/photo/2013/07/13/10/07/man-156584_960_720.png',
            alt: 'photo'
        });
        // create a description paragraph tag with a text
        const peerDesc = createElem(
            'p',
            {
                class: 'text-white font-bold'
            },
            `${peer.name}${peer.isLocal ? ' (You)' : ''}-${peer.roleName} `
        );
        // add mute/unmute list items
        const MuteItem = createElem(
            'li',
            { id: 'mute', class: 'cursor-pointer' },
            createElem(
                'span',
                {
                    'data-id': peer.id,
                    'data-islocal': peer.isLocal,
                    class: 'mute rounded-t bg-gray-200 hover:bg-gray-400 py-2 px-4 block'
                },
                'Unmute'
            )
        );
        const SpeakerItem = createElem(
            'li',
            { id: 'speaker', class: 'cursor-pointer' },
            createElem(
                'span',
                {
                    'data-id': peer.id,
                    class: 'speaker bg-gray-200 hover:bg-gray-400 py-2 px-4 block'
                },
                'Make speaker'
            )
        );
        const ListenerItem = createElem(
            'li',
            { id: 'listener', class: 'cursor-pointer' },
            createElem(
                'span',
                {
                    'data-id': peer.id,
                    class: 'listener rounded-b bg-gray-200 hover:bg-gray-400 py-2 px-4 block'
                },
                'Make listener'
            )
        );
        const menu = createElem(
            'button',
            { class: 'text-white font-bold text-3xl z-20 rounded inline-flex items-center' },
            '...'
        );
        const dropdown = createElem(
            'ul',
            { class: 'dropdown-menu absolute top-4 right-0 hidden text-gray-700 w-max pt-1 group-hover:block z-50' },
            MuteItem,
            SpeakerItem,
            ListenerItem
        );
        const menuContainer = createElem(
            'div',
            {
                class: `${peer.isLocal &amp;amp;&amp;amp; peer.roleName === 'listener'
                ? 'hidden'
                : ''} dropdown inline-block absolute top-0 right-8`
            },
            menu,
            dropdown
        );
        const peerContainer = createElem(
            'div',
            {
                class:
                    'relative w-full p-4 bg-gray-900 rounded-lg sahdow-lg overflow-hidden flex flex-col justify-center items-center'
            },
            menuContainer,
            peerAvatar,
            peerDesc
        );
        // appends children
        PeersContainer.append(peerContainer);
    });
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above creates the list items needed for the change role feature. And these are nested as children of &lt;code&gt;menuContainer&lt;/code&gt;.  Also, the &lt;code&gt;menuContainer&lt;/code&gt; is dynamically hidden if the local peer is a listener by adding the &lt;code&gt;hidden&lt;/code&gt; Tailwind CSS class. And this gives each user with publish permission, ellipses that display a list of actions. &lt;/p&gt;

&lt;p&gt;Thus a listener cannot mute/unmute as seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_2EkxfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rwu5kkcc3hydi3r5nw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_2EkxfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rwu5kkcc3hydi3r5nw7.png" alt="Image description" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But a moderator can mute/unmute as seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8x4PAFwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl5i9hd8uuw54a0hp23i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8x4PAFwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl5i9hd8uuw54a0hp23i.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, we dynamically passed &lt;code&gt;peer.id&lt;/code&gt; and &lt;code&gt;peer.islocal&lt;/code&gt; by using the HTML 5 &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes"&gt;data-*&lt;/a&gt; global attributes. This enables us to pass custom data needed for implementing the change role feature. &lt;/p&gt;

&lt;p&gt;We choose this pattern rather than setting up our event handlers within the forEach loop because this is cleaner and easier to understand. Also, setting up event handlers in a loop in JavaScript can easily lead to bugs because it requires us to add an event handler for each list item — DOM nodes and somehow bind this.&lt;/p&gt;

&lt;p&gt;We could use &lt;a href="https://javascript.info/event-delegation"&gt;event delegation&lt;/a&gt;; this pattern enables us to add only one event handler to a parent element which would analyze bubbled events to find a match on child elements.&lt;/p&gt;

&lt;p&gt;Add the following code at the button of &lt;code&gt;app.js&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// handle change role and mute/unmuter other peers
document.addEventListener(
    'click',
    function(event) {
        const role = hmsStore.getState(selectLocalPeerRole);
        // hanadle mute/unmute
        if (event.target.matches('.mute')) {
            if (role.name === 'listener') {
                alert('You do not have the permission to mute/unmute!');
                return;
            }
            if (
                role.name === 'speaker' &amp;amp;&amp;amp; 
                JSON.parse(event.target.dataset.islocal) === false) {
                alert(
                  'You do not have the permission to mute/unmute other peers!'
                );
                return;
            }
            let audioEnabled = !hmsStore.getState(selectIsLocalAudioEnabled);
            hmsActions.setLocalAudioEnabled(audioEnabled);
            event.target.innerText = audioEnabled ? 'Mute' : 'unmute';
        }

        // handle change role
        if (event.target.matches('.speaker')) {
            if (!role.permissions.changeRole) {
                alert('You do not have the permission to change role!');
                return;
            }
            hmsActions.changeRole(event.target.dataset.id, 'speaker', true);
        }

        if (event.target.matches('.listener')) {
            if (!role.permissions.changeRole) {
                alert('You do not have the permission to change role!');
                return;
            }
            hmsActions.changeRole(event.target.dataset.id, 'listener', true);
        }
    },
    false
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above we set up one event listener to handle all the mute and change role events.&lt;/p&gt;

&lt;p&gt;We get the clicked DOM element with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/matches"&gt;event.target.matches&lt;/a&gt; and we get a peer’s permission using &lt;code&gt;role.permissions&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;From our implementation a listener cannot perform any action — he/she can only listen. A speaker can mute/unmute only himself and a moderator can mute/unmute himself and other peers. And he can also change the role of other peers.&lt;/p&gt;

&lt;p&gt;Now our final app looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9mVVNu2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s01nrkhcjkq2itn557on.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9mVVNu2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s01nrkhcjkq2itn557on.gif" alt="Image description" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;100ms is both powerful and easy to use. With a few clicks from the dashboard, we set up a custom app that we easily integrated into our app using the 100ms SDK.&lt;/p&gt;

&lt;p&gt;Interestingly, we have barely scratched the surface of what 100ms can do. Features such as screen share, RTMP streaming and recording, chat, and more can all be implemented by using this awesome infrastructure. &lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://discord.com/invite/kGdmszyzq2"&gt;join the discord channel&lt;/a&gt; to learn more about 100ms or &lt;a href="https://dashboard.100ms.live/register?referrer=https://www.google.com/&amp;amp;__hstc=19694910.329979dc69ac6211c451a608deb47ead.1629813148407.1638280799524.1638335711945.143&amp;amp;__hssc=19694910.4.1638335711945&amp;amp;__hsfp=263881901"&gt;give it a try&lt;/a&gt; in your next app for free. Lastly, if you are interested in the source code of the final application, you can get it &lt;a href="https://github.com/lawrenceagles/clubhouse-100ms-jSDK"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Tags HTML pouco usadas</title>
      <author>.·. Felipe Paz .·.</author>
      <pubDate>Wed, 01 Dec 2021 05:50:32 +0000</pubDate>
      <link>https://dev.to/felipepaz/tags-html-pouco-usadas-18ki</link>
      <guid>https://dev.to/felipepaz/tags-html-pouco-usadas-18ki</guid>
      <description>&lt;p&gt;Precisa de um autocomplete? O HTML tem!&lt;/p&gt;

&lt;p&gt;Precisa de um gauge para mostrar algum valor? O HTML tem!&lt;/p&gt;

&lt;p&gt;Precisa de um collapse sem ser bootstrap? O HTML também tem!&lt;/p&gt;

&lt;p&gt;Nesse breve resumo vou listar algumas tags que são raramente usadas ou até mesmo desconhecidas e que, na hora da construção de um blog, site ou até mesmo landing page pode ser de grande valia.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datalist"&gt;
  &lt;/a&gt;
  Datalist
&lt;/h3&gt;

&lt;p&gt;A nossa primeira tag é  &lt;strong&gt;datalist&lt;/strong&gt;. Nada mais é do que um lista de opções que são atreladas a um input, e ao digitar, as opções são sugeridas numa espécie de autocomplete.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;list=&lt;/span&gt;&lt;span class="s"&gt;"browsers"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"browser"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Browsers"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;datalist&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"browsers"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Internet Explorer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Firefox"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Chrome"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Safari"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/datalist&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#progress"&gt;
  &lt;/a&gt;
  Progress
&lt;/h3&gt;

&lt;p&gt;A nossa próxima tag é a &lt;strong&gt;progress&lt;/strong&gt;. Sem tempo ou habilidade para fazer uma barra de progresso estilosa? Usa a do HTML mesmo!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;progress&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt; &lt;span class="na"&gt;max=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/progress&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#meter"&gt;
  &lt;/a&gt;
  Meter
&lt;/h3&gt;

&lt;p&gt;Quero mostrar uma lista de habilidades e ter um &lt;strong&gt;gauge&lt;/strong&gt; bonitinho.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"meter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;HTML&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meter&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="na"&gt;min=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;max=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"meter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;10 de 10&lt;span class="nt"&gt;&amp;lt;/meter&amp;gt;&lt;/span&gt;


&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"meter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Javascript&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meter&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"8"&lt;/span&gt; &lt;span class="na"&gt;min=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;max=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"meter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;8 de 10&lt;span class="nt"&gt;&amp;lt;/meter&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#details"&gt;
  &lt;/a&gt;
  Details
&lt;/h3&gt;

&lt;p&gt;Preciso de um &lt;strong&gt;collapse&lt;/strong&gt; mas não quero usar Boostrap. O que eu faço? O HTML já tem isso!!! =D&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;Lista de linguagens&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;dt&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;Javascript&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;Python&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;Reust&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/dt&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Uma coisa do details é que a tag &lt;strong&gt;summary&lt;/strong&gt; vai ser o nosso cabeçalho e todo o restante vai ser o body do &lt;strong&gt;collapse&lt;/strong&gt;. Sabe as tags &lt;strong&gt;fieldset&lt;/strong&gt; e &lt;strong&gt;legend&lt;/strong&gt;? Pois vai funcionar exatamente assim.&lt;/p&gt;

&lt;p&gt;Tem umas outras bem bacaninhas como o &lt;a href="https://www.w3schools.com/tags/tag_map.asp"&gt;map&lt;/a&gt; por exemplo.&lt;/p&gt;

&lt;p&gt;Dá uma olhada lá no &lt;a href="https://github.com/pazfelipe/htmls-pouco-usadas"&gt;repo&lt;/a&gt; que eu disponibilizei. Vai ter essas e outras bem legais também! =D&lt;/p&gt;

</description>
      <category>html</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Finding Developers For Calinix</title>
      <author>Arghya Sarkar</author>
      <pubDate>Wed, 01 Dec 2021 05:45:58 +0000</pubDate>
      <link>https://dev.to/arghyasarkar/finding-developers-for-calinix-2l7</link>
      <guid>https://dev.to/arghyasarkar/finding-developers-for-calinix-2l7</guid>
      <description>&lt;p&gt;&lt;strong&gt;So if you don't know what CalinixOS is, it's an Arch based linux users focused on power users&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We currently need developers for Calinix&lt;/p&gt;

&lt;p&gt;GUI Developers. Calinix is FOSS so don't expect any payment from our side. Your contributions are what makes the open source projects great. Join our developer team and get mentioned in our Website and other social media handles. We currently need GUI developers who can make beautiful lightweight apps (hence no electron allowed)&lt;/p&gt;

&lt;p&gt;Try to avoid using python, cuz of its slowness, C++ and Java grow as better options. Even if you use python you need to give efficient design. &lt;/p&gt;

&lt;p&gt;For joining us, mail us at &lt;a href="mailto:contact@calinix.tech"&gt;contact@calinix.tech&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or join our Discord Server: &lt;a href="https://tinyurl.com/calinixdisc"&gt;https://tinyurl.com/calinixdisc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arghya Sarkar,&lt;br&gt;
Founder, Lead Developer, CEO&lt;br&gt;
The Calinix Project&lt;/p&gt;

</description>
      <category>calinix</category>
      <category>linux</category>
      <category>developers</category>
    </item>
    <item>
      <title>Javascript snippets you need to know right now 🔥 - #4</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Wed, 01 Dec 2021 05:42:40 +0000</pubDate>
      <link>https://dev.to/abhirajb/javascript-snippets-you-need-to-know-right-now-4-3a2l</link>
      <guid>https://dev.to/abhirajb/javascript-snippets-you-need-to-know-right-now-4-3a2l</guid>
      <description>&lt;p&gt;Hello my fellow readers!&lt;br&gt;
If you have really come this far in this series of posts, I would like to thank you for your support in reading all of the posts in this series. Thank you and do follow me on &lt;a href="https://twitter.com/rainboestrykr"&gt;Twitter&lt;/a&gt; for more tech content soon. Let's get started.&lt;/p&gt;



&lt;p&gt;1️⃣ Drop Elements&lt;br&gt;
This snippet returns a new array with n elements removed from the left.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;drop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// [2,3]&lt;/span&gt;
&lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [3]&lt;/span&gt;
&lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// []&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2️⃣ dropRight&lt;br&gt;
This snippet returns a new array with n elements removed from the right.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dropRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;dropRight&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2]&lt;/span&gt;
&lt;span class="nx"&gt;dropRight&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1]&lt;/span&gt;
&lt;span class="nx"&gt;dropRight&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// []&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3️⃣ dropRightWhile&lt;br&gt;
This snippet removes elements from the right side of an array until the passed function returns true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dropRightWhile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;dropRightWhile&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1, 2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4️⃣ dropWhile&lt;br&gt;
This snippet removes elements from an array until the passed function returns true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dropWhile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;dropWhile&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [3,4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5️⃣ elementContains&lt;br&gt;
This snippet checks whether the parent element contains the child.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elementContains&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;elementContains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;head&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;elementContains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;6️⃣ Filter Duplicate Elements&lt;br&gt;
This snippet removes duplicate values in an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filterNonUnique&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;filterNonUnique&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// [1, 3, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;7️⃣ findKey&lt;br&gt;
This snippet returns the first key that satisfies a given function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;findKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;findKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;barney&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;fred&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;pebbles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 'barney'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;8️⃣ findLast&lt;br&gt;
This snippet returns the last element for which a given function returns a truthy value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;findLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;findLast&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;9️⃣ insertAfter&lt;br&gt;
This snippet can be used to insert an HTML string after the end of a particular element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;insertAfter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;htmlString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;afterend&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;htmlString&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;insertAfter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p&amp;gt;after&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;div id="myId"&amp;gt;...&amp;lt;/div&amp;gt; &amp;lt;p&amp;gt;after&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔟 insertBefore&lt;br&gt;
This snippet can be used to insert an HTML string before a particular element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;insertBefore&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;htmlString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;beforebegin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;htmlString&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;insertBefore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p&amp;gt;before&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;p&amp;gt;before&amp;lt;/p&amp;gt; &amp;lt;div id="myId"&amp;gt;...&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading!
&lt;/h2&gt;

&lt;p&gt;Subscribe to my newsletter to never miss out on Product Launches and my top posts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.getrevue.co/profile/abhiraj"&gt;Abhiraj's Dev-letter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Until next time,&lt;br&gt;
&lt;a href="https://abhiraj.glitch.me"&gt;Abhiraj&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>SITUS POKER ONLINE TERPERCAYA, DAFTAR POKER ONLINE TERBARU</title>
      <author>ManiaLiga</author>
      <pubDate>Wed, 01 Dec 2021 05:35:28 +0000</pubDate>
      <link>https://dev.to/manialiga7/situs-poker-online-terpercaya-daftar-poker-online-terbaru-33d1</link>
      <guid>https://dev.to/manialiga7/situs-poker-online-terpercaya-daftar-poker-online-terbaru-33d1</guid>
      <description>&lt;p&gt;&lt;a href="http://198.54.126.130/"&gt;Situs Poker Online&lt;/a&gt; - Pkv Games merupakan situs poker online, bandar poker online, poker online asia terpercaya, yang terbukti bersertifikat resmi dan berlisensi di Indonesia. Pkv Games menyediakan 12 permainan qiu qiu dan judi poker online terbaik seperti Poker Online, Domino99, Adu Qiu Qiu, Bandar Qiu Qiu, Bandar Poker Online, Bandar66, Capsa Susun, Sakong Online, Perang Baccarat, Perang dadu, BD Qq, dan Adu Sakong.&lt;/p&gt;

&lt;p&gt;Pkv Games sebagai &lt;a href="http://198.54.126.130/"&gt;situs poker online terpercay&lt;/a&gt;a, memiliki keunggulan tersendiri di banding situs poker online terpercaya lainnya. Keunggulan tersebut menjadikan Pkv Games sebagai situs poker online 2021 yang memiliki banyak member aktif, serta di dukung oleh bank lokal terpercaya dalam hal transaksi, serta memiliki layanan 24 jam customer service dan live chat.&lt;/p&gt;

</description>
      <category>podcast</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
