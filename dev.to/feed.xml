<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Html Parser - How to scan HTML files for missing assets and broken links </title>
      <author>Sm0ke</author>
      <pubDate>Tue, 26 Jan 2021 17:46:49 +0000</pubDate>
      <link>https://dev.to/sm0ke/html-parser-how-to-scan-html-files-for-missing-assets-and-broken-links-2mke</link>
      <guid>https://dev.to/sm0ke/html-parser-how-to-scan-html-files-for-missing-assets-and-broken-links-2mke</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;The article presents a simple, open-source tool that I'm using to statically analyze HTML files for missing assets and broken links, before using the files in real projects. This &lt;strong&gt;Html Parser&lt;/strong&gt; is basically a Python3 wrapper over Beautiful Soup Library, the popular OSS parsing library for HTML files and XMLs. The source code can be found on Github released under EULA License. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Features:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Open-Source - can be also used for eLearning &lt;/li&gt;
&lt;li&gt;Works with directories - all HTML files are scanned&lt;/li&gt;
&lt;li&gt;Detects missing assets (JS, CSS, images ) for each page&lt;/li&gt;
&lt;li&gt;Detects broken links and suggest the right path&lt;/li&gt;
&lt;li&gt;Acceptable execution time - 100 Pages processed &amp;lt;1min&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! TL;DR;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/developer-tools"&gt;Html Parser&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/developer-tools/blob/master/check-assets-output.txt"&gt;Sample Output&lt;/a&gt; - captured from a real project&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/developer-tools/blob/master/LICENSE.md"&gt;EULA License&lt;/a&gt; - free for solo-developers, small companies, startUps, and NGOs&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RwsXCIxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/html-parser/master/media/html-parser-intro.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwsXCIxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/html-parser/master/media/html-parser-intro.gif" alt="Html Parser - Developer Tool crafted by AppSeed, animated presentation."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;To use the tool we need to specify two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The folder where HTML files are saved&lt;/li&gt;
&lt;li&gt;The assets folder - parent Directory for all JS, CSS, Images ..&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once we have provided this simple setup, we can call the scripts in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python ./check-assets.py
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#html-parser-the-relevant-parts" class="anchor"&gt;
  &lt;/a&gt;
  HTML Parser - The Relevant Parts
&lt;/h2&gt;

&lt;p&gt;To scan and correlate the information, the tool uses a few structures to save and reuse the relevant information and also perform simple operations over detected HTML files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hot it works&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;define a map where the key is the file name&lt;/li&gt;
&lt;li&gt;associate a data structure to each file where the relevant information is stored and updated&lt;/li&gt;
&lt;li&gt;Each HTML file is scanned for assets and links&lt;/li&gt;
&lt;li&gt;Validate the information for each file and save the missing assets for each by looking on the disk &lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#html-parser-source-code" class="anchor"&gt;
  &lt;/a&gt;
  HTML Parser - Source Code
&lt;/h2&gt;

&lt;p&gt;The relevant functions and code chunks are below. If something relevant is missing, feel free to ask for it in the comments section:&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Read files from a directory&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_files&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;FILES_LIST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; 
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;walk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;FILES_LIST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;FILES_LIST&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;The structure/class to save the information for each file&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TMPL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="c1"&gt;# constructor
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aFile&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="c1"&gt;# All CSS Files
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="c1"&gt;# All JS Files
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="c1"&gt;# All Images
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;links&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="c1"&gt;# All Links
&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="c1"&gt;# used to report missing assets
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err_links&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="c1"&gt;# used to report missing assets
&lt;/span&gt;
    &lt;span class="c1"&gt;# Used to have a string representation 
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;' some other info'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Initiate Beautiful Soup object&lt;/strong&gt; for each file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_bs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;aFile&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;

  &lt;span class="n"&gt;minified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htmlmin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;file_load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;aFile&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;remove_empty_space&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minified&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'html.parser'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Scan each file for Links and assets&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The results are injected into associated structures for each file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# BS object is constructed and available for queries  
&lt;/span&gt;&lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_bs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;FULL_PATH&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Scan for CSS files
&lt;/span&gt;&lt;span class="n"&gt;tmpl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# # Scan for JS files
&lt;/span&gt;&lt;span class="n"&gt;tmpl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_js&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Links and images are scanned in the same way using simple helpers. &lt;br&gt;
Once the information is saved, we can traverse the DOM using BS objects and perform mutations over elements. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#html-parser-sample-output" class="anchor"&gt;
  &lt;/a&gt;
  HTML Parser - Sample output
&lt;/h2&gt;

&lt;p&gt;To visualize a real production output, please access a sample file saved into the public repository: &lt;a href="https://github.com/app-generator/developer-tools/blob/master/check-assets-output.txt"&gt;check assets - output&lt;/a&gt;&lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;env&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; PS &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; python.exe .&lt;span class="se"&gt;\c&lt;/span&gt;heck-assets.py

 Files &lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'apps-calendar.html'&lt;/span&gt;, &lt;span class="s1"&gt;'index.html'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

 &lt;span class="k"&gt;*****&lt;/span&gt; &lt;span class="k"&gt;*****&lt;/span&gt; &lt;span class="k"&gt;*****&lt;/span&gt;

 PROCESSING &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; apps-calendar.html | files &lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt; remaining
 PROCESSING &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; index.html | files &lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt; remaining
 PROCESSING &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; apps-calendar.html
 ERR - Missing Asset -&amp;gt; /static/assets/css/classic-horizontal/style-ERROR.css
 ERR - Missing Asset -&amp;gt; /static/assets/images/logo-mini-ERROR.svg
 PROCESSING &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; index.html
 ERR - Missing Asset -&amp;gt; /static/assets/images/favicon-ERROR.png
    |
    |- apps-calendar.html
    |    |
    |    |--- CSS: 6 file&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
    |          | /static/assets/vendors/mdi/css/materialdesignicons.min.css
    |          | /static/assets/vendors/css/vendor.bundle.base.css
    |          | /static/assets/vendors/fullcalendar/fullcalendar.min.css
    |          | /static/assets/css/classic-horizontal/style.css
    |          | /static/assets/css/classic-horizontal/style-ERROR.css
    |          | /static/assets/images/favicon.png
    |     
...

Pages with errors: 2
    |
    |- apps-calendar.html
    |    |     | /static/assets/css/classic-horizontal/style-ERROR.css
    |    |     | /static/assets/images/logo-mini-ERROR.svg
    |
    |- index.html
    |    |     | /static/assets/images/favicon-ERROR.png
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The tool can be easily extended to LIVE websites using the existing core. In case any of you find it useful, feel free to suggest features in the comments section or push a PR on Github. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thank you! - For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;Beautiful Soup&lt;/a&gt; - the official docs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/"&gt;AppSeed&lt;/a&gt; - for more tools and starters&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;Btw, my (nick) name is &lt;strong&gt;Sm0ke&lt;/strong&gt; and I'm pretty active also on &lt;a href="https://twitter.com/Sm0keDev"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>devtools</category>
    </item>
    <item>
      <title>Truly Protected React Routes</title>
      <author>Daggala Gudmundsdottir</author>
      <pubDate>Tue, 26 Jan 2021 14:02:15 +0000</pubDate>
      <link>https://dev.to/daggala/truly-protected-react-routes-b8a</link>
      <guid>https://dev.to/daggala/truly-protected-react-routes-b8a</guid>
      <description>&lt;p&gt;Are you in doubt that your React routes are really protected ? There are lots of tutorials out there that talk about “secured routes”, “protected routes”, “private routes” or “restricted routes”. It’s pretty misleading because even though you have protected routes, &lt;strong&gt;it is possible&lt;/strong&gt; to get past your login page and get access to all the code in your protected routes.&lt;/p&gt;

&lt;p&gt;Perhaps people are telling you that it isn’t worth going for server side rendering (SSR) in order to truly protect the graphic content of your website. Maybe they’re saying that securing the backend should be enough because that will prevent you from displaying any sensitive data to fake-logged-in users. But &lt;strong&gt;WHAT IF&lt;/strong&gt; you still want more security and you want to block all access? After all, you don’t want your competitors to hack into your admin dashboard, to see how you’re progressing or stealing your ideas.&lt;/p&gt;

&lt;p&gt;This article will answer the following questions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#secure"&gt;what's not secure about protecting routes in the client?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why"&gt;why do we protect routes in the client?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#when"&gt;in which case do I want to have truly protected routes?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#protected"&gt;how to truly protect routes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="secure"&gt;What's not secure about protecting routes in the client?&lt;/h2&gt;

&lt;p&gt;In React there is nothing such as truly private routes as it's a single page application (SPA) which means that all the code is served to the browser.&lt;/p&gt;

&lt;p&gt;This is typically how we protect routes in the browser:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoggedIn&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PrivateRoutes&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; : &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PublicRoutes&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With this code here above, you can't guarantee that the user won't tweak your javascript, change &lt;code&gt;isLoggedIn&lt;/code&gt; to value true and pretend to be an authenticated user.&lt;/p&gt;

&lt;p&gt;Let's see how we can get access to ALL the code of your application. Here's a &lt;a href="https://codesandbox.io/s/hacking-past-react-login-page-t4hzj?file=/src/App.js"&gt;sandbox example&lt;/a&gt; where I've made a typical login system with protected routes. Notice that I lazy loaded two components: "PrivatePage" and the "LoginPage". Then I used the "classic" way of importing "AnotherPrivatePage" even though that component is not being used (this is on purpose).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Suspense&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AnotherPrivatePage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./AnotherPrivatePage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PrivatePage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./PrivatePage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LoginPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./LoginPage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setAuthenticated&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Suspense&lt;/span&gt; &lt;span class="nx"&gt;fallback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;}&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isAuthenticated&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PrivatePage&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;LoginPage&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Suspense&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can either follow the article or test yourself by opening up the sandbox example, and opening page in new window by clicking on the two squares in the upper right corner (the icon can vary between browsers):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_bzXeuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/7f28fdcbf8b0a686cafd119239f7094d/fc2a6/screenshot_codesandbox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_bzXeuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/7f28fdcbf8b0a686cafd119239f7094d/fc2a6/screenshot_codesandbox.png" alt="codesandbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to devtools by right clicking, choose "Inspect" (if you're in Chrome). Then go to "Sources".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IPSgpdyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/d332e1fcb9cc600109662e184a1397e0/47218/source_chrome.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IPSgpdyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/d332e1fcb9cc600109662e184a1397e0/47218/source_chrome.png" alt="source_chrome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here above you can see that we have two components loaded to the browser, "LoginPage" because isAuthenticated = false. We also have "AnotherPrivatePage" because if you don't lazy load, we can very easily access that component as well. The "hacker" doesn't even have to hack to look around and read the code and maybe see some static data.&lt;/p&gt;

&lt;p&gt;It needs a bit more effort to get hold of the other component "PrivatePage.js" as it's lazy loaded. There are lots of ways to do that, but here's one:&lt;br&gt;
Install React dev tools if you don't have it already, go to ⚛️Components:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ev-WeMTg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/04d0a228ac045b4e133ee99cbc574f2f/fcda8/devtools1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ev-WeMTg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/04d0a228ac045b4e133ee99cbc574f2f/fcda8/devtools1.png" alt="devtools1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click on "App" and change hook's state to true:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hrVT6Okn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/0baf76bf063776cf34280137ec575050/fcda8/devtools2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hrVT6Okn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/0baf76bf063776cf34280137ec575050/fcda8/devtools2.png" alt="devtools2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you'll see how we get access to the "PrivatePage", the last component we didn't have loaded in of our application and was supposed to be protected. There are of course lots of other ways to hack React. To increase security you could for example disable access to devtools in production but there's most often some other way to get around things.&lt;/p&gt;

&lt;h2 id="why"&gt;But why do we then protect our routes in the front end?&lt;/h2&gt;

&lt;p&gt;You can protect your components/graphics on a:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;component level&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;route level&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Either way, the main reason for why we're protecting those graphics is just to make the user experience nicer. The reason why we do it on a route level is just to make our code more organized by avoiding duplications.&lt;/p&gt;

&lt;p&gt;How are protected routes nicer for the user ? Imagine, the user has already visited our page. Next time he visits, he'll tap the url of your website and his browser autocompletes the website url without adding /login to the end of the URL. He goes straight to &lt;a href="http://www.somewebsite.com"&gt;http://www.somewebsite.com&lt;/a&gt;, but he's not authenticated anymore (let's say that he logged out the last time or his authorization token has expired). And because he's not logged in anymore the user will see the page without any content and no possibility to interact with anything that has to do with server data. It would be nicer for the user to have no direct access to the private pages and instead automatically land on the login page.&lt;/p&gt;

&lt;h2 id="when"&gt;But is it so important to have truly protected routes?&lt;/h2&gt;

&lt;p&gt;In the worst case scenario, the user can hack its way with javscript to your private routes and will see some empty tables, graphs, or messages that tell you that there is no data etc. And without content, your website will look like nothing, might even be ugly or at least it will be unusable. Well that's not so serious, we could even say that our hacker deserves that! 😈. But you have to make sure that there is no possibility for the hacker to access sensitive data 🔓 You should not leave any sensitive static data in your client and ensure that all your API endpoints are secure and make the server throw 401 if the user is not really authenticated and authorized.&lt;/p&gt;

&lt;p&gt;But is that really enough? Like I said above you might have built an admin dashboard for your company. Even without access to sensitive data, your competitor could possibly deduce where your company is heading by reading any static texts in your app, or by trying to make sense of your graphics, even though they're missing the content. Apart from that, truly securing the private part of your app adds an extra layer of security to your app, which can only be positive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dw0fbUt7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/e1e5545adcbdbd635e7dd96b90f755e5/1c72d/gandalf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dw0fbUt7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/e1e5545adcbdbd635e7dd96b90f755e5/1c72d/gandalf.jpg" alt="gandalf"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2 id="protected"&gt;How to make truly secured routes?

&lt;/h2&gt;
&lt;p&gt;There are several ways to achieve this. You could use SSR to solve this problem or you could stay with 100% SPA and serve your application in two parts. I've an example of the how to achieve the latter solution. There are lots of ways to do this and here I have an example of this using Express server in Node.js that serves two different SPAs, one containing the login page and the other containing the app itself. You can see this project &lt;a href="https://github.com/daggala/secured-routes"&gt;here on github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you clone that project and run it, you should be aware that it takes pretty much time. Instead you can also just follow the article and check out the code.&lt;/p&gt;

&lt;p&gt;If you run the project and go to devtools, you'll see in "sources" that you only have the login page loaded to the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sa0E8G0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/3abc06b3ca12f34a548220de040c717c/fcda8/unauthenticated.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sa0E8G0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/3abc06b3ca12f34a548220de040c717c/fcda8/unauthenticated.png" alt="unauthenticated"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here there's no possibility to access the authenticated part of the application because it won't be served to the browser &lt;strong&gt;unless&lt;/strong&gt; you provide the correct auth inputs in username and password thanks to this code in server.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/protected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signedCookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;admin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;privatePage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/build`&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;privatePage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/build/index.html`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can try to log in, username: &lt;code&gt;admin&lt;/code&gt; and password: &lt;code&gt;123&lt;/code&gt;...&lt;/p&gt;

&lt;p&gt;and voilà:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hdSgsMcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/014c6e05e4f53841532255d3f1e47b64/fcda8/authenticated.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hdSgsMcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.daggala.com/static/014c6e05e4f53841532255d3f1e47b64/fcda8/authenticated.png" alt="authenticated"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we're logged in and now we have the authenticated part of the application loaded in the browser and as a side effect, the login page is no more loaded in the browser.&lt;/p&gt;

&lt;p&gt;I hope this article has been useful for boosting the security of some of your websites that might use some extra layer of restriction! If you found this article helpful, don't hesitate to leave a comment or share it with others. Same of course if you have something that you would like to point out :) &lt;/p&gt;

</description>
      <category>react</category>
      <category>security</category>
    </item>
    <item>
      <title>How I setup my Development Environment on macOS 2021 Edition</title>
      <author>Andrew Baisden</author>
      <pubDate>Tue, 26 Jan 2021 13:10:34 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/how-i-setup-my-development-environment-on-macos-2021-edition-1lce</link>
      <guid>https://dev.to/andrewbaisden/how-i-setup-my-development-environment-on-macos-2021-edition-1lce</guid>
      <description>&lt;p&gt;&lt;strong&gt;Current Full-Stack Developer Technical Stack 2021&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Front-End: HTML, CSS,  JavaScript, Typescript, React, React Native, Redux, Flutter/Dart&lt;/p&gt;

&lt;p&gt;Back-End: Python, NodeJS, SQL, NoSQL, Kotlin&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transfer-files" class="anchor"&gt;
  &lt;/a&gt;
  Transfer Files
&lt;/h2&gt;

&lt;p&gt;Use an external Hard Drive or USB to transfer your files to your new computer. In my case I transfer files in the, Documents, Movies, Pictures and Downloads folders.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-web-browsers" class="anchor"&gt;
  &lt;/a&gt;
  Install Web Browsers
&lt;/h2&gt;

&lt;p&gt;Google Chrome&lt;/p&gt;

&lt;p&gt;Google Chrome Canary&lt;/p&gt;

&lt;p&gt;Firefox&lt;/p&gt;

&lt;p&gt;Firefox Developer Edition&lt;/p&gt;

&lt;p&gt;Firefox Nightly&lt;/p&gt;

&lt;p&gt;Safari Technology Preview&lt;/p&gt;

&lt;p&gt;Tor Browser&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-web-browser-extensions-chrome" class="anchor"&gt;
  &lt;/a&gt;
  Install Web Browser Extensions (chrome)
&lt;/h3&gt;

&lt;p&gt;Adblock Plus&lt;/p&gt;

&lt;p&gt;Apollo Client Developer Tools&lt;/p&gt;

&lt;p&gt;ColorZilla&lt;/p&gt;

&lt;p&gt;Honey&lt;/p&gt;

&lt;p&gt;JSON Viewer&lt;/p&gt;

&lt;p&gt;LastPass&lt;/p&gt;

&lt;p&gt;Lighthouse&lt;/p&gt;

&lt;p&gt;Momentum&lt;/p&gt;

&lt;p&gt;React Developer Tools&lt;/p&gt;

&lt;p&gt;Redux DevTools &lt;/p&gt;

&lt;p&gt;Pocket&lt;/p&gt;

&lt;p&gt;Video DownlodHelper&lt;/p&gt;

&lt;p&gt;Wappalyzer&lt;/p&gt;

&lt;p&gt;Web Developer&lt;/p&gt;

&lt;p&gt;daily.dev&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-software" class="anchor"&gt;
  &lt;/a&gt;
  Install Software
&lt;/h2&gt;

&lt;p&gt;I would install all of the apps that I use this includes personal and developer related. So tools like Adobe CC, Microsoft Office, Discord, Slack etc.... I will just include the developer apps as they are more relevant in this guide.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developer-apps" class="anchor"&gt;
  &lt;/a&gt;
  Developer Apps
&lt;/h3&gt;

&lt;p&gt;Android Studio&lt;/p&gt;

&lt;p&gt;Docker&lt;/p&gt;

&lt;p&gt;Hyper&lt;/p&gt;

&lt;p&gt;Insomnia&lt;/p&gt;

&lt;p&gt;IntelliJ IDEA CE&lt;/p&gt;

&lt;p&gt;iTerm 2&lt;/p&gt;

&lt;p&gt;MongoDB Compass&lt;/p&gt;

&lt;p&gt;Postman&lt;/p&gt;

&lt;p&gt;Valentina Studio&lt;/p&gt;

&lt;p&gt;Visual Studio Code&lt;/p&gt;

&lt;p&gt;Xcode&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-package-managers" class="anchor"&gt;
  &lt;/a&gt;
  Install Package Managers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hombrew&lt;/li&gt;
&lt;li&gt;npm&lt;/li&gt;
&lt;li&gt;Pip&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hombrew" class="anchor"&gt;
  &lt;/a&gt;
  Hombrew
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://brew.sh/"&gt;https://brew.sh/&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/bin/bash &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;curl &lt;span class="nt"&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#install-packages" class="anchor"&gt;
  &lt;/a&gt;
  Install Packages
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Hombrew automatically installs Pip pointing to the Homebrew’d Python 3 for you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can install &lt;a href="https://yarnpkg.com/lang/en/docs/install/#mac-stable"&gt;Yarn&lt;/a&gt; through the Homebrew package manager. This will also install Node.js if it is not already installed. If you use nvm or similar you should exclude installing Node.js so that nvm’s version of Node.js is used. &lt;/p&gt;

&lt;p&gt;Use brew to install the below packages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;tree &lt;span class="o"&gt;(&lt;/span&gt;It allows you to view all files &lt;span class="k"&gt;in &lt;/span&gt;a tree view&lt;span class="o"&gt;)&lt;/span&gt;
brew &lt;span class="nb"&gt;install &lt;/span&gt;ruby
brew &lt;span class="nb"&gt;install &lt;/span&gt;git
brew &lt;span class="nb"&gt;install &lt;/span&gt;node
brew &lt;span class="nb"&gt;install &lt;/span&gt;python
brew &lt;span class="nb"&gt;install &lt;/span&gt;kotlin
brew &lt;span class="nb"&gt;install &lt;/span&gt;postgresql
brew &lt;span class="nb"&gt;install &lt;/span&gt;yarn or brew &lt;span class="nb"&gt;install &lt;/span&gt;yarn &lt;span class="nt"&gt;--without-node&lt;/span&gt;
brew tap heroku/brew &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; brew &lt;span class="nb"&gt;install &lt;/span&gt;heroku
brew &lt;span class="nb"&gt;install &lt;/span&gt;graphql-playground
brew &lt;span class="nb"&gt;install &lt;/span&gt;deno
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Install oh-my-zsh&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ZSH is already preinstalled in the latest versions of macOS. Catalina onwards I believe. I also install &lt;a href="https://ohmyz.sh/"&gt;https://ohmyz.sh/&lt;/a&gt; as it allows for more configuration and is required in some cases.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;sh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;curl &lt;span class="nt"&gt;-fsSL&lt;/span&gt; https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Use the command line to show all hidden files as the files you are searching for are going to be hidden by default.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;defaults write com.apple.Finder AppleShowAllFiles &lt;span class="nb"&gt;true
&lt;/span&gt;killall Finder
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Install the Oh My Zsh plugins below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;zsh-autosuggestions
brew &lt;span class="nb"&gt;install &lt;/span&gt;zsh-syntax-highlighting
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To activate the plugins, add the following at the end of your .zshrc:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You will also need to force reload of your .zshrc:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you receive "highlighters directory not found" error message, you may need to add the following to your .zshenv:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/share/zsh-syntax-highlighting/highlighters
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;MongoDB Install and Setup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/57856809/installing-mongodb-with-homebrew"&gt;https://stackoverflow.com/questions/57856809/installing-mongodb-with-homebrew&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install the Xcode command-line tools and the Homebrew from &lt;a href="https://brew.sh/#install"&gt;https://brew.sh/#install&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcode-select &lt;span class="nt"&gt;--install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Tap the MongoDB Homebrew Tap:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew tap mongodb/brew
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Verify installation prerequisites in the macOS Terminal:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew tap | &lt;span class="nb"&gt;grep &lt;/span&gt;mongodb
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;install MongoDB
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;mongodb-community@4.4
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Finally to run MongoDB (i.e. the mongod process) as a macOS service, issue the following
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew services start mongodb-community@4.4
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Download and install MongoDB Compass &lt;a href="https://www.mongodb.com/try/download/compass"&gt;https://www.mongodb.com/try/download/compass&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Use the command &lt;code&gt;brew list&lt;/code&gt; to see all installed packages&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm" class="anchor"&gt;
  &lt;/a&gt;
  npm
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#install-packages-globally" class="anchor"&gt;
  &lt;/a&gt;
  Install Packages Globally
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-g&lt;/span&gt; babel-cli
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; eslint
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; expo-cli
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; firebase-tools
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; gatsby-cli
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; jest
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; lighthouse
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; netlify-cli
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; newman
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; node-sass
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; parcel-bundler
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; pm2
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; prettier
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; serve
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; spaceship-prompt
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; surge
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; typescript
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; update
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; vercel
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Use the command &lt;code&gt;npm list -g --depth 0&lt;/code&gt; to see all installed packages&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pip" class="anchor"&gt;
  &lt;/a&gt;
  Pip
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#install-packages" class="anchor"&gt;
  &lt;/a&gt;
  Install Packages
&lt;/h4&gt;

&lt;p&gt;Use the command &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;pip3&lt;/code&gt; to install depending on your system.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;astroid
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;autopep8
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;certifi
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;chardet2
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;click
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;Flask
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;Flask-Cors
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;harperdb
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;idna
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;isort
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;itsdangerous
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;Jinja
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;lazy-object-proxy
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;MarkupSafe
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;mccabe
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;psycopg2
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;psycopg2-binary
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;pycodestyle
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;pylint
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;python-dotenv
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;requests
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;setuptools
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;six
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;toml
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;urllib3
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;Werkzeug
pip3 &lt;span class="nb"&gt;install &lt;/span&gt;wrapt
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Use the command &lt;code&gt;pip3 list&lt;/code&gt; or &lt;code&gt;pip list&lt;/code&gt; to see all installed packages&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flutter-setup" class="anchor"&gt;
  &lt;/a&gt;
  Flutter Setup
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://flutter.dev/docs/get-started/install/macos"&gt;https://flutter.dev/docs/get-started/install/macos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also install the Flutter/Dart and Kotlin plugins and extensions for Visual Studio Code, IntelliJ IDEA CE, and Android Studio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-native-setup" class="anchor"&gt;
  &lt;/a&gt;
  React Native Setup
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://expo.io/"&gt;https://expo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-terminal-app-and-code-editors" class="anchor"&gt;
  &lt;/a&gt;
  Setup Terminal App and Code Editors
&lt;/h2&gt;

&lt;p&gt;I am currently using the &lt;a href="https://draculatheme.com/"&gt;dracula&lt;/a&gt; theme in Visual Studio Code, IntelliJ IDEA CE, Android Studio and the Hyper Terminal.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typeface" class="anchor"&gt;
  &lt;/a&gt;
  Typeface
&lt;/h3&gt;

&lt;p&gt;For typefaces I am using Jebrains Mono and FiraCode is currently my second choice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.jetbrains.com/lp/mono/"&gt;https://www.jetbrains.com/lp/mono/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tonsky/FiraCode"&gt;https://github.com/tonsky/FiraCode&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hyper-terminal" class="anchor"&gt;
  &lt;/a&gt;
  Hyper Terminal
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Install Plugins and customize&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;hyper i hypercwd
hyper i hyper-snazzy
hyper i hyper-dracula
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// default font size in pixels for all tabs&lt;/span&gt;
    &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="c1"&gt;// font family with optional fallbacks&lt;/span&gt;
    &lt;span class="nx"&gt;fontFamily&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JetBrains Mono, Menlo, "DejaVu Sans Mono", Consolas, "Lucida Console", monospace&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#visual-studio-code" class="anchor"&gt;
  &lt;/a&gt;
  Visual Studio Code
&lt;/h3&gt;

&lt;p&gt;If it is your first time using Visual Studio Code then do a clean install and configure it whicever way you want. Otherwise install the Settings Sync extension by Shan Khan and then do a download to sync your settings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Upload&lt;/span&gt;
SHIFT + OPTION + U

&lt;span class="c"&gt;# Download&lt;/span&gt;
SHIFT + OPTION + D 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;As of January 2021 Visual Studio Code has a Settings Sync Feature which probably works the same but is in Early Release&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Set Visual Studio Code as the default editor for programming files by right clicking on that file, and going to "Open with" then change all.&lt;/p&gt;

&lt;p&gt;Configure Visual Studio Code so that you can &lt;a href="https://code.visualstudio.com/docs/setup/mac"&gt;Launch from the command line&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#extensions-i-have-installed-with-visual-studio-code" class="anchor"&gt;
  &lt;/a&gt;
  Extensions I have installed with Visual Studio Code
&lt;/h4&gt;

&lt;p&gt;better-comments&lt;/p&gt;

&lt;p&gt;bracket-pair-colorizer&lt;/p&gt;

&lt;p&gt;code-beautifier&lt;/p&gt;

&lt;p&gt;code-settings-sync&lt;/p&gt;

&lt;p&gt;dart-code&lt;/p&gt;

&lt;p&gt;debugger-for-chrome&lt;/p&gt;

&lt;p&gt;dotenv&lt;/p&gt;

&lt;p&gt;es7-react-js-snippets&lt;/p&gt;

&lt;p&gt;flutter&lt;/p&gt;

&lt;p&gt;gc-excelviewer&lt;/p&gt;

&lt;p&gt;gitlens&lt;/p&gt;

&lt;p&gt;graphql-for-vscode&lt;/p&gt;

&lt;p&gt;HTMLHint&lt;/p&gt;

&lt;p&gt;javascript-ejs-support&lt;/p&gt;

&lt;p&gt;jupyter&lt;/p&gt;

&lt;p&gt;Kotlin&lt;/p&gt;

&lt;p&gt;LiveServer&lt;/p&gt;

&lt;p&gt;material-icon-theme&lt;/p&gt;

&lt;p&gt;mdx&lt;/p&gt;

&lt;p&gt;mongodb-vscode&lt;/p&gt;

&lt;p&gt;mssql&lt;/p&gt;

&lt;p&gt;night-owl&lt;/p&gt;

&lt;p&gt;npm-intellisense&lt;/p&gt;

&lt;p&gt;open-in-browser&lt;/p&gt;

&lt;p&gt;prettier-vscode&lt;/p&gt;

&lt;p&gt;project-manager&lt;/p&gt;

&lt;p&gt;python&lt;/p&gt;

&lt;p&gt;quokka-vscode&lt;/p&gt;

&lt;p&gt;rainbow-csv&lt;/p&gt;

&lt;p&gt;remote-containers&lt;/p&gt;

&lt;p&gt;shades-of-purple&lt;/p&gt;

&lt;p&gt;theme-dracula&lt;/p&gt;

&lt;p&gt;vsc-community-material-theme&lt;/p&gt;

&lt;p&gt;vsc-material-theme&lt;/p&gt;

&lt;p&gt;vsc-material-theme-icons&lt;/p&gt;

&lt;p&gt;vscode-color&lt;/p&gt;

&lt;p&gt;vscode-colorize&lt;/p&gt;

&lt;p&gt;vscode-docker&lt;/p&gt;

&lt;p&gt;vscode-eslint&lt;/p&gt;

&lt;p&gt;vscode-graphql&lt;/p&gt;

&lt;p&gt;vscode-import-cost&lt;/p&gt;

&lt;p&gt;vscode-jest&lt;/p&gt;

&lt;p&gt;vscode-markdownlint&lt;/p&gt;

&lt;p&gt;vscode-npm-script&lt;/p&gt;

&lt;p&gt;vscode-peacock&lt;/p&gt;

&lt;p&gt;vscode-pull-request-github&lt;/p&gt;

&lt;p&gt;vscode-styled-components&lt;/p&gt;

&lt;p&gt;vscode-typescript-tslint-plugin&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>Lessons learnt on my road to code...</title>
      <author>Katie Hawcutt</author>
      <pubDate>Tue, 26 Jan 2021 12:23:48 +0000</pubDate>
      <link>https://dev.to/katiehawcutt/lessons-learnt-on-my-road-to-code-43cb</link>
      <guid>https://dev.to/katiehawcutt/lessons-learnt-on-my-road-to-code-43cb</guid>
      <description>&lt;p&gt;Last week I officially graduated from the &lt;a href="https://www.schoolofcode.co.uk/"&gt;School of Code&lt;/a&gt; Bootcamp (🎉) and as such I've been reflecting on my journey into coding over the past year. Without trying to sound overly dramatic (okay maybe I do want it to sound a little bit dramatic...) I really have had the most amazing, life-changing experience and one which has led to a career change that I never planned to have at the grand old age of 32. Having spent the last decade as a professional musician and teacher, building a career in which I have shared some of my favourite moments in life with some of my favourite people in life, I was ready for a new challenge. (I have an insatiable appetite for personal progress in life... often a blessing, occasionally a curse.) I needed a new adventure. A new way to fulfill my potential. I found that desire satisfied in technology. And more specifically in coding. &lt;/p&gt;

&lt;p&gt;Inspired by one of my favourite people (I won't say who because he'd be awfully embarrassed and probably kill me) I embarked on my journey from musician to programmer. I swapped the saxophone for a keyboard, exchanged the language of jazz for the language of JavaScript and went from complete newbie, to self-taught coder, to School of Code bootcamper, to School of Code graduate who's workplace-ready and probably the most enthusiastic junior on the planet right now, in less than a year. And on my road to code I learnt a lesson or two about the world of tech. I don't claim to know it all (or even half of it all) but these are some of my musings so far...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_RTFv9dp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z6quoxqmsndx33vrttk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_RTFv9dp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z6quoxqmsndx33vrttk3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tech-is-about-team" class="anchor"&gt;
  &lt;/a&gt;
  Tech is about team
&lt;/h1&gt;

&lt;p&gt;This is something which probably surprised me the most at the beginning. Being from a non-programming background, I always had that stereotypical image in my head of a lone-ranger, genius developer, sitting alone in a basement somewhere, sleeping for a few hours a day, coding all night, and somehow doing amazing, clever programming things which were changing the world. Turns out I was only right about one thing there. (Incase I need to clarify it's the bit about technology changing the world.) These days, tech is all about TEAM! This pleases me greatly as I love team. I love people. I love communicating and getting to know people. I love the push and pull of working together, the discussions, the tensions, the glorious moments of unity and progress. I can do team. The ability to think creatively and solve problems by working with others is a vital skill to cultivate as working on a project or delivering a product requires expertise and experience in &lt;em&gt;many&lt;/em&gt; fields. &lt;/p&gt;

&lt;p&gt;To quote the late Steve Jobs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Great things in business are never done by one person. They're done by a team of people". &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A huge part of the bootcamp has been learning how to work with others in Agile, cross-functional teams - something that has been made even more challenging by the fully remote nature of the course. But it has been worth persevering with because today's world is so complex that it is simply impossible to solve problems effectively alone. Teamwork and collaboration is not an opinion. Countless studies have proved the importance of healthy collaboration and teamwork on an organization's ability to make an impact. It's been amazing to see how each person in our bootcamp has been able to contribute different strengths and skills to their teams which resulted in some really creative final projects. We've all got something to bring. A skill you have, which you might take for granted, could be exactly what a team is missing and looking for. So try not to compare yourself to others. Just do your thing and do it really well. In fact, become the best at your thing. It's very likely that someone out there will like your thing and want your thing. (Okay I've said thing enough now...)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wfm-lnjC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a5xpon9z0chubae1wcxd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wfm-lnjC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a5xpon9z0chubae1wcxd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#youll-never-stop-learning" class="anchor"&gt;
  &lt;/a&gt;
  You'll never stop learning
&lt;/h1&gt;

&lt;p&gt;What I love about technology is the constant progression, the change, the sense of moving forward. It satisfies my need for adventure and progress. From what I gather from the more experienced among us, by embarking on a tech career you are pretty much committing yourself to a lifelong education - there is always more to learn!&lt;/p&gt;

&lt;p&gt;I have a theory about this. (It could be completely wrong so be sure to make up your own mind.) This 'you never know everything' reality kind of makes everyone a little bit more equal. You may have been working in your first coding job for a couple of months or you may be two decades into a successful career and the CTO of a big company, but you still need to commit time to your own educational journey, to look into and learn new technologies, to be willing to adapt to changing business environments or adopt the latest best practices. Maybe that's why I've found the tech community to be so helpful and encouraging in comparison to some other professions - no matter how experienced you are you can still remember what it's like to be a junior because the learning never stops. &lt;/p&gt;

&lt;p&gt;So how I am feeling about this 'learning never stops' thing? Well, basically... great! It means that there's the potential for a really exciting and varied career, I'm pretty sure I'm never going to get bored at work, and I'm confident that I'm going to meet lots of amazing people along the way. Although I've learnt a lot over these past four months and made very rapid progress in a short amount of time, I am under no illusion that I am only at the very beginning of my programming journey. There are so many more languages to learn, technologies to master, processes to understand and situations to negotiate. On a good day this challenge can feel exciting. However, on a less good day it can feel a little overwhelming or even downright scary. But it shouldn't. And that's why I think that it's super important to make sure you always celebrate milestones and look back at how far you've already come. Which brings me nicely on to my next point. (It's almost as if I've planned this...)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pCl4Xacf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uces1az19kl86as4hqls.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pCl4Xacf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uces1az19kl86as4hqls.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reflection-is-key" class="anchor"&gt;
  &lt;/a&gt;
  Reflection is key
&lt;/h1&gt;

&lt;p&gt;I started documenting my learning journey a while before I joined the School of Code. Early last year, with the support of my other half (who had recently made the jump into tech himself), I was teaching myself HTML, CSS and JavaScript basics using a combination of online resources, tutorials and kid's coding books (honestly the perfect level for me at the start). After a few months I was making good progress but some days I was finding it hard to stay motivated and see my progress. I didn't know what I was aiming for. It was then that I stumbled across the &lt;a href="https://www.100daysofcode.com/"&gt;100 Days Of Code challenge&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Now anyone who knows me well knows that I love a good challenge. I'll do anything for a badge. (Unfortunately there are no badges for 100 Days of Code but the pride was enough in this instance.) I was immediately hooked. It gave me fresh drive to keep learning as I wanted something new to tweet about each day. Tweeting with the #100DaysOfCode hashtag immediately made me feel part of something bigger (I'll come back to this later) and alongside tweeting I also committed to keeping quite a detailed learning diary in which I documented my progress, my thoughts that day and links to any work or resources I used. I continued with this throughout the summer, into September (the first day of the bootcamp was Day 53) and into November. When I finished my 100th day on the 17th November, I knew I had to keep the diary going (I'd begun to see it's value) right up until our School of Code final projects began! It was a commitment, and sometimes the last thing I felt like doing after an whole day of intense, remote learning but it was absolutely, 100% worth it and I'm so proud that I finished it! And here's why...&lt;/p&gt;

&lt;p&gt;Firstly, having to write down exactly what I'd learnt each day really helped me to consolidate my learning. Some days I found it harder to articulate what I'd done which often meant that I hadn't quite grasped the concepts fully yet. This often led to another hour or so of me looking into things and going over them again in order to be able to clearly document them in my diary. At the time, this often felt like very hard work and a bit of a drain, but in hindsight it was this dedication to my diary that enabled me to make such rapid progress and build on my understanding each day without getting behind on the bootcamp. Consolidation is key!&lt;/p&gt;

&lt;p&gt;Secondly, in those moments when things are a bit tough or I'm out of energy or I'm wondering if I made the right choice or if I'm simply wondering what I've done with all my time over the past 6 months, I can look back and see how much I've achieved and how far I've come. Even if no-one ever reads it apart from you it's worth doing. And to quote my mother, "if a job's worth doing, it's worth doing properly". So document, reflect and do it well! (If you want to &lt;a href="https://github.com/katiehawcutt/100DaysOfCode"&gt;see my 100 Days of Code / School of Code diary you can do so here&lt;/a&gt;...)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2d-ayvUu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p56e17yijo8uxzeu5hqr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2d-ayvUu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p56e17yijo8uxzeu5hqr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#theres-a-community-out-there" class="anchor"&gt;
  &lt;/a&gt;
  There's a community out there
&lt;/h1&gt;

&lt;p&gt;I mentioned earlier that one of the things I have enjoyed about getting into coding is the tech community that surrounds it. Sadly (due to the current pandemic which we shall not dwell on) I have not yet had to chance to experience these communities in person but I have been able to join them online. People seem very helpful and from my experiences so far, senior developers always come across as willing to help us less experienced developers and point us in the right direction. Many even give up their time to mentor or coach others for no financial reward. (I know, these people are wonderful and brilliant.) Although I am new to this scene I have felt very welcome and get the impression that there are lots of people cheering me on, who want me to be successful and do well. Coming from a very competitive profession previously where it was a little more (very at times) dog-eat-dog this feels amazing! There's space for all of us. I really love that.&lt;/p&gt;

&lt;p&gt;I know that my journey into tech would not have been what it is without my amazing School of Code family. The School of Code team have a done a great job of cultivating a close knit community but I think it's ultimately the intensity of the experience which really knits each cohort together. If I think back to the start of my bootcamp experience...I was thrown together with 47 other bootcampers from all different backgrounds, different ages, different life situations. Before you even speak to them for the first time you know that there's something special about these people as they've already successfully completed a rigorous interview process, they've all decided to step out of their comfort zones and been willing to try something completely new, they've left their jobs and have sacrificed having an income for the next 4 months, and all of this to try to learn to code - which I'd just like to mention is one of the hardest skills to learn and at this stage they've got no idea if they're even going to enjoy it or be good at it! These people are special. Or crazy. (I'm allowed to say that because I am one of them.) And that's before we even get started on the course. It's instantly 0 to 100 mph on the learning front, 8 hour teaching days on Zoom, homework, projects, recap tasks, afternoon energisers (these are fun), mine you lunch (only eat something you can mine), pair programming, guest lectures, waking up in the middle of the night thinking about code (who am I now?), group presentations, mastery tasks, daily squats (yes my legs are like tree trunks), trying to explain to your friends and family what exactly you're doing with your time. And then there's all the blood, sweat and tears. The blood is metaphorical. The sweat and tears are not. (Believe me, you don't know what a cold sweat is until you've had to do a live demo of your product in front of hundred's of potential employers on Demo Day.) All of this bonds you together. I will never forget my bootcamp experience or any of the friends I have made along the way. We walked through the fire of SoC together and have made it to the other side. (For those of you who think I'm being dramatic again, it really does feel like this!)&lt;/p&gt;

&lt;p&gt;Many ex-bootcampers now come back as mentors or to give lectures on the course and there's something really nice about seeing this full circle of education. The student becomes the teacher. It's inspiring for current bootcampers to see where they might be in a few years and it's also rewarding for ex-bootcampers to be able to give back to an organisation which changed the direction of their life (for the better!). I know that it's definitely something that I'd like to do as I continue in my tech career. I'm so thankful that I've had the opportunity to embark on this amazing adventure and I want to help others make this journey and excel on it as they go. It seems that once you've been a bootcamper, you'll never really leave the School of Code family.💖 &lt;/p&gt;

&lt;p&gt;So if you're new to tech or trying to learn to code I would encourage you to find a tribe. Whether it's a community on Twitter, a channel on Slack, by joining 100 Days of Code, or finding out what's going on in your local town or city (there will be something tech related for sure) - go for it! It helps to accelerate your learning, build understanding and you might come away with some really great friends. I can highly recommend it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYNEmkSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/94a20vlaauhrd5nrwlgr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYNEmkSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/94a20vlaauhrd5nrwlgr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tech-needs-you" class="anchor"&gt;
  &lt;/a&gt;
  Tech needs YOU!
&lt;/h1&gt;

&lt;p&gt;I wanted to end with this point as I believe it's an important one. Diversity and inclusion is one of the biggest challenges facing the tech industry today. Sure, it's come a long way in the past few years but there is still so much further to go. Technology now rules the world. People across every corner of the earth now use or rely on technology in some way (even if they don't realise it) and we need to make sure that the businesses creating this technology have the same diversity of thought and perspectives as their users. &lt;/p&gt;

&lt;p&gt;This is the part where I'm going to big up the School of Code. The School of Code aims to get more and different types of people into tech and they are doing a fantastic job of it! A big blocker for a many people wanting to get into technology is the cost of retraining but the School of Code bootcamp is free. Yes you heard, FREE! This means that a career change into tech is an option for so many more people. If you’d told me two years ago that as a jazz musician I was soon to become a software developer and land my first job in the tech industry I would never have believed it. (I still have to pinch myself!)&lt;/p&gt;

&lt;p&gt;So if you live in the West Midlands (UK) and are ready for a new challenge in life, hungry to learn new skills, willing to put in LOTS of hard work and wanting to start a new career in tech, this might be the perfect opportunity for you! You can &lt;a href="https://www.schoolofcode.co.uk/"&gt;find out more about how the School of Code works and how to apply on their website&lt;/a&gt;. &lt;/p&gt;




&lt;p&gt;So there we have it. A few thoughts from a recently graduated bootcamper. There's more stuff I could talk about (wotwotwot, that really important day Tommy slept in, the terrible happy birthday singing, sign off's, silent zoom clapping, "you're on mute", etc. etc.) but I'm going to leave it there. &lt;/p&gt;

&lt;p&gt;My closing thoughts (I know you're dying to hear them...) - there is room for you in this industry. Whatever your background, age or experiences you've got something to offer to the world of technology. What are you waiting for? Tech needs you! 🙂&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>career</category>
      <category>firstyearincode</category>
    </item>
    <item>
      <title>CSS Tips and Tricks</title>
      <author>rreel </author>
      <pubDate>Tue, 26 Jan 2021 11:22:11 +0000</pubDate>
      <link>https://dev.to/xenoxdev/css-tips-and-tricks-4j7e</link>
      <guid>https://dev.to/xenoxdev/css-tips-and-tricks-4j7e</guid>
      <description>&lt;p&gt;&lt;strong&gt;#001&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the last couple of months, we at Skynox Tech's Twitter account, sharing a series of tweets known as #CSStricks. We have shared a lot of tricks that otherwise one could not find in online tutorials. Today we decided to compile all those tips and tricks under one hood so that you can find all those in a single place. These tweets will not only improve your CSS game but also helps you save a ton of codes line and help your own touch to your projects.&lt;/p&gt;

&lt;p&gt;So here are the tips and tricks of CSS:-&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-smooth-scrolling" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Smooth Scrolling&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;When you visit some websites and try to go to different sections, it scrolls smoothly to that section. It is not some top tier coding, but just one line in your CSS can help you achieve it.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPMTVx5S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EmnRoJwWEAAtT2R.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8yfbXt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1315246230046347264/W7OI6fHE_normal.jpg" alt="XenoX 🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        XenoX 🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xenoxdev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      💁‍♂️Use this simple CSS trick to add smooth scrolling behavior to your websites!! 🤩&lt;br&gt;&lt;br&gt;👉See live:- &lt;a href="https://t.co/7IchRRY2Fp"&gt;ow.ly/R3Rx50CikF7&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/csstricks"&gt;#csstricks&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/webdevelopment"&gt;#webdevelopment&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:40 AM - 12 Nov 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1326822054302261248" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1326822054302261248" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1326822054302261248" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#2-truncate-text-using-pure-css" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Truncate text using pure CSS&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Sometimes the text is not consistent in cards and makes them look chaotic. Use this trick to limit the text on cards using just CSS.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4RTxzTQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EmhVso0XUAIFNOA.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8yfbXt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1315246230046347264/W7OI6fHE_normal.jpg" alt="XenoX 🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        XenoX 🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xenoxdev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      😲Do you know you can truncate text using CSS only.🤔&lt;br&gt;&lt;br&gt;💁‍♂️Check it out: &lt;a href="https://t.co/Lgn84iP3Ay"&gt;ow.ly/VLNO50Chkbg&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/CSStricks"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt;tricks &lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DEVCommunity"&gt;#DEVCommunity&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100hoursofcode"&gt;#100hoursofcode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/fluttercommunity"&gt;#fluttercommunity&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      06:00 AM - 11 Nov 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1326404316953972736" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1326404316953972736" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1326404316953972736" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#3-input-caret-color" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Input Caret Color&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Want to give a little personal touch to your site. Use this css trick to change the color of the input field-caret to give it a custom color of your liking.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mZXlpmOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EoJaNxQXIAAIpVl.png" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8yfbXt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1315246230046347264/W7OI6fHE_normal.jpg" alt="XenoX 🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        XenoX 🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xenoxdev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      👉 Here is a cool trick to change the "color of the Input blinking cursor." 🤩&lt;br&gt;&lt;br&gt;💁‍♂️ See live: &lt;a href="https://t.co/1AZYKNbWTF"&gt;codepen.io/teamxenox/pen/…&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/CSStricks"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt;tricks &lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Coding"&gt;#Coding&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      11:00 AM - 01 Dec 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1333727633482391552" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1333727633482391552" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1333727633482391552" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#4-drop-shadow-and-box-shadow" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Drop Shadow and Box Shadow&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Do you know that you can use "Drop shadow" for the transparent images?&lt;br&gt;
It will give a much better shadow effect. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CuT49IT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Eox9xFhWMAMBqU9.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8yfbXt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1315246230046347264/W7OI6fHE_normal.jpg" alt="XenoX 🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        XenoX 🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xenoxdev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      👉"Do you know that you can use "Drop shadow" for the transparent images."&lt;br&gt;&lt;br&gt;💁‍♂️ It will give a much better shadow effect. &lt;br&gt;&lt;br&gt;👉See live: &lt;a href="https://t.co/JtaWuINuZq"&gt;ow.ly/3BDT50CFzv9&lt;/a&gt;&lt;br&gt;&lt;br&gt;👉Want to learn more about when to use what? &lt;br&gt;Read: &lt;a href="https://t.co/vsaqsIEoZL"&gt;ow.ly/nXDQ50CFzva&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/CSStricks"&gt;#CSStricks&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/CSSDaily"&gt;#CSSDaily&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:00 AM - 09 Dec 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1336581473302941696" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1336581473302941696" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1336581473302941696" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#5-drop-cap-letter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Drop Cap Letter&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You might have seen some blogs with the first letter being huge and the text is wrapped around it. That can be achieved with this simple trick on your text block.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U0IOsiKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Epgvkl9WMAAitQ6.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8yfbXt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1315246230046347264/W7OI6fHE_normal.jpg" alt="XenoX 🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        XenoX 🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xenoxdev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      CSS Trick: #2&lt;br&gt;&lt;br&gt;💁‍♂️ Want that drop character at the beginning of your paragraphs? &lt;br&gt;&lt;br&gt;🤩 Use this cool trick to get your drop character.&lt;br&gt;&lt;br&gt;👉 Read more: &lt;a href="https://t.co/BA2broe45Q"&gt;css-tricks.com/snippets/css/d…&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/CSStricks"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt;tricks &lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:00 AM - 18 Dec 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1339873196288454657" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1339873196288454657" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1339873196288454657" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#6-center-that-div" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. Center that Div&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Centering your div element can be daunting sometimes, but not when you have this trick in your toolbox. You can center any div with just a couple of lines of CSS.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DVLuBWd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ep6W_7bXUAIGD38.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8yfbXt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1315246230046347264/W7OI6fHE_normal.jpg" alt="XenoX 🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        XenoX 🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xenoxdev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      😎 CSS Trick #5&lt;br&gt;&lt;br&gt;🤔🤔 “Want to center your content on the page vertically?” 🤔🤔&lt;br&gt;&lt;br&gt;👉🏻Use these CSS “Grid properties” to do like a pro!! 😎&lt;br&gt;.&lt;br&gt;.&lt;br&gt;&lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt;tricks 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:23 AM - 23 Dec 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1341675772147363841" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1341675772147363841" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1341675772147363841" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#7-no-value-no-problem" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. No value, No problem&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Display links when the &lt;a&gt; element has no text value but the href attribute has a link. Pretty neat, right?&lt;/a&gt;&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YNaOrHlF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Eq4ShJ7XEAA4qQX.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8yfbXt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1315246230046347264/W7OI6fHE_normal.jpg" alt="XenoX 🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        XenoX 🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xenoxdev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      💁‍♂️ HTML Ticks #1&lt;br&gt;&lt;br&gt;😎 "Display links when the &amp;lt;a&amp;gt; element has no text value but the href attribute has a link."&lt;br&gt;&lt;br&gt;🤔That’s pretty convenient, right?&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/HTMLtricks"&gt;#HTMLtricks&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100daysofCode"&gt;#100daysofCode&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:00 AM - 04 Jan 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1346033700623024128" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1346033700623024128" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1346033700623024128" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#8-inherit-box-sizing" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8. Inherit box sizing&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Let "box-sizing" be inherited from HTML. This makes it easier to change "box-sizing in plugins" or other components that leverage other behavior. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--izxbvGkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Eq9p6IuWMAEcdtS.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8yfbXt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1315246230046347264/W7OI6fHE_normal.jpg" alt="XenoX 🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        XenoX 🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xenoxdev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      👉CSS Tricks #7&lt;br&gt;&lt;br&gt;💁‍♂️ Let "box-sizing" be inherited from HTML.&lt;br&gt;&lt;br&gt;🤩 This makes it easier to change "box-sizing in plugins" or other components that leverage other behavior.&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/CSStricks"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt;tricks &lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      11:00 AM - 05 Jan 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1346411262582910977" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1346411262582910977" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1346411262582910977" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#bonus-tips" class="anchor"&gt;
  &lt;/a&gt;
  Bonus tips:-
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-bonus-1-better-user-experience-" class="anchor"&gt;
  &lt;/a&gt;
  ** Bonus 1: Better User Experience **
&lt;/h3&gt;

&lt;p&gt;With the modern web technologies enhancements, one of the key focus points is user experience. Even if your website has the best designs but poor user experience, you will not be able to retain them. This is a cool user experience trick to mute videos on autoplay and let the user decide if they want to hear it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YQRvXOjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jk4kqy3xl1ow31sau19g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YQRvXOjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jk4kqy3xl1ow31sau19g.png" alt="autoplay"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-bonus-2-selection-pseudo-class-" class="anchor"&gt;
  &lt;/a&gt;
  ** Bonus 2: Selection pseudo class **
&lt;/h3&gt;

&lt;p&gt;Most of the time when you visit any site and try to copy some text, it is just the blue color selection with white text. Use selection pseudo-class to give a personal touch to text selection on your websites. This will give them a personal touch and make your site stand out! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lQx-1qT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ekanu56b52mlzxmdw8wb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lQx-1qT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ekanu56b52mlzxmdw8wb.png" alt="selection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it, folks!&lt;br&gt;
These are the all tricks I have to share for now. If you want to see more such content and tips and tricks of other web technologies like react, ES6, etc., do follow us on Twitter at &lt;a href="https://twitter.com/XenoxDev"&gt;@XenoxDev&lt;/a&gt;. We share a lot of cool content and resources to learn web development so make sure to give a follow. &lt;/p&gt;

&lt;p&gt;Until then 👋👋 &lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Setup Your M1 MacBook for Web Development</title>
      <author>Front-End Web Daily 📰</author>
      <pubDate>Tue, 26 Jan 2021 11:06:02 +0000</pubDate>
      <link>https://dev.to/fewdaily/how-to-setup-your-m1-macbook-for-web-development-30m7</link>
      <guid>https://dev.to/fewdaily/how-to-setup-your-m1-macbook-for-web-development-30m7</guid>
      <description>&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/4Bi9zXKB9sUjrl9JqQ2FEC"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;The worst part (or perhaps the most fun for some) of getting a new laptop is setting up everything you need as a web developer. Adding programs and tools that you had installed over the many years of ownership of your previous laptop can seem daunting. With the release of the new Macbook M1 laptops, there are some interesting new considerations as well that you may not be aware of. So, let's jump in and get the basics set up so you can hit the ground running developing your next project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rosetta-2" class="anchor"&gt;
  &lt;/a&gt;
  Rosetta 2
&lt;/h2&gt;

&lt;p&gt;The first thing you should install is &lt;a href="https://developer.apple.com/documentation/apple_silicon/about_the_rosetta_translation_environment"&gt;Rosetta 2&lt;/a&gt;, which allows you to run Intel-based software on the new ARM chip. Because Apple has created their own chips they needed a way to provide backward compatibility with programs that do not yet support ARM and Rosetta 2 is that solution.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/usr/sbin/softwareupdate --install-rosetta --agree-to-license&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#homebrew" class="anchor"&gt;
  &lt;/a&gt;
  Homebrew
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; will be the best way to add the other software and tools on our computer, so we want to install that next. A quick tip that is good to know is when you go to open the built-in Terminal in the Applications folder: right-click, select &lt;em&gt;Get Info,&lt;/em&gt; and check the &lt;em&gt;Open with Rosetta&lt;/em&gt; box.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools" class="anchor"&gt;
  &lt;/a&gt;
  Tools
&lt;/h2&gt;

&lt;p&gt;There are a lot of tools to consider when setting up your Macbook from scratch, so one of the quickest ways to add a lot of the important ones is to use a script. I recommend &lt;a href="https://github.com/CxGarcia/setup"&gt;the script created by the author&lt;/a&gt; of the original post that this is based on, but feel free to use a different one or modify this one for yourself.&lt;/p&gt;

&lt;p&gt;Opening the downloaded script folder in your terminal you can choose to run the install script or modify what will be installed from the brew-installs.sh file. Once you're satisfied, run the script.&lt;/p&gt;

&lt;p&gt;Some of the tools and applications included in the script are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;node&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;zsh&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;li&gt;VSCode&lt;/li&gt;
&lt;li&gt;Zoom&lt;/li&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;li&gt;Discord&lt;/li&gt;
&lt;li&gt;Notion&lt;/li&gt;
&lt;li&gt;and more...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;./brew-installs.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; if it doesn't work try running &lt;code&gt;chmod +x brew-installs.sh&lt;/code&gt; first&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nvm" class="anchor"&gt;
  &lt;/a&gt;
  nvm
&lt;/h2&gt;

&lt;p&gt;Something that is not included in the script is &lt;a href="https://github.com/nvm-sh/nvm"&gt;nvm&lt;/a&gt; because there have been difficulties installing this with the ARM chip. To get around this you will have to use a &lt;code&gt;curl&lt;/code&gt; command and make a couple of modifications afterward.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In your .zshrc file (.bash-profile or .bashrc for bash):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export NVM_DIR="$HOME/.nvm"
#This loads nvm
[ -s "$NVM_DIR/nvm.sh" ] &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh"
#This loads nvm bash_completion
[ -s "$NVM_DIR/bash_completion" ] &amp;amp;&amp;amp; \. "$NVM_DIR/bash_completion"
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#git-and-github" class="anchor"&gt;
  &lt;/a&gt;
  Git and GitHub
&lt;/h2&gt;

&lt;p&gt;Git was installed with the brew install script so make sure to configure the settings and &lt;a href="https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token"&gt;use a personal access token to authenticate GitHub&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global user.name &amp;lt; USERNAME &amp;gt; &amp;amp;&amp;amp;
git config --global user.email &amp;lt; EMAIL &amp;gt; &amp;amp;&amp;amp;
git config --global --list
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vscode" class="anchor"&gt;
  &lt;/a&gt;
  VSCode
&lt;/h2&gt;

&lt;p&gt;Make sure to use the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync"&gt;Settings Sync plugin&lt;/a&gt; to keep all of your VSCode settings in sync with a stored GitHub gist.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You should now be all set to start developing! Thanks to the script many tools and applications were installed for us, minimizing the manual install process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credit" class="anchor"&gt;
  &lt;/a&gt;
  Credit
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Today’s Tuesday Tips was adapted from &lt;a href="https://blog.logrocket.com/set-up-macbook-for-web-development-in-20-minutes/"&gt;a post on the Logrocket blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Want to know more? Head to &lt;a href="https://fewdaily.com"&gt;fewdaily.com&lt;/a&gt; for more of today’s topics and other front-end web content! If you liked what you heard be sure to rate, review, and subscribe on your platform of choice. That's all for today, tune in tomorrow!&lt;/p&gt;

</description>
      <category>fewdaily</category>
      <category>webdev</category>
      <category>news</category>
      <category>macbook</category>
    </item>
    <item>
      <title>Adapter Pattern with JavaScript</title>
      <author>Walther Carrasco</author>
      <pubDate>Tue, 26 Jan 2021 10:51:59 +0000</pubDate>
      <link>https://dev.to/wecarrasco/adapter-pattern-with-javascript-4lgi</link>
      <guid>https://dev.to/wecarrasco/adapter-pattern-with-javascript-4lgi</guid>
      <description>&lt;p&gt;Hello devs!&lt;/p&gt;

&lt;p&gt;Today I challenged myself to write my first post and I wanted to be about the Adapter Design Pattern.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Design patterns&lt;/strong&gt; are the basis of all good software. A design pattern is a general solution to a reappearing problem.&lt;/p&gt;

&lt;p&gt;Now, what is &lt;strong&gt;Adapter Pattern&lt;/strong&gt;? If we bring the problem from the real domestic world, a adapter is used to connect two or more things which can't be connected with their original sockets.&lt;/p&gt;

&lt;p&gt;An example of this is with the new cellphones. Normally most of the phones have a universal port (3.5mm) for headphones. So their connection is made directly.&lt;br&gt;
With the new cellphones, the companies decided to remove the headphone port, leaving only the charging port.&lt;/p&gt;

&lt;p&gt;Here is where the adapter comes into play. Companies made an adapter so you can still use the 3.5mm headphones using the charging port.&lt;/p&gt;

&lt;p&gt;Now that we understand better what is the Adaptor Pattern, I present you a JavaScript example.&lt;/p&gt;

&lt;p&gt;Imagine that we decided to create a &lt;strong&gt;Calculator&lt;/strong&gt;. This calculator needs three attributes (num1, num2, operation), the last one is in charge of the operation that will be realized.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;multiplication&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;division&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;NaN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;and we can use the class like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Calculator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;multiplication&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multi&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//output 2&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;division&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//output 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The time passes and the project gets bigger and bigger. It's time for a &lt;strong&gt;complete refactor&lt;/strong&gt; of the Calculator class!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;mult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This is the new way of using the calculator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Calculator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//output 3&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sub&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//output 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As we can see, the refactor is no more compatible with the last version. For this we need to create an &lt;strong&gt;adaptor&lt;/strong&gt; to make it work with both versions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Calculator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CalculatorAdapter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;add&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;multiplication&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;division&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;NaN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;CalculatorAdapter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we can use the the original Calculator with the Adapter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Calculator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;CalculatorAdapter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./CalculatorAdapter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Adapter&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calcAdapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CalculatorAdapter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sumAdapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;calcAdapter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;multiplication&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sumAdapter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//output 4&lt;/span&gt;

&lt;span class="c1"&gt;//Calculator&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//output 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;What are the pros and cons of this pattern?&lt;br&gt;
&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It works with &lt;strong&gt;SOLID&lt;/strong&gt; principles&lt;/li&gt;
&lt;li&gt;We can add new adapters without braking the existing code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The complexity of the code increases. This due the necessity of introducing new interfaces and classes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading! Feel free to leave your feedback and love.&lt;/p&gt;

&lt;p&gt;Have a great time and see you in future posts. 🔥&lt;/p&gt;

</description>
      <category>adapter</category>
      <category>pattern</category>
      <category>javascript</category>
      <category>designpattern</category>
    </item>
    <item>
      <title>VS Code for Git and GitHub</title>
      <author>Christian Nwamba</author>
      <pubDate>Tue, 26 Jan 2021 10:31:53 +0000</pubDate>
      <link>https://dev.to/codebeast/vs-code-for-git-and-github-47fk</link>
      <guid>https://dev.to/codebeast/vs-code-for-git-and-github-47fk</guid>
      <description>&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; VS Code has &lt;a href="https://docs.microsoft.com/en-us/learn/modules/introduction-to-github-visual-studio-code/?WT.mc_id=startup-11830-chnwamba"&gt;full Github integration&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I have been making series of videos on Youtube that shows Git workflows using &lt;strong&gt;VS Code&lt;/strong&gt;. The motivation for this video series is purely personal and I know a lot of developers can relate to it. In as much as I love the terminal and how it makes me look cool while using it, it is not the most productive workflow to shift between VS Code and iTerm. I wanted to be able to do everything with just VS Code.&lt;/p&gt;

&lt;p&gt;My productivity with Git and GitHub got doubled after I got a hang of the VS Code integrations so I though it would be useful to you as well.&lt;/p&gt;

&lt;p&gt;Each video covers a particular topic or a group of tips that solve related problems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#link-to-playlist" class="anchor"&gt;
  &lt;/a&gt;
  Link to Playlist
&lt;/h2&gt;

&lt;p&gt;Here is the &lt;a href="https://www.youtube.com/playlist?list=PL6oN0n_RAgslRZG-hDvBtzRP0AM8lNI88"&gt;Youtube Playlist&lt;/a&gt;. Feel free to save for your future reference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#included-videos" class="anchor"&gt;
  &lt;/a&gt;
  Included Videos
&lt;/h2&gt;

&lt;p&gt;Here is a breakdown of all the videos in the playlist:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Basic Git Operations with VS Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It only makes sense to kick off with basic operations like &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;clone&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;commit&lt;/code&gt; etc&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GWCsqrZszjE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. How to Publish a New Project to GitHub&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is my favorite video in the series. There is a lot of chores between initianlizing a repo and pusing it to GitHub but VS Code has a single-button alias for all of those chores:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4g3v3cWX6ig"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. How to Manage Git Branches and Merge Conflicts with VS Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s always helpful to have an extra hand in figuring out how a project is synced and where conflicts are happening. VS Code has a very effective and visual way of guiding you through both managing branches and understanding what to prioritize in a conflict&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/O7cQcdP53bA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Push and Pull with VS Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this video, I will walk you through not only pushing a repository to GitHub but also how to pull from it and manage conflict if any occurs while pulling&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9oKFPTtyHZg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>vscode</category>
    </item>
    <item>
      <title>JS Basics: Difference between "null" and "undefined"</title>
      <author>Yogini Bende</author>
      <pubDate>Tue, 26 Jan 2021 10:22:23 +0000</pubDate>
      <link>https://dev.to/ms_yogii/js-basics-difference-between-null-and-undefined-i3o</link>
      <guid>https://dev.to/ms_yogii/js-basics-difference-between-null-and-undefined-i3o</guid>
      <description>&lt;p&gt;Hi Folks,&lt;/p&gt;

&lt;p&gt;If you are working in javascript, you must be knowing these two keywords, &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;. Although we understand both of them, it becomes difficult to answer this particular question. So in today’s post let’s understand the difference between &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Null and undefined are both &lt;strong&gt;falsy values&lt;/strong&gt; and they are one of the javascript primitives ('string','number','null','undefined','boolean','symbol', 'bigint'). Now let's understand their difference.&lt;/p&gt;

&lt;p&gt;The keyword &lt;code&gt;undefined&lt;/code&gt;, as its verbal meaning says, is not defined. For example, If you are declaring a variable &lt;code&gt;a&lt;/code&gt; and you are not passing any value to it. This means its value is not defined and so the variable &lt;code&gt;a&lt;/code&gt; will get value &lt;code&gt;undefined&lt;/code&gt;. Whenever you call a function or a variable and javascript do not know its value it will always return undefined. Try to do this, Declare a variable &lt;em&gt;num&lt;/em&gt; and don't pass any value to it. Now let's print the variable num's value &lt;code&gt;console.log(num)&lt;/code&gt; in your browser console and you will see undefined getting printed. This happened because your browser did not know the value of num as we had not defined it before! Also, as it is one of the javascript primitives, the type of undefined is also &lt;code&gt;undefined&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;We already have understood that, if something is not defined javascript gives it value is undefined. But then what about null? So null is something whose value you want to be nothing. Let me explain, suppose you have defined a variable a and you want its value to be nothing initially, So, instead of not giving it any value and making it undefined, you pass it Null meaning no value. Also, the type of null is an &lt;code&gt;object&lt;/code&gt;. This is why according to &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive"&gt;MDN documentation&lt;/a&gt;, javascript has 6 primitives and there also is null, which is seemingly primitive, but indeed is a special case for every Object&lt;/p&gt;

&lt;p&gt;So though null and undefined are almost the same, they have these differences in their types. While doing equality comparison in both, as both are falsy values == will give you a result true, but as both have different types, === will give you the result as false. &lt;/p&gt;

&lt;p&gt;That’s all about Null and undefined. &lt;/p&gt;

&lt;p&gt;Though this is a very basic topic, it becomes a tricky question for an interview! So share your comments/feedback about the article and also any of such tricky interview questions from your javascript interviews. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>You wouldn’t expect to learn this from React documentation!</title>
      <author>AnnaBuller</author>
      <pubDate>Tue, 26 Jan 2021 09:29:27 +0000</pubDate>
      <link>https://dev.to/annabuller/you-wouldn-t-expect-to-learn-this-from-react-documentation-3ioh</link>
      <guid>https://dev.to/annabuller/you-wouldn-t-expect-to-learn-this-from-react-documentation-3ioh</guid>
      <description>&lt;p&gt;Sometimes you may feel that your documentation, article, or post lacks something. You may see people lost while reading your texts. You may get too many questions about things that - you're sure - you've included in a guide or an e-mail. Where is the reason for this? &lt;br&gt;
Do you know React only as a front-end library? Have you ever thought: "React documentation rules!"?. Well, I have. And here is why.&lt;br&gt;
Compare your texts to the below list based on React documentation and check if you can make your writing better and your readers happier!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-selfexplanatory-subtitles" class="anchor"&gt;
  &lt;/a&gt;
  1. Self-explanatory subtitles
&lt;/h2&gt;

&lt;p&gt;Let the readers scan the text so they can easily find what they need. Avoid these shrouded in mystery subheadings like “Your mum taught you to clean up after yourself” when you just want to tell about clearing an interval in the componentWillUnmount() method.&lt;br&gt;
Here is a perfect example. You wouldn't even need a &lt;code&gt;Ctrl+F&lt;/code&gt; shortcut to find a paragraph about the Custom Hook. You would just find it while scrolling.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AFwGGFKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/cfmetgbn0fb3jlfahphg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AFwGGFKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/cfmetgbn0fb3jlfahphg.png" alt="A self-explanatory subtitle in React documentation saying: Extraction od Custom Hook"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
A self-explanatory subtitle. The screenshot comes from: &lt;a href="https://reactjs.org/docs/hooks-custom.html"&gt;https://reactjs.org/docs/hooks-custom.html&lt;/a&gt;



&lt;h2&gt;
  &lt;a href="#2-lists-and-stickout-keywords" class="anchor"&gt;
  &lt;/a&gt;
  2. Lists and stickout keywords
&lt;/h2&gt;

&lt;p&gt;When there is too much "dense text" we lose interest, we lose focus. And when there are no &lt;strong&gt;visible keywords&lt;/strong&gt; we can't even find an appropriate piece of information. It takes more time to work through. See an unordered list and highlighted keywords below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFrWgP31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ee8kb5amdglvwpolemfz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFrWgP31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ee8kb5amdglvwpolemfz.png" alt="A screenshot with highlighted keywords and a bullet list"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
An example of a list and noticeable keywords. The screenshot comes from: &lt;a href="https://reactjs.org/docs/higher-order-components.html"&gt;https://reactjs.org/docs/higher-order-components.html&lt;/a&gt;



&lt;p&gt;But don't overdo keyword marking. It may cause an opposite effect like in &lt;a href="https://usabilitygeek.com/white-spaces-improving-usability-web-designs/"&gt;this article&lt;/a&gt; about white space ;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-links" class="anchor"&gt;
  &lt;/a&gt;
  3. Links
&lt;/h2&gt;

&lt;p&gt;Give your readers some useful additional information so they don’t have to search for it on their own. Provide links or a short explanation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-transparent-guidance" class="anchor"&gt;
  &lt;/a&gt;
  4. Transparent guidance
&lt;/h2&gt;

&lt;p&gt;Guide the readers. Make sure they always know where they are and what they should do next.&lt;br&gt;
Here is an example of providing additional information and guiding the reader to the next section.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_gbBrwto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8akhappodt0lwxjvigzl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_gbBrwto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8akhappodt0lwxjvigzl.png" alt='A screenshot with a highlighted link and "what to do next" information'&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
The end of a chapter with a useful link and a "what to do next" piece of information. The screenshot comes from: &lt;a href="https://reactjs.org/docs/add-react-to-a-website.html"&gt;https://reactjs.org/docs/add-react-to-a-website.html&lt;/a&gt;



&lt;h2&gt;
  &lt;a href="#5-important-information-and-tips" class="anchor"&gt;
  &lt;/a&gt;
  5. Important information and tips
&lt;/h2&gt;

&lt;p&gt;Where there is a really important or useful piece of information make it stand out. Use different color, font or put them into a frame.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wun4Wi8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/poy8tuk3hcyyy6inkhx8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wun4Wi8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/poy8tuk3hcyyy6inkhx8.png" alt='A visible piece of useful information named as a "Note"'&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
A visible note with additional explanation. The screenshot comes from: &lt;a href="https://reactjs.org/docs/hooks-state.html"&gt;https://reactjs.org/docs/hooks-state.html&lt;/a&gt;



&lt;h2&gt;
  &lt;a href="#6-warnings" class="anchor"&gt;
  &lt;/a&gt;
  6. Warnings
&lt;/h2&gt;

&lt;p&gt;When you know some frequently made mistakes, write them down. One doesn’t always have to learn from their mistakes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0xc6rH2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0ejnuelbd8jcxzxuungu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xc6rH2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0ejnuelbd8jcxzxuungu.png" alt="A stickout note with warning against a popular mistake"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
A stickout warning. The screenshot comes from: &lt;a href="https://reactjs.org/docs/react-component.html#constructor"&gt;https://reactjs.org/docs/react-component.html#constructor&lt;/a&gt;



&lt;h2&gt;
  &lt;a href="#7-white-space" class="anchor"&gt;
  &lt;/a&gt;
  7. White space
&lt;/h2&gt;

&lt;p&gt;Care for your readers’ eyes. Remember about a nice amount of space between subtitles, lines, list items, etc. You will find an example of a good white space amount on each screenshot in this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-possibility-to-experiment-with-code" class="anchor"&gt;
  &lt;/a&gt;
  8. Possibility to experiment with code
&lt;/h2&gt;

&lt;p&gt;Your readers would be absolutely thrilled when you provide a possibility to try the code out - on CodePen for example.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OcpCCitQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3sdc0kc3tgmgfm5t9wzm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OcpCCitQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3sdc0kc3tgmgfm5t9wzm.png" alt="A code snippet with a possibility to try the code out on CodePen"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
A code snippet with a possibility to try the code out on CodePen. The screenshot comes from: &lt;a href="https://reactjs.org/docs/lists-and-keys.html"&gt;https://reactjs.org/docs/lists-and-keys.html&lt;/a&gt;



&lt;h2&gt;
  &lt;a href="#9-lack-of-spelling-and-punctuation-mistakes" class="anchor"&gt;
  &lt;/a&gt;
  9. Lack of spelling and punctuation mistakes
&lt;/h2&gt;

&lt;p&gt;Mistakes can change the meaning of the whole sentence. Some mistake-sensitive readers may be put off the stride and may lose their train of thought. Check your text before publishing!&lt;/p&gt;




&lt;p&gt;Now take your post, article, or piece of documentation that you've recently written and check it with those 9 tips. Can you make your text better?&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;

</description>
      <category>react</category>
      <category>writing</category>
      <category>documentation</category>
    </item>
    <item>
      <title>20+ Best Discord Bots You Must Have on Your Server</title>
      <author>Simon Holdorf</author>
      <pubDate>Tue, 26 Jan 2021 07:48:19 +0000</pubDate>
      <link>https://dev.to/thesmartcoder/20-best-discord-bots-you-must-have-on-your-server-562o</link>
      <guid>https://dev.to/thesmartcoder/20-best-discord-bots-you-must-have-on-your-server-562o</guid>
      <description>&lt;p&gt;Discord is one of the best and most-used chat services for gamers, developers, and other people. It's often used to discuss strategies in games, talk trash about opponents, and more. However, Discord also has a robust collection of text channels that developers can use to communicate with players. The beauty of Discord is that it is free and cross-platform (available on Android, Windows, macOS, Linux, IOS).&lt;/p&gt;

&lt;p&gt;Whether you are a gamer or not, Discord slowly becomes the number one app for sharing ideas, getting to know people, and learning new things. There are many Discord servers out there dedicated to developers covering topics like programming languages, pair-programming, projects, and much more!&lt;/p&gt;

&lt;p&gt;The best part about having a Discord server is the fact that you have full control over who can join it. You don't need to worry about trolls joining your Discord server and creating havoc or throwing off the community vibe. This allows you as a server administrator to have an open channel where you can communicate with your members on the platform they love using while keeping the community less toxic at the same time.&lt;/p&gt;

&lt;p&gt;But taking care of your Discord server and your members manually can be very time-consuming and frustrating. Here come Discord Bots into play.&lt;/p&gt;

&lt;p&gt;Discord Bots are the third-party tools that can enhance the user experience on Discord. Most of them are advanced chatbots that can perform multiple functions like playing music, monitoring your servers, tracking your statistics, adding a role to your server, etc. Some of them are so powerful that they can easily replace human administrators/moderators. There are moderation bots, music bots, fun bots, gaming bots, and many more. &lt;/p&gt;

&lt;p&gt;To help you find the best Discord bots for your Discord server, we have compiled an extensive list of 20 of the best bots for Discord.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-discord-bots" class="anchor"&gt;
  &lt;/a&gt;
  Best Discord Bots
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-1"&gt;Best Moderation Bots and Multi-Purpose Bots for Discord&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;MEE6 Bot&lt;/li&gt;
&lt;li&gt;Dyno Bot&lt;/li&gt;
&lt;li&gt;Carl Bot&lt;/li&gt;
&lt;li&gt;YAGPDB Bot&lt;/li&gt;
&lt;li&gt;Yui Bot&lt;/li&gt;
&lt;li&gt;ZeroTwo Bot&lt;/li&gt;
&lt;li&gt;Loritta Bot&lt;/li&gt;
&lt;li&gt;Arcane Bot&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-2"&gt;Best Music Bots for Discord&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Rythm Bot&lt;/li&gt;
&lt;li&gt;Groovy Bot&lt;/li&gt;
&lt;li&gt;Hydra Bot&lt;/li&gt;
&lt;li&gt;Pancake Bot&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-3"&gt;Best Game Bots and Fun Bots for Discord&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Dank Memer Bot&lt;/li&gt;
&lt;li&gt;Owo Bot&lt;/li&gt;
&lt;li&gt;Mudae Bot&lt;/li&gt;
&lt;li&gt;EPIC RPG Bot&lt;/li&gt;
&lt;li&gt;Karuta Bot&lt;/li&gt;
&lt;li&gt;Koya Bot&lt;/li&gt;
&lt;li&gt;Tatsu Bot&lt;/li&gt;
&lt;li&gt;Pokecord Bot&lt;/li&gt;
&lt;li&gt;Poketwo Bot&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#best-moderation-bots-and-multipurpose-bots-for-discord" class="anchor"&gt;
  &lt;/a&gt;
  Best Moderation Bots and Multi-Purpose Bots for Discord&lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#mee6-bot" class="anchor"&gt;
  &lt;/a&gt;
  MEE6 Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/1YQOT4npumYgGX5a80CkPs/e34dddd3a99b5d85ac8721153c9cad34/mee6_hero.jpg" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/1YQOT4npumYgGX5a80CkPs/e34dddd3a99b5d85ac8721153c9cad34/mee6_hero.jpg" alt="mee6 bot for discord - how to use mee6"&gt;&lt;/a&gt;&lt;br&gt;
The Mee6 Bot for Discord is one of the best bots available today. It can be extremely helpful in managing your server, and it can make your life as a server owner much more comfortable. The bot has tons of features that will benefit your Discord server. &lt;/p&gt;

&lt;p&gt;Mee6 is a multi-purpose bot that can do many different things on a Discord server. Here are some of the things that it can do:&lt;br&gt;&lt;br&gt;
Manage the music on your server&lt;br&gt;&lt;br&gt;
Excellent music-playing capabilities for your channel members&lt;br&gt;
Change voice settings depending on what time it is (different voices for day times and night times)&lt;br&gt;&lt;br&gt;
Assign roles and permissions to users based on their behavior, etc.&lt;br&gt;
Completely customize the chat commands that users can use on your server (including setting up permission levels, so individual users don't have access to specific commands)&lt;br&gt;&lt;br&gt;
Announcements with links or images (often used for giveaways or announcements)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thesmartcoder.dev/mee6-bot/"&gt;Review for MEE6 Bot&lt;/a&gt;&lt;br&gt;
&lt;a href="https://mee6.xyz/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Moderation / Multi-Purpose&lt;br&gt;
Server Installations: 3,511,000&lt;br&gt;
Rating: 3/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dyno-bot" class="anchor"&gt;
  &lt;/a&gt;
  Dyno Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/2dyuehQf60CIvlc403xioY/15777358ba6a5f48753a678ffa91daef/what_is_dyno_bot.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/2dyuehQf60CIvlc403xioY/15777358ba6a5f48753a678ffa91daef/what_is_dyno_bot.PNG" alt="What is Dyno Bot"&gt;&lt;/a&gt;&lt;br&gt;
When it comes to managing data on discord servers and moderating different channels, Dyno Bot for Discord is one of the most powerful bots available. The bot has a wide range of functionalities, making it very interesting and easy to use for any discord server owner.&lt;/p&gt;

&lt;p&gt;One of the reasons you can benefit from using the Dyno Bot on your discord server is that this feature will allow you to assign roles to specific users or set permissions for particular channels. &lt;/p&gt;

&lt;p&gt;It will give you the power to control who joins your discord server if you want to limit it only to people you know or trust. You can filter out unwanted profiles using specific words in their nicknames or bios and ban them automatically without having to leave the app or browser tab where you are chatting with other users on your discord channel. &lt;/p&gt;

&lt;p&gt;Suppose somebody breaks a rule that applies in one of the channels. In that case, all you need to do is mark this user with a role that will cause him/her not to join the channel anymore but still be able to talk with other users of your server when they are in different channels. &lt;/p&gt;

&lt;p&gt;You can define roles for each user to access individual channels while others remain hidden and private. This functionality allows you to distinguish between moderators and regular members since those who belong in higher rank may get more power and greater access rights than ordinary members.&lt;/p&gt;

&lt;p&gt;Here are some of the most helpful features:  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Moderation Tools:&lt;/strong&gt; For managing channels, dyno bot provides you with a lot of moderation tools like auto roles, ban and kick users, user status.   &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Music Services:&lt;/strong&gt; This feature comes in handy when playing music on Discord servers. It also allows you to add songs in your library for different channels. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Roles and Permissions:&lt;/strong&gt; You can configure custom roles or permissions in Dyno Bot and assign them to specific users/groups within the server based on their preferences. Dyno Bot also supports permission configurations for each channel separately.   &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Embedded Commands:&lt;/strong&gt; With this feature, you can create commands that perform an individual action whenever someone types it into the chat. For example, if someone types !ping into the chat, it will send back the response "Ping" and other information about your server's latency and more!   &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web Dashboard:&lt;/strong&gt; Dyno offers a feature-rich, web-based Dashboard for you to easily configure and enable/disable everything related to the Dyno Bot.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other Features:&lt;/strong&gt; There are many more features offered by Dyno Bot, which include creating polls from messages sent by a user/group in chat; embedding any link or image shared by anyone at any time; creating notes from pictures uploaded by group members; posting YouTube or Twitch videos directly onto the server using embedded URLs, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thesmartcoder.dev/discord-dyno-bot/"&gt;Review for Dyno Bot&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dyno.gg/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Multi-Purpose&lt;br&gt;
Server Installations: 3,690,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#carl-bot" class="anchor"&gt;
  &lt;/a&gt;
  Carl Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/6tBEjRC2ZIl5j3UndZmlHX/3fc56878dae95d43b57e1692aa09fccd/carl_bot_main.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/6tBEjRC2ZIl5j3UndZmlHX/3fc56878dae95d43b57e1692aa09fccd/carl_bot_main.PNG" alt="Carl Bot Discord"&gt;&lt;/a&gt;&lt;br&gt;
Carl Bot is an advanced bot that allows you to manage logs, store chats, and create reaction roles that enable you to respond to messages quickly.  &lt;/p&gt;

&lt;p&gt;You can use Carl Bot to create custom commands for your server. In other words, it allows you to set up custom commands in your server's chat and have the bot execute them. For example, suppose you have a farming simulator discord server. In that case, you could use the Carl Bot to run farm activities like adding crops or fertilizing fields and even get information about how the crop is doing from time to time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thesmartcoder.dev/carl-bot-discord/"&gt;Review for Carl Bot&lt;/a&gt;&lt;br&gt;
&lt;a href="https://carl.gg/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Moderation&lt;br&gt;
Server Installations: 1,802,000&lt;br&gt;
Rating: 2/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#yagpdb-bot" class="anchor"&gt;
  &lt;/a&gt;
  YAGPDB Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/5hFvxOFNca5F7nW0vHA6xR/9fbdc2a209467b903af708821521ff52/yagpdb3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/5hFvxOFNca5F7nW0vHA6xR/9fbdc2a209467b903af708821521ff52/yagpdb3.PNG" alt="Setup YAGPDB Bot for Discord"&gt;&lt;/a&gt;&lt;br&gt;
The YAGPDB Bot is a fully customizable bot that provides various features to your Discord server. It can be used as a replacement for a music bot, moderation bot, and so much more! The YAGPDB Bot is also straightforward to set up, and you can get it running within just a few minutes.   &lt;/p&gt;

&lt;p&gt;_&lt;em&gt;Features:  _&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Moderation (kick/ban)
&lt;/li&gt;
&lt;li&gt;Music (play/pause/stop)
&lt;/li&gt;
&lt;li&gt;Images (upload, view and comment on them)
&lt;/li&gt;
&lt;li&gt;Raffles (for server events or giveaways)
&lt;/li&gt;
&lt;li&gt;Giveaways (give items to other users)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://thesmartcoder.dev/yagpdb-bot/"&gt;Review for YAGPDB Bot&lt;/a&gt;&lt;br&gt;
&lt;a href="https://yagpdb.xyz/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Multi-Purpose&lt;br&gt;
Server Installations: 1,500,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#yui-bot" class="anchor"&gt;
  &lt;/a&gt;
  Yui Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/5K2L53Ei3ZP72vwdMCeuD7/2a92b2cc755cd543880b67939a37168b/yui_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/5K2L53Ei3ZP72vwdMCeuD7/2a92b2cc755cd543880b67939a37168b/yui_bot_for_discord.PNG" alt="yui bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Yui Bot for Discord is a modern, lightweight Discord bot providing you lots of commands to manage your server. &lt;/p&gt;

&lt;p&gt;It's a cool bot that runs very smoothly and rarely goes offline. It lacks other, more popular bots' economy features, but many like how cute it is, e. g., for hugging and such things.&lt;/p&gt;

&lt;p&gt;It has good documentation for getting started with the bot!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discordyui.net/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Moderation&lt;br&gt;
Server Installations: 450,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#zerotwo-bot" class="anchor"&gt;
  &lt;/a&gt;
  ZeroTwo Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/3AB6rrZzQG5JetFlNFgYBp/b9dc252df5b85c30aa5639c361e84208/zerotwo_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/3AB6rrZzQG5JetFlNFgYBp/b9dc252df5b85c30aa5639c361e84208/zerotwo_bot_for_discord.PNG" alt="zerotwo bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
ZeroTwo Bot for Discord is a multi-purpose Discord bot for your server management with features like a global economic system, music streaming capabilities, a voting system, role management, and a web-based management dashboard.&lt;/p&gt;

&lt;p&gt;It has a variety of commands and an excellent uptime and ping. Like Mudae Bot or Karuta Bot, ZeroTwo also comes with a mechanism to collect trading cards based on famous (and not so popular) anime characters.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://zerotwo.bot/index.php"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Multi-Purpose&lt;br&gt;
Server Installations: 830,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#loritta-bot" class="anchor"&gt;
  &lt;/a&gt;
  Loritta Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/2OFuU5p1yzQXuy7csfsRR4/a9ec1718e2f96ed9fde8124e06c2b1ec/loritta_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/2OFuU5p1yzQXuy7csfsRR4/a9ec1718e2f96ed9fde8124e06c2b1ec/loritta_bot_for_discord.PNG" alt="loritta bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Do you and your server struggle with the constant need for management, moderation, and entertaining your channel members? Worry not, Loritta Bot for Discord comes to the rescue. With a unique backstory and a unique cuteness factor, Loritta should be running on your server, and your users will thank you for it!&lt;/p&gt;

&lt;p&gt;Developed in Brazil but made for the world, Loritta definitely is one of the best bots available for Discord server management. It has lots of moderation features that can easily be customized via a web-based dashboard. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://top.gg/bot/297153970613387264"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Multi-Purpose&lt;br&gt;
Server Installations: 1,077,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#arcane-bot" class="anchor"&gt;
  &lt;/a&gt;
  Arcane Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/LbTQWANUJxoTgZG0nWcib/a896d73f813300db370f24b909eb26d5/arcane_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/LbTQWANUJxoTgZG0nWcib/a896d73f813300db370f24b909eb26d5/arcane_bot_for_discord.PNG" alt="arcane bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Arcane Bot for Discord is a reliable alternative to other popular bots such as Dyno Bot or MEE6 Bot. The developers try to provide the bot's services free as much as possible. &lt;/p&gt;

&lt;p&gt;Arcane supports things like moderation features, roles &amp;amp;rewards, leveling, experience points, ranks, and much more.&lt;/p&gt;

&lt;p&gt;People like the fact that they can get a lot of the features of, let's say, MEE6 for free. So if you are planning on getting a premium service from one of the other bots, check out Arcane Bot first and see if you can find the same features for free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.arcanebot.xyz/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Multi-Purpose&lt;br&gt;
Server Installations: 395,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#best-music-bots-for-discord" class="anchor"&gt;
  &lt;/a&gt;
  Best Music Bots for Discord&lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#rythm-bot" class="anchor"&gt;
  &lt;/a&gt;
  Rythm Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/1fExvvwRZBuIPzFmWbJ0Uf/ecc6f0c7bda83ad88c2a381b5f5361a6/rythm_bot.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/1fExvvwRZBuIPzFmWbJ0Uf/ecc6f0c7bda83ad88c2a381b5f5361a6/rythm_bot.PNG" alt="How to Add Rythm Bot for Discord [Guide &amp;amp; Features]"&gt;&lt;/a&gt;&lt;br&gt;
The Rythm Bot for Discord is a bot that provides users with the ability to customize their Discord servers by providing an extensive list of moderation commands, utility commands, and fun commands. These commands can help improve your server's quality by giving users the tools they need to have a more enjoyable experience on your server. &lt;/p&gt;

&lt;p&gt;The Rythm Bot for Discord also comes equipped with a music system known as Rythm Radio, where you can stream a variety of different channels from all over the world or listen to your music playlists!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thesmartcoder.dev/rythm-bot/"&gt;Review for Rythm Bot&lt;/a&gt;&lt;br&gt;
&lt;a href="https://rythmbot.co/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Music&lt;br&gt;
Server Installations: 5,847,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#groovy-bot" class="anchor"&gt;
  &lt;/a&gt;
  Groovy Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/76WPFuXDFM3C6xd5fi8zDd/4a35e3b71982e45e8fca484df1263b03/groovy_bot.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/76WPFuXDFM3C6xd5fi8zDd/4a35e3b71982e45e8fca484df1263b03/groovy_bot.PNG" alt="groovy bot"&gt;&lt;/a&gt;&lt;br&gt;
The Groovy Bot is an advanced music bot for Discord, which allows you to play music from a wide arrange of sources. The supported sources are Youtube, Twitch, Soundcloud, Google Play Music, Deezer, and more! &lt;/p&gt;

&lt;p&gt;All the features that you need: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Playing Songs from Youtube and Twitch (Searching by Song/Artist Name or Video ID) &lt;/li&gt;
&lt;li&gt;Playing Songs from Soundcloud (Searching by Song/Artist Name or Track ID) &lt;/li&gt;
&lt;li&gt;Playing Songs from Google Play Music / Deezer (Searching by Song/Artist Name or Album ID) &lt;/li&gt;
&lt;li&gt;Playing a random song &lt;/li&gt;
&lt;li&gt;Adding songs to favorites &lt;/li&gt;
&lt;li&gt;Setting your own aliases for songs so they can be easily played later on - And much more!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example commands:&lt;br&gt;
!play - Plays a song from any of the supported sources. &lt;br&gt;
!play (source) - Plays a song from one of the supported sources (Youtube/Soundcloud/Deezer). &lt;br&gt;
!fave - Favours (makes it easier to find) a song by adding it to favorites. !fave (songid) - Favours a song by adding it to favorites, using its ID. &lt;br&gt;
!afk - Sets your status as AFK (Away From Keyboard); this will cause your status message to be changed, and you won't receive any messages in the current channel while being AFK. &lt;br&gt;
!minimode - Sets your status as a minimode, this will cause your status message to be changed, and you won't receive any messages in the current channel while being minimoded. &lt;br&gt;
!unfave - Unfavours a song from the favorites list. &lt;br&gt;
!unfave (songid) - Unfavours a song from the favorites list, using its ID. !youtube (search query) or youtube (video id) or youtube (artist/track name) or youtube (album name) or twitch (search query) or soundcloud (search query) or gpmusic (album|artist|track|playlist-name).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thesmartcoder.dev/groovy-bot/"&gt;Review for Groovy Bot&lt;/a&gt;&lt;br&gt;
&lt;a href="https://groovy.bot/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Music&lt;br&gt;
Server Installations: N/A&lt;br&gt;
Rating: 3/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#hydra-bot" class="anchor"&gt;
  &lt;/a&gt;
  Hydra Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/3zzIXjfKq7sxew1s1YtkGu/8d07eb4d88b09da033f6846fc70b18b8/hydra_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/3zzIXjfKq7sxew1s1YtkGu/8d07eb4d88b09da033f6846fc70b18b8/hydra_bot_for_discord.PNG" alt="hydra bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Hydra Bot is a Discord bot that plays music for you and your server.  &lt;/p&gt;

&lt;p&gt;How is Hydra Bot for Discord different from the other bots?  &lt;/p&gt;

&lt;p&gt;There are many music bots out there. But not like this one. Hydra plays music in more ways than one: it supports YouTube, SoundCloud, Twitch streams, and more!&lt;br&gt;&lt;br&gt;
Hydra also does many things other bots can't do, such as: &lt;br&gt;
playing songs by their album name, searching for playlists on YouTube, and opening the videos on your phone if you have the app installed. &lt;/p&gt;

&lt;p&gt;You can even search for lyric songs and then listen to them with LyricsPlus!  Not only that, but your server members can be notified when you're listening to something, so they will know when you need them to join the party!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hydra.bot/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Music&lt;br&gt;
Server Installations: 1,031,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pancake" class="anchor"&gt;
  &lt;/a&gt;
  Pancake
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/4FWn0Gs1a0x3IL3Ho4k1mL/a46141655e7b4c6b1b397bb47a0f5521/pancake_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/4FWn0Gs1a0x3IL3Ho4k1mL/a46141655e7b4c6b1b397bb47a0f5521/pancake_bot_for_discord.PNG" alt="pancake bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
A group of Discord users decided to create a bot that specializes in making pancakes. It started as a joke and has become one of the most popular bots on Discord.&lt;/p&gt;

&lt;p&gt;Features:&lt;br&gt;
Pancake Bot can play music from sources like Youtube and SoundCloud.&lt;br&gt;
It has a simple moderation system for muting, kicking, or banning users.&lt;br&gt;
A role system can be utilized for managing your discord server.&lt;br&gt;
Fun commands like image generation or Akinator to entertain your members&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pancake.gg/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Fun / Music&lt;br&gt;
Server Installations: 765,100&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#best-game-bots-and-fun-bots-for-discord" class="anchor"&gt;
  &lt;/a&gt;
  Best Game Bots and Fun Bots for Discord&lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#dank-memer-bot" class="anchor"&gt;
  &lt;/a&gt;
  Dank Memer Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/3yeuQWEktTKAtVqmwgUOkk/27923ef8f90473bd5136c525ca68a0ec/dank_memer_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/3yeuQWEktTKAtVqmwgUOkk/27923ef8f90473bd5136c525ca68a0ec/dank_memer_bot_for_discord.PNG" alt="dank memer bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
The Dank Memer Bot for Discord is a Discord Bot that allows you to play meme games with your friends. The bot has a suite of commands and uses the Meme Face Maker API to generate real-time memes on demand. The bot can even automatically modify images to make them even danker!  The bot currently has a dice game, an image guessing game, and a reaction test.&lt;br&gt;
The Dank Memer Bot for Discord has a suite of commands that you can use to play with your friends. Here are some examples: &lt;/p&gt;

&lt;p&gt;!start — Starts a new game session. &lt;br&gt;
!dank-meme -- Generates a random meme from the Meme Face Maker API.&lt;br&gt;
!join — Joins a game session in progress. &lt;br&gt;
!leave — Leaves the current game session. &lt;br&gt;
!helpme — Requires at least two players. This command starts a new round of guessing and picks on a player to guess the meme face first. If no one can guess correctly, it will randomly pick another player instead until someone wins! This command can be used as many times as needed per round. You can also add numbers to increase the number of guesses per round, for example: !helpme3. &lt;br&gt;
!meme — Randomly chooses a new meme face and shows it to all users in a chat room or optionally sends it privately to specific users with an optional parameter&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dankmemer.lol/?referrer=topgg_page"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Meme / Games&lt;br&gt;
Server Installations: 4,906,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#owo-bot" class="anchor"&gt;
  &lt;/a&gt;
  Owo Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/1uVpDX0vxCfqj5WnMRP1a8/df2f30f265f085c9523d210be6265898/owo_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/1uVpDX0vxCfqj5WnMRP1a8/df2f30f265f085c9523d210be6265898/owo_bot_for_discord.PNG" alt="owo bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Owo Bot is a bot for Discord that allows you to make your own rules. It helps you manage how your discord server operates and helps you create guidelines for your community. The best part about this bot is that it has simple and easy commands that make your server's management even more comfortable than before. &lt;/p&gt;

&lt;p&gt;It can be used by a single user and teams, whether they are gamers, developers, or just a group of friends who want to chat while lounging around.&lt;/p&gt;

&lt;p&gt;It supports a variety of games like slot machines, lottery, blackjack, or coinflip.&lt;/p&gt;

&lt;p&gt;Other features:&lt;br&gt;
Utility: Supports feedback, stats, Patreon, and more.&lt;br&gt;
Emotes: Lots of funny emotes&lt;br&gt;
Memes: Generate memes &lt;br&gt;
Fun: Gifs and more&lt;br&gt;
Animals: Hunting, selling, battling, and more&lt;br&gt;
And many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/OwOBot"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Fun / Game&lt;br&gt;
Server Installations: 1,152,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mudae-bot" class="anchor"&gt;
  &lt;/a&gt;
  Mudae Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/1XA6AxNvW2Mt14gaiOofWZ/9f89a8c7623f439ba33ccaf36607ae63/mudae_bot_for_discord.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/1XA6AxNvW2Mt14gaiOofWZ/9f89a8c7623f439ba33ccaf36607ae63/mudae_bot_for_discord.PNG" alt="mudae bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
The Mudae Bot belongs to the world of anime. It includes a database of more than 60,000 characters from anime movies and games. Your channel members can search for characters and collect them via a typical gacha game (you have different odds for receiving a distinct character...). But that's not all. You can even fight with your acquired characters in the "waifu arena".&lt;/p&gt;

&lt;p&gt;The bot is fun, but it seems unfair to have players with premium membership get more rolls than those with maximum badges. With that being said, the bot is excellent, and I love the work that was put into it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/mudae"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Fun / Game&lt;br&gt;
Server Installations: 1,261,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#epic-rpg-bot" class="anchor"&gt;
  &lt;/a&gt;
  EPIC RPG Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/fORC6nw14RDIQW8R2I8Lf/0881b4701818b80ce9f8da8fbc43c7c6/epic_rpg_bot.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/fORC6nw14RDIQW8R2I8Lf/0881b4701818b80ce9f8da8fbc43c7c6/epic_rpg_bot.PNG" alt="epic rpg bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Do you like playing games? Do you like RPGs (Role-Playing Games)? And do you enjoy dungeons, weapons, player-vs-player, leaderboards, and a bit of gambling? Then the EPIC RPG Bot for Discord is exactly what you and your channel members need.&lt;/p&gt;

&lt;p&gt;People in your channel can utilize the bot to gain experience and level-up. But that's not all. Collect weapons and armor and use them to defeat evil dungeons bosses, which unlocks new commands!&lt;/p&gt;

&lt;p&gt;Here are some of the most used commands:&lt;/p&gt;

&lt;p&gt;"rpg start": Learn how to play the game.&lt;/p&gt;

&lt;p&gt;"quest": gain XP from simple quests.&lt;br&gt;
"profile": check your progress.&lt;br&gt;
"inventory": check your inventory.&lt;/p&gt;

&lt;p&gt;"hunt"/"adventure": get coins and xp.&lt;br&gt;
"heal": heal yourself with a life potion.&lt;br&gt;
"duel": fight other players.&lt;br&gt;
"dungeon": try to defeat a boss together with other players.&lt;/p&gt;

&lt;p&gt;"shop": check out the shop.&lt;br&gt;
"buy"/"sell": buy items and sell loot.&lt;/p&gt;

&lt;p&gt;"chop"/"mine"/"fish": acquire new items.&lt;br&gt;
"craft": craft swords, armor, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://top.gg/bot/555955826880413696"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Game&lt;br&gt;
Server Installations: 315,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#karuta-bot" class="anchor"&gt;
  &lt;/a&gt;
  Karuta Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/7xMKar2vmoVYREJyexFnAo/1c5ccc2be1348949ef843293127b7c7b/karuta.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/7xMKar2vmoVYREJyexFnAo/1c5ccc2be1348949ef843293127b7c7b/karuta.PNG" alt="karuta bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Karuta Bot for Discord is another great discord bot for anime fans. With Karuta, you and your channel members can collect trading cards of your favorite anime characters. It's quite similar to the Mudae Bot but has some unique features:&lt;/p&gt;

&lt;p&gt;Keep your collectibles when you switch the server due to the global economy features of Karuta&lt;br&gt;
Don't choose between automatic and manual card drops (like Mudae does it) but make use of the best of both worlds.&lt;br&gt;
Extensive logging and an active support team try to prevent cheating as much as possible.&lt;br&gt;
Regular updates and fixes because the team of developers works on the bot on a daily basis.&lt;br&gt;
An extensive trading system to basically trade every card with every player.&lt;br&gt;
A crafting system allows you to craft new cards for collecting and trading.&lt;br&gt;
Perks and cosmetics to customize your favorite characters&lt;/p&gt;

&lt;p&gt;Karuta is a great bot for anime fans that works very smoothly and has great support from the community!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://karuta.xyz/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Fun / Game&lt;br&gt;
Server Installations: 140,000&lt;br&gt;
Rating: 4/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#koya-bot" class="anchor"&gt;
  &lt;/a&gt;
  Koya Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/2CrwDRUlBB0ULKkNKZtRtE/b8ef5d9057b1fda126eb06da93f9ceb5/koya.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/2CrwDRUlBB0ULKkNKZtRtE/b8ef5d9057b1fda126eb06da93f9ceb5/koya.PNG" alt="koya bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Koya Bot for Discord is a bot in the universe of the famous anime series One Piece. It supports basic commands such as sending announcements to channel members via its greeting system and moderation capabilities.&lt;/p&gt;

&lt;p&gt;But what's far more exciting and unique is the gaming feature that lets you play an interactive One Piece game, including the series's famous characters. Those can level up by gaining experience, start battles, and more. You can also upgrade your very own boat and start expeditions with it. &lt;/p&gt;

&lt;p&gt;It also comes with a web-based dashboard and some paid premium features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://koya.gg/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Fun / Game&lt;br&gt;
Server Installations: 980,000&lt;br&gt;
Rating:&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tatsu-bot" class="anchor"&gt;
  &lt;/a&gt;
  Tatsu Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/7s01bVYly5SjavCVjschww/4220e94f10b9f17f6fa9cf8bb0833182/tatsu.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/7s01bVYly5SjavCVjschww/4220e94f10b9f17f6fa9cf8bb0833182/tatsu.PNG" alt="tatsu bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Tatsu Bot for Discord is another popular bot to gamify your server and entertain your channel members. It receives frequent updates from its developers, which means it's active and under constant development.&lt;/p&gt;

&lt;p&gt;What's also important is that it has a very active player base helping to create a global economy and a simple to use pet module. Many people also like the pixel art graphics and the variety of items one can acquire.&lt;/p&gt;

&lt;p&gt;However, Tatsu Bot also has premium features that you have to pay for. But remember that developers need to make money somehow, so don't see this as a con necessarily. &lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.tatsu.gg/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Games&lt;br&gt;
Server Installations: 1,300,000&lt;br&gt;
Rating: 3/5&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pokecord-bot" class="anchor"&gt;
  &lt;/a&gt;
  Pokecord Bot
&lt;/h2&gt;

&lt;p&gt;Pokecord used to be one of the best and most-loved Discord Bots in the Pokémon universe. But sadly, its developer decided to stop running it during 2020, so Pokecord can no longer be used.&lt;/p&gt;

&lt;p&gt;But don't worry, there are already successors rising in popularity and trying to step in the footsteps of Pokecord. One of them is Poketwo, and we are going to cover it next, so keep on reading!&lt;/p&gt;

&lt;p&gt;Category: Fun / Games&lt;br&gt;
Server Installations: -&lt;br&gt;
Rating: -&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#poketwo-bot" class="anchor"&gt;
  &lt;/a&gt;
  Poketwo Bot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/3gRxtw0crbvdcAKHSLIMnx/350d0f979f5aabb82d1638fd71aebd19/poketwo.PNG" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/3gRxtw0crbvdcAKHSLIMnx/350d0f979f5aabb82d1638fd71aebd19/poketwo.PNG" alt="poketwo bot for discord"&gt;&lt;/a&gt;&lt;br&gt;
Like already said, Pokecord is no longer running, so here comes a valid alternative, the Poketwo Bot for Discord. With Poketwo, you can catch Pokemon, level them up, trade them against other players' Pokemon and even battle them against other players.&lt;/p&gt;

&lt;p&gt;But in the end, that's all of the features, really. So you cannot compare this bot to multi-purpose bots like MEE6 or Carl Bot. But it is quite entertaining and has a lot of potentials, so I am curious what the future holds in store for Poketwo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://poketwo.net/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Category: Fun / Games&lt;br&gt;
Server Installations: 210,000&lt;br&gt;
Rating: 3/5&lt;/p&gt;




&lt;p&gt;This list is far from complete and there are many other great bots available. However, I hope that you enjoy Discord Bots as much as I do and find the mentioned bots helpful for your server!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>An Introduction to Scraping (Almost) Anything With Puppeteer and Node.js</title>
      <author>Jacob Lee</author>
      <pubDate>Tue, 26 Jan 2021 07:46:39 +0000</pubDate>
      <link>https://dev.to/hacubu/an-introduction-to-scraping-almost-anything-with-puppeteer-and-node-js-e9g</link>
      <guid>https://dev.to/hacubu/an-introduction-to-scraping-almost-anything-with-puppeteer-and-node-js-e9g</guid>
      <description>&lt;p&gt;Despite the macabre name, headless browsers aren't scary (at least, to most people). They're similar to standard web browsers, but are controlled through code instead of with a mouse and keyboard. You can do almost anything with a headless browser on a page that you can do with a normal web browser, including submit forms, wait for asynchronous JavaScript, and set cookies. When used in combination with modern cloud platforms, it's easier than ever to create automated scrapers.&lt;/p&gt;

&lt;p&gt;In this article, I'll walk you through a few web scraping tricks and examples using &lt;a href="https://pptr.dev"&gt;Puppeteer&lt;/a&gt;, a headless browser based on Chromium that has become an industry standard, and Node.js. We'll also use &lt;a href="https://autocode.com"&gt;Autocode&lt;/a&gt; to easily run and iterate on our scraper code.&lt;/p&gt;

&lt;p&gt;All you need to get started is a free Autocode account. Let's dive in!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tldr-30s" class="anchor"&gt;
  &lt;/a&gt;
  TL;DR (30s)
&lt;/h1&gt;

&lt;p&gt;Getting a basic scraper working is simple. Start by going to &lt;a href="https://autocode.com"&gt;https://autocode.com&lt;/a&gt; and creating or logging into your account. Create a new project, and paste the following code into the editor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// authenticates you with the API standard library&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;&lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STDLIB_SECRET_TOKEN&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;autocode-puppeteer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.youtube.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Any URL you'd like&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Autocode will automatically add required dependencies, so all you need to do now is, press the &lt;strong&gt;Save&lt;/strong&gt; or &lt;strong&gt;Run&lt;/strong&gt; button to push your code live. And that's it! You're now scraping the title of the page (what you'd see in the tab bar when you open the site in Chrome) with Puppeteer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NnfiZ_qj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zb15ntjzp0t6pjl5sxz5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NnfiZ_qj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zb15ntjzp0t6pjl5sxz5.png" alt="Scraping the title from youtube.com"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#breaking-it-down" class="anchor"&gt;
  &lt;/a&gt;
  Breaking It Down
&lt;/h1&gt;

&lt;p&gt;Here's what happens in the above code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We require a &lt;a href="https://www.npmjs.com/package/autocode-puppeteer"&gt;variant of Puppeteer configured to work in the Autocode environment&lt;/a&gt;. Note that the default Puppeteer package will not work due to dependency size constraints.&lt;/li&gt;
&lt;li&gt;We prepare Puppeteer by launching it and opening a new page.&lt;/li&gt;
&lt;li&gt;We navigate to the desired page with &lt;code&gt;await page.goto()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Once on the right page, we use the &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v5.5.0&amp;amp;show=api-pagetitle"&gt;&lt;code&gt;page.title()&lt;/code&gt;&lt;/a&gt; method to scrape the page title.&lt;/li&gt;
&lt;li&gt;We close the browser instance when we're finished.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This flow is analogous to opening Chrome on your computer, typing &lt;code&gt;https://youtube.com/&lt;/code&gt; in the navbar, checking the title of the page, and finally closing the browser. We'll follow this general pattern when web scraping with Puppeteer. &lt;/p&gt;

&lt;p&gt;We're just scratching the surface of what's possible, but there's something important to emphasize first.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#with-great-power" class="anchor"&gt;
  &lt;/a&gt;
  With Great Power...
&lt;/h1&gt;

&lt;p&gt;Many websites disallow scraping, and use tools like reCAPTCHA or contain a &lt;a href="https://en.wikipedia.org/wiki/Robots_exclusion_standard"&gt;robots.txt&lt;/a&gt; file containing guidelines for scrapers and other automated tools. You should always check and respect site rules before scraping.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#scraping-data-from-page-content" class="anchor"&gt;
  &lt;/a&gt;
  Scraping Data From Page Content
&lt;/h1&gt;

&lt;p&gt;Now that you've got the basics down, let's explore how to scrape more useful data from a page. One key piece of functionality Puppeteer provides is the ability to query a page for HTML elements with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors"&gt;CSS selectors&lt;/a&gt;. For example, Puppeteer's &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v5.5.0&amp;amp;show=api-pageevalselector-pagefunction-args"&gt;&lt;code&gt;page.$$eval()&lt;/code&gt;&lt;/a&gt; method takes a selector and allows you to run code in the context of the browser on all elements matching the selector.&lt;/p&gt;

&lt;p&gt;Here's what it looks like in action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// authenticates you with the API standard library&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;&lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STDLIB_SECRET_TOKEN&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;autocode-puppeteer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.youtube.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;videoData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$$eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a#video-title-link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;titleLinkEls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;titleLinkEls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;titleLinkEl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;titleLinkEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://youtube.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;titleLinkEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;href&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;videoData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--foiKP_nk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h6rgv349ppgd3gae26a1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--foiKP_nk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h6rgv349ppgd3gae26a1.png" alt="The results of scraping video links and titles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we've loaded YouTube in a page, we can use the &lt;code&gt;page.$$eval()&lt;/code&gt; function to query for each video link on the front page and return the name of the video and a link to it. We've essentially created a custom trending video API!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#crafting-selectors-with-chrome-devtools" class="anchor"&gt;
  &lt;/a&gt;
  Crafting Selectors With Chrome Devtools
&lt;/h1&gt;

&lt;p&gt;One tricky part about creating scrapers is figuring out what elements of the page contain relevant data - after all, it's not immediately obvious that &lt;code&gt;a#video-title-link&lt;/code&gt; matches all the video links on YouTube. One convenient tool for this is the inspector in Chrome's devtools.&lt;/p&gt;

&lt;p&gt;You can open the inspector under &lt;strong&gt;View &amp;gt; Developer &amp;gt; Inspect Elements&lt;/strong&gt; in the topbar, or by using the keyboard shortcut &lt;strong&gt;CMD + Option + C&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UBvy2P61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jpx3qixio92pe8s4h90l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UBvy2P61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jpx3qixio92pe8s4h90l.png" alt="Accessing the Chrome inspector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have the inspector open, you can mouse over elements on the page and see them highlighted. Clicking one will show the element in the devtools window, including its attributes and position in the DOM.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EfRROeMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8byhz5nwg6d36mz7sg4p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EfRROeMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8byhz5nwg6d36mz7sg4p.png" alt="Highlighting elements in the Chrome inspector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the inspector, you should be able to figure out a way to reference the correct elements and scrape the data you want.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#debugging-with-screenshots" class="anchor"&gt;
  &lt;/a&gt;
  Debugging With Screenshots
&lt;/h1&gt;

&lt;p&gt;Puppeteer allows you to take screenshots of pages using the &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v5.5.0&amp;amp;show=api-pagescreenshotoptions"&gt;&lt;code&gt;page.screenshot()&lt;/code&gt;&lt;/a&gt; method. This can be especially useful to see the current page state when composing flows that involve interaction with &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v5.5.0&amp;amp;show=api-pageclickselector-options"&gt;&lt;code&gt;page.click()&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v5.5.0&amp;amp;show=api-pageselectselector-values"&gt;&lt;code&gt;page.select()&lt;/code&gt;&lt;/a&gt;, much like a &lt;code&gt;console.log&lt;/code&gt; statement.&lt;/p&gt;

&lt;p&gt;For example, let's say you want to build a flow that involves clicking on the first video on the front page of YouTube to scrape its like and dislike count. You might try something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// authenticates you with the API standard library&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;&lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STDLIB_SECRET_TOKEN&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;autocode-puppeteer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/**
* An HTTP endpoint that acts as a webhook for HTTP(S) request event
* @returns {object.http} result
*/&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.youtube.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a#video-title-link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;screenshot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image/png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To make the screenshot return as an image rather than just binary data, we must pass back the proper &lt;code&gt;Content-Type&lt;/code&gt; header. The above code is an example of how to do this in Autocode with the &lt;code&gt;object.http&lt;/code&gt; return type. To return other types of data, you'll need to remove the return type or change the return type to match the type of data you're returning. For more information, you can read about the &lt;a href="https://github.com/functionscript/functionscript#types"&gt;FunctionScript specification&lt;/a&gt; Autocode uses for parameters and return types.&lt;/p&gt;

&lt;p&gt;If you were to try running the above code a few times, you would notice that the screenshot is either not changing from the main page, or that you'd see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dmvuQCQy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i0rkb9ecaa3i1r9832ag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dmvuQCQy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i0rkb9ecaa3i1r9832ag.png" alt="Loading state"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This would clue you in to the fact that you need to wait for parts of the page to load using something like &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v5.5.0&amp;amp;show=api-pagewaitforselectorselector-options"&gt;&lt;code&gt;page.waitForSelector()&lt;/code&gt;&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// authenticates you with the API standard library&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;&lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STDLIB_SECRET_TOKEN&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;autocode-puppeteer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/**
* An HTTP endpoint that acts as a webhook for HTTP(S) request event
* @returns {object.http} result
*/&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.youtube.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a#video-title-link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitForSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#top-level-buttons&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;screenshot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image/png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Other use-cases include combining screenshots with the &lt;a href="https://docs.autocode.com/getting-started/creating-your-first-project/the-autocode-scheduler/"&gt;Autocode scheduler&lt;/a&gt;, a file hosting platform like &lt;a href="https://box.com"&gt;Box&lt;/a&gt;, and a package like &lt;a href="https://github.com/mapbox/pixelmatch"&gt;pixelmatch&lt;/a&gt; to create daily screenshot diffs for regression testing.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#other-tips" class="anchor"&gt;
  &lt;/a&gt;
  Other Tips
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#tuning-your-scraper" class="anchor"&gt;
  &lt;/a&gt;
  Tuning Your Scraper
&lt;/h2&gt;

&lt;p&gt;The web is a wild place, and new standards are appearing all the time. If a technique doesn't work the way you expect on a first attempt, you may need to try a different method, like waiting for a selector or even just waiting for a set amount of time rather than a &lt;code&gt;DOMContentLoaded&lt;/code&gt; event, or using a different selector. Luckily, Puppeteer has plenty of options!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#increasing-your-autocode-timeout" class="anchor"&gt;
  &lt;/a&gt;
  Increasing Your Autocode Timeout
&lt;/h2&gt;

&lt;p&gt;Complicated flows that involve visiting multiple pages or flows that visit slow pages may require more than the default 10 second timeout on Autocode. If your scraper is consistently timing out, you can try increasing the timeout under &lt;strong&gt;Advanced Settings&lt;/strong&gt; in the bottom left corner of the Autocode editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6FXJ7Cl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0aliamwshsebmvzb58xt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6FXJ7Cl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0aliamwshsebmvzb58xt.png" alt="Increasing your Autocode timeout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free accounts can increase their timeouts to up to 30 seconds, while &lt;a href="https://autocode.com/pricing"&gt;Professional Tier accounts&lt;/a&gt; can go up to 2 minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simulating-loggedin-states-advanced" class="anchor"&gt;
  &lt;/a&gt;
  Simulating Logged-In States (Advanced)
&lt;/h2&gt;

&lt;p&gt;Many websites show different data based on whether or not the current viewer is logged in. To simulate this state in Puppeteer, you might be able to use the &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v5.5.0&amp;amp;show=api-pagesetcookiecookies"&gt;&lt;code&gt;page.setCookie()&lt;/code&gt;&lt;/a&gt; method using cookies obtained from the Chrome devtools. You can also attempt to use and submit a site's login form directly with your username and password, but many sites use CAPTCHAs to prevent this.&lt;/p&gt;

&lt;p&gt;Be careful not to set cookies under the wrong domain if you try this!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#limitations" class="anchor"&gt;
  &lt;/a&gt;
  Limitations
&lt;/h1&gt;

&lt;p&gt;Because web scrapers usually rely on the structure of the DOM for pages they visit, frontend updates can break scrapers. For this reason, it's often better to use a supported API if it is available to you. &lt;/p&gt;

&lt;p&gt;If your desired data follows a specific format and the page you're scraping obfuscates their CSS attributes or changes them frequently, Puppeteer does have a &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v5.5.0&amp;amp;show=api-pagecontent"&gt;&lt;code&gt;page.content()&lt;/code&gt;&lt;/a&gt; method that returns the current DOM structure of the page as a string. You can then use a regex or some other method to extract your data.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thank-you" class="anchor"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h1&gt;

&lt;p&gt;Puppeteer is an extremely powerful tool, and if you're interested in a deeper dive, I would encourage you to check out &lt;a href="https://pptr.dev"&gt;the official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, a good place to get in touch with me is the Autocode community Slack channel. You can get an invite under &lt;strong&gt;Docs &amp;gt; Ask for Help in Slack&lt;/strong&gt; in the topbar on autocode.com. You can also reach out to me on Twitter &lt;a href="https://twitter.com/Hacubu"&gt;@Hacubu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to stay up to date on the latest from Autocode, I would also encourage you to follow &lt;a href="https://twitter.com/AutocodeHQ"&gt;@AutocodeHQ&lt;/a&gt;. Happy hacking!&lt;/p&gt;

</description>
      <category>webscraping</category>
      <category>node</category>
      <category>puppeteer</category>
      <category>autocode</category>
    </item>
  </channel>
</rss>
