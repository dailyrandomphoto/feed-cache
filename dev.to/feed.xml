<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build a Blog App with React —Building Components (Part 2)</title>
      <author>Kumar Shubham</author>
      <pubDate>Wed, 16 Jun 2021 07:30:26 +0000</pubDate>
      <link>https://dev.to/shubham1710/build-a-blog-app-with-react-building-components-part-2-38ho</link>
      <guid>https://dev.to/shubham1710/build-a-blog-app-with-react-building-components-part-2-38ho</guid>
      <description>&lt;p&gt;Hello everyone! So, this is going to be the second part of the new React blog app series I have started. In the first part, we discussed how we could start a new React project, and we learnt how to set up a Git repository to track our changes. Also, we had a look at the package.json file.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Notice&lt;/strong&gt;: I will publish the complete detailed version of all the articles on the Medium website. Here I will give an overview and give the codes for the various pages part by part.&lt;br&gt;
So, &lt;a href="https://javascript.plainenglish.io/build-a-blog-app-with-react-building-components-part-2-5b079c7da924?sk=9e243d750f3576e967464f210905356f"&gt;please click here to go to Medium and read it in completion&lt;/a&gt;. &lt;em&gt;(These are friend links so do not worry about paywall)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, in the second part, we would start the actual building process. We would now begin to build out components. All of our work would go inside the src folder.&lt;/p&gt;

&lt;p&gt;We would follow a modular approach while building our project to separate all of our different tasks into different files not to clutter.&lt;/p&gt;

&lt;p&gt;We would use BrowserRouter to help us have different pages with different URLs for various sections of our website and link them inside the App.js file.&lt;/p&gt;

&lt;p&gt;So, we will have various components, which we would build one by one in this article and coming articles.&lt;/p&gt;

&lt;p&gt;So, let’s have a quick overview of what all files we are going to build and what purpose would each serve:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;App.js — It is the main component of our app. It uses BrowserRouter to link all our different pages and give them paths and components to load for that page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Home.js — It is the homepage of our blog website and would show all the blogs in a list format. It does not contain the logic to display blogs in list format, but it calls the BlogList component and pass in the blogs to that component to display the blogs. The home component fetches the blogs using a useFetch custom hook we would create later. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BlogList.js — It receives the blogs from the Home component and displays them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BlogDetails.js — It is the component that fetches a single blog and displays it on a separate page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create.js — This is where you would create new blogs and add them to the previous blogs list.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Navbar.js — This is the Navbar component that would display the navbar on each page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NotFound.js — This is the page we would load if the user lands on a page that does not exist. It would be a 404 Error page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;index.js — It is the default file that loads up our App.js file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;useFetch.js — This is the custom hook we would create to fetch the data from the local JSON server we would be making.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;index.css — This is the CSS file that would hold all our styles. We would not be focusing on that part since it is not a CSS tutorial.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, I would now start to build the components one by one. So, let’s begin.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#home-component"&gt;
  &lt;/a&gt;
  Home Component
&lt;/h3&gt;

&lt;p&gt;It is the component to display the homepage of our Blog website. We will import the BlogList component and the useFetch custom hook in our home component file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BlogList&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./BlogList&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./useFetch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isPending&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:8000/blogs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isPending&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Loading...&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BlogList&lt;/span&gt; &lt;span class="na"&gt;blogs&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blogs&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"All Blogs"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bloglist-component"&gt;
  &lt;/a&gt;
  BlogList Component
&lt;/h3&gt;

&lt;p&gt;Next up, we would like to discuss the BlogList component. We called the BlogList component in the Home component, and we passed in the blogs and a title to be displayed through this component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BlogList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;blogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blog-list"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blogs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blog-preview"&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/blogs/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Written by &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;BlogList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, this will be all for the second part. We would deal with BlogDetails and the Create components and the useFetch custom hook in the next part.&lt;/p&gt;

&lt;p&gt;I hope you liked this part, and I will be writing the next parts soon. I hope you are excited and have been able to learn something good.&lt;/p&gt;

&lt;p&gt;To read the complete tutorial, please &lt;a href="https://javascript.plainenglish.io/build-a-blog-app-with-react-building-components-part-2-5b079c7da924?sk=9e243d750f3576e967464f210905356f"&gt;move to Medium and read the complete article&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Build a Blog App with React — Intro, and Set-Up (Part 1)</title>
      <author>Kumar Shubham</author>
      <pubDate>Wed, 16 Jun 2021 07:23:28 +0000</pubDate>
      <link>https://dev.to/shubham1710/build-a-blog-app-with-react-intro-and-set-up-part-1-24b</link>
      <guid>https://dev.to/shubham1710/build-a-blog-app-with-react-intro-and-set-up-part-1-24b</guid>
      <description>&lt;p&gt;Hello everyone! The best way to learn something is by doing. So, let’s build a simple Blog app using React to understand how things work. We won’t be making a very feature-rich blogging website with cool designs and all. Instead, it would be simple — to serve the purpose of learning.&lt;/p&gt;

&lt;p&gt;It would be a simple blog website with very few functionalities, enabling you to learn better.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Notice&lt;/strong&gt;: I will publish the complete detailed version of all the articles on the Medium website. Here I will give an overview and give the codes for the various pages part by part.&lt;br&gt;
So, &lt;a href="https://javascript.plainenglish.io/build-a-blog-app-with-react-intro-and-set-up-part-1-ddf5c674d25b?sk=91a21788d09b66cacaa59a31ccbac42b"&gt;please click here to go to Medium and read it in completion&lt;/a&gt;. &lt;em&gt;(These are friend links so do not worry about paywall)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The features we are going to build into this blog are:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fetching blogs from a local JSON server and displaying the blogs in list form.&lt;/li&gt;
&lt;li&gt;Fetching details about individual blogs and displaying them.&lt;/li&gt;
&lt;li&gt;Adding new blogs.&lt;/li&gt;
&lt;li&gt;Deleting blogs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It would be pure React, and we will not be using any backend server for this blogging website. So, the changes we make, i.e. the blogs we delete or add, will reset once the page is refreshed. So, it won’t be saving any data on any server.&lt;/p&gt;

&lt;p&gt;This article series is aimed at beginners currently, so we would go into all the things In detail so that you can understand how things work and will be able to implement more features into it.&lt;/p&gt;

&lt;p&gt;In the initial phase of this tutorial series, we will only use React with no backend or cloud to store any data. It all gets reset once we refresh the page.&lt;/p&gt;

&lt;p&gt;But, later on, I plan to add a backend to this React project to make it full-stack. We will use Express, Node.js, and MongoDB to build the backend for this application and then connect the front-end and back-end.&lt;/p&gt;

&lt;p&gt;Furthermore, if the article series gets a good response, I would add some more features into the series with more parts, including authentication and some other features to make it more practical. But we keep these things for a later date and may or may not be added.&lt;/p&gt;

&lt;p&gt;So, let’s focus on the initial phase for now, which is primarily aimed at beginners.&lt;/p&gt;

&lt;p&gt;So, let’s start by installing Node Package Manager (npm) into our machine. You can do it by going to the npm website.&lt;/p&gt;

&lt;p&gt;After installing npm, let’s move to our desired directory to start building our project.&lt;/p&gt;

&lt;p&gt;We would be using create-react-app for building our React project. To do so, we can type the following command on our terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app react-blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, npx is a package runner tool that comes bundled with npm. So, the above line creates a new React project inside of a folder named react-blog.&lt;/p&gt;

&lt;p&gt;It will also create a basic React program. We see there is a package.json file in there. Also, we have node modules, a folder named src, and a public folder.&lt;/p&gt;

&lt;p&gt;Most of our work would be done within the src folder. Here is our package.json file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;private&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dependencies&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@testing-library/jest-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^5.11.4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@testing-library/react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^11.1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@testing-library/user-event&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^12.1.10&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^17.0.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^17.0.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^5.2.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4.0.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;web-vitals&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^0.2.4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts eject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eslintConfig&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;extends&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-app/jest&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;browserslist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;0.2%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;not dead&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;not op_mini all&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;last 1 chrome version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;last 1 firefox version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;last 1 safari version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the package.json file, we find that we have many dependencies which React requires to work. Create React App has already installed those for us. We also have various scripts to perform various functionalities in the project.&lt;/p&gt;

&lt;p&gt;E.g., Running the command npm start will start the development server for us and open our React app in the browser.&lt;/p&gt;

&lt;p&gt;When we run the command, we see the React website, pre-built with the Create React App. We would be removing all of those pre-built content and would then start building our own blog website.&lt;/p&gt;

&lt;p&gt;We would also set up a Github Repository for our project, which we would keep updating after every change to keep track of changes and revert to a previous state if something goes wrong. It is a great practice to follow while working on any project.&lt;/p&gt;

&lt;p&gt;So, let’s build a new Repository on Github, and we name it react-blog. We then initialise a new Git Repo in our project folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We then link this with the Github repository using this command:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin your-repo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We then add our existing files to the git repo we initialised earlier. We can do this by:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add -A
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we make a commit into the Git repository by:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "First commit"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we can push all our local Git Repositories to the Github repository by writing:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are ready to start building the project. So, we have to repeat these three steps — &lt;code&gt;git add&lt;/code&gt; , &lt;code&gt;git commit&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; to update our repository after each significant change we make.&lt;/p&gt;

&lt;p&gt;So, this was all for the first part. We would start building our blog project from the next part onwards and discussing everything important in detail.&lt;/p&gt;

&lt;p&gt;I hope you liked this new series being started. I hope you are excited about this new series, and I would love to hear feedback from you.&lt;/p&gt;

&lt;p&gt;To read the complete tutorial, please &lt;a href="https://javascript.plainenglish.io/build-a-blog-app-with-react-intro-and-set-up-part-1-ddf5c674d25b?sk=91a21788d09b66cacaa59a31ccbac42b"&gt;move to Medium and read the complete article&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>SSH into your EC2 instances</title>
      <author>Ajit Singh</author>
      <pubDate>Wed, 16 Jun 2021 06:36:22 +0000</pubDate>
      <link>https://dev.to/this-is-learning/ssh-your-ec2-instances-4df6</link>
      <guid>https://dev.to/this-is-learning/ssh-your-ec2-instances-4df6</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-ssh"&gt;
  &lt;/a&gt;
  What is ssh?
&lt;/h1&gt;

&lt;p&gt;SSH is a remote management protocol through which you connect to your remote servers and modify them. This allows you to access your remote servers securely. &lt;/p&gt;

&lt;p&gt;So let us see how we can connect with our EC2 instances securely using SSH&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First see what your public IP address is from your ec2-instance.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PubvT4-k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1n60obliashc7b6uz6zk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PubvT4-k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1n60obliashc7b6uz6zk.png" alt="Instance details"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After that if you are a Linux or Mac user open your terminal and run the following command ssh username@public-ip for me the public IP is 13.233.33.232 and default ec2 user is &lt;code&gt;ec2-user&lt;/code&gt; so the final command becomes&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh ec2-user@13.233.33.232
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Once you run it you will get the following message
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;The authenticity of host '13.233.33.232 (13.233.33.232)' can't be established.
ECDSA key fingerprint is SHA256:BudJr8YMxFu8ylCGragb1BfW04/VI6+hX017siHF19w.
Are you sure you want to continue connecting (yes/no/[fingerprint])?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Type yes and agree to it. After this you will get a message like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Warning: Permanently added '13.233.33.232' (ECDSA) to the list of known hosts.
ec2-user@13.233.33.232: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's still not working but that is a good thing because if this allows us to ssh then anyone can ssh into our EC2 instance if he knows our public IP.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the last exercise we downloaded a pem file while creating our EC2 instance we need to use that pem file to login into out EC2 instance. to use that we run ssh -i path-to-file username@public-ip
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh &lt;span class="nt"&gt;-i&lt;/span&gt; EC2test.pem ec2-user@13.233.33.232
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It will still not allow you to signin and because permissions are to open. This is because right now our EC2 test.pem file permissions 0644 which allows any user to write on it. EC2 is complaining that even the root user should have read only permission so that no one can change our key file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This can be easily resolved just do&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;chmod &lt;/span&gt;400 EC2test.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Which resolves the permissions issue now run the above command again.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh &lt;span class="nt"&gt;-i&lt;/span&gt; EC2test.pem ec2-user@13.233.33.232
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now you will be logged into your ec2 instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is it for how to remote access to your ec2 instance. In the next article in the series we will study more about the different EC2 instances and there advantages.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>[22] Top 10 Must-Have Web Dev Tools – June 2021</title>
      <author>MV</author>
      <pubDate>Wed, 16 Jun 2021 06:28:18 +0000</pubDate>
      <link>https://dev.to/villivald/22-top-10-must-have-web-dev-tools-june-2021-1aj</link>
      <guid>https://dev.to/villivald/22-top-10-must-have-web-dev-tools-june-2021-1aj</guid>
      <description>&lt;p&gt;It's been a month since the last post, so it means it's time to continue my &lt;a href="https://www.create-react-app.com/tags/top"&gt;blog post series&lt;/a&gt; - Top 10 Best Web Dev Tools. Every month I am trying to pick the most intriguing and handy instruments that, I believe, are must-haves for every web developer. This time there are:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-eleventy"&gt;
  &lt;/a&gt;
  1). Eleventy
&lt;/h2&gt;

&lt;p&gt;Eleventy is a well-known and gaining momentum &lt;a href="https://jamstack.org/generators/"&gt;static site generator&lt;/a&gt;. I have recently moved &lt;a href="https://www.create-react-app.com/"&gt;my blog&lt;/a&gt; from WordPress to Eleventy, and it was the best decision to make in terms of performance and accessibility. Here is the &lt;a href="https://crappblog.netlify.app/blog-on-vercel/"&gt;latest Lighthouse score&lt;/a&gt; as confirmation of my words.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--trfYU01R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/11ty.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--trfYU01R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/11ty.webp" alt="eleventy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.11ty.dev/"&gt;https://www.11ty.dev/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-drawkit"&gt;
  &lt;/a&gt;
  2). DrawKit
&lt;/h2&gt;

&lt;p&gt;DrawKit is a superb resource for picking free illustrations and icons for your next project. I came across it when looking for illustrations for my last &lt;a href="https://vaccine2021.vercel.app/"&gt;project&lt;/a&gt; and was pleasantly surprised by its quality.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YPUho41v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/drawkit.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YPUho41v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/drawkit.webp" alt="drawkit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.drawkit.io/"&gt;https://www.drawkit.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-git-command-explorer"&gt;
  &lt;/a&gt;
  3). Git Command Explorer
&lt;/h2&gt;

&lt;p&gt;Actually, Git Command Explorer could be an even more comprehensive and simple tool than the much more famous &lt;a href="https://ohshitgit.com/"&gt;Oh Shit, Git!?!&lt;/a&gt; I mentioned in an &lt;a href="https://dev.to/villivald/14-the-15-best-developer-resources-in-2020-18mn"&gt;earlier post&lt;/a&gt; last year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ShGPt6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/gitexplorer.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ShGPt6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/gitexplorer.webp" alt="git explorer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gitexplorer.com/"&gt;https://gitexplorer.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-faviconio"&gt;
  &lt;/a&gt;
  4). favicon.io
&lt;/h2&gt;

&lt;p&gt;Here I'd like to quote their official website: &lt;em&gt;The only favicon generator you need for your next project&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Y67zGC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/faviconio.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Y67zGC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/faviconio.webp" alt="Top 10 Must-Have Web Dev Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://favicon.io/"&gt;https://favicon.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-create-app"&gt;
  &lt;/a&gt;
  5). Create App
&lt;/h2&gt;

&lt;p&gt;Create App is an alternative way of creating boilerplate for a modern web app. You can choose between React, Vue, Svelte or vanilla JS, and Webpack, Parcel, and Snowpack as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UpXtQkh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/createapp.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UpXtQkh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/createapp.webp" alt="create app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://createapp.dev/"&gt;https://createapp.dev/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-svg-porn"&gt;
  &lt;/a&gt;
  6). SVG PORN
&lt;/h2&gt;

&lt;p&gt;Quality vector logos for every need. I was using them for a while on my &lt;a href="https://villivald.com/"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Ck1UqXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/svgporn.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Ck1UqXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/svgporn.webp" alt="svg porn"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://svgporn.com/"&gt;https://svgporn.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-pixel-art-to-css"&gt;
  &lt;/a&gt;
  7). PIXEL ART TO CSS
&lt;/h2&gt;

&lt;p&gt;As for that tool, I haven't found a particular application in practice, but it's just a very amusing project which I would like to share with you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w62sFBiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/pixelart.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w62sFBiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/pixelart.webp" alt="pixel art to css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pixelartcss.com/"&gt;https://www.pixelartcss.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-devhintsio"&gt;
  &lt;/a&gt;
  8). Devhints.io
&lt;/h2&gt;

&lt;p&gt;Pretty useful author's selection of cheatsheets dealing with various topics, such as CSS, DevOps, JS, React, Rails, you name it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fcf6ixZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/devhints.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fcf6ixZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/devhints.webp" alt="devhints"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devhints.io/"&gt;https://devhints.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-bigo-cheat-sheet"&gt;
  &lt;/a&gt;
  9). Big-O Cheat Sheet
&lt;/h2&gt;

&lt;p&gt;This webpage visually covers space and time Big-O complexities of common algorithms used in Computer Science. Also available as a &lt;a href="https://www.bigocheatsheet.com/pdf/big-o-cheatsheet.pdf"&gt;PDF&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0HP4MfL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/bigo.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0HP4MfL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/bigo.webp" alt="big o cheatsheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bigocheatsheet.com/"&gt;https://www.bigocheatsheet.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-onelangio"&gt;
  &lt;/a&gt;
  10). Onelang.io
&lt;/h2&gt;

&lt;p&gt;Onelang is an impressive online IDE tool that allows you to transpile code from one language to another in seconds. At the moment, they have support for TypeScript, Perl, Ruby, C++, C#, PHP, Swift, Go, Java, Python, and JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iFoh58xn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/onelang.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iFoh58xn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reverent-carson-67c52e.netlify.app/static/img/images/22/onelang.webp" alt="onelang"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ide.onelang.io/"&gt;https://ide.onelang.io/&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.create-react-app.com/posts/2021-06-15-top-10-web-dev-tools-06-2021/"&gt;Original post @ create-react-app.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Site &lt;a href="https://villivald.com/"&gt;https://villivald.com/&lt;/a&gt;&lt;br&gt;
GitHub &lt;a href="https://github.com/villivald"&gt;https://github.com/villivald&lt;/a&gt;&lt;br&gt;
Twitter &lt;a href="https://twitter.com/crapp_blog"&gt;https://twitter.com/crapp_blog&lt;/a&gt;&lt;br&gt;
Hashnode &lt;a href="https://proj.ninja"&gt;https://proj.ninja&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is a Product Requirements Document (PRD) &amp; How to Create it? </title>
      <author>Lina</author>
      <pubDate>Wed, 16 Jun 2021 05:32:47 +0000</pubDate>
      <link>https://dev.to/lina29621930/what-is-a-product-requirements-document-prd-how-to-create-it-54ph</link>
      <guid>https://dev.to/lina29621930/what-is-a-product-requirements-document-prd-how-to-create-it-54ph</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-product-requirements-documentprd"&gt;
  &lt;/a&gt;
  What is a Product Requirements Document(PRD)?
&lt;/h2&gt;

&lt;p&gt;A product requirements document describes the product you are about to build in detail. It outlines the purpose of building the product, its intended use case(s), features, functionalities, and the timeline of building the product. All in all, it describes an overall vision of what the team is about to build.&lt;/p&gt;

&lt;p&gt;A &lt;a href="https://blog.bit.ai/product-requirements-document/"&gt;product requirements document&lt;/a&gt; ensures that the product development team and other stakeholders (clients, partners, etc.) are on the same page about what needs to be built and are completely aware of the use case, goal, scope, features, functional requirements, challenges, and budget regarding the product.&lt;/p&gt;

&lt;p&gt;A product requirement document provides a &lt;a href="https://blog.bit.ai/how-to-create-a-product-roadmap/"&gt;roadmap for the entire product team&lt;/a&gt; and acts as a guide they can refer to whenever they get stuck during the product development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-product-requirements-documentprd"&gt;
  &lt;/a&gt;
  How to Create a Product Requirements Document(PRD)?
&lt;/h2&gt;

&lt;p&gt;A typical product requirements document should involve the following details:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Target Release Date&lt;/strong&gt;: Add the target release date for the product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;: Give the context of how this project fits into the organization’s strategic goals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vision&lt;/strong&gt;: Describe in detail where you want your product to be in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt;: List product goals including their time frame, and success metrics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initiatives&lt;/strong&gt;: List high-level product initiatives&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Persona(s)&lt;/strong&gt;: Describe who the product is for.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Release‍&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;+Date&lt;br&gt;
+Initiative&lt;br&gt;
+Milestones&lt;br&gt;
+Features&lt;br&gt;
+Dependencies&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;: Include the features added&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Flow and design&lt;/strong&gt;: Insert wire-frames and mock-ups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Analytics&lt;/strong&gt;: Key Performance Indicators (KPIs) to study&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up!
&lt;/h3&gt;

&lt;p&gt;The product requirements document is core to &lt;a href="https://fullscale.io/blog/how-to-build-software-products/"&gt;building a great product&lt;/a&gt; and serves as a living document for any product developer, or any other stakeholder to follow the purpose and status of the product.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Animated 404 Page</title>
      <author>Prince Jaiswal</author>
      <pubDate>Wed, 16 Jun 2021 05:32:01 +0000</pubDate>
      <link>https://dev.to/knolcoder/animated-404-page-2np8</link>
      <guid>https://dev.to/knolcoder/animated-404-page-2np8</guid>
      <description>&lt;p&gt;First we need to know what is 404 Page ?&lt;/p&gt;

&lt;p&gt;The HTTP 404, 404 Not Found, 404, 404 Error, Page Not Found or File Not Found error message is a Hypertext Transfer Protocol standard response code, in computer network communications, to indicate that the browser was able to communicate with a given server, but the server could not find what was requested.&lt;/p&gt;




&lt;p&gt;Now! we will make a 404 page .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-code-"&gt;
  &lt;/a&gt;
  Html Code :-
&lt;/h2&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"page_404"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;   
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-sm-12 "&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-sm-10 col-sm-offset-1  text-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"four_zero_four_bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-center "&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;404&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;


        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"contant_box_404"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Look like you're lost
        &lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;the page you are looking for not avaible!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link_404"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go to Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#after-adding-html-it-will-look-like-this-"&gt;
  &lt;/a&gt;
  After Adding Html It Will Look Like this :-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fNkgYqYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47mf1gdks3ncctaospj3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fNkgYqYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47mf1gdks3ncctaospj3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-css-code-"&gt;
  &lt;/a&gt;
  Now Css Code :-
&lt;/h2&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="c"&gt;/*======================
    404 page
=======================*/&lt;/span&gt;


&lt;span class="nc"&gt;.page_404&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Arvo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.page_404&lt;/span&gt;  &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;

&lt;span class="nc"&gt;.four_zero_four_bg&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

 &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;


 &lt;span class="nc"&gt;.four_zero_four_bg&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.four_zero_four_bg&lt;/span&gt; &lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
             &lt;span class="p"&gt;}&lt;/span&gt;

             &lt;span class="nc"&gt;.link_404&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;          
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#39ac31&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
    &lt;span class="nc"&gt;.contant_box_404&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;-50px&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After Adding Html , Css It Will Look Like This .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RjKVHMBF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vozoozugw9f2thimb2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RjKVHMBF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vozoozugw9f2thimb2h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Multiple destructors with C++ concepts</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 16 Jun 2021 05:20:23 +0000</pubDate>
      <link>https://dev.to/sandordargo/multiple-destructors-with-c-concepts-14m2</link>
      <guid>https://dev.to/sandordargo/multiple-destructors-with-c-concepts-14m2</guid>
      <description>&lt;p&gt;We probably all learnt that one cannot overload the destructor. Hence I write about &lt;strong&gt;&lt;em&gt;"the"&lt;/em&gt;&lt;/strong&gt; destructor and &lt;em&gt;a&lt;/em&gt; destructor... After all, it has no return type and it doesn't take parameters. It's also not really &lt;code&gt;const&lt;/code&gt; as it destroys the underlying object.&lt;/p&gt;

&lt;p&gt;Yet, there were techniques existing to have multiple destructors in a class and those techniques are getting simplified with C++20.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-need-for-multiple-destructors"&gt;
  &lt;/a&gt;
  The need for multiple destructors
&lt;/h1&gt;

&lt;p&gt;But first of all, why would you need multiple destructors?&lt;/p&gt;

&lt;p&gt;For optimization reasons for example! &lt;/p&gt;

&lt;p&gt;Imagine that you have a class template and you want to have destruction depending on the traits of the template parameters. Trivially destructible types can work with the compiler-generated destructor and it's much faster than the user-defined ones...&lt;/p&gt;

&lt;p&gt;Also, while RAII is great and we should write our classes by default with that paradigm having in mind, with a good wrapper we can make non-RAII classes at least to do the clean-up after themselves.&lt;/p&gt;

&lt;p&gt;These are already two reasons to have multiple destructors, but I'm sure you can name others, feel free to do so in the comments section.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#multiple-destructors-before-c20"&gt;
  &lt;/a&gt;
  Multiple destructors before C++20
&lt;/h1&gt;

&lt;p&gt;So how to do this?&lt;/p&gt;

&lt;p&gt;As I've learned from &lt;a href="https://www.youtube.com/watch?v=A3_xrqr5Kdw"&gt;C++ Weekly&lt;/a&gt;, you can use &lt;a href="https://en.cppreference.com/w/cpp/types/conditional"&gt;std::conditional&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.cppreference.com/w/cpp/types/conditional"&gt;std::conditional&lt;/a&gt; lets us choose between two implementation at compile-time. If the condition that we pass in as a first parameter evaluates to &lt;code&gt;true&lt;/code&gt;, then the whole call is replaced with the second parameter, otherwise with the third.&lt;/p&gt;

&lt;p&gt;Here comes the example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
#include &amp;lt;type_traits&amp;gt;
&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Wrapper_Trivial&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper_Trivial&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Wrapper_NonTrivial&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper_NonTrivial&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Not trivial&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Wrapper&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conditional_t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_trivially_destructible_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Wrapper_Trivial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Wrapper_NonTrivial&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wrappedInt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wrappedString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, our &lt;code&gt;Wrapper&lt;/code&gt; class doesn't include a destructor, but it inherits it either from &lt;code&gt;Wrapper_Trivial&lt;/code&gt; or &lt;code&gt;Wrapper_NonTrivial&lt;/code&gt; based on a condition, based on whether the contained type &lt;code&gt;T&lt;/code&gt; is trivially destructible or not.&lt;/p&gt;

&lt;p&gt;It's a bit ugly, almost write-only code. Plus supporting the second case - cleanup after non-RAII code - is even uglier.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#multiple-destructors-with-c20"&gt;
  &lt;/a&gt;
  Multiple destructors with C++20
&lt;/h1&gt;

&lt;p&gt;C++ concepts help us to simplify the above example. Still with no run-time costs, and probably with cheaper write costs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
#include &amp;lt;type_traits&amp;gt;
&lt;/span&gt;
&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Wrapper&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nl"&gt;public:&lt;/span&gt;    
    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;requires&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_trivially_destructible_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Not trivial&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wrappedInt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wrappedString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
Not trivial
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We still have a class template, but instead of using the cumbersome to decipher &lt;code&gt;std::conditional&lt;/code&gt;, first, we wrote a destructor with a &lt;code&gt;requires&lt;/code&gt; clause. Then we defaulted the unconstrained one.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;requires&lt;/code&gt; clause, we constrain that implementation so that the wrapped type cannot be trivially destructible.&lt;/p&gt;

&lt;p&gt;The above example &lt;a href="//godbolt.org/z/rKeETW5jE"&gt;works fine with gcc&lt;/a&gt;. We receive the expected output. On the other hand, if you try to compile it &lt;a href="//godbolt.org/z/rqME8W1rn"&gt;with the latest clang&lt;/a&gt; (as of June 2021, when this article was written), you get a swift compilation error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;:&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;invalid&lt;/span&gt; &lt;span class="n"&gt;reference&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;constraints&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;satisfied&lt;/span&gt;
    &lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wrappedInt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                 &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;because&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_trivially_destructible_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="n"&gt;evaluated&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;requires&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_trivially_destructible_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;generated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;ASM&lt;/span&gt; &lt;span class="n"&gt;generation&lt;/span&gt; &lt;span class="n"&gt;compiler&lt;/span&gt; &lt;span class="n"&gt;returned&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;:&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;invalid&lt;/span&gt; &lt;span class="n"&gt;reference&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;constraints&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;satisfied&lt;/span&gt;
    &lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wrappedInt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                 &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;because&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_trivially_destructible_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="n"&gt;evaluated&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;requires&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_trivially_destructible_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;generated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Basically, the error message says that the code is not compilable, because &lt;code&gt;int&lt;/code&gt; is trivially destructible, therefore it doesn't satisfy the requirements of the first destructor which requires a not trivially destructible type.&lt;/p&gt;

&lt;p&gt;It's sad because &lt;code&gt;int&lt;/code&gt; should use the other destructor...&lt;/p&gt;

&lt;p&gt;While I was looking at the code, I realized that I dislike something about it - apart from the compilation failure. We started with the most specific, with the most constrained overload, instead of going from the general implementation towards the specific.&lt;/p&gt;

&lt;p&gt;So I updated the order of the two destructors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
#include &amp;lt;type_traits&amp;gt;
&lt;/span&gt;
&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Wrapper&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nl"&gt;public:&lt;/span&gt;     
    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;requires&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_trivially_destructible_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Not trivial&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wrappedInt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Wrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wrappedString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lo and behold! It compiles with clang! But it doesn't produce the expected output. In fact, what happens is that just like previously, only the first declared destructor is taken into account.&lt;/p&gt;

&lt;p&gt;We can draw the conclusion that clang doesn't support - yet - multiple destructors and cannot handle concepts well in the context of destructors. &lt;a href="https://twitter.com/GeekyMrK"&gt;Mr. K.&lt;/a&gt; - who we were experimenting with - &lt;a href="https://bugs.llvm.org/show_bug.cgi?id=50570"&gt;filed a bug for LLVM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Just for the note, I asked a colleague who was access to MSVCC, the above examples work fine not only with gcc but with the MS compiler too.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Today we learned that while in general, a class should always have one destructor, for class templates there have been ways to provide different implementations for that destructor based on the characteristics of template arguments.&lt;/p&gt;

&lt;p&gt;The old way of doing this is using &lt;code&gt;std::conditional&lt;/code&gt;, but it's not as readable as using C++20 concepts.&lt;/p&gt;

&lt;p&gt;We have also seen that while C++20 provides an extremely readable way to do this, it's not yet fully supported not even by all the major compilers. gcc and msvcc provide a correct implementation, but clang is a bit behind on this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you want to learn more details about C++ concepts, &lt;a href="https://leanpub.com/cppconcepts"&gt;check out my book on Leanpub&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cpp</category>
      <category>cpp20</category>
      <category>concepts</category>
      <category>templates</category>
    </item>
    <item>
      <title>Python's Collections Module:  OrderedCounter</title>
      <author>Kathan Vakharia</author>
      <pubDate>Wed, 16 Jun 2021 05:19:05 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/python-s-collections-module-ordered-counter-2nhc</link>
      <guid>https://dev.to/kathanvakharia/python-s-collections-module-ordered-counter-2nhc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-we-trying-to-achieve"&gt;
  &lt;/a&gt;
  What are we trying to achieve?
&lt;/h2&gt;

&lt;p&gt;If you recall from last post, here's the Method Resolution Order of Counter class:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4GT0xu_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgo2kaaynbi3gcfbj073.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4GT0xu_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgo2kaaynbi3gcfbj073.png" alt="image"&gt;&lt;/a&gt;There's no way we can swap the priority order. One option is to be cheeky 😛 and make use of the &lt;code&gt;__repr__&lt;/code&gt; method of &lt;code&gt;builtins.dict&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#option1-casting-a-raw-counter-endraw-object-to-raw-dict-endraw-"&gt;
  &lt;/a&gt;
  Option1: Casting a &lt;code&gt;Counter&lt;/code&gt; Object to &lt;code&gt;dict&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;By casting the &lt;code&gt;Counter&lt;/code&gt; to &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;print&lt;/code&gt; will use&lt;code&gt;__repr__&lt;/code&gt; method of &lt;code&gt;dict&lt;/code&gt; which will make sure, order is maintained!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zgH-8SpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vczzpb5d6p0g6v89ddp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zgH-8SpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vczzpb5d6p0g6v89ddp.png" alt="image"&gt;&lt;/a&gt;But this doesn't draw the idea home, I mean what if a novice looks at this code? He has no idea why we are casting the &lt;code&gt;Counter&lt;/code&gt; to &lt;code&gt;dict&lt;/code&gt;. &lt;br&gt;
So a better approach would be to create our own custom &lt;code&gt;Ordered_Counter&lt;/code&gt; class for &lt;em&gt;clarity&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#option-2-creating-a-custom-raw-orderedcounter-endraw-class"&gt;
  &lt;/a&gt;
  Option 2: Creating a custom &lt;code&gt;OrderedCounter&lt;/code&gt; class
&lt;/h2&gt;

&lt;p&gt;We can create a class that inherits from &lt;code&gt;Counter&lt;/code&gt; and implement it's &lt;code&gt;__repr__&lt;/code&gt; method, &lt;/p&gt;

&lt;p&gt;The idea is still the same: cast the &lt;code&gt;Counter&lt;/code&gt; to &lt;code&gt;dict&lt;/code&gt; but this time by providing &lt;em&gt;abstraction&lt;/em&gt; and thereby improving the &lt;em&gt;readability&lt;/em&gt; of code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrderedCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;'Counter that remembers the order elements are first encountered'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                        &lt;span class="c1"&gt;# casting 'self' to dict will do the job
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'%s(%r)'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__reduce__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the instantiation(creation) of &lt;code&gt;OrderedCounter&lt;/code&gt; Object will be done by the &lt;code&gt;__init__&lt;/code&gt; method of &lt;code&gt;Counter&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;__reduce__&lt;/code&gt; method implementaton is necessary for 'PICKLING' purpose which we will discuss in some other post. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-orderedcounter-endraw-in-action"&gt;
  &lt;/a&gt;
  &lt;code&gt;OrderedCounter&lt;/code&gt; in action!
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# creating Ordered Counters
&lt;/span&gt;&lt;span class="n"&gt;ordered_c0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OrderedCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'kkkaaaajjjjkkaaakklll'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ordered_c1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OrderedCounter&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"oranges"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"apples"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"apples"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bananas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="s"&gt;"kiwis"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"kiwis"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"apples"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;


&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ordered_c0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ordered_c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;"""OUTPUT =&amp;gt; Order Maintained 

{'k': 7, 'a': 7, 'j': 4, 'l': 3}
{'oranges': 1, 'apples': 3, 'bananas': 1, 'kiwis': 2}
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;There  are some other ways too, but knowing these two ways are more than enough!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/35446015/creating-an-ordered-counter"&gt;https://stackoverflow.com/questions/35446015/creating-an-ordered-counter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>collections</category>
    </item>
    <item>
      <title>Git Hack: Make commit with a past date</title>
      <author>Ayushi Rawat </author>
      <pubDate>Wed, 16 Jun 2021 04:45:06 +0000</pubDate>
      <link>https://dev.to/ayushi7rawat/git-hack-make-commit-with-a-past-date-450e</link>
      <guid>https://dev.to/ayushi7rawat/git-hack-make-commit-with-a-past-date-450e</guid>
      <description>&lt;p&gt;Hello reader! &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ever wanted to commit something to a git repo with a past date? Here’s how you could do it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you are working on a project and missed a commit yesterday or you accomplished the task but GitHub for Windows bailed on you? Well, this little hack can solve your problem.&lt;/p&gt;

&lt;p&gt;Check the YouTube video tutorial for live demonstration and better Understanding.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cSwgkUHk_Qo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Pre-Step.&lt;br&gt;
&lt;em&gt;Pull all data from remote to the local repository.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For the same, we are using the --amend and --date switches.&lt;br&gt;
The exact command is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ git commit --amend --date="YYYY-MM-DD HH:MM:SS"&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Simple isn't it!&lt;/p&gt;

&lt;p&gt;And with that, it's a wrap!  I hope you found the article useful! Share in the comments below.&lt;br&gt;
I create content about &lt;strong&gt;Career, Blogging, Programming, and Productivity&lt;/strong&gt;, If this is something that interests you, please share the article with your friends and connections. You can also subscribe to my newsletter to get updates every time I write something!&lt;/p&gt;

&lt;p&gt;Thank you for reading, If you have reached so far, please like the article, It will encourage me to write more such articles. Do share your valuable suggestions, I appreciate your honest feedback!&lt;/p&gt;

&lt;p&gt;I would strongly recommend you to Check out the &lt;a href="https://www.youtube.com/watch?v=cSwgkUHk_Qo"&gt;YouTube video&lt;/a&gt; of the same and &lt;strong&gt;don't forget to subscribe to my Channel&lt;/strong&gt;. I would love to connect with you at &lt;a href="https://twitter.com/ayushi7rawat"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/ayushi7rawat/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should definitely check out my other Blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/python-39-all-you-need-to-know"&gt;Python 3.9: All You need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/github-cli-10-all-you-need-to-know"&gt;GitHub CLI 1.0: All you need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/how-to-make-your-own-google-chrome-extension-1"&gt;How to make your own Google Chrome Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/run-javascript-from-python"&gt;Run Javascript from Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-whatsapp-using-python"&gt;Automate WhatsApp using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-cowin-vaccine-slots-availablity-using-python"&gt;Automate Cowin Vaccine slots Availability using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/what-is-competitive-programming-or-beginners-guide"&gt;What is Competitive Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;/p&gt;

</description>
      <category>github</category>
      <category>productivity</category>
      <category>computerscience</category>
      <category>career</category>
    </item>
    <item>
      <title>Solution: Matchsticks to Square</title>
      <author>seanpgallivan</author>
      <pubDate>Wed, 16 Jun 2021 04:24:47 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-matchsticks-to-square-2fk8</link>
      <guid>https://dev.to/seanpgallivan/solution-matchsticks-to-square-2fk8</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/matchsticks-to-square/discuss/1275625"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-473-medium-matchsticks-to-square"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/matchsticks-to-square/"&gt;Leetcode Problem #473 (&lt;em&gt;Medium&lt;/em&gt;): Matchsticks to Square&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are given an integer array &lt;code&gt;matchsticks&lt;/code&gt; where &lt;code&gt;matchsticks[i]&lt;/code&gt; is the length of the &lt;code&gt;i&lt;/code&gt;th matchstick. You want to use &lt;strong&gt;all the matchsticks&lt;/strong&gt; to make one square. You &lt;strong&gt;should not break&lt;/strong&gt; any stick, but you can link them up, and each matchstick must be used &lt;strong&gt;exactly one time&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Return &lt;code&gt;true&lt;/code&gt; if you can make this square and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;matchsticks = [1,1,2,2,2]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;You can form a square with length 2, one side of the square came two sticks with length 1.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_1MPSwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2021/04/09/matchsticks1-grid.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;matchsticks = [3,3,3,3,4]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;You cannot find a way to form a square with all the matchsticks.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= matchsticks.length &amp;lt;= 15&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= matchsticks[i] &amp;lt;= 10^9&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;At first glance, this problem seems rather straightforward: find the total length of the matchsticks in &lt;strong&gt;M&lt;/strong&gt;, figure out how long each &lt;strong&gt;side&lt;/strong&gt; of the square must be, then find every combination of matchsticks that can add up to &lt;strong&gt;side&lt;/strong&gt;. If four unique sets of matchsticks each add up to &lt;strong&gt;side&lt;/strong&gt;, then we can &lt;strong&gt;return true&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;The fact that the constraint upon the only imput is so low would seem to suggest that an &lt;strong&gt;O(2^N)&lt;/strong&gt; solution is appropriate. There are, however, a few things we can do to optimize this process. The first key realization is that we &lt;em&gt;can&lt;/em&gt;, in fact, use a &lt;strong&gt;greedy&lt;/strong&gt; approach.&lt;/p&gt;

&lt;p&gt;Consider the case of &lt;strong&gt;M = [1,1,1,2,2,2,3]&lt;/strong&gt;. In this case, we can easily see that the total is &lt;strong&gt;12&lt;/strong&gt; and thus side = &lt;strong&gt;3&lt;/strong&gt;. If we were to start iterating through &lt;strong&gt;M&lt;/strong&gt; to find multiples of &lt;strong&gt;3&lt;/strong&gt;, we'd first group together the first three elements and then also find the last element, but be unable to make two more &lt;strong&gt;3&lt;/strong&gt;s from the middle elements of &lt;strong&gt;M&lt;/strong&gt;. This would perhaps suggest that a greedy approach will not work, because it's readily apparent that we need to save the &lt;strong&gt;1&lt;/strong&gt;s to pair up with the &lt;strong&gt;2&lt;/strong&gt;s to make three of the four sides.&lt;/p&gt;

&lt;p&gt;But that also suggests the solution, which is that we can use a greedy approach &lt;em&gt;if&lt;/em&gt; we iterate through &lt;strong&gt;M&lt;/strong&gt; in descending order. That way, each &lt;strong&gt;2&lt;/strong&gt; will naturally seek out its matching &lt;strong&gt;1&lt;/strong&gt; before we could ever attempt to match the &lt;strong&gt;1&lt;/strong&gt;s together in a less efficient manner.&lt;/p&gt;

&lt;p&gt;That means that we can just use a &lt;strong&gt;recursive&lt;/strong&gt; &lt;strong&gt;backtracking&lt;/strong&gt; helper (&lt;strong&gt;btrack&lt;/strong&gt;) to help find the side groups in &lt;strong&gt;M&lt;/strong&gt;. But first, we can take care of some edge cases: If the total sum of &lt;strong&gt;M&lt;/strong&gt; is not divisble by &lt;strong&gt;4&lt;/strong&gt;, or if any single matchstick in &lt;strong&gt;M&lt;/strong&gt; is longer than the calculated &lt;strong&gt;side&lt;/strong&gt;, then a solution is impossible and we should &lt;strong&gt;return false&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As for our recursive helper, it will need to iterate through the sorted &lt;strong&gt;M&lt;/strong&gt; multiple times, attempting to build up groups that match &lt;strong&gt;side&lt;/strong&gt;. We'll also keep track of how many groups we've found (&lt;strong&gt;done&lt;/strong&gt;), and whenever we find a match, start &lt;strong&gt;btrack&lt;/strong&gt; back at the beginning with &lt;strong&gt;done&lt;/strong&gt; incremented.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(&lt;strong&gt;Note&lt;/strong&gt;: When incrementing done and starting the recursive helper over, we can start at index &lt;strong&gt;1&lt;/strong&gt; instead of index &lt;strong&gt;0&lt;/strong&gt; because &lt;strong&gt;M[0]&lt;/strong&gt; will&lt;/em&gt; always &lt;em&gt;be a part of the first grouping.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once we've finished &lt;strong&gt;3&lt;/strong&gt; groups, we can go ahead and &lt;strong&gt;return true&lt;/strong&gt;, because we know that the remaining pieces must add up to &lt;strong&gt;side&lt;/strong&gt;. If at any point we reach the end of &lt;strong&gt;M&lt;/strong&gt; without finishing the current group, however, we should &lt;strong&gt;return false&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When attempting to add a piece to the current group, we can obviously skip pieces that are larger than the remaining &lt;strong&gt;space&lt;/strong&gt;, as well as pieces that have already been used. Normally, this would require some kind of additional array or set to keep track of the used pieces, but we can use an &lt;strong&gt;in-place&lt;/strong&gt; approach with &lt;strong&gt;M&lt;/strong&gt; and just replace the used values with a value larger than &lt;strong&gt;side&lt;/strong&gt;. This will simplify the check to skip elements to just one conditional.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(&lt;strong&gt;Note&lt;/strong&gt;: If you don't want to modify the input, you&lt;/em&gt; could &lt;em&gt;use a single integer and &lt;strong&gt;bit manipulation&lt;/strong&gt; to achieve the same result in &lt;strong&gt;O(1) space&lt;/strong&gt;. Sorting &lt;strong&gt;M&lt;/strong&gt; will still take &lt;strong&gt;O(N) space&lt;/strong&gt; if you don't want to modify &lt;strong&gt;M&lt;/strong&gt;, however, and in any case, we'll be using &lt;strong&gt;O(N) space&lt;/strong&gt; for the recursion stack.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If an attempted piece turns out to be unsuccessfully and we're returned back up the recursion stack, we should remember to backtrack the current index (&lt;strong&gt;i&lt;/strong&gt;) of &lt;strong&gt;M&lt;/strong&gt; to its previous value (&lt;strong&gt;num&lt;/strong&gt;).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(2^N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;M&lt;/strong&gt; for the attempted combinations of elements in &lt;strong&gt;M&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for the recursion stack&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Java makes it more complicated to reverse sort a primitive array, so we can just use a simple sort and then iterate through &lt;strong&gt;M&lt;/strong&gt; backwards instead.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;makesquare&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;side&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;side&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="nx"&gt;side&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;side&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;btrack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;side&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;side&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;side&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;makesquare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
        &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
                &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;makesquare&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;btrack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;btrack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;btrack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;btrack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;btrack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;makesquare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;greater&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accumulate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;btrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>30 Notion templates for Remote Teams, Developers and Freelancers Productivity</title>
      <author>codinglists-dev</author>
      <pubDate>Wed, 16 Jun 2021 04:21:17 +0000</pubDate>
      <link>https://dev.to/codinglistsdev/30-notion-templates-for-remote-teams-developers-and-freelancers-productivity-20m9</link>
      <guid>https://dev.to/codinglistsdev/30-notion-templates-for-remote-teams-developers-and-freelancers-productivity-20m9</guid>
      <description>&lt;p&gt;Notion is an across the board workspace where you can compose, plan, team up and get coordinated - it permits you to take notes, add errands, oversee projects and more. &lt;/p&gt;

&lt;p&gt;Notion gives the structure squares and you can make your own formats and toolbox to complete work. Numerous individuals allude to Notion as an "interior wiki" permitting groups and people to design their tasks, work and objectives. &lt;/p&gt;

&lt;p&gt;This workspace permits you to write in a wonderful clean space, construct your very own wiki (with unlimited layers of substance), plan utilizing a kanban see, a schedule or a basic rundown view and last, however not least, to catch your work processes and record everything making accounting pages and data sets. Idea works across all stages remembering for Android, iOS, Mac, Windows, Web. &lt;/p&gt;

&lt;p&gt;Notion offers group usefulness for constant cooperation and gives the capacity to groups to share, remark and allot errands and updates. So however much people and experts can utilize Notion, so can groups.&lt;/p&gt;

&lt;p&gt;In this post we'll be looking into 23 Free Notion templates for Developers and Blogger. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#notion-podcast-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://gumroad.com/l/PGowN"&gt;Notion podcast template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ABmiGS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://public-files.gumroad.com/variants/5fkonxz61z1hm6wub1eg1z8eifig/3298c3eb001bbed90f1d616da66708480096a0a1b6e81bd4f8a2d6e9b831d301" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ABmiGS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://public-files.gumroad.com/variants/5fkonxz61z1hm6wub1eg1z8eifig/3298c3eb001bbed90f1d616da66708480096a0a1b6e81bd4f8a2d6e9b831d301" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Extensive Podcast Manager template for Notion! The layout is simple and you can manage all your digital recordings. This layout has huge loads of highlights, including; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A simple "catch" framework for adding new digital broadcasts to your library, including show depictions, categorisations and connections to the webcast scene. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An extensive administration suite for getting to and dealing with your web recordings. You can channel by class, investigate different scenes in the arrangement or even record your number one statements from the scene. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A "listening presently" board so you can rapidly and effectively access the webcast's your as of now paying attention to. Not any more start a webcast and completing to fail to remember it. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#personal-website-temmplate"&gt;
  &lt;/a&gt;
  &lt;a href="https://gumroad.com/l/notionsitefree"&gt;Personal website temmplate&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_9swc9bR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://public-files.gumroad.com/variants/3fgbe2v6ztx30uy44bpmg0ynlgqg/3298c3eb001bbed90f1d616da66708480096a0a1b6e81bd4f8a2d6e9b831d301" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_9swc9bR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://public-files.gumroad.com/variants/3fgbe2v6ztx30uy44bpmg0ynlgqg/3298c3eb001bbed90f1d616da66708480096a0a1b6e81bd4f8a2d6e9b831d301" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;🎉 No more inconvenient WordPress layouts &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🎉 No recompiling a site and transferring through FTP &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All substance is effectively altered, simple to develop/tweak, and gives an extraordinary method to show individuals what YOU specialize in. &lt;/p&gt;

&lt;p&gt;Regardless of whether you're shut or open for work, having a strong individual site up so individuals can become more acquainted with about your work has made it such a great deal simpler to meet cool individuals.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thesis-writing-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/Thesis-Writing-Template-bbec267ff5c94bfb82a15de7a1695a13"&gt;Thesis writing template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eQCwHrXG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623475879479/66TU-qzir.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQCwHrXG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623475879479/66TU-qzir.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can read this amazing &lt;a href="https://www.simonesmerilli.com/life/thesis-notion"&gt;article&lt;/a&gt; by Simon to know more about this database. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion-minimal-database"&gt;
  &lt;/a&gt;
  &lt;a href="https://gumroad.com/l/NotionCleanMinimal"&gt;Notion minimal database&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BfvWSN9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://public-files.gumroad.com/variants/obqjmx8415qj9ul80o194euvasi3/3298c3eb001bbed90f1d616da66708480096a0a1b6e81bd4f8a2d6e9b831d301" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BfvWSN9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://public-files.gumroad.com/variants/obqjmx8415qj9ul80o194euvasi3/3298c3eb001bbed90f1d616da66708480096a0a1b6e81bd4f8a2d6e9b831d301" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Fully Functional Template for Notion - Clean layout with matching icons throughout - Minimal Neutral Aesthetic by Kate. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#campus-life-organizer"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/Campus-Life-Organizer-404621feecaa4bc6bdf3c0d36e05243e"&gt;Campus Life Organizer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wbhEZJuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623476239891/gT6XmYSEl.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wbhEZJuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623476239891/gT6XmYSEl.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Organizing stuff made easy. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-note"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/Quick-note-89beed65075d48e685d1a123011cc1bb"&gt;Quick Note&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xLjebSoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252Fea9bfbfc-dbf2-411b-b7d5-5b165cf5a13d%252Fquick-note-2.png%3Ftable%3Dblock%26id%3D05bf3aa7-530b-46bd-9e6f-28331cc6f746%26spaceId%3De12b42ac-4e54-476f-a4f5-7d6bdb1e61e2%26width%3D4000%26userId%3D%26cache%3Dv2" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xLjebSoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252Fea9bfbfc-dbf2-411b-b7d5-5b165cf5a13d%252Fquick-note-2.png%3Ftable%3Dblock%26id%3D05bf3aa7-530b-46bd-9e6f-28331cc6f746%26spaceId%3De12b42ac-4e54-476f-a4f5-7d6bdb1e61e2%26width%3D4000%26userId%3D%26cache%3Dv2" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Who doesn't want to write that shower though ASAP. This Notion template made easy for you. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eisenhower-matrix"&gt;
  &lt;/a&gt;
  &lt;a href="https://anotioneer.com/Eisenhower-Matrix-Notion-Template-eb1118338e8c429b84519d2e4fc47a48"&gt;Eisenhower Matrix&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FxTRLCie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623505431881/54iLp82Fa.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FxTRLCie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623505431881/54iLp82Fa.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Eisenhower Matrix is a great way to organise your tasks, to make sure that you work on what's important and not just what's urgent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#job-hunt-tracker-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/c074b2c4d8e046c7afd3ee91c9458240?v=f375a8d8887341d0a68f08e442d6a77c"&gt;Job hunt tracker template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oDg6jFJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252F2ac2971b-4301-43d2-97a3-cb994b99d873%252Fjob-tracker-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oDg6jFJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252F2ac2971b-4301-43d2-97a3-cb994b99d873%252Fjob-tracker-2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use this template to keep track of any job postings you're interested in, which ones you've applied to, and where you're at in the interview process. This is particularly helpful to remind you when to follow-up with recruiters.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subscription-tracker"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/Subscription-tracker-1328baa44d014187bd3a870d01e9fc6a"&gt;Subscription Tracker&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I4z17VWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252F9ca50cf9-1460-4cb2-bba2-1aa3eb29b37e%252Fsubscription-tracker-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I4z17VWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252F9ca50cf9-1460-4cb2-bba2-1aa3eb29b37e%252Fsubscription-tracker-2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A little Subscription Tracker with monthly/yearly cost overviews and renewal alerts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#weekly-agenda"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/Weekly-agenda-9e197cdf88dc4d3abf798b999ebce40a"&gt;Weekly Agenda&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ri89dxoR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252F8d840d7d-85ba-4fba-a691-ef9c9ccf9ad0%252FWeekly_agenda_2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ri89dxoR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252F8d840d7d-85ba-4fba-a691-ef9c9ccf9ad0%252FWeekly_agenda_2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scheduling your whole week with this template made easy. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#best-for-teams-15-templates"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/ec4ffede30ac43ba9ba44ce2f2cc540a?v=3f6c8ad532924682a351b4bb7241027a"&gt;Best for Teams (15 templates)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0qbMeATA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623506010104/LejbTDOX9.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0qbMeATA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623506010104/LejbTDOX9.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A set of 15 templates for Remote working teams. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#research-project-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/Research-Project-Template-907609cc8ae64e9586cced401e17e901"&gt;Research Project template &lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This template was designed for research/freelance projects. Created by Sterling Osborne.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resume-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/Leo-Osa-9ac01881647f410194ead70b790aed98"&gt;Resume Template&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXdnnFpS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623506732659/iIQnI1W6e.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXdnnFpS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623506732659/iIQnI1W6e.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the resume of Leo Osa, he is a Product Designer. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#work-dashboard"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/Work-Dashboard-ebb122058c184c86b2ed07d88b37c388"&gt;Work Dashboard&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--karqHpxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623507325690/LuGAVYmFZ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--karqHpxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623507325690/LuGAVYmFZ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a template for office/work focused on multi-task management&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#task-and-issues"&gt;
  &lt;/a&gt;
  Task and Issues
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w52TpMz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623507355256/b16k_u5Be.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w52TpMz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623507355256/b16k_u5Be.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Engineering team is things forgetting team sometimes. This templates covers with all the issues and tasks your team should know. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#content-calender"&gt;
  &lt;/a&gt;
  Content Calender
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QSujzVrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252F2de3e274-8bb0-42fc-ad48-2e34a3cd2670%252Fweekly-agenda-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QSujzVrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.notion.so/image/https%253A%252F%252Fs3-us-west-2.amazonaws.com%252Fsecure.notion-static.com%252F2de3e274-8bb0-42fc-ad48-2e34a3cd2670%252Fweekly-agenda-2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use this content calendar to schedule and track all the content you're putting out — from blog posts to podcasts to tweets. Every item on the calendar is a project, where you can designate the author (or who's assigned), the type of content (article, event, etc.), and its status (scheduled, in progress, complete). Each one is also its own Notion page, where you can stash all related notes, research, multimedia, and do all your writing in one place.&lt;/p&gt;

&lt;p&gt;You can also turn your calendar into a different type of database view. For example, you can create a board view of this same information grouped by status to see your content moving through stages of completion.&lt;/p&gt;




&lt;p&gt;So here were the list of 31 Notion templates (actually 15 but the team link has 15 templates). If you want to add something here?(probably your templates) just comment it down. We'll review and will add them ASAP. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>remote</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 14 Angular mistakes you should Avoid</title>
      <author>devdefinitive</author>
      <pubDate>Wed, 16 Jun 2021 04:20:08 +0000</pubDate>
      <link>https://dev.to/devdefinitive/top-14-angular-mistakes-you-should-avoid-i6h</link>
      <guid>https://dev.to/devdefinitive/top-14-angular-mistakes-you-should-avoid-i6h</guid>
      <description>&lt;p&gt;According to a survey of Libscore in 2016, almost 12,000 websites out of 1,000,000 have been using angular. These additionally consist of a few setup corporations like Wolfram Alpha, Sprint, ABC News, Walgreens, and Intel. It aims to disentangle each the trying out and improvement of such programs with the aid of presenting a framework for a client-aspect version-view-ViewModel (MVVM) architecture and version-view-controller (MVC).&lt;/p&gt;

&lt;p&gt;With its growing call for withinside the improvement of front-cease net utility framework, an increasing number of builders are looking to ace it. Angular JS is an entirely practical framework. It is the 0.33 maximum starred repository GitHub. However, it isn't always tough to begin using the dreams that it's far meant to perform a call for comprehension. No longer can AngularJS builders forget about reminiscence consumption, as it will now no longer reset on navigation anymore.&lt;/p&gt;

&lt;p&gt;In easy words, if you seek out a profession as an Angular developer, you're approximately at the forefront of Angular net improvement.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Many of you frequently get stressed with Angular /Angular 2 /Angular four /Angular X+ such terminologies. Moreover, humans agree that every one of those is new variations withinside the Angular improvement realm. The truth is it's far from the framework rewrite. If Angular first is X and Angular second is Y, and Angular four is Z, then the modifications made among X and Y and Y and Z won't be equal. And z isn't always a rewrite; it's a new edition of y with all of the bux fixes and new functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1modify-the-dom"&gt;
  &lt;/a&gt;
  1-Modify the DOM
&lt;/h3&gt;

&lt;p&gt;Without delay, One of the not unusual place errors made with the aid of using. Angular builders are without delay manipulating the DOM or from the controller. They are often abbreviated because of the API for HTML and XML documents; May use DOM to refresh the web page's name relying on a context extrude or execute SVG or manage after validation error. It isn't always it; there may be many opportunities however you want to the appearance of ElementRef .local Element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2using-jquery"&gt;
  &lt;/a&gt;
  2-Using jQuery
&lt;/h3&gt;

&lt;p&gt;We all realize that jQuery is a library that offers utilities for manipulating the DOM less complicated. Since DOM driving is already treated with the aid of using Angular, it's useless to consist of jQuery withinside the project. Angular itself is a more brilliant framework loaded with complete functions of DOM manipulation. Apart from simply knowing, the developer has to look for those functions in angular first earlier than in enticing jQuery in the App building.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3code-handling"&gt;
  &lt;/a&gt;
  3-Code Handling
&lt;/h3&gt;

&lt;p&gt;Organizing your codes is the fundamental component of an angularJs developer, wherein maximum specialists become making mistakes. The complete improvement lifestyles cycle entails the identical distribution of codes into small booths or compartmentalizing. It will become manner less complicated to song matters down (errors) and paintings competently on everyone in every one of them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4scope-binding"&gt;
  &lt;/a&gt;
  4-Scope Binding
&lt;/h3&gt;

&lt;p&gt;Before declaring the errors right here, while we are saying the scope of angularJS, all the built-in gadgets contain utility information. And considering that we realize that Angular has were given many thrilling functions and is entirely dependent on MVC shape and scope as something that binds controller and view. The difficulty right here is the easy usage of data assets is often restricted to a version that conceivably incites accidents.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5not-using-applyasync"&gt;
  &lt;/a&gt;
  5-Not using $applyAsync
&lt;/h3&gt;

&lt;p&gt;What is &lt;code&gt;$applyAsync&lt;/code&gt;? It enables retaining up the code's expressiveness with inside the &lt;code&gt;$digest()&lt;/code&gt;. However, there is no manner detailed so builders can choose each guide and automatic methods for training &lt;code&gt;$applyasync&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6utilize-batarang"&gt;
  &lt;/a&gt;
  6-Utilize Batarang
&lt;/h3&gt;

&lt;p&gt;Batarang being one of the maximum extraordinary Google chrome extensions, is mainly hired to debug and construct Angular apps. While you're handling abstracting scopes, this extension is helpful. Not the use of the device to its most total ability is a not unusual place mistake.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7prior-launching-examination-as-an-angular-developer"&gt;
  &lt;/a&gt;
  7-Prior Launching Examination As an angular developer
&lt;/h3&gt;

&lt;p&gt;You want to realize that inspecting is as vital as growing something. What occurs right here is programmers overlook t take a look at the utility in move browsers. Strange and sudden insects are located most effectively while they're examined in unique environments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8not-compartmentalizing-properly"&gt;
  &lt;/a&gt;
  8-Not Compartmentalizing Properly
&lt;/h3&gt;

&lt;p&gt;Compartmentalizing your code is significant. Presently while you are painting with MVC, it's far approximately having a controller for a view. A run of the mill oversight is to surround the exorbitant concept into one controller. In case you want to isolate your layer in your utility to bode well, don't take backup methods to go. Code affiliation is one of the top pivotal portions of usage building.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9unsubscribe-operation"&gt;
  &lt;/a&gt;
  9-unsubscribe Operation
&lt;/h3&gt;

&lt;p&gt;Ignoring or failing to unsubscribe has continually been at the top. A maximum of the angular programmers do this; they neglect to smooth up their subscriptions. And non-stop new subscriptions may threaten information safety. It causes growing a big hassle, including reminiscence leaks withinside the lengthy run. In this manner, make specific as an angular solid developer; you've got excellent management of the situation fundamentals, in any case.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10inappropriate-use-of-event"&gt;
  &lt;/a&gt;
  10-Inappropriate Use of Event
&lt;/h3&gt;

&lt;p&gt;Handlers Companies are beneath neath stress in particular assembly patron deadlines. It may pressure the builders to combine rational layers and supply an immoderate range of assignments for the controllers to carry out, bringing approximately a code that's meant to execute a lot more inside a given solution. For example, appearing HTTP name in the controller or having many occasion handlers carry out a given task.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11multiple-ngmodule-comprise"&gt;
  &lt;/a&gt;
  11-Multiple NgModule Comprise
&lt;/h3&gt;

&lt;p&gt;While growing an angular app, the fundamental factors that we frequently take without consideration are the component. So what are extraordinary opportunities? Using the NgModule statement of the kid to acknowledge the HeroComponent within the module itself, λUse the NgModule exports to export that equal component.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12inability-to-apply-the-available-tools"&gt;
  &lt;/a&gt;
  12-Inability to apply the Available Tools
&lt;/h3&gt;

&lt;p&gt;Android builders can make the maximum of to be had improvement equipment, including Test Whiz and Protractor. It might be validated to be a costly slip-up because it is vital to apply a device sooner or later or another. For instance, Firefox and Chrome use unique development strings that consist of examination, botch yields, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13keep-a-song-at-the-depend-on-watchers"&gt;
  &lt;/a&gt;
  13-Keep a song at the depend on Watchers
&lt;/h3&gt;

&lt;p&gt;AngularJS creates a watcher for each binding. Evaluation and contrast for preceding bindings are executed at every digest phase. In the cease, the range of watchers comes out to be significant. Angular JS network has a fashionable Global most restriction of 2,000 watchers, so it's better to hold songs that depend on watchers from the very start of improvement&lt;br&gt;
.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14declaring-everything-with-anonymous-functions"&gt;
  &lt;/a&gt;
  14-Declaring Everything with Anonymous Functions
&lt;/h3&gt;

&lt;p&gt;Assigning your features and gadgets account for a clean and maintainable code. This well-maintained and documented code is simple to paint with and can, without difficulty, be divided into files. Not simply this, such portions of code have accelerated testability.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;It's very typical to commit an error and everybody does it. Indeed, when an engineer keeps in touch for certain codes and read them later, they frequently even don't comprehend why they composed those codes prefer as such. It will be the greatest entanglement to stay away from your mix-up. &lt;/p&gt;

&lt;p&gt;A designer needs to support his/her expertise consistently. Since we gain from our errors, a designer additionally turns out to be better and more grounded subsequent to committing errors. Rakish designers should note down their mix-ups, make a rundown of them and ensure they don't commit similar past errors again by composing all codes exactly.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
