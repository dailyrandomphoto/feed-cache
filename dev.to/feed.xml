<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Configure Symbl.ai to Listen for Action Items in a WebSocket Call</title>
      <author>NLP App Developer &amp; Advocate</author>
      <pubDate>Fri, 28 May 2021 21:59:35 +0000</pubDate>
      <link>https://dev.to/symbldotai/configure-symbl-ai-to-listen-for-action-items-in-a-websocket-call-2l5f</link>
      <guid>https://dev.to/symbldotai/configure-symbl-ai-to-listen-for-action-items-in-a-websocket-call-2l5f</guid>
      <description>&lt;p&gt;Symbl.ai, a conversation intelligence platform for developers to create new experiences around conversation data, empowers developers to extend beyond mere automated speech recognition to contextual insights. Contextual insights are the results of Symbl.ai's Natural Language Processing algorithms to recognize speaker intentions. Among a few of the most common intentions speakers express in speech are follow-ups, questions or action items. &lt;/p&gt;

&lt;p&gt;In short, action-items as a conversational entity recognized by &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s platform are a reflection of a speaker's call to action during his or her conversation at any time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-step"&gt;
  &lt;/a&gt;
  First Step
&lt;/h2&gt;

&lt;p&gt;The first step to access action items as &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s contextual insights is to sign up. Register for an account at &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt; (i.e., platform.symbl.ai). Grab both your &lt;code&gt;appId&lt;/code&gt; and your &lt;code&gt;appSecret&lt;/code&gt;. With both of those you receive your &lt;code&gt;x-api-key&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you would like to sign your JSON Web Tokens with your &lt;code&gt;appId&lt;/code&gt; together with &lt;code&gt;appSecret&lt;/code&gt; in a &lt;code&gt;cURL&lt;/code&gt; command executed in the terminal, here is a code snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -k -X POST "https://api.symbl.ai/oauth2/token:generate" \
     -H "accept: application/json" \
     -H "Content-Type: application/json" \
     -d "{ \"type\": \"application\", \"appId\": \"&amp;lt;appId&amp;gt;\", \"appSecret\": \"&amp;lt;appSecret&amp;gt;\"}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you would like to authenticate into &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s developer platform to signing the JWTs in &lt;a href="https://docs.symbl.ai/docs/developer-tools/postman/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Postman&lt;/a&gt;, the added benefit is that Symbl.ai's public workspace includes almost all of its APIs, including a section called "Labs" for its most experimental developer APIs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#second-step"&gt;
  &lt;/a&gt;
  Second Step
&lt;/h2&gt;

&lt;p&gt;The second step is to familiarize yourself with &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s &lt;a href="https://docs.symbl.ai/docs/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;documentation&lt;/a&gt; on its &lt;a href="https://docs.symbl.ai/docs/streamingapi/introduction/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Streaming API&lt;/a&gt;. To review, loop through each of the following items from &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s &lt;a href="https://docs.symbl.ai/docs/streamingapi/tutorials/receive-ai-insights-from-your-web-browser?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;live speech-to-text&lt;/a&gt; tutorial: 1) creating a WebSocket, 2) setting its listeners, 3) creating an audio stream, or 4) handling the audio stream. If you wouldn't like to review these concepts, then paste the following copied code directly into your console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * The JWT token you get after authenticating with our API.
 * Check the Authentication section of the documentation for more details.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accessToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uniqueMeetingId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;btoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user@example.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;symblEndpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`wss://api.symbl.ai/v1/realtime/insights/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;uniqueMeetingId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?access_token=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ws&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;symblEndpoint&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when a message is received from the WebSocket server&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// You can find the conversationId in event.message.data.conversationId;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;conversationId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversationId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Transcript (more accurate): &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;punctuated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Live transcript (less accurate): &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;punctuated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transcript&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Response type: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Object: `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the WebSocket closes unexpectedly due to an error or lost connetion&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the WebSocket connection has been closed&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Connection to websocket closed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the connection succeeds.&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onopen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start_request&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;meetingTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Websockets How-to&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Conversation name&lt;/span&gt;
    &lt;span class="na"&gt;insightTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;question&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action_item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// Will enable insight generation&lt;/span&gt;
    &lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;confidenceThreshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;languageCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en-US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;speechRecognition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LINEAR16&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;sampleRateHertz&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;44100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;speaker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;example@symbl.ai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Example Sample&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * The callback function which fires after a user gives the browser permission to use
 * the computer's microphone. Starts a recording session which sends the audio stream to
 * the WebSocket endpoint for processing.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSuccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMediaStreamSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createScriptProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createGain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onaudioprocess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// convert to 16-bit payload&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputBuffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChannelData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Float32Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;targetBuffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Int16Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;targetBuffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32767&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Send audio stream to websocket.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetBuffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;span class="nx"&gt;handleSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#third-step"&gt;
  &lt;/a&gt;
  Third Step
&lt;/h2&gt;

&lt;p&gt;The third step  &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s WebSocket in your browser. Open up an instance of Chrome. Open up the console. Paste the above copied code directly into your console. After hitting enter, your WebSocket's messages start to pile up. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fourth-step"&gt;
  &lt;/a&gt;
  Fourth Step
&lt;/h2&gt;

&lt;p&gt;After having run the &lt;a href="https://docs.symbl.ai/docs/streamingapi/introduction/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Streaming API&lt;/a&gt; in the browser, you receive &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s transcription from automated speech recognition in real-time. However, &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt; enables you as a developer to extend far beyond merely automated speech recognition to contextual insights. In the code you run in the browser, you configure the WebSocket's event listener to capture contextual insights in real-time. &lt;/p&gt;

&lt;p&gt;Navigate to the event listener &lt;code&gt;ws.onmessage&lt;/code&gt;. Inside of the event listener, the &lt;code&gt;ws.onmessage&lt;/code&gt; method provides you the ability to track events such as those events that are sent or received by the WebSocket. In the event listener there is a stream of raw data following on the WebSocket's protocol.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;topic_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;topics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Topic detected: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phrases&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;insight_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;insight&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insights&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Insight detected: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;insight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;insight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;action_item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Insight detected is an Action Item!!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After adding the new log to your WebSocket's &lt;code&gt;ws.onmessage&lt;/code&gt; method, the following is the full code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * The JWT token you get after authenticating with our API.
 * Check the Authentication section of the documentation for more details.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accessToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uniqueMeetingId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;btoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user@example.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;symblEndpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`wss://api.symbl.ai/v1/realtime/insights/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;uniqueMeetingId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?access_token=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ws&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;symblEndpoint&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when a message is received from the WebSocket server&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// You can find the conversationId in event.message.data.conversationId;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;conversationId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversationId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Transcript (more accurate): &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;topic_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;topics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Topic detected: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phrases&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;insight_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;insight&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insights&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Insight detected: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;insight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;insight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;action_item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Insight detected is an Action Item!!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;punctuated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Live transcript (less accurate): &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;punctuated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transcript&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Response type: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Object: `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the WebSocket closes unexpectedly due to an error or lost connetion&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the WebSocket connection has been closed&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Connection to websocket closed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the connection succeeds.&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onopen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start_request&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;meetingTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Websockets How-to&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Conversation name&lt;/span&gt;
    &lt;span class="na"&gt;insightTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;question&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action_item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// Will enable insight generation&lt;/span&gt;
    &lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;confidenceThreshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;languageCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en-US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;speechRecognition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LINEAR16&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;sampleRateHertz&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;44100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;speaker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;example@symbl.ai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Example Sample&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * The callback function which fires after a user gives the browser permission to use
 * the computer's microphone. Starts a recording session which sends the audio stream to
 * the WebSocket endpoint for processing.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSuccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMediaStreamSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createScriptProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createGain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onaudioprocess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// convert to 16-bit payload&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputBuffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChannelData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Float32Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;targetBuffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Int16Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;targetBuffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32767&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Send audio stream to websocket.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetBuffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;span class="nx"&gt;handleSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next?
&lt;/h1&gt;

&lt;p&gt;If you would like to add a listener for real-time sentiment analysis to your &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt; configurations, &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt; provides you the ability to listen to polarity scores on sentiments from messages in real-time. A &lt;a href="https://medium.com/codex/basic-javascript-code-for-live-conversational-ai-with-its-websockets-api-449d787ddd7a?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;basic knowledge of WebSockets&lt;/a&gt; is a first step. After &lt;a href="https://javascript.plainenglish.io/real-time-sentiment-analysis-api-in-javascript-with-symbl-ai-9e39d50f0654?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;logging sentiments&lt;/a&gt;, the next step is create a way to &lt;a href="https://dev.to/eric_giannini/real-time-sentiment-analysis-on-messages-14n3?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;capture the data in real-time&lt;/a&gt;. If you would like to skip these blogs, feel free to download the code from &lt;a href="https://github.com/symblai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai's GitHub&lt;/a&gt; where you can find the &lt;a href="https://github.com/symblai/real-time-sentiment-analysis-with-websockets?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;real-time sentiment analysis&lt;/a&gt; repo with instructions. &lt;/p&gt;

&lt;p&gt;Sentiment analysis is only one way to handle the conversation data from Symbl.ai's enabled voice. Another way to handle Symbl.ai's enabled voice is to connect an API. In particular, &lt;code&gt;action_item&lt;/code&gt;s enable developers to create automated workflows from the detected insights in real-time so that those detected insights appear in external Third Party SaaS dashboards in real-time. &lt;/p&gt;

&lt;p&gt;Imagine, for instance, creating JIRA tickets in real-time through a &lt;code&gt;POST&lt;/code&gt; request after a &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s insight for an &lt;code&gt;action_item&lt;/code&gt; is detected in a live conversation. With Symbl.ai, you as a developer are empowered to connect, transform or visualize conversations in ways not yet imagined or implemented in real-life, since Symbl.ai's core product extends far beyond merely automated speech recognition. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-our-community"&gt;
  &lt;/a&gt;
  Join Our Community
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s invites developers to reach out to us via email at [&lt;code&gt;developer@symbl.ai&lt;/code&gt;][emailto:&lt;a href="mailto:developer@symbl.ai"&gt;developer@symbl.ai&lt;/a&gt;], join our &lt;a href="https://join.slack.com/t/symbldotai/shared_invite/zt-4sic2s11-D3x496pll8UHSJ89cm78CA?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Slack&lt;/a&gt; channels, participate in our &lt;a href="//developer.symbl.ai/hackathon?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;hackathons&lt;/a&gt;, fork our &lt;a href="https://www.postman.com/symbldotai/workspace/symbl-ai/overview?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Postman public workspace&lt;/a&gt;, or &lt;code&gt;git clone&lt;/code&gt; our repos at &lt;a href="https://github.com/symblai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai's GitHub&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>ai</category>
      <category>machinelearning</category>
      <category>nlp</category>
    </item>
    <item>
      <title>PWA myths and secrets revealed</title>
      <author>Rafael Corrêa Gomes</author>
      <pubDate>Fri, 28 May 2021 21:47:58 +0000</pubDate>
      <link>https://dev.to/rafaelcg/pwa-myths-and-secrets-revealed-50fl</link>
      <guid>https://dev.to/rafaelcg/pwa-myths-and-secrets-revealed-50fl</guid>
      <description>&lt;p&gt;Here I'm going to tell you what nobody is going to tell you from the business and technical standpoint. The opposite side of the PWA word, the myths that might become the dark side of it for you. But first, let's cover what you hear from 99.9% of the agencies and developers, the good points. For those who understand more deeply the technology, I'm covering here PWA Headless which is the most sold solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; &lt;em&gt;I prefer PWA, I love the benefits that it provides to customers and merchants. I want to show what agencies and developers won't tell you about the experience working with PWA that they had. Some things will be hidden from you but will impact a lot your business decisions. The best method for anyone to apply PWA is when it wasn't a blind decision.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-seductive-world-of-pwa"&gt;
  &lt;/a&gt;
  The seductive world of PWA 😍
&lt;/h2&gt;

&lt;p&gt;When you hear about PWA, everyone will share the good points. You might hear it in a such manner, that seems like there no reason why you're not on it now. It's faster, cheaper, prettier and you won't have any problems anymore. The real silver bullet already exists and you're missing out. Ok, ok, telling like this you know it's not true, but when a developer or agency that usually has the more technical experience and shows many examples faster than your current store, then it feels like it's going to solve all the problems.&lt;/p&gt;

&lt;p&gt;It's very usual to see as a sales argument numbers like these below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  68% increase of mobile traffic&lt;/li&gt;
&lt;li&gt;  15-fold improvement of load and installation speed&lt;/li&gt;
&lt;li&gt;  25-times reduced use of device storage&lt;/li&gt;
&lt;li&gt;  52% average conversion increase&lt;/li&gt;
&lt;li&gt;  78% average session increase&lt;/li&gt;
&lt;li&gt;  137% engagement increase&lt;/li&gt;
&lt;li&gt;  42.86% lower bounce rate when compared to that of mobile websites&lt;/li&gt;
&lt;li&gt;  133.67% increase in page views&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-main-advantages-are-true"&gt;
  &lt;/a&gt;
  The main advantages are true? 🤔
&lt;/h2&gt;

&lt;p&gt;Usually when I go deep into the analyses made they aren't reporting the real truth. The words are true, but the intentional feeling looking at it, it's not. We didn't see the entire scenario to have been prepared to make a decision based on someone's words; Most of the time who sell it's hiding the bad points for a reason.&lt;/p&gt;

&lt;p&gt;I don't believe into take a decision alone. Without explain to the client and evaluate with them if it makes sense to their business. So, let's cover some of the main points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-low-development-costs"&gt;
  &lt;/a&gt;
  1. Low Development Costs 🤑
&lt;/h2&gt;

&lt;p&gt;PWAs do not require different versions for various devices; a single progressive app meets the requirements of all endpoints on which it operates. It significantly reduces of efforts that developers provide, and as a result, the cost to create a PWA decrease. The cost is three or four times lower than that of a native mobile app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  If you don't have or you're not planning to have a mobile app soon, it doesn't make sense to consider. The cost of development reduces just when you have to maintain Web / Android / IOS vs PWA.&lt;/li&gt;
&lt;li&gt;  If you just have a web store to maintain the maintenance cost is going to increase.&lt;/li&gt;
&lt;li&gt;  50% of your application will be running into another application. It means that if you use a Shopify or Adobe Commerce store (Magento Commerce) and you usually install apps that change something in the frontend, like apps and modules that improve the customer experience as soon as you install them, forget it, a developer most customizes the 50% of your store that's not you Shopify or Magento store anymore, but a PWA technology running in another server. It usually represents more time to implement something and more money invested to customize 100% of those apps that you usually just have to install.&lt;/li&gt;
&lt;li&gt;  The new 50% custom part of your project will be in another language, probably Vue, React, or Angular. Probably your devs aren't familiar with these technologies, since they aren't not using them now to develop your store.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-applike-experience"&gt;
  &lt;/a&gt;
  2. App-Like Experience 📱
&lt;/h2&gt;

&lt;p&gt;Progressive web applications (a.k.a PWA) provide an advanced user experience by combining the look and feel of mobile applications and the best of website performance. They have the design and settings that are very similar to those of native mobile software. Regardless of technologies, tools, and frameworks on which PWAs are developed, they provide the same user experience as native mobile apps do, and it is considered to be superior to that of websites.&lt;/p&gt;

&lt;p&gt;At the same time, they have the same speed, responsiveness, and comprehensive capabilities as websites with database access and automatic data. As a result, search engines index them, which is why systems such as Google or Bing can find PWA pages. When compared to mobile software that keeps its internal data only for its own use, the pages of these applications can be found on the internet, which may have a favorable impact on the number of page views.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  There are many &lt;a href="https://whatwebcando.today/"&gt;PWA capabilities &lt;/a&gt;to match the same experience of a mobile app, each PWA solution offers its own possibilities, and it comes to the agency of developer dedicate more time to implement them, 99% of the PWA implementations that I've seen, just implemented the most basic features.&lt;/li&gt;
&lt;li&gt;  This is unbelievable but there are companies that sell PWA as Headless then when the project is launched, the project is headless and the experience is not PWA, it doesn't even pass in the &lt;a href="https://developers.google.com/web/ilt/pwa/lighthouse-pwa-analysis-tool"&gt;Google PWA validation tool&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  If you don't track your KPIs you will have the costs and complexity of headless PWA applications but not the advantages that paid for.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-fast-installation"&gt;
  &lt;/a&gt;
  3. Fast Installation 🔥
&lt;/h2&gt;

&lt;p&gt;Unlike regular mobile applications, PWAs do not require a long and complex installation process, which significantly improves user experience. Users just download an app, quickly and directly to their devices, and they do not need to go to the App Store or Google Play. It streamlines the procedure and significantly reduces user abandonment. After users have downloaded an app, they can access it via a desktop icon.&lt;/p&gt;

&lt;p&gt;Some browsers even offer call-to-action-like teasers that prompt users to download these apps when they visit respective websites. This functionality comes built into browsers and allows the apps to enhance their credibility and reliability. As this software does not require installation on devices, users can easily access the PWA via a URL, which significantly contributes to the high shareability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  If you just want the basic features of PWA, measure if the agency is overselling a whole new project attached to it.&lt;/li&gt;
&lt;li&gt;  Basic PWA features might be achieved in a couple of days of work, but migration from Magento 2 to a Magento 2 headless structure might take a couple of months.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MeENmOXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/rafaelcg.com/wp-content/uploads/2021/05/Magento-PWA-installation.png%3Fresize%3D630%252C319%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MeENmOXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/rafaelcg.com/wp-content/uploads/2021/05/Magento-PWA-installation.png%3Fresize%3D630%252C319%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-better-performance"&gt;
  &lt;/a&gt;
  4. Better Performance 🚀
&lt;/h2&gt;

&lt;p&gt;PWAs cache and serve text, images and other content in a specific, efficient manner, which enables them to operate like websites and significantly improves the running speed. Along with quick operation, impeccable performance is another attribute that has an impact on user experience and conversion rates.&lt;/p&gt;

&lt;p&gt;Retailers and content providers should adopt this type of software as it enables a more positive user experience than mobile apps by improving retention and customer loyalty.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  There are many projects that migrated to PWA aiming performance, and the final result was a slower &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;Google Page Speed&lt;/a&gt; or &lt;a href="https://gtmetrix.com/"&gt;GTMetrix&lt;/a&gt; ranking and even worst SEO.&lt;/li&gt;
&lt;li&gt;  The analyses if essential to define the performance KPIs, the styles and static files and pages must be offline, but without consuming time of the first rendering.&lt;/li&gt;
&lt;li&gt;  In general, make sure if you have the possibility of spending 500x less time and money doing performance improvements in your current installation that would bring the same performance result to your current performance metric.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-platform-and-deviceagnosticism-%F0%9F%96%A5"&gt;
  &lt;/a&gt;
  5. Platform- and Device-Agnosticism 🖥
&lt;/h2&gt;

&lt;p&gt;Unlike regular applications that are very demanding on operating systems and the technical capabilities of various devices, PWAs work everywhere. A single app can satisfy the needs of various consumers and provide a uniform user experience on different endpoints. At the same time, this type of application enables cross-support to users that switch between their devices by providing them with a continuous experience. Users can access an app that has the same settings and data like that on another device.&lt;/p&gt;

&lt;p&gt;This fact also significantly contributes to business automation, as companies that rely on PWAs know that the software their employees use performs seamlessly regardless of the platform or app version. Also, PWAs are highly responsive to various form factors, as they adapt properly to various screen sizes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Your store won't be responsive just because you migrate to PWA, it's something that might be in place today.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-no-updating-issues"&gt;
  &lt;/a&gt;
  6. No Updating Issues 🤩
&lt;/h2&gt;

&lt;p&gt;PWAs have specific functionality that allows them to update automatically, without notifying users and bothering them with permission requests. These apps update themselves every time when users visit them, thus eliminating the need to download batch changes and install them. They just provide a renewed look with no human participation.&lt;/p&gt;

&lt;p&gt;However, some of the producers of progressive apps send push notifications to users to inform them about the arrival of a new update. All the same, producers have full control of the information and content, to which users have access.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  If you have an app today you know that it's a huge challenge. Basically, it's the same web experience, you deployed it, it's there for everyone.&lt;/li&gt;
&lt;li&gt;  Make sure you have the right "cache" invalidation to different kinds of pages and files. Styles might be saved in the client machine for more time than structural files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-seamless-offline-operation"&gt;
  &lt;/a&gt;
  7. Seamless Offline Operation 📡
&lt;/h2&gt;

&lt;p&gt;The capability to operate offline or in compromised networks makes PWAs much more convenient than websites. Built-in service workers cache important progressive web apps' features and information automatically, which eliminates the necessity to download it and allows users to access it without an internet connection.&lt;/p&gt;

&lt;p&gt;It is based on the saving of information that users previously accessed, for example, pages. If they try to open those that they have not visited online, an app can show a custom offline page. This capability is crucial for retailers, as it allows them to prevent users from abandoning their catalogs and enhances customer retention.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Make sure you make the offline content be saved in the client's device during the first access. Check if it won't be requested from the server in the subsequent pages.&lt;/li&gt;
&lt;li&gt;  Dynamic contents might be loaded via AJAX. All public static content of your store will be saved to everyone but the dynamic content will be distributed differently.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-no-dependence-on-app-distribution-services"&gt;
  &lt;/a&gt;
  8. No Dependence on App Distribution Services 🍎
&lt;/h2&gt;

&lt;p&gt;Usually, app distribution services, such as the App Store, Google Play or Microsoft Store, set high requirements to software that is included in their databases. Meeting their requirements may become quite a time- and effort-consuming process. Also, in some cases, services remove applications from databases without notice if a company fails to meet some of the requirements. So, PWAs allow producers to avoid complex reconciliation procedures as they do not need to be stored in similar services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  You might want to push your PWA app in the Apple and Google App stores, it will help you to achieve a bigger audience.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-push-notification-functionality-%EF%B8%8F"&gt;
  &lt;/a&gt;
  9. Push Notification Functionality ⭐️
&lt;/h2&gt;

&lt;p&gt;Like native mobile applications, PWAs have access to device-specific functionality, such as push notifications. This capability can be performed in various ways and allows companies to make the best use of content advertising.&lt;/p&gt;

&lt;p&gt;Why are push notifications especially efficient when it comes to PWAs? According to &lt;a href="https://developers.google.com/web/showcase/2016/service-worker-perf"&gt;some statistical data&lt;/a&gt;, almost 60% of users allow their progressive applications to send them notifications, which significantly increases opportunities to promote products or services. Moreover, these notifications are displayed on the screens of mobile devices, which is why there is a high probability that they attract users' attention, especially when compared to email newsletters, blog entries or posts in social networks.&lt;/p&gt;

&lt;p&gt;In such a way, a company can better access its target audience, and chances are, the audience will respond. Another valuable outcome is that these bouncing notifications, along with app icons on device desktops, considerably add to brand recognition, as they allow a business to draw attention to itself. However, users that have numerous applications installed on their mobile devices and that allow a great number of them to send notifications risk making their digital experiences cluttered.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Most of the time that's a third-party system in the background that is going to handle it for you, have in mind that you might not need a PWA for it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#10-enhanced-security"&gt;
  &lt;/a&gt;
  10. Enhanced Security 👮‍♀️
&lt;/h2&gt;

&lt;p&gt;PWAs rely on HTTPS to provide data safety and minimize the risk of security issues, as this protocol allows to preclude snooping and content tampering. Also, the applications take advantage of Web Bluetooth technology that includes certain security capabilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  More security is completely relative, you might have even less security depending on how the structure was made.&lt;/li&gt;
&lt;li&gt;  It seems to be 100% guarantee by migrating to PWA but it's not.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#my-thoughts"&gt;
  &lt;/a&gt;
  My thoughts
&lt;/h2&gt;

&lt;p&gt;I love web development and the power of PWA capabilities, I truly believe that PWA is the future and everyone can take parts of its advantages to improve their customer experience. What I don't like is when someone sells some PWA to merchants without telling the points to consider, it results in frustration, huge cost and the client thinks that PWA is what has been delivered by the agency and not what it really is. An awesome method to improve your customer experience.&lt;/p&gt;

</description>
      <category>pwa</category>
      <category>ecommerce</category>
      <category>headless</category>
      <category>strategy</category>
    </item>
    <item>
      <title>Can someone help me figure out how I can redistribute my game?</title>
      <author>Calin Baenen</author>
      <pubDate>Fri, 28 May 2021 21:27:34 +0000</pubDate>
      <link>https://dev.to/baenencalin/can-someone-help-me-figure-out-how-i-can-redistribute-my-game-161i</link>
      <guid>https://dev.to/baenencalin/can-someone-help-me-figure-out-how-i-can-redistribute-my-game-161i</guid>
      <description>&lt;p&gt;&lt;a href="https://twitter.com/BaenenCalin/status/1398389301256364033"&gt;Original tweet.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I want people to test my game, and I got someone to test my game, but they got this strange error, and so I tried to fix it in a logical way, and it provided another error, and I'm not sure how I can fix this error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/gen2brain/raylib-go/issues/135"&gt;GitHub Issue (How do I redistribute my prototype-game? #135).&lt;/a&gt;&lt;/p&gt;

</description>
      <category>c</category>
      <category>go</category>
      <category>help</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>How to create a multilingual project in Laravel 8 (i18n)</title>
      <author>Jérôme W</author>
      <pubDate>Fri, 28 May 2021 20:27:15 +0000</pubDate>
      <link>https://dev.to/jeromew90/how-to-create-a-multilingual-project-in-laravel-internationalization-i18n-11ol</link>
      <guid>https://dev.to/jeromew90/how-to-create-a-multilingual-project-in-laravel-internationalization-i18n-11ol</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VnBsVAKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2sjhp06mhy6zzcqz3x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VnBsVAKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2sjhp06mhy6zzcqz3x.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This tutorial explains how to create a language system and be able to change the language in the menu with the corresponding translations.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I will try to be clear and concise 😃&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h1&gt;

&lt;p&gt;First, you need to create a controller &lt;code&gt;App/Http/Controllers&lt;/code&gt; to record the language in session and be able to retrieve it with the middleware we will create just after :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\RedirectResponse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LocalizationController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * @param $locale
     * @return RedirectResponse
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$locale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;setLocale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$locale&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'locale'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$locale&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you must create a middleware &lt;code&gt;App/Http/Middleware&lt;/code&gt; to retrieve the language that was recorded in session :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Middleware&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Closure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Localization&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Handle an incoming request.
     * @param \Illuminate\Http\Request $request
     * @param \Closure $next
     * @return mixed
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Closure&lt;/span&gt; &lt;span class="nv"&gt;$next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'locale'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;setLocale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'locale'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, you must save the middleware in &lt;code&gt;app/http/Kernel.php&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="cd"&gt;/**
     * The application's route middleware groups.
     * @var array
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$middlewareGroups&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'web'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;App\Http\Middleware\Localization&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;

        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finaly, create a route to change the language :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Controllers\LocalizationController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'lang/{locale}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nc"&gt;App\Http\Controllers\LocalizationController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#create-the-dropdown"&gt;
  &lt;/a&gt;
  Create the dropdown
&lt;/h1&gt;

&lt;p&gt;First, you must create a flag folder in &lt;code&gt;public/images&lt;/code&gt; and store flags images inside :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MWA3p499--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjrpx63jcxd0wdkaggrl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MWA3p499--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjrpx63jcxd0wdkaggrl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Secondly, in your menu, insert this code to be able to switch from one language to another :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;@php $locale = session()-&amp;gt;get('locale'); @endphp
&lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-item dropdown"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"navbarDropdown"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-link dropdown-toggle"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;
       &lt;span class="na"&gt;data-toggle=&lt;/span&gt;&lt;span class="s"&gt;"dropdown"&lt;/span&gt; &lt;span class="na"&gt;aria-haspopup=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;aria-expanded=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt; &lt;span class="na"&gt;v-pre&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        @switch($locale)
            @case('en')
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/en.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; English
            @break
            @case('fr')
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/fr.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Français
            @break
            @default
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/en.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; English
        @endswitch
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"caret"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dropdown-menu dropdown-menu-right"&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"navbarDropdown"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dropdown-item"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"lang/en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/en.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; English&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dropdown-item"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"lang/fr"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/fr.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Français&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#lets-try-it"&gt;
  &lt;/a&gt;
  Let's try it
&lt;/h1&gt;

&lt;p&gt;To test that everything works, insert this code on your homepage or any other page :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;@lang("Bonjour")&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then to finish, in the &lt;code&gt;resources/lang&lt;/code&gt; folder, you have to create a folder for each language you want (for example fr and en) and for each folder, do the following to take into account the text of the homepage to translate :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// EN folder&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'Bonjour'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Hello'&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we go, now if you click on the english flag in your menu, the &lt;em&gt;Bonjour&lt;/em&gt; text will change to &lt;em&gt;Hello&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Notice that if you need, there is another way to make translations using &lt;code&gt;json&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Bonjour"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Hello"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;p&gt;If you're looking for a lot a flags, I have a &lt;a href="https://github.com/Jerome-W-90/flags-icon-iso-3166-1-alpha-2"&gt;repository&lt;/a&gt; with : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;284 flags of countries and unions all over the world&lt;/li&gt;
&lt;li&gt;With name &lt;code&gt;France.png&lt;/code&gt; or ISO 3166-1 alpha-2 codes &lt;code&gt;fr.png&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Available sizes: 16×16, 24×24, 32×32, 48×48, 64×64, 128×128&lt;/li&gt;
&lt;li&gt;Icon formats: PNG&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want more informations about localization, you can refer in official Laravel documentation : &lt;a href="https://laravel.com/docs/8.x/localization"&gt;https://laravel.com/docs/8.x/localization&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>Ruby Money &amp; BigDecimal</title>
      <author>M Bellucci</author>
      <pubDate>Fri, 28 May 2021 20:26:54 +0000</pubDate>
      <link>https://dev.to/delbetu/ruby-money-bigdecimal-1chb</link>
      <guid>https://dev.to/delbetu/ruby-money-bigdecimal-1chb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h2&gt;

&lt;p&gt;In my current job, we faced calculation errors when operating with &lt;code&gt;float&lt;/code&gt; for Money.&lt;br&gt;
After some investigation, we found this &lt;a href="https://husobee.github.io/money/float/2016/09/23/never-use-floats-for-currency.html"&gt;article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our first approach was to find every usage of money attributes and parse them with &lt;code&gt;BigDecimal&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
This solution has some drawbacks. First, we would need to replace it in many places. Second, it doesn't prevent future developers to use float.  &lt;/p&gt;

&lt;p&gt;In order to overcome those issues, I wanted to enforce a validation over every money attribute. &lt;br&gt;
Then if a future execution accidentally does &lt;code&gt;money_attr = 233.0&lt;/code&gt; (float) we could detect that error and report it.&lt;br&gt;
After thinking for a moment I thought that would be preferable to do a conversion (&lt;code&gt;float-&amp;gt;BigDecimal&lt;/code&gt;) rather than raising an error.&lt;/p&gt;

&lt;p&gt;So I'd like to write Ruby code to say: "hey if someone tries to assign a &lt;code&gt;float&lt;/code&gt; to a money attribute then convert it to &lt;code&gt;BigDecimal&lt;/code&gt;"&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution
&lt;/h2&gt;

&lt;p&gt;In order to do that I came up with this solution:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;BigDecimalCheck&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;included&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ClassMethods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;ClassMethods&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;enforce_big_decimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;define_method&lt;/span&gt; &lt;span class="ss"&gt;:"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="ss"&gt;="&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="c1"&gt;# try to convert argument to BigDecimal&lt;/span&gt;
          &lt;span class="nb"&gt;instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:"@&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="ss"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;BigDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Rate&lt;/span&gt;
  &lt;span class="nb"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:money&lt;/span&gt;

  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;BigDecimalCheck&lt;/span&gt;
  &lt;span class="n"&gt;enforce_big_decimal&lt;/span&gt; &lt;span class="ss"&gt;:money&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that code in place a consumer code would work like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;            &lt;span class="c1"&gt;# works&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;33.0293&lt;/span&gt;       &lt;span class="c1"&gt;# works&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"33"&lt;/span&gt;          &lt;span class="c1"&gt;# works&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"33.0293"&lt;/span&gt;     &lt;span class="c1"&gt;# works&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"no numeric"&lt;/span&gt;  &lt;span class="c1"&gt;# Argument Error&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-this-solution-work"&gt;
  &lt;/a&gt;
  How this solution work?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;self.included&lt;/code&gt; it is a hook that Ruby modules provide. It is called when the module is included and receives the class that included it.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;klass.extend(ClassMethod)&lt;/code&gt; Let's say that klass = Foo, then this would be the same as doing:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;
  &lt;span class="kp"&gt;extend&lt;/span&gt; &lt;span class="no"&gt;ClassMethod&lt;/span&gt;
  &lt;span class="c1"&gt;# Now I'm able to call methods in ClassMethod form here&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which will inject methods from ClassMethod into Foo object at class scope. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;enforce_big_decimal&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;enforce_big_decimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;define_method&lt;/span&gt; &lt;span class="ss"&gt;:"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="ss"&gt;="&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="c1"&gt;# try to convert argument to BigDecimal&lt;/span&gt;
          &lt;span class="nb"&gt;instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:"@&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="ss"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;BigDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If I call &lt;code&gt;enforce_big_decimal :unit_price, total_price&lt;/code&gt;&lt;br&gt;
It will define two methods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unit_price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;parsed_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BigDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# raise error if cannot parse&lt;/span&gt;
  &lt;span class="nb"&gt;instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:@unit_price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parsed_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;total_price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;parsed_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BigDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# raise error if cannot parse&lt;/span&gt;
  &lt;span class="nb"&gt;instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:@total_price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parsed_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conslusion"&gt;
  &lt;/a&gt;
  Conslusion
&lt;/h2&gt;

&lt;p&gt;I've shown an example of how to generalize the solution of a problem by using ruby meta-programming techniques.&lt;br&gt;&lt;br&gt;
I hope it can help you solve similar problems.&lt;br&gt;&lt;br&gt;
Feel free to ask questions or suggest improvements.&lt;br&gt;&lt;br&gt;
Thanks for reading!&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>metaprogramming</category>
      <category>float</category>
      <category>bigdecimal</category>
    </item>
    <item>
      <title>Referrers on the web</title>
      <author>Jordan Finneran</author>
      <pubDate>Fri, 28 May 2021 20:25:16 +0000</pubDate>
      <link>https://dev.to/jordanfinners/referrers-on-the-web-n2b</link>
      <guid>https://dev.to/jordanfinners/referrers-on-the-web-n2b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="#intro"&gt;Intro&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#referrer-policy"&gt;Referrer-Policy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#links"&gt;Linking&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#server"&gt;Bonus: Server header&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#summary"&gt;Summary&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Continuing on from my previous blog about &lt;a href="https://jordanfinners.dev/blogs/website-security-week"&gt;website security week&lt;/a&gt;, we're going to talk about a Referrers on the web.&lt;/p&gt;

&lt;p&gt;Referrers on the web allow sites you are visiting to see what site you have come from, as the &lt;code&gt;Referer&lt;/code&gt; header (it is actually mispelled in the HTTP Specification) contains a absolute or partial url of the site you've come from if you have followed a link.&lt;br&gt;
This is &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Referer_header:_privacy_and_security_concerns"&gt;commonly used for tracking and analytics&lt;/a&gt;, but it can also be used to steal information for example that contained in the URL of a reset password page or where a token is part of the URL, which is why it comes under security headers.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#referrerpolicy"&gt;
  &lt;/a&gt;
  Referrer-Policy &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This header indicates how much information can be shared in the &lt;code&gt;Referer&lt;/code&gt; header on requests made across your site.&lt;/p&gt;

&lt;p&gt;Recommended setting:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Referrer-Policy: no-referrer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can read about it more on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"&gt;Modzilla&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It can also be set in HTML as a meta tag &lt;code&gt;&amp;lt;meta name="referrer" content="origin"&amp;gt;&lt;/code&gt;, but also on individual links.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linking"&gt;
  &lt;/a&gt;
  Linking &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Links aka &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags can include a more specific referrer policy than your site wide one you set using the previous header.&lt;/p&gt;

&lt;p&gt;This can be controlled using the &lt;code&gt;referrerpolicy&lt;/code&gt; attribute, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="http://example.com" referrerpolicy="origin"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This can also be used on &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;

&lt;p&gt;Or alternatively using the &lt;code&gt;rel&lt;/code&gt; attribute to remove any referrer, this would be my recommended pattern.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="http://example.com" rel="noreferrer"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This can also be used on &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-server-header"&gt;
  &lt;/a&gt;
  Bonus: Server header &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As this is a fairly short and sweet blog I thought I would include a bonus header!&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Server&lt;/code&gt; header, this is usually used to indicate what is serving up your website. Often a form of advertising about the technology you are using.&lt;/p&gt;

&lt;p&gt;This can often include the version of the tools used to serve your website. You should avoid this and including any default information in this header as it could lead to vulnerabilities being found in that version of the tool.&lt;/p&gt;

&lt;p&gt;I would recommend removing the header if possible or overriding it with your own value, as then no information is leaked!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In summary, setting a few additional headers when serving up your site can in this case also the privacy of your users and reduce any leakage of information to third parties. It reduces the amount of attack surface there is for attackers and prevent common attacks on websites.&lt;/p&gt;

&lt;p&gt;Set those headers now!&lt;/p&gt;

&lt;p&gt;Happy Building!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>security</category>
    </item>
    <item>
      <title>Minimizing Webpack bundle size</title>
      <author>Anvil Engineering</author>
      <pubDate>Fri, 28 May 2021 20:24:34 +0000</pubDate>
      <link>https://dev.to/useanvil/minimizing-webpack-bundle-size-38gg</link>
      <guid>https://dev.to/useanvil/minimizing-webpack-bundle-size-38gg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-dreaded-loading-spinner"&gt;
  &lt;/a&gt;
  The dreaded loading spinner
&lt;/h2&gt;

&lt;p&gt;The two key metrics in determining whether users will stay on your site is the time it takes to load the page and the time it takes to interact with it. The first is &lt;code&gt;First Contentful Paint&lt;/code&gt; and the second is &lt;code&gt;Time to Interactive&lt;/code&gt;. You can find these metrics for your own site by going to your developer tools and generating a report under the Lighthouse tab on Chrome.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TpE6asuk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m41jdg81a8iwt355hn9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TpE6asuk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m41jdg81a8iwt355hn9h.png" alt="Lighthouse metrics for our web app"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Lighthouse metrics for a random web app&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;By minimizing the size of the bundle, we reduce the time it takes for browsers to download the JavaScript for our site, improving user experience. With every additional second of wait time, the user is more likely to close the tab. Consider all of the users that visit your site everyday and that can be thousands of seconds wasted. The chance of losing a potential user is even higher when you have a complex web app, making it even more important to ensure the bundle size stays low. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#understanding-the-situation"&gt;
  &lt;/a&gt;
  Understanding the situation
&lt;/h2&gt;

&lt;p&gt;Let’s start by getting an understanding of all the code &amp;amp; dependencies that need to be sent to the browser, along with the memory size of each. Adding &lt;a href="https://github.com/webpack-contrib/webpack-bundle-analyzer"&gt;&lt;code&gt;webpack-bundle-analyzer&lt;/code&gt;&lt;/a&gt; to your webpack configuration is the perfect starting point.&lt;/p&gt;

&lt;p&gt;Install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; webpack-bundle-analyzer
&lt;span class="c"&gt;# or&lt;/span&gt;
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; webpack-bundle-analyzer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;WebpackBundleAnalyzer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webpack-bundle-analyzer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;webpackConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebpackBundleAnalyzer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BundleAnalyzerPlugin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After compiling your bundle, your browser should open up a visualization of all the content and its memory sizes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_eMbBIwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bn383xxxi6eogbhyo54.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_eMbBIwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bn383xxxi6eogbhyo54.png" alt="Visualization of the bundle"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Visualization of the bundle&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tree-shaking"&gt;
  &lt;/a&gt;
  Tree shaking
&lt;/h2&gt;

&lt;p&gt;Webpack works by building a dependency graph of every module imported into our web app, traversing through files containing the code we need, and bundling them together into a single file. As our app grows in complexity with more routes, components, and dependencies, so does our bundle. When our bundle size exceeds several MBs, performance issues will arise. It’s time to consider tree shaking as a solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webpack.js.org/guides/tree-shaking/"&gt;Tree shaking&lt;/a&gt; is a practice of eliminating dead code, or code that we’ve imported but do not utilize. Dead code can vary from React components, helper functions, duplicate code, or svg files. Let's go through ways of reducing the amount of dead code we have with help from some Webpack plugins.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#babelpluginimport"&gt;
  &lt;/a&gt;
  babel-plugin-import
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://github.com/ant-design/babel-plugin-import"&gt;babel-plugin-import&lt;/a&gt; plugin for &lt;code&gt;babel-loader&lt;/code&gt; enables Webpack to only include the code we need when traversing through dependencies during compilation, instead of including the entire module. This is especially useful for heavy packages like &lt;code&gt;antd&lt;/code&gt; and &lt;code&gt;lodash&lt;/code&gt;. More often than not, web apps only need select UI components and helper functions, so let’s just import what’s needed.&lt;/p&gt;

&lt;p&gt;Install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; babel-plugin-import
&lt;span class="c"&gt;# or&lt;/span&gt;
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; babel-plugin-import
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;webpackConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js|jsx&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;include&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
    &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
      &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="c1"&gt;// modularly import the JS and styles that we use from ‘antd’&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;import&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;libraryName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;antd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;antd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="c1"&gt;// modularly import the JS that we use from ‘@ant-design/icons’&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;import&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;libraryName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@ant-design/icons&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;libraryDirectory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;es/icons&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;antd-icons&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We instantiated two instances of &lt;code&gt;babel-plugin-import&lt;/code&gt;, one for the &lt;code&gt;antd&lt;/code&gt; package and the other for the &lt;code&gt;@ant-design&lt;/code&gt; package. Whenever Webpack encounters &lt;code&gt;import&lt;/code&gt; statements from those packages, it is now selective in terms of what part of the package to include in the bundle.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Dropdown&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;antd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// transforms to&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;_dropdown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;antd/lib/dropdown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#babelpluginlodash"&gt;
  &lt;/a&gt;
  babel-plugin-lodash
&lt;/h3&gt;

&lt;p&gt;Similar to &lt;code&gt;babel-plugin-import&lt;/code&gt;, the &lt;a href="https://github.com/lodash/babel-plugin-lodash"&gt;babel-plugin-lodash&lt;/a&gt; plugin cherry picks the code we need to import from &lt;code&gt;lodash&lt;/code&gt;. The parsed size of the entire &lt;code&gt;lodash&lt;/code&gt; package is ~600KB, so we definitely don’t want everything.&lt;/p&gt;

&lt;p&gt;Install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; babel-plugin-lodash
&lt;span class="c"&gt;# or&lt;/span&gt;
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; babel-plugin-lodash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;webpackConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js|jsx&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;include&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
    &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
      &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;...,&lt;/span&gt;
          &lt;span class="c1"&gt;// modularly import the JS that we use from ‘lodash’&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;presets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@babel/env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you’re already using &lt;code&gt;babel-plugin-import&lt;/code&gt; for &lt;code&gt;lodash&lt;/code&gt;, this may be unnecessary, but it’s always nice to have alternatives.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;objSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="c1"&gt;// transforms to&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;_size&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lodash/size&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;objSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_size&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#contextreplacementplugin"&gt;
  &lt;/a&gt;
  context-replacement-plugin
&lt;/h3&gt;

&lt;p&gt;Looking at the visual of &lt;code&gt;bundle.js&lt;/code&gt;, the locale data in the &lt;code&gt;moment&lt;/code&gt; package already makes up 480KB. In the case that no locale functionality is used, we should remove that portion of the package from the bundle. Webpack’s &lt;code&gt;ContextReplacementPlugin&lt;/code&gt; is the best way to do this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rVFB6rju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys9wqgiv89vl27k4yipk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rVFB6rju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys9wqgiv89vl27k4yipk.png" alt="670KB total"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;670KB total&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webpack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// only include files matching `/(en)$/` in the `moment/locale` context&lt;/span&gt;
&lt;span class="nx"&gt;webpackConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ContextReplacementPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/moment&lt;/span&gt;&lt;span class="se"&gt;[/\\]&lt;/span&gt;&lt;span class="sr"&gt;locale$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;en&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A quick look at the bundle analyzer visualization shows that this simple plugin already shaves ~480KB off our bundle size. A very quick win.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rlLbtd6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yegfo5s20pr7ril709fx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rlLbtd6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yegfo5s20pr7ril709fx.png" alt="176KB total"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;176KB total&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#momenttimezonedatawebpackplugin"&gt;
  &lt;/a&gt;
  moment-timezone-data-webpack-plugin
&lt;/h3&gt;

&lt;p&gt;If you’re using &lt;code&gt;moment-timezone&lt;/code&gt; in your app, you’ll find &lt;a href="https://github.com/gilmoreorless/moment-timezone-data-webpack-plugin"&gt;moment-timezone-data-webpack-plugin&lt;/a&gt; extremely useful. &lt;code&gt;Moment-timezone&lt;/code&gt; includes a comprehensive json file of all timezones for a wide date range, which results in a package size of ~208KB. As with locales, it’s highly likely we don’t need this large data set, so let’s get rid of it. This plugin helps us do that by customizing the data we want to include and stripping out the rest.&lt;/p&gt;

&lt;p&gt;Install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; moment-timezone-data-webpack-plugin
&lt;span class="c"&gt;# or&lt;/span&gt;
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; moment-timezone-data-webpack-plugin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MomentTimezoneDataPlugin&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;moment-timezone-data-webpack-plugin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// only include timezone data starting from year 1950 to 2100 in America&lt;/span&gt;
&lt;span class="nx"&gt;webpackConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MomentTimezoneDataPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;startYear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1950&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;endYear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;matchZones&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/^America&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A before and after analysis shows the package size shrinking to 19KB from 208KB.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-splitting"&gt;
  &lt;/a&gt;
  Code splitting
&lt;/h2&gt;

&lt;p&gt;A major feature of Webpack is code splitting, which is partitioning your code into separate bundles to be loaded on demand or in parallel. There are a couple ways code splitting can be done through Webpack, one of which is having multiple entry points and another is having dynamic imports. We’ll be focusing on dynamic imports.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#polyfills"&gt;
  &lt;/a&gt;
  Polyfills
&lt;/h3&gt;

&lt;p&gt;A fitting use case for code splitting is polyfills, since they're only neccessary depending on the browser. We don't know in advance whether a polyfill would be required until the client fetches the bundle, and thus we introduce dynamic imports.&lt;/p&gt;

&lt;p&gt;In cases where a dependency is used for something that is already supported by some browsers, it may be a good idea to drop the dependency, use the native function supported by most browsers, and polyfill the function for browsers that don’t support it. One example is getting the timezone.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;moment-timezone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;guess&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// works the same as&lt;/span&gt;
&lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;resolvedOptions&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;timeZone&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we get &lt;code&gt;Intl.DateTimeFormat().resolvedOptions().timeZone&lt;/code&gt;  polyfilled on the older browsers, we can completely drop &lt;code&gt;moment-timezone&lt;/code&gt; as a dependency, reducing our bundle size by an extra ~20KB.&lt;/p&gt;

&lt;p&gt;Let’s start by adding the polyfill as a dependency.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add date-time-format-timezone
&lt;span class="c"&gt;# or&lt;/span&gt;
npm &lt;span class="nb"&gt;install &lt;/span&gt;date-time-format-timezone
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should only import it if the browser does not support it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;resolvedOptions&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;timeZone&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cm"&gt;/* webpackChunkName: “polyfill-timezone” */&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;timezone&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As Webpack traverses through the code during compilation, it’ll detect any dynamic imports and separate the code into its own chunk. We’ve accomplished two things: reducing the size of the main bundle, and only sending the polyfill chunk when necessary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-routes"&gt;
  &lt;/a&gt;
  Frontend routes
&lt;/h3&gt;

&lt;p&gt;For complex web apps that can be divided into sections, route-based code splitting is a clear solution. For example, a website may have an 'e-commerce' section and an 'about the company' section. Many users who visit the site only interact with the e-commerce pages, so loading the other sections of the web app is unnecessary. Let’s reduce our bundle size by splitting our main bundle into many bundles to be loaded on demand.&lt;/p&gt;

&lt;p&gt;If you’re using React, good news because route-based code splitting is pretty intuitive in this framework. Like with the example shown earlier, dynamic imports is used to partition the app into separate bundles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Suspense&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lazy&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;LoadingScreen&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;components/LoadingScreen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Suspense&lt;/span&gt; &lt;span class="nx"&gt;fallback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;LoadingScreen&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;routes/landing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/shop&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;routes/shop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;routes/about&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Suspense&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/BrowserRouter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have this code in place, Webpack will take care of the bundle-splitting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#removing-duplicate-dependencies"&gt;
  &lt;/a&gt;
  Removing duplicate dependencies
&lt;/h2&gt;

&lt;p&gt;Duplicate dependencies arise when dependencies with overlapping version ranges exist. This generally happens due to the deterministic nature of &lt;code&gt;yarn add&lt;/code&gt; and &lt;code&gt;npm install&lt;/code&gt;. As more dependencies are added, the more likely duplicate packages are installed. This leads to an unnecessarily bloated size of your web app and bundle.&lt;/p&gt;

&lt;p&gt;Fortunately, there are tools for this. If you’re using &lt;code&gt;yarn&lt;/code&gt; version 2 or greater, you can skip this as &lt;code&gt;yarn&lt;/code&gt; has taken care of it automatically. These tools work by moving dependencies with overlapping version ranges further up the dependency tree, enabling them to be shared by multiple dependent packages, and removing any redundancies.&lt;/p&gt;

&lt;p&gt;If you’re using yarn 1.x:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn global add yarn-deduplicate
yarn-deduplicate yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you use NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm dedupe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#upgrading-and-removing-dependencies"&gt;
  &lt;/a&gt;
  Upgrading and removing dependencies
&lt;/h2&gt;

&lt;p&gt;Look at the bundle visual again and check if the large dependencies support tree shaking and whether there is a similar but smaller package that does everything you need. Upgrading dependencies frequently is recommended, as package size usually slims down over time and as tree shaking is introduced.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lastly-production-mode"&gt;
  &lt;/a&gt;
  Lastly, production mode
&lt;/h2&gt;

&lt;p&gt;Make sure Webpack is in production mode on release! Webpack applies a number of optimizations to your bundle, including minification with &lt;a href="https://www.npmjs.com/package/terser-webpack-plugin"&gt;&lt;code&gt;TerserWebpackPlugin&lt;/code&gt;&lt;/a&gt; if you’re using Webpack v4 or above. If not, you’ll have to install and add it manually. Other optimizations include omitting development-only code and using optimized assets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;We’ve covered the importance of bundle size, analyzing the composition of a bundle, tree shaking, code splitting, dependency deduplication, and various Webpack plugins to make our lives easier. We also looked into dynamic imports and loading code on demand. With these practices introduced into your &lt;code&gt;webpack.config.js&lt;/code&gt; file, you can worry less about those dreaded loading spinners!&lt;/p&gt;

&lt;p&gt;We’ve applied these practices to our code at Anvil, and believe sharing our experience helps everyone in creating awesome products. If you’re developing something cool with PDFs or paperwork automation, let us know at &lt;a href="//mailto:developers@useanvil.com"&gt;developers@useanvil.com&lt;/a&gt;. We’d love to hear from you.&lt;/p&gt;

</description>
      <category>webpack</category>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Projects to become a Fronted Master</title>
      <author>Chaitanya Prabuddha</author>
      <pubDate>Fri, 28 May 2021 20:24:02 +0000</pubDate>
      <link>https://dev.to/line/projects-to-become-a-fronted-master-151o</link>
      <guid>https://dev.to/line/projects-to-become-a-fronted-master-151o</guid>
      <description>&lt;p&gt;Front-end web development is the practice of converting data to a graphical interface, through the use of HTML, CSS, and JavaScript, so that users can view and interact with that data. A person who does this is called a front-end developer.&lt;/p&gt;

&lt;p&gt;Being a frontend developer, you do one of the most important tasks for your company. To become a expert in it, it takes a lot of tasks and efforts. &lt;/p&gt;

&lt;p&gt;Here are some projects that you can do to master frontend development- &lt;/p&gt;

&lt;p&gt;1.&lt;strong&gt;Design and code your own portfolio website.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is the only place, where you can show your skills, personality &amp;amp; your work. This needs to be different. If you don't know anything about designing a website, make sure to take help from Dribbble, they are amazing thousands of designers around the world are posting their design there you can take inspirations from  there and put your 100% effort in coding the websites.&lt;/p&gt;

&lt;p&gt;2.&lt;strong&gt;Make a beautiful open-source project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Take Hard designs from Dribbble as a project, and try your best to copy it by coding it. This could make your GitHub-profile a lot more strong as well as can make your skills better.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#subscribe-to-newsletter-get-amazing-content-which-is-not-available-here-httpslinenewslettersubstackcom"&gt;
  &lt;/a&gt;
  Subscribe to Newsletter (Get Amazing Content, which is not available here), &lt;a href="https://linenewsletter.substack.com/"&gt;https://linenewsletter.substack.com/&lt;/a&gt;
&lt;/h6&gt;

&lt;p&gt;3.&lt;strong&gt;Make a todo list app&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try to make an todo list for yourself. Open-Source it and make sure to add all the features that you want from an todo-list app and Walla, you have your own app which is different from others.&lt;/p&gt;

&lt;p&gt;4.&lt;strong&gt;Make different projects with Angular AND VueJS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the best JavaScript libraries, try to make make and app with VueJS and Also try to make an app from Angular 8.&lt;/p&gt;

&lt;p&gt;5.&lt;strong&gt;Make A Blog&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make a using HTML,CSS and JavaScript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#end"&gt;
  &lt;/a&gt;
  &lt;strong&gt;END&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://linenewsletter.substack.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g0IlnTfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1b369h9xq2skxjgdxkz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>html</category>
      <category>react</category>
    </item>
    <item>
      <title>Top React component libraries (2021)</title>
      <author>kevbosaurus</author>
      <pubDate>Fri, 28 May 2021 20:19:16 +0000</pubDate>
      <link>https://dev.to/retool/top-react-component-libraries-2021-na9</link>
      <guid>https://dev.to/retool/top-react-component-libraries-2021-na9</guid>
      <description>&lt;p&gt;Because of React’s ubiquity (&lt;a href="https://github.com/facebook/react"&gt;169k&lt;/a&gt; stars on GitHub), developers have a near-endless supply of UI libraries with custom components to draw upon to build applications. But not all React component libraries are created equal. Some are best for general purposes, others were created specifically for web development, and many are tailored for niche use cases like enterprise product production.&lt;/p&gt;

&lt;p&gt;We’ll review React component libraries in this post considering several factors like popularity, use cases, documentation, resources, support, etc.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#materialui"&gt;Material-UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#antdesignantd"&gt;Ant Design (AntD)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reactbootstrap"&gt;React Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#grommet"&gt;Grommet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rebass"&gt;Rebass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blueprint"&gt;Blueprint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#semanticuireact"&gt;Semantic UI React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#retool"&gt;Retool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Honorable mentions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#fluentreactui"&gt;Fluent React UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#onsenui"&gt;Onsen UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#evergreen"&gt;Evergreen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#materialui"&gt;
  &lt;/a&gt;
  Material-UI
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/mui-org/material-ui"&gt;68k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/@material-ui/core"&gt;1,9M&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/material-ui"&gt;12.5k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Developed by Google in 2014, &lt;a href="https://material-ui.com/"&gt;Material-UI&lt;/a&gt; is a general-purpose customizable component library to build React applications. The folks at Google designed Material-UI as an adaptable system of &lt;a href="https://material.io/design/guidelines-overview"&gt;guidelines&lt;/a&gt;, components, and tools to make app building beautiful yet straightforward.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#materialui-components"&gt;
  &lt;/a&gt;
  Material-UI components
&lt;/h2&gt;

&lt;p&gt;The Material-UI component library offers a wide range of options from app bars to time pickers.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b3FP6kXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8bc8134lmgc9xqa4nke.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b3FP6kXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8bc8134lmgc9xqa4nke.jpg" alt="Material-UI components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google also provides guidelines for usage, design principles, dos and don’t, and best practices for each type of component. This makes it easy for developers to build well-designed apps regardless of intuition for design.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SraylRHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x77hotsxc93du58rzqm7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SraylRHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x77hotsxc93du58rzqm7.jpg" alt="Material-UI guidelines"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#materialui-themes-and-theming"&gt;
  &lt;/a&gt;
  Material-UI themes and theming
&lt;/h2&gt;

&lt;p&gt;Material-UI offers several free and paid &lt;a href="https://material-ui.com/store/"&gt;themes&lt;/a&gt; to get started with. Paid themes start at $59 for a standard license and increase to up to $599 for an extended license. The key difference between standard and extended licenses is the ability to charge end users. Both are limited to the usage of the theme for a “single application.” Most themes offer a robust set of features, documentation, and support.&lt;/p&gt;

&lt;p&gt;For those who want complete control over design elements, Material-UI allows for custom theming to “systematically customize Material Design to better reflect your product’s brand.” Material Design is beneficial for applying consistent design across your app and making global design changes with minimal effort.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vznhXD04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tiljbfou839sykkpnr53.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vznhXD04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tiljbfou839sykkpnr53.jpg" alt="Material-ui customization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#materialui-documentation-and-support"&gt;
  &lt;/a&gt;
  Material-UI documentation and support
&lt;/h2&gt;

&lt;p&gt;Material-UI is well documented and supported. Documentation covers everything from installation to components to styling and guides for implementing utilities like server-side rendering and localization. &lt;/p&gt;

&lt;p&gt;For support, there’s plenty of free options like the Material-UI community, Stack Overflow, and GitHub. Material points technical questions to Stack Overflow, where more than 12.5k questions have been posted. GitHub is used exclusively as a bugs and feature requests tracker. On the paid side, Material-UI suggests purchasing a &lt;a href="https://tidelift.com/subscription/pkg/npm-material-ui"&gt;Tidelift subscription&lt;/a&gt; which offers “flexibility of open-source and the confidence of commercial-grade software.” At the rate of $200/hr or $1500 per day, “&lt;a href="https://material-ui.com/getting-started/support/#custom-work"&gt;Custom work&lt;/a&gt;” can be requested for help modifying Material-UI to meet specific requirements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apps-and-websites-built-on-materialui"&gt;
  &lt;/a&gt;
  Apps and websites built on Material-UI
&lt;/h2&gt;

&lt;p&gt;We've grabbed a few screenshots from the Material-UI website below. See the full showcase of public apps using Material-UI &lt;a href="https://material-ui.com/discover-more/showcase/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uCkecaur--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcnws05671uj88we4b83.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uCkecaur--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcnws05671uj88we4b83.jpg" alt="Material-UI showcase"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#ant-design-antd"&gt;
  &lt;/a&gt;
  Ant Design (AntD)
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ant-design/ant-design"&gt;71.4k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/antd"&gt;610k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/antd"&gt;3.2k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Ant Financial&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Ant Design (also referred to as AntD) brands itself as the "The world's second most popular React UI" although, it's unclear who they view as the most popular. AntD differentiates itself from other React component libraries as a design system for enterprise-level products. AntD has also developed a &lt;a href="https://ant.design/docs/spec/values"&gt;design philosophy&lt;/a&gt; based on four values: Natural, Certain, Meaningful, Growing. &lt;/p&gt;

&lt;p&gt;Notable companies that have bought into AntD's design philosophy include Ant Financial, Alibaba, Tencent, and Baidu. Ant Design was created by Ant Financial and was launched in 2016 — more in this &lt;a href="https://news.ycombinator.com/item?id=13053137"&gt;Show HN thread&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YysoXRXC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28sskqugy4awxqkjndip.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YysoXRXC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28sskqugy4awxqkjndip.jpg" alt="antd serp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ant-design-components"&gt;
  &lt;/a&gt;
  Ant Design components
&lt;/h2&gt;

&lt;p&gt;AntD offers a set of more than 50 components that serve as building blocks for enterprise applications. They also recommend using other React third-party libraries for components that fall outside of the Ant Design specification, such as the &lt;a href="https://github.com/alibaba/hooks"&gt;React Hooks Library&lt;/a&gt; or &lt;a href="https://github.com/mac-s-g/react-json-view"&gt;React JSON View&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ant-design-theming"&gt;
  &lt;/a&gt;
  Ant Design theming
&lt;/h2&gt;

&lt;p&gt;Ant Design doesn't offer the same pre-built theme options compared to a library like Bootstrap or Material. At the time of this writing, Themeforest offers 12 themes at prices ranging from $12 to $999. That's a pretty stark difference from Material themes on Themeforest, which has more than 1,500 themes built with Material Design. And Bootstrap has an order of magnitude more than Material with more than 30k themes listed on Themeforest.&lt;/p&gt;

&lt;p&gt;AntD offers &lt;a href="https://pro.ant.design/"&gt;Ant Design Pro&lt;/a&gt;, an out-of-box UI solution for enterprise applications. Ant Design Pro comes equipped with templates, components, and a corresponding design kit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3CkeeeGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lx7yvl6gjuzybkxnb33x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3CkeeeGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lx7yvl6gjuzybkxnb33x.jpg" alt="antd theme designer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to Ant Design Pro, AntD packages designs for &lt;a href="https://antv.vision/en"&gt;data visualization&lt;/a&gt;, &lt;a href="https://mobile.ant.design/"&gt;mobile&lt;/a&gt;, and &lt;a href="https://ant.design/docs/spec/illustration"&gt;graphic solutions&lt;/a&gt; so developers can start with a package based on a particular enterprise use case.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--piT40g2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hdarlm33ttz4vwaf1q2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--piT40g2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hdarlm33ttz4vwaf1q2.jpg" alt="antd packages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ant-design-documentation-and-support"&gt;
  &lt;/a&gt;
  Ant Design documentation and support
&lt;/h2&gt;

&lt;p&gt;While AntD does have documentation, it doesn't offer the depth of documentation that a framework like Material-UI has. AntD's component documentation is easy to understand and includes examples and API properties for each component. AntD components also include internationalization support for dozens of languages and uses &lt;a href="https://lesscss.org/"&gt;Less.js&lt;/a&gt; for styling components.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dgbsv8TN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wb2da85obywjgtjjqqp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgbsv8TN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wb2da85obywjgtjjqqp.png" alt="antd api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While it doesn't appear that Ant Design offers any paid support options, they have an engaged community and many resources for self-learning. AntD uses &lt;a href="https://github.com/ant-design/ant-design/issues"&gt;GitHub Issues&lt;/a&gt; for bug tracking. AntD also facilitates community discussions via &lt;a href="https://github.com/ant-design/ant-design/discussions"&gt;GitHub&lt;/a&gt;, &lt;a href="https://stackoverflow.com/questions/tagged/antd"&gt;Stack Overflow&lt;/a&gt;, and &lt;a href="https://segmentfault.com/t/antd"&gt;Segmentfault&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples-of-apps-and-websites-built-on-ant-design"&gt;
  &lt;/a&gt;
  Examples of apps and websites built on Ant Design
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iFRVebBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amxc7qr0umuaooi7yzsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iFRVebBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amxc7qr0umuaooi7yzsp.png" alt="antd examples"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#reactbootstrap"&gt;
  &lt;/a&gt;
  React-Bootstrap
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/react-bootstrap/react-bootstrap"&gt;19.4k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/react-bootstrap"&gt;838k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/react-bootstrap"&gt;2.9k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Twitter&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Initially named Twitter Blueprint, the Bootstrap framework was built by Mark Otto and Jacob Thornton at Twitter. Bootstrap predates React by a couple of years (Bootstrap’s initial release was August 19, 2011, and React’s was on May 29, 2013). Bootstrap started as an open-source CSS framework centered around helping developers build responsive, mobile-first front-end websites and applications. &lt;/p&gt;

&lt;p&gt;React-Bootstrap is a bit different but very similar to the original Bootstrap framework. React-Bootstrap replaces the Bootstrap JavaScript, and each component has been built from scratch as a proper React component, without unneeded dependencies like jQuery.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reactbootstrap-components"&gt;
  &lt;/a&gt;
  React-Bootstrap components
&lt;/h2&gt;

&lt;p&gt;React-Bootstrap’s &lt;a href="https://react-bootstrap.github.io/components/alerts/"&gt;component library&lt;/a&gt; skews toward web development. With less than 30 components, React-Bootstrap also doesn’t provide the breadth of component coverage that a Material-UI or AntD offers. Less can be more, especially for those familiar with Bootstrap and know it can accommodate their use case.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reactbootstrap-themes-and-theming"&gt;
  &lt;/a&gt;
  React-Bootstrap themes and theming
&lt;/h2&gt;

&lt;p&gt;Due to the widespread use of Bootstrap for web development, there are thousands of free and paid Bootstrap available. Generally, custom Bootstrap themes work with React-Bootstrap as long as Bootstrap defined classes and variants are used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reactbootstrap-documentation-and-support"&gt;
  &lt;/a&gt;
  React-Bootstrap documentation and support
&lt;/h2&gt;

&lt;p&gt;While React-Bootstrap doesn’t offer any official support, there is a massive, active community and plenty of resources supporting Bootstrap. The React-Bootstrap website suggests starting with support in one of three places:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://stackoverflow.com/questions/tagged/react-bootstrap"&gt;Stack Overflow&lt;/a&gt; to ask specific, detailed questions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://discord.com/invite/AKfs9vpvRW"&gt;Reactiflux Dischord&lt;/a&gt; to discuss via chat&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/react-bootstrap/react-bootstrap/blob/master/CONTRIBUTING.md#issues"&gt;GitHub Issues&lt;/a&gt; to report bugs&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#apps-and-websites-built-on-bootstrap"&gt;
  &lt;/a&gt;
  Apps and websites built on Bootstrap
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vWYR1YQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkr6xpc7jc3xbz22fnd1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vWYR1YQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkr6xpc7jc3xbz22fnd1.jpg" alt="bootstrap react examples"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#grommet"&gt;
  &lt;/a&gt;
  Grommet
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/grommet/grommet"&gt;7.2k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/grommet"&gt;21.5k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/grommet"&gt;84&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hewlett Packard Enterprise&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Grommet was &lt;a href="https://developer.hpe.com/blog/grommet-the-glue-that-binds-development-and-design/"&gt;developed by HPE&lt;/a&gt; and offers a more vibrant (and not so Google-y) look and feel compared to alternatives like Material-UI or AntD. From their marketing site copy, Grommet positions itself as “a React-based framework that provides accessibility, modularity, responsiveness, and theming in a tidy package.” &lt;/p&gt;

&lt;p&gt;Reading between the lines, Grommet is lighter weight, and from the looks of their website design, it also has bolder component designs.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4LgMT7_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z57s8dp0vj1sr7hvtrq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4LgMT7_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z57s8dp0vj1sr7hvtrq.png" alt="grommet layouts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grommet-components"&gt;
  &lt;/a&gt;
  Grommet components
&lt;/h2&gt;

&lt;p&gt;Grommet provides a bold and robust set of components to use. They categorize components into the following categories: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Layouts&lt;/strong&gt; — a system for layout of an app with components like headers, footers, grids, cards, sidebars and more. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type&lt;/strong&gt; — components for headings, markdown, paragraph, and text. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Color&lt;/strong&gt; — set color schemes for branding, accents, status, and neutral colors. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controls&lt;/strong&gt; — components that let users interact with an app like menus, buttons, navbars, etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt; — components where users input things like text, check boxes, file uploads, etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visualizations&lt;/strong&gt; — components for more rich visualizations like calendars, charts, avatars, etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media&lt;/strong&gt; — components for video, images, and carousels. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Utilities&lt;/strong&gt; — catch-all for components that improve user experiences like keyboard shortcuts, responsive elements, infinite scroll, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grommet-themes-and-theming"&gt;
  &lt;/a&gt;
  Grommet themes and theming
&lt;/h2&gt;

&lt;p&gt;While there are not a lot of pre-packaged Grommet themes available, Grommet does provide two useful tools for customizing a theme: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://theme-designer.grommet.io/Dashboard"&gt;Grommet theme designer&lt;/a&gt; —  an interactive demo admin panel to create custom Grommet themes by adjusting elements in the admin panel itself.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://designer.grommet.io/"&gt;Grommet designer&lt;/a&gt; — an interactive canvas that lets you build and save experiences with grommet components.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qC4Y_YLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19u9k5ejoruv19yomdxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qC4Y_YLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19u9k5ejoruv19yomdxc.png" alt="grommet theme designer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grommet-documentation-and-support"&gt;
  &lt;/a&gt;
  Grommet documentation and support
&lt;/h2&gt;

&lt;p&gt;Grommet doesn’t offer any hands-on support. They do have an active &lt;a href="https://slack-invite.grommet.io/"&gt;Slack&lt;/a&gt; community, and, like other frameworks, bugs are submitted via &lt;a href="https://github.com/grommet/grommet/issues"&gt;GitHub Issues&lt;/a&gt;. In addition to that, Grommet provides resources, including a &lt;a href="https://codesandbox.io/u/grommetux/sandboxes"&gt;template/pattern library&lt;/a&gt;, &lt;a href="https://storybook.grommet.io/?path=/story/all--all"&gt;component library on Storybook&lt;/a&gt;, and a &lt;a href="https://codesandbox.io/s/github/grommet/grommet-sandbox"&gt;codesandbox&lt;/a&gt; for each component.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#rebass"&gt;
  &lt;/a&gt;
  Rebass
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rebassjs/rebass"&gt;7.3k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/rebass"&gt;68k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/rebass"&gt;10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Brent Jackson&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Rebass was created by &lt;a href="https://jxnblk.com/"&gt;Brent Jackson&lt;/a&gt;, who is currently a front-end developer at Gatsby. React primitive UI components are at the core of the Rebass library, which are coupled with a &lt;a href="https://styled-system.com/"&gt;Styled-System&lt;/a&gt;. The Rebass Styled System is compatible with CSS-in-JS libraries and reduces the need to write custom CSS into an application using style objects instead of embedded CSS strings. As a result, developers can build faster and add a theme and design elements on top of Rebass primitives. Rebass is also very lightweight, with a footprint of about 4KB.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rebass-components"&gt;
  &lt;/a&gt;
  Rebass components
&lt;/h2&gt;

&lt;p&gt;Rebass comes with a foundational set of primitive components that can be “&lt;a href="https://rebassjs.org/extending/"&gt;extended&lt;/a&gt;” to build a component library with a consistent API and styles defined in a design theme. Foundational include primitives for app structure (responsive boxes and flexbox layouts), text (heading, text, link, button), images, cards, and forms. The &lt;a href="https://rebassjs.org/forms/"&gt;Forms&lt;/a&gt; component includes many interactive sub-components like inputs, textarea, sliders, switches, and checkboxes. &lt;/p&gt;

&lt;p&gt;In addition to primitives, Rebass offers &lt;a href="https://rebassjs.org/recipes/"&gt;documentation on recipes&lt;/a&gt; for common use cases like grids, navbar, and image cards.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCKZH6hz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndeeepf0vyctqanppv4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCKZH6hz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndeeepf0vyctqanppv4e.png" alt="rebass components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rebass-themes-and-theming"&gt;
  &lt;/a&gt;
  Rebass themes and theming
&lt;/h2&gt;

&lt;p&gt;While Rebass doesn’t have a library or 3rd-party ecosystem of pre-built themes, it does offer a lot of theming flexibility and customization. Themes are applied in Rebass using a &lt;a href="https://styled-components.com/docs/advanced#theming"&gt;ThemeProvider&lt;/a&gt; component. Rebass follows &lt;a href="https://github.com/system-ui/theme-specification"&gt;Theme Specification&lt;/a&gt; for defining theme objects and design tokens for use with UI components. Rebass is compatible with &lt;a href="https://theme-ui.com/home/"&gt;Theme UI&lt;/a&gt; and &lt;a href="https://github.com/styled-system/styled-system"&gt;Styled System&lt;/a&gt;, which both work with Rebass with no additional configuration required. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rebass-documentation-and-support"&gt;
  &lt;/a&gt;
  Rebass documentation and support
&lt;/h2&gt;

&lt;p&gt;Rebass provides thorough documentation centered around getting developers quickly up to speed on how Rebass works. As the concepts of primitive components, theming, and design systems are understood, developers using Rebass can fully customize and extend the library. There is no paid support or official Rebass communities listed in their documentation. &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#blueprint"&gt;
  &lt;/a&gt;
  Blueprint
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/palantir/blueprint"&gt;17.8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/@blueprintjs/core"&gt;168k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/blueprint"&gt;345&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Palantir&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Blueprint is an open-source &lt;a href="https://blueprintjs.com/"&gt;React UI kit developed at Palantir&lt;/a&gt;. It differentiates from other React frameworks as being “optimized for building complex data-dense interfaces for desktop applications.” Not a huge surprise, given Blueprint’s origins out of Palantir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blueprint-components"&gt;
  &lt;/a&gt;
  Blueprint components
&lt;/h2&gt;

&lt;p&gt;In addition to its core component package, Blueprint separates component libraries based on use cases and significant dependencies.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QPSjqoIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mg8diakwrsr70ziaxbr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPSjqoIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mg8diakwrsr70ziaxbr2.png" alt="blueprint components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Core components&lt;/strong&gt; — provide the essential components for any app built on Blueprint. This includes components from buttons to form controls to tooltips and trees.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Datetime components&lt;/strong&gt; — offer a complete set of components for building apps with date and time dependencies. These are components like a &lt;code&gt;DatePicker&lt;/code&gt;, &lt;code&gt;DateRangeInput&lt;/code&gt;, &lt;code&gt;DateInput&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Select components&lt;/strong&gt; — a package of components for selecting items from a list such as &lt;code&gt;Select&lt;/code&gt;, &lt;code&gt;MultiSelect&lt;/code&gt;, &lt;code&gt;Omnibar&lt;/code&gt;, &lt;code&gt;QueryList&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table component&lt;/strong&gt; — robust table component the features cell and header rendering, virtualized viewport rendering, editable headers and cells, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Timezone component&lt;/strong&gt; — a &lt;code&gt;TimezonePicker&lt;/code&gt; for handling and selecting Timezones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Icon components&lt;/strong&gt; — a package of over 300 vector UI icons which can easily be modified by color, size, and effects.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vj1DJbul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kenpi0iaf4t9oufsed51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vj1DJbul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kenpi0iaf4t9oufsed51.png" alt="blueprint icons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blueprint-themes-and-theming"&gt;
  &lt;/a&gt;
  Blueprint themes and theming
&lt;/h2&gt;

&lt;p&gt;Blueprint not the framework to use if you’re looking for a variety of themes to start from. However, Blueprint does offer light and dark mode themes out of the box, and design elements like classes, color schemes, and typography are customizable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blueprint-documentation-and-support"&gt;
  &lt;/a&gt;
  Blueprint documentation and support
&lt;/h2&gt;

&lt;p&gt;While Blueprint provides detailed documentation, it lacks community and support options. The &lt;a href="https://github.com/palantir/blueprint"&gt;Blueprint GitHub repo&lt;/a&gt; appears to be the most active place for reporting issues and getting support from contributors. There are also a few hundred &lt;a href="https://stackoverflow.com/questions/tagged/blueprint"&gt;Blueprint questions&lt;/a&gt; on Stack Overflow.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#semantic-ui-react"&gt;
  &lt;/a&gt;
  Semantic UI React
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Semantic-Org/Semantic-UI-React"&gt;12.3k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/semantic-ui-react"&gt;176k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/semantic-ui"&gt;2.6k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jlukic"&gt;Jack Lukic&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Similar to Bootstrap-React, Semantic UI React is the React flavor of the Semantic web framework. Also, like Bootstrap-React, Semantic UI React is jQuery-free to make it fully React compatible. Because of its origins in aiding with responsive, HTML-friendly web design, Semantic for React is better suited for web development vs. application building.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#semantic-ui-react-components"&gt;
  &lt;/a&gt;
  Semantic UI React components
&lt;/h2&gt;

&lt;p&gt;Semantic UI React has a respectable library of over 50 components. Semantic UI acts as a layer on top of the React components and offers Semantic themes as CSS stylesheets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--behf3XoP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dp48jivfz2yrrdpwg3qc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--behf3XoP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dp48jivfz2yrrdpwg3qc.png" alt="Semantic UI React components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Components grouped in the following categories:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Elements&lt;/strong&gt; — includes foundational components like buttons, dividers, lists, images, and headers. More specialized components like &lt;code&gt;image reveal&lt;/code&gt; and &lt;code&gt;rails&lt;/code&gt; for content that protrudes borders are also included in the Elements grouping.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Collections&lt;/strong&gt; — components like breadcrumbs, forms, grids, menus, and tables are included in the Collections category. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Views&lt;/strong&gt; — visual components like cards, advertisements, comments, feeds, etc., are included in the Views category. Note: that many of these components (e.g., advertisements) are unique to Semantic UI.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modules&lt;/strong&gt; — includes modular components like modals, popups, progress bars, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Behaviors&lt;/strong&gt; — &lt;code&gt;visibility&lt;/code&gt;, which provides a set of callbacks for when content appears, is the sole component in the Behaviors category.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add-ons&lt;/strong&gt; — additional components like radio buttons, toggles, and sliders are included in this category.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#semantic-ui-react-themes-and-theming"&gt;
  &lt;/a&gt;
  Semantic UI React themes and theming
&lt;/h2&gt;

&lt;p&gt;When using Semantic UI React, it’s important to note that it does not have custom theming options and fully relies on the theming of Semantic UI. &lt;a href="https://semantic-ui.com/usage/theming.html"&gt;Semantic UI theming&lt;/a&gt; and design is based around Fredrick Brooks’s concept of “&lt;a href="https://books.google.com/books?id=0qG4TQi-e-4C&amp;amp;pg=PT234&amp;amp;lpg=PT234&amp;amp;dq=%22progressive+truthfulness%22+frederick+brooks&amp;amp;source=bl&amp;amp;ots=yrjNc6wnz8&amp;amp;sig=PJoYODuRku2A1kBoFOPfn4iGYnc&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=0CCIQ6AEwAGoVChMImdSMpIOVxgIVCx-sCh3EQgBu#v=onepage&amp;amp;q=%22progressive%20truthfulness%22%20frederick%20brooks&amp;amp;f=false"&gt;progressive truthfulness&lt;/a&gt;.”&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Progressive truthfulness is perhaps a better way to build models of physical objects…Start with a model that is fully detailed but only resembles what is wanted. Then, one adjusts one attribute after another, bringing the result ever closer to the mental vision of the new creation, or to the real properties of a real-world object.&lt;br&gt;
&lt;strong&gt;Frederick Brooks, The Design of Design: Essays from a Computer Scientist&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The idea is to remove complication and analysis paralysis from web development. Rather than building from a blank slate, developers can specify how components should differ from the default theme using &lt;a href="https://lesscss.org/features/#variables-feature"&gt;CSS variables&lt;/a&gt; and let Semantic UI handle the rest.&lt;/p&gt;

&lt;p&gt;In addition to theming, Semantic UI React provides &lt;a href="https://react.semantic-ui.com/layouts/"&gt;layout examples&lt;/a&gt; for using grids, responsive design, sticky nav, webpage construction, etc. These layouts offer a useful starting point vs. starting from a blank slate.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ru_4MEji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/377fq68vvt68fn96d9mm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ru_4MEji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/377fq68vvt68fn96d9mm.png" alt="semantic layout examples"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#semantic-ui-react-documentation-and-support"&gt;
  &lt;/a&gt;
  Semantic UI React documentation and support
&lt;/h2&gt;

&lt;p&gt;Semantic UI React provides thorough documentation. Most documentation of components includes code to try the component, &lt;a href="https://codesandbox.io/s/remx6?module=/example.js"&gt;codesandbox&lt;/a&gt;, and live examples. Within the &lt;a href="https://react.semantic-ui.com/elements/button/"&gt;Buttons component&lt;/a&gt; alone, there are 36 different button variations from a static button to floating groups of buttons — all come with code to copy/paste.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#retool"&gt;
  &lt;/a&gt;
  Retool
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; there is bias at play in this overview.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Retool is a platform for building internal applications. It comes with a complete set of powerful 50+ components out of the box. Because Retool is a platform and not just a component library, you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;compose applications with &lt;a href="https://retool.com/components#Button"&gt;50+ drag-and-drop components&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;connect to &lt;a href="https://retool.com/integrations/"&gt;any data source or API&lt;/a&gt; to work with all of your data sources seamlessly in one app&lt;/li&gt;
&lt;li&gt;customize how your app works by &lt;a href="https://docs.retool.com/docs/javascript-overview"&gt;writing JavaScript&lt;/a&gt; anywhere inside of Retool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kgzC1Vtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9nvwv9qtyti000cktgs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kgzC1Vtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9nvwv9qtyti000cktgs.png" alt="retool platform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Retool also lets you deploy applications as a cloud-hosted solution or on-prem and comes with enterprise requirements for security, reliability, and permissioning built-in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retool-components"&gt;
  &lt;/a&gt;
  Retool components
&lt;/h2&gt;

&lt;p&gt;Out of the box, Retool comes with 50+ components to build internal applications. We also offer custom components if you need to load other interfaces into your applications dynamically. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RXwffVlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4schl4feoudv6k0z7nxe.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RXwffVlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4schl4feoudv6k0z7nxe.gif" alt="retool components demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Retool components are grouped in the following categories:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Commonly used&lt;/strong&gt; — as the name implies, these are core components like buttons, tables, text, dropdowns, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inputs&lt;/strong&gt; — components that allow for user input and interactions. These include components like a checkbox, date range picker, rich text editor, slider, etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt; — these are components that aggregate data like a calendar, JSON explorer, and query builder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Charts&lt;/strong&gt; — build &lt;a href="https://retool.com/blog/introducing-our-new-chart-component/"&gt;interactive charts&lt;/a&gt; in your Retool apps while also providing the full flexibility and customizability of the Plotly.js charting library for more advanced use cases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Display&lt;/strong&gt; — visual components that provide users with context such as a progress bar, alerts, timers, and video viewers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retool-themes-and-theming"&gt;
  &lt;/a&gt;
  Retool themes and theming
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Style editors&lt;/strong&gt; — Style editors are available across all Retool plans and allow you to customize your Retool components within the Retool UI by editing the style properties (e.g., color, border-radius) of any component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Themes&lt;/strong&gt; — Themes are available on the &lt;a href="https://retool.com/pricing/"&gt;Retool Pro and Enterprise plans&lt;/a&gt; and allow you to apply style customizations across any of your applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Custom CSS&lt;/strong&gt; — When inspector styles and themes don’t cover your needs, you can leverage CSS directly in Retool. Custom CSS styles can be applied across all applications within your org settings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Templates&lt;/strong&gt; — We also offer &lt;a href="https://retool.com/templates/"&gt;ready-made templates&lt;/a&gt; as a quick starting point for building internal tools from real-world use cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retool-documentation-and-support"&gt;
  &lt;/a&gt;
  Retool documentation and support
&lt;/h2&gt;

&lt;p&gt;Compared to React components libraries, Retool offers far more extensive support and support. If answers can’t be found in Retool documentation, customers can turn to the following support channels:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Community forum&lt;/strong&gt; — &lt;a href="https://community.retool.com/"&gt;Retool’s Discourse forum&lt;/a&gt; is the best place to &lt;a href="https://community.retool.com/c/how-do-i/10"&gt;get tactical product help&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Power users Slack&lt;/strong&gt; — If you’re a Retool Power User, you can &lt;a href="https://retool.com/community/#power-users-slack"&gt;request access&lt;/a&gt; to our sort-of-exclusive Slack group for our most engaged developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reschool&lt;/strong&gt; — a &lt;a href="https://docs.retool.com/docs/reschool"&gt;learning course&lt;/a&gt; for getting started with Retool from scratch that includes basic SQL and JavaScript training. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intercom&lt;/strong&gt; — use the Intercom chat within the Retool platform to for live support&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Email&lt;/strong&gt; — send an email &lt;a href="mailto:support@retool.com"&gt;support@retool.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enterprise support&lt;/strong&gt; — Retool customers on enterprise plans get access to a dedicated support representative.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#honorable-mentions"&gt;
  &lt;/a&gt;
  Honorable mentions
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#fluent-react-ui"&gt;
  &lt;/a&gt;
  Fluent React UI
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/microsoft/fluent-ui-react"&gt;397&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/@fluentui/react"&gt;44k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/fluent"&gt;1k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Microsoft&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Fluent React UI is Microsoft’s design system adapted for React. It’s built on top of the Fluent UI design language, component specifications, and utilities. Fluent is the UI framework used in the latest versions of Microsoft applications like Powerpoint, Word, Outlook, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WGGFF4Fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t8n6htz58oasbb3t0tx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WGGFF4Fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t8n6htz58oasbb3t0tx.jpg" alt="Fluent React UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Components&lt;/strong&gt; — Microsoft uses the name “&lt;a href="https://developer.microsoft.com/en-us/fluentui#/controls/web"&gt;Controls&lt;/a&gt;” instead of components. Either way, Fluent React UI offers a wide range of controls/components that are built with the React framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Theming&lt;/strong&gt; — Fluent React UI comes with a &lt;a href="https://fluentuipr.z22.web.core.windows.net/heads/master/theming-designer/index.html"&gt;theme designer&lt;/a&gt;, &lt;a href="https://github.com/microsoft/fluentui/wiki/Component-Styling"&gt;component styling guide&lt;/a&gt;, and a &lt;a href="https://github.com/microsoft/fluentui/wiki/Theming"&gt;theming deep dive guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation and resources&lt;/strong&gt; — Microsoft and Fluent contributors maintain a &lt;a href="https://github.com/microsoft/fluentui/wiki"&gt;Fluent React UI wiki&lt;/a&gt; for advanced usage, building, and contributing to Fluent UI React. They also offer a &lt;a href="https://microsoft.github.io/frontend-bootcamp/"&gt;frontend bootcamp learning course&lt;/a&gt; which includes exercises with Fluent UI React.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#onsen-ui"&gt;
  &lt;/a&gt;
  Onsen UI
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href="https://github.com/OnsenUI/react-onsenui"&gt;130&lt;/a&gt; (React) &lt;a href="https://github.com/OnsenUI/OnsenUI"&gt;8.4k&lt;/a&gt; (original)&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/react-onsenui"&gt;1.2k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/tagged/onsen-ui"&gt;1163&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Monaca&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Originally based on AngularJS with support for jQuery, Onsen UI offers an &lt;a href="https://onsen.io/react/"&gt;adapted framework for React&lt;/a&gt;. Onsen was developed by Monaca Software which specializes in mobile app development and is based out of Japan. Based on the mobile-first origin, the Onsen UI framework is well suited for building mobile apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Components&lt;/strong&gt; — Onsen UI comes with more than 100 components designed for mobile experiences.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HxNXfMjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/95pr5t81miuh29utgqc9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HxNXfMjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/95pr5t81miuh29utgqc9.png" alt="onsen components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Theming&lt;/strong&gt; — Onsen UI provides a &lt;a href="https://onsen.io/theme-roller/?customize"&gt;Theme Roller&lt;/a&gt; to customize themes for mobile platforms and styling, which can be downloaded and applied.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation and resources&lt;/strong&gt; — Documentation for Onsen provides a &lt;a href="https://onsen.io/v2/guide/react/"&gt;getting started guide&lt;/a&gt; for React. Onsen UI also showcases several &lt;a href="https://onsen.io/samples/"&gt;samples to demo&lt;/a&gt; and a “&lt;a href="https://onsen.io/playground/"&gt;playground&lt;/a&gt;” to test your code and interactively learn the Onsen framework. There’s also a &lt;a href="https://community.onsen.io/"&gt;community forum&lt;/a&gt; to tap into help from others using Onsen.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c6z4NTh3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zu0n1q23uevko23o24j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c6z4NTh3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zu0n1q23uevko23o24j.png" alt="onsen samples"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#evergreen"&gt;
  &lt;/a&gt;
  Evergreen
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub Stars&lt;/th&gt;
&lt;th&gt;Weekly NPM Downloads&lt;/th&gt;
&lt;th&gt;Stack Overflow Questions&lt;/th&gt;
&lt;th&gt;Origin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/segmentio/evergreen"&gt;10.8k&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://www.npmjs.com/package/evergreen-ui"&gt;7.2k&lt;/a&gt; (May 2021)&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Segment&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://evergreen.segment.com/"&gt;Evergreen&lt;/a&gt; is a React UI Framework developed by Segment. It centers around a design system that was created for building “ambitious products” on the web.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97UBYBaL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yu82j3gnc4lsbgnidd8l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97UBYBaL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yu82j3gnc4lsbgnidd8l.png" alt="segment evergreen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Components&lt;/strong&gt; — Evergreen offers 30+ components built on top of a React UI Primitive. Evergreen also provides “patterns” which are common reusable combinations of components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Theming&lt;/strong&gt; — Evergreen ships with two themes: 1) A default theme that reflects Segment’s current brand, and 2) a classic theme from the first version of Evergreen. While there is no theme builder with Evergreen, it offers an extensible theming architecture to customize the look and feel of the components as needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation and resources&lt;/strong&gt; — In addition to documentation, Segment has created an Evergreen Figma library available on &lt;a href="https://www.figma.com/@segment"&gt;Figma Community&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
    </item>
    <item>
      <title>A Complete Guide To Deploy GitHub Project on Amazon EC2 Using GitHub Actions and AWS CodeDeploy</title>
      <author>ANkush</author>
      <pubDate>Fri, 28 May 2021 20:08:59 +0000</pubDate>
      <link>https://dev.to/ankushbehera/a-complete-guide-to-deploy-github-project-on-amazon-ec2-using-github-actions-and-aws-codedeploy-3f0b</link>
      <guid>https://dev.to/ankushbehera/a-complete-guide-to-deploy-github-project-on-amazon-ec2-using-github-actions-and-aws-codedeploy-3f0b</guid>
      <description>&lt;h1&gt;
  &lt;a href="#auto-deploy-in-amazon-ec2-on-git-commit-a-complete-guide-to-configure-codedeploy-and-github-cicd-action"&gt;
  &lt;/a&gt;
  Auto Deploy in Amazon EC2 on Git Commit. A complete guide to configure CodeDeploy and GitHub CI/CD Action.
&lt;/h1&gt;




&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;




&lt;ul&gt;
&lt;li&gt;Create a &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; account.&lt;/li&gt;
&lt;li&gt;Create &lt;a href="https://console.aws.amazon.com/console/home"&gt;AWS&lt;/a&gt; Account.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;




&lt;ul&gt;
&lt;li&gt;&lt;a href="#create-iam-role"&gt;Create IAM Role for EC2 and CodeDeploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-ec2"&gt;Create EC2 Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#launch-ec2"&gt;Launch EC2 Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-codedeploy-agent"&gt;Install CodeDeploy Agent on EC2 Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#codedeploy-service-config"&gt;CodeDeploy Service Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-project"&gt;GitHub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-action"&gt;GitHub Action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h3&gt;




&lt;blockquote&gt;
&lt;p&gt;Select a particular region of AWS Services which CodeDeploy Agent and GitHub will use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#create-iam-role-for-ec2-and-codedeploy"&gt;
  &lt;/a&gt;
  Create IAM Role For EC2 and CodeDeploy &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p5NSQdii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26bulqgskw5bpu64r0kl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p5NSQdii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26bulqgskw5bpu64r0kl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Create a role for &lt;strong&gt;EC2 Instance&lt;/strong&gt; - &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select &lt;strong&gt;AWS Service&lt;/strong&gt; as &lt;em&gt;trusted entity&lt;/em&gt; and &lt;strong&gt;EC2&lt;/strong&gt; as &lt;em&gt;usecase&lt;/em&gt;, click on &lt;em&gt;Next:Permissions&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;On the Permissions page, select &lt;strong&gt;AmazonEC2RoleforAWSCodeDeploy&lt;/strong&gt; Policy and Click on &lt;em&gt;Next:Tags&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Ignore the tags and click &lt;em&gt;Next:Review&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Provide the role name as &lt;strong&gt;EC2_Role&lt;/strong&gt; on the review page.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hOGR9PYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46kuzgo4qxpc639girdl.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;Open the EC2_Role and go to &lt;em&gt;Trust Relationships&lt;/em&gt;, then &lt;em&gt;Edit Trust Relationship&lt;/em&gt; and paste below policy -
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Principal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"Service"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ec2.amazonaws.com"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sts:AssumeRole"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--av8fYJaL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irtiqqgvv9uig7zxlist.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--av8fYJaL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irtiqqgvv9uig7zxlist.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Now we will create a role for &lt;strong&gt;CodeDeploy&lt;/strong&gt;.&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select &lt;em&gt;AWS Service&lt;/em&gt; as &lt;em&gt;trusted entity&lt;/em&gt; and &lt;em&gt;EC2&lt;/em&gt; as &lt;em&gt;usecase&lt;/em&gt;, click on &lt;em&gt;Next:Permissions&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;On the Permissions page, select the below policy and Click on &lt;em&gt;Next:Tags&lt;/em&gt;.
&lt;code&gt;AmazonEC2FullAccess, AWSCodeDeployFullAccess, AdministratorAccess, AWSCodeDeployRole&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Tags can be ignored, click on &lt;em&gt;Next:Review&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Provide the role name as &lt;strong&gt;CodeDeploy_Role&lt;/strong&gt; on the review page.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OtbIkb5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6l3k4yjo76yvbwu2ut1.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once CodeDeploy Role created, Open the CodeDeploy_Role and go to &lt;em&gt;Trust Relationships&lt;/em&gt; then &lt;em&gt;Edit Trust Relationship&lt;/em&gt; and use below policy -&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Principal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Service"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"codedeploy.amazonaws.com"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sts:AssumeRole"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#create-ec2-instance"&gt;
  &lt;/a&gt;
  Create EC2 Instance&lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To create an EC2 instance, Go to EC2 Dashboard on AWS Management Console and click on &lt;strong&gt;Launch Instance&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;On the AIM page, You can select any &lt;em&gt;Volume Type&lt;/em&gt; based on your requirement. This article will choose &lt;em&gt;Free Tier&lt;/em&gt; &lt;strong&gt;Amazon Linux 2 AMI (HVM), SSD Volume Type&lt;/strong&gt; and &lt;strong&gt;64-bit (x86)&lt;/strong&gt; Volume and click on &lt;em&gt;select&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;t2.micro&lt;/strong&gt; in &lt;em&gt;Choose Instance Typ&lt;/em&gt; page and proceed to &lt;em&gt;Configure Instance&lt;/em&gt; page.&lt;/p&gt;

&lt;p&gt;To establish the connection between EC2 instance and codeDeploy, Select &lt;strong&gt;EC2_Role&lt;/strong&gt;, which we created before.&lt;/p&gt;

&lt;p&gt;On the &lt;em&gt;Tag page&lt;/em&gt;, add a tag called &lt;strong&gt;development&lt;/strong&gt;. The tag will require creating a &lt;em&gt;codeDeploy&lt;/em&gt; service.&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Configure Security Group&lt;/em&gt; page &lt;em&gt;Add Rule&lt;/em&gt; called &lt;strong&gt;All traffic&lt;/strong&gt;, select &lt;em&gt;source&lt;/em&gt; called &lt;strong&gt;anywhere&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This rule will enable you to connect the Instance from anywhere.&lt;br&gt;
  &lt;strong&gt;NOTE&lt;/strong&gt; - This is not advisable in the Production environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Select the &lt;em&gt;review&lt;/em&gt; page, then &lt;em&gt;Launch&lt;/em&gt; the Instance. Wait for a few minutes to start the EC2 Instance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to access the Instance (ssh) from your local system, create a new &lt;em&gt;Key Pair&lt;/em&gt; and download the key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YMPNSA3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsbfckiuolr4y1oj5ilt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YMPNSA3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsbfckiuolr4y1oj5ilt.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UNBGiH1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c66iy10uzgmv6dygz5cl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UNBGiH1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c66iy10uzgmv6dygz5cl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#launch-ec2-instance"&gt;
  &lt;/a&gt;
  Launch EC2 Instance &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Once Instance is up and running, Right-click on &lt;em&gt;instance id&lt;/em&gt; and click on &lt;em&gt;connect&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;On the next page, Take a note of the &lt;strong&gt;Public IP Address&lt;/strong&gt; and &lt;em&gt;connect&lt;/em&gt; using the default &lt;strong&gt;User name&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MPPGEz2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wd9853dwfnc7hldoy7n9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MPPGEz2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wd9853dwfnc7hldoy7n9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6nDNo-k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2m1mtoonxwf6csjd53l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6nDNo-k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2m1mtoonxwf6csjd53l.jpg" alt="photo-1576267423429-569309b31e84"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#install-codedeploy-agent-on-ec2-instance"&gt;
  &lt;/a&gt;
  Install CodeDeploy Agent on EC2 Instance &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;TO Deploy the git repo by using CodeDeploy Service, &lt;strong&gt;codeDeploy-agent&lt;/strong&gt; must install in the EC2 instance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Use the below commands to install codedeploy-agent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;yum &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;yum &lt;span class="nb"&gt;install &lt;/span&gt;wget
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget https://bucket-name.s3.region-identifier.amazonaws.com/latest/install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;bucket-name is the Amazon S3 bucket containing the CodeDeploy Resource Kit files for your region. region-identifier is the identifier for your region.&lt;br&gt;
&lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/resource-kit.html#resource-kit-bucket-names"&gt;list of bucket names and region identifiers&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For example - &lt;code&gt;wget https://aws-codedeploy-ap-south-1.s3.ap-south-1.amazonaws.com/latest/install&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;chmod&lt;/span&gt; +x ./install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt; ./install auto
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;service codedeploy-agent start 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#codedeploy-service-configuration"&gt;
  &lt;/a&gt;
  CodeDeploy Service Configuration &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;




&lt;p&gt;AWS &lt;a href="https://docs.amazonaws.cn/en_us/codedeploy/latest/userguide/welcome.html"&gt;CodeDeploy Service&lt;/a&gt; will automate the GitHub application deployment to EC2.&lt;/p&gt;

&lt;p&gt;Create an Application name called &lt;strong&gt;Git_Application&lt;/strong&gt; with &lt;em&gt;compute platform&lt;/em&gt; &lt;strong&gt;EC2/On-premises&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="#github-action-code"&gt;GitHub Action&lt;/a&gt; will use the application name.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ePsTuVrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hciskx6rrwq0r4m3whw6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ePsTuVrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hciskx6rrwq0r4m3whw6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Once Application Created, Create a &lt;em&gt;Deployment Group&lt;/em&gt; and name &lt;strong&gt;development_gropup&lt;/strong&gt;. Get the &lt;em&gt;Role ARN&lt;/em&gt; from &lt;a href="#codedeploy_role"&gt;CodeDeploy_Role&lt;/a&gt;, which we created before and put in the service role.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="#github-action-code"&gt;GitHub Action&lt;/a&gt; will use the deployment Group name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Choose &lt;strong&gt;In-place&lt;/strong&gt; &lt;em&gt;Deployment type&lt;/em&gt;. Select &lt;em&gt;Amazon Ec2 Instances&lt;/em&gt; environment configuration and Tag key &lt;strong&gt;development&lt;/strong&gt; to create AWS EC2 instance.&lt;/p&gt;

&lt;p&gt;Select a schedule manager to install the CodeDeploy agent. Set &lt;em&gt;OneAtATime&lt;/em&gt; deployment setting and Create Deployment Group without a load balancer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kz6p0KOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqw1plmd8tpjscukpr7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kz6p0KOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqw1plmd8tpjscukpr7d.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ujfb6qL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41sxab2cuhni6412y7f5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ujfb6qL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41sxab2cuhni6412y7f5.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eFsHp8Hi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xivhirkebhcrl9ne7kb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFsHp8Hi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xivhirkebhcrl9ne7kb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Once Deployment Group created, test the deployment by creating a Deployment with any name.&lt;/p&gt;

&lt;p&gt;Select &lt;em&gt;Revision Type&lt;/em&gt; &lt;strong&gt;My application is stored in GitHub&lt;/strong&gt;, and select &lt;strong&gt;Connect to GitHub&lt;/strong&gt; by providing the &lt;a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;GitHub token&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once connected to GitHub, Provide the &lt;a href="#github-repository"&gt;repository name&lt;/a&gt; and last &lt;em&gt;Commit ID&lt;/em&gt;. Select &lt;em&gt;Overwrite the content&lt;/em&gt; and Create Deployment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pQKvbpKt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3s5f3cv3auw4magmt33c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pQKvbpKt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3s5f3cv3auw4magmt33c.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JWwYQLoB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qya9yce6v5zxb09c21um.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JWwYQLoB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qya9yce6v5zxb09c21um.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wait for a few minutes ⏳ .&lt;/p&gt;

&lt;p&gt;If Deployment status is unsuccessful, verify the deployment logs from ec2 instance &lt;code&gt;/var/log/aws/codedeploy-agent/codedeploy-agent.log&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Recreate the deployment and fix this first. Once it's successful, you can access the application from a web browser or postman.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl --location --request GET 'http://{{[ec2_public_ip]}}:8080/student'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get &lt;code&gt;ec2_public_ip&lt;/code&gt; from &lt;a href="#launch-ec2"&gt;EC2 Instance&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#github-project"&gt;
  &lt;/a&gt;
  GitHub Project&lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.github.com/en/github/getting-started-with-github/quickstart/fork-a-repo"&gt;Fork&lt;/a&gt; the &lt;a href="https://github.com/ankushbehera/spring-boot-mongo"&gt;spring-boot demo&lt;/a&gt; repository.&lt;/p&gt;

&lt;p&gt;This project is a spring-boot project which uses MongoDB. &lt;br&gt;
For project deployment, we will use &lt;a href="https://docs.docker.com/compose"&gt;docker-compose&lt;/a&gt;, which includes MongoDB.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file.html"&gt;&lt;code&gt;appspec.yml&lt;/code&gt;&lt;/a&gt; file used by codeDeploy to manage the deployment. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;setup.sh&lt;/code&gt; will install docker and docker-compose. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;run.sh&lt;/code&gt; is used for &lt;code&gt;docker-compose up&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.0&lt;/span&gt;
&lt;span class="na"&gt;os&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;linux&lt;/span&gt;
&lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="na"&gt;destination&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/home/ec2-user/spring-boot-mongo/&lt;/span&gt;
&lt;span class="na"&gt;hooks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;AfterInstall&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;setup.sh&lt;/span&gt;
     &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300&lt;/span&gt;
     &lt;span class="na"&gt;runas&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;root&lt;/span&gt;
  &lt;span class="na"&gt;ApplicationStart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;run.sh&lt;/span&gt;
     &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300&lt;/span&gt;
     &lt;span class="na"&gt;runas&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;root&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#github-action"&gt;
  &lt;/a&gt;
  GitHub Action &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;First, create an &lt;a href="https://docs.amazonaws.cn/en_us/IAM/latest/UserGuide/id_users_create.html#id_users_create_console"&gt;IAM user&lt;/a&gt; with full &lt;code&gt;AWSCodeDeployFullAccess&lt;/code&gt; policy and generate an &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey"&gt;access key and secret access&lt;/a&gt; for the user to configure GitHub Action.&lt;/p&gt;

&lt;p&gt;Before configuring Action, set the environment in the GitHub repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rwvBqKhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zkmvr6y8pi9aqpdjlj6b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rwvBqKhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zkmvr6y8pi9aqpdjlj6b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub repository changes will trigger &lt;a href="https://docs.github.com/en/actions"&gt;GitHub Action&lt;/a&gt;, which has two CI/CD job - &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The continuous-integration job will compile the code and run the JUnit Test cases.&lt;br&gt;
The continuous-deployment job will call AWS CodeDeploy Service -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;application - &lt;strong&gt;Git_Application&lt;/strong&gt;&lt;br&gt;
deployment-group - &lt;strong&gt;development_gropup&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;Paste below YAML in action configuration and commit.&lt;br&gt;
&lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CI/CD Pipeline&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;continuous-integration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Step 1&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="c1"&gt;# Step 2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set up JDK &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-java@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;java-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;11'&lt;/span&gt;
          &lt;span class="na"&gt;distribution&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;adopt'&lt;/span&gt;
      &lt;span class="c1"&gt;# Step 3&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build Application and Run unit Test&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mvn -B test --file student-service/pom.xml&lt;/span&gt;

  &lt;span class="na"&gt;continuous-deployment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;needs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;continuous-integration&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;github.ref == 'refs/heads/main'&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="c1"&gt;# Step 1&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Configure AWS credentials&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws-actions/configure-aws-credentials@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;aws-access-key-id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.AWS_ACCESS_KEY_ID }}&lt;/span&gt;
          &lt;span class="na"&gt;aws-secret-access-key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.AWS_SECRET_ACCESS_KEY }}&lt;/span&gt;
          &lt;span class="na"&gt;aws-region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.AWS_REGION }}&lt;/span&gt;
     &lt;span class="c1"&gt;# Step 2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create CodeDeploy Deployment&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;deploy&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;aws deploy create-deployment \&lt;/span&gt;
            &lt;span class="s"&gt;--application-name Git_Application \&lt;/span&gt;
            &lt;span class="s"&gt;--deployment-group-name development_gropup \&lt;/span&gt;
            &lt;span class="s"&gt;--deployment-config-name CodeDeployDefault.OneAtATime \&lt;/span&gt;
            &lt;span class="s"&gt;--github-location repository=${{ github.repository }},commitId=${{ github.sha }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fROaGR7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azrf0bp3qkm44qef91x3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fROaGR7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azrf0bp3qkm44qef91x3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now make a change to your repository. Your changes should automatically deploy to your EC2 server.&lt;/p&gt;

&lt;p&gt;Access the application from a web browser or postman.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl --location --request GET 'http://{{[ec2_public_ip]}}:8080/student'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get &lt;code&gt;ec2_public_ip&lt;/code&gt; from &lt;a href="#launch-ec2"&gt;EC2 Instance&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>aws</category>
      <category>devops</category>
      <category>codedeploy</category>
    </item>
    <item>
      <title>How to create an NFT on Ethereum Blockchain</title>
      <author>CyprianTinasheAarons</author>
      <pubDate>Fri, 28 May 2021 20:08:05 +0000</pubDate>
      <link>https://dev.to/cypriantinasheaarons/how-to-create-an-nft-on-ethereum-blockchain-3j8l</link>
      <guid>https://dev.to/cypriantinasheaarons/how-to-create-an-nft-on-ethereum-blockchain-3j8l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#whats-blockchain-"&gt;
  &lt;/a&gt;
  What's Blockchain ?
&lt;/h2&gt;

&lt;p&gt;Blockchain is a system of recording information in a way that makes it difficult or impossible to change, hack, or cheat the system.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Picture a spreadsheet that is duplicated thousands of times across a network of computers. Then imagine that this network is designed to regularly update this spreadsheet and you have a basic understanding of the blockchain.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_SjILOlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622203015437/-5ABAXkgK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_SjILOlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622203015437/-5ABAXkgK.png" alt="Screenshot 2021-05-28 at 13.56.46.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-smart-contracts"&gt;
  &lt;/a&gt;
  What are Smart Contracts?
&lt;/h3&gt;

&lt;p&gt;A smart contract is a self-executing contract with the terms of the agreement between buyer and seller being directly written into lines of code.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Smart contracts are simply programs stored on a blockchain that run when predetermined conditions are met.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-ethereum-blockchain"&gt;
  &lt;/a&gt;
  The Ethereum Blockchain
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://ethereum.org/en/"&gt; Ethereum &lt;/a&gt; is a decentralized, open-source blockchain with smart contract functionality. Ether (ETH) is the native cryptocurrency of the platform. Ethereum is the community-run technology powering the cryptocurrency, ether (ETH), and thousands of decentralized applications. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-an-nft-"&gt;
  &lt;/a&gt;
  What's an NFT ?
&lt;/h3&gt;

&lt;p&gt;An NFT is a unique token living on a blockchain that represents some other data, like an image or video. Since NFTs live on a blockchain( like Ethereum) their easy to track. Allowing for verification of ownership and past history. They let us tokenize things like art, collectibles even real estate. In Ethereum we make use of ERC721.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The first NFTs were Cyptopunks built by Larva Labs ( 2017 )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7eb8l43F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622218616738/qUEytSRFd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7eb8l43F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622218616738/qUEytSRFd.png" alt="Screenshot 2021-05-28 at 18.16.48.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#okay-we-are-done-with-some-cool-definitions-and-its-time-to-get-our-hands-dirty"&gt;
  &lt;/a&gt;
  Okay we are done with some cool definitions and its time to get our hands dirty 🤗
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#foolish-assumptions"&gt;
  &lt;/a&gt;
  Foolish Assumptions
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;That you have a basic understanding of blockchain, smart contracts, and NFTs&lt;/li&gt;
&lt;li&gt;That you have some basic javascript knowledge&lt;/li&gt;
&lt;li&gt;That you have  nodejs and npm installed on your machine&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#quick-summary"&gt;
  &lt;/a&gt;
  Quick Summary
&lt;/h3&gt;

&lt;p&gt;We will be developing an NFT Smart Contract on the ethereum blockchain and making use of different third-party technologies like &lt;a href="https://hardhat.org/"&gt;hardhat&lt;/a&gt;, &lt;a href="https://docs.ethers.io/v5/"&gt;ethers.js&lt;/a&gt; and &lt;a href="https://www.alchemy.com/"&gt;Alchemy&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-working-with-alchemy"&gt;
  &lt;/a&gt;
  1. Working with Alchemy
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-creating-an-ethereum-accountaddress"&gt;
  &lt;/a&gt;
  2. Creating an Ethereum account(address)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#3-add-an-ether-to-our-test-account"&gt;
  &lt;/a&gt;
  3. Add an Ether to our test account
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#4-setup-a-javascript-and-solidity-project"&gt;
  &lt;/a&gt;
  4. Setup a javascript and solidity project
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#5-develop-our-smart-contract"&gt;
  &lt;/a&gt;
  5. Develop our smart contract
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#6-deploying-our-smart-contract"&gt;
  &lt;/a&gt;
  6. Deploying our smart contract
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#step-1-working-with-alchemy"&gt;
  &lt;/a&gt;
  Step 1: Working with Alchemy
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.alchemy.com"&gt;Alchemy&lt;/a&gt; is a blockchain developer platform and API that allows us to communicate with ethereum chain without running our own nodes. It's an awesome platform and will get you started with Ethereum blockchain development in no time at all.🤯&lt;/p&gt;

&lt;p&gt;Firstly , let's go to &lt;a href="https://www.alchemy.com"&gt;Alchemy&lt;/a&gt; and set up our account ( navigate to the login button )&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hV24zJNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622211558615/Umn7s1cYW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hV24zJNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622211558615/Umn7s1cYW.png" alt="Screenshot 2021-05-28 at 16.19.09.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next , let's create our test app ( and API Key) on the alchemy dashboard &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DnFwV1fd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622211729388/l2Pdyr6uI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DnFwV1fd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622211729388/l2Pdyr6uI.png" alt="Screenshot 2021-05-27 at 14.13.59.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can name your app any name of your choice , add a short description, choose &lt;code&gt;Staging&lt;/code&gt; environment and choose the &lt;code&gt;Ropsten&lt;/code&gt; network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7wcn4Uz_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622212027983/NN3XdDRSE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7wcn4Uz_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622212027983/NN3XdDRSE.png" alt="Screenshot 2021-05-28 at 16.26.58.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-creating-an-ethereum-account-address"&gt;
  &lt;/a&gt;
  Step 2: Creating an Ethereum account (address)
&lt;/h3&gt;

&lt;p&gt;We will be using &lt;a href="https://metamask.io/download"&gt;Metamask&lt;/a&gt; to create an ethereum account that receives and sends transactions.&lt;/p&gt;

&lt;p&gt;Firstly , let's download &lt;a href="https://metamask.io/download"&gt;Metamask&lt;/a&gt; onto our browser( preferably use firefox or chrome) . Register and log in to Metamask and select the &lt;code&gt;Ropsten test network&lt;/code&gt; as our Ethereum network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GVtuk_Zo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622212225008/VjJmCfdPx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GVtuk_Zo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622212225008/VjJmCfdPx.png" alt="Screenshot 2021-05-28 at 16.30.18.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-add-an-ether-to-our-test-account"&gt;
  &lt;/a&gt;
  Step 3: Add an Ether to our test account
&lt;/h3&gt;

&lt;p&gt;We are going to &lt;a href="https://faucet.ropsten.be/"&gt;Ropsten Ethereum Faucet&lt;/a&gt; to fund our test account with 1 Ether.&lt;/p&gt;

&lt;p&gt;Firstly, let's navigate to the Faucet site &lt;a href="https://faucet.ropsten.be/"&gt;Faucet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EEDfO8Dw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622212352101/0sxwH7wMk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EEDfO8Dw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622212352101/0sxwH7wMk.png" alt="Screenshot 2021-05-28 at 16.32.24.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's enter our test account public id from our Metamask wallet and click the &lt;code&gt;send me test Ether&lt;/code&gt;. After let's check our wallet and you should have one test ether.⚡️ ☄️ 💥 🔥&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0yypWAQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622212650773/HoYGogM-O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0yypWAQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622212650773/HoYGogM-O.png" alt="Screenshot 2021-05-27 at 14.24.06.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-setup-a-javascript-and-solidity-project"&gt;
  &lt;/a&gt;
  Step 4: Setup a javascript and solidity project
&lt;/h3&gt;

&lt;p&gt;Let's go into our terminal (Ideally you can make use of an IDE) and set up our javascript project&lt;/p&gt;

&lt;p&gt;Firstly, let's create our project directory  and navigate to it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir nft-project
cd nft-project

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's initialize our js project using npm init&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next , let's install Hardhat is a development environment to compile, deploy, test, and debug your Ethereum software. This is an awesome piece of software really!!🤖&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev hardhat

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's run the command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx hardhat

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And select &lt;code&gt;create an empty hardhat.config.js&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dUOxdzZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622213372066/Pt6USwgEkI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dUOxdzZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622213372066/Pt6USwgEkI.png" alt="Screenshot 2021-05-27 at 15.06.36.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will create a hardhat.config.js in the root directory folder&lt;/p&gt;

&lt;p&gt;Let's add two new folders to the root directory of the project by running mkdir commands in the terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir  contracts

mkdir scripts

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;./contracts&lt;/code&gt; is where our NFT smart contract will live and in &lt;code&gt;./scripts&lt;/code&gt; is where we will keep scripts to deploy and interact with our NFT smart contract .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-develop-our-smart-contract"&gt;
  &lt;/a&gt;
  Step 5: Develop our smart contract
&lt;/h3&gt;

&lt;p&gt;We will be using &lt;a href="https://docs.openzeppelin.com/contracts/3.x/erc721"&gt;OpenZepplin&lt;/a&gt; to build our non-fungible tokens. OpenZepplin offers a library of secure smart contracts that can be used for development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yjo-OMbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622213886962/6UvafvjKv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yjo-OMbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622213886962/6UvafvjKv.png" alt="Screenshot 2021-05-28 at 16.57.55.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's open our code IDE ( VScode 🔥) and create a solidity file called "MyNFT.sol"  that will add our smart contract code too. We will be using solidity language to write out a smart contract and you can &lt;a href="https://docs.soliditylang.org/en/v0.8.4"&gt;read more about it here&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Solidity is an object-oriented programming language for writing smart contracts.&lt;br&gt;
Add the code below to the file&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
//Contract based on https://docs.openzeppelin.com/contracts/3.x/erc721
// SPDX-License-Identifier: MIT
pragma solidity ^0.7.3;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/utils/Counters.sol";
import "@openzeppelin/contracts/access/Ownable.sol";


contract cryptoDunks is ERC721, Ownable {
    using Counters for Counters.Counter;
    Counters.Counter private _tokenIds;

    constructor() public ERC721("crytoDunks, "NFT") {}

    function mintNFT(address recipient, string memory tokenURI)
        public onlyOwner
        returns (uint256)
    {
        _tokenIds.increment();

        uint256 newItemId = _tokenIds.current();
        _mint(recipient, newItemId);
        _setTokenURI(newItemId, tokenURI);

        return newItemId;
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are using the OpenZepplin library let's install the library to our project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @openzeppelin/contracts@3.1.0-solc-0.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To understand more about what the above code does checkout this &lt;a href="https://docs.openzeppelin.com/contracts/3.x/erc721"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's connect our Metamask account and Alchemy account to the project. We will install dotenv dependency on to the project. Dotenv is a zero-dependency module that loads environment variables from a .env file into process.env. Lastly , we will add &lt;code&gt;API URL&lt;/code&gt; from the app we created in Alchemy and the &lt;code&gt;metamask private key&lt;/code&gt; from our Metamask account.&lt;/p&gt;

&lt;p&gt;Install dotenv&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install dotenv --save

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a .env file in  the root of the project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch .env

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And lastly, add the environment variables&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;API_URL = "https://eth-ropsten.alchemyapi.io/v2/your-api-key"
PRIVATE_KEY = "your-metamask-private-key"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's install ethers.js into our project . &lt;a href="https://docs.ethers.io/v5/"&gt;Ethers.js&lt;/a&gt; library aims to be a complete and compact library for interacting with the Ethereum Blockchain and its ecosystem. It makes it easier for us to interact and make requests to Ethereum.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev @nomiclabs/hardhat-ethers 'ethers@^5.0.0'

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's update the hardhat.config.js with the  hardhat-ethers package we just installed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/**
* @type import('hardhat/config').HardhatUserConfig
*/
require('dotenv').config();
require("@nomiclabs/hardhat-ethers");
const { API_URL, PRIVATE_KEY } = process.env;
module.exports = {
   solidity: "0.7.3",
   defaultNetwork: "ropsten",
   networks: {
      hardhat: {},
      ropsten: {
         url: API_URL,
         accounts: [`0x${PRIVATE_KEY}`]
      }
   },
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, its time to compile our smart contract using hardhat 🧶&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx hardhat compile

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-6-deploy-your-smart-contract"&gt;
  &lt;/a&gt;
  Step 6:  Deploy your smart contract
&lt;/h3&gt;

&lt;p&gt;Yey!! 🎓 It's time to finish up our project and deploy it&lt;/p&gt;

&lt;p&gt;Let's start off by adding a &lt;code&gt;deploy.js&lt;/code&gt; file in the  &lt;code&gt;./scripts&lt;/code&gt;  folder and adding the code below to the &lt;code&gt;deploy.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async function main() {
   const MyNFT = await ethers.getContractFactory("MyNFT");

   // Start deployment, returning a promise that resolves to a contract object
   const myNFT = await MyNFT.deploy();
   console.log("Contract deployed to address:", myNFT.address);
}

main()
  .then(() =&amp;gt; process.exit(0))
  .catch(error =&amp;gt; {
    console.error(error);
    process.exit(1);
  });

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's go into the root of the project in the terminal and run the command below to deploy our smart contract :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx hardhat run scripts/deploy.js --network ropsten

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our output should be similar to this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Contract deployed to address: &amp;lt; Your Generated Address &amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's go to  &lt;a href="https://ropsten.etherscan.io/"&gt; Ropsten etherscan &lt;/a&gt;  and search for our contract address that was generated when we deployed our smart contract.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G3OoElXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622215403709/VAY7Sc-Ew.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G3OoElXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622215403709/VAY7Sc-Ew.png" alt="Screenshot 2021-05-28 at 17.23.12.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, we can go to &lt;a href="https://dashboard.alchemyapi.io/"&gt;Alchemy Dashboard&lt;/a&gt; and get a better look at what's happening under the hood.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eq6lb6Hy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622215752141/Ax5iiSXJx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eq6lb6Hy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622215752141/Ax5iiSXJx.png" alt="Screenshot 2021-05-27 at 16.21.05.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;You have successfully built and deployed your first smart contract 🚀🚀 . Congratulations!! . WHAT NOW??!😈 I recommend you learn following to be a competent Ethereum blockchain developer:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-web3js"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://web3js.readthedocs.io/en/v1.3.4/"&gt;Web3.js&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-solidity"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://docs.soliditylang.org/en/v0.8.4/"&gt;Solidity&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#3-ethereum"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://ethereum.org/en/"&gt;Ethereum&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#4-ethersjs-and-hardhat"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://docs.ethers.io/v5/"&gt;Ethersjs&lt;/a&gt; and &lt;a href="https://hardhat.org/"&gt;Hardhat&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;But I recommend you start building something blockchain-related as quickly as possible  🦾 &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks to &lt;a href="https://ethereum.org/en/"&gt; Ethereum &lt;/a&gt;  and all the third parties that we used in this project.&lt;/p&gt;

&lt;p&gt;Thank you for reading this -Follow me on &lt;a href="https://twitter.com/CyprianAarons"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Checkout my &lt;a href="//cyprianaarons.co.zw"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>blockchain</category>
      <category>ethereum</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Small tips that will help you to use ActiveRecord callbacks more efficiently</title>
      <author>Ivan Ilyukhin</author>
      <pubDate>Fri, 28 May 2021 20:06:09 +0000</pubDate>
      <link>https://dev.to/evanilukhin/small-tips-that-will-help-you-to-use-activerecord-callbacks-more-efficiently-4i91</link>
      <guid>https://dev.to/evanilukhin/small-tips-that-will-help-you-to-use-activerecord-callbacks-more-efficiently-4i91</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Everything there is related the Rails 6 but also actual for 5 and 4.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Do not use callbacks if you can&lt;/strong&gt; -  callbacks are incredibly helpful when you need to add a function that should run before/after/around specific lifecycle events. If they do not depend from the context it is possible the best choice. But if the model is used almost everywhere and there are a lot of create/update/destroy events adding new callbacks can drastically reduce the application performance. So I recommend to add them only if you absolutely confident and aware about consequences.&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;Despite the upper warning, you are decided to add a callback to your model. There are a few things that I recommend to keep in mind.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;Use &lt;a href="https://api.rubyonrails.org/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-saved_change_to_attribute-3F"&gt;saved_change_to_attribute?&lt;/a&gt; in &lt;code&gt;after_save&lt;/code&gt;/&lt;code&gt;after_update&lt;/code&gt; to except unnecessary calls. - If your callback should be called only after changes in a limited set of attributes, this method can help with it. For example, you have the model User with fields: email, password, first_name and last_name. The goal is to update related certificates only when the &lt;em&gt;first_name&lt;/em&gt; or &lt;em&gt;last_name&lt;/em&gt; changed.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class="n"&gt;after_update&lt;/span&gt; &lt;span class="ss"&gt;:update_certifcates&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="ss"&gt;if: &lt;/span&gt;&lt;span class="no"&gt;Proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;saved_change_to_first_name?&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;saved_change_to_last_name?&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_certificates&lt;/span&gt;
    &lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;UpdateCertificates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use more suitable methods whenever possible - instead of using common methods like: &lt;code&gt;*_save&lt;/code&gt;, &lt;code&gt;*_commit&lt;/code&gt;, &lt;code&gt;*_validate&lt;/code&gt; is better to use more specific: &lt;code&gt;*_update&lt;/code&gt; or &lt;code&gt;*_create&lt;/code&gt;. It will also reduce the count of calls.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;after_commit&lt;/code&gt; instead of &lt;code&gt;after_save&lt;/code&gt; when you want to complete the action - If something went wrong in the &lt;code&gt;after_commit&lt;/code&gt; callback there will be an error but the action will be finished because it is called when changes are already flushed to the database. Other callbacks will rollback changes, sometimes it can be useful.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not run expensive operations in callbacks - better to move them into &lt;a href="https://guides.rubyonrails.org/active_job_basics.html"&gt;ActiveJobs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you know other problems with callbacks or know how to make live easier with them, please share in comments.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#some-useful-links"&gt;
  &lt;/a&gt;
  Some useful links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Rails guide about callbacks — &lt;a href="https://guides.rubyonrails.org/active_record_callbacks.html"&gt;Active Record Callbacks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Rails 6 Callbacks API - &lt;a href="https://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html"&gt;ActiveRecord::Callbacks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Kelly Sutton  — &lt;a href="https://engineering.gusto.com/the-rails-callbacks-best-practices-used-at-gusto/"&gt;5 Rails Callbacks Best Practices Used at Gusto&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
    </item>
  </channel>
</rss>
