<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Web Dev Made Easy</title>
      <author>The Nerdy Dev</author>
      <pubDate>Wed, 08 Dec 2021 04:56:03 +0000</pubDate>
      <link>https://dev.to/thenerdydev/web-dev-made-easy-85d</link>
      <guid>https://dev.to/thenerdydev/web-dev-made-easy-85d</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this article, I will tell you about a website using which you can use as a resource for learning Web Development. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was first published on&lt;/em&gt; &lt;a href="https://the-nerdy-dev.com/"&gt;https://the-nerdy-dev.com/&lt;/a&gt;.&lt;br&gt;
&lt;em&gt;Check the website for more interesting articles and tutorials on Web Development.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So the website name is this : &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#webdev"&gt;
  &lt;/a&gt;
  web.dev
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://web.dev"&gt;https://web.dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gIusUTbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yf5l5b4p6oy7odj1xccp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gIusUTbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yf5l5b4p6oy7odj1xccp.png" alt="Image description" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now some of the featured courses on their website are : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tUkyONHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asfyvpugpqaihtynzl29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tUkyONHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asfyvpugpqaihtynzl29.png" alt="Image description" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-learn-responsive-design"&gt;
  &lt;/a&gt;
  1. Learn Responsive Design
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AHNZM2A_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qnos2dlaih0y5sjz8u2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AHNZM2A_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qnos2dlaih0y5sjz8u2.png" alt="Image description" width="400" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This course takes you on a journey through the many facets of modern responsive web design. The first few modules will ease you in with a history of where responsive design came from and a look at the fundamentals of responsive layouts. From there, you‚Äôll learn about responsive images, typography, accessibility and more.&lt;/p&gt;

&lt;p&gt;Along the way you‚Äôll find out how to make websites responsive to user preferences and device capabilities. By the end, you‚Äôll also have an understanding of what the future might hold for responsive design.&lt;/p&gt;

&lt;p&gt;Each module has demos and self-assessments for you to test your knowledge.&lt;/p&gt;

&lt;p&gt;This course is created for beginner and intermediate designers and developers. A basic understanding of HTML and CSS should be enough. You don‚Äôt need to know any JavaScript. If you‚Äôre completely new to making websites, there's an introduction to HTML and another course to help you learn CSS. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-learn-forms"&gt;
  &lt;/a&gt;
  2. Learn Forms
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gEccin0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9bz7bug2697hjuvsz7j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gEccin0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9bz7bug2697hjuvsz7j.png" alt="Image description" width="392" height="422"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This course breaks down HTML forms into easy to understand pieces. Over the next few modules, you'll learn how an HTML form works and how to use them effectively in your projects. Use the menu pane by the Learn Forms logo to navigate the modules.&lt;/p&gt;

&lt;p&gt;You'll learn how to build a basic HTML form, about HTML form elements, styling forms, help users re-entering data, ensuring the form is accessible, and secure, how to test your forms, and about specific form types.&lt;/p&gt;

&lt;p&gt;Each module is full of interactive demos and self-assessments for you to test your knowledge.&lt;/p&gt;

&lt;p&gt;This course is suitable for beginners and advanced HTML developers. The first few modules help you get started with building HTML forms, the other modules give more detail. You can go through the series from start to finish to get a general understanding of HTML forms, or pick a specific module you want to learn more about.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-learn-progressive-web-apps"&gt;
  &lt;/a&gt;
  3. Learn Progressive Web Apps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xFd14x8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qqz98zdf5g482ykoxhc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xFd14x8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qqz98zdf5g482ykoxhc.png" alt="Image description" width="393" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This course covers the fundamentals of Progressive Web App development into easy-to-understand pieces. Over the following modules, you'll learn what a Progressive Web App is, how to create one or upgrade your existing web content, and how to add all the pieces for an offline, installable app. Use the menu pane by the "Learn PWA" logo to navigate the modules.&lt;/p&gt;

&lt;p&gt;You'll learn PWA fundamentals like the Web App Manifest, Service Workers, how to design with an app in mind, what's different from a classic web app, how to use other tools to test and debug your PWA. After these fundamentals, you'll learn about integration with the platform and operating system, how to enhance your PWA's installation and usage experience, and how to offer an offline experience.&lt;/p&gt;

&lt;p&gt;Each module includes interactive demos and self-assessments for you to test your knowledge. You will be able to test and try demos on your mobile phone, tablet, or laptop while playing with the code to understand the fundamentals of what makes a Progressive Web App.&lt;/p&gt;

&lt;p&gt;This course is created for a beginner and advanced web developers alike. You can go through the series from start to finish to get a general understanding of PWA from top to bottom, or you can use it as a reference for specific subjects. For those new to web development you will need a grounding in HTML, CSS, and JavaScript to follow along. Check out Learn CSS, and the HTML and JavaScript courses on MDN. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-learn-css"&gt;
  &lt;/a&gt;
  4. Learn CSS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q02Apsok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x137q1oab21lhbyiyohl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q02Apsok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x137q1oab21lhbyiyohl.png" alt="Image description" width="396" height="403"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This course breaks down the fundamentals of CSS into digestible, easy to understand pieces. Over the next few modules, you'll learn how the core aspects of CSS work and how to use them effectively in your projects. Use the menu pane by the "Learn CSS" logo to navigate the modules.&lt;/p&gt;

&lt;p&gt;You'll learn CSS fundamentals like the box model, cascade and specificity, flexbox, grid and z-index. And, along with these fundamentals, you'll learn about functions, color types, gradients, logical properties and inheritance to make you a well-rounded front-end developer, ready to take on any user interface.&lt;/p&gt;

&lt;p&gt;Each module is full of interactive demos and self-assessments for you to test your knowledge. In addition to learning through reading and demos, there is an accompanying podcast episode for each topic as another way to learn and continue expanding your knowledge.&lt;/p&gt;

&lt;p&gt;This course is created for beginner and advanced CSS developers alike. You can go through the series from start to finish to get a general understanding of CSS from top to bottom, or you can use it as a reference for specific styling subjects. For those new to web development overall, check out the intro to HTML course from MDN to learn all about how to write markup and link your stylesheets.&lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you enjoy my articles, consider following me on Twitter for more interesting stuff :&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdzF7_iP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf9dc7pby59jmgkstw74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdzF7_iP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf9dc7pby59jmgkstw74.png" alt="Image description" width="284" height="255"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;‚ö°Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Jun 10 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginnners</category>
    </item>
    <item>
      <title>AWS Amplify, Secured DevOps - Part 2, Regenerate</title>
      <author>Daniel Hagen</author>
      <pubDate>Wed, 08 Dec 2021 04:37:16 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-amplify-secured-devops-part-2-1mja</link>
      <guid>https://dev.to/aws-builders/aws-amplify-secured-devops-part-2-1mja</guid>
      <description>&lt;p&gt;Ok, so if you've read &lt;a href="https://dev.to/aws-builders/aws-amplify-secured-devops-part-1-25oo"&gt;Part 1&lt;/a&gt;, you know that you should protect the &lt;code&gt;aws-exports.js&lt;/code&gt; file. The first method I will show is using only AWS Amplify tools.&lt;/p&gt;

&lt;p&gt;Why store it when it gets generated every time, right? In part 1, I mentioned that &lt;code&gt;amplify init&lt;/code&gt;, &lt;code&gt;amplify pull&lt;/code&gt;, and any &lt;code&gt;amplify add &amp;lt;feature&amp;gt;&lt;/code&gt; or &lt;code&gt;amplify remove &amp;lt;feature&amp;gt;&lt;/code&gt; will cause the &lt;code&gt;aws-exports.js&lt;/code&gt; file to be recreated.&lt;/p&gt;

&lt;p&gt;I've committed the source tree on several projects with dependencies on &lt;code&gt;src/aws-exports.js&lt;/code&gt;, which will more than break the build if it doesn't exist.&lt;/p&gt;

&lt;p&gt;So let's say that you're on your laptop. You've successfully &lt;code&gt;amplify init&lt;/code&gt; to create your environment or used the AWS Amplify Studio UI to set up your environment and then run &lt;code&gt;amplify pull --appId &amp;lt;snip&amp;gt; --envName dev&lt;/code&gt;. You've got your &lt;code&gt;src/aws-exports.js&lt;/code&gt; setup, and you're building locally. You commit your code in and move over to your desktop, and pull your code down. But running dev breaks, &lt;code&gt;src/aws-exports.js&lt;/code&gt; doesn't exist.&lt;/p&gt;

&lt;p&gt;It's pretty straightforward. We're going to run &lt;code&gt;amplify pull --appId &amp;lt;snip&amp;gt; --envName dev&lt;/code&gt; again to have it pull down all the backend settings and generate your &lt;code&gt;src/aws-exports.js&lt;/code&gt; for you.&lt;/p&gt;

&lt;p&gt;A quick note there, if you added a feature on your desktop, let's say new storage (S3) for the application, the next time you commit and switch to your laptop, you'll perform another &lt;code&gt;amplify pull&lt;/code&gt; to get back in sync. You can always run &lt;code&gt;amplify status&lt;/code&gt; to see if you are up to date against the deployed version.&lt;/p&gt;




&lt;p&gt;Now let's talk builds and CI/CD. One of the most fantastic features that you get pretty much out of the box in Amplify is a complete CI/CD pipeline. I'll look at doing a dedicated post for that feature, but I'm going to leave the details out of scope for now. The big thing that I want to point out is how it to can generate the &lt;code&gt;src/aws-exports.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Each build is executed inside a container in the AWS build environment; it inherits the IAM role provided, which allows it to authenticate to the Amplify framework and pull down the settings. This permission configuration happens by default with the default build settings. In Part 3, I'll show you how to override or specify these settings using Environment Variables.&lt;/p&gt;

&lt;p&gt;The key to this, though, is to think of it as doing a &lt;code&gt;amplify pull&lt;/code&gt; at the beginning of every build. If you're modifying your &lt;code&gt;aws-exports.js&lt;/code&gt; file (you never should), those modifications will not make it in this build. If the backend had changed and you didn't &lt;code&gt;amplify pull&lt;/code&gt; before developing, validating, and committing, your backend references may be out of sync.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>amplify</category>
      <category>fullstack</category>
      <category>cicd</category>
    </item>
    <item>
      <title>20 Awesome Github Repos Every Web Developer Should Know</title>
      <author>Human ai</author>
      <pubDate>Wed, 08 Dec 2021 04:21:51 +0000</pubDate>
      <link>https://dev.to/huai/10-awesome-github-repos-every-web-developer-should-know-2ng3</link>
      <guid>https://dev.to/huai/10-awesome-github-repos-every-web-developer-should-know-2ng3</guid>
      <description>&lt;p&gt;&lt;span&gt;Here I list 10 excellent JavaScript based GitHub resources that will help you to understand the language better and help you to write clean code. This list is based on my personal preference.¬†&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;ReadUI&amp;amp;quot More: &lt;b&gt;&lt;a href="https://news.google.com/articles/CAIiEHRNZDbK-6L3wLhhd1mvgX8qGQgEKhAIACoHCAow7-ynCzDc978DMKOIlgc?hl=en-US&amp;amp;gl=US&amp;amp;ceid=US%3Aen"&gt;20 Awesome Github Repos Every Web Developer Should Know&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Pitch for MQTT in IoT device Communication.  </title>
      <author>Dhruvin Vekariya</author>
      <pubDate>Wed, 08 Dec 2021 04:14:19 +0000</pubDate>
      <link>https://dev.to/dhruvinv/pitch-for-mqtt-in-iot-device-communication-mdi</link>
      <guid>https://dev.to/dhruvinv/pitch-for-mqtt-in-iot-device-communication-mdi</guid>
      <description>&lt;h3&gt;
  &lt;a href="#iot-primer"&gt;
  &lt;/a&gt;
  IoT Primer
&lt;/h3&gt;

&lt;p&gt;The internet landscape is continuously evolving, and with the introduction of faster networks such as 5G, virtually everything will be connected. This capability of more rapid, low latency internet access will spur innovation and create previously unforeseen devices. Hence, the term IoT is often broached up when talking about the future of internet connectivity. &lt;/p&gt;

&lt;p&gt;The Internet of Things ‚Äî IoT, for short ‚Äî is made up of devices that connect to the internet and share data with each other. Any device or object that is equipped with a  Wi-Fi chip that connects to the internet and shares/receives information is an IoT device. For instance, voice-activated speakers, thermostats or motion-sensing Wi-FI routers. All of them are examples of IoT devices. While connecting to the internet is the only requirement, actual value comes from the communication to a back-end service that can perform computations, mutations, aggregations, and all that fancy jazz!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#limitations-of-iot-communication-over-http"&gt;
  &lt;/a&gt;
  Limitations of IoT Communication over HTTP
&lt;/h3&gt;

&lt;p&gt;Communication between the devices becomes a critical aspect of the IoT infrastructure. The underlying communication protocol needs to be fast, secure, reliable and scalable enough to support mass-produced devices and simultaneously provide value. Most developers are familiar with the HTTP protocol used in web services, so why not connect IoT devices with HTTP-supported web services and call it a day? Depending on the type of use case, you can, but it only works for a small subset of cases. There are several limitations when using HTTP with IoT infrastructure. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;HTTP is one-way communication&lt;/strong&gt; - All requests are initiated by the client, and the server responds with a response. IoT devices act as a client and hence can only create requests but cannot receive any commands passively to perform an action. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;HTTP is a synchronous protocol&lt;/strong&gt; - All web browsers wait for the server to respond to a particular request, whereas this may not be the case for IoT devices. For instance, a group of sensors posting data in a high latent/unreliable network, synchronous communication may be problematic or even detrimental where precision calculations are fundamental. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;HTTP is intrinsically optimized for one-to-one communication&lt;/strong&gt; - The client makes a request, and the server responds. When a collection of IoT devices are working together, it might make sense to broadcast a response to a group of devices which is inherently complicated to achieve with HTTP protocol. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;HTTP is document-centric&lt;/strong&gt; - HTTP is optimized to share documents, meaning message sizes are much larger and need to be parsed, evaluated, etc. Thus this creates bottlenecks for already resource-constrained devices such as sensors. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For the above reasons, HTTP can not provide a suitable ecosystem for several IoT use cases. Thus, an alternative that overcomes these obstacles is MQTT. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-mqtt"&gt;
  &lt;/a&gt;
  What is MQTT
&lt;/h3&gt;

&lt;p&gt;MQTT stands for Message Queue Telemetry Transport is built on top TCP/IP stack, initially tailored towards facilitating communication between sensors and oil pipelines. It became an OASIS standard messaging protocol for IoT devices in 2014. However, its name has nothing to do with messaging queues and is actually based on Publish-Subscribe or pub-sub model. It has minimal overhead and is designed for reliable communication over unreliable connectivity. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-characteristics-of-mqtt"&gt;
  &lt;/a&gt;
  Key Characteristics of MQTT
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Binary Responses&lt;/strong&gt; - MQTT is a binary-based protocol; the control element, unlike HTTP, is bytes. Text-based protocols are not suitable for machines as all machines operate via binary data manipulation. The smallest possible response over MQTT is 2 bytes, whereas the minimum possible response is 17 bytes over HTTP. Therefore, MQTT is lightweight and super-efficient.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Bi-Directional Communication&lt;/strong&gt; - MQTT allows messaging between the device to cloud and cloud to the device. Thus, enabling message broadcasting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data Agnostic&lt;/strong&gt; - The transport of payload itself is agnostic to the content of payload, hence it is possible to send a payload of all imaginable data types (even custom data types).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Built on top TCP/IP&lt;/strong&gt; - This provides necessary benefits of using TCP such as packet reliability, persistence etc. Furthermore, MQTT can also run SSL/TLS, ensuring the data communication is encrypted and secure. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The above-listed benefits are vital in supporting IoT devices while providing necessary scalability. However, the actual benefits stem from the publish-subscribe architecture embodied by the MQTT protocol.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publishsubscribe-model"&gt;
  &lt;/a&gt;
  Publish-Subscribe Model
&lt;/h3&gt;

&lt;p&gt;In a traditional server-client architecture, the client communicates to a server, and the server responds back with a response. In contrast to the conventional view, client-server entities are decoupled into two entities in the pub-sub model, &lt;strong&gt;broker&lt;/strong&gt; and &lt;strong&gt;clients&lt;/strong&gt;. There are two types of clients, a &lt;strong&gt;publisher&lt;/strong&gt;, a client that sends messages and a &lt;strong&gt;subscriber&lt;/strong&gt;, which receives messages. &lt;/p&gt;

&lt;p&gt;The purpose of the broker, as the name suggests, is to facilitate message passing between the clients. All messaging in the MQTT broker is distributed based on topics. A subscriber client subscribes to particular topics, and similarly, a Publisher client publishes a message and topic to the broker. The broker then, based on the topic, forwards the messages to appropriate clients. This decoupling provides numerous benefits over traditional client-server architecture.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Each client does not need to know every other client's existence. To receive or publish messages, the client only needs to know the broker's host IP.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each client does not need to run simultaneously. Brokers can store messages and enable the creation of new topics on the fly. Hence, clients go through their cycle of receiving and sending notifications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each client can work asynchronously to send and receive messages. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#figure-1-pubsub-in-the-smart-speaker"&gt;
  &lt;/a&gt;
  Figure 1:  Pub-Sub in the smart speaker
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GtULHAhV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jgw9v3ussk2l4dc2cvf5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GtULHAhV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jgw9v3ussk2l4dc2cvf5.png" alt="Smart Speaker example" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;This article provides a high-level overview of the MQTT protocol and contrasts it against the beloved HTTP. It only introduces MQTT at a surface but reasons about the benefits of using it over the widely popular HTTP. If you are interested in learning more about MQTT, check out the links attached below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#suggested-readings"&gt;
  &lt;/a&gt;
  Suggested Readings
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.hivemq.com/mqtt-client-library-encyclopedia/"&gt;Guide to starting coding with MQTT&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hivemq.com/mqtt-essentials/"&gt;Further Reading to MQTT&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mqtt.org/use-cases/"&gt;MQTT Use Cases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.ibm.com/articles/iot-mqtt-why-good-for-iot/"&gt;Intro to MQTT&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Git Cheat Sheet- 20 commands I Use Everyday</title>
      <author>Human ai</author>
      <pubDate>Wed, 08 Dec 2021 04:07:25 +0000</pubDate>
      <link>https://dev.to/huai/git-cheat-sheet-20-commands-i-use-everyday-3o3b</link>
      <guid>https://dev.to/huai/git-cheat-sheet-20-commands-i-use-everyday-3o3b</guid>
      <description>&lt;p&gt;Hey Coders!&lt;br&gt;When I started coding, tracking changes in my codes was always painful and the fear of losing files was always there. But now we have Git to tackle these problems, it has everything you need to make your coding environment safe and easy. Git is so important for every programmer's daily life especially when you are working with a team. The software industry widely uses it but mastering all the commands can take time, so keep practising! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read More&lt;/strong&gt;: &lt;strong&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/git-cheat-sheet-20-commands-i-use-everyday/" rel="noreferrer noopener"&gt;Git Cheat Sheet- 20 commands I Use Everyday&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Projects ideas to become a javascript master üöÄ Resource compilation üí•</title>
      <author>Human ai</author>
      <pubDate>Wed, 08 Dec 2021 03:36:56 +0000</pubDate>
      <link>https://dev.to/huai/projects-ideas-to-become-a-javascript-master-resource-compilation-3leo</link>
      <guid>https://dev.to/huai/projects-ideas-to-become-a-javascript-master-resource-compilation-3leo</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;The best way to learn a new programming language is to build projects.

I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.

My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.

That will test if you have really learned the concepts or not.

You can click on any of the projects listed below to jump to that section of the article.

&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/40-javascript-projects-for-beginners/&amp;amp;ved=2ahUKEwiB9tj0rPjyAhUMX30KHZQ5CG0QFnoECAgQAQ&amp;amp;usg=AOvVaw26RDQjHugdhbATVS83LI83"&gt;Projects ideas to become a javascript master üöÄ Resource compilation üí•

&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>15 JavaScript Tips &amp; Tricks That No One Teaches üöÄ</title>
      <author>Human ai</author>
      <pubDate>Wed, 08 Dec 2021 03:35:40 +0000</pubDate>
      <link>https://dev.to/huai/15-javascript-tips-tricks-that-no-one-teaches-5cc6</link>
      <guid>https://dev.to/huai/15-javascript-tips-tricks-that-no-one-teaches-5cc6</guid>
      <description>&lt;p&gt;JavaScript is no doubt one of the coolest languages in the world and is gaining more and more popularity day by day. So the developer community has found some tricks and tips after using JS for quite a while now. Today I will share 15 Tips &amp;amp; Tricks With You!&lt;/p&gt;

&lt;p&gt;So let's get started &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read More: &lt;span&gt;&lt;a href="https://www.codelivly.com/8-javascript-tips-tricks-that-no-one-teaches/" rel="noreferrer noopener nofollow"&gt;15 JavaScript Tips &amp;amp; Tricks That No One Teaches üöÄ&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Bases de datos y ORM</title>
      <author>Pablo Agust√≠n Canale</author>
      <pubDate>Wed, 08 Dec 2021 02:53:29 +0000</pubDate>
      <link>https://dev.to/pablocanale/bases-de-datos-y-orm-3d5m</link>
      <guid>https://dev.to/pablocanale/bases-de-datos-y-orm-3d5m</guid>
      <description>&lt;p&gt;La base de datos es una recopilaci√≥n de datos e informaci√≥n de forma organizada y estructurada.&lt;br&gt;
Normalmente cuentan con un sistema de gesti√≥n de base de datos (DBMS).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bases-de-datos-relacionales"&gt;
  &lt;/a&gt;
  BASES DE DATOS RELACIONALES
&lt;/h2&gt;

&lt;p&gt;Es el modelo m√°s utilizado hoy en d√≠a.&lt;br&gt;
En esencia las bases de datos relacionales son un conjunto de tablas formadas por columnas (campos) y filas (registros). La estructura nos ayuda a hacer &lt;strong&gt;relaciones&lt;/strong&gt; entre tablas mediante &lt;strong&gt;claves for√°neas&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øQU√â ES UN DBMS?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Es un programa que te permite crear, editar y administrar las bases de datos. La mayoria de las relacionales utilizan SQL, como MySQL o PostgreSQL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øQU√â ES SQL?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Es un lenguaje de programaci√≥n usado por casi todas las bases de datos relacionales para consultar, definir y manipular datos. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PRINCIPIOS ACID&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H1Ar2Gcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfa3addre1obkoiatdmj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H1Ar2Gcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfa3addre1obkoiatdmj.png" alt="Image description" width="386" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#object-relational-mapping-orm"&gt;
  &lt;/a&gt;
  OBJECT RELATIONAL MAPPING (ORM)
&lt;/h2&gt;

&lt;p&gt;Es un modelo de programaci√≥n que consiste en la transformaci√≥n de las tablas de una base de datos, en una serie de entidades que simplifiquen las tareas b√°sicas de acceso a los datos para el programador. &lt;/p&gt;

&lt;p&gt;¬øPorqu√© queremos un ORM?&lt;/p&gt;

&lt;p&gt;Como sabemos SQL es el lenguaje m√°s utilazado de consulta pero existen varios sistemas de gesti√≥n de base de datos que cuentan con diferencias en los mismos tipos de consultas, por ejemplo&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EFo_-GFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijdhmv8idums8b0exjue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EFo_-GFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijdhmv8idums8b0exjue.png" alt="Image description" width="429" height="72"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esto nos lleva a dificultades en el desarrollo ya que deberiamos aprendernos estas variaciones para cada base de datos distinta en la que trabajemos, y mas importante a√∫n, si en un futuro deseamos migrar la aplicaci√≥n, habr√≠a que reescribir una gran cantidad de consultas.&lt;/p&gt;

&lt;p&gt;Con el ORM nos facilitamos el trabajo, nos brinda ayuda en las labores b√°sicas de cualquier acceso a datos, el CRUD (Create, Read, Update, Delete). Realizando todas estas labores a trav√©s de un lenguaje orientado a objetos.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>orm</category>
      <category>webdev</category>
      <category>database</category>
    </item>
    <item>
      <title>6 Myths Keeping You From Becoming a Software Engineer</title>
      <author>Jordan Smith</author>
      <pubDate>Wed, 08 Dec 2021 02:51:06 +0000</pubDate>
      <link>https://dev.to/jordan_smith/6-myths-keeping-you-from-becoming-a-software-engineer-4gf5</link>
      <guid>https://dev.to/jordan_smith/6-myths-keeping-you-from-becoming-a-software-engineer-4gf5</guid>
      <description>&lt;p&gt;If you're thinking about trying to start a career as a software developer and done any kind of research into the tech industry, you've no doubt come across the countless horror stories and discouraging "facts" about how difficult it is to break into the world of software engineering. &lt;/p&gt;

&lt;p&gt;As someone that started out my tech journey with a background in warehouses and manufacturing, with no extraordinary technical acumen, no connections to the tech community, and no college under my belt (except for a couple failed classes in the "running-start" program) - I'm here to tell you that much of what you hear is simply not true. Although it does take work, and you won't just get a coding job on a whim, there really aren't as many barriers separating you and your dream career as you might think. The world of technology is constantly evolving, and so are the requirements to working in it. While some of these myths may have been true at some point in the past, they aren't now. It's time to stop letting them get out into the world and start getting rid of this artificial barrier that's stopping so many people from even attempting to get the career they want. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#myth-1-you-have-to-be-a-tech-junkie-to-be-a-good-developer"&gt;
  &lt;/a&gt;
  Myth #1: You have to be a tech junkie to be a good developer
&lt;/h2&gt;

&lt;p&gt;There is this idea that all developers are some kind of "tech nerds" that grew up taking apart computers and hacking video games. But as seems to always be the case, reality isn't quite like the stereotypes lead you to believe. You don't have to be a major technology enthusiast to be a software engineer. I was never all that into tech outside of being a general consumer. Sure I played video games and was excited when the new iPod or new phone came out, but the thought of actually finding out how these things worked was far from my mind. &lt;/p&gt;

&lt;p&gt;All you really need is a general understanding and a willingness to learn about the technology relevant to the field you want to work in. If you are a tech junkie... great! You already know you'll enjoy the work! But don't be discouraged if you're not. There's a good chance you'll find yourself getting more into it as your career grows and as you start working on new and exciting things. If you're reading this article and you've gotten this far - you have more than enough interest to get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#myth-2-you-have-to-be-a-genius-to-code"&gt;
  &lt;/a&gt;
  Myth #2: You have to be a genius to code
&lt;/h2&gt;

&lt;p&gt;This one is similar to the first myth (and several more later on) in that it's just another stereotype. I can't tell you how many interactions I've had that went pretty much exactly like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Me after someone asks what I do: "I'm a software developer, so I make apps and websites and things like that."&lt;/p&gt;

&lt;p&gt;Them: "Wow you must be really smart. I could never do something like that."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As much as that conversation is fine if you want to stroke your ego a bit, I always feel a little awkward afterwards. Because of course I'm not any smarter than the person I'm talking to. I just happened to learn a different set of skills.&lt;/p&gt;

&lt;p&gt;Learning to code is sort of like learning another language. It takes dedication, incremental learning (start small and easy then slowly move to more difficult and complex), repetition, and of course practice. But the important thing to know is it doesn't require any inherit &lt;em&gt;"smarts."&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#myth-3-programming-involves-too-much-complex-math"&gt;
  &lt;/a&gt;
  Myth #3: Programming involves too much complex math
&lt;/h2&gt;

&lt;p&gt;This was something that I believed before getting started, and something that almost made me change my course entirely. But thankfully I kept going, and to my immense relief, learned that programming doesn't have to involve some crazy math skills.&lt;/p&gt;

&lt;p&gt;Now to caveat this - I recognize that a lot of degree programs and universities do require higher level math, however not all of them do. And as I'll talk about a bit later, traditional college isn't your only option. I also have to acknowledge that some programming actually does involve a good amount of more complex math. If you are looking to get into something like game development or cryptography or some other more niche fields, then this one won't be as much of a myth. &lt;/p&gt;

&lt;p&gt;But if you're someone like me who dreaded walking into math class, not all hope is lost! There are plenty of fields that you can get into that don't require some kind of advanced trigo-calcu-algebraic madness. Things like building websites, creating user interfaces, or even a lot of API and cloud work, are all perfectly valid and lucrative areas of focus for a programmer and require little to no high level math skills. Besides, unless you're in an interview (and sometimes not even then), no one is going to frown on you pulling up Google when the occasional need for math does arise.&lt;/p&gt;

&lt;p&gt;Take it from me. I have been coding professionally for a little over 4 years, I make a comfortable 6-figure salary, and have no issues completing any tasks or growing in any of the companies I've worked for, and I can't remember a time I had to solve a complex math problem all on my own to get the job done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#myth-4-you-need-to-have-an-expensive-college-degree"&gt;
  &lt;/a&gt;
  Myth #4: You need to have an expensive college degree
&lt;/h2&gt;

&lt;p&gt;This is one of those myths that started as a fact. Back in the day if you wanted to become a programmer the best option was to go get a degree at some university and inevitably go into a bunch of debt. Fortunately though this thought process is starting to disappear. With technology becoming such an integral part of every day life, and with so much easy access to self-learning materials, more and more paths are opening up to get into the tech world. It's starting to become more common to meet developers that are entirely self taught. Utilizing online resources such as LinkedIn Learning, Udemy, Codecademy, or even just through YouTube tutorials - you can learn everything you need to know to nail an interview and be a very proficient engineer.&lt;/p&gt;

&lt;p&gt;But what if you want a little more guidance than that, but still don't want to go majorly in debt for a large university degree? Well, there's options for you too! Bootcamps are shorter programs that solely focus on getting someone the skills to become a software developer without all the fluff of a full scale degree. You won't be leaving these bootcamps with a Bachelor's degree, but you will be leaving with the skills you need to start doing the job.&lt;/p&gt;

&lt;p&gt;There's also more programs that are coming up at smaller schools and community colleges that do end with a Bachelor's degree, but at a fraction of the cost of a large university. This is the route I took. My local community college offered a program in &lt;em&gt;"Applied Computer Science"&lt;/em&gt; where we spent two years in small cohorts of students, creating real applications for real clients. All in the process of learning to code. The small and consistent class sizes along with having a core group of a few teachers allowed us to build strong relationships that in turn lead to greater learning. Building real apps for real clients, allowed us to really dive deep into the practical application of programming, rather than just getting taught a bunch of computer science theory. It was at this school that I also achieved my Certified Scrum Master certificate, and even worked in my first web development internship. And the best part is - my entire Bachelor's degree ended up costing less than a quarter of what it would have at my local large university.&lt;/p&gt;

&lt;p&gt;Take a look into less traditional methods of learning. You may be surprised at what's out there today!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#myth-5-coding-is-a-young-persons-game"&gt;
  &lt;/a&gt;
  Myth #5: Coding is a young person's game
&lt;/h2&gt;

&lt;p&gt;I want to preface this by saying that unfortunately agism does exist in the tech world today. It shouldn't exist and it's nothing but a detriment to the entire tech society. But that is another topic for another post. My point here is that even if you don't think of yourself as "young," you shouldn't count yourself out of becoming an engineer.&lt;/p&gt;

&lt;p&gt;If I were to guess at what started this whole idea that the older generation can't become developers, I would attribute it to the early days of the big tech boom. When computers started to be commonplace, everyone started carrying tiny computers in their pockets, and the internet was just hitting its stride. At this time the people that were growing up alongside the technology were able to see it as a natural part of life, while at the same time the older generation saw the tech as something new and wildly different than what they were used to. But times have changed. Technology is so prevalent today that it's almost unavoidable to people of any age. This means more exposure, which consequently "levels the playing field" and makes it a lot easier for the older generation to quickly ramp up their skills in technology. &lt;/p&gt;

&lt;p&gt;Nowadays, anyone of any age can get into software development and be just as successful as the 20-something year olds just out of college. I myself didn't even start learning until I had been out of High School for around 8 years and I didn't get my first internship until close to 30 years old - which admittedly isn't &lt;em&gt;old&lt;/em&gt;, but it's definitely not the traditional path. I've also worked with plenty of engineers that are twice my age or more, and many of them make me look like someone who just wrote my first "Hello World" program.&lt;/p&gt;

&lt;p&gt;Age is nothing but a number. Whether you're a fresh graduate not even out of teenage years, or you're looking to switch careers after 30+ years in another industry, you can become a software engineer if that's where you want to be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#myth-6-programmers-are-introverts-that-spend-all-day-in-the-darkness-staring-at-a-screen"&gt;
  &lt;/a&gt;
  Myth #6: Programmers are introverts that spend all day in the darkness staring at a screen
&lt;/h2&gt;

&lt;p&gt;Okay. So this one definitely could be true for some. If you like to be in a dark room while you work and coding is your passion so you spend all day and night doing it, then you do you! But my point here is that this isn't the way it has to be. It's not like you get your first programming job and are suddenly teleported to a dungeon where you can never leave or talk to anyone else. I've actually found that this job can be quite social! &lt;/p&gt;

&lt;p&gt;A lot (almost all) of software development in the professional world involves teamwork in some capacity. Whether it's virtual meetings or working together in person, you will be collaborating with others to get your work done. There's also a good chance you will be interacting with people who aren't developers. A lot of teams will also consist of designers, project managers, sales, and even sometimes clients or stakeholders, so you may be interacting with a lot of different groups of people. Additionally, if you're particularly extroverted, you may find yourself joining the many developers today that go to conferences, teach classes, host podcasts, or in general spend a lot of their time being around others. &lt;/p&gt;

&lt;p&gt;There's also a lot of networking. Networking with others can become vital to a software engineer's career, especially in the early days. Whether that means just having a presence on LinkedIn, or going to meetups and workshops and exchanging information with the people you meet, networking can open up tons of new job opportunities. Think about it. If you're a hiring manager or a recruiter looking for a new Front End dev to join your team, and you recently had a great conversation with someone about how JavaScript really isn't &lt;em&gt;all&lt;/em&gt; that bad, you're probably going to reach out to that person first to see if they are interested! &lt;/p&gt;

&lt;p&gt;So you don't have to be secluded in a corner to be a developer. In fact, it helps if you can manage to have a little bit of a social side to you! That's not to say you can't be a developer as an introvert either. As a fellow shy-guy I can confirm that it's possible. But if you can manage to put yourself out there to meet and talk to people every once in a while, and if you can collaborate well with your team, you'll find a lot of success in this career.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-it-up"&gt;
  &lt;/a&gt;
  Wrapping it up
&lt;/h2&gt;

&lt;p&gt;This post ended up a lot longer than I originally intended, and if you've stuck around until now thank you! My goal with this long-winded list is to prove that anyone can start a career in software development if they really want to. We as a community in the tech world need to put a stop to the gatekeeping and bring down the intimidation factor so that more people can discover what a great career this can be. If you're considering jumping in, give it a shot. And if you have any other things stopping you from getting started that I haven't covered here, give me a shout. I'd be happy to give you some insight from the inside... and most likely end up telling you to try it anyway!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>discuss</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Day 26 of #100daysofcode: Functional Programming and Redux</title>
      <author>Ryan Whelchel</author>
      <pubDate>Wed, 08 Dec 2021 02:19:30 +0000</pubDate>
      <link>https://dev.to/rydwhelchel/day-26-of-100daysofcode-functional-programming-and-redux-if</link>
      <guid>https://dev.to/rydwhelchel/day-26-of-100daysofcode-functional-programming-and-redux-if</guid>
      <description>&lt;p&gt;Hey everybody!&lt;br&gt;
I had a lot going on today, but I dove into Redux and Functional programming! Functional programming was particularly interesting to me; if you have never heard of functional programming before, I highly recommend watching &lt;a href="https://www.youtube.com/watch?v=0if71HOyVjY"&gt;this video&lt;/a&gt; as it is kind of hard to wrap your head around if you come from an object-oriented background. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#functional-programming-tldw"&gt;
  &lt;/a&gt;
  Functional Programming - TL;DW
&lt;/h3&gt;

&lt;p&gt;Functional programming, as I understand it, seeks to make all data objects immutable. Instead of modifying data, it takes data into functions, operates on that data and spits out new data. This may seem to be needlessly complicating things, but it has upsides. The most motivating upside that I learned about is in the case of parallel computing: &lt;/p&gt;

&lt;p&gt;If there is a situation where 2 functions are running on separate threads, you do not have to worry about a situation where one function requires data that the other is operating on. What I mean by this is that the second function will not begin operating until the first function has &lt;em&gt;finished&lt;/em&gt;. You don't have to explicitly tell function 2 to wait until function 1 is done, it simply cannot proceed until it receives the output from function 1. &lt;/p&gt;

&lt;p&gt;The problem that could arise in a different programming paradigm is that function 2 would start operating on the data that function 1 is &lt;strong&gt;still operating on&lt;/strong&gt;. This could cause all kinds of issues. Sure there are ways to get around this, but it seems to be a decent motivation for functional programming.&lt;/p&gt;

&lt;p&gt;I have a very shallow understanding on Functional Programming, so I won't try to explain the mechanics of how it accomplishes the above, but I do think that it helps a lot to understand functional programming if you understand why it's trying to accomplish what is trying to accomplish.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If there are other things which functional programming accomplishes that I have left out, please leave a comment!&lt;/strong&gt; I only started learning about Functional Programming today; this is my attempt to summarize what I have learned!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-this-have-to-do-with-redux"&gt;
  &lt;/a&gt;
  What does this have to do with Redux?
&lt;/h3&gt;

&lt;p&gt;Redux is a state management library. In a way, states in general are a functional programming concept, so it may be easier to explain how states are related.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-this-have-to-do-with-redux-state"&gt;
  &lt;/a&gt;
  What does this have to do with &lt;del&gt;Redux&lt;/del&gt; state?
&lt;/h3&gt;

&lt;p&gt;State is a functional programming concept. Why? You may know that, at least in React, when we initialize a state we initialize the state variable itself but also a &lt;strong&gt;function&lt;/strong&gt; variable to modify that state. This function updates the state for us, but it doesn't directly modify the original state. It takes our change to the state and creates a new state object, which signals the refresh. This methodology is a much easier way to detect changes to objects, which makes deciding what we need to &lt;em&gt;refresh&lt;/em&gt; way easier. &lt;/p&gt;

&lt;p&gt;Since Redux is a state management library, it was designed with functional programming concepts in mind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here is what I worked on today!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A few Leetcode Tree Problems&lt;/li&gt;
&lt;li&gt;A bit of the debugging section of the JS Course on FreeCodeCamp - Currently about 35% of the way through the course!&lt;/li&gt;
&lt;li&gt;Began learning about Redux - I started by reading a little bit about Redux. I learned that it was built on Functional Programming principles, so I jumped to learn more about that&lt;/li&gt;
&lt;li&gt;Began learning about &lt;strong&gt;Functional Programming&lt;/strong&gt; - I am very fascinated by this programming paradigm. Expect more notes about this in the future.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#upcoming"&gt;
  &lt;/a&gt;
  Upcoming
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Continued Leetcode practice and FreeCodeCamp progress&lt;/li&gt;
&lt;li&gt;Continued updates on my learning journey for Redux&lt;/li&gt;
&lt;li&gt;Begin the Study Aid app! (soonTM)&lt;/li&gt;
&lt;li&gt;Possibly continued updates on my learning journey in Functional Programming. This paradigm is very interesting, and I'm curious how people use it in place of object-oriented programming. I have a hard time imagining an organized coding world that is devoid of classes and inheritance!&lt;/li&gt;
&lt;li&gt;Later in the challenge: AWS Deployment, AWS Certification, and Using Docker!?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/"&gt;JS Course - FreeCodeCamp&lt;/a&gt;&lt;br&gt;
&lt;a href="https://redux.js.org/faq"&gt;Redux FAQ (Surprisingly good resource)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=poQXNp9ItL4"&gt;Learn Redux - Programming with Mosh&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=0if71HOyVjY"&gt;Functional Programming in 40 - Russ Olsen with GOTO&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>react</category>
      <category>python</category>
      <category>beginners</category>
    </item>
    <item>
      <title>100 d√≠as de c√≥digo: 35%, recuperando el ritmo.</title>
      <author>Daro</author>
      <pubDate>Wed, 08 Dec 2021 00:18:33 +0000</pubDate>
      <link>https://dev.to/darito/100-dias-de-codigo-35-recuperando-el-ritmo-4f9i</link>
      <guid>https://dev.to/darito/100-dias-de-codigo-35-recuperando-el-ritmo-4f9i</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@adelin_g?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Adelin Grigorescu&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬°Hey hey hey!&lt;/p&gt;

&lt;p&gt;¬øNo les ha pasado que durante algunos d√≠as no logran concentrarse para lograr lo suficiente en los proyectos que les gustar√≠a? Pues eso mismo me hab√≠a pasado los d√≠as anteriores. &lt;/p&gt;

&lt;p&gt;Pero hoy es otro d√≠a, otra historia y por fin logre llevar mi productividad mas all√° de los limites. Comenzar el d√≠a haciendo y no pensando en lo que se tiene que hacer ha sido el primer acierto y es lo que yo les recomendar√≠a. &lt;/p&gt;

&lt;p&gt;Es bueno apreciarse a si mismo y alimentarse de una forma sana para sentirse en las mejores condiciones, si no te gusta prepararte de comer intenta hacer como que tienes que cuidar de alguien mas y ese alguien mas es tu cuerpo.&lt;br&gt;
Puede sonar como que estas al borde de la locura por separarte de tu cuerpo pero te sirve especialmente si tiendes a cuidar mas a otros que a ti.&lt;/p&gt;

&lt;p&gt;Hoy logre bastante asi que comencemos con la secci√≥n principal.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ayer"&gt;
  &lt;/a&gt;
  Ayer:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Me puse manos a la obra para crear una aplicaci√≥n de biblioteca mas completa que b√°sicamente seria un CRUD sin el update. Avance bastante en ella en cuanto a la codificaci√≥n pero aun me falta bastante.&lt;/li&gt;
&lt;li&gt;Practique 15 min de Touch Typing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hoy"&gt;
  &lt;/a&gt;
  Hoy:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Gracias a mi concentraci√≥n logre terminar con el proyecto de la biblioteca y avance hasta el proyecto Tic Tac Toe en The Odin Project.&lt;/li&gt;
&lt;li&gt;Me di cuenta que intentar prever metas semanales con antelaci√≥n puede ser una tarea complicada asi que pens√© en hacer una lista de tareas que vaya actualiz√°ndose en la semana para asi poder cambiar mis prioridades.&lt;/li&gt;
&lt;li&gt;Practique 30 min de Touch Typing.&lt;/li&gt;
&lt;li&gt;Aprend√≠ algo de TypeScript.&lt;/li&gt;
&lt;li&gt;Aprend√≠ sobre como crear funciones fabrica las cuales sirven cuando tienes muchos objetos que tienen caracteristicas especificas y similares y tambi√©n como crear m√≥dulos para proteger la informaci√≥n del alcance global lo cual crea seguridad en los sitios web.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ha sido un d√≠a productivo y estoy muy contento con ello.&lt;br&gt;
Hoy comenzare a hacer la lista de cosas por hacer en la semana la cual es la siguiente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Terminar el proyecto Tic Tac Toe con una interfaz agradable y responsive desing para incorporar en mis proyectos principales.&lt;/li&gt;
&lt;li&gt;Hacer una entrada diferente a 100daysofcode en Dev.&lt;/li&gt;
&lt;li&gt;Obtener informaci√≥n para mi sitio web.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por cierto ya que termine mi proyecto de biblioteca quiero compartirlo con ustedes. Pueden visitarlo &lt;a href="https://darito97.github.io/Biblioteca/"&gt;aqu√≠&lt;/a&gt;. Cualquier recomendaci√≥n pueden hac√©rmela saber.&lt;/p&gt;

&lt;p&gt;Espero que tengan mucho √©xito con sus proyectos y animo con todo.&lt;br&gt;
Adi√≥s mundo!&lt;/p&gt;

</description>
      <category>spanish</category>
      <category>100daysofcode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to create Responsive Movie Website with HTML CSS JavaScript</title>
      <author>Sadee</author>
      <pubDate>Tue, 07 Dec 2021 23:30:08 +0000</pubDate>
      <link>https://dev.to/codewithsadee/responsive-movie-website-with-html-css-javascript-634</link>
      <guid>https://dev.to/codewithsadee/responsive-movie-website-with-html-css-javascript-634</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-ex2BO2DG2s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How to create responsive movie website with html css javascript.&lt;br&gt;
In this video we'll learn how to create a complete responsive movie website using pure css and javascript.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  üìπ Recommended Videos
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;How to use ionicon&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  üîó Essential links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://drive.google.com/file/d/1mxarqg0S7-Rh6yj4E-O9rO5fRc4z1xDR/view?usp=sharing"&gt;All Images&lt;/a&gt;&lt;br&gt;
&lt;a href="https://drive.google.com/file/d/1Lxx19kxyPtqGHdepBy8nY5Mtk4O-Hfu_/view?usp=sharing"&gt;Html Text&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Inter?query=inter"&gt;Font - Inter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ionic.io/ionicons"&gt;Ionicon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/posts/source-code-59649299?utm_medium=clipboard_copy&amp;amp;utm_source=copy_to_clipboard&amp;amp;utm_campaign=postshare"&gt;Source Code&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  üíú Like - Follow &amp;amp; Subscribe Me
&lt;/h3&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
