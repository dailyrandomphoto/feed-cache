<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>MongShare - Share Code</title>
      <author>Rajvir Singh</author>
      <pubDate>Wed, 12 Jan 2022 20:15:18 +0000</pubDate>
      <link>https://dev.to/rajvirsingh1313/mongshare-share-code-3hea</link>
      <guid>https://dev.to/rajvirsingh1313/mongshare-share-code-3hea</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;MongShare helps with sharing your code. Users can share the code with others through a link, and the code would be editable with a password created by the author.&lt;/p&gt;

&lt;p&gt;MongShare uses the MongoDB Atlas as a database and Next.js as a frontend.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/RajvirSingh1313"&gt;
        RajvirSingh1313
      &lt;/a&gt; / &lt;a href="https://github.com/RajvirSingh1313/MongShare"&gt;
        MongShare
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Share Code With MongShare
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/RajvirSingh1313/MongShare./public/Banner.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wjXjUK9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/RajvirSingh1313/MongShare./public/Banner.png"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a2ef46f4aec1799b4366d5dd9e4cc60c250b9a4a1e0a4cea21bae63660b63a25/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e6578742e6a732d3030303030303f7374796c653d666f722d7468652d6261646765266c6f676f3d6e657874646f746a73266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/a2ef46f4aec1799b4366d5dd9e4cc60c250b9a4a1e0a4cea21bae63660b63a25/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e6578742e6a732d3030303030303f7374796c653d666f722d7468652d6261646765266c6f676f3d6e657874646f746a73266c6f676f436f6c6f723d7768697465" alt=""&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/72e92f69f36703548704a9eeda2a9889c2756b5e08f01a9aec6e658c148d014e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6f6e676f44422d3445413934423f7374796c653d666f722d7468652d6261646765266c6f676f3d6d6f6e676f6462266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/72e92f69f36703548704a9eeda2a9889c2756b5e08f01a9aec6e658c148d014e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6f6e676f44422d3445413934423f7374796c653d666f722d7468652d6261646765266c6f676f3d6d6f6e676f6462266c6f676f436f6c6f723d7768697465" alt=""&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145"&gt;&lt;img src="https://camo.githubusercontent.com/93c855ae825c1757f3426f05a05f4949d3b786c5b22d0edb53143a9e8f8499f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d3332333333303f7374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d463744463145" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1&gt;
MongShare&lt;/h1&gt;
&lt;h3&gt;
&lt;b&gt;Sharing Code With MongShare!&lt;/b&gt;
&lt;/h3&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;p&gt;MongShare helps with sharing your code. It is made with MongoDB &amp;amp; Next.js. MongShare is a hackathon project for &lt;a href="https://dev.to/devteam/announcing-the-mongodb-atlas-hackathon-on-dev-4b6m" rel="nofollow"&gt;MongoDB Atlas Hackathon on DEV&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Local Development&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
Fork the repo on GitHub&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
Clone the repo&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;git clone https://github.com/rajvirsingh1313/mongshare
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; mongshare&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
Create a next.config.js file in the root dir&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-smi"&gt;module&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;exports&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;env&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;ATLAS_URI&lt;/span&gt;:
      &lt;span class="pl-s"&gt;"mongodb+srv://:@cluster0.lydaj.mongodb.net/mongshare?retryWrites=true&amp;amp;w=majority"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;DOMAIN&lt;/span&gt;: &lt;span class="pl-s"&gt;"http://localhost:3000"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
Install Dependencies&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm i&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
Run the development server&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm run dev
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;
yarn dev&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Open &lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/RajvirSingh1313/MongShare"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VUeUIO7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzvhqik7f22apw1vweil.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VUeUIO7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzvhqik7f22apw1vweil.png" alt="Image description" width="880" height="429"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8epEjAN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8ety5rnhcqqol8y1z3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8epEjAN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8ety5rnhcqqol8y1z3j.png" alt="Image description" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I want to thanks the open source community for making my life easy. I also want to thanks the Dev.to and MongoDB for hosting this hackathon.&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>Rails 7, Bootstrap 5 and importmaps without nodejs</title>
      <author>Alessandro Rodi</author>
      <pubDate>Wed, 12 Jan 2022 20:01:48 +0000</pubDate>
      <link>https://dev.to/coorasse/rails-7-bootstrap-5-and-importmaps-without-nodejs-4g8</link>
      <guid>https://dev.to/coorasse/rails-7-bootstrap-5-and-importmaps-without-nodejs-4g8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#our-goal-remove-nodejs"&gt;
  &lt;/a&gt;
  Our goal: remove nodejs
&lt;/h2&gt;

&lt;p&gt;As many other people in the Rails community, I started setting up brand new Rails 7 projects, and I need to re-learn, at least partially, how to bundle the assets and distribute them.&lt;/p&gt;

&lt;p&gt;I never fell in love with TailwindCSS, and therefore I usually setup my Rails apps to use Bootstrap as default.&lt;/p&gt;

&lt;p&gt;But what I really like about Rails 7, is the idea of being able to get rid of not only webpack, but of nodejs entirely. The new importmaps feature is really appealing to me and I'd like to use it as long as I don't need to bundle my javascript.&lt;/p&gt;

&lt;p&gt;I have to say that &lt;code&gt;esbuild&lt;/code&gt; does already a pretty cool job compared to &lt;code&gt;webpack&lt;/code&gt; to simplify our lives, and make the process faster, but as long as I don't need bundling, I'd like to not have a package.json file and being dependent on nodejs for my Rails app. &lt;/p&gt;

&lt;p&gt;A pure and simple sprockets + importmaps app with no Foreman, no &lt;code&gt;bin/dev&lt;/code&gt;, no &lt;code&gt;yarn build --watch&lt;/code&gt; stuff.&lt;/p&gt;

&lt;p&gt;Bootstrap is made of two parts: CSS and javascript. So I want to use importmaps for the javascript part and rely on sprockets for the CSS compilation from SCSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rails-default"&gt;
  &lt;/a&gt;
  Rails default
&lt;/h2&gt;

&lt;p&gt;By default, Rails 7 provides a new option &lt;code&gt;--css=bootstrap&lt;/code&gt;, &lt;br&gt;
but with my great surprise, this option adds both &lt;code&gt;jsbundling-rails&lt;/code&gt;, &lt;code&gt;cssbundling-rails&lt;/code&gt;, a &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;esbuild&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not as expected. Not what I want.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#how-to-configure-rails-and-bootstrap-without-nodejs"&gt;
  &lt;/a&gt;
  How to configure Rails and Bootstrap without nodejs
&lt;/h1&gt;

&lt;p&gt;Default is not what I want, but I can still reach the goal and here I'll explain how:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stick with just &lt;code&gt;rails new myapp&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
This will setup exactly the tools I want: &lt;code&gt;sprockets&lt;/code&gt; and &lt;code&gt;importmaps&lt;/code&gt;. It will also setup automatically for me stimulus and turbo, which is great because I use them most of the time anyway.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add &lt;code&gt;bootstrap-rails&lt;/code&gt; gem&lt;/strong&gt; and enable the gem &lt;code&gt;sassc-rails&lt;/code&gt; in the Gemfile. This will allow us to compile bootstrap from SCSS without node.&lt;/p&gt;

&lt;p&gt;You can simply import Bootstrap styles in &lt;code&gt;app/assets/stylesheets/application.scss&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// here your custom bootstrap variables...&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;"bootstrap"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it for the CSS part. Running &lt;code&gt;rails assets:precompile&lt;/code&gt; will generate what you want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For the javascript part&lt;/strong&gt; we need to do three things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Precompile the bootstrap.min.js that comes with the gem, by adding to &lt;code&gt;config/initializers/assets.rb&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;assets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;precompile&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="sx"&gt;%w( bootstrap.min.js popper.js )&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;pin the compiled asset in &lt;code&gt;config/importmap.rb&lt;/code&gt;:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"popper"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s1"&gt;'popper.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;preload: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"bootstrap"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s1"&gt;'bootstrap.min.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;preload: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Include bootstrap in your &lt;code&gt;app/javascript/application.js&lt;/code&gt;:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;popper&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bootstrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I prefer this approach rather than pinning a CDN because we avoid diverging versions of Bootstrap.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is all you need to have Bootstrap fully working on Rails 7 without using node. &lt;/p&gt;

&lt;p&gt;If you like this guide you can &lt;a href="https://twitter.com/coorasse"&gt;follow me on Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
      <category>turbo</category>
      <category>bootstrap</category>
    </item>
    <item>
      <title>Is it worth to learn Python in 2022?</title>
      <author>Hassan Tahir</author>
      <pubDate>Wed, 12 Jan 2022 18:55:19 +0000</pubDate>
      <link>https://dev.to/thehassantahir/is-it-worth-to-learn-python-in-2022-18p1</link>
      <guid>https://dev.to/thehassantahir/is-it-worth-to-learn-python-in-2022-18p1</guid>
      <description>&lt;p&gt;Python has gained a massive amount of attention in the past 5 years. Anyone who is related to the development industry hears the word Python (the first thing that jumps in mind is programming language) instead of a snake. We are in 2022 and we should change the working trends and patterns we were following in the previous year 2021, Why? It helps to innovate and make the mind more productive. This is the reason every year we got 60k search count on python programming language, &lt;strong&gt;is python worth learning in 2022?&lt;/strong&gt; (w.r.t years)&lt;/p&gt;

&lt;p&gt;Here is why you should or should not learn python this year! &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;. Python is a beginner friendly language. It is very simple to understand. Any non tech can learn this language.&lt;br&gt;
&lt;strong&gt;2&lt;/strong&gt;. According to 2021 development market python developers are taking high salaries from 72,000$ - 1,44,000$ per year as comparing with other developers.&lt;br&gt;
&lt;strong&gt;3&lt;/strong&gt;. Python is very popular because of it’s multi-platform integration as well as with other major and minor programming languages.&lt;br&gt;
&lt;strong&gt;4&lt;/strong&gt;. Thousands of Multinational companies and organizations are using python such as Uber, NASA, Instagram, NSA and many more.&lt;br&gt;
&lt;strong&gt;5&lt;/strong&gt;. Python is &lt;a href="https://github.com/python"&gt;open-source&lt;/a&gt; so it has the most powerful and massive frameworks and libraries which are more secure and faster than most of the other languages. Such as, Pandas &amp;amp; Numpy for Data Science and Deep Machine learning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;. Lack of logic in design programs.&lt;br&gt;
&lt;strong&gt;2&lt;/strong&gt;. Slightly slower than other major languages.&lt;br&gt;
&lt;strong&gt;3&lt;/strong&gt;. Python programs do not compile before execution instead under development you have to run it each time.&lt;/p&gt;

&lt;p&gt;As we can see Python don't have any major issues for not eligible to be learned in 2022. I personally suggest every beginner to start learn Python as your basic machine language.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Comment your views &amp;amp;&lt;br&gt;
Follow me on &lt;a href="https://github.com/thehassantahir"&gt;Github&lt;/a&gt; &amp;amp; &lt;a href="https://twitter.com/thehassantahir"&gt;Twitter&lt;/a&gt; and Sponsor me on&lt;/em&gt;&lt;/strong&gt; 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/hassantahir"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lP059cim--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n16ri16f50t2xf348879.png" alt="Patreon Image" width="340" height="190"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What to ask at job interviews when you are being interviewed</title>
      <author>Maurício Linhares</author>
      <pubDate>Wed, 12 Jan 2022 18:42:17 +0000</pubDate>
      <link>https://dev.to/mauriciolinhares/what-to-ask-at-job-interviews-when-you-are-being-interviewed-f4l</link>
      <guid>https://dev.to/mauriciolinhares/what-to-ask-at-job-interviews-when-you-are-being-interviewed-f4l</guid>
      <description>&lt;p&gt;There are many guides on how to ace job interviews, you'll find books, videos, courses on multiple subjects covering every aspect possible, including even prep that is just for specific companies (like checking questions Facebook is currently asking), but we talk very little on how you should also interview the people you're talking to make sure you do want to work at that place. Switching jobs to find that you ended up in a bad work environment on a dead-end team is demoralizing and might affect your future career prospects.&lt;/p&gt;

&lt;p&gt;Most of the questions here assume the people you're talking to will be at least a little bit truthful in their answers. I'd also recommend exercising your network to find friends or friends of friends that work at the place to verify if the answers are accurate or if they're painting a rosy picture to make sure you accept the offer. Most businesses will have &lt;em&gt;some&lt;/em&gt; of the problems we will be discussing next, so it's going to be up to you to decide if you do want to sign up for these issues or not, there are no perfect places, but you should go in being comfortable on what the challenges are going to be. Glassdoor, Blind, and Fishbowl are usually hit and miss, with stuff being, either too rosy or just hell, so I can't say I find them very effective. &lt;/p&gt;

&lt;p&gt;Also, unless you're going for a director-level/decision-making position, don't trick yourself into thinking you're going to change the whole environment and make it bearable, odds are you won't and the energy you'll spend trying to &lt;em&gt;fix&lt;/em&gt; it without having the actual power to do so would be better spent on a job that doesn't require you do pull a Sisyphus every day. The job market is red hot right now, and you should be able to give that bad-looking job a pass. &lt;/p&gt;

&lt;p&gt;Now let's look at a couple of questions you could ask to figure out if it is a good job or a tar pit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-oncall-schedule-like-how-many-incidents-does-the-team-handle-every-week-on-average"&gt;
  &lt;/a&gt;
  What is the on-call schedule like? How many incidents does the team handle every week on average?
&lt;/h2&gt;

&lt;p&gt;In most sane places, the teams that build apps are also responsible for ensuring they're running as expected in production. This means that when something bad happens, someone on the team will be called/paged and get the dreaded &lt;em&gt;PagerDuty alert, you have one incident&lt;/em&gt; phone call. Most of us have been there, and pager pain is very real. Working on a team that is firefighting all the time is the quickest path to burnout you could take as you'll be constantly worried about the next time you'll be fast asleep and the phone is going to ring, destroy your night and the next day.  &lt;/p&gt;

&lt;p&gt;What you're looking for here is a clear on-call schedule with multiple people on rotation and a secondary that also rotates. The schedules should usually be a couple of days long (I'd say a week is generally good enough), with at least two weeks off until you're on call again. Back-to-back on-call schedules are demanding, especially if incidents are frequent because there is very little time you're not worried about incidents.&lt;/p&gt;

&lt;p&gt;How much time does the team spend firefighting or doing unplanned work? If a team spends over 30% of its time just fixing bugs and working through incidents instead of building features, there are deeper issues on the team itself. The root causes here could be lack of investment in reliability, automation, lousy planning, death marches, none of which are a good signs. You could dig deeper here with the people you're talking to as to what is going to be done to bring the team back into a more manageable schedule and lower the amount of toil/bugs/incidents if there's no plan or they think this isn't a problem (&lt;em&gt;it's just how we do work&lt;/em&gt;), it's a &lt;em&gt;pass&lt;/em&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-engineering-onboarding-process-like-what-about-onboarding-on-the-team-itself"&gt;
  &lt;/a&gt;
  What is the engineering onboarding process like? What about onboarding on the team itself?
&lt;/h2&gt;

&lt;p&gt;It might sound like a &lt;em&gt;first world problem&lt;/em&gt; thing, but having a well-defined onboarding process is critical to having employees that start contributing to the bottom line as fast as possible. Businesses that are hiring but have no plan to get the people they're hiring into actually doing the job aren't doing a good job at hiring and might not be doing an excellent job at other places.&lt;/p&gt;

&lt;p&gt;Depending on the company's size, they might not have a general engineering and a specific team onboarding; there could just be one, that's not a problem. What you want to know is what will happen once you join and the expectations. Is there going to be a buddy taking you through the process, someone you can ask questions and get unstuck? How will you get used to the projects you'll be working on? Is there documentation? What are the first things you're going to be working on?&lt;/p&gt;

&lt;p&gt;The expectation here is that they won't just say &lt;em&gt;here's the source code, now figure it out&lt;/em&gt; but that there is some well-defined way for you to go along (preferably with someone else on the team as a pair) to get you used to the tooling, code, development and deployment process. If there is no onboarding process at all, be ready just to be thrown at stuff and be left to fend for yourself and hope for the best. While it's entirely possible to make this work (as I have had to make this work multiple times) I'd rather be at a place that is going to guide and help me get productive faster instead of having to ask &lt;em&gt;please can you help me&lt;/em&gt; to multiple people that might or might not care about helping me out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-long-has-the-person-managing-the-team-been-a-manager"&gt;
  &lt;/a&gt;
  How long has the person managing the team been a manager?
&lt;/h2&gt;

&lt;p&gt;It might sound a bit unfair, but, especially as you get more senior, joining a team in a new company with a manager that does not have much experience managing people is risky. While having a manager with a lot of experience isn't a guarantee that everything will be unicorns and rainbows, a new manager is more likely to lack many skills required to build and lead an effective team. &lt;/p&gt;

&lt;p&gt;I've heard horror stories from friends that got a new job with a manager that had just been promoted after a stellar stint as an Individual Contributor, which led to a lot of clout in the business, but that couldn't manage people at all. Given the new manager's success in his previous career, he was given a lot of leeway on running the team, and most of the criticism would fall on deaf ears, making it hard to move the needle in any direction. This leads to team members not being promoted, not being assigned to important/impactful projects, and not being promoted. &lt;/p&gt;

&lt;p&gt;Being under a bad manager is not only bad for your mental health, but it's also bad for your career as it might stall your professional development and keep you from moving at the pace you expected you'd go. So, beware, joining a team with a newly minted manager carries many risks. Make sure you know what you're signing up for if this is the case. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-vision-for-the-team-what-are-the-important-projects-it-is-taking-on-in-the-next-12-months-what-would-be-my-goalsprojects-if-i-joined"&gt;
  &lt;/a&gt;
  What is the vision for the team? What are the important projects it is taking on in the next 12 months? What would be my goals/projects if I joined?
&lt;/h2&gt;

&lt;p&gt;Here what you're looking for is to make sure the team you're joining is healthy and doing important work for the business. Teams should have large, impactful projects they have planned and are working on, they should have a vision of what the team's job is, and as they're hiring new people, they need to have a reason for why they would be hiring you.&lt;/p&gt;

&lt;p&gt;If the team doesn't have important projects to work on, odds are it might not be an essential part of the business, or the manager hasn't been able to pull important work or doesn't want to do meaningful work. It's not unusual for, in larger companies, there to be teams that are just coasting and delivering small things here and there. If that's what you're looking for, the answers to these questions might give you hints this is it.&lt;/p&gt;

&lt;p&gt;Otherwise, if you want to do impactful and essential work, you want to make sure the folks you're talking to have good answers. They should have a clear vision for what the job is, it can't just be "deliver features", every team is working on some domain-specific work, so it has to be "improve the way warehouses are managed", "deliver code faster to production" (if they're a platform team, for instance). And on that vision, they should also have cool and exciting projects they're working on that have a tangible impact on the business, like building a new database-as-a-service product to capture a growing market. This kind of team allows you to grow into a better professional and offers challenges that will get you more experience and promotions.&lt;/p&gt;

&lt;p&gt;And last but not least, ask why they're hiring a new person and what would be the work you'd be doing, at what level you're expected to deliver. Are you here to lead a new project? Continue an existing project? What are the opportunities available for you to grow? Having good answers for these questions means they've done their homework on why they need to hire someone else, and you'll get a feel of the expectations they're placing on you if you join. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-there-a-career-development-plan-and-what-does-it-look-like"&gt;
  &lt;/a&gt;
  Is there a career development plan, and what does it look like?
&lt;/h2&gt;

&lt;p&gt;You might be in for the love of writing code and stuff, but we all want to be paid and eventually make more money next year than we do right now, and to do so, you have to progress on your career in some way. Ideally, you want the place to have a ladder with multiple levels and well-defined expectations for what you should be doing to get to the next level. Not knowing what you have to do to be promoted leaves you at the whims of your manager, and that is going to be the luck of the draw, the manager might work to get you promoted or not, taking most of the possibility of you influencing this out of your hands.&lt;/p&gt;

&lt;p&gt;Having a known set of activities you have to attain to move up allows you to plan your work accordingly, ticking the boxes that need to be ticked instead of just randomly doing stuff and hoping for the best. That also allows you to decide the crucial pieces of work that need to be done and focus on them instead of over-engineering or investing too much time on stuff that won't matter that much for your career. This gives you some power to decide your path instead of leaving it all in someone else's hands. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-selfdevelopment-benefits-provided"&gt;
  &lt;/a&gt;
  What are the self-development benefits provided?
&lt;/h2&gt;

&lt;p&gt;No tech company survives with a workforce that doesn't improve, so most of them will offer a stipend or access to education related to the work. You want to be at a place that will buy you that book you need for some new project you're working on or pay for a course or event you feel like will be essential for your productivity at work.&lt;/p&gt;

&lt;p&gt;Places that require you to invest in yourself even when your productivity improvement goes mainly to the business aren't the best place to stay.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pick-your-poison"&gt;
  &lt;/a&gt;
  Pick your poison
&lt;/h2&gt;

&lt;p&gt;No place will ever be the perfect workplace; you're going to find issues, problems, walls that can't be breached, and people that can't be reasoned with; still, getting more information allows you to make a better decision when accepting a job or not. You should always ask as many questions as you can about the company, the business, the team, and the people surrounding the team to ensure that it is the place you want to work. Don't forget your job is most likely the single thing you're going to spend most of your time in for a long while. You have to make sure this time is worth it.&lt;/p&gt;

</description>
      <category>career</category>
      <category>motivation</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Project : Coin Flipper &amp; Color Boxes | Day 9</title>
      <author>Web.Developer.io</author>
      <pubDate>Wed, 12 Jan 2022 18:14:52 +0000</pubDate>
      <link>https://dev.to/developerioweb/coin-flipper-color-boxes-day-9-4h3</link>
      <guid>https://dev.to/developerioweb/coin-flipper-color-boxes-day-9-4h3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#coin-flipper"&gt;
  &lt;/a&gt;
  Coin Flipper
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;create a coin flipping counter.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The user should be able to click on a button to flip a coin. Every time the user clicks, the coin gets flipped again. The app should also keep track of how many times heads and tails have shown up.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before building anything, &lt;em&gt;think about the structure of your React app.&lt;/em&gt; Don’t build this application with a single component: think about how to break your app up into at least two separate components!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s some inspiration:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vceSwUzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njleaiko6hha3l7jfhm8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vceSwUzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njleaiko6hha3l7jfhm8.gif" alt="Coin Flipper" width="880" height="224"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you’d like, get creative and come up with your own coin faces! If you want to use the same coin as I did, you can find the images here:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Heads:”&lt;a href="https://tinyurl.com/react-coin-heads-jpg"&gt;https://tinyurl.com/react-coin-heads-jpg&lt;/a&gt;”&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tails: “&lt;a href="https://tinyurl.com/react-coin-tails-jpg"&gt;https://tinyurl.com/react-coin-tails-jpg&lt;/a&gt;”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt; 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Developer-io-web/Coin-Flipper"&gt;https://github.com/Developer-io-web/Coin-Flipper&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#color-boxes"&gt;
  &lt;/a&gt;
  Color Boxes
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;For this part, you should show a series of 16 boxes (a box is just square div with a background color).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initially, each box should have a background color chosen from a random list of colors.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When you click any box:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;it should change its color to a different random color.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here’s some inspiration:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YksQ-1MH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egpyox2jua7bjayk62ly.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YksQ-1MH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egpyox2jua7bjayk62ly.gif" alt="React Project" width="640" height="298"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt; 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Developer-io-web/Color-Boxes"&gt;https://github.com/Developer-io-web/Color-Boxes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding 😄!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>We created an online version of the social Mafia game for The MongoDB Atlas Hackathon!</title>
      <author>that-one-arab</author>
      <pubDate>Wed, 12 Jan 2022 18:13:27 +0000</pubDate>
      <link>https://dev.to/thatonearab/we-created-an-online-version-of-the-social-mafia-game-for-the-mongodb-atlas-hackathon-gja</link>
      <guid>https://dev.to/thatonearab/we-created-an-online-version-of-the-social-mafia-game-for-the-mongodb-atlas-hackathon-gja</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;I have always been a huge fan of the Mafia game, and it's one of my favourite games to play with family and friends.&lt;br&gt;
Usually we play in a 5 or 6 players setting, that means that one player needs to be the game master so they can manage&lt;br&gt;
and coordinate the game for the other players.&lt;br&gt;
One day I got an idea, why not make the whole process automated, without the need for a game master, so the extra player could join in the game?&lt;br&gt;
And so we did!&lt;br&gt;
Let me introduce you to Mafia, the online multiplayer Mafia based game. Built using React, Node.js, Express, socket.io and MongoDB!&lt;br&gt;
One player creates a room and the other players can join the same room, after the agreed on amount of players join the game would start and the rest is automated for you to experience the best Mafia game!&lt;br&gt;
It features a total of 11 roles, with 7 being Town roles, and 4 being Mafia roles. An algorithm assigns teams and roles automatically by detecting the amount of players, while&lt;br&gt;
still making sure the roles and teams assignments are random every game&lt;br&gt;
The game manages the day discussions, voting and night cycles for you, and gives you feedback on the actions you choose.&lt;br&gt;
The minimum players limit is 4 and while there is no max limit, we recommend 16 as to not experience issues with the game's server 🥵.&lt;br&gt;
The game is mobile-first responsive to ensure a solid and error-free experience on portable devices.&lt;br&gt;
What are you waiting for? Get some friends, then start playing immediately by &lt;a href="//projects.b2b-iys.muhammed-aldulaimi.com"&gt;visiting this link!&lt;/a&gt; 😄&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/that-one-arab/mafia-game"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W0u-fBZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwi42viwntlxleopwxx0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W0u-fBZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwi42viwntlxleopwxx0.png" alt="Main Menu" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vHVWhpC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onjyg4feqn2me0dmurh2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vHVWhpC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onjyg4feqn2me0dmurh2.png" alt="Create Game" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yps-nSkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m15l64nkanqmgykv3orx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yps-nSkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m15l64nkanqmgykv3orx.png" alt="Lobby" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6JjOXND7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsv5nwbj3c7hbywc9k8p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6JjOXND7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsv5nwbj3c7hbywc9k8p.png" alt="Mafia Killed" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rcHMvPbD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v1ml32wfwyxpi627yk4n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rcHMvPbD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v1ml32wfwyxpi627yk4n.png" alt="Player died" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NwIKAwpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htsrow5paee6pmhvr4vq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NwIKAwpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htsrow5paee6pmhvr4vq.png" alt="Results" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stack"&gt;
  &lt;/a&gt;
  Stack:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://reactjs.org/"&gt;ReactJS&lt;/a&gt; - A frontend library/framework for building UI&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://nodejs.org/en/"&gt;NodeJS&lt;/a&gt; - A javascript runtime environment&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://expressjs.com/"&gt;ExpressJS&lt;/a&gt; - A back end web application framework for Node.js&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://socket.io/"&gt;SocketIO&lt;/a&gt; - a library that enables real-time, bidirectional and event-based communication between the browser and the server&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt; - cross-platform document-oriented database&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#collaborators"&gt;
  &lt;/a&gt;
  Collaborators:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/awsnafea"&gt;Aws Nafea&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>Material ui makes the code too crowded. Do you have any good strategies to make the code cleaner? </title>
      <author>ivkeMilioner</author>
      <pubDate>Wed, 12 Jan 2022 18:12:16 +0000</pubDate>
      <link>https://dev.to/ivkemilioner/material-ui-makes-the-code-too-crowded-do-you-have-any-good-strategies-to-make-the-code-cleaner-34m6</link>
      <guid>https://dev.to/ivkemilioner/material-ui-makes-the-code-too-crowded-do-you-have-any-good-strategies-to-make-the-code-cleaner-34m6</guid>
      <description></description>
    </item>
    <item>
      <title>Plant Monitor - MongoDB Atlas Hackathon Submission</title>
      <author>Souvik Biswas</author>
      <pubDate>Wed, 12 Jan 2022 17:58:56 +0000</pubDate>
      <link>https://dev.to/sbis04/plant-monitor-mongodb-atlas-hackathon-submission-34j0</link>
      <guid>https://dev.to/sbis04/plant-monitor-mongodb-atlas-hackathon-submission-34j0</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vGCJaMlH0_A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Plant Monitor&lt;/strong&gt; is an IoT-based project for monitoring plant health with ease. The projects consists of three parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#iot-sensors"&gt;IoT: Sensors&lt;/a&gt; (for monitoring plant data)&lt;/li&gt;
&lt;li&gt;
&lt;a href="#database-mongodb"&gt;Database: MongoDB&lt;/a&gt; (Atlas, Realm and Chart)&lt;/li&gt;
&lt;li&gt;
&lt;a href="#mobile-app-flutter"&gt;Cross platform mobile app: Flutter&lt;/a&gt; (for getting realtime plant data)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Action Star&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;The code for both the app and the IoT part is present in the following GitHub repo:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sbis04"&gt;
        sbis04
      &lt;/a&gt; / &lt;a href="https://github.com/sbis04/plant-monitor"&gt;
        plant-monitor
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Plant monitoring system using IoT, MongoDB, and Flutter
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Plant Monitor&lt;/h1&gt;
&lt;p&gt;IoT based plant monitoring system which is connected to MongoDB. This is a Flutter app to display the realtime data from the sensors attached to the plant on a mobile device.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;Copyright 2022 Souvik Biswas&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sbis04/plant-monitor"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#project-description"&gt;
  &lt;/a&gt;
  Project Description
&lt;/h2&gt;

&lt;p&gt;A detailed description of all the three parts of this project is present below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iot-sensors"&gt;
  &lt;/a&gt;
  IoT: Sensors
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IY03J5vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0tzyl4ae1m6hmjx2fpni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IY03J5vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0tzyl4ae1m6hmjx2fpni.png" alt="Hardware sensors" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ESP32&lt;/strong&gt; module is used for collecting data, processing and uploading to the MongoDB database. It is a low powered microcontroller integrated with WiFi and Bluetooth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DHT11&lt;/strong&gt; sensor is used for measuring raw temperate and humidity data from the surroundings of the plant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LDR&lt;/strong&gt; is used for calculating the light intensity that the plant is receiving.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Soil Moisture&lt;/strong&gt; sensor module is used to measure the moisture or the water level of the soil. The sensor includes a potentiometer to set the desired moisture threshold.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database-mongodb"&gt;
  &lt;/a&gt;
  Database: MongoDB
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QIrFilU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tils8x032t1dbq4wvhe0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QIrFilU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tils8x032t1dbq4wvhe0.png" alt="MongoDB Atlas" width="880" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MongoDB Atlas provides cloud database service using AWS, Azure, and Google Cloud. It also has various automation tools for performing various backend functionalities and comes with visualization tools. The services that are used in this project are described below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Atlas&lt;/strong&gt; is used as the main cloud database for storing the sensor readings along with timestamps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sVuTD40q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmlkn99o13e8sds51kk7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sVuTD40q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmlkn99o13e8sds51kk7.png" alt="Atlas" width="880" height="379"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Realm Function&lt;/strong&gt; is defined to easily store the sensor data from the ESP32 module. A &lt;strong&gt;HTTP Endpoint&lt;/strong&gt; is created to access the MongoDB database from the ESP32.&lt;/p&gt;

&lt;p&gt;The following function is used for storing the sensor data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;atlas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongodb-atlas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;coll&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;atlas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plantdata&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;readings&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;EJSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;coll&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error inserting doc: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Charts&lt;/strong&gt; are used to visualize the sensor readings directly inside the MongoDB web app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9_thef5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5da2rb8bgepbk9jfa1j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9_thef5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5da2rb8bgepbk9jfa1j.png" alt="Charts" width="880" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this project I have created four charts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Plant Light&lt;/strong&gt; (%): Amount of light intensity plant is receiving&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plant Humidity&lt;/strong&gt; (%): Humidity around the plant&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plant Moisture&lt;/strong&gt; (%): Amount of water present in the soil &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plant Temperature&lt;/strong&gt; (°C): Current temperature around the plant&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mobile-app-flutter"&gt;
  &lt;/a&gt;
  Mobile app: Flutter
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FA6RTsxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31ynnfmul2dvjoq6mrc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FA6RTsxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31ynnfmul2dvjoq6mrc8.png" alt="Flutter app" width="880" height="599"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;To use the Realm data inside the Flutter application I have created a modified version of the &lt;a href="https://pub.dev/packages/flutter_mongodb_realm/versions/2.0.0-nullsafety.0"&gt;flutter_mongodb_realm&lt;/a&gt; plugin to support Dart null safety and run it on the latest version of the Flutter SDK.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.atlas.mongodb.com/getting-started/"&gt;MongoDB Atlas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/"&gt;MongoDB Realm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/charts/"&gt;MongoDB Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/endpoints"&gt;Realm HTTPS Endpoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dev/packages/flutter_mongodb_realm/versions/2.0.0-nullsafety.0"&gt;flutter_mongodb_realm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html"&gt;ESP32 Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>atlashackathon</category>
      <category>flutter</category>
      <category>iot</category>
      <category>esp32</category>
    </item>
    <item>
      <title>Easiest way to create a serverless backend in AWS using UI</title>
      <author>Pedram Hamidehkhan</author>
      <pubDate>Wed, 12 Jan 2022 17:30:39 +0000</pubDate>
      <link>https://dev.to/pedramha/easiest-way-to-create-a-serverless-backend-in-aws-using-ui-hpk</link>
      <guid>https://dev.to/pedramha/easiest-way-to-create-a-serverless-backend-in-aws-using-ui-hpk</guid>
      <description>&lt;p&gt;I've recently discovered a new way to create serverless backend in AWS using the GUI. Of course, creating lambda functions and dynamodb tables through the UI isn't really difficult. The main point is to get everything as Code at the end. This is a really long awaited feature in aws, which is finally being delivered. Now you can configure your infrastructure through the AWS console, and then export it as code. You can use CDK or SAM as the export target. A similar feature has been offered by azure (exporting ARM templates), but it is great to see AWS is offering this feature.&lt;/p&gt;

&lt;p&gt;As opposed to previous posts, in this one we only work with the GUI (AWS Console).&lt;/p&gt;

&lt;p&gt;So after logging in to the aws console, go to Lambda section and click on Applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aSrMy_n8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8lvla7p6njtlg3kgwlx8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aSrMy_n8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8lvla7p6njtlg3kgwlx8.png" alt="Image description" width="880" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that you see the following options:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KnX1TC2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hcurr4ipepl147n43ap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnX1TC2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hcurr4ipepl147n43ap.png" alt="Image description" width="880" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, you can not do everything using this method, but you have quite a few options.&lt;br&gt;
We go ahead and create a Serverless Backend API. This will generate a new API Gateway, a few Lambda Functions and a DynamoDB Table.&lt;br&gt;
Please note that at this moment only Node.js 14 is supported. It is also worth mentionning that the generated code can be exported to github or to aws code commit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AV3MsnE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4v6yrodu23fii2fj7um2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AV3MsnE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4v6yrodu23fii2fj7um2.png" alt="Image description" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So go ahead and click on next to go to the page where you can specify your application name, github/codecommit repository and whether you want the export to be SAM or CDK. If you want to export to github, you need to make a connection between your aws account and github. Click on "Connect with CodeStar Connections". In the popup window choose a name fo the connection and click "connect to github". After that a pop-up window will appear, asking you for your credentials. After entering your credentials your connection is there and you can go ahead and click on "create" on the bottom of the page. &lt;/p&gt;

&lt;p&gt;And that is IT! it takes a few minutes for all the resources to be created and for the code to be available in github. The cherry on top is, that using this method you already get a functioning CICD pipeline! As a matter of fact, aws configures code Pipeline and CodeBuild and connects them to your github repository for you. So every time you make a change and push it to github, the change will be automatically deployed to aws.&lt;/p&gt;

&lt;p&gt;It might be a bit difficult to follow using only text, so I went ahead and created a vide, which hopefully will be easier to follow.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Youtube: https://youtu.be/z8lDx2l7f0w
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;That is it. Thank you very much for reading this post.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>iac</category>
      <category>cdk</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>6 Useful Python Tricks</title>
      <author>arunkc</author>
      <pubDate>Wed, 12 Jan 2022 17:25:40 +0000</pubDate>
      <link>https://dev.to/arunkc/6-useful-python-tricks-502o</link>
      <guid>https://dev.to/arunkc/6-useful-python-tricks-502o</guid>
      <description>&lt;p&gt;Hey folks 👋, welcome back to another post!!&lt;br&gt;
&lt;a href="https://i.giphy.com/media/XD9o33QG9BoMis7iM4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/XD9o33QG9BoMis7iM4/giphy.gif" alt="welcome" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me introduce myself to those who don't know me, I'm Arun, a Data Engineer and Web3 fanatic. And for the ones who know me, thank you so much for the support 🙌 and love 💜&lt;/p&gt;

&lt;p&gt;In this article I will be sharing some of the tips and tricks I usually use while coding in Python. As a developer we should be writing efficient code that's clean, easy to read and debug, and maintainable.&lt;/p&gt;

&lt;p&gt;The tricks that I will be sharing in this article will help you achieve the ultimate goal of writing clean and efficient code. So without any ado lets jump into it!!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-executing-string-as-a-code"&gt;
  &lt;/a&gt;
  1. Executing string as a code
&lt;/h2&gt;

&lt;p&gt;exec() function is used for the dynamic execution of Python code. It can take a block of code containing Python statements like loops, class, function/method definitions and even try/except block. &lt;/p&gt;

&lt;p&gt;This function doesn’t return anything but you can reuse the variables used in the string as shown in the example below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;code_as_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'''
a = 1
b = 2
return_value = a + b
'''&lt;/span&gt;

&lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code_as_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;return_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#using return_value variable that's defined inside the string
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-arguments-packing"&gt;
  &lt;/a&gt;
  2. Arguments Packing
&lt;/h2&gt;

&lt;p&gt;Argument unpacking is very commonly used in Python. You must have seen *args and **kwargs in some functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;#1
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;#3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-f-string"&gt;
  &lt;/a&gt;
  3. F String
&lt;/h2&gt;

&lt;p&gt;It is a common practice to add variables inside strings. F strings are by far the coolest way of doing it. &lt;/p&gt;

&lt;p&gt;Lets first see how we will be performing the operation with the usual format function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Luffy'&lt;/span&gt;
&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'19'&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{} is {} years old"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Luffy is 19 years old
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We specify the values that go inside the curly braces by using the format function. Now F string allow us to specify the variables inside the string itself. Cool isn't it?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; years old"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Luffy is 19 years old
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-swapping-variables"&gt;
  &lt;/a&gt;
  4. Swapping variables
&lt;/h2&gt;

&lt;p&gt;Python have an easier way for swapping without using any temporary variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 20, 10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-reversing-a-list"&gt;
  &lt;/a&gt;
  5. Reversing a list
&lt;/h2&gt;

&lt;p&gt;We can easily reverse a list using reverse() function or slicing technique&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;list1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;list2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;list1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# [4, 3, 2, 1]
&lt;/span&gt;
&lt;span class="n"&gt;list3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list2&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# [8, 7, 6, 5]
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One thing to keep in mind is that reverse() will reverse the original list itself unlike the slicing technique.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-using-generator-inside-a-function"&gt;
  &lt;/a&gt;
  6. Using generator inside a function
&lt;/h2&gt;

&lt;p&gt;We can use generators directly inside a function to writer shorter and cleaner code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="c1"&gt;# 45
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So now we have covered 6 simple yet highly practical tricks that you can use. At a glance these are small changes, but small improvements added up always gives magical results. You will eventually be writing code that is more efficient, easier to read and debug, and more maintainable as you find more practical tricks like these. &lt;/p&gt;

&lt;p&gt;I hope you enjoyed this article. If you did show some love 💜 by liking 👍, and sharing 🔃 this article in your socials. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/1xucXbDnMIYkU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/1xucXbDnMIYkU/giphy.gif" alt="bye bye" width="335" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will be back with more useful articles!! &lt;/p&gt;

&lt;p&gt;Do not hesitate to share your feedback. I am on Twitter &lt;a href="https://twitter.com/arunkc97"&gt;@arunkc97&lt;/a&gt; and LinkedIn &lt;a href="https://www.linkedin.com/in/arun-kc/"&gt;arun-kc&lt;/a&gt;. Give a follow and support!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  💜 Thank you for reading 💜
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#like-follow-share"&gt;
  &lt;/a&gt;
  🌏 Like | Follow | Share 🌏
&lt;/h2&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Figma for Developers </title>
      <author>Kathryn Grayson Nanz</author>
      <pubDate>Wed, 12 Jan 2022 17:01:58 +0000</pubDate>
      <link>https://dev.to/kathryngrayson/figma-for-developers-6op</link>
      <guid>https://dev.to/kathryngrayson/figma-for-developers-6op</guid>
      <description>&lt;p&gt;If you're a developer who works with designers, you're already familiar with the infamous "handoff" – that point in the workflow when you start turning wireframes and mockups into code. Even if you're not personally familiar with the process, it's probably unsurprising to hear that this can be a real pain point. This pain can be lessened, however, when both sides have an understanding of what the other will be looking for in the handoff process. &lt;/p&gt;

&lt;p&gt;Designers are expected to have a pretty thorough understanding of the front-end web: HTML elements, the CSS box model, how responsive resizing works, component-based structure, etc. And yet, when we flip the script, developers are rarely expected to have an understanding of design basics – what's up with that? &lt;/p&gt;

&lt;p&gt;Not to mention, &lt;strong&gt;Figma Kits&lt;/strong&gt; are becoming a more popular offering for teams using a third-party component library. For example, this &lt;a href="https://www.telerik.com/figma-kits"&gt;Figma Kit from KendoUI&lt;/a&gt; which offers all their components, broken down into base elements and ready for customization in Figma. When you use one of these, you get the benefit of being &lt;em&gt;perfectly&lt;/em&gt; synced up with your designers...but, to make fullest use of a tool like that, you'll want to know your way around Figma – at least a little.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Teams work better and create better products when both parties have a high level understanding of each others' tools and priorities.&lt;/strong&gt; Not to mention all the ways having access to the design source files can make your own job easier. With that in mind, I'd love to introduce my developer friends to &lt;a href="https://www.figma.com/"&gt;&lt;strong&gt;Figma&lt;/strong&gt;&lt;/a&gt;, one of the most popular and widely-used UI design tools. It's free for individual use, so I'd encourage you to go make an account and start playing around! It's the best way to learn. &lt;/p&gt;

&lt;p&gt;Like any specialized software, a Figma file can be a little overwhelming to navigate if you're not familiar with it. So let's start from the top and take a look at the the basics, along with the Figma features that will be most useful for developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#figma-file-organization"&gt;
  &lt;/a&gt;
  Figma File Organization
&lt;/h2&gt;

&lt;p&gt;Figma files are organized by &lt;strong&gt;Pages&lt;/strong&gt; (think screens of your application), which each contain &lt;strong&gt;Frames&lt;/strong&gt; (subpages, often used to organize mockups of Pages in various user interaction states). Each Frame is made up of &lt;strong&gt;Elements&lt;/strong&gt; – shapes, text, vectors, etc. Elements (or groups of Elements) can be saved as reusable &lt;strong&gt;Components&lt;/strong&gt;. Elements are customized with &lt;strong&gt;Styles&lt;/strong&gt;, like colors or fonts. Styles (or groups of Styles) can be saved as &lt;strong&gt;Design Tokens&lt;/strong&gt; and organized into shareable &lt;strong&gt;Libraries&lt;/strong&gt; for easy reuse. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPfzmm0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t34r75ff2wi1xv1y9rbc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPfzmm0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t34r75ff2wi1xv1y9rbc.png" alt="Figma Design home screen" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-oriented"&gt;
  &lt;/a&gt;
  Getting Oriented
&lt;/h2&gt;

&lt;p&gt;When you first open a Figma file, this is what you'll see: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;center panel&lt;/strong&gt; shows the current Page contents. Clicking on any Element will select it, in both the left and right sidebars.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;left sidebar&lt;/strong&gt; is where you'll find the document structure, organized into a nested and layered view.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;right sidebar&lt;/strong&gt; has three main sections – &lt;strong&gt;Design, Prototype,&lt;/strong&gt; and &lt;strong&gt;Inspect&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Design&lt;/strong&gt; allows the designer to adjust the Styles on each Element. The contents of this tab will change based on which Element is selected (colors, borders, etc. for shapes, font choices, sizes, etc. for text).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Prototype&lt;/strong&gt; allows the designer to hook all the Frames together into a clickable prototype.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Inspect&lt;/strong&gt; summarizes the selected content into CSS properties and code.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q81NfBXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ug6vh5f720540uv5bmf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q81NfBXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ug6vh5f720540uv5bmf.png" alt="Figma Prototype Screen" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why Should Developers Care?&lt;/strong&gt; &lt;br&gt;
The Prototype tool is a great way to do user testing and validate ideas before devs write a single line of code. This not only saves dev time by allowing designers to make adjustments to the UI before the development phase (and what's not to love about that?), but user testing at this stage &lt;em&gt;also&lt;/em&gt; offers devs the opportunity to sit down with a designer and a user before they start building. When devs can see user motivations and pain points happening in real time &lt;em&gt;and&lt;/em&gt; be involved in user conversations early in the process, it makes for a much more intuitive and cohesive product. This helps shift the development cycle from &lt;strong&gt;reactive&lt;/strong&gt; ("We have to fix this thing we got a lot of negative feedback about") to &lt;strong&gt;proactive&lt;/strong&gt; ("We saw during testing that users struggled with this task, so let's put extra attention into streamlining it"). Not to mention, just being able to explore the prototype whenever you like means you never have to wonder "Wait, what's supposed to happen when they click this button?"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to take a closer look at the details of a mockup, you can turn on the &lt;strong&gt;Grids&lt;/strong&gt; with &lt;strong&gt;Ctrl+G,&lt;/strong&gt; which will help you get a feel for the spacing and structure of what you're building. You can also toggle on &lt;strong&gt;Rulers&lt;/strong&gt; with &lt;strong&gt;Shift+R,&lt;/strong&gt; and show &lt;strong&gt;spacing values between elements&lt;/strong&gt; by selecting the Element and &lt;strong&gt;holding down the Option key while you hover&lt;/strong&gt; over the items around it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exporting-assets"&gt;
  &lt;/a&gt;
  Exporting Assets
&lt;/h2&gt;

&lt;p&gt;Alright, so you've explored the file and you feel like you've got a solid understanding of what needs to be built and why. Time to start writing some code. Good news – Figma also makes this easier! &lt;/p&gt;

&lt;p&gt;For defining your high-level styles, you'll want the contents of the Libraries – those Design Tokens are the recurring CSS values that you'll want to turn into variables and/or assign to properties in your global stylesheet. If you select the highest level Page from the left-hand sidebar, the Design Tokens will appear in the right-hand sidebar. You can click on the knobs icon of each one to inspect it and see all the details you'll need to recreate it in your CSS files. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aLcMhmi2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts7tbeetrla82k43u9s3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aLcMhmi2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts7tbeetrla82k43u9s3.png" alt="A Figma Design Token" width="880" height="647"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Unfortunately, there's no native way in Figma for you to export those Libraries...fortunately, there are a handful of third-party Figma plugins that you can add to do it for you! My recommendation is &lt;strong&gt;&lt;a href="https://www.telerik.com/unite-ux"&gt;Unite UX&lt;/a&gt;&lt;/strong&gt;, which really makes it a piece of cake. If you download &lt;strong&gt;&lt;a href="https://www.figma.com/community/plugin/969582819918741496/Unite-UX"&gt;the Figma plugin&lt;/a&gt;&lt;/strong&gt;, you can export all the data from the Figma file into Unite UX, check the design against your code, and then export your final styling files from Unite UX. That Unite UX export package will include a ton of useful SASS files (one of which being '_tokens.scss') that you can add directly to your project. Boom, done. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why Should Developers Care?&lt;/strong&gt; &lt;br&gt;
No more copying and pasting styles! No more trying to come up with unique variable names, only to find out the design team is calling the same thing something completely different! No more trying to match padding values just by staring back and forth between some exported PDF and your browser until they start to look similar! Whew, I'm exhausted just writing all that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once you get past the high-level styles and into the nitty-gritty, that's where the Inspect tool in Figma's right sidebar is going to be your new best friend. Much like the inspect tool in every major browser, Inspect lets you drill down on a single Element and get all the details – helpfully formatted into CSS properties. You can get this info either as a list of properties, or as automatically generated code, both of which have quick copy options. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SchNRok6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnvklpvbe94q7wma9ppu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SchNRok6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnvklpvbe94q7wma9ppu.png" alt="The Figma Inspect tool" width="783" height="629"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why Should Developers Care?&lt;/strong&gt; &lt;br&gt;
The Inspect tool is where Figma really shines for devs, by summarizing styles into CSS properties and even code snippets! As always, it's not wise to blindly copy and paste machine-generated code, but this is super useful as a jumping off point to tweak and adjust. Leaps and bounds better than starting from scratch, using some kind of color-picker tool, or (&lt;em&gt;shudder&lt;/em&gt;) attempting to match values by eye.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally, if there are any images or custom icons in the mockup, you'll want those exported as well. Ideally, your designers will have marked the assets you need as &lt;strong&gt;Exportable&lt;/strong&gt; – if this is the case, then you can select the Page or Frame that you want to export items from, open the &lt;strong&gt;Export Panel&lt;/strong&gt; with &lt;strong&gt;Cmd+Shift+E,&lt;/strong&gt; and export everything that they've marked from one place. If not, you'll have to export assets one at a time. Select whatever you want to export and scroll down in the right sidebar until you see the &lt;strong&gt;Export&lt;/strong&gt; section. There, you can customize your size and export file type (PNG, SVG, JPG, or PDF), and click the Export button right below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dItw7COU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/moks1eb1nj61n0dp626z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dItw7COU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/moks1eb1nj61n0dp626z.png" alt="The Figma Export tool" width="516" height="280"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why Should Developers Care?&lt;/strong&gt; &lt;br&gt;
How many times have you had to put a project on hold in order to DM designers (who are probably busy with something else) and ask them to send you the assets you need? And then when you finally get those assets, you discover that they're not high enough resolution, or you're still missing something, or they've been exported as JPGs instead of...well, literally &lt;em&gt;anything&lt;/em&gt; else? Forget the back and forth, and instead feel confident getting what you need, when you need it, straight from the source files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#ease-the-pain-of-the-handoff"&gt;
  &lt;/a&gt;
  Ease the pain of the handoff
&lt;/h2&gt;

&lt;p&gt;The design / dev handoff doesn't have to be a pain point if both groups are willing to meet each other halfway. There are plenty of great products that have taken strides towards bridging this gap, but at the end of the day, even the best tool is only useful if you have a contextual understanding of what you're doing with it. You don't need to have a deep understanding of design concepts to benefit from getting comfortable with Figma. When developers are empowered to explore and work with the actual design source files, everybody wins!&lt;/p&gt;

</description>
      <category>ux</category>
      <category>ui</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>DragonFly - real time entity sentiment analysis </title>
      <author>ilyocoris</author>
      <pubDate>Wed, 12 Jan 2022 16:57:01 +0000</pubDate>
      <link>https://dev.to/ilyocoris/dragonfly-real-time-entity-sentiment-analysis-4616</link>
      <guid>https://dev.to/ilyocoris/dragonfly-real-time-entity-sentiment-analysis-4616</guid>
      <description>&lt;h3&gt;
  &lt;a href="#foreword"&gt;
  &lt;/a&gt;
  Foreword
&lt;/h3&gt;

&lt;p&gt;I despise trading, whether for stock or crypto. Political manipulation I can see it is morally dubious but I do not care so much about. With that out of the way let"s build Dragonfly! A tool to get real-time sentiment analysis on entities (stocks, coins, political parties) from scraped chunks of text. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;The Dragonfly buzzes many riverbeds across the world. The Human will marvel at their flight, their colours, and see the creation of a God that gifts us Beauty in unsuspecting creatures.&lt;/p&gt;

&lt;p&gt;But is the Dragonfly a Demon. Mid-flight will capture flies to devour while still alive. Their big glossy eyes have a peripheral view off all, that is under the wings. The Dragonfly Sees, the Dragonfly Hunts. Lean and pretty.&lt;/p&gt;

&lt;p&gt;This project tries to give an infrastructure for real-time monitoring of websites on any domain where it is valued to know an opinion regarding an entity. In the basic example submitted to this hackathon, the system is built to monitor the sentiment regarding stock companies on subreddits and generate a timeline of events, those are, positive or negative comments on a certain entity.&lt;/p&gt;

&lt;p&gt;The focus of the project is flexibility, wrapping all computationally intensive and domain-dependent elements (scrapers for websites or ML) in grpc microservices, that get called by consumers to populate an event driven architecture (some Kafka topics) that ends up dumping curated events to a MongoDB Time Series. This time series can then be the backbone for dashboards or opinion triggers build on top of it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZSe0DGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwskp0frjuax6u3hc0ij.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZSe0DGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwskp0frjuax6u3hc0ij.png" alt="Architecture overview" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The MongoDB Time Series events collection is thought to be a historical archive of heterogenous events (sentiment of twitter/reddit comments on a company/crypto/party and the market fluctuations of the stock/coin or political polls). Both the easy-to-scale nature of the grpc micro-services and the asynchronous capabilities of kafka topics, backed by the consistency of MongoDB, build towards a real-time opinion temperature of an entity in this fast-moving internet, where a subreddit or telegram can x900% a crypto in hours or a twitter influencer can cascade a political opinion into virality.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--172PEEHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrmaysh98wf7aeyglpnl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--172PEEHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrmaysh98wf7aeyglpnl.png" alt="Streamlit App" width="837" height="830"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to provide a small frontend I built a streamlit app, where you can call the api to scrape some of the best known stock-market subreddits and to view the opinion events added to the Mongo Time Series. As I have only had the pipeline ready for a few days and the entity-recognition grpc microservice is very simple (keyword matching for the tickets), not much data is still in the system.&lt;/p&gt;

&lt;p&gt;I am sure there is some non-neoliberal use for this stack. Actually no, not that sure...&lt;/p&gt;

&lt;p&gt;This was fun to learn some basics of event-driven architectures, still some parts of the structure I had no idea how to build and I am pretty sure they are quite cringe. Next steps involve general improvements, deploying it to build a juicy Time Series™, fine-tune some NER and SA models to different domains and to do entity-conditioned SA.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category-prime-time"&gt;
  &lt;/a&gt;
  Submission Category: Prime Time
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ilyocoris"&gt;
        ilyocoris
      &lt;/a&gt; / &lt;a href="https://github.com/ilyocoris/dragonfly"&gt;
        dragonfly
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Real time sentiment analysis on entities from scraped text.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
DragonFly&lt;/h1&gt;
&lt;p&gt;Real time sentiment analysis on entities from scraped text.&lt;/p&gt;
&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;The vision behind this project is to create an events collection that is thought to be a historical archive of heterogenous events (sentiment of twitter/reddit comments on a company/crypto/party and the market fluctuations of the stock/coin or political polls). Both the easy-to-scale nature of the grpc micro-services and the asynchronous capabilities of kafka topics, backed by the consistency of MongoDB, build towards a real-time opinion temperature of an entity in this fast-moving internet, where a subreddit or telegram can x900% a crypto in hours or a twitter influencer can cascade a political opinion into virality.&lt;/p&gt;
&lt;p&gt;Streamlit frontend to showcase the capabilities of the project. On the first block, we can scrape the lasts posts from some well-known stock subreddits. On a more serious setting of this tool, this should be done via scheduled api calls, in oder to get…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ilyocoris/dragonfly"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Epic UI for Kafka Topics:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cloudhut"&gt;
        cloudhut
      &lt;/a&gt; / &lt;a href="https://github.com/cloudhut/kowl"&gt;
        kowl
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Kowl is a Web UI for Apache Kafka that allows exploring messages, consumers, configurations and more with a focus on a good UI &amp;amp; UX.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Kowl - A Web UI for Apache Kafka&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/cloudhut/kowl/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/2a2157c971b7ae1deb8eb095799440551c33dcf61ea3d965d86b496a5a65df55/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/cloudhut/kowl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4495ea3681071cd821e70e37ccfe31186c8566d7f54a5bc152ce14db146d3e9c/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f636c6f75646875742f6b6f776c" alt="Go Report Card"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f2055974687021d30d64e6d9ca53d72c5ccd9dea271b36c05721d0b2af8fad0a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f636c6f75646875742f6b6f776c3f736f72743d73656d766572"&gt;&lt;img src="https://camo.githubusercontent.com/f2055974687021d30d64e6d9ca53d72c5ccd9dea271b36c05721d0b2af8fad0a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f636c6f75646875742f6b6f776c3f736f72743d73656d766572" alt="GitHub release (latest SemVer)"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/KQj7P6v" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d3982fe7c46884a0b3eeaabe0f87fb8a1c579c6df9e35a39599e15affe3dc98/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646973636f72642d6f6e6c696e652d627269676874677265656e2e737667" alt="Discord Chat"&gt;&lt;/a&gt;
&lt;a href="https://quay.io/repository/cloudhut/kowl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0d808f1aa6d30af4e55c9d90017de1673880b8fb45107b44ce088bdeb4999d89/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f636b6572253230696d6167652d72656164792d677265656e" alt="Docker Repository on Quay" title="Docker Repository on Quay"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kowl (previously known as Kafka Owl) is a web application that helps you to explore messages in your Apache Kafka cluster and get better insights on what is actually happening in your Kafka cluster in the most comfortable way:&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/cloudhut/kowldocs/assets/preview.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_fWbN_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/cloudhut/kowldocs/assets/preview.gif" alt="preview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Message viewer:&lt;/strong&gt; Explore your topics' messages in our message viewer through ad-hoc queries and dynamic filters. Find any message you want using JavaScript functions to filter messages. Supported encodings are: JSON, Avro, Protobuf, XML, MessagePack, Text and Binary (hex view). The used enconding (except Protobuf) is recognized automatically.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Consumer groups:&lt;/strong&gt; List all your active consumer groups along with their active group offsets, edit group offsets (by group, topic or partition) or delete a consumer group.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Topic overview:&lt;/strong&gt; Browse through the list of your Kafka topics, check their configuration, space usage, list all consumers who consume a single topic or watch partition details…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/cloudhut/kowl"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>atlashackathon</category>
      <category>grpc</category>
      <category>eventdriven</category>
      <category>mongodb</category>
    </item>
  </channel>
</rss>
