<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Optimization of images with FastAPI</title>
      <author>Nelson Adonis Hernandez</author>
      <pubDate>Fri, 19 Nov 2021 22:32:39 +0000</pubDate>
      <link>https://dev.to/nelsoncode/optimization-of-images-with-fastapi-an2</link>
      <guid>https://dev.to/nelsoncode/optimization-of-images-with-fastapi-an2</guid>
      <description>&lt;p&gt;In this example we will see how to upload images and use background tasks to generate resolutions for different &lt;br&gt;
devices&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#dependencies"&gt;
  &lt;/a&gt;
  Dependencies
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;FastAPI uvicorn Pillow
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#background-tasks"&gt;
  &lt;/a&gt;
  Background Tasks
&lt;/h3&gt;

&lt;p&gt;You can define background tasks to be run after returning a response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UploadFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BackgroundTasks&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi.responses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSONResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;getcwd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;PATH_FILES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;


&lt;span class="c1"&gt;# RESIZE IMAGES FOR DIFFERENT DEVICES
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;resize_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;sizes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
        &lt;span class="s"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1280&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;720&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;480&lt;/span&gt;
    &lt;span class="p"&gt;}]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;size_defined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'height'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PATH_FILES&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size_defined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PATH_FILES&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'height'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"_"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/upload/file"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;upload_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;background_tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BackgroundTasks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UploadFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(...)):&lt;/span&gt;

    &lt;span class="c1"&gt;# SAVE FILE ORIGINAL
&lt;/span&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PATH_FILES&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"wb"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;myfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;myfile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;myfile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# RESIZE IMAGES
&lt;/span&gt;    &lt;span class="n"&gt;background_tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resize_image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dogs.jpg # Original Image

720_dogs.jpg # Resolution 1280 x 720

480_dogs.jpg # Resolution 640 x 480
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example in Github Gist&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/nelsoncode019/35910eff9c09ca015cfb4748be345133"&gt;https://gist.github.com/nelsoncode019/35910eff9c09ca015cfb4748be345133&lt;/a&gt;&lt;/p&gt;

</description>
      <category>fastapi</category>
      <category>python</category>
      <category>backend</category>
      <category>nelsoncode</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 19 Nov 2021 21:30:51 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-3ad7</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-3ad7</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Discovering a great new musical artist... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your wins — let's take a collective victory lap! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/igJK985xZj8Cqq0YOW/giphy-downsized-large.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/igJK985xZj8Cqq0YOW/giphy-downsized-large.gif" alt='Kool &amp;amp; the Gang singing "Celebrate"' width="476" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>How to automate Open edX deployments using Github Actions</title>
      <author>Cubite</author>
      <pubDate>Fri, 19 Nov 2021 21:12:33 +0000</pubDate>
      <link>https://dev.to/corpcubite/how-to-automate-open-edx-deployments-using-github-actions-397l</link>
      <guid>https://dev.to/corpcubite/how-to-automate-open-edx-deployments-using-github-actions-397l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-open-edx%C2%AE-"&gt;
  &lt;/a&gt;
  What is Open edX® ?
&lt;/h3&gt;

&lt;p&gt;Open edX is an open-source platform you can use to create and host online courses. It was originally developed in 2012 by MIT and Harvard University and has since been adopted by organizations of all shapes and sizes to power a wide range of online learning use cases.&lt;br&gt;
It has been used by organizations and universities like Microsoft, IBM, MIT, and ASU.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-do-we-handle-deployments-by-default-in-open-edx-"&gt;
  &lt;/a&gt;
  How do we handle deployments by default in Open edX ?
&lt;/h3&gt;

&lt;p&gt;We use Ansible to provision and maintain our platform. If you are not familiar with Ansible, it's an open source Devops tool that automates the software provisioning and configuration. It building blocks are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ansible &lt;strong&gt;Playbooks&lt;/strong&gt; which has 1 or multiple roles. Imaging Playbook as full instructions on how to install your software, it's components and how the set them up to work properly.&lt;/li&gt;
&lt;li&gt;Ansible &lt;strong&gt;Roles&lt;/strong&gt;. Each component in your stack has it's own role. for example if your are using Django, Nginx and MySQL in your application, each one of them has it's own role.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Variables&lt;/strong&gt;. Each role has it's own variables. For example you should provide variables for MySQL role to define root username and password.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#what-is-the-workflow-to-change-a-variable-"&gt;
  &lt;/a&gt;
  What is the workflow to change a variable ?
&lt;/h3&gt;

&lt;p&gt;We have our playbooks, roles and their variables in a GitHub repo. Variables are divided to 2 different files &lt;a href="https://github.com/cubitetech/openedx-actions-demo/blob/main/edx-configs/vars.yml"&gt;&lt;code&gt;vars.yml&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/cubitetech/openedx-actions-demo/blob/main/edx-configs/passwords.yml"&gt;&lt;code&gt;passwords.yml&lt;/code&gt;&lt;/a&gt;. Passwords file is encrypted using Ansible Vault.&lt;br&gt;
To change a variable and deploy it to the Open edX server we need to:&lt;br&gt;
1- Pull the Github repo that has Open edX variables on a local machone&lt;br&gt;
2- Change one or multiple variables&lt;br&gt;
3- Push the changes back to the Github repo&lt;br&gt;
4- Deploy new variables to the server from an Ansible Control node. Here we pass new &lt;code&gt;vars.yml&lt;/code&gt; and &lt;code&gt;passwords.yml&lt;/code&gt; to ansible-playbook command, Something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ansible-playbook /edx/app/edx_ansible/edx_ansible/playbooks/openedx_native.yml &lt;span class="nt"&gt;--vault-password-file&lt;/span&gt; ~/.ansible_vault_pass.txt &lt;span class="nt"&gt;-i&lt;/span&gt; ./ansible-configs/inventory &lt;span class="nt"&gt;-e&lt;/span&gt;@./edx-configs/vars.yml &lt;span class="nt"&gt;-e&lt;/span&gt;@./edx-configs/passwords.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tSldASEI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qkokpd9eg5i18wwiv3s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tSldASEI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qkokpd9eg5i18wwiv3s.png" alt="Default Deployment Workflow" width="880" height="788"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#how-github-actions-can-help-to-automate-manual-deployments"&gt;
  &lt;/a&gt;
  How GitHub actions can help to automate manual deployments
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;br&gt;
Steps 3 and 4 are where things can get complicated. As you see in the previous diagram these steps are manual and it can become really time consuming and tedious if you need to make multiple deployments to the same server or even to a cluster of servers.&lt;br&gt;
&lt;strong&gt;Solution&lt;/strong&gt;&lt;br&gt;
Ideal solution will be to trigger new deployment to our server or servers as as soon as we push a new change to the GitHub repo. GitHub actions can do that for us. We can create a workflow that&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Checks out our repo in a job

&lt;ul&gt;
&lt;li&gt;Using &lt;code&gt;actions/checkout@v2&lt;/code&gt; action&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install Ansible and all necessary libraries for a deployment&lt;/li&gt;
&lt;li&gt;Installs Open edX SSH key in it and adds it's key as known host

&lt;ul&gt;
&lt;li&gt;Using &lt;code&gt;shimataro/ssh-key-action@v2&lt;/code&gt; action&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deploys new variables using Ansible&lt;/li&gt;
&lt;li&gt;Restart all the services in Open edX to apply changes
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kfrXJcRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yt2ntutznwph957dy8n.png" alt="Github Actions Workflow" width="880" height="569"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#lets-see-how-it-works"&gt;
  &lt;/a&gt;
  Let's See how it works
&lt;/h4&gt;

&lt;p&gt;One of the variables in the &lt;code&gt;vars.yml&lt;/code&gt; file is &lt;a href="https://github.com/cubitetech/openedx-actions-demo/blob/main/edx-configs/vars.yml#L16"&gt;&lt;code&gt;EDXAPP_PLATFORM_NAME&lt;/code&gt;&lt;/a&gt; and we use it's value in template in multiple places like the footer.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NqJHgK1R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3v6q91730jxch1qhnwo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NqJHgK1R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3v6q91730jxch1qhnwo.png" alt="Footer" width="880" height="260"&gt;&lt;/a&gt;&lt;br&gt;
Now let's change it's value to &lt;code&gt;Cubite Technologies&lt;/code&gt; and commit the change. It should trigger GitHub action to deploy this new value to our server via Ansible.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bcDjaql30XM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Maintainer Must-Haves&lt;/li&gt;
&lt;li&gt;DIY Deployments&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cubitetech"&gt;
        cubitetech
      &lt;/a&gt; / &lt;a href="https://github.com/cubitetech/openedx-actions-demo"&gt;
        openedx-actions-demo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Repo to show how we can automate Open edX deployment using Github Actions
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;To learn more about Open edX check &lt;a href="https://open.edx.org"&gt;their website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>python</category>
      <category>django</category>
      <category>devops</category>
    </item>
    <item>
      <title>GitHub continuous integration basics (my experience).</title>
      <author>Andre Willomitzer</author>
      <pubDate>Fri, 19 Nov 2021 20:46:21 +0000</pubDate>
      <link>https://dev.to/andrewillomitzer/github-continuous-integration-basics-my-experience-2582</link>
      <guid>https://dev.to/andrewillomitzer/github-continuous-integration-basics-my-experience-2582</guid>
      <description>&lt;h3&gt;
  &lt;a href="#looking-back"&gt;
  &lt;/a&gt;
  Looking back...
&lt;/h3&gt;

&lt;p&gt;Last week in class we added automated testing to our Static Site Generators (mine is called &lt;a href="https://github.com/AndreWillomitzer/textToHTML_V2"&gt;textToHTML&lt;/a&gt;). This included some tests for Jest which make sure the core functionality of our programs work as expected.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continuous-integration"&gt;
  &lt;/a&gt;
  Continuous Integration?
&lt;/h3&gt;

&lt;p&gt;After writing our tests, if you run &lt;code&gt;npm run test&lt;/code&gt; from the command line it will run the tests. But... what if someone who is contributing to your repository &lt;strong&gt;forgets&lt;/strong&gt; to run the tests before committing? &lt;/p&gt;

&lt;p&gt;Introducing continuous integration (I'm using the &lt;a href="https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs-or-python"&gt;GitHub version&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;This allows you to set up a &lt;code&gt;.github&lt;/code&gt; folder containing a &lt;code&gt;.yml&lt;/code&gt; file to configure your tests to run automatically on any push or pull request to your repository. The above linked article shows step by step how to set up the configuration folder and file for either Node.js or Python.&lt;/p&gt;

&lt;p&gt;Once the changes are made, commit them to your repository so GitHub has the &lt;code&gt;.github&lt;/code&gt; folder and &lt;code&gt;.yml&lt;/code&gt; file(s).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-if-it-works"&gt;
  &lt;/a&gt;
  Testing if it works
&lt;/h3&gt;

&lt;p&gt;If you want to test whether the continuous integration is working, create a branch from your main branch using &lt;code&gt;git checkout -b new-branch-name&lt;/code&gt;. Make some small change such as a spelling change to your &lt;code&gt;README.md&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Commit these changes to the branch, and then navigate to the GitHub website. Under your repository, you should see an option to "compare and pull request" the new branch with your main branch. &lt;/p&gt;

&lt;p&gt;If the continuous integration is set up properly, when you create the Pull Request it will run the checks you have outlined in your &lt;code&gt;.yml&lt;/code&gt; configuration files. In my case it runs &lt;code&gt;npm run test&lt;/code&gt; which executes my Jest test suites. You can also configure it to run &lt;strong&gt;linting&lt;/strong&gt; and &lt;strong&gt;prettier formatting&lt;/strong&gt; by using the corresponding scripts from &lt;code&gt;package.json&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zVGzijYx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htl58ps7j6s7mbbuhgph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVGzijYx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htl58ps7j6s7mbbuhgph.png" alt="Image description" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ask-a-friend"&gt;
  &lt;/a&gt;
  Ask A Friend
&lt;/h3&gt;

&lt;p&gt;After making a pull request to my own repository to check if the CI worked, my friend Kevan Yang and I added more tests to each other's repositories to create a pull request and test it that way.&lt;/p&gt;

&lt;p&gt;For my pull request to his project &lt;a href="https://github.com/Kevan-Y/text-ssg"&gt;text-to-ssg&lt;/a&gt; I tested one of his functions called &lt;code&gt;getAllFiles()&lt;/code&gt;. I wrote an &lt;code&gt;expect()&lt;/code&gt; function expecting the files function to throw if it does not find the file (it's not the function itself throwing, but the &lt;code&gt;fs.readfile&lt;/code&gt; function throwing).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdGuej-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqffxnrb3l9yxvq5z7ko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdGuej-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqffxnrb3l9yxvq5z7ko.png" alt="Image description" width="880" height="83"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#moving-forward"&gt;
  &lt;/a&gt;
  Moving Forward
&lt;/h3&gt;

&lt;p&gt;In the future I plan to use continuous integration in my projects, and it was nice to have an understanding of how to set it up. It makes collaborating much easier because it stops unintentional bugs and code breaking changes by running the tests. Furthermore, it can be used for linting and styling which is useful because developers contributing to your project may not have the same style as you, and so the CI checks will report any differences.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>YouTube removes dislikes count - good decision to end hate?</title>
      <author>Leonardo Zamudio López</author>
      <pubDate>Fri, 19 Nov 2021 20:31:12 +0000</pubDate>
      <link>https://dev.to/leo_zamudio/youtube-removes-dislikes-count-good-decision-to-end-hate-5659</link>
      <guid>https://dev.to/leo_zamudio/youtube-removes-dislikes-count-good-decision-to-end-hate-5659</guid>
      <description>&lt;p&gt;YouTube is testing changes in its platform that could affect one of the most classic indicators about the temperature of a video: dislikes. From their Twitter account they explained that these are some new design changes in which the amount of dislikes on videos will not be shown, but curiously the button will remain there.&lt;/p&gt;

&lt;p&gt;At the moment, YouTube says that this will be a "small experiment" that some users may see during the next few weeks. However, creators will still be able to see the exact number of 'likes' and 'dislikes' from YouTube Studio.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xxlnhOJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Exvh5P5WUAg5Nwy.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGqvdGv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1427292844612595720/RC1YSvuT_normal.jpg" alt="YouTube profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        YouTube
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @youtube
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      👍👎 In response to creator feedback around well-being and targeted dislike campaigns, we're testing a few new designs that don't show the public dislike count. If you're part of this small experiment, you might spot one of these designs in the coming weeks (example below!). 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:00 PM - 30 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1376942486594150405" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1376942486594150405" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1376942486594150405" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The equivalent of "review bombing" on YouTube, these are campaigns where users go en masse to click the 'dislike' button on a video. YouTube says it has implemented this change after talking to creators who have been victims of such campaigns.&lt;/p&gt;

&lt;p&gt;However, if we look at the responses to the same YouTube tweet, the experiment doesn't seem to have been too well received. On Google's support website, YouTube explains in more detail that they have heard from creators that "public dislikes counters can affect their personal well-being", but some find it ironic that if it is for the well-being of creators they are now the only ones who can see the number of 'dislikes'.&lt;/p&gt;

&lt;p&gt;It is also not easy to obviate that the video with the most 'dislikes' in history is a video from YouTube itself. The infamous YouTube Rewind of 2018 with more than 19 million 'dislikes', a video so hated by the community, that in 2019 YouTube decided to completely change the format, and yet users gave them back more 9 million 'dislikes'. In 2020, YouTube gave up and canceled the 'Rewind', claiming that "it was a different year".&lt;/p&gt;

&lt;p&gt;YouTube says it does not plan to remove the button as such, and that using it will continue to work to "give feedback" to creators, or to fine-tune the video recommendations you receive on the platform. Those interested in providing feedback on these changes can do so through YouTube's help page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-opinion"&gt;
  &lt;/a&gt;
  My opinion
&lt;/h3&gt;

&lt;p&gt;I consider this measure being taken by YouTube to be the most absurd measure that can be taken. Lemme explain why:&lt;/p&gt;

&lt;p&gt;YouTube has policies regarding not posting videos with sensitive content, including hate speech. But, not all responsibility lies with the content creators, the YouTube community can also generate hate. And this is where the so-called "haters" come in. It is well known by most (if not all) people who use YouTube that these types of people exist. Those who for wanting to get attention or for wanting to be funny, are impregnating toxicity to any video that is shown to them. Let's talk about one of its main tools: THE COMMENTS.&lt;/p&gt;

&lt;p&gt;I do not consider that removing the number of dislikes will help to end the hate on the platform, since in many videos there are a lot of hate comments, comments that YouTube does not regulate.&lt;/p&gt;

&lt;p&gt;YouTube says that removing the dislikes count will help the public image of content creators not to be affected, however, this itself is much more exposed with comments.&lt;/p&gt;

&lt;p&gt;The platform's comments allow us to write anything. From inserting a link to a pornographic site to attacking the public image of the content creator through slander.&lt;/p&gt;

&lt;p&gt;And I think the latter is what YouTube needs to mitigate. Hateful comments can be very harsh, both to a group of people, and to the creator himself. It is well known that words on the internet can hurt just as much or worse than words in real life. There are cases of content creators whose careers were ruined by hateful comments, and even cases of suicide because of them.&lt;/p&gt;

&lt;p&gt;If YouTube really wants to eliminate hate, it should start implementing better policies on hate comments because, as they would say in my country: You do as you please, but what about the children?&lt;/p&gt;

&lt;p&gt;Anyways, I hope YouTube realizes the mistakes they are making, because, just as they complain to the community, the community now complains to them, and it is their duty to listen to the community if YouTube wants to remain a platform.&lt;/p&gt;

&lt;p&gt;If you liked it, don't forget to share it with your friends. Let me know your opinion in the comments, remember to debate with logical reasoning and respect. Take care and see you next time.&lt;/p&gt;

</description>
      <category>youtube</category>
      <category>web</category>
      <category>social</category>
      <category>videos</category>
    </item>
    <item>
      <title>Twitter Chat: Chapter 1 Recap</title>
      <author>Christina Gorton</author>
      <pubDate>Fri, 19 Nov 2021 20:27:11 +0000</pubDate>
      <link>https://dev.to/devedbookclub/twitter-chat-chapter-1-recap-4f89</link>
      <guid>https://dev.to/devedbookclub/twitter-chat-chapter-1-recap-4f89</guid>
      <description>&lt;p&gt;&lt;small&gt;Cover Photo by &lt;a href="https://unsplash.com/@chrisjdavis?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Chris J. Davis&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/twitter?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;We started a book club! Each week we host a Twitter chat on Thursdays to discuss a chapter of &lt;a href="https://link.springer.com/book/10.1007/978-1-4842-7217-6"&gt;Docs for Developers&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;On Thursday Nov. 18th, we had our first Twitter chat, hosted on the &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub Twitter&lt;/a&gt; account about Chapter 1. &lt;/p&gt;

&lt;p&gt;This post is a recap of the chat and a place to continue the conversation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#collecting-user-data"&gt;
  &lt;/a&gt;
  Collecting User Data
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;How do you currently collect user experience data?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What works well with your approach?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's still challenging?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/meganesulli"&gt;Megan Sullivan&lt;/a&gt; and &lt;a href="https://twitter.com/amberhimesmatz"&gt;Amber Matz&lt;/a&gt; both mentioned feedback widgets embedded in the docs they worked on. These widgets ask if the page was helpful. They also offer an open text field to add more comments. &lt;/p&gt;

&lt;p&gt;Sarah Rainsberger and I both mentioned receiving feedback from our communities directly. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--E1GvqRXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1100498575707066403/ShNVKQuL_normal.png" alt="Sarah Rainsberger profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Sarah Rainsberger
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @sarah11918
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub&lt;/a&gt; A1: We have an active Discord community, &amp;amp; we encourage and are quite responsive to general questions and support requests. In that process of *that*, it's often revealed what is/isn't in the docs, what should be clearer etc. So, we do try to be proactive, but it's often reactive
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:08 AM - 19 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1461516622083108865" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1461516622083108865" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1461516622083108865" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Aisha Blake pointed out the relationship between DevRel/DevEx and customer support/success teams. She mentioned that these teams could benefit from working more closely together as they often answer similar questions for customers. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RMvwf7fI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1312184097062694912/ZBYeYZzI_normal.jpg" alt="Aisha Blake profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Aisha Blake
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/aishablake"&gt;@aishablake&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/sarah11918"&gt;@sarah11918&lt;/a&gt; &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub&lt;/a&gt; I feel like I don't hear enough people talk about the relationship between DevRel (or DevEx, or whoever does docs at org X) and support or customer success. I *have* seen and heard of folks answering the same questions many times when issues could be avoided w/ more/better docs.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:25 AM - 19 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1461520860716670977" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1461520860716670977" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1461520860716670977" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
 

&lt;p&gt;Do your docs have a widget? Do you find it helpful?&lt;/p&gt;

&lt;p&gt;Does your company have a community where they can gather more feedback?&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#receiving-user-feedback"&gt;
  &lt;/a&gt;
  Receiving User Feedback
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Getting feedback can be tough!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do you avoid getting defensive when sorting through feedback on your product or documentation?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Any general tips for receiving user feedback?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We all agreed that negative feedback can be hard to accept. It can help to reframe how you think about the feedback and show empathy for the user who was frustrated enough to give it. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDIbtQtf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1298757926790680576/bI2v6ehX_normal.jpg" alt="Megan Sullivan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Megan Sullivan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/meganesulli"&gt;@meganesulli&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub&lt;/a&gt; A2) I try to remind myself that people who leave angry or harsh comments are often frustrated. It’s not about me, even if I’m the one who wrote the doc they’re mad at.&lt;br&gt;&lt;br&gt;And by figuring out ways to fix it, I’m helping prevent future people from feeling that same frustration.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:25 AM - 19 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1461520932493619201" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1461520932493619201" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1461520932493619201" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Amber Matz mentioned "owning your mistakes and working to fix the error" can help smooth over a user's frustration. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--yE-k4TMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1092571842726920192/kqPwOQxy_normal.jpg" alt="Amber Matz profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Amber Matz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @amberhimesmatz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub&lt;/a&gt; A2: Processing negative feedback is so hard and my least favorite thing. But usually owning the error, fixing it in a timely fashion, and thanking them for their feedback smooths any ruffled feathers.&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/DevEdBookClub"&gt;#DevEdBookClub&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:29 AM - 19 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1461521888551657472" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1461521888551657472" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1461521888551657472" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Estee Tey added it is normal to feel defensive but you should try to look at the feedback objectively. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofJ2lUIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1441783883456942080/vV37mSqv_normal.jpg" alt="Estee Tey 🐧🌻 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Estee Tey 🐧🌻
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @estee_tey
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub&lt;/a&gt; A2. Feeling defensive is inevitable when you get negative feedback about something you care about. Let the nerves flow through and then looking at the feedback objectively. It will make it easier to continue the feedback loop in a mutually beneficial way with the user.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:38 AM - 19 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1461524295041961985" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1461524295041961985" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1461524295041961985" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;How have you handled feedback?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#favorite-takeaways-or-quotes"&gt;
  &lt;/a&gt;
  Favorite Takeaways or Quotes
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What takeaways from this chapter can you apply to your own documentation practice at work?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Any quotes or ideas that resonate with you?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I mentioned that reading this book has helped me quickly implement small wins in the documentation I help support. I also linked to DigitalOcean's &lt;a href="https://twitter.com/coffeecraftcode/status/1461528664777048066"&gt;technical writing guidelines&lt;/a&gt; that I often use when writing for a technical audience. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--cvlBE_hL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1445090284514250765/AoxY_CzQ_normal.jpg" alt="Christina Gorton profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Christina Gorton
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub&lt;/a&gt; A3: Not sure if it was chpt. 1 specifically but I very quickly took a lot of the advice from this book and started some "small wins" in our documentation to help improve them and give developers a better experience. I have had good feedback from the changes already &lt;a href="https://twitter.com/hashtag/DevEdBookClub"&gt;#DevEdBookClub&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:39 AM - 19 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1461524395575455747" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1461524395575455747" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1461524395575455747" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
 

&lt;p&gt;Ramón Huidobro reminded us that quality is more important than quantity when seeking direct interviews with your users. Sometimes we seek out too many opinions. &lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--0BMpqRml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1445329011794710529/kDNxyANB_normal.jpg" alt="Ramón Huidobro profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Ramón Huidobro
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/hola_soy_milk"&gt;@hola_soy_milk&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub&lt;/a&gt; A3) One thing that stood out to me was on direct interviews: "pursue quality over quantity".&lt;br&gt;&lt;br&gt;When starting, it's tempting to think one should have as many opinions as possible. Pursuing those quality ones that fit into the existing research sounds so reasonable!&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/DevEdBookClub"&gt;#DevEdBookClub&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      11:13 AM - 19 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1461653951099641863" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1461653951099641863" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1461653951099641863" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#join-the-conversation-%F0%9F%97%A3"&gt;
  &lt;/a&gt;
  Join the Conversation 🗣
&lt;/h2&gt;

&lt;p&gt;You can see the full conversation on the DevEdBookClub Twitter account. &lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--XW3yS3ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1455595340304764935/OXuZnpoM_normal.png" alt="DevEdBookClub profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        DevEdBookClub
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @devedbookclub
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Welcome to our first-ever &lt;a href="https://twitter.com/hashtag/DevEdBookClub"&gt;#DevEdBookClub&lt;/a&gt;!&lt;br&gt;&lt;br&gt;Tonight, we’ll be discussing Chapter 1 of @DocsForDevs. This chapter is all about understanding your audience.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:00 AM - 19 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1461514629868183552" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1461514629868183552" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1461514629868183552" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Add a comment on the Twitter thread or share your thoughts here to continue the conversation. &lt;/p&gt;

&lt;p&gt;What did you think about Chapter 1 of Docs for Developers?  &lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 Cool React Libraries You Should Know [not the usual one's]</title>
      <author>TalhaKhalid101</author>
      <pubDate>Fri, 19 Nov 2021 20:21:03 +0000</pubDate>
      <link>https://dev.to/talhakhalid101/5-cool-react-libraries-you-should-know-not-the-usual-ones-3kdc</link>
      <guid>https://dev.to/talhakhalid101/5-cool-react-libraries-you-should-know-not-the-usual-ones-3kdc</guid>
      <description>&lt;p&gt;After several weeks of writings about &lt;a href="https://medium.com/@talhakhalid101"&gt;Kubernetes&lt;/a&gt;, I want to write a short post about React, about libraries, because man can not live only on Kubernetes. &lt;/p&gt;

&lt;p&gt;These are some of the libraries that I consider most useful and cool in React. For obvious reasons, React-router, Redux, and other well-known ones are excluded. As well as some React Frameworks such as Gatsby, Nextjs, Frontity, and others.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ant Design&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ant design is beautiful, yes, there is not much that can be deepened using text. It has tons of components that are visually pleasing and very stylish: buttons, sliders, progress bars, layouts, you know, the basics. Make sure to visit their &lt;a href="https://ant.design/"&gt;site&lt;/a&gt; and see for yourself all that Ant design has to offer when you are done reading this post, of course.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TAoIGmUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72ijt83n3c2q4swv2nzz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TAoIGmUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72ijt83n3c2q4swv2nzz.gif" alt="" width="715" height="604"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Formik&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Formik is a great library which makes working with forms simple and scalable. It allows you to have controlled fields, create validations, reset the form, set a status, handle errors, all with a few lines of code: we define an object that contains properties with their respective validations and voila, formik takes care of almost everything.&lt;/p&gt;

&lt;p&gt;Note the validation schema on the left side consisting of an object called &lt;em&gt;ValidationSchema&lt;/em&gt; which has the name of the fields and functions that are concatenated to carry out the validation. There are functions like min _(), max (), oneOf () _, and many others for almost any type of validation you require. I leave you the link to the sandbox from where I took this example.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;React query&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every time an API request is made, there is code that is repeated; make the request, display an item indicating that content is loading, receive the error or successful status, and save it to the status. Does it sound familiar to you?&lt;br&gt;
React query is responsible for reducing all the repetitive code that is responsible for the entire process of handling web requests, providing us with a special hook from which we can unstructured variables that will facilitate the handling of the response.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ziWr9Ym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezgz7l927mca28tgv9u1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ziWr9Ym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezgz7l927mca28tgv9u1.png" alt="" width="880" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;React-icons-kit&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sometimes it is quite annoying to take care of the graphic part of a web page. There are icons everywhere but you have to look for them, sometimes an icon pack does not have all the icons we need and we have to combine different ones. An excellent solution to these problems is &lt;a href="https://react-icons-kit.now.sh/"&gt;React-icons-kit&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zmhzE9rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr86rbydpgiht2hw2109.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zmhzE9rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr86rbydpgiht2hw2109.gif" alt="" width="735" height="420"&gt;&lt;/a&gt;&lt;br&gt;
Before using it, remember to check the license of the icons you decide to use, because not all licenses are equally permissive.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The minimalist React: Preact&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Preact is React, yes, same functions, well, not all actually, but the most common ones yes, all in just 3kb. Preact promises to be much faster and lighter than its counterpart as it uses the browser's native addEventListener instead of React's synthetic event handler. It also has exclusive functions that you can't find in React. This library is ideal for applications where performance is a critical factor.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUrEFSrS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75534hutf3q9nit1uzsk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUrEFSrS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75534hutf3q9nit1uzsk.jpg" alt="" width="880" height="747"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can read more differences between React and Preact on their &lt;a href="https://preactjs.com/guide/v10/differences-to-react/"&gt;official page&lt;/a&gt;.&lt;br&gt;
&lt;em&gt;Here's a Bonus!&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;React Virtualized&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React virtualized takes care of solving a problem that seems pretty simple at first. Render lists and information that can be tabulated. Only that? Well yes, but rendering lists with a few items wouldn't be a problem, would it? The strength of React Virtualized is not rendering small lists, but large lists, greater than 1k of elements with most of the problems that are already solved and tested.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hlnkin-X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72e34e67vjx3s91cjmbx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hlnkin-X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72e34e67vjx3s91cjmbx.gif" alt="" width="640" height="480"&gt;&lt;/a&gt;&lt;br&gt;
Visit the &lt;a href="https://bvaughn.github.io/react-virtualized/#/components/List"&gt;React Virtualized&lt;/a&gt; page to read the full documentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you liked this blog post, consider following me for more such stuff. Also, feel free to add your thoughts!🙂Or you can buy me a coffee &lt;a href="https://www.buymeacoffee.com/talhakhalid101"&gt;&lt;strong&gt;right here&lt;/strong&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QvI73lOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tug7y5k4fpqjys6hknd9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QvI73lOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tug7y5k4fpqjys6hknd9.gif" alt="" width="480" height="236"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Realtime chat app out of React, Express, and SocketIO</title>
      <author>𝐋𝐄𝑽𝐈𝑨𝐓𝐇𝐀𝐍 Programming</author>
      <pubDate>Fri, 19 Nov 2021 20:12:38 +0000</pubDate>
      <link>https://dev.to/leviathanprogramming/realtime-chat-app-out-of-react-express-and-socketio-4o57</link>
      <guid>https://dev.to/leviathanprogramming/realtime-chat-app-out-of-react-express-and-socketio-4o57</guid>
      <description>&lt;p&gt;I wanted to learn react and always wanted to make a discord clone of some sort.  This is my first actual react project so it took me longer than usual, but I like the way it turned out.&lt;/p&gt;

&lt;p&gt;I did use Replit Authentication since it was mainly for the people on there.  I'm sure all you devs should have an account.&lt;/p&gt;

&lt;p&gt;Well, that being said, here's the link:&lt;br&gt;
&lt;a href="https://firerepl.leviathancoding.repl.co/"&gt;https://firerepl.leviathancoding.repl.co/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would love to hear your thoughts on it.&lt;br&gt;
Enjoy. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>showdev</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Docker Compose | Portability from the Start</title>
      <author>Holly DevRel</author>
      <pubDate>Fri, 19 Nov 2021 19:46:55 +0000</pubDate>
      <link>https://dev.to/hollydevrel/docker-compose-portability-from-the-start-3e18</link>
      <guid>https://dev.to/hollydevrel/docker-compose-portability-from-the-start-3e18</guid>
      <description>&lt;p&gt;&lt;strong&gt;Original Source:&lt;/strong&gt; &lt;a href="https://shipyard.build/blog/docker-compose-portability-from-the-start/"&gt;https://shipyard.build/blog/docker-compose-portability-from-the-start/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; has quickly become an essential platform for application containerization. By empowering developers to rapidly deploy apps and host them in the cloud, Docker has simplified the dev cycle by expediting the process of building scalable, modern applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;&lt;br&gt;
Docker Compose is a powerful tool for “code-to-cloud” development. It allows developers to define how to retrieve, build and run multiple containers simultaneously, all defined within a single YAML file (docker-compose.yaml). Let’s check out some cases where Compose can simplify app development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compose For Local Development&lt;/strong&gt;&lt;br&gt;
Containers accelerate development by eliminating the need to install and manage dependencies locally. This allows for a “plug and play” approach to the dev cycle — applications can run on any major OS (including cloud hosts), as they come prepackaged with everything they need to run independently. All developers need to install is Docker.&lt;/p&gt;

&lt;p&gt;Docker Compose takes the convenience of containers one step further, by streamlining each service’s building and runtime config into a single process. With Compose, it’s as simple as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Define how to build your app’s services with a 
Dockerfile&lt;/li&gt;
&lt;li&gt;Define how to run your app’s services in the 
docker-compose.yaml&lt;/li&gt;
&lt;li&gt;Build and run your app with docker-compose up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compose also allows devs to configure mount volumes (basically directories where data persists) and port mappings (to forward local traffic to the containers).&lt;/p&gt;

&lt;p&gt;Here’s an example Compose file for a &lt;a href="https://github.com/shipyard/react-flask-starter"&gt;full-stack React, Flask, and Postgres&lt;/a&gt; app (along with a few Shipyard metadata labels)!&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;•version: '3'

•services:

•frontend:
    •labels:
    •shipyard.route: '/'
    •build: 'frontend'
    •environment:
    •CI: 'true'
    •DANGEROUSLY_DISABLE_HOST_CHECK: 'true'
    •env_file:
    • - frontend/frontend.env
    •volumes:
    •- './frontend/src:/app/src'
    •- './frontend/public:/app/public'
    •ports:
    •- '3000:3000'

•backend:
    •labels:
    •shipyard.route: '/api'
    •build: 'backend'
    •environment:
    •DATABASE_URL: 'postgres://obscure-user:obscure-  •password@postgres/app'
    •DEV: ${DEV}
    •FLASK_DEBUG: '1'
    •volumes:
    •- './backend/filesystem/entrypoints:/entrypoints:ro'
    •- './backend/migrations:/srv/migrations'
    •- './backend/src:/srv/src:ro'
ports:
    •- '8080:8080'

•worker:
    •labels:
    •shipyard.init: 'poetry run flask db upgrade'
    •build: 'backend'
    •environment:
    •DATABASE_URL: 'postgres://obscure-user:obscure-  •password@postgres/app'
    •DEV: ${DEV}
    •FLASK_DEBUG: '1'
    •LOCALSTACK_HOST: 'localstack'
    •command: '/entrypoints/worker.sh'
    •volumes:
    •- './backend/filesystem/entrypoints:/entrypoints:ro'
    •- './backend/migrations:/srv/migrations'
    •- './backend/src:/srv/src:ro'

•postgres:
    •image: 'postgres:9.6-alpine'
    •environment:
    •POSTGRES_USER: 'obscure-user'
    •POSTGRES_PASSWORD: 'obscure-password'
    •POSTGRES_DB: 'app'
    •PGDATA: '/var/lib/postgresql/data/pgdata'
    •volumes:
    •- 'postgres:/var/lib/postgresql/data'
    •ports:
    •- '5432'

•redis:
    •image: 'redis:5.0-alpine'
    •ports:
    •- '6379'

•volumes:
•postgres:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Compose For Automated Testing&lt;/strong&gt;&lt;br&gt;
Most modern software development uses the trunk-based model, involving small, frequent changes to a codebase and automated post-commit tests.&lt;/p&gt;

&lt;p&gt;As microservices become more common, applications consist of more integrations than ever before. This calls for continuous testing with every new commit, which can become time and resource intensive.&lt;/p&gt;

&lt;p&gt;Unit-testing with Compose is pretty straightforward, while integration and end-to-end (E2E) testing tend to be more complex. These types of automated testing require a number of services, which often need to be modified in order to replicate a production environment.&lt;/p&gt;

&lt;p&gt;Many of the features that make Compose stand out for local development are also useful for automated testing. Compose can quickly and efficiently spin up and configure full-stack environments for automated testing (which your DevOps engineers appreciate). This allows for executing tests in a reliable and repeatable manner.&lt;/p&gt;

&lt;p&gt;Compose is also valuable for testing database integrations. Because containers are ephemeral by nature, we can choose to start with a fresh full database each test, with the option to easily seed it with the same data. This eliminates the possibility of remnant or corrupt data causing false positives/negatives.&lt;/p&gt;

&lt;p&gt;In most cases, the same Compose file can be used for both local development and remote testing environments. But if there are differences in how the environments run, you can put the few changes you need in a second Compose file and override the general Compose file like so:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compose For Cloud Deployments&lt;/strong&gt;&lt;br&gt;
Compose is a format that is being adopted natively by clouds as a valid format to define your application. In particular &lt;a href="https://shipyard.build/"&gt;Shipyard&lt;/a&gt; supports Compose as a first-class citizen. With just the single Compose file, users get ephemeral environments for all their pull requests, and one-click deploys to more long-lived QA, staging, and production environments!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Docker Compose is an essential tool for container development and deployment. Check out the &lt;a href="https://docs.docker.com/compose/compose-file/"&gt;Compose file reference&lt;/a&gt; and &lt;a href="https://docs.docker.com/compose/"&gt;guide&lt;/a&gt; for a full tour of features. And check out our starter repos at &lt;a href="https://github.com/shipyard"&gt;github.com/shipyard&lt;/a&gt; for examples of containerizing modern frameworks.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__112"&gt;
  
    .ltag__tag__id__112 .follow-action-button{
      background-color: #2A0798 !important;
      color: #C8F7C5 !important;
      border-color: #2A0798 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/productivity" class="ltag__tag__link"&gt;productivity&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Productivity includes tips on how to use tools and software, process optimization, useful references, experience, and mindstate optimization.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
 &lt;div class="ltag__tag ltag__tag__id__168"&gt;
  
    .ltag__tag__id__168 .follow-action-button{
      background-color: #06B500 !important;
      color: #FFFFFF !important;
      border-color: #06B500 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/devops" class="ltag__tag__link"&gt;devops&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Content centering around the shifting left of responsibility, deconstruction of responsibility silos, and the automation of repetitive work tasks.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
 &lt;div class="ltag__tag ltag__tag__id__31"&gt;
  
    .ltag__tag__id__31 .follow-action-button{
      background-color: #73c7e6 !important;
      color: #134871 !important;
      border-color: #73c7e6 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/docker" class="ltag__tag__link"&gt;docker&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Stories about Docker as a technology (containers, CLI, Engine) or company (Docker Hub, Docker Swarm).
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>programming</category>
      <category>devops</category>
      <category>docker</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>AutoComplete with JS</title>
      <author>Walter Nascimento</author>
      <pubDate>Fri, 19 Nov 2021 19:39:55 +0000</pubDate>
      <link>https://dev.to/walternascimentobarroso/autocomplete-with-js-551f</link>
      <guid>https://dev.to/walternascimentobarroso/autocomplete-with-js-551f</guid>
      <description>&lt;p&gt;&lt;a href="https://medium.com/walternascimentobarroso-pt/autocomplete-com-javascript-36ca1fa93b28"&gt;[Clique aqui para ler em português]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s create an autocomplete so that clicking on an input displays a suggestion list&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;

&lt;p&gt;First let’s create the interface, we’ll do something simple, using just HTML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Input&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"suggestions"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a div and inside we have a label, an input and a ul, this input will be where we will type the information and when the information matches the list we have it will be displayed in ul&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inputField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ulField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;suggestions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;inputField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;changeAutoComplete&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ulField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;selectItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;changeAutoComplete&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;ulField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;``&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;autoCompleteValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;autoComplete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;autoCompleteValues&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;addItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;autoComplete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;destination&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Italy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Spain&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Portugal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Brazil&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ulField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ulField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/li&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;selectItem&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tagName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;inputField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;ulField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;``&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have four functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;changeAutoComplete&lt;/strong&gt; = In this function we will have the input values, we check if there is any text, we call the autocomplete function, with the return of the autocomplete function we do a loop and add the item using the additem() function;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;autoComplete&lt;/strong&gt; = In this function we have a target array and with the data passed we check if the typed text exists in some value of the target array, if it exists it is returned;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;addItem&lt;/strong&gt; = Here the received value is added directly to ul;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;selectItem&lt;/strong&gt; = This function is activated by clicking on the item list, thus directly choosing the selected item;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ready simple like that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;See below for the complete working project.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/WalterNascimento/embed/PobzKzq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  Youtube
&lt;/h2&gt;

&lt;p&gt;If you prefer to watch it, see the development on youtube.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tfxAUi0lMos"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.alura.com.br/artigos/criando-um-autocomplete-com-javascript?gclid=CjwKCAiA9vOABhBfEiwATCi7GFd7L_NkceqRgAk4CYgsN1rANbWH12fb2zhYnRWEM7rmko74XgbIfBoCB1YQAvD_BwE"&gt;https://www.alura.com.br/artigos/criando-um-autocomplete-com-javascript?gclid=CjwKCAiA9vOABhBfEiwATCi7GFd7L_NkceqRgAk4CYgsN1rANbWH12fb2zhYnRWEM7rmko74XgbIfBoCB1YQAvD_BwE&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;If you have any questions, complaints or tips, you can leave them here in the comments. I will be happy to answer!&lt;/p&gt;

&lt;p&gt;😊😊 See you later! 😊😊&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>html</category>
    </item>
    <item>
      <title>Python Lists + Lists Quiz!</title>
      <author>Lambda Technology Inc</author>
      <pubDate>Fri, 19 Nov 2021 19:30:40 +0000</pubDate>
      <link>https://dev.to/lambdatechnologyinc/python-lists-lists-quiz-2po2</link>
      <guid>https://dev.to/lambdatechnologyinc/python-lists-lists-quiz-2po2</guid>
      <description>&lt;p&gt;Ahhh, Lists!&lt;/p&gt;

&lt;p&gt;Nearly every single functional programming language contains lists in one form or another. Lists are an important part of any code slinger's repertoire because they allow us to deal with data in a convenient and comprehensive way. After all... how many times have you found yourself writing a program that &lt;em&gt;didn't&lt;/em&gt;, deal with data? Today we'll be focusing on the use of lists in Python.&lt;/p&gt;

&lt;p&gt;Let's take a look at some basic principles of python lists and what they might mean for your code.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*If you're here to take the quiz and want to skip ahead, the quiz is linked at the bottom of this article.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;First, let's define what a list truly is.&lt;br&gt;
In essence, a list is a single variable that can store multiple items or, as we call them in python, &lt;strong&gt;&lt;em&gt;elements&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Lists are one of the 4 Collection Data-Types (Arrays) in Python:&lt;br&gt;
-&lt;strong&gt;Lists&lt;/strong&gt;&lt;br&gt;
-&lt;strong&gt;Dictionaries&lt;/strong&gt;&lt;br&gt;
-&lt;strong&gt;Sets&lt;/strong&gt;&lt;br&gt;
-&lt;strong&gt;Tuples&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's look at an example list, and break it down.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;foods = ["cherries", "apples", "grapes"]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, we must give our list a name. In the above code example, we call our list "foods."&lt;/p&gt;

&lt;p&gt;Next, we define our list using the '=', '[', and ']' symbols. An important thing to remember here: &lt;strong&gt;lists always use brackets ( '[' and ']') to contain their elements.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If the elements in our list are strings (text based items), we wrap each element in "double" quotation marks, followed by a comma to separate each element.&lt;br&gt;
*If our list contains integers, we do not need quotation marks and would simply write the list as follows:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;numbers = [0, 2, 4, 6]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pretty simple so far, right?&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Next, lets look at some of the properties lists have, and explain those properties in a bit more detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1). Lists are Ordered&lt;/strong&gt;&lt;br&gt;
What this means is that the data (elements) contained within a list have a set order. Generally, that order will not change (except in some more rare cases using some particular list methods, but we won't dive into that here... topic for another time).&lt;br&gt;
If you were to add an element to an existing list, that newest element would be added to the end of the list.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2). Lists are Mutable&lt;/strong&gt;&lt;br&gt;
Building off our last property, we know that lists can in fact be changed (mutable). We can destroy, add or even change the existing elements in the lists that we create. 'nuff said.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3). Lists are Indexed and Allow for Duplicates&lt;/strong&gt;&lt;br&gt;
Basically, we can have multiple elements of the same exact value inside of a list. For example, a list may contain the following elements:&lt;br&gt;
&lt;strong&gt;numbers = [0, 0, 2, 2, 4, 4,]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4). Lists Allow for Multiple Data Types&lt;/strong&gt;&lt;br&gt;
So far in this introduction to lists we've seen two lists with two different data-types: strings (fancy word for text) and integers (fancy word for whole numbers). Lists can also contain other data-types, like &lt;strong&gt;&lt;em&gt;Boolean&lt;/em&gt;&lt;/strong&gt; values. (Boolean data is a fancy way of saying: data that is either True or False... think of how computers operate with binary numbers: 0 and 1... True or False).&lt;br&gt;
*One important thing to remember: Boolean values (True or False) are not wrapped in quotes, similarly to integer values.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;boolean_list = [True, False, False]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above code is very different than the below code (even though the lists look very similar).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;not_boolean_list = ["True", "False", "False"]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above code (not_boolean_list) represents a list that contains elements made up of string data, &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; boolean type data.&lt;/p&gt;

&lt;p&gt;On a final note, it is also possible to have a list that combines all of these different data types, such as the following:&lt;/p&gt;

&lt;p&gt;multi_data_type_list = [0, 2, "foo", 4, True, "bar"]&lt;/p&gt;




&lt;p&gt;Let's now talk about how the Python Interpreter recognizes the positions of elements stored in a list. After all, we'll want to be able to call or grab the data stored in our lists as needed, so it's important to know what position that data is sitting in within a given list.&lt;/p&gt;

&lt;p&gt;First, lets create a new list:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;new_list = ["string", 4, 5, True]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next, open a new tab here in your browser and enter the following in the address bar: &lt;a href="https://www.online-python.com/"&gt;https://www.online-python.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clear the code example that loads and input the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;new_list = ["string", 4, 5, True]&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;print(len(new_list))&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Here, we first define out list. In line 2, we invoke the print function. This tells python to print something. Next we invoke the len function, which tell python to count the length of the parameter contained inside the parentheses (in this case, it is our list: new_list). A helpful thing to remember here is that when we call a function in python, it is followed by parentheses, which contain the parameters that the function will need to operate and complete the job).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Run the code.&lt;/p&gt;

&lt;p&gt;You'll notice that the output is 4. What this means is that the length (len) of our list is 4, meaning we have 4 elements of data stored in that list.&lt;/p&gt;

&lt;p&gt;Now, here's what you want to remember about all of this: Python begins counting list elements starting at 0.&lt;/p&gt;

&lt;p&gt;To illustrate this, clear the code in the IDE and enter the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;new_list = ["string", 4, 5, True]&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;print(new_list[0])&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Here we invoke the print function, and pass the parameter new_list to the function. The '[0]' tells the print function that we wish to print our the first (zero) element of the data stored within the brackets.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Run the code.&lt;/p&gt;

&lt;p&gt;The new output is now: string.&lt;/p&gt;

&lt;p&gt;That's because the first element (element zero) in the list is a string data-type value called "string."&lt;/p&gt;

&lt;p&gt;If you've made it this far, Great Job! You've now interacted with your list data in a couple of meaningful ways. This is only the beginning to your journey in working with lists, but we can assure you, this is a great jump into the Collection Data-Types that Python utilizes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PRO-TIP:&lt;/strong&gt; &lt;em&gt;In tutorials like this, verbiage can sometimes be confusing. Different people write different tutorials in different languages. So I'm here to tell you this:&lt;br&gt;
'Invoke a function' means the same this as 'Call a function'&lt;br&gt;
'Calling our data' usually means the same thing as 'Grabbing our data'&lt;br&gt;
'Arguments' mean the same thing as 'Parameters'&lt;/em&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#challenge-time"&gt;
  &lt;/a&gt;
  CHALLENGE TIME!
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#brought-to-you-by-pplcom"&gt;
  &lt;/a&gt;
  BROUGHT TO YOU BY P-PL.COM
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Now, we'd like to offer you a challenge. If you're new to lists in python, the following quiz will test your abilities to understand the program flow in a tiny python script that interacts with two separate lists, and outputs a 3rd based on the results. &lt;em&gt;This quiz may actually challenge a few intermediary python coders who aren't careful.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Native Link:&lt;br&gt;
&lt;a href="https://www.p-pl.com/resource/quiz/6192e4e956873400097e519a"&gt;https://www.p-pl.com/resource/quiz/6192e4e956873400097e519a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Shortened and Shareable Link:&lt;br&gt;
&lt;a href="https://bit.ly/32jKcC8"&gt;https://bit.ly/32jKcC8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Be sure to follow us on Instagram and Twitter: @p_pl_talk&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>3+3 ASP.NET Mistakes (+ How to avoid them)</title>
      <author>Dotnetsafer</author>
      <pubDate>Fri, 19 Nov 2021 18:55:11 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/33-aspnet-mistakes-how-to-avoid-them-25cd</link>
      <guid>https://dev.to/dotnetsafer/33-aspnet-mistakes-how-to-avoid-them-25cd</guid>
      <description>&lt;p&gt;The &lt;strong&gt;internet is a dangerous place&lt;/strong&gt;, hackers are always looking for new ways to break into your system and steal your data. &lt;/p&gt;

&lt;p&gt;As a developer, you know how important it is to protect your application. If your app is hacked, it can &lt;strong&gt;be a big problem for you and your customers.&lt;/strong&gt; With the increase in internet security breaches and cyber attacks, protecting your app has never been more essential. &lt;/p&gt;

&lt;p&gt;To help prevent potential threats, I'm going to share &lt;strong&gt;some mistakes and how to avoid them to help you better protect your ASP.NET applications.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The 3+3 is that I am going to explain &lt;strong&gt;3 common simple ones and 3 security ones.&lt;/strong&gt; Let's start with the most common ones&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-common-mistakes-made-in-aspnet%C2%A0"&gt;
  &lt;/a&gt;
  3 Common Mistakes made in ASP.NET 📚
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tolower-in-linq-query-doesnt%C2%A0work"&gt;
  &lt;/a&gt;
  ToLower() in LINQ Query Doesn't Work
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;ToLower&lt;/code&gt; function &lt;strong&gt;returns a lowercased duplicate of a string.&lt;/strong&gt; When you try to compare numbers from multiple sources, though, this might result in a perplexing error. Consider the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;ds&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dotnetsaferServices&lt;/span&gt;
             &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;customerName&lt;/span&gt; &lt;span class="k"&gt;equals&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;customerName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="k"&gt;where&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shield&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;productLicense&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ShieldNumber&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One approach is use &lt;code&gt;IndexOf&lt;/code&gt; only with case-insensitive &lt;code&gt;OrdinalIgnireCase&lt;/code&gt; attribute within the query instead of &lt;code&gt;.ToLower&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;ds&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dotnetsaferServices&lt;/span&gt;
&lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dbContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;customerName&lt;/span&gt; &lt;span class="k"&gt;equals&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;customerName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;Where&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shield&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;productLicense&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ShieldNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StringComparison&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrdinalIgnoreCase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#not-making-use-of-dependency-injection"&gt;
  &lt;/a&gt;
  Not Making Use of Dependency Injection
&lt;/h3&gt;

&lt;p&gt;Assume our Controller requires a &lt;em&gt;FooService&lt;/em&gt; to obtain a &lt;em&gt;Foo&lt;/em&gt; that it may deliver to the user, as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FooController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IActionResult&lt;/span&gt; &lt;span class="nf"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fooService&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;FooService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;BarService&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;BazService&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;View&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fooService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetFoo&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The problem is that our Controller requires specifics on how to establish a &lt;em&gt;FooService.&lt;/em&gt; That implies we'll have to repeat that reasoning every time a FooService is required.&lt;/p&gt;

&lt;p&gt;Dependency Injection is a built-in feature of ASP.NET 5 MVC 6. As a result, &lt;strong&gt;you may indicate the dependence in the constructor.&lt;/strong&gt; The ASP.NET 5 framework would then submit it on our behalf.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#incorrect-usage-of-the-var%C2%A0keyword"&gt;
  &lt;/a&gt;
  Incorrect usage of the Var keyword
&lt;/h3&gt;

&lt;p&gt;The misuse and abuse of the &lt;code&gt;var&lt;/code&gt; keyword is a common and fundamental problem. The true function of var is to allow us to declare a local variable when you don't know what type it is. This is frequently the case with anonymous types because you don't know what the type name is until compile time.&lt;/p&gt;

&lt;p&gt;Nonetheless, some programmers use &lt;code&gt;var&lt;/code&gt; every time they define a variable. The type name in a local variable declaration adds another layer of description:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// let's say you have a static method called GetProducts()&lt;/span&gt;
&lt;span class="c1"&gt;// that returns System.Data.DataTable&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;GetProducts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModelTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Subscription&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// how is it clear to the reader that I can do this?&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MAX(Price)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Empty&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#3-security-mistakes-made-in-aspnet%C2%A0"&gt;
  &lt;/a&gt;
  3 Security Mistakes made in ASP.NET 💻
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#storing-secrets-inside-webconfig"&gt;
  &lt;/a&gt;
  Storing Secrets inside Web.config
&lt;/h3&gt;

&lt;p&gt;This stems from the desire to save time by storing cryptographic keys in a &lt;code&gt;web.config&lt;/code&gt; file. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;appSettings&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"AWS"&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"someSecret"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Database"&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"someKey"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;appSettings&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should never keep secrets in a &lt;code&gt;web.config file&lt;/code&gt;. Therefore, &lt;strong&gt;you must redirect the code to a protected file&lt;/strong&gt;, as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;appSettings&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Web.SECRETS.config"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Database"&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"someSecret"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;appSettings&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#request-with-potentially-dangerous-consequencesform-value"&gt;
  &lt;/a&gt;
  Request with Potentially Dangerous Consequences.Form Value
&lt;/h3&gt;

&lt;p&gt;By default, &lt;strong&gt;we'll get an error&lt;/strong&gt; because ASP.NET MVC prevents this sort of code from being sent to the server in order to prevent Cross Site Scripting (XSS) attacks. &lt;strong&gt;Here's a fix&lt;/strong&gt; for an issue that occurs when you try to transmit HTML code to a server.&lt;/p&gt;

&lt;p&gt;As demonstrated below, &lt;strong&gt;you may deactivate ASP.NET MVC validation&lt;/strong&gt; for a specific field by using the AllowHtml attribute for the model class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductModel&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Description:"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AllowHtml&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Description&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#not-using-to-the-client-an-xsrf%C2%A0token"&gt;
  &lt;/a&gt;
  Not using to the client an XSRF token
&lt;/h3&gt;

&lt;p&gt;Cross-site request forgeries are prevented via XRSF tokens. &lt;strong&gt;You must utilize them&lt;/strong&gt; whenever the browser can implicitly authenticate the user. This covers programs that use Windows authentication or use automated authentication using cookies.&lt;/p&gt;

&lt;p&gt;Let's see an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"api/[controller]"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SecurityController&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IAntiforgery&lt;/span&gt; &lt;span class="n"&gt;_antiforgery&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;SecurityController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IAntiforgery&lt;/span&gt; &lt;span class="n"&gt;antiforgery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_antiforgery&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;antiforgery&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IActionResult&lt;/span&gt; &lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_antiforgery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetAndStoreTokens&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ObjectResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;tokenName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HeaderName&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;ASP.NET is a web development framework that can be either open-source or commercial. ASP.NET is used to create web pages, web applications, and XML Web Services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security is a major issue for many of the ASP.NET applications&lt;/strong&gt; today because of the common vulnerabilities of SQL injection and Cross-site scripting (XSS).&lt;/p&gt;

&lt;p&gt;Although it &lt;strong&gt;is difficult for a developer to make an error-free software product,&lt;/strong&gt; these common security errors mentioned above &lt;strong&gt;can be easily avoided when developing ASP.NET applications.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>programming</category>
      <category>aspnet</category>
    </item>
  </channel>
</rss>
