<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 11 Jan 2022 21:40:21 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-5d39</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-5d39</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-could-do-this-better-than-you"&gt;
  &lt;/a&gt;
  Who could do this better than you?
&lt;/h2&gt;

&lt;p&gt;When it comes to being an ally at your company, &lt;a class="mentioned-user" href="https://dev.to/josefine"&gt;@josefine&lt;/a&gt; says nobody! It's time to place being an empathetic and purpose-driven team member at the top of our list of 2022 resolutions. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/josefine" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ieDxR7-Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0vXjIZbl--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/346852/7f60ac10-beec-4ac9-804c-ce508de15d09.jpeg" alt="josefine"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/josefine/how-to-be-an-ally-in-2022-2521" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to be a better Ally in 2022&lt;/h2&gt;
      &lt;h3&gt;Josefine Schfr „Éª Jan 6 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#ally&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#improving-performance-and-preventing-memory-leaks"&gt;
  &lt;/a&gt;
  Improving performance and preventing memory leaks
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/jeremiahjacinth13"&gt;@jeremiahjacinth13&lt;/a&gt; defines memory links, identifies why they are a problem, and illustrates how AbortControllers are the way forward.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jeremiahjacinth13" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---u06PXFw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--l_-umLZG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/647606/3ad2b58a-0306-4d72-8ac1-7be1003682a2.jpg" alt="jeremiahjacinth13"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jeremiahjacinth13/memory-leaks-how-to-avoid-them-in-a-react-app-1g5e" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Memory Leaks, How to avoid them in a React App.&lt;/h2&gt;
      &lt;h3&gt;Lena Jeremiah „Éª Jan 8 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#five-different-ways-of-centering-vertically-and-horizontally-with-htmlcss"&gt;
  &lt;/a&gt;
  Five different ways of centering vertically and horizontally with HTML+CSS
&lt;/h2&gt;

&lt;p&gt;"[...] presented in chronological order: from how it was done in the past (which we should avoid now) to the modern ways of centering content in the present."&lt;/p&gt;

&lt;p&gt;Super helpful, &lt;a class="mentioned-user" href="https://dev.to/alvaromontoro"&gt;@alvaromontoro&lt;/a&gt;!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/alvaromontoro" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ekLisLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--aTV3h--8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/161327/2ff05281-db58-4dcb-946a-4b679e4a266b.jpeg" alt="alvaromontoro"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/alvaromontoro/centering-vertically-and-horizontally-with-css-3hbk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Centering vertically and horizontally with CSS&lt;/h2&gt;
      &lt;h3&gt;Alvaro Montoro „Éª Jan 7 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#system-design-interview-prep"&gt;
  &lt;/a&gt;
  System design interview prep
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/hellonehha"&gt;@hellonehha&lt;/a&gt; breaks down the why and how of addressing system design in your next front end developer interview. This post is really clear and useful ‚≠êÔ∏è &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/hellonehha" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dsw8r74h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--J1XD4o8z--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/118962/382c4db7-91d3-4e27-9cd5-a1e0331587b0.jpg" alt="hellonehha"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/hellonehha/system-design-guide-for-front-end-developers-5fkl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;System Design Guide for Front-end Developers&lt;/h2&gt;
      &lt;h3&gt;Neha Sharma  „Éª Jan 6 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#systemdesign&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#developers&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#even-devs-with-10-years-of-experience-learn-new-things-every-day"&gt;
  &lt;/a&gt;
  Even devs with 10 years of experience learn new things every day!
&lt;/h2&gt;

&lt;p&gt;And &lt;a class="mentioned-user" href="https://dev.to/inhuofficial"&gt;@inhuofficial&lt;/a&gt; is no exception. This look at four and 8 digit HEX codes beautifully illustrates that there is still so much to learn and many misconceptions to break through ‚Äî even if you have loads of software development experience!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/hold-on-there-are-4-and-8-digit-hex-codes-for-colours-261i" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Did you know there are 4 and 8 digit hex codes (#11223344?) for colours? ü§Ø&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Jan 6 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-abcs-of-mvps"&gt;
  &lt;/a&gt;
  The ABCs of MVPs
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/andrewbaisden"&gt;@andrewbaisden&lt;/a&gt; explains the concept of a Minimum Viable Product (MVP) and breaks down a sample process by which a team would build a product. Super interesting! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/andrewbaisden" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImefG40g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4mECD9KD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/333889/41951944-ed4b-416b-81b9-241f9be01ff2.png" alt="andrewbaisden"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/andrewbaisden/how-to-launch-a-minimum-viable-product-mvp-in-2022-5hig" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to launch a Minimum viable product (MVP) in 2022&lt;/h2&gt;
      &lt;h3&gt;Andrew Baisden „Éª Jan 7 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#tiny-url-big-takeaways"&gt;
  &lt;/a&gt;
  Tiny URL, big takeaways
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/jerrynsh"&gt;@jerrynsh&lt;/a&gt; built a URL shortener using Cloudflare Worker and learned a lot in the process. Take a look at this proof-of-concept...&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jerrynsh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BT5_H_fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2qhIoYnp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/328573/4f7d2e37-25e5-417e-a642-914497b73a1f.JPG" alt="jerrynsh"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jerrynsh/i-built-my-own-tinyurl-heres-how-i-did-it-11ah" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I Built My Own TinyURL. Here‚Äôs How I Did It&lt;/h2&gt;
      &lt;h3&gt;Jerry Ng „Éª Jan 8 „Éª 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly Top 7 for this Tuesday! Keep an eye on dev.to this week for daily content and discussions...and be sure to keep an eye on this series in the future. You might just be in it!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Choosing a database instance class in AWS with the maximum simultaneous connexions</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 11 Jan 2022 21:20:13 +0000</pubDate>
      <link>https://dev.to/adaendra/choosing-a-database-instance-class-in-aws-with-the-maximum-simultaneous-connexions-44lp</link>
      <guid>https://dev.to/adaendra/choosing-a-database-instance-class-in-aws-with-the-maximum-simultaneous-connexions-44lp</guid>
      <description>&lt;p&gt;It's not always simple to know which kind of instance type we need in AWS for a database. So here is a point of view to help you in your choice : with the maximum simultaneous connexions possible.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(This tips can also be used to know which engine you want to use depending if you need a really high number)&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#before-going-further"&gt;
  &lt;/a&gt;
  Before going further
&lt;/h2&gt;

&lt;p&gt;To be able to do the calculations, we need to know :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;where we can found the list of memory size for each kind of instance &lt;/li&gt;
&lt;li&gt;and how to convert a &lt;strong&gt;GiB&lt;/strong&gt; in &lt;strong&gt;bytes&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#memory-size-of-each-kind-of-instance"&gt;
  &lt;/a&gt;
  Memory size of each kind of instance
&lt;/h3&gt;

&lt;p&gt;For that point, please check the AWS documentation : &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#Concepts.DBInstanceClass.Summary"&gt;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#Concepts.DBInstanceClass.Summary&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-convert-a-gib-in-bytes"&gt;
  &lt;/a&gt;
  How to convert a &lt;strong&gt;GiB&lt;/strong&gt; in &lt;strong&gt;bytes&lt;/strong&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;1 GiB = 1 073 741 824 bytes&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#mariadb-amp-mysql"&gt;
  &lt;/a&gt;
  MariaDB &amp;amp; MySQL
&lt;/h2&gt;

&lt;p&gt;Following the AWS Documentation (&lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.MaxConnections"&gt;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.MaxConnections&lt;/a&gt;), the calcultation of the max connections is : &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;DB Instance Class Memory / 12 582 880&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Where &lt;strong&gt;DB Instance Class Memory&lt;/strong&gt; is the memory size in bytes of an instance type.&lt;/p&gt;

&lt;p&gt;It's maximum value is &lt;strong&gt;100 000&lt;/strong&gt; for MySQL and MariaDB, but if the value is greater than &lt;strong&gt;16 000&lt;/strong&gt; AWS RDS set it to &lt;strong&gt;16 000&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So for a db.m5.xlarge instance :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;16 GiB / 12 582 880&lt;/em&gt;&lt;br&gt;
&lt;em&gt;16 * 1 073 741 824 / 12 582 880&lt;/em&gt;&lt;br&gt;
&lt;em&gt;17 179 869 184 / 12 582 880&lt;/em&gt;&lt;br&gt;
&lt;em&gt;1 365 simultaneous connexions&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#oracle"&gt;
  &lt;/a&gt;
  Oracle
&lt;/h2&gt;

&lt;p&gt;Following the AWS Documentation (&lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.MaxConnections"&gt;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.MaxConnections&lt;/a&gt;), we can setup the maximum of &lt;strong&gt;sessions&lt;/strong&gt; between &lt;strong&gt;100 - 65 535&lt;/strong&gt; manually.&lt;/p&gt;

&lt;p&gt;But here it's the number of processes which depends of the instance class. Here is the calculation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;LEAST((DB Instance Class Memory / 9 868 951), 20 000)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So for a db.m5.xlarge instance :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;LEAST((16 GiB / 9 868 951), 20 000)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;LEAST((16 * 1 073 741 824 / 9 868 951), 20 000)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;LEAST((17 179 869 184 / 9 868 951), 20 000)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;LEAST(1 740, 20 000)&lt;/em&gt;&lt;br&gt;
1 740 processes&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#postgresql"&gt;
  &lt;/a&gt;
  PostgreSQL
&lt;/h2&gt;

&lt;p&gt;Following the AWS Documentation (&lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.MaxConnections"&gt;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.MaxConnections&lt;/a&gt;), the calculation is :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;LEAST((DB Instance Class Memory / 9 531 392), 5 000)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So for a db.m5.xlarge instance :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;LEAST((16 GiB / 9 531 392), 5 000)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;LEAST((16 * 1 073 741 824 / 9 531 392), 5 000)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;LEAST((17 179 869 184 / 9 531 392), 5 000)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;LEAST(1 802, 5 000)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;1 802 simultaneous connexions&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#sql-server"&gt;
  &lt;/a&gt;
  SQL Server
&lt;/h2&gt;

&lt;p&gt;In AWS, by default, the maximum number of concurrent connections is &lt;strong&gt;unlimited&lt;/strong&gt;.&lt;/p&gt;




&lt;p&gt;I hope it will help you! üç∫&lt;/p&gt;

</description>
    </item>
    <item>
      <title>PlaneIt - One link to everywhere!</title>
      <author>Adithya Vardhan</author>
      <pubDate>Tue, 11 Jan 2022 21:12:20 +0000</pubDate>
      <link>https://dev.to/imadithya/planeit-one-link-to-everywhere-4dj8</link>
      <guid>https://dev.to/imadithya/planeit-one-link-to-everywhere-4dj8</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;Have you ever felt that there should be a solution to the never-ending task of bookmarking at the start of every semester or finding each lecture link via email/whatsapp for the first 5 minutes of a lecture during online classes?&lt;/p&gt;

&lt;p&gt;Well &lt;strong&gt;PlaneIt&lt;/strong&gt; is that very solution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-what-does-planeit-exactly-do"&gt;
  &lt;/a&gt;
  So what does PlaneIt exactly do?
&lt;/h3&gt;

&lt;p&gt;PlaneIt is a schedule automator. It basically stores all the links of your lecture classes, regular online meets or literally any link of your choice which you want to open at a specific point of time. Then it stores all these details on &lt;strong&gt;MongoDB's Serverless Atlas Database&lt;/strong&gt; and provides you a simple link which you can use to fly your way to all the scheduled events!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sounds-interesting-what-all-do-i-need-to-signup"&gt;
  &lt;/a&gt;
  Sounds interesting... What all do I need to signup?
&lt;/h3&gt;

&lt;p&gt;Hmmm... nothing! All you need is a Google Account, no username-password creation. Just sign-in and set your schedule in the colorful-and-friendly UI inspired by Google.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enough-talking-give-me-the-link"&gt;
  &lt;/a&gt;
  Enough talking, give me the link
&lt;/h3&gt;

&lt;p&gt;Ah, here you go: &lt;a href="https://planeee-it.herokuapp.com/"&gt;&lt;strong&gt;PlaneIt&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;[This might take a moment to load because of heroku, pardon me for that!]&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#side-note-other-use-cases"&gt;
  &lt;/a&gt;
  Side Note - Other Use Cases
&lt;/h3&gt;

&lt;p&gt;If you are a schedule freak like me who lists down every single to-do before going work, this can also motivate you to make that colorful schedule of yours! Go automate your schedule now!!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Also, just in case if you are worrying, PlaneIt is responsive enough to work on mobile devices and iPads too ;)&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Automation Innovation&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/im-adithya"&gt;
        im-adithya
      &lt;/a&gt; / &lt;a href="https://github.com/im-adithya/PlaneIt"&gt;
        PlaneIt
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
   &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/64399555/149007909-cabd7ea4-63fe-473a-8ba8-59dee1b2a3ea.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CZcOzg_e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/64399555/149007909-cabd7ea4-63fe-473a-8ba8-59dee1b2a3ea.jpg"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
PlaneIt&lt;/h1&gt;

&lt;p&gt;Set your schedule and fly on your Paper Plane. Forget bookmarking!&lt;/p&gt;

&lt;p&gt;Try it out &lt;a href="https://planeee-it.herokuapp.com/" rel="nofollow"&gt;here! ‚úà&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
How It Works&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;First, login using your Google Account&lt;/li&gt;
&lt;li&gt;Now, set your schedule by clicking on the tabs&lt;/li&gt;
&lt;li&gt;Then click on save to store your weekly schedule&lt;/li&gt;
&lt;li&gt;Now you'll get a single link that can get you anywhere&lt;/li&gt;
&lt;li&gt;As the time of the meeting is stored, the link can redirect you to the correct meeting without any hassle!&lt;/li&gt;
&lt;li&gt;No more bookmarking of each and every lecture class anymore! Just one link to all!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Login instantly with Google Sign-In&lt;/li&gt;
&lt;li&gt;Colorful (Google-inspired) UI to set your schedule&lt;/li&gt;
&lt;li&gt;Redirect to your scheduled meet using a single link&lt;/li&gt;
&lt;li&gt;View your upcoming lectures on the home screen&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Note&lt;/h2&gt;

&lt;p&gt;This project is made as a submission for &lt;strong&gt;MongoDB Atlas Hackathon&lt;/strong&gt; under the category: &lt;strong&gt;Automation Innovation&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/im-adithya/PlaneIt"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;This uses the famous &lt;code&gt;react-google-login&lt;/code&gt; &lt;a href="https://www.npmjs.com/package/react-google-login"&gt;package&lt;/a&gt; by &lt;a href="https://github.com/anthonyjgrove"&gt;Anthony Grove&lt;/a&gt; to ease the Google Login process.&lt;br&gt;
Also thanks to &lt;strong&gt;MongoDB&lt;/strong&gt; for making a seamless database service for CRUD operations with Atlas Serverless!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9irIK2Xc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lc18jidewy9ql565pnr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9irIK2Xc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lc18jidewy9ql565pnr.png" alt="Landing Page" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8THfbMJU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exfhedni683zxycfuj0x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8THfbMJU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exfhedni683zxycfuj0x.png" alt="Schedule Page" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kRlgwT-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgkl6tfuvrflqa9n26k9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kRlgwT-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgkl6tfuvrflqa9n26k9.png" alt="Set Screen" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kA7h-x2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2a6147ov8jyyogp9ywyx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kA7h-x2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2a6147ov8jyyogp9ywyx.png" alt="Home Screen" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>react</category>
      <category>mongodb</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Why mentorship?</title>
      <author>Kirk Fernandes</author>
      <pubDate>Tue, 11 Jan 2022 20:44:55 +0000</pubDate>
      <link>https://dev.to/merit/why-mentorship-230o</link>
      <guid>https://dev.to/merit/why-mentorship-230o</guid>
      <description>&lt;p&gt;Growing your career in tech is hard, but it‚Äôs a lot more manageable when you have people to talk to about problems and get advice. There is where mentors come in. A mentor can be anyone who has some experience and wants to talk to you.&lt;/p&gt;

&lt;p&gt;But often finding a mentor and getting the most out of mentorship is harder than it needs to be. After facilitating thousands of hours of mentorship, &lt;a href="https://www.get-merit.com/"&gt;Merit&lt;/a&gt; has collected some tips and tricks for getting the most out of mentorship.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is mentorship?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mentorship is a way to grow your career and a more meaningful way to network in the industry.&lt;/p&gt;

&lt;p&gt;But ‚Äúmentorship‚Äù is also a loaded term. It could mean anything from asking for help in one difficult situation to building a long-term relationship where the mentor coaches and leads the mentee. The type of relationship or structure is dependent on what you want to get out of it: a session to get feedback, a long-term mentor over a period of months, or to chat every week or month.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to pick a mentor?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Talk to many people; sometimes you won‚Äôt know who will be helpful until you talk to them. It takes multiple perspectives and people to grow your career.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Having multiple mentors also takes the pressure off anyone single person to be responsible for your progress or momentum.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be flexible on the role ‚Äî sometimes people outside your role and discipline can still have great advice.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Where to find mentors?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you already have an established network:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Current or former coworkers&lt;/strong&gt;: Especially if they are someone more senior whom you admire.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;School or alumni groups&lt;/strong&gt;: People who‚Äôve graduated or even peers can make good mentors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Community groups&lt;/strong&gt;: There are lots of community groups that are based around roles, location, or identities (e.g., Out in Tech, Ladies Get Paid, Black Girls Code) that have lots of senior people to talk to.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are looking to expand your network, here are some places to explore:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;LinkedIn&lt;/strong&gt;: This is the largest network but the hardest to navigate and connect with. The odds of someone responding to your cold DMs are low, but everyone has a LinkedIn profile.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Twitter&lt;/strong&gt;: &lt;a href="https://hanamakhlouf.medium.com/4-reasons-to-get-on-tech-twitter-now-cafc020ad5d8"&gt;There is tech twitter&lt;/a&gt;. Tech Twitter is smaller than LinkedIn, but you can still get a sense of someone‚Äôs thinking and personality. Like on LinkedIn, you can still DM folks. &lt;br&gt;
Here there‚Äôs a higher chance of them responding, but the odds are still low.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mentorship platforms&lt;/strong&gt;: On mentorship platforms, mentors have profiles, topics they‚Äôre happy to discuss with you, and a schedule of their availability. These platforms have fewer people than other social networks, but the folks on these platforms are specifically there to mentor so you‚Äôre much more likely to hear back after reaching out.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How do I approach mentorship sessions?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Be specific&lt;/strong&gt;: With the time (e.g., 30 minutes) and the topic (i.e., ‚ÄúI would love some advice on how to ask my boss for a promotion to Senior PM‚Äù). This allows the other person to prepare but also approach the session with ideas before it starts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Share context&lt;/strong&gt;: When asking for advice on a problem or situation, provide background on the issue and what you‚Äôve tried as well as the context of your team and company. All this information helps the mentor adjust and tune their advice.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Respect people‚Äôs time&lt;/strong&gt;: Once you commit to a date and time, send any relevant materials in advance and be sure to arrive and end on time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Listen&lt;/strong&gt;: This is the most important part! People want to help people who listen to advice and suggestions. Try to soak in as much as possible. Ask follow-up and clarifying questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Say thanks and follow up&lt;/strong&gt;: This is a very common thing that most people don‚Äôt do. First, just send a note to say thank you. Follow up in a week or month after you‚Äôve tried the things your mentor suggested. It doesn‚Äôt have to always be good news or major things but just a simple note is enough to help close the loop.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to maintain mentorship longer term?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Over a long period of time, we are all co-workers. Mentorship never truly ends; it just transforms. Sometimes you talk to someone once or twice, or regularly for a few months, or once in a while over many years. There is no one-size-fits-all approach to mentorship. A good way to think about it is to give more than you take and to approach each interaction with empathy and openness.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Offer to help&lt;/strong&gt;: Just because you are a junior doesn‚Äôt mean you can‚Äôt help. Often times more senior folks want to learn from you, your process, your insights, and your network.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mentorship and recruiting overlap&lt;/strong&gt;: Hiring managers and tech workers are getting more hip to taking a longer view on these kinds of relationships. Your mentees or mentors now could be someone you work for or works for you later. The line between recruiting and mentorship is being blurred.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are looking for a mentor in product, design, or engineering. &lt;a href="https://www.get-merit.com/"&gt;Merit&lt;/a&gt; has hundreds of mentors that are available to talk to.&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>CommonJS vs. ES modules in Node.js</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 11 Jan 2022 20:31:16 +0000</pubDate>
      <link>https://dev.to/logrocket/commonjs-vs-es-modules-in-nodejs-2eo1</link>
      <guid>https://dev.to/logrocket/commonjs-vs-es-modules-in-nodejs-2eo1</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/kingsleyubah/"&gt;Kingsley Ubah&lt;/a&gt;&lt;/strong&gt; ‚úèÔ∏è&lt;/p&gt;

&lt;p&gt;In modern software development, modules organize software code into self-contained chunks that together make up a larger, more complex application.&lt;/p&gt;

&lt;p&gt;In the browser JavaScript ecosystem, the use of JavaScript modules depends on the &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements; these statements load and export EMCAScript modules (or ES modules), respectively.&lt;/p&gt;

&lt;p&gt;The ES module format is the official standard format to package JavaScript code for reuse and most modern web browsers natively support the modules.&lt;/p&gt;

&lt;p&gt;Node.js, however, supports the CommonJS module format by default. CommonJS modules load using &lt;code&gt;require()&lt;/code&gt;, and variables and functions export from a CommonJS module with &lt;code&gt;module.exports&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The ES module format was introduced in &lt;a href="https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V8.md#8.5.0"&gt;Node.js v8.5.0&lt;/a&gt; as the JavaScript module system was standardized. Being an experimental module, the &lt;code&gt;--experimental-modules&lt;/code&gt; flag was required to successfully run an ES module in a Node.js environment.&lt;/p&gt;

&lt;p&gt;However, starting with version 13.2.0, Node.js has stable support of ES modules.&lt;/p&gt;

&lt;p&gt;This article won‚Äôt to cover much on the usage of both module formats, but rather how CommonJS compares to ES modules and why you might want to use one over the other.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing-commonjs-modules-and-es-modules-syntax"&gt;
  &lt;/a&gt;
  Comparing CommonJS modules and ES modules syntax
&lt;/h2&gt;

&lt;p&gt;By default, Node.js treats JavaScript code as CommonJS modules. Because of this, CommonJS modules are characterized by the &lt;code&gt;require()&lt;/code&gt; statement for module imports and &lt;code&gt;module.exports&lt;/code&gt; for module exports.&lt;/p&gt;

&lt;p&gt;For example, this is a CommonJS module that exports two functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtract&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also import the public functions into another Node.js script using &lt;code&gt;require()&lt;/code&gt;, just as we do here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./util&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are looking for a more in-depth &lt;a href="https://blog.logrocket.com/es-modules-in-node-today/#commonjsmodulesystem"&gt;tutorial on CommonJS modules, check this out&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On the other hand, library authors can also simply enable ES modules in a Node.js package by changing the file extensions from &lt;code&gt;.js&lt;/code&gt; to &lt;code&gt;.mjs.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For example, here's a simple ES module (with an &lt;code&gt;.mjs&lt;/code&gt; extension) exporting two functions for public use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// util.mjs&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can then import both functions using the &lt;code&gt;import&lt;/code&gt; statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// app.mjs&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./util.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another way to enable ES modules in your project can be done by adding a &lt;code&gt;"type: module"&lt;/code&gt; field inside the nearest &lt;code&gt;package.json&lt;/code&gt; file (the same folder as the package you‚Äôre making):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;my-library&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.0.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that inclusion, Node.js treats all files inside that package as ES modules, and you won‚Äôt have to change the file to &lt;code&gt;.mjs&lt;/code&gt; extension. You can &lt;a href="https://blog.logrocket.com/how-to-use-ecmascript-modules-with-node-js/"&gt;learn more about ES modules here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Alternatively, you can install and set up a &lt;a href="https://www.youtube.com/watch?v=7vGk8vFDGfA"&gt;transpiler like Babel to compile your ES module syntax down to CommonJS syntax&lt;/a&gt;. Projects like React and Vue support ES modules because they use &lt;a href="https://blog.logrocket.com/babel-vs-typescript/"&gt;Babel under the hood to compile the code&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons-of-using-es-modules-and-commonjs-modules-in-nodejs"&gt;
  &lt;/a&gt;
  Pros and cons of using ES modules and CommonJS modules in Node.js
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#es-modules-are-the-standard-for-javascript-while-commonjs-is-the-default-in-nodejs"&gt;
  &lt;/a&gt;
  ES modules are the standard for JavaScript, while CommonJS is the default in Node.js
&lt;/h3&gt;

&lt;p&gt;The ES module format was created to standardize the JavaScript module system. It has become the standard format for encapsulating JavaScript code for reuse.&lt;/p&gt;

&lt;p&gt;The CommonJS module system, on the other hand, is built into Node.js. Prior to the introduction of the ES module in Node.js, CommonJS was the standard for Node.js modules. As a result, there are plenty of Node.js libraries and modules written with CommonJS.&lt;/p&gt;

&lt;p&gt;For browser support, all major browsers support the ES module syntax and you can use &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt; in frameworks like React and Vue.js. These frameworks uses a transpiler like Babel to compile the &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt; syntax down to &lt;code&gt;require()&lt;/code&gt;, which older Node.js versions natively support.&lt;/p&gt;

&lt;p&gt;Apart from being the standard for JavaScript modules, the ES module syntax is also much more readable compared to &lt;code&gt;require()&lt;/code&gt;. Web developers who primarily write JavaScript on the client will have no issues working with Node.js modules thanks to the identical syntax.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodejs-support-for-es-modules"&gt;
  &lt;/a&gt;
  Node.js support for ES modules
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#older-nodejs-versions-dont-support-es-modules"&gt;
  &lt;/a&gt;
  Older Node.js versions don‚Äôt support ES modules
&lt;/h4&gt;

&lt;p&gt;While ES modules have become the standard module format in JavaScript, developers should consider that older versions of Node.js lack support (specifically Node.js v9 and under).&lt;/p&gt;

&lt;p&gt;In other words, using ES modules render an application incompatible with earlier versions of Node.js that only support CommonJS modules (that is, the &lt;code&gt;require()&lt;/code&gt; syntax).&lt;/p&gt;

&lt;p&gt;But with the new conditional exports, we can build dual-mode libraries. These are libraries that are composed of the newer ES modules, but they are also backward-compatible with the CommonJS module format supported by older Node.js versions.&lt;/p&gt;

&lt;p&gt;In other words, we can build a library that supports both &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;require()&lt;/code&gt;, allowing us solve the issue of incompatibility.&lt;/p&gt;

&lt;p&gt;Consider the following Node.js project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;library&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;lib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;iife&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commonjs&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mjs&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;es6&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="kr"&gt;private&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;       &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;       &lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mjs&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="kr"&gt;package&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;
&lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="err"&gt;‚Ä¶&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside &lt;code&gt;package.json&lt;/code&gt;, we can use the &lt;code&gt;exports&lt;/code&gt; field to export the public module (&lt;code&gt;module-a&lt;/code&gt;) in two different module formats while resticting access to the private module (&lt;code&gt;module-b&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// package.json&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;my-library&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;exports&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;browser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;default&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./lib/browser-module.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module-a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;import&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./lib/module-a.mjs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;require&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./lib/module-a.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By providing the following information about our &lt;code&gt;my-library&lt;/code&gt; package, we can now use it anywhere it is supported like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// For CommonJS &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;moduleA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-library/module-a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// For ES6 Module&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;moduleA&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-library/module-a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// This will not work&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;moduleA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-library/lib/module-a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;moduleA&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-awesome-lib/lib/public-module-a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;moduleB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-library/private/module-b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;moduleB&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-library/private/module-b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because of the paths in &lt;code&gt;exports&lt;/code&gt;, we can import (and &lt;code&gt;require()&lt;/code&gt;) our public modules without specifying absolute paths.&lt;/p&gt;

&lt;p&gt;By including paths for &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.mjs&lt;/code&gt;, we can solve the issue of incompatibility; we can map package modules for different environments like the browser and Node.js while restricting access to private modules.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#newer-nodejs-versions-fully-support-es-modules"&gt;
  &lt;/a&gt;
  Newer Node.js versions fully support ES modules
&lt;/h4&gt;

&lt;p&gt;In most lower Node.js versions, the ES module is marked as experimental. This means that the module lacks some features and is behind the &lt;code&gt;--experimental-modules&lt;/code&gt; flag. Newer versions of Node.js do have stable support for ES modules.&lt;/p&gt;

&lt;p&gt;However, it‚Äôs important to remember that for Node.js to treat a module as an ES module, one of the following must happen: either the module‚Äôs file extension must convert from &lt;code&gt;.js&lt;/code&gt; (for CommonJS) to &lt;code&gt;.mjs&lt;/code&gt; (for ES modules) or we must set a &lt;code&gt;{"type":&lt;/code&gt; &lt;code&gt;"module"}&lt;/code&gt; field in the nearest &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;In this case, all code in that package will be treated as ES modules and the &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt; statements should be used instead of &lt;code&gt;require()&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commonjs-offers-flexibility-with-module-imports"&gt;
  &lt;/a&gt;
  CommonJS offers flexibility with module imports
&lt;/h3&gt;

&lt;p&gt;In an ES module, the import statement can only be called at the beginning of the file. Calling it anywhere else automatically shifts the expression to the file beginning or can even throw an error.&lt;/p&gt;

&lt;p&gt;On the other hand, with &lt;code&gt;require()&lt;/code&gt; as a function, gets parsed at runtime. As a result, &lt;code&gt;require()&lt;/code&gt; can be called anywhere in the code. You can use it to load modules conditionally or dynamically from &lt;code&gt;if&lt;/code&gt; statements, conditional loops, and functions.&lt;/p&gt;

&lt;p&gt;For example, you can call &lt;code&gt;require()&lt;/code&gt; inside a conditional statement like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userDetails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‚Äò&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;userDetails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="err"&gt;‚Äô&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// Do something ..&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we load a module called &lt;code&gt;userDetails&lt;/code&gt; only if a user is present.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commonjs-loads-modules-synchronously-es-modules-are-asynchronous"&gt;
  &lt;/a&gt;
  CommonJS loads modules synchronously, ES modules are asynchronous
&lt;/h3&gt;

&lt;p&gt;One of the limitations of using &lt;code&gt;require()&lt;/code&gt; is that it loads modules synchronously. This means that modules are loaded and processed one by one.&lt;/p&gt;

&lt;p&gt;As you might have guessed, this can pose a few performance issues for large-scale applications that hundreds of modules. In such a case, &lt;code&gt;import&lt;/code&gt; might outperform &lt;code&gt;require()&lt;/code&gt; based on its asynchronous behavior.&lt;/p&gt;

&lt;p&gt;However, the synchronous nature of &lt;code&gt;require()&lt;/code&gt; might not be much of a problem for a small-scale application using a couple of modules.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-commonjs-or-es-modules"&gt;
  &lt;/a&gt;
  Conclusion: CommonJS or ES modules?
&lt;/h2&gt;

&lt;p&gt;For developers who still use an older version of Node.js, using the new ES module would be impractical.&lt;/p&gt;

&lt;p&gt;Because of the sketchy support, converting an existing project to the ES modules would render the application incompatible with earlier versions of Node.js that only support CommonJS modules (that is, the &lt;code&gt;require()&lt;/code&gt; syntax).&lt;/p&gt;

&lt;p&gt;Thus, migrating your project to use ES modules may not be particularly beneficial.&lt;/p&gt;

&lt;p&gt;As a beginner, it can be beneficial and convenient to learn about ES modules given that they are becoming the standard format for defining modules in JavaScript for both client side (browser) and server side (Node.js).&lt;/p&gt;

&lt;p&gt;For new Node.js projects, ES modules provide an alternative to CommonJS. The ES modules format does offer an easier route to writing isomorphic JavaScript, which can run in either the browser or on a server.&lt;/p&gt;

&lt;p&gt;In all, EMCAScript modules are the future of JavaScript.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#200s-only-heavycheckmark-monitor-failed-and-slow-network-requests-in-production"&gt;
  &lt;/a&gt;
  200‚Äôs only ‚úîÔ∏è Monitor failed and slow network requests in production
&lt;/h2&gt;

&lt;p&gt;Deploying a Node-based web app or website is the easy part. Making sure your Node instance continues to serve resources to your app is where things get tougher. If you‚Äôre interested in ensuring requests to the backend or third party services are successful, &lt;a href="https://logrocket.com/signup/"&gt;try LogRocket&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zhbpx-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2019/12/network-request-filter-2-1.png" alt="LogRocket Network Request Monitoring" width="880" height="348"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens on your site. Instead of guessing why problems happen, you can aggregate and report on problematic network requests to quickly understand the root cause.&lt;/p&gt;

&lt;p&gt;LogRocket instruments your app to record baseline performance timings such as page load time, time to first byte, slow network requests, and also logs Redux, NgRx, and Vuex actions/state. &lt;a href="https://logrocket.com/signup/"&gt;Start monitoring for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>discuss</category>
    </item>
    <item>
      <title>React State Pattern | Day 8</title>
      <author>Web.Developer.io</author>
      <pubDate>Tue, 11 Jan 2022 19:28:02 +0000</pubDate>
      <link>https://dev.to/developerioweb/react-state-pattern-day-8-5e03</link>
      <guid>https://dev.to/developerioweb/react-state-pattern-day-8-5e03</guid>
      <description>&lt;h3&gt;
  &lt;a href="#recap-%E2%86%92"&gt;
  &lt;/a&gt;
  Recap ‚Üí
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;State&lt;/code&gt; ‚Üí It is a Collection of mutable values that can change over time.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;It is similar to the props whereas state can be changed but props can‚Äôt be changed.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VAWgBFx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2ywwp8a791hkfc1fhg5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VAWgBFx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2ywwp8a791hkfc1fhg5.png" alt="Goals" width="880" height="203"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#updating-existing-state-%E2%86%92"&gt;
  &lt;/a&gt;
  Updating Existing State ‚Üí
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Earlier we are Just Changing/Altering the values of State but not changing them.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs took an example u have a &lt;strong&gt;&lt;code&gt;Scorekepper&lt;/code&gt; component&lt;/strong&gt; which Increases as which make the kills ‚¨áÔ∏è&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Scorekeeper&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onKill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onKill&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;onKill&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; Score is : &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onKill&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;One KILL&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;So every time we click on the button it will update the score by 1.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But, this is not the convenient way of doing this.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;why??&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let‚Äôs have a look to the Below example In this we have button called &lt;code&gt;Three kill&lt;/code&gt; when we click on this Score only Increases by 1.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Scorekeeper&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;threeKill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;threeKill&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;threeKill&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; Score is : &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;threeKill&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Three KILL&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But why this is not working ??&lt;/p&gt;

&lt;p&gt;üéØ &lt;strong&gt;setState is Asynchronous is nature. So it is risky to assume that the previous call has finished. Also react will sometime batch(squash together) calls to setState together into one for Performance reasons.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;So as the all 3 calls were updating the same thing so on the priority basis the last one is only executed.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Look at this&lt;/strong&gt; üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;threeKill&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;The last call will run.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;If a call to setState() depends on current state it‚Äôs better to use the ‚Äúcallbacks‚Äù&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;But What are the &lt;code&gt;Callbacks ?&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They are the Function which are passed as a Argument to the another function.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nx"&gt;Like&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;works&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Your work of Day is to plant the Trees&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Good Morning &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; `&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;works&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Like in this above example we passed the log function as the callback.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When the Greet function have completes it‚Äôs execution then at the end the log function is called.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When u pass the callback not pass it with the parenths cuz we don‚Äôt want to run it now.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why we need Callbacks ??&lt;/strong&gt;&lt;br&gt;
When we are Requesting some data from the API or Database , we don‚Äôt know when the data will come , so all these process are called Asynchronous cuz they are not executed immediately.&lt;/p&gt;

&lt;p&gt;So we pass the callbacks when the function executed the the callback is called and we came to know that it has been updated.&lt;/p&gt;

&lt;p&gt;Same in the case of React the &lt;code&gt;setState&lt;/code&gt; method is Asynchronous so we can use the callbacks&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;threekill&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;currState&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;currState&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;currState&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FDvB74xT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qx417cgnpafjmi4y3ub3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDvB74xT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qx417cgnpafjmi4y3ub3.png" alt="State" width="880" height="443"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;IncTo3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currState&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;currState&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;threeKill&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IncTo3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IncTo3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IncTo3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;I know some of u are thinking that we can just do like this üòÖ&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;threeKill&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;But this only a example to tell u that &lt;code&gt;If a call to setState() depends on current state it‚Äôs better to use the ‚Äúcallbacks‚Äù&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97xnug9S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mtxr5h29qyekmfxkuyd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97xnug9S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mtxr5h29qyekmfxkuyd.png" alt="Setting State" width="880" height="283"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mutating-state-the-safe-way-%E2%86%92"&gt;
  &lt;/a&gt;
  Mutating State the safe Way ‚Üí
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p0QX68qF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32enwl5hv95bciiq9a6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p0QX68qF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32enwl5hv95bciiq9a6h.png" alt="Mutable" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;we can also define the Arrays in the state.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;u have to be extra careful while modifying the Array.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Like I have a random Number Picker which picks out the Random name and keeps them.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;NumPicker&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;defaultProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;names&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jayant&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dushyant&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nitin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gaurav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;kartik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sam &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;Randomizer&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="c1"&gt;//It will make a copy of the arr object with an extra name.&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:[...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;]]})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Random Names are :&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Randomizer&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Randomizer&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;So when u want to make changes in the Arrays , make a copy of the that and made changes in that and then pass it , to the setState.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TiuseGsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfkp6hd7pcfmtmoyfyyp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TiuseGsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfkp6hd7pcfmtmoyfyyp.png" alt="React State Summary" width="880" height="298"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zwzCScUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zaot9ehj5v16zns2jir1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zwzCScUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zaot9ehj5v16zns2jir1.png" alt="React" width="880" height="298"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For More Info u can Read this Article&lt;/strong&gt; üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/handling-state-in-react-four-immutable-approaches-to-consider-d1f5c00249d5/"&gt;Handling State in React: Four Immutable Approaches to Consider&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#designing-state"&gt;
  &lt;/a&gt;
  Designing State üòÅ
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fkrtHPt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3zqdi5ev20k57r497k5q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fkrtHPt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3zqdi5ev20k57r497k5q.png" alt="Designing" width="880" height="215"&gt;&lt;/a&gt;&lt;br&gt;
                                                                &lt;strong&gt;Minimizing State&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hnX8k4Jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uegu5gctneu2lgnv828v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnX8k4Jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uegu5gctneu2lgnv828v.png" alt="React" width="880" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BklzPvON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qr5bb5o4oxhfoyub9p0r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BklzPvON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qr5bb5o4oxhfoyub9p0r.png" alt="React" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C2nOSsnL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wheu5cle6t1dsmj96g7g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C2nOSsnL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wheu5cle6t1dsmj96g7g.png" alt="React" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Down-ward Data Flow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRt0c1xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjgtnf4ws4ja2t7z8qc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRt0c1xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjgtnf4ws4ja2t7z8qc8.png" alt="React" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The parent has to be More Statefull.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Parents should have the most of the state and they are passed using the state.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let‚Äôs take an example of to-do list&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It will have a &lt;code&gt;To-do list&lt;/code&gt; component , a &lt;code&gt;To-do&lt;/code&gt; component and in the To-do component their are many smaller Component. So what we can do is to keep all that changing data in state and pass it as a props.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sks2WjEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6f2udoc9upquwns7oum.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sks2WjEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6f2udoc9upquwns7oum.png" alt="React Design" width="880" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Coding&lt;/strong&gt; üòÑ&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Deploying a Git Subdirectory to Heroku</title>
      <author>Rodrigo Rojas</author>
      <pubDate>Tue, 11 Jan 2022 19:26:11 +0000</pubDate>
      <link>https://dev.to/crrojas88/deploying-a-git-subdirectory-to-heroku-23ld</link>
      <guid>https://dev.to/crrojas88/deploying-a-git-subdirectory-to-heroku-23ld</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qJHXSYxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fxelxnsr5iusf3fiwal.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qJHXSYxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fxelxnsr5iusf3fiwal.jpg" alt="Mutombo No Image"&gt;&lt;/a&gt;&lt;/p&gt;
Not in Heroku's house



&lt;p&gt;Deploying your app to Heroku is stressful enough. If you have a subdirectory that you want to deploy by trying to push the whole repo you're gonna have a bad time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Well why can't I deploy the whole repo?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, for starters, Heroku doesn't like that, and it'll let you know exactly why by showing you the following errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g5S2-0_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ucwc70h74soptprzypk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g5S2-0_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ucwc70h74soptprzypk.png" alt="Buildpack Error"&gt;&lt;/a&gt;&lt;/p&gt;
It's not you it's your buildpack



&lt;p&gt;My first instinct was to (cry) manually set the appropriate buildpack for a node.js server as mentioned by Heroku's &lt;a href="https://devcenter.heroku.com/articles/buildpacks"&gt;Dev Center&lt;/a&gt;. However, Heroku states that...&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By default, these buildpacks will be searched in this order until a match is detected and used to compile your app.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So there really isn't any need for me to manually set the buildpack (I did it anyways bc I'm paranoid like that).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku buildpacks:set heroku/nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now I've manually set the buildpack to Node.js and tried pushing this bad boy to Heroku (After committing of course). &lt;em&gt;Fingers crossed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TybZD2ex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uencpl11m3etwegd1i7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TybZD2ex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uencpl11m3etwegd1i7w.png" alt="Push rejected error"&gt;&lt;/a&gt;&lt;/p&gt;
Feelsbadman



&lt;p&gt;Luckily, the errors give us a clue as to what the problem is. In this case, it looks like I'm trying to deploy a repo with multiple directories. If you look at Heroku's &lt;a href="https://devcenter.heroku.com/articles/deploying-nodejs"&gt;Dev Center&lt;/a&gt; once again you'll see that:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Heroku Node.js support will only be applied when the application has a &lt;code&gt;package.json&lt;/code&gt; file in the &lt;u&gt;root directory&lt;/u&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cu0IDq3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wl69ckbpafpjr7c9ikc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cu0IDq3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wl69ckbpafpjr7c9ikc2.png" alt="Directory errors"&gt;&lt;/a&gt;&lt;/p&gt;
That's a lot of red...



&lt;p&gt;So in my case, I want to deploy one specific subdirectory that has a &lt;code&gt;package.json&lt;/code&gt; file. But instead I'm trying to deploy the entire repo which doesn't have a &lt;code&gt;package.json&lt;/code&gt; file in it and in effect making Heroku bug out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-fix"&gt;
  &lt;/a&gt;
  The Fix
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Can you just tell me what to do pls?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Sure! Let's start by assuming you've completed all the Heroku prerequisites:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g heroku
heroku login
heroku create
heroku git:remote -a my-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I was given a random name for my app by Heroku so I decided to change it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku apps:rename my-new-app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jfOIfKDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sm0c1d2p3b12x5qrum2g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jfOIfKDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sm0c1d2p3b12x5qrum2g.png" alt="Heroku rename"&gt;&lt;/a&gt;&lt;/p&gt;
What's in a name?



&lt;p&gt;Once renamed I make sure to update my git remotes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku git:remote -a my-new-app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U6toBJv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcqfjf4xat3ogl9hrjle.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6toBJv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcqfjf4xat3ogl9hrjle.png" alt="Update git remote"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now for the haymaker.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git subtree push --prefix path/to/subdirectory heroku main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBlGOPt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bywatx3ikyz8wmv18mek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBlGOPt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bywatx3ikyz8wmv18mek.png" alt="Git subtree error"&gt;&lt;/a&gt;&lt;/p&gt;
sigh



&lt;p&gt;Well this is embarrassing. Looks like I need to run this command from the top level of the working tree. A couple of &lt;code&gt;cd ..&lt;/code&gt;'s later and...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nAG37YoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxj79stdxzp7c8qei8k0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nAG37YoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxj79stdxzp7c8qei8k0.png" alt="Heroku enumerating"&gt;&lt;/a&gt;&lt;/p&gt;
Looking good so far...



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PqGppFpi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/artb0fk23pbjwb319djz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PqGppFpi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/artb0fk23pbjwb319djz.png" alt="Node.js detected"&gt;&lt;/a&gt;&lt;/p&gt;
Heroku you so smart bb



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ER5RhqG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtxe9t1obqzohut8nbq6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ER5RhqG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtxe9t1obqzohut8nbq6.png" alt="Heroku success"&gt;&lt;/a&gt;&lt;/p&gt;
Success!



&lt;p&gt;You have now successfully deployed your subdirectory to Heroku! Thanks for reading!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bUPc9LLx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.pinimg.com/originals/49/b8/14/49b814d695051f4b35d0ffb6d4d4b9c7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bUPc9LLx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.pinimg.com/originals/49/b8/14/49b814d695051f4b35d0ffb6d4d4b9c7.gif" alt="Jim Carey beautiful"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#extra-credit-npmscripts"&gt;
  &lt;/a&gt;
  Extra Credit: npm-scripts
&lt;/h2&gt;

&lt;p&gt;Kudos if you're still reading. Let's say that I want to make changes to my app's frontend and backend and deploy to Heroku. Writing...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git subtree push --prefix path/to/subdirectory heroku main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...is too verbose for my taste so I'm going to add some npm-scripts to the &lt;code&gt;package.json&lt;/code&gt; of my backend repo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build:ui&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rm -rf build &amp;amp;&amp;amp; cd ../../part2/phonebook-frontend &amp;amp;&amp;amp; npm run build --prod &amp;amp;&amp;amp; cp -r build ../../part3/phonebook-backend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deploy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;git subtree push --prefix part3/phonebook-backend heroku main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deploy:full&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;npm run build:ui &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m uibuild &amp;amp;&amp;amp; git push &amp;amp;&amp;amp; npm run deploy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logs:prod&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;heroku logs --tail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The script &lt;code&gt;npm run build:ui&lt;/code&gt; builds the frontend, then copies the production version under the backend repository.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run deploy&lt;/code&gt; pushes the current backend to Heroku.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run deploy:full&lt;/code&gt; combines the two and has the necessary git commands to update the backend repository.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run logs:prod&lt;/code&gt; shows the heroku logs which comes in handy for debugging.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please note that the paths in the script &lt;code&gt;build:ui&lt;/code&gt; &amp;amp; &lt;code&gt;deploy&lt;/code&gt; depend on the location of repositories in your file system!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources-and-shoutouts"&gt;
  &lt;/a&gt;
  Resources and Shoutouts
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/deploying-nodejs"&gt;Deploying Node JS to Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/buildpacks"&gt;Heroku Buildpacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@porteneuve/mastering-git-subtrees-943d29a798ec"&gt;Mastering Git Subtrees&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>node</category>
      <category>tutorial</category>
      <category>git</category>
      <category>heroku</category>
    </item>
    <item>
      <title>How I've set up my new Windows development environment in 2022</title>
      <author>Tim Deschryver</author>
      <pubDate>Tue, 11 Jan 2022 19:13:15 +0000</pubDate>
      <link>https://dev.to/this-is-learning/how-ive-set-up-my-new-windows-development-environment-in-2022-5h42</link>
      <guid>https://dev.to/this-is-learning/how-ive-set-up-my-new-windows-development-environment-in-2022-5h42</guid>
      <description>&lt;p&gt;Follow me on Twitter at &lt;a href="https://timdeschryver.dev/twitter"&gt;@tim_deschryver&lt;/a&gt; | Subscribe to the &lt;a href="https://timdeschryver.dev/newsletter"&gt;Newsletter&lt;/a&gt; | Originally published on &lt;a href="https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022"&gt;timdeschryver.dev&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;In the first week of 2022, I had the joy to receive a new machine from my new employer &lt;a href="https://www.dotnetlab.eu/"&gt;dotNET lab&lt;/a&gt;. In just a few hours I was up and running, let's take a look at my setup as a full-stack .NET and Angular developer.&lt;/p&gt;

&lt;p&gt;Getting a new "toy" is always exciting but it's a double feeling because a new development environment involves manual work (remember what software to download, browse to the download page, step-through the install wizard), which is time-consuming. The last time that I configured my machine is a couple of years ago, and I remember that there were lots of sighs involved.&lt;br&gt;
This time, a lot in the Windows eco-system has changed. In comparison to the previous time, it was a breeze, making this a fun experience!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#install-software-with-raw-winget-endraw-"&gt;
  &lt;/a&gt;
  Install Software with &lt;code&gt;winget&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;After the initial installation (and updates), the first step is to make sure that &lt;code&gt;winget&lt;/code&gt; is installed, and that it's updated to the latest version. You can do this by going to the Microsoft Store and searching for &lt;code&gt;winget&lt;/code&gt; (in the store it's listed as "App Installer").&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LSurqI0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/winget.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LSurqI0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/winget.png" alt="Installing winget via the Microsoft Store" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;winget&lt;/code&gt; has two important commands &lt;code&gt;winget search&lt;/code&gt; to search for software, and &lt;code&gt;winget install&lt;/code&gt; to install the software. When using the &lt;code&gt;install&lt;/code&gt; command, note that you can pass it the &lt;code&gt;interactive&lt;/code&gt; flag to intervene with the installation details by changing the defaults.&lt;/p&gt;

&lt;p&gt;Once &lt;code&gt;winget&lt;/code&gt; is installed, open a new command prompt and copy-paste the next script.&lt;br&gt;
This script installs all of the software that I've used throughout the last month in a single command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Browser&lt;/span&gt;
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.Edge.Beta
winget &lt;span class="nb"&gt;install &lt;/span&gt;Google.Chrome.Beta
winget &lt;span class="nb"&gt;install &lt;/span&gt;Mozilla.Firefox.DeveloperEdition

&lt;span class="c"&gt;# Chat&lt;/span&gt;
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.Teams
winget &lt;span class="nb"&gt;install &lt;/span&gt;Discord.Discord.Canary

&lt;span class="c"&gt;# Windows and CLI&lt;/span&gt;
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.PowerToys &lt;span class="c"&gt;# https://github.com/microsoft/PowerToys&lt;/span&gt;
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.WindowsTerminal.Preview
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.PowerShell.Preview
winget &lt;span class="nb"&gt;install &lt;/span&gt;JanDeDobbeleer.OhMyPosh

&lt;span class="c"&gt;# Git&lt;/span&gt;
winget &lt;span class="nb"&gt;install &lt;/span&gt;Git.Git
winget &lt;span class="nb"&gt;install &lt;/span&gt;GitHub.cli

&lt;span class="c"&gt;# Development Enviroment&lt;/span&gt;
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.dotnet
winget &lt;span class="nb"&gt;install &lt;/span&gt;OpenJS.NodeJS
winget &lt;span class="nb"&gt;install &lt;/span&gt;Yarn.Yarn

&lt;span class="c"&gt;# IDE&lt;/span&gt;
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.VisualStudio.2022.Enterprise-Preview
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.VisualStudioCode.Insiders
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.SQLServer.2019.Developer
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.SQLServerManagementStudio
winget &lt;span class="nb"&gt;install &lt;/span&gt;Microsoft.AzureDataStudio.Insiders

winget &lt;span class="nb"&gt;install &lt;/span&gt;JetBrains.ReSharper
winget &lt;span class="nb"&gt;install &lt;/span&gt;JetBrains.Rider
winget &lt;span class="nb"&gt;install &lt;/span&gt;JetBrains.WebStorm
winget &lt;span class="nb"&gt;install &lt;/span&gt;JetBrains.DataGrip

&lt;span class="c"&gt;# Miscellaneous&lt;/span&gt;
winget &lt;span class="nb"&gt;install &lt;/span&gt;7zip.7zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above script installs the majority, but there are a few programs that need to be installed manually because they aren't available on &lt;code&gt;winget&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreybutler/nvm-windows/releases"&gt;NVM for Windows&lt;/a&gt;, easily switch between different Node.JS versions with a single command&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.gpg4win.org/download.html"&gt;Gpg4win&lt;/a&gt;, to sign git commits&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#multiple-nodejs-versions-with-raw-nvm-endraw-"&gt;
  &lt;/a&gt;
  Multiple Node.JS versions with &lt;code&gt;NVM&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;I use &lt;code&gt;nvm&lt;/code&gt; because I need to work within multiple Node.JS versions.&lt;br&gt;
Via its CLI, I can install (&lt;code&gt;nvm install&lt;/code&gt;) the required versions and easily switch (&lt;code&gt;nvm use&lt;/code&gt;) between these versions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nvm &lt;span class="nb"&gt;install &lt;/span&gt;14
nvm use 14.18.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to start the command prompt with administrator privileges enabled when you're getting errors while executing the &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt; command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dotnet-tools"&gt;
  &lt;/a&gt;
  dotNET Tools
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/dotnet/tye"&gt;Tye&lt;/a&gt; has been indispensable in my toolkit for the past year.&lt;br&gt;
I was immediately hooked from the first time when I heard about this tool.&lt;/p&gt;

&lt;p&gt;Tye makes the development experience a lot smoother when it's required to run more than one application at once.&lt;br&gt;
With a single command, all of the development instances (services, applications) are spawned locally (and can be debugged), making it effortless to run a development environment. For example, a .NET Web API and an Angular frontend.&lt;/p&gt;

&lt;p&gt;To install Tye, use the &lt;code&gt;dotnet tool install&lt;/code&gt; command and install Tye globally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet tool &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--global&lt;/span&gt; Microsoft.Tye &lt;span class="nt"&gt;--version&lt;/span&gt; 0.10.0-alpha.21420.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run Tye, a configuration file is required, so let's create one.&lt;br&gt;
The following example configures two projects (project1 and project2) that have a .NET backend and an Angular frontend.&lt;/p&gt;

&lt;p&gt;For the .NET instance, we can simply point to the &lt;code&gt;csproj&lt;/code&gt; to run the API.&lt;br&gt;
The Angular frontend is served by navigating to the Angular directory and running the serve command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MyAwesomeProject&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;project1-backend&lt;/span&gt;
    &lt;span class="na"&gt;project&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;C:/Users/timde/dev/Project1/src/Project1.Api/Project1.Api.csproj&lt;/span&gt;
    &lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;project1&lt;/span&gt;
    &lt;span class="na"&gt;bindings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https&lt;/span&gt;
        &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4061&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;project1-frontend&lt;/span&gt;
    &lt;span class="na"&gt;executable&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;cmd&lt;/span&gt;
    &lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;project1&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/c&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;cd&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;C:/Users/timde/dev/Project1-Frontend&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;npm&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;run&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;start'&lt;/span&gt;
    &lt;span class="na"&gt;bindings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https&lt;/span&gt;
        &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4200&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;project2-backend&lt;/span&gt;
    &lt;span class="na"&gt;project&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;C:/Users/timde/dev/Project2/src/Project2.Api/Project2.Api.csproj&lt;/span&gt;
    &lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;project2&lt;/span&gt;
    &lt;span class="na"&gt;bindings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https&lt;/span&gt;
        &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4062&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;project2-frontend&lt;/span&gt;
    &lt;span class="na"&gt;executable&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;cmd&lt;/span&gt;
    &lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;project2&lt;/span&gt;
    &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/c&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;cd&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;C:/Users/timde/dev/Project2-Frontend&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;npm&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;run&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;start'&lt;/span&gt;
    &lt;span class="na"&gt;bindings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https&lt;/span&gt;
        &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4300&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, I can use the &lt;code&gt;tye run&lt;/code&gt; command to run one specific project or all projects.&lt;br&gt;
By using the &lt;code&gt;watch&lt;/code&gt; flag, the application also hot reloads when a change is made to a file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# run all&lt;/span&gt;
tye run &lt;span class="nt"&gt;--watch&lt;/span&gt;
&lt;span class="c"&gt;# run a specific project&lt;/span&gt;
tye run &lt;span class="nt"&gt;--tags&lt;/span&gt; project1 &lt;span class="nt"&gt;--watch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run Tye from all directories, specify the tye config path.&lt;br&gt;
This allows me to start my development environment from everywhere, without that I have to navigate to the directory where the tye config exists.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# run all&lt;/span&gt;
tye run &lt;span class="s2"&gt;"C:&lt;/span&gt;&lt;span class="se"&gt;\U&lt;/span&gt;&lt;span class="s2"&gt;sers&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;imde&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="s2"&gt;ev&lt;/span&gt;&lt;span class="se"&gt;\w&lt;/span&gt;&lt;span class="s2"&gt;ork&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;ye.yaml"&lt;/span&gt; &lt;span class="nt"&gt;--watch&lt;/span&gt;
&lt;span class="c"&gt;# run a specific project&lt;/span&gt;
tye run &lt;span class="s2"&gt;"C:&lt;/span&gt;&lt;span class="se"&gt;\U&lt;/span&gt;&lt;span class="s2"&gt;sers&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;imde&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="s2"&gt;ev&lt;/span&gt;&lt;span class="se"&gt;\w&lt;/span&gt;&lt;span class="s2"&gt;ork&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;ye.yaml"&lt;/span&gt; &lt;span class="nt"&gt;--tags&lt;/span&gt; project1 &lt;span class="nt"&gt;--watch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tye also comes with a dashboard to see all the instances that are up and running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uoFHG42f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/tye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uoFHG42f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/tye.png" alt="Tye dashboard showing that project 1 is running" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enhancing-the-terminal"&gt;
  &lt;/a&gt;
  Enhancing the Terminal
&lt;/h2&gt;

&lt;p&gt;To make the terminal awesome, I'm using the &lt;a href="https://docs.microsoft.com/en-us/windows/terminal/"&gt;Windows Terminal&lt;/a&gt; together with &lt;a href="https://ohmyposh.dev/"&gt;Oh My Posh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I compare the Windows Terminal as the default Command Prompt on steroids that has built-in tabs, and it can be tweaked to my preferences. This makes me feel happy, resulting in an increased productivity.&lt;/p&gt;

&lt;p&gt;Via the settings of the Windows Terminal, I set the default font and the default profile, which uses PowershellCore.&lt;br&gt;
I've also added a few shortcuts to open (ctrl+t) and close (ctrl+w) tabs.&lt;/p&gt;

&lt;p&gt;I've set the font to a font family from &lt;a href="https://www.nerdfonts.com/"&gt;Nerd Fonts&lt;/a&gt; to display the beautiful icons that are used with Oh My Posh. This font, or an alternative one, can be downloaded from the Nerd Fonts &lt;a href="https://www.nerdfonts.com/font-downloads"&gt;download page&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"$schema"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://aka.ms/terminal-profiles-schema"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"actions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"copy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"singleLine"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"keys"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+c"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"paste"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"keys"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+v"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"newTab"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"keys"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+t"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"find"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"keys"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+shift+f"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"splitPane"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"split"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"auto"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"splitMode"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"duplicate"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"keys"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"alt+shift+d"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"closeTab"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"keys"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ctrl+w"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"copyFormatting"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"none"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"copyOnSelect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"defaultProfile"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{574e775e-4f2a-5b96-ac1e-a2962a402336}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"profiles"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"defaults"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"font"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"face"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CaskaydiaCove Nerd Font Mono"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"list"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"guid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{574e775e-4f2a-5b96-ac1e-a2962a402336}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"hidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"PowerShell"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Windows.Terminal.PowershellCore"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"commandline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"powershell.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"guid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{61c54bbd-c2c6-5271-96e7-009a87ff44bf}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"hidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Windows PowerShell"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"commandline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cmd.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"guid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{0caa0dad-35be-5f56-a8ff-afceeeaa6101}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"hidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Command Prompt"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"guid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{b453ae62-4e3d-5e58-b989-0a998ec441b8}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"hidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Azure Cloud Shell"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Windows.Terminal.Azure"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"guid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{2ece5bfe-50ed-5f3a-ab87-5cd4baafed2b}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"hidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Git Bash"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Git"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"schemes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make the terminal cozy and pretty, I'm using &lt;a href="https://ohmyposh.dev/"&gt;Oh My Posh&lt;/a&gt;.&lt;br&gt;
Oh My Posh also allows me to add key information to my prompt, making it more useful than the normal prompt. For example, my modified Oh My Posh theme (based on the Pure theme) shows the git status, the .NET, and Angular versions. Spoiler, Oh My Posh can do a lot more! For some inspiration, take a look at the &lt;a href="https://ohmyposh.dev/docs/themes"&gt;default themes&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"$schema"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"console_title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"console_title_style"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"template"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"console_title_template"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{{if .Root}}(Admin){{end}} {{.Path}}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"blocks"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prompt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"alignment"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"left"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"newline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"segments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"style"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"plain"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"foreground"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#f8c400"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"style"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"full"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prompt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"alignment"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"left"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"segments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"git"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"style"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"plain"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"foreground"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#ffe893"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"fetch_stash_count"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"fetch_status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"fetch_upstream_icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"branch_icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"github_icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"branch_ahead_icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;#88C0D0&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;21e1 &amp;lt;/&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"branch_behind_icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;#88C0D0&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;21e3 &amp;lt;/&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"local_working_icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;#FFAFD7&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;002a&amp;lt;/&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"template"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{{ .UpstreamIcon }}{{ .HEAD }}{{ .BranchStatus }}{{ if .Working.Changed }} &lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;F044 {{ .Working.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Staging.Changed }} &lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;F046 {{ .Staging.String }}{{ end }}{{ if gt .StashCount 0 }} &lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;F692 {{ .StashCount }}{{ end }}"&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prompt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"alignment"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"left"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"segments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dotnet"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"style"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"plain"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"foreground"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#512bd4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"leading_diamond"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"trailing_diamond"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"display_version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;" Óúå "&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"angular"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"style"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"plain"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"foreground"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#dd0031"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"display_version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;" &lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;E753 "&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"exit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"style"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"diamond"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"foreground"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"red"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="nl"&gt;"always_enabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To also render the icons Visual Studio Code, set the terminal's font of Visual Studio Code (via &lt;code&gt;terminal.integrated.fontFamily&lt;/code&gt;) to the same font from the Windows Terminal config. By doing this, you'll get the same experience no matter where you are.&lt;/p&gt;

&lt;p&gt;For example, the experience within an Angular repository looks as follows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cBjl1CpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/angular-terminal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cBjl1CpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/angular-terminal.png" alt="The terminal shows the path, the current branch, and the installed Angular version" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more details and options about the terminal, I highly recommend &lt;a href="https://www.hanselman.com/blog/my-ultimate-powershell-prompt-with-oh-my-posh-and-the-windows-terminal"&gt;My Ultimate PowerShell prompt with Oh My Posh and the Windows Terminal&lt;/a&gt; by &lt;a href="https://twitter.com/shanselman"&gt;Scott Hanselman&lt;/a&gt;, or the recorded version &lt;a href="https://www.youtube.com/watch?v=VT2L1SXFq9U"&gt;How to make the ultimate Terminal Prompt on Windows 11&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#powershell-profile"&gt;
  &lt;/a&gt;
  Powershell Profile
&lt;/h2&gt;

&lt;p&gt;Here's where things get interesting, and this part often raises eyebrows while I'm pair programming.&lt;/p&gt;

&lt;p&gt;Because the default terminal uses Powershell a lot of tasks can be scripted. To reduce my keystrokes, I like to create aliases and shortcuts to quickly get done what I want to do. The best part is that these tasks are at my disposal when I'm in the terminal.&lt;/p&gt;

&lt;p&gt;The Powershell scripts are created in a &lt;a href="(https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.2#the-profile-variable)"&gt;Powershell profile&lt;/a&gt;, accessible via the &lt;code&gt;$PROFILE&lt;/code&gt; variable.&lt;br&gt;
To create the profile, either manually create the file at &lt;code&gt;"C:\Users\USER\Documents\PowerShell\Microsoft.PowerShell_profile.ps1"&lt;/code&gt;, or use a command to create and open the file, e.g. &lt;code&gt;code-insiders $PROFILE&lt;/code&gt; (if you're using the normal Visual Studio Code, use &lt;code&gt;code $PROFILE&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;My profile, which can be found below, creates a couple of functions and aliases to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;navigate to frequent folders&lt;/li&gt;
&lt;li&gt;add a wrapper and some templates to the most common git commands&lt;/li&gt;
&lt;li&gt;keep a history for used commands&lt;/li&gt;
&lt;li&gt;register shortcuts so I don't have to type the whole command
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight postscript"&gt;&lt;code&gt;&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;For&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;first&lt;/span&gt; &lt;span class="nf"&gt;time&lt;/span&gt; &lt;span class="nf"&gt;install&lt;/span&gt; &lt;span class="nf"&gt;Terminal-Icons&lt;/span&gt; &lt;span class="nf"&gt;with&lt;/span&gt;
&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Install-Module&lt;/span&gt; &lt;span class="nf"&gt;-Name&lt;/span&gt; &lt;span class="nf"&gt;Terminal-Icons&lt;/span&gt; &lt;span class="nf"&gt;-Repository&lt;/span&gt; &lt;span class="nf"&gt;PSGallery&lt;/span&gt;
&lt;span class="nf"&gt;Import-Module&lt;/span&gt; &lt;span class="nf"&gt;Terminal-Icons&lt;/span&gt;

&lt;span class="nf"&gt;oh-my-posh&lt;/span&gt; &lt;span class="nf"&gt;--init&lt;/span&gt; &lt;span class="nf"&gt;--shell&lt;/span&gt; &lt;span class="nf"&gt;pwsh&lt;/span&gt; &lt;span class="nf"&gt;--config&lt;/span&gt; &lt;span class="nf"&gt;~&lt;/span&gt;&lt;span class="nv"&gt;/ohmyposh-theme.omp.json&lt;/span&gt; &lt;span class="nf"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;Invoke-Expression&lt;/span&gt;

&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;History&lt;/span&gt;

&lt;span class="nf"&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class="nf"&gt;-PredictionSource&lt;/span&gt; &lt;span class="nf"&gt;History&lt;/span&gt;
&lt;span class="nf"&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class="nf"&gt;-PredictionViewStyle&lt;/span&gt; &lt;span class="nf"&gt;ListView&lt;/span&gt;
&lt;span class="nf"&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class="nf"&gt;-EditMode&lt;/span&gt; &lt;span class="nf"&gt;Windows&lt;/span&gt;

&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Alias&lt;/span&gt;

&lt;span class="nf"&gt;Set-Alias&lt;/span&gt; &lt;span class="nf"&gt;-Name&lt;/span&gt; &lt;span class="nf"&gt;code&lt;/span&gt; &lt;span class="nf"&gt;-Value&lt;/span&gt; &lt;span class="nf"&gt;code-insiders&lt;/span&gt;

&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Directory&lt;/span&gt; &lt;span class="nf"&gt;Alias&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;oss&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;cd&lt;/span&gt; &lt;span class="nf"&gt;"~&lt;/span&gt;&lt;span class="nv"&gt;/dev/oss/$args"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;work&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;cd&lt;/span&gt; &lt;span class="nf"&gt;"~&lt;/span&gt;&lt;span class="nv"&gt;/dev/work/$args"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Git&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gb&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;checkout&lt;/span&gt; &lt;span class="nf"&gt;-b&lt;/span&gt; &lt;span class="nf"&gt;$args&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gbt&lt;/span&gt; &lt;span class="s"&gt;([string] $taskid)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;checkout&lt;/span&gt; &lt;span class="nf"&gt;-b&lt;/span&gt; &lt;span class="nf"&gt;"task&lt;/span&gt;&lt;span class="nv"&gt;/$taskid"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;checkout&lt;/span&gt; &lt;span class="nf"&gt;$args&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;pull&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gmaster&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;gs&lt;/span&gt; &lt;span class="nf"&gt;'master'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gmain&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;gs&lt;/span&gt; &lt;span class="nf"&gt;'main'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gdev&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;gs&lt;/span&gt; &lt;span class="nf"&gt;'develop'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nb"&gt;add&lt;/span&gt; &lt;span class="nf"&gt;.&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;commit&lt;/span&gt; &lt;span class="nf"&gt;-m&lt;/span&gt; &lt;span class="nf"&gt;$args&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gfeat&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;($null -eq $args[1])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"feat:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[0])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"feat&lt;/span&gt;&lt;span class="s"&gt;($($args[0]))&lt;/span&gt;&lt;span class="nf"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[1])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gfix&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;($null -eq $args[1])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"fix:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[0])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"fix&lt;/span&gt;&lt;span class="s"&gt;($($args[0]))&lt;/span&gt;&lt;span class="nf"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[1])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gdocs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;($null -eq $args[1])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"docs:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[0])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"docs&lt;/span&gt;&lt;span class="s"&gt;($($args[0]))&lt;/span&gt;&lt;span class="nf"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[1])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gstyle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;($null -eq $args[1])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"style:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[0])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"style&lt;/span&gt;&lt;span class="s"&gt;($($args[0]))&lt;/span&gt;&lt;span class="nf"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[1])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;grefactor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;($null -eq $args[1])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"refactor:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[0])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"refactor&lt;/span&gt;&lt;span class="s"&gt;($($args[0]))&lt;/span&gt;&lt;span class="nf"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[1])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gperf&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;($null -eq $args[1])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"perf:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[0])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"perf&lt;/span&gt;&lt;span class="s"&gt;($($args[0]))&lt;/span&gt;&lt;span class="nf"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[1])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gchore&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;($null -eq $args[1])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"chore:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[0])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;gco&lt;/span&gt; &lt;span class="nf"&gt;"chore&lt;/span&gt;&lt;span class="s"&gt;($($args[0]))&lt;/span&gt;&lt;span class="nf"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;$&lt;/span&gt;&lt;span class="s"&gt;($args[1])&lt;/span&gt;&lt;span class="nf"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gpu&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;pull&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;goops&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nb"&gt;add&lt;/span&gt; &lt;span class="nf"&gt;.&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;commit&lt;/span&gt; &lt;span class="nf"&gt;--amend&lt;/span&gt; &lt;span class="nf"&gt;--no-edit&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gfp&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;push&lt;/span&gt; &lt;span class="nf"&gt;--force-with-lease&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;gr&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;reset&lt;/span&gt; &lt;span class="nf"&gt;--hard&lt;/span&gt;
    &lt;span class="nf"&gt;git&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt; &lt;span class="nf"&gt;-f&lt;/span&gt; &lt;span class="nf"&gt;-d&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Macros&lt;/span&gt;

&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Inspired&lt;/span&gt; &lt;span class="nf"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;Scott's&lt;/span&gt; &lt;span class="nf"&gt;profile&lt;/span&gt; &lt;span class="nf"&gt;https:&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;/gist.github.com/shanselman/25f5550ad186189e0e68916c6d7f44c3&lt;/span&gt;
&lt;span class="nf"&gt;Set-PSReadLineKeyHandler&lt;/span&gt; &lt;span class="nf"&gt;-Key&lt;/span&gt; &lt;span class="nf"&gt;Ctrl+Shift+b&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-BriefDescription&lt;/span&gt; &lt;span class="nf"&gt;BuildCurrentDirectory&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-LongDescription&lt;/span&gt; &lt;span class="nf"&gt;"Build&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;current&lt;/span&gt; &lt;span class="nf"&gt;directory"&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-ScriptBlock&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::RevertLine&lt;/span&gt;&lt;span class="s"&gt;()&lt;/span&gt;
        &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;(Test-Path -Path ".&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="err"&gt;package.jso&lt;/span&gt;&lt;span class="se"&gt;n&lt;/span&gt;&lt;span class="s"&gt;")&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::Insert&lt;/span&gt;&lt;span class="s"&gt;("npm run build")&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::Insert&lt;/span&gt;&lt;span class="s"&gt;("dotnet build")&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::AcceptLine&lt;/span&gt;&lt;span class="s"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;Set-PSReadLineKeyHandler&lt;/span&gt; &lt;span class="nf"&gt;-Key&lt;/span&gt; &lt;span class="nf"&gt;Ctrl+Shift+t&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-BriefDescription&lt;/span&gt; &lt;span class="nf"&gt;BuildCurrentDirectory&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-LongDescription&lt;/span&gt; &lt;span class="nf"&gt;"Build&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;current&lt;/span&gt; &lt;span class="nf"&gt;directory"&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-ScriptBlock&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::RevertLine&lt;/span&gt;&lt;span class="s"&gt;()&lt;/span&gt;
        &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;(Test-Path -Path ".&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="err"&gt;package.jso&lt;/span&gt;&lt;span class="se"&gt;n&lt;/span&gt;&lt;span class="s"&gt;")&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::Insert&lt;/span&gt;&lt;span class="s"&gt;("npm run test")&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::Insert&lt;/span&gt;&lt;span class="s"&gt;("dotnet test")&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::AcceptLine&lt;/span&gt;&lt;span class="s"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;Set-PSReadLineKeyHandler&lt;/span&gt; &lt;span class="nf"&gt;-Key&lt;/span&gt; &lt;span class="nf"&gt;Ctrl+Shift+s&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-BriefDescription&lt;/span&gt; &lt;span class="nf"&gt;StartCurrentDirectory&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-LongDescription&lt;/span&gt; &lt;span class="nf"&gt;"Start&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;current&lt;/span&gt; &lt;span class="nf"&gt;directory"&lt;/span&gt; &lt;span class="nf"&gt;`&lt;/span&gt;
    &lt;span class="nf"&gt;-ScriptBlock&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::RevertLine&lt;/span&gt;&lt;span class="s"&gt;()&lt;/span&gt;
        &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="s"&gt;(Test-Path -Path ".&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="err"&gt;package.jso&lt;/span&gt;&lt;span class="se"&gt;n&lt;/span&gt;&lt;span class="s"&gt;")&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::Insert&lt;/span&gt;&lt;span class="s"&gt;("npm start")&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nf"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::Insert&lt;/span&gt;&lt;span class="s"&gt;("dotnet run")&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Microsoft.PowerShell.PSConsoleReadLine&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;::AcceptLine&lt;/span&gt;&lt;span class="s"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3yI_9MDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/terminal-history.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3yI_9MDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/terminal-history.png" alt='Shows a history of npm run commands when I type "npm run", I can also browse through this list' width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#git-defaults"&gt;
  &lt;/a&gt;
  Git Defaults
&lt;/h2&gt;

&lt;p&gt;The following script sets a git identity and configures git to behave the way that I want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"first last"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"name@example.com"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; push.default current
git config &lt;span class="nt"&gt;--global&lt;/span&gt; pull.rebase &lt;span class="nb"&gt;true
&lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; core.editor code-insiders
git config &lt;span class="nt"&gt;--global&lt;/span&gt; init.defaultBranch main
&lt;span class="c"&gt;# sign commits&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; gpg.program &lt;span class="s2"&gt;"C:/Program Files (x86)/GnuPG/bin/gpg.exe"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; commit.gpgsign &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To sign commits I've followed the blogpost &lt;a href="https://www.ankursheel.com/blog/securing-git-commits-windows"&gt;A guide to securing git commits from tricking you on Windows&lt;/a&gt; by &lt;a href="https://twitter.com/ankur_sheel"&gt;Ankur Sheel&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visual-studio-code-plugins-and-settings"&gt;
  &lt;/a&gt;
  Visual Studio Code Plugins and Settings
&lt;/h2&gt;

&lt;p&gt;If you know me, you already know that I like to customize my Visual Studio Code setup.&lt;br&gt;
The following scripts don't include (color or icon) themes because I like to frequently rotate between them, depending on my mood.&lt;/p&gt;

&lt;p&gt;However, the next script installs all of the mandatory extensions to be productive.&lt;br&gt;
Because I'm using the Insiders version of Visual Studio Code, I'm using &lt;code&gt;code-insiders&lt;/code&gt; instead of &lt;code&gt;code&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Formatting and Rules&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; dbaeumer.vscode-eslint &lt;span class="nt"&gt;--force&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; esbenp.prettier-vscode &lt;span class="nt"&gt;--force&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; formulahendry.auto-rename-tag &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# Git&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; github.vscode-pull-request-github &lt;span class="nt"&gt;--force&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; eamodio.gitlens-insiders &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# Angular&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; angular.ng-template &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# .NET&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; ms-dotnettools.csharp &lt;span class="nt"&gt;--force&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; visualstudioexptteam.vscodeintellicode &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# Markdown&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; yzhang.markdown-all-in-one &lt;span class="nt"&gt;--force&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; davidanson.vscode-markdownlint &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# Rest Client&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; rangav.vscode-thunder-client &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# Miscellaneous&lt;/span&gt;
code-insiders &lt;span class="nt"&gt;--install-extension&lt;/span&gt; github.copilot &lt;span class="nt"&gt;--force&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the completion, here's my entire &lt;code&gt;settings.json&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.fontFamily"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Cascadia Code"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.fontSize"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.lineHeight"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.fontLigatures"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.dragAndDrop"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.cursorSmoothCaretAnimation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.smoothScrolling"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.wordWrap"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"on"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.formatOnSave"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.defaultFormatter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"esbenp.prettier-vscode"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"files.defaultLanguage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"markdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"terminal.integrated.fontFamily"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CaskaydiaCove NF"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"workbench.list.smoothScrolling"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#visual-studio-exceptions-settings"&gt;
  &lt;/a&gt;
  Visual Studio Exceptions Settings
&lt;/h2&gt;

&lt;p&gt;A setting that has saved me a lot of time is the "Common Language Runtime Exceptions" setting.&lt;br&gt;
By default, the setting is partially enabled but I always enable it because it immediately points me to the source of the exception rather than I have to debug the entire stack to find the exception. When the setting is enabled, the debugger breaks on all exceptions and it navigates to the source. This makes it straightforward to find and fix bugs.&lt;/p&gt;

&lt;p&gt;To enable the setting, use the &lt;code&gt;ctrl+alt+e&lt;/code&gt; shortcut and tick the "Common Language Runtime Exceptions" checkbox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oo_g27Iu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/vs-exception-settings.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oo_g27Iu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/vs-exception-settings.png" alt='Enable "Common Language Runtime Exceptions"' width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-explorer-options"&gt;
  &lt;/a&gt;
  File Explorer Options
&lt;/h2&gt;

&lt;p&gt;As a software developer, seeing hidden files and more importantly, the file extension is a must. Via the "File Explorer Options" window these two options can be enabled.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NsCW1maK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/file-explorer-options.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NsCW1maK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/file-explorer-options.png" alt="Modified file exploring options" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#allow-insecure-localhost"&gt;
  &lt;/a&gt;
  Allow Insecure Localhost
&lt;/h2&gt;

&lt;p&gt;To run an Angular application on HTTPS locally you can &lt;a href="https://medium.com/@richardr39/using-angular-cli-to-serve-over-https-locally-70dab07417c8"&gt;create a self-signed certificate&lt;/a&gt;, but I find it easier to allow invalid certificates on localhost. This is a flag that can be enabled via the browser.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Edge: &lt;a href="https://dev.toedge://flags/#allow-insecure-localhost"&gt;edge://flags/#allow-insecure-localhost&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chrome: &lt;a href="https://dev.tochrome://flags/#allow-insecure-localhost"&gt;chrome://flags/#allow-insecure-localhost&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qtDsz0wC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/allow-insecure-localhost.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qtDsz0wC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022/images/allow-insecure-localhost.png" alt="Enable invalid certifactes for localhost development" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;From my recent experience, it's painless and swift to set up a new Windows machine anno 2022.&lt;br&gt;
To make our daily work more enjoyable, the Terminal and the IDE are configured to our needs and preferences.&lt;br&gt;
I've created PowerShell profile to script frequent tasks, making them easy and fast to run, often with only a few keystrokes. While these seem small, it definitely is a productivity boost.&lt;/p&gt;

&lt;p&gt;The last step is to clone your Git repository and start working.&lt;/p&gt;

&lt;p&gt;Enjoy your new device!&lt;/p&gt;




&lt;p&gt;Follow me on Twitter at &lt;a href="https://timdeschryver.dev/twitter"&gt;@tim_deschryver&lt;/a&gt; | Subscribe to the &lt;a href="https://timdeschryver.dev/newsletter"&gt;Newsletter&lt;/a&gt; | Originally published on &lt;a href="https://timdeschryver.dev/blog/how-i-have-set-up-my-new-windows-development-environment-in-2022"&gt;timdeschryver.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>windows</category>
      <category>dotnet</category>
      <category>angular</category>
    </item>
    <item>
      <title>Building a PWA with Vue.js</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 11 Jan 2022 18:47:44 +0000</pubDate>
      <link>https://dev.to/logrocket/building-a-pwa-with-vuejs-2h8g</link>
      <guid>https://dev.to/logrocket/building-a-pwa-with-vuejs-2h8g</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/joshcollinsworth/"&gt;Josh Collinsworth&lt;/a&gt;&lt;/strong&gt; ‚úèÔ∏è&lt;/p&gt;

&lt;p&gt;A while back, I built a little &lt;a href="https://codepen.io/collinsworth/pen/bGdmmrY"&gt;liquid unit conversion app in CodePen&lt;/a&gt; to convert between ounces, teaspoons, cups, etc. I didn‚Äôt think anyone would actually use it in real life ‚Äî it was mostly just for fun and learning with &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/collinsworth/embed/bGdmmrY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;But, surprisingly, I‚Äôve found the app quite useful. As I began cooking and mixing cocktails at home over the last couple of years (you know why), I found myself repeatedly reaching for that handy liquid converter app.&lt;/p&gt;

&lt;p&gt;There was just one problem, though: accessing the app on my phone was a pain. I could bookmark it, sure, but that experience wasn‚Äôt great, and it didn‚Äôt seem that much better than just Googling what I needed. There were plenty of great alternatives, of course, but they just weren‚Äôt as much fun as using something I‚Äôd built.&lt;/p&gt;

&lt;p&gt;I found myself wishing my CodePen app was an actual app that lived on my phone, and that I could pull it up as easily as, say, tapping Twitter or Slack.&lt;/p&gt;

&lt;p&gt;There‚Äôs good news: this is very doable, &lt;a href="https://blog.logrocket.com/why-you-should-turn-your-app-into-a-pwa/"&gt;thanks to progressive web apps&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-progressive-web-app"&gt;
  &lt;/a&gt;
  What is a progressive web app?
&lt;/h2&gt;

&lt;p&gt;Defining the term progressive web app (PWA) in detail would be enough for &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Introduction"&gt;its own post&lt;/a&gt; (or even &lt;a href="https://abookapart.com/products/progressive-web-apps"&gt;its own book&lt;/a&gt;), but to briefly hit the highlights: a progressive web app is a website with features that make it look, feel, and behave like a native app.&lt;/p&gt;

&lt;p&gt;Essentially, it‚Äôs an enhanced website! How? Unlike traditional websites, you can install a PWA on your device. You can even prompt users to install your PWA when they visit your site, as shown in this screenshot from &lt;a href="https://quina.app/"&gt;Quina&lt;/a&gt;, my word game app, which is also a PWA (and also built with &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vqDdE-Aa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/quina-app.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vqDdE-Aa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/quina-app.png" alt="Quina App" width="730" height="1583"&gt;&lt;/a&gt; You can prompt a user to install your PWA as soon as they visit the URL.&lt;/p&gt;

&lt;p&gt;Once the PWA is installed, you can open it with an icon from your dock or home screen, just like a native app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C000AWDw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/quina-icon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C000AWDw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/quina-icon.png" alt="Quina Icon" width="730" height="1583"&gt;&lt;/a&gt; Once installed, a PWA will show up alongside all the rest of your apps.&lt;/p&gt;

&lt;p&gt;Once opened, a PWA becomes a standalone, full-screen experience instead of opening in the device‚Äôs browser, just like a native app would. Notice the custom status bar color. Nifty!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ln84eSF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/full-screen-quina.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ln84eSF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/full-screen-quina.png" alt="Full Screen Quina" width="730" height="1583"&gt;&lt;/a&gt; A PWA opens in its own fullscreen window ‚Äî no browser bar, just like a native app!&lt;/p&gt;

&lt;p&gt;Progressive web apps can run even while the device is not connected to the internet, and can store their own data locally on the device.&lt;/p&gt;

&lt;p&gt;Thanks to recent improvements to browser APIs, PWAs are even capable of things like device vibration, accessing the device‚Äôs camera and Bluetooth connections, and even creating push notifications. (It should be noted that iOS restricts several features, however, including push notifications. One bad Apple, as they say.)&lt;/p&gt;

&lt;p&gt;Any website can be a PWA. Despite the name, it doesn‚Äôt actually have to be what you might call an ‚Äúapp,‚Äù exactly. A static blog, one-pager, an eCommerce store, or a simple brochure site could be a PWA. Twitter and Starbucks are among companies offering a PWA experience.&lt;/p&gt;

&lt;p&gt;It doesn‚Äôt matter how the site was built, either. Many PWAs are made using modern JavaScript frameworks (like Vue, which we‚Äôll be focusing on here), but that‚Äôs just because they‚Äôre convenient.&lt;/p&gt;

&lt;p&gt;When it comes to PWAs, there‚Äôs nothing special about Vue specifically, or even frameworks in general.&lt;/p&gt;

&lt;p&gt;To put it simply: if it loads in a browser, it can be a progressive web app.&lt;/p&gt;

&lt;p&gt;That groundwork laid, let‚Äôs talk specifically about how to build a PWA with Vue, one of my personal favorite tools for web development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-turn-an-app-into-a-pwa-using-vuejs"&gt;
  &lt;/a&gt;
  How to turn an app into a PWA using Vue.js
&lt;/h2&gt;

&lt;p&gt;PWAs have a few requirements, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  A JavaScript service worker (to allow the site to load offline and store data locally)&lt;/li&gt;
&lt;li&gt;  A valid JSON manifest of the app‚Äôs info, with the correct info filled in&lt;/li&gt;
&lt;li&gt;  A set of properly named icons, at multiple sizes&lt;/li&gt;
&lt;li&gt;  A secure, HTTPS connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most hosts provide SSL certificates for free these days (many even do so automatically), so we won't go into the HTTPS requirement here. That should be the easiest part.&lt;/p&gt;

&lt;p&gt;The rest may not sound like a lot, but there‚Äôs a good deal of boilerplate that goes into creating all of that stuff, both in terms of the files and the code itself. If you were to go about it manually, it would be a tedious task, to say the least.&lt;/p&gt;

&lt;p&gt;Fortunately, there‚Äôs an easier way with Vue, thanks to &lt;a href="https://cli.vuejs.org/"&gt;Vue CLI&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Vue CLI offers a convenient PWA plugin, and, even better, it can be added to an existing or new project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-pwa-plugin-to-an-existing-vue-project"&gt;
  &lt;/a&gt;
  Adding the PWA plugin to an existing Vue project
&lt;/h2&gt;

&lt;p&gt;If you‚Äôd like to turn an existing Vue project into a PWA, the plugin to do so can easily be installed on its own. The command to install the PWA plugin (assuming you already have Vue CLI installed) is simply:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;vue add pwa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run this on the command line in your project folder, and Vue CLI will install all the files and config you need to transform your project into a progressive web app.&lt;/p&gt;

&lt;p&gt;The original project doesn‚Äôt even need to be created with Vue CLI, although you may need to make some adjustments, depending on your project structure.&lt;/p&gt;

&lt;p&gt;If you‚Äôve run that command successfully in an existing Vue project, you can skip ahead past the next section, and we‚Äôll talk about what the plugin actually did and how to customize it after that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that if your original project is built with &lt;a href="https://nuxtjs.org/"&gt;Nuxt&lt;/a&gt; (a Vue meta-framework), you have a better-suited solution readily available in the &lt;a href="https://pwa.nuxtjs.org/"&gt;Nuxt PWA module&lt;/a&gt;. Nuxt and its ecosystem of plugins are a bit much to tackle in the scope of this post, but the same PWA general principles we‚Äôll cover here apply there, too. The difference is how the config options are entered. So, while the concepts translate, if you‚Äôre using Nuxt, I‚Äôll refer you to the &lt;a href="https://pwa.nuxtjs.org/setup"&gt;Nuxt PWA module docs&lt;/a&gt; for the details.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-new-project-with-vue-cli"&gt;
  &lt;/a&gt;
  Creating a new project with Vue CLI
&lt;/h2&gt;

&lt;p&gt;First, install Vue CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; @vue/cli
&lt;span class="c"&gt;# OR&lt;/span&gt;
yarn global add @vue/cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With Vue CLI installed, enter this command in your terminal (the name &lt;code&gt;my-vue-pwa&lt;/code&gt; can be changed if you prefer):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;vue create my-vue-pwa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see a prompt asking what kind of project you‚Äôd like to create:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R9O0vakC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/pick-preset.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R9O0vakC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/pick-preset.png" alt="Pick Preset" width="730" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose &lt;strong&gt;Manually select features&lt;/strong&gt;, and you‚Äôll see a list of √† la carte options for your new app, including &lt;code&gt;Progressive Web App (PWA) Support&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Use your arrow keys to move down to that option, and press &lt;strong&gt;space&lt;/strong&gt; to enable it. You can also add or remove other features if you like, but other than the PWA option, I‚Äôll be sticking with the defaults shown.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tl6_QQwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/pwa-support-options.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tl6_QQwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/pwa-support-options.png" alt="PWA Support Options" width="730" height="423"&gt;&lt;/a&gt; Be sure the Progressive Web App (PWA) Support option is checked.&lt;/p&gt;

&lt;p&gt;Hit &lt;strong&gt;enter&lt;/strong&gt; when you‚Äôre happy with your choices, and you‚Äôll be prompted to choose Vue 2 or 3. Go with whichever you prefer.&lt;/p&gt;

&lt;p&gt;Vue CLI will then ask you a few more questions about your project, and unless you have a reason not to, I‚Äôd recommend using the default for each one. When the installation is finished, you should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nCLvRJKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/vue-project.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nCLvRJKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/vue-project.png" alt="Vue Project" width="730" height="424"&gt;&lt;/a&gt; Our Vue project has been successfully created.&lt;/p&gt;

&lt;p&gt;Now that we have our project set up, let‚Äôs open the project folder in &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt; (or your preferred text editor).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-the-vue-pwa-plugin-works"&gt;
  &lt;/a&gt;
  How the Vue PWA plugin works
&lt;/h2&gt;

&lt;p&gt;When you peek at the folders and files in the project Vue CLI generated for us, you‚Äôll see a file named &lt;code&gt;registerServiceWorker.js&lt;/code&gt;. As the name implies, this file will help to create a service worker, which will store the site‚Äôs data locally.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2bWasQD9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/registerserviceworker.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2bWasQD9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/registerserviceworker.png" alt="RegisterServiceWorker" width="730" height="420"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The actual service worker is created automatically during the build step, but you can see some of the work that Vue CLI did for us when we chose the ‚Äúprogressive web app‚Äù option.&lt;/p&gt;

&lt;p&gt;This means we won‚Äôt see our service worker during development, which is actually a good thing. Service workers do much more to get in the way than to be helpful during the development process, as they serve cached files aggressively rather than show our most recent changes.&lt;/p&gt;

&lt;p&gt;That being the case, let‚Äôs talk about how to actually see and use our PWA, as a user might.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-a-pwa"&gt;
  &lt;/a&gt;
  Testing a PWA
&lt;/h2&gt;

&lt;p&gt;For building the actual code of our app, Vue‚Äôs default &lt;code&gt;npm run serve&lt;/code&gt; will serve us well (pun fully intended). While developing our components, code, and the functional bits of the app itself, this will continue to be our go-to.&lt;/p&gt;

&lt;p&gt;Both the service worker and manifest file‚Äîcritical to PWA functionality‚Äîare generated during the production build, and not fully functional in the dev environment. To get around this, we‚Äôll need to build the site, then serve it.&lt;/p&gt;

&lt;p&gt;You can do this with a host like &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt;, &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;, or &lt;a href="https://render.com/"&gt;Render&lt;/a&gt;. It‚Äôs perfectly viable to commit, push, and wait for the build to go live in order to see and interact with it.&lt;/p&gt;

&lt;p&gt;With an app this simple, the build should take less than a minute. There‚Äôs also one unique upside to this method: you get an SSL certificate installed for HTTPS connection automatically.&lt;/p&gt;

&lt;p&gt;That said: I usually prefer to build and serve locally. It‚Äôs faster and won‚Äôt cost you any build minutes on a host. This command will handle both in one line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run build &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npx http-server dist
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run that (you may be prompted to click &lt;strong&gt;y&lt;/strong&gt;¬†to approve temporarily installing the &lt;code&gt;http-server&lt;/code&gt; package), and you‚Äôll have a local domain ready to use to access your built site locally:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sznk6tFL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/local-domain.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sznk6tFL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/local-domain.png" alt="Local Domain" width="730" height="870"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: there are many HTTP server packages available. I like &lt;code&gt;http-server&lt;/code&gt; for this purpose because, as you can see, it gives you a range of IPs and ports to use, so that if you‚Äôre running into caching issues on one, you can try another. But you‚Äôre welcome to use another package (and/or install the one you‚Äôre using permanently, rather than use &lt;code&gt;npx&lt;/code&gt; every time).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let‚Äôs open the first IP address in our browser. You can command-click in VS Code on Mac, control-click on Windows, or just good ol‚Äô copy and paste.&lt;/p&gt;

&lt;p&gt;If you open the site in Chrome, you might notice you can install the PWA from the browser bar now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PJsaSR1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/install-app.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PJsaSR1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/install-app.png" alt="Install App" width="730" height="303"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Sadly, Firefox and Safari only support PWAs on Android and iOS, not on desktop.)&lt;/p&gt;

&lt;p&gt;Go ahead and click &lt;strong&gt;Install.&lt;/strong&gt; Your app will be installed and will open in a new standalone window.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vmEcGZVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/standalone-window.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vmEcGZVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/standalone-window.png" alt="Standalone Window" width="730" height="590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that our PWA window looks just like an app window, and, if you look in your dock, you‚Äôll see our app‚Äôs default Vue logo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UccJ1Tgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/app-logo-taskbar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UccJ1Tgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/app-logo-taskbar.png" alt="App Logo Taskbar" width="730" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty cool, right!?&lt;/p&gt;

&lt;p&gt;The PWA can just as easily be installed on a tablet or smartphone as well and will load the same way there.&lt;/p&gt;

&lt;p&gt;One word of warning: as long as you‚Äôre looking at the built production site in the browser, the service worker will kick in and cache assets pretty aggressively. Develop with the &lt;strong&gt;Network&lt;/strong&gt; tab open and the &lt;strong&gt;Disable Cache&lt;/strong&gt; checkbox checked.&lt;/p&gt;

&lt;p&gt;I‚Äôd also recommend checking &lt;strong&gt;Application &amp;gt; Service Workers &amp;gt; Update on reload&lt;/strong&gt; in Chrome, as shown.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LuBrkyGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/update-on-reload.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LuBrkyGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/update-on-reload.png" alt="Update on Reload" width="730" height="288"&gt;&lt;/a&gt; Be sure to configure your site‚Äôs service worker to avoid caching issues.&lt;/p&gt;

&lt;p&gt;If all else fails, you can force a refresh by updating or unregistering the service worker from the same panel in the browser‚Äôs dev tools.&lt;/p&gt;

&lt;p&gt;Finally, one last important thing to mention about service workers: they‚Äôre a complex topic all on their own. While the PWA plugin sets one up for us, it‚Äôs filled with standard defaults and may not be ideally configured for your app‚Äôs needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customizing-our-pwa-in-vue"&gt;
  &lt;/a&gt;
  Customizing our PWA in Vue
&lt;/h2&gt;

&lt;p&gt;The PWA plugin‚Äôs defaults are serviceable, but let‚Äôs customize our app‚Äôs colors and logo.&lt;/p&gt;

&lt;p&gt;To override the defaults in our web app manifest, we‚Äôll need to set up a &lt;code&gt;vue.config.js&lt;/code&gt; file in the root of our project. You can check out the &lt;a href="https://cli.vuejs.org/core-plugins/pwa.html"&gt;PWA plugin documentation&lt;/a&gt; for full details, but whatever is defined in our &lt;code&gt;vue.config.js&lt;/code&gt; file will take precedence over the PWA plugin defaults and override them.&lt;/p&gt;

&lt;p&gt;According to the docs, you can also define these settings in the project‚Äôs &lt;code&gt;package.json&lt;/code&gt; file, but I find JavaScript a bit easier to write, and less syntactically strict than JSON.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://cli.vuejs.org/core-plugins/pwa.html"&gt;PWA plugin documentation&lt;/a&gt; has a full list of all the properties you can control, but there are a few worth highlighting.&lt;/p&gt;

&lt;p&gt;Check out &lt;code&gt;pwa.name&lt;/code&gt;, and &lt;code&gt;pwa.themeColor&lt;/code&gt;, both found under the &lt;a href="https://cli.vuejs.org/core-plugins/pwa.html#configuration"&gt;Config heading&lt;/a&gt;. Here‚Äôs a screenshot from the docs for reference:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J--nUJix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/docs-for-reference.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J--nUJix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/docs-for-reference.png" alt="Docs for Reference" width="730" height="238"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice the defaults here. It‚Äôs handy to know what options will apply when we don‚Äôt choose anything. (In the cases above, the &lt;code&gt;name&lt;/code&gt; field from &lt;code&gt;package.json&lt;/code&gt; and Vue green.)&lt;/p&gt;

&lt;p&gt;Go ahead and create a file named &lt;code&gt;vue.config.js&lt;/code&gt; in the root of your project. Open it and add code, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...Other Vue config options here, possibly&lt;/span&gt;
  &lt;span class="na"&gt;pwa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Liquid Measurement Converter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;themeColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#ffd100&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if we re-run our build and serve script, we can re-install the PWA. We should see our new title and theme color reflected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4whf66BL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/liquid-measurement-converter.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4whf66BL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/liquid-measurement-converter.png" alt="Liquid Measurement Converter" width="730" height="634"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice there are some required fields in the manifest ‚Äî the PWA plugin just handles them all for us. Having a short name for your app (that‚Äôs just a handful of characters) is probably a good idea; ‚ÄúLiquid Measurement Converter‚Äù would be too long in some cases.&lt;/p&gt;

&lt;p&gt;There are also other color options that are worth adjusting; again, see the &lt;a href="https://cli.vuejs.org/core-plugins/pwa.html"&gt;plugin docs&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-custom-pwa-icons"&gt;
  &lt;/a&gt;
  Adding custom PWA icons
&lt;/h3&gt;

&lt;p&gt;There‚Äôs one other nice thing the PWA plugin took care of for us: it generated a set of icons for our app in &lt;code&gt;public/img/icons&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qg8j3Sqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/public-img-icons.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qg8j3Sqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/public-img-icons.png" alt="Public Img Icons" width="730" height="526"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The names and sizes of these icons are important. Various browsers and operating systems will search for these icons to help identify our PWA.&lt;/p&gt;

&lt;p&gt;We also have some control of our icon via our web app manifest. To change the icon we want our PWA to use, we need to add an &lt;code&gt;icons&lt;/code&gt; property to the &lt;code&gt;pwa&lt;/code&gt; options object inside of &lt;code&gt;vue.config.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here‚Äôs what the default looks like, just for reference:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...Other Vue config options here, possibly&lt;/span&gt;
  &lt;span class="na"&gt;pwa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...Other pwa config options&lt;/span&gt;
    &lt;span class="na"&gt;icons&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;favicon32&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/icons/favicon-32x32.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;favicon16&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/icons/favicon-16x16.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;appleTouchIcon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/icons/apple-touch-icon-152x152.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;maskIcon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/icons/safari-pinned-tab.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;msTileImage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img/icons/msapplication-icon-144x144.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Anywhere our app is referenced in the UI, these icons will serve as our app‚Äôs logo. These will be used as favicons, app icons, status bar indicators, etc.&lt;/p&gt;

&lt;p&gt;And again, just to emphasize: a PWA will not be installable if it doesn‚Äôt have the right icon files. Icons must be in the correct place, and named correctly, for universal support.&lt;/p&gt;

&lt;p&gt;Fortunately, the PWA plugin already added all the icons we need. All we need to do is replace each image with an identically sized and named icon of our choosing.&lt;/p&gt;

&lt;p&gt;There are several browser-based PWA icon generator tools available if you‚Äôd like to make one version and automate the rest. I found &lt;a href="https://realfavicongenerator.net/"&gt;realfavicongenerator.net&lt;/a&gt; to be the most useful of these tools. Ideally, the original should be 512px by 512 px, as that‚Äôs the largest any OS or browser might use.&lt;/p&gt;

&lt;p&gt;It may be helpful to know that after a build, you can open &lt;code&gt;dist/manifest.json&lt;/code&gt; in your text editor (or visit &lt;code&gt;/manifest.json&lt;/code&gt; in the browser window) to get a first-hand look at the manifest file the Vue PWA plugin is generating for your project, just to be sure what‚Äôs going into the &lt;code&gt;vue.config.js&lt;/code&gt; file is coming out the other end correctly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-pwa-options-with-vue"&gt;
  &lt;/a&gt;
  Other PWA options with Vue
&lt;/h3&gt;

&lt;p&gt;There are several other config options available. Browse the list of options in the &lt;a href="https://cli.vuejs.org/core-plugins/pwa.html"&gt;PWA plugin docs&lt;/a&gt; to get a sense of what‚Äôs possible.&lt;/p&gt;

&lt;p&gt;When in doubt, I‚Äôd recommend sticking with the defaults unless you have a compelling reason to make a change. The documentation does a good job of linking to explainers where things get complex, too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prompting-the-user-to-install-a-pwa"&gt;
  &lt;/a&gt;
  Prompting the user to install a PWA
&lt;/h2&gt;

&lt;p&gt;Users can install a PWA directly from their browser (depending on the browser and OS), but the option is generally not highly visible. If we actually want users to install our PWA, then we should make it easy to do so.&lt;/p&gt;

&lt;p&gt;Browser vendors are conscious to prevent annoying abuse of the PWA prompt, so there‚Äôs a specific way to accomplish this. Here‚Äôs a post on &lt;a href="https://web.dev/customize-install/"&gt;how to provide your own in-app install experience&lt;/a&gt;, but we‚Äôll tailor the approach specifically for Vue.&lt;/p&gt;

&lt;p&gt;We‚Äôll wrap the code up in a Vue component that can be dropped into any PWA project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- PWAPrompt.vue --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"shown"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Add app to home screen?

    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"installPWA"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      Install!
    &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"dismissPrompt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      No, thanks
    &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;shown&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}),&lt;/span&gt;

  &lt;span class="nx"&gt;beforeMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;beforeinstallprompt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;installEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dismissPrompt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="nx"&gt;installPWA&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;installEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;installEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userChoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dismissPrompt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Hide the prompt once the user's clicked&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outcome&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;accepted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// Do something additional if the user chose to install&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// Do something additional if the user declined&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to import and use that component in our app wherever we want the prompt to show up, and it will take care of the rest for us.&lt;/p&gt;

&lt;p&gt;We don‚Äôt have to do &lt;strong&gt;anything if the user clicks install&lt;/strong&gt;; the browser handles that. We wait for the browser to fire the default &lt;code&gt;beforeinstallprompt&lt;/code&gt; event, intercept it, and show our more visible prompt instead.&lt;/p&gt;

&lt;p&gt;We can do something extra in the &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; above if we want to log the result, for example, or show another message, but we don‚Äôt have to.&lt;/p&gt;

&lt;p&gt;We cannot force the prompt again, however, or create any other way for the PWA to be installed. The browser has full control over when that functionality can be used.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: I didn‚Äôt include any styles with this component; just the minimal functional bits. &lt;a href="https://web.dev/promote-install/"&gt;Here‚Äôs a guide to various approaches and best practices for the prompt&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#troubleshooting-your-pwa"&gt;
  &lt;/a&gt;
  Troubleshooting your PWA
&lt;/h2&gt;

&lt;p&gt;If you‚Äôre having issues getting your install prompt to show up ‚Äî or getting your PWA validated ‚Äî here are some things to double-check.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-your-pwa-loading-over-https"&gt;
  &lt;/a&gt;
  Is your PWA loading over HTTPS?
&lt;/h3&gt;

&lt;p&gt;PWAs require a secure HTTPS connection (unless loading locally).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-you-have-a-manifest"&gt;
  &lt;/a&gt;
  Do you have a manifest?
&lt;/h3&gt;

&lt;p&gt;You should be able to visit &lt;code&gt;/manifest.json&lt;/code&gt; at your PWA URL and see it loaded in the browser.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-there-image-404s-in-the-console"&gt;
  &lt;/a&gt;
  Are there image 404s in the console?
&lt;/h3&gt;

&lt;p&gt;If your PWA doesn‚Äôt have the right images named the right things in the right sizes and in the right place, it may not be installable. The console in dev tools should show errors if that‚Äôs the case.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-you-have-a-service-worker"&gt;
  &lt;/a&gt;
  Do you have a service worker?
&lt;/h3&gt;

&lt;p&gt;The PWA plugin takes care of this for us, but it‚Äôs still worth verifying you see the worker loading. You should be able to see a &lt;code&gt;service-worker.js&lt;/code&gt; file being loaded in the &lt;strong&gt;Network&lt;/strong&gt; tab or see it registered in &lt;strong&gt;Application &amp;gt; Service&lt;/strong&gt; workers in dev tools.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-your-service-worker-running"&gt;
  &lt;/a&gt;
  Is your service worker running?
&lt;/h3&gt;

&lt;p&gt;If you‚Äôre dealing with changes not showing up as expected, you might need to try an incognito window, disable caching, and/or unregister the service worker in dev tools.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-your-prompt-code-correct"&gt;
  &lt;/a&gt;
  Is your prompt code correct?
&lt;/h3&gt;

&lt;p&gt;Check the previous section to verify your prompt code is doing everything it needs to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#does-your-current-browser-and-os-support-pwas"&gt;
  &lt;/a&gt;
  Does your current browser and OS support PWAs?
&lt;/h3&gt;

&lt;p&gt;Remember, Firefox and Safari don‚Äôt support PWAs on desktop. iOS also restricts some PWA features, but PWAs should still be installable on iOS. Here are the &lt;a href="https://web.dev/install-criteria/"&gt;install criteria for Chrome&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I went through the steps outlined in this article to convert the liquid measure conversion CodePen project to fully fleshed-out PWA.&lt;/p&gt;

&lt;p&gt;You can see the finished product at &lt;a href="https://vlmc.netlify.app"&gt;vlmc.netlify.app&lt;/a&gt;. I made some noticeable adjustments from the original UI format to make it more friendly to use on a mobile phone, but the general idea is the same.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C7A5wTEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/improved-ui.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C7A5wTEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/improved-ui.png" alt="Improved UI" width="730" height="1583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs &lt;a href="https://github.com/josh-collinsworth/vue-liquid-measurement-converter"&gt;the finished GitHub repo&lt;/a&gt;, and &lt;a href="https://github.com/josh-collinsworth/vue-liquid-measurement-converter/blob/main/src/components/PWAPrompt.vue"&gt;here‚Äôs my finished PWAPrompt component&lt;/a&gt;, specifically, if you‚Äôd like to yoink it for your own repurposing. Just be sure to adjust the code as needed.&lt;/p&gt;

&lt;p&gt;Personally, I had fun converting this project to a PWA, and I was re-energized by the possibilities PWAs offer along the journey. Progressive web apps are powerful, amazing, and exciting! I hope you‚Äôre inspired to try out the tech for yourself on your own project.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#experience-your-vue-apps-exactly-how-a-user-does"&gt;
  &lt;/a&gt;
  Experience your Vue apps exactly how a user does
&lt;/h2&gt;

&lt;p&gt;Debugging Vue.js applications can be difficult, especially when there are dozens, if not hundreds of mutations during a user session. If you‚Äôre interested in monitoring and tracking Vue mutations for all of your users in production, &lt;a href="https://logrocket.com/signup/"&gt;try LogRocket&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Rso_joi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.readme.io/00591d0-687474703a2f2f692e696d6775722e636f6d2f6a3049327856572e706e67.png" alt="LogRocket Dashboard Free Trial Banner" width="858" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens in your Vue apps including network requests, JavaScript errors, performance problems, and much more. Instead of guessing why problems happen, you can aggregate and report on what state your application was in when an issue occurred.&lt;/p&gt;

&lt;p&gt;The LogRocket Vuex plugin logs Vuex mutations to the LogRocket console, giving you context around what led to an error, and what state the application was in when an issue occurred.&lt;/p&gt;

&lt;p&gt;Modernize how you debug your Vue apps - &lt;a href="https://logrocket.com/signup/"&gt;Start monitoring for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>pwa</category>
      <category>vue</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Local Shop Search - Search shop near you</title>
      <author>Nithin I Bhandari</author>
      <pubDate>Tue, 11 Jan 2022 18:43:44 +0000</pubDate>
      <link>https://dev.to/nithinibhandari1999/local-shop-search-search-shop-near-you-1135</link>
      <guid>https://dev.to/nithinibhandari1999/local-shop-search-search-shop-near-you-1135</guid>
      <description>&lt;p&gt;Local Shop Search is used to search a shop near you by a map.&lt;br&gt;
Shop keeper can add a shop and list his product.&lt;br&gt;
End-User can Search Products and can visit his shop to purchase the product.&lt;/p&gt;

&lt;p&gt;Live Website: &lt;a href="https://local-shop-search.netlify.app/search/"&gt;https://local-shop-search.netlify.app/search/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g2MlhSu0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt9ef1wmgwts7p6q1lqe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g2MlhSu0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt9ef1wmgwts7p6q1lqe.png" alt="Website Demo" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;MongoDB and MongoDB Autocomplete&lt;/li&gt;
&lt;li&gt;Node JS&lt;/li&gt;
&lt;li&gt;Express JS&lt;/li&gt;
&lt;li&gt;React JS&lt;/li&gt;
&lt;li&gt;Leaflet JS&lt;/li&gt;
&lt;li&gt;Netlify for frontend and Netlify serverless backend.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#how-search-functionality-works"&gt;
  &lt;/a&gt;
  How search functionality works
&lt;/h4&gt;

&lt;p&gt;Here i am using MongoDB autocomplete nGram which offer autocomplete search and location index to search query by location.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#aggregate-query-example"&gt;
  &lt;/a&gt;
  Aggregate query example
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://github.com/NithinIBhandari1999/localshopsearch_client/blob/main/info/mongodbAggregateFunction.json"&gt;Code Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ls95c6Dr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00gpmpdqup15k9587mbn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ls95c6Dr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00gpmpdqup15k9587mbn.png" alt="MongoDB Autocomplete Query Example" width="880" height="1192"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#mongodb-autocomplete-index"&gt;
  &lt;/a&gt;
  MongoDB Autocomplete index
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://github.com/NithinIBhandari1999/localshopsearch_client/blob/main/info/mongodbSearchIndex.json"&gt;Code Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CM-8aGF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1rph770xlkp03mr1zm2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CM-8aGF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1rph770xlkp03mr1zm2.png" alt="MongoDB Autocomplete Index Example" width="624" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;E-Commerce Creation&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;Live Link: &lt;a href="https://local-shop-search.netlify.app/search/"&gt;Visit Now&lt;/a&gt;&lt;br&gt;
Read Me: &lt;a href="https://github.com/NithinIBhandari1999/localshopsearch_client/blob/main/README.md"&gt;Visit Now&lt;/a&gt;&lt;br&gt;
Local Shop Search Front end: &lt;a href="https://github.com/NithinIBhandari1999/localshopsearch_client"&gt;Visit Now&lt;/a&gt;&lt;br&gt;
Local Shop Search Back end: &lt;a href="https://github.com/NithinIBhandari1999/localshopsearch_api"&gt;Visit Now&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#how-to-deploy"&gt;
  &lt;/a&gt;
  How to deploy
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Clone frontend and backend code.&lt;/li&gt;
&lt;li&gt;Create an Imagekit account.&lt;/li&gt;
&lt;li&gt;Visit to Netlify and deploy the code, add all env variable.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>atlashackathon</category>
      <category>mongodb</category>
      <category>react</category>
      <category>node</category>
    </item>
    <item>
      <title>Simple Text Editor with main functions (using Node.js)</title>
      <author>Lucifer25x</author>
      <pubDate>Tue, 11 Jan 2022 18:41:16 +0000</pubDate>
      <link>https://dev.to/lucifer25x/simple-text-editor-with-main-functions-using-nodejs-14h6</link>
      <guid>https://dev.to/lucifer25x/simple-text-editor-with-main-functions-using-nodejs-14h6</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/Lucifer25x/simple-text-editor"&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshot"&gt;
  &lt;/a&gt;
  Screenshot:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NBI1rch3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iy53lef0ku3kq62yf42s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBI1rch3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iy53lef0ku3kq62yf42s.png" alt="Image description" width="803" height="643"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Open File&lt;/li&gt;
&lt;li&gt;Open Folder&lt;/li&gt;
&lt;li&gt;Edit File&lt;/li&gt;
&lt;li&gt;Save File&lt;/li&gt;
&lt;li&gt;Rename File/Folder&lt;/li&gt;
&lt;li&gt;Delete File/Folder&lt;/li&gt;
&lt;li&gt;Create New File&lt;/li&gt;
&lt;li&gt;Create New Folder&lt;/li&gt;
&lt;li&gt;Get location of files and folders&lt;/li&gt;
&lt;li&gt;Make Window title with file path&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#packages"&gt;
  &lt;/a&gt;
  Packages:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Electron.js&lt;/li&gt;
&lt;li&gt;Node-fs&lt;/li&gt;
&lt;li&gt;Node-path&lt;/li&gt;
&lt;li&gt;Ace.js&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#please-give-star-to-repository-and-follow"&gt;
  &lt;/a&gt;
  Please give star to repository and follow.
&lt;/h4&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>linux</category>
      <category>programming</category>
    </item>
    <item>
      <title>Uni-Tab - One Tab, Many Uses</title>
      <author>Amogh Singh</author>
      <pubDate>Tue, 11 Jan 2022 18:31:45 +0000</pubDate>
      <link>https://dev.to/amoghsingh25/uni-tab-one-tab-many-purposes-348g</link>
      <guid>https://dev.to/amoghsingh25/uni-tab-one-tab-many-purposes-348g</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;A single website to perform multiple functions like reading the news or a task tracker, with a main purpose to increase productivity and save time by decreasing the amount of different applications used.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;Github &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/AmoghSingh25"&gt;
        AmoghSingh25
      &lt;/a&gt; / &lt;a href="https://github.com/AmoghSingh25/Uni-Tab"&gt;
        Uni-Tab
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Uni-Tab&lt;/h1&gt;
&lt;p&gt;A single website to perform multiple functions like reading the news or a task tracker, with a main purpose to increase productivity and save time by decreasing the amount of different applications used.&lt;/p&gt;
&lt;h3&gt;
Additional Resources / Info&lt;/h3&gt;
&lt;h4&gt;
&lt;a href="https://unitab.tk" rel="nofollow"&gt;Link to website&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;This website currently offers news, task trackers/To-Do list, a Web Search bar and a weather viewer.&lt;/p&gt;
&lt;h4&gt;
Software used : -&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;MongoDB Atlas - Storing User information and data like tasks.&lt;/li&gt;
&lt;li&gt;Node.js and Express - Backend server code and routing&lt;/li&gt;
&lt;li&gt;Weather - &lt;a href="https://www.openweathermap.org" rel="nofollow"&gt;OpenWeatherMap API&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;News - &lt;a href="https://newscatcherapi.com/" rel="nofollow"&gt;NewsCatcher News API&lt;/a&gt; and &lt;a href="https://newsdata.io/" rel="nofollow"&gt;NewsData.io API&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;User authentication and creation - &lt;a href="https://firebase.google.com" rel="nofollow"&gt;Firebase&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Clock - &lt;a href="https://www.momentjs.com" rel="nofollow"&gt;Moment.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Location - &lt;a href="https://ipinfo.io/" rel="nofollow"&gt;IPInfo.io&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Screenshots&lt;/h4&gt;
&lt;h5&gt;
Home Page&lt;/h5&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1da1acfeffa36985e04960ca77bbb984591ad305e73f3f09b85ea5c23c36d256/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3332397977676a6a6b72706c30386e6b6c706c6b2e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/1da1acfeffa36985e04960ca77bbb984591ad305e73f3f09b85ea5c23c36d256/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3332397977676a6a6b72706c30386e6b6c706c6b2e6a706567" alt="Home Page"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
Dashboard&lt;/h5&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c6f5b99889b34dead70f4555d7a9362236bdb88a2fc1f01fdd8704b9a939c76f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f627665646161613079626c706e796e74756d70622e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/c6f5b99889b34dead70f4555d7a9362236bdb88a2fc1f01fdd8704b9a939c76f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f627665646161613079626c706e796e74756d70622e6a706567" alt="Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
Tasks&lt;/h5&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b3293474c2c737c32ff1f0a04f8df9b6cde00febcf8edcae69094fc3cc962ec7/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f6e6c367079746f6d736232683563346d337469302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/b3293474c2c737c32ff1f0a04f8df9b6cde00febcf8edcae69094fc3cc962ec7/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f6e6c367079746f6d736232683563346d337469302e6a706567" alt="Tasks"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
News&lt;/h5&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/abf826bc22954b2cbb5aab08aabe1e274ca7e1442fcb6df25a8e7eead7da551a/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f636a71336136356c64706f76776d6a786b6168642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/abf826bc22954b2cbb5aab08aabe1e274ca7e1442fcb6df25a8e7eead7da551a/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f636a71336136356c64706f76776d6a786b6168642e706e67" alt="News"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
Weather&lt;/h5&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9a7e5b7c8f1d41dc9d8ddfa1873cba517e694923a8feffa398684261dfcce405/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f666e3672373577677a6668626a737239346e38762e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/9a7e5b7c8f1d41dc9d8ddfa1873cba517e694923a8feffa398684261dfcce405/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f666e3672373577677a6668626a737239346e38762e6a706567" alt="Weather"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/AmoghSingh25/Uni-Tab"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h4&gt;
  &lt;a href="#link-to-website"&gt;
  &lt;/a&gt;
  &lt;a href="https://unitab.tk"&gt;Link to website&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;This website currently offers news, task trackers/To-Do list, a Web Search bar and a weather viewer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#software-used-"&gt;
  &lt;/a&gt;
  Software used : -
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;MongoDB Atlas - Storing User information and data like tasks.&lt;/li&gt;
&lt;li&gt;Node.js and Express - Backend server code and routing&lt;/li&gt;
&lt;li&gt;Weather - &lt;a href="https://www.openweathermap.org"&gt;OpenWeatherMap API&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;News - &lt;a href="https://newscatcherapi.com/"&gt;NewsCatcher News API&lt;/a&gt; and &lt;a href="https://newsdata.io/"&gt;NewsData.io API&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;User authentication and creation - &lt;a href="https://firebase.google.com"&gt;Firebase&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Clock - &lt;a href="https://www.momentjs.com"&gt;Moment.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Location - &lt;a href="https://ipinfo.io/"&gt;IPInfo.io&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#home-page"&gt;
  &lt;/a&gt;
  Home Page
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f2UTBHKF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/329ywgjjkrpl08nklplk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f2UTBHKF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/329ywgjjkrpl08nklplk.jpeg" alt="Home Page" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#dashboard"&gt;
  &lt;/a&gt;
  Dashboard
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jYcsazMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvedaaa0yblpnyntumpb.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYcsazMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvedaaa0yblpnyntumpb.jpeg" alt="Dashboard" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#tasks"&gt;
  &lt;/a&gt;
  Tasks
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6UM1RUaJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl6pytomsb2h5c4m3ti0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UM1RUaJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl6pytomsb2h5c4m3ti0.jpeg" alt="Tasks" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#news"&gt;
  &lt;/a&gt;
  News
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WXLwZySd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjq3a65ldpovwmjxkahd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WXLwZySd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjq3a65ldpovwmjxkahd.png" alt="News" width="880" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#weather"&gt;
  &lt;/a&gt;
  Weather
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aSmd1vX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn6r75wgzfhbjsr94n8v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aSmd1vX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn6r75wgzfhbjsr94n8v.jpeg" alt="Weather" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
  </channel>
</rss>
