<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I Learnt Logic Building in Programming! - 5 Tips To Build &amp; Improve Programming Logic</title>
      <author>Muhammad Maaz Shakeel</author>
      <pubDate>Sat, 26 Jun 2021 17:01:08 +0000</pubDate>
      <link>https://dev.to/procoder88/how-i-learnt-logic-building-in-programming-5-tips-to-build-improve-programming-logic-23o9</link>
      <guid>https://dev.to/procoder88/how-i-learnt-logic-building-in-programming-5-tips-to-build-improve-programming-logic-23o9</guid>
      <description>&lt;h3&gt;
  &lt;a href="#tip-1-divide-amp-conquer"&gt;
  &lt;/a&gt;
  Tip #1: Divide &amp;amp; Conquer
&lt;/h3&gt;

&lt;p&gt;Always divide the problem in different parts.&lt;br&gt;&lt;br&gt;
   &lt;strong&gt;For Example&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;This is a C code that just input for a number one and and a number two and simply add them.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   #include &amp;lt;stdio.h&amp;gt;

   int main(void)
   {
       int num1;
       printf("Number One: ");
       scanf("%i", &amp;amp;num1);
       int num2;
       printf("Number One: ");
       scanf("%i", &amp;amp;num2);
       printf("The Addition ofjavascrip those numbers is: %i", num1 + num2);
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;This program just adding two numbers inputted from the user. So, we can just divide this code.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;So, How are we going to divide this code, Well we can create a function called add that just return the value of addition of those numbers that inputted from the user.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;Lets Divide the code&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   #include &amp;lt;stdio.h&amp;gt;

   int add(int number1, int number2);   

   int main(void)
   {
       int num1;
       printf("Number One: ");
       scanf("%i", &amp;amp;num1);
       int num2;
       printf("Number One: ");
       scanf("%i", &amp;amp;num2);
       int addition = add(num1, num2);
       printf("The addition of those numbers is: %i", addition);
   }
   int add(int number1, int number2)
   {
       return number1 + number2;
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;So, We divided the code. This was an example of a simple program. Maybe you have a complex program, so you can divide them into functions or maybe you are making an app in react native.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;React-Native lets you break the code into it's own &lt;br&gt;
component. And you can create a file for that component and import that component.&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, You can break the code into it's own components in your own application. This will be more clean and more readable code.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-2-write-a-wellcommented-code"&gt;
  &lt;/a&gt;
  Tip #2: Write a well-commented code
&lt;/h3&gt;

&lt;p&gt;Write comments on every line of code, that explaining your code of line.&lt;br&gt;
&lt;strong&gt;So, Lets take the example of the code and write comments on that code we used in the last tip.&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#for-example"&gt;
  &lt;/a&gt;
  &lt;strong&gt;For Example&lt;/strong&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   #include &amp;lt;stdio.h&amp;gt;

   int add(int number1, int number2);   

   int main(void)
   {
       // Created the variable called num1 that will store the number of the input given from the user
       int num1;
       printf("Number One: ");
       scanf("%i", &amp;amp;num1);
       // Created the variable called num2 that will store the number of the input given from the user
       int num2;
       printf("Number One: ");
       scanf("%i", &amp;amp;num2);
       // Created a variable and stored the sum of those numbers in that variable by calling add function
       int addition = add(num1, num2);
       // Printing the Output
       printf("The addition of those numbers is: %i", addition);
   }
   // This function add simply returns the sum of two numbers
   int add(int number1, int number2)
   {
       return number1 + number2;
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, write comments that explains your every line of code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-3-learn-data-structures-and-algorithms"&gt;
  &lt;/a&gt;
  Tip #3. Learn Data structures and algorithms
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Programming is all about data structure and algorithms. &lt;code&gt;Data structures&lt;/code&gt; are the fundamentals of all programming languages. It means that if you want to have a good command over any programming language, then you should start with the &lt;code&gt;data structures&lt;/code&gt; of that programming language.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you get a better command over the &lt;code&gt;data structure&lt;/code&gt; of programming languages, then you can quickly improve your &lt;code&gt;programming logic&lt;/code&gt; for that language. Now you know the best way of how to develop logical thinking in programming.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-learn-about-programming-paradigms"&gt;
  &lt;/a&gt;
  4. Learn about Programming paradigms
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;It would help if you also tried to learn the programming paradigms. There are many types of &lt;code&gt;programming paradigms&lt;/code&gt;. One of the most popular &lt;code&gt;programming paradigms&lt;/code&gt; is &lt;code&gt;object-oriented programming&lt;/code&gt;. The programming paradigms also works as the blueprint.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With the help of this blueprint, you follow a predefined path to create the projects. It would help if you created plenty of projects using the same &lt;code&gt;programming paradigms&lt;/code&gt; to have proper command over it. It will help you to improve your &lt;code&gt;programming logic&lt;/code&gt;.&lt;/strong&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-start-exploring-code-from-experts"&gt;
  &lt;/a&gt;
  5. Start exploring code from experts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;There are hundreds of ways to write a &lt;code&gt;program&lt;/code&gt; to solve a particular problem. In programming, we have many ways to solve many problems. You may use different logic to solve the problem. And the other programming may use different logic to solve the same problem. That programmer might use the most optimal and straightforward way to solve the problem.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Therefore you should look at other people‚Äôs code; it will help you to advance as a programmer. &lt;code&gt;Github&lt;/code&gt; is one of the most &lt;code&gt;popular programming platforms&lt;/code&gt; where you can see a lot of great projects and lots of programmers to solve the most &lt;code&gt;complex problems&lt;/code&gt; with a short length of code.&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#so-i-hope-this-will-going-to-be-helpful-for-you-thanks-for-reading"&gt;
  &lt;/a&gt;
  So, I hope this will going to be helpful for you. Thanks for reading.
&lt;/h4&gt;

</description>
    </item>
    <item>
      <title>üé¨Build A Weather App | JavaScript [Beginners]‚ú®</title>
      <author>Robson Muniz</author>
      <pubDate>Sat, 26 Jun 2021 16:39:08 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/build-a-weather-app-javascript-beginners-1722</link>
      <guid>https://dev.to/robsonmuniz16/build-a-weather-app-javascript-beginners-1722</guid>
      <description>&lt;p&gt;Build A Weather App With Vanilla Javascript Tutorial | Javascript For Beginners&lt;br&gt;
Using JavaScript APIs.&lt;/p&gt;



&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/eMzHhu4TaqY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;üèÜ&lt;strong&gt;Recommended Projects&lt;/strong&gt;üèÜ&lt;/p&gt;

&lt;p&gt;üé¨ Login &amp;amp; Registration Form Using HTML &amp;amp; CSS &amp;amp; JS&lt;br&gt;
‚û§&lt;a href="https://youtu.be/I5_T547tHf0"&gt;https://youtu.be/I5_T547tHf0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üé¨ Neumorphism Login Form | HTML &amp;amp; CSS &lt;br&gt;
‚û§&lt;a href="https://youtu.be/QWh0S-3D7uY"&gt;https://youtu.be/QWh0S-3D7uY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üé¨ Top 10 Best VS Code Extensions | 2021&lt;br&gt;
‚û§&lt;a href="https://youtu.be/bwPmpducPgw"&gt;https://youtu.be/bwPmpducPgw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üé¨ Amazing Social Media Buttons Hover Effects | HTML &amp;amp; CSS &lt;br&gt;
‚û§ &lt;a href="https://youtu.be/P9pi4hq7BBA"&gt;https://youtu.be/P9pi4hq7BBA&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;üé¨ Animated Login Form | HTML, CSS &amp;amp; JavaScript &lt;br&gt;
‚û§ Watch: &lt;a href="https://youtu.be/ogNwc45qHKo"&gt;https://youtu.be/ogNwc45qHKo&lt;/a&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>api</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Let's learn about few networking side command in Linux/Unix</title>
      <author>Payalsasmal</author>
      <pubDate>Sat, 26 Jun 2021 16:33:39 +0000</pubDate>
      <link>https://dev.to/payalsasmal/let-s-learn-about-few-networking-side-command-in-linux-unix-3b7d</link>
      <guid>https://dev.to/payalsasmal/let-s-learn-about-few-networking-side-command-in-linux-unix-3b7d</guid>
      <description>&lt;p&gt;Hi There!&lt;br&gt;
I was working on few network side commands. I thought to share this with you allüòÉ. Here you go ‚úåÔ∏è&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. netstat:&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;netstat&lt;/em&gt; stands for Network Statistics. This is very basic command used to print network connections, routing tables, interface statistics etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o8q5xIoE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s26k88eneb7ioiuza899.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o8q5xIoE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s26k88eneb7ioiuza899.png" alt="netstat details example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;netstat [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are various options which are supported by &lt;strong&gt;netstat&lt;/strong&gt; command. Listing few of them in below&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;netstat -i: &lt;em&gt;i&lt;/em&gt; stands for &lt;em&gt;Interface&lt;/em&gt;.(Network Interface shows that how kernel links up with the software network side to the hardware network side.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRuBepu5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wm3scpw0pexhymk53jl7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRuBepu5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wm3scpw0pexhymk53jl7.png" alt="netstat -i example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;netstat -r: &lt;em&gt;r&lt;/em&gt; stands for &lt;a href="https://en.wikipedia.org/wiki/Routing"&gt;Routing&lt;/a&gt;. It will show kernel IP routing tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CEGN6rpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mx8acwzklx55x8zld4u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CEGN6rpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mx8acwzklx55x8zld4u.png" alt="netstat -r example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. nslookup:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;nslookup&lt;/strong&gt; stands for &lt;em&gt;Name Server lookup&lt;/em&gt;. It helps us to check the IP address mapped to DNS(Domain Name System) and vice versa. This is very useful when we want to troubleshoot the DNS related issue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fjvJzysG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9c5ildqmhblwsi9yppft.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fjvJzysG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9c5ildqmhblwsi9yppft.png" alt="nslookup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nslookup [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;nslookup&lt;/strong&gt; has two modes &lt;em&gt;Interactive&lt;/em&gt; and &lt;em&gt;Non-Interactive&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Interactive Mode:&lt;/strong&gt; When we have various hosts and domains then we should use this mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kwMfJr4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84o3by8urljq40yo9pjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kwMfJr4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84o3by8urljq40yo9pjd.png" alt="nslookup interactive mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Non-Interactive Mode:&lt;/strong&gt; We can use this for single host or domain.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xedlMPKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmh5d8oud6jmg4qaoiop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xedlMPKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmh5d8oud6jmg4qaoiop.png" alt="nslookup non-interactive mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. ping:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;ping&lt;/strong&gt; stands for &lt;strong&gt;Packet Internet or Inter-network Grouper&lt;/strong&gt;. This command send a echo request to host network and when host network receive the request, it send an echo response through &lt;a href="https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol"&gt;Internet Control Message Protocol(ICMP)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1kZuHI7v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3cvn7uu4v3grrwocmi9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1kZuHI7v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3cvn7uu4v3grrwocmi9.png" alt="ping command"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ping [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;ping -i:&lt;/strong&gt; &lt;em&gt;i&lt;/em&gt; stands for &lt;em&gt;Interval&lt;/em&gt;. Interval second between sending each packet.The default waiting interval sec is 1 sec while sending packet. We can customise that using this command.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dm_aaxOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8jrwmn2grinxmb0f4zx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dm_aaxOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8jrwmn2grinxmb0f4zx.png" alt="ping interval"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;ping -w:&lt;/strong&gt; Here &lt;em&gt;w&lt;/em&gt; means deadline. How many packets do you want to send as request and get response. This command can help to number of packets delivery and automatically will be stopped once it is completed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YjPNJGij--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tb27vgl0aylyacev46jp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YjPNJGij--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tb27vgl0aylyacev46jp.png" alt="ping deadline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. curl:&lt;/strong&gt;&lt;br&gt;
*&lt;em&gt;curl&lt;/em&gt; is used to transfer data to or from server using most of the protocols(HTTP,HTTPS,FTP,SMTP,TELNET etc).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WBqiGW7z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8w2do9nlp6is8v0s5zw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WBqiGW7z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8w2do9nlp6is8v0s5zw.png" alt="Curl description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Note: we can use multiple options together. we will be seeing these in below examples&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;curl -o:&lt;/strong&gt; &lt;em&gt;o&lt;/em&gt; stands for &lt;em&gt;output&lt;/em&gt;. We can write the output to a file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjFV6Wkm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f85ctczhim7rroqm5fht.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjFV6Wkm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f85ctczhim7rroqm5fht.png" alt="curl output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;curl -s:&lt;/strong&gt; &lt;em&gt;s&lt;/em&gt; stands for &lt;em&gt;silent&lt;/em&gt;. WE can use it when we don't want to see the progress bar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pp14IptO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/js53flev3mznywjajwc9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pp14IptO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/js53flev3mznywjajwc9.png" alt="curl s"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;sending email:&lt;/strong&gt; Use the below commands we can send the email. 
&lt;em&gt;Note: If you have are using gmail and you have enabled 2 steps authentication google will not allow you to do that from non-Google app. You might get the security alert üîí from google.&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mMaPpdU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgc3rowqe58j3p1ugl5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mMaPpdU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgc3rowqe58j3p1ugl5x.png" alt="Sending email through curl"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;mail.txt has below details:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PqpmI9kM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9s07s077y0we46oox8k7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PqpmI9kM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9s07s077y0we46oox8k7.png" alt="curl mail.txt file"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. ssh:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;ssh&lt;/strong&gt; stands for &lt;strong&gt;Secure Shell&lt;/strong&gt;. It is used for logging into the remote machine and execute the commands on remote machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ssh -i&lt;/strong&gt;: &lt;em&gt;i&lt;/em&gt; stands for &lt;em&gt;identity file&lt;/em&gt;. It selects a file for public key authentication.üîê&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
It will connect to remote ubuntu server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i4ZpvGbW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d0enp9plby4n9qz3lyf5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i4ZpvGbW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d0enp9plby4n9qz3lyf5.png" alt="ssh i"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;server_key:&lt;/strong&gt; This is the public key of the server&lt;br&gt;
&lt;strong&gt;ubuntu:&lt;/strong&gt; Server name&lt;br&gt;
&lt;strong&gt;34.208.206.133:&lt;/strong&gt; server ip address.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Note: For every command do man &amp;lt;command&amp;gt; and &amp;lt;command&amp;gt; --help for more info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hope you like this articlesü•∞,I would love to connect on &lt;a href="https://github.com/PayalSasmal10"&gt;GitHub&lt;/a&gt; &lt;a href="https://twitter.com/payalsasmal"&gt;Twitter&lt;/a&gt; &lt;a href="https://www.linkedin.com/in/payal-sasmal-64204311a/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>archlinux</category>
      <category>bash</category>
      <category>unix</category>
    </item>
    <item>
      <title>‚úÖ Why Do You Want To Leave Your Current Role? | Facebook Behavioral (Jedi) Interview Series üî•</title>
      <author>The Interview Sage</author>
      <pubDate>Sat, 26 Jun 2021 16:03:32 +0000</pubDate>
      <link>https://dev.to/theinterviewsage/why-do-you-want-to-leave-your-current-role-facebook-behavioral-jedi-interview-series-320d</link>
      <guid>https://dev.to/theinterviewsage/why-do-you-want-to-leave-your-current-role-facebook-behavioral-jedi-interview-series-320d</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pJ_ySH3dHWw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before we discuss this question, let us recap what the Behavioral Interview Round at Facebook is.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Behavioral Interview Round is also known as the Jedi Interview round at Facebook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is about you and your history, your r√©sum√©, and your motivation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The purpose of this interview is to assess whether the candidate will thrive in Facebook's peer-to-peer, minimal process, and unstructured engineering organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Software Engineers, the behavioral interview is actually part behavioral and part coding. The coding part is a shorter version of the usual coding interviews and is included to supplement the other two coding interviews to get an additional coding signal.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-amp-tricks-to-effectively-prepare-for-behavioral-interviews"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" alt="Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews" title="Behavioral Interview Tips &amp;amp; Tricks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Know yourself! Take the time to review your r√©sum√©, as the interviewer will almost certainly ask about key events in your work history.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have concrete examples or anecdotes to support each of the questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Familiarize yourself with Facebook's mission statement and its five core values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be Bold&lt;/li&gt;
&lt;li&gt;Focus on Impact&lt;/li&gt;
&lt;li&gt;Move Fast&lt;/li&gt;
&lt;li&gt;Be Open&lt;/li&gt;
&lt;li&gt;Build Social Value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be yourself! Be open and honest about your successes and failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be humble and focus on teamwork, leadership, and mentorship qualities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, let us review how to effectively answer this question.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#question-why-do-you-want-to-leave-your-current-role"&gt;
  &lt;/a&gt;
  Question: Why do you want to leave your current role?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SwubFkiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1uayy0m3ler5t7vvwrt3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SwubFkiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1uayy0m3ler5t7vvwrt3.png" alt="Why do you want to leave your current role?" title="Why do you want to leave your current role?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.youtube.com/watch?v=ObFGBUF-TuQ&amp;amp;t=1478s"&gt;Video Explanation&lt;/a&gt; with Evaluation Criteria, Response Framework, and Tips &amp;amp; Tricks.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Interviewers often ask the question in behavioral interviews, why are you leaving your current role?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#evaluation-criteria"&gt;
  &lt;/a&gt;
  Evaluation Criteria
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gFE41fKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkqwbe17joemqtw2kqzu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFE41fKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkqwbe17joemqtw2kqzu.png" alt="Evaluation Criteria for Why do you want to leave your current role?" title="Evaluation Criteria for 'Why do you want to leave your current role?'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Through this question, the interviewer is trying to understand your intrinsic motivation to check whether you are running away from something or running towards something.&lt;/p&gt;

&lt;p&gt;It is an excellent opportunity to demonstrate to the interviewer that you are someone who looks forward with a positive attitude in general.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#response-framework"&gt;
  &lt;/a&gt;
  Response Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kMK8OwKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6do3w5d55ppznn47i1g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kMK8OwKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6do3w5d55ppznn47i1g.png" alt="Response Framework for Why do you want to leave your current role?" title="Response Framework for 'Why do you want to leave your current role?'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our advice for answering this question is to pick a couple of positive achievements in your current role and articulate how you can use these experiences to achieve your goals in the new role.&lt;/p&gt;

&lt;p&gt;Additionally, you can also emphasize the things you are looking forward to in your new job, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Working on larger-scale problems,&lt;/li&gt;
&lt;li&gt;Better opportunities for impact, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It would be best to tie your story to the specific role and the company you are applying for. This will help the interviewer align your interests to the job requirements and make an informed decision.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gc43szIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yq33v4u3n9buhpi6oop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gc43szIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yq33v4u3n9buhpi6oop.png" alt="Tips and Tricks for Why do you want to leave your current role?" title="Tips &amp;amp; Tricks for 'Why do you want to leave your current role?'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are some tips and tricks to effectively prepare for this question.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Always remain calm and professional.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Refrain from being negative and avoid blaming your employer, coworkers, or manager.&lt;/li&gt;
&lt;li&gt;Companies generally do not like to hire people who complain a lot.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Focus on what you have to look forward to and not what you are leaving behind. Some examples are that you would like to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work on larger-scale problems,&lt;/li&gt;
&lt;li&gt;Have a better opportunity for impact, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relate your response to the specific role and the company you are interviewing for.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This will also demonstrate to the interviewer that you have done your homework about their company.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Familiarize yourself with the company's vision and its core values.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This will help you to better align your answer to their interests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare and practice the response for this question beforehand, as it will be tough to structure your answer on the spot during the interview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not memorize the answer as it should come naturally, and you should sound confident to the interviewer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#preparation-material"&gt;
  &lt;/a&gt;
  Preparation Material
&lt;/h1&gt;

&lt;p&gt;Learn more about the Evaluation Criteria, Response Framework, and Tips &amp;amp; Tricks to effectively prepare and answer the top questions asked in the Behavioral Interviews at Facebook. Certain special cases are also discussed which are usually faced by the candidates during these interviews.&lt;/p&gt;

&lt;p&gt;‚¨áÔ∏è &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Detailed Written Notes on Top Facebook Behavioral Interview Questions&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-behavioral-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook Behavioral Interview
&lt;/h1&gt;

&lt;p&gt;If you have not read our first article on Top Facebook Behavioral Interview Questions, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-behavioral-interview-questions-part-1-2a0o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;‚úÖ Top Facebook Behavioral Interview Questions (Part 1) | Facebook Jedi Interview Round üî•&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage „Éª May 15 „Éª 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-system-design-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook System Design Interview
&lt;/h1&gt;

&lt;p&gt;In case if you have not read our series on Cracking the Facebook System Design Interview, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-system-design-interview-questions-31np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook System Design Interview Questions (Part 1) | Facebook Pirate Interview Round&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage „Éª Jan 4 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h1&gt;

&lt;p&gt;‚úÖ &lt;a href="https://bit.ly/Educative-Unlimited"&gt;Educative.io Unlimited Plan [üí∞ 10% off for first 100 users]&lt;/a&gt;&lt;br&gt;
‚úÖ &lt;a href="https://bit.ly/Try-Exponent"&gt;TryExponent.com Membership [üí∞ Limited Time 10% offer]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üë©‚Äçüíª &lt;a href="https://www.educative.io/courses/grokking-the-system-design-interview?aff=KQZl"&gt;Best System Design Interview Course&lt;/a&gt;&lt;br&gt;
üöÄ &lt;a href="https://bit.ly/SWE-Interview-Course"&gt;Complete SWE Interview Course [üí∞ Limited Time 10% offer]&lt;/a&gt;&lt;br&gt;
üôã‚Äç‚ôÄÔ∏è &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Behavioral Interview Guide [üí∞ Special Discount]&lt;/a&gt;&lt;br&gt;
üìö &lt;a href="https://smarturl.it/InterviewPrepBook"&gt;Recommended Interview Preparation Book (on Amazon)&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--121vjxPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o2l00b1bt3nl8fdfb0nn.png" alt="Buy Me a Coffee"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;‚òïÔ∏è Buy us a Coffee at &lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;BuyMeACoffee.com/InterviewSage&lt;/a&gt;
&lt;/center&gt;



&lt;blockquote&gt;
&lt;p&gt;This article is part of the series on Behavioral Interviews at Facebook. So, follow us to get notified when our next article in this series is published. Thanks for reading! &lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__553012"&gt;
  
    .ltag__user__id__553012 .follow-action-button {
      background-color: #3b49df !important;
      color: #f9fafa !important;
      border-color: #3b49df !important;
    }
  
    &lt;a href="/theinterviewsage" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/theinterviewsage"&gt;The Interview Sage&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/theinterviewsage"&gt;Our goal is to create Software Eng Interview tutorials to help you get a job at companies like Facebook, Google, Apple, &amp;amp; Amazon. We will deep-dive into System Design, Coding, &amp;amp; Behavioral interviews.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;/blockquote&gt;

&lt;p&gt;üì∏ Some images used are from free&lt;span&gt;pik&lt;/span&gt;.com: Freepik, pch.vector, vectorjuice, pikisuperstar, raw&lt;span&gt;pixel&lt;/span&gt;.com, slidesgo, stories, Upklyak, jcomp&lt;/p&gt;

&lt;p&gt;&lt;a href="https://disclosureanddisclaimer.theinterviewsage.com/"&gt;Full Disclosure &amp;amp; Disclaimer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>VS Code keyboard shortcuts (windows)</title>
      <author>Naveenchandar</author>
      <pubDate>Sat, 26 Jun 2021 15:57:37 +0000</pubDate>
      <link>https://dev.to/naveenchandar/vs-code-keyboard-shortcuts-windows-455e</link>
      <guid>https://dev.to/naveenchandar/vs-code-keyboard-shortcuts-windows-455e</guid>
      <description>&lt;p&gt;Here's the list of vs code keyboard shortcuts.It will work both for workspace and separate folders.&lt;/p&gt;

&lt;p&gt;I have windows machine so I will be posting the list related to windows. Sorry mac users :(.&lt;/p&gt;

&lt;p&gt;There are lots of vs code inbuilt shortcuts available. If needed you can create a custom shortcuts too.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + b&lt;/strong&gt; (&lt;em&gt;Toggle sidebar&lt;/em&gt;) - It is used to toggle the sidebar and the editor workspace.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + p&lt;/strong&gt; (&lt;em&gt;Go to file&lt;/em&gt;) - If you are working on a larger applications and if the folder structure is vast then definitely searching for a particular file in the application will be cumbersome. During at that time this shortcut will be very handy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + `&lt;/strong&gt; (&lt;em&gt;Toggle Terminal&lt;/em&gt;) - It is used to toggle the vs code terminal.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + `&lt;/strong&gt; (&lt;em&gt;New Terminal&lt;/em&gt;) - It is used to open new vs code terminal.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + G&lt;/strong&gt; (&lt;em&gt;Go to line&lt;/em&gt;) - It is used to go to particular line number in the current file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + H&lt;/strong&gt; (&lt;em&gt;Replace&lt;/em&gt;) - Suppose your file is too long and if you are using global variable and there is in need of replacing the variable name in all the places of same file. This shortcut is used to find all the matched and replaces them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + F&lt;/strong&gt; (&lt;em&gt;Find&lt;/em&gt;) - It is used to find the search results. It may be a variable name or function name etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + F&lt;/strong&gt; (&lt;em&gt;Find&lt;/em&gt;) - It is used to search globally all over the projects for the search result.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Ctrl + *&lt;/em&gt; (&lt;em&gt;Split Editor&lt;/em&gt;) - It is used to split the editor in to two. This will be very useful while comparing the changes in your files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alt + uparrow/downarrow&lt;/strong&gt; (&lt;em&gt;Move code Up/Down&lt;/em&gt;) - It is used to move the selected code up/down from the current line.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + n&lt;/strong&gt; (&lt;em&gt;New file&lt;/em&gt;) - It is used to open new untitled file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + N&lt;/strong&gt; (&lt;em&gt;New window&lt;/em&gt;) - It is used to open entire new vs code window.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + o&lt;/strong&gt; (&lt;em&gt;open file&lt;/em&gt;) - It is used to open file present in your local system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + K + O&lt;/strong&gt; (&lt;em&gt;New folder&lt;/em&gt;) - It is used to open the entire new folder and this will replace the current folder in vs code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + w&lt;/strong&gt; (&lt;em&gt;close file&lt;/em&gt;) - It is used to close the editor focused file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Shift + alt + uparrow/downarrow&lt;/strong&gt; (&lt;em&gt;Copy code up/down&lt;/em&gt;) - It is used to copy the same selected code up/down from the current line.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + X&lt;/strong&gt; (&lt;em&gt;Show extensions&lt;/em&gt;) - It is used to open the extensions menu available in the sidebar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + E&lt;/strong&gt; (&lt;em&gt;View explorer&lt;/em&gt;) - It is used to open the current project with current file focused on the sidebar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + ,&lt;/strong&gt; (&lt;em&gt;settings&lt;/em&gt;) - It is used to open the settings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + M&lt;/strong&gt; (&lt;em&gt;New file&lt;/em&gt;) - It is used to open the terminal with problems tab focused to check the errors and warnings in the current project.Just replace the 'M' to 'U' to focus the output tab.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + T&lt;/strong&gt; (&lt;em&gt;Re-open a Closed Editor&lt;/em&gt;) - It is used to open a recently closed file in your current project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + backspace&lt;/strong&gt; (&lt;em&gt;deletewordleft&lt;/em&gt;) - It is used to delete the entire word on the left while typing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + k, z&lt;/strong&gt; (&lt;em&gt;Toggle Zen mode&lt;/em&gt;) - It is used to open the zen mode i.e., without any distractions only the editor space will be focused.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + /&lt;/strong&gt; (&lt;em&gt;Toggle line comment&lt;/em&gt;) - It is used to toggle the specific line comment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Shift + alt + A&lt;/strong&gt; (&lt;em&gt;Toggle block comment&lt;/em&gt;) - It is used to toggle comments between the blocks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + [&lt;/strong&gt; (&lt;em&gt;Fold cell&lt;/em&gt;) - It is used to fold available code in between the blocks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + ]&lt;/strong&gt; (&lt;em&gt;Unfold cell&lt;/em&gt;) - It is used to unfold available code in between the blocks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Shift + alt + F&lt;/strong&gt; (&lt;em&gt;Format document&lt;/em&gt;) - It is used to format code in the current file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + k + f&lt;/strong&gt; (&lt;em&gt;Format selection&lt;/em&gt;) - It is used to format the selected code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ctrl + shift + c&lt;/strong&gt; (&lt;em&gt;Open windows terminal&lt;/em&gt;) - It is used to open the windows terminal instead of vs code terminal.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To create custom key bindings please check this &lt;a href="https://code.visualstudio.com/docs/getstarted/keybindings#_common-questions"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To see complete list of inbuilt keyboard shortcuts please go through this &lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf"&gt;Link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is my first post. Apologize for my grammar mistakes if any and for my bad english. I will improve in my upcoming posts.&lt;/p&gt;

&lt;p&gt;Thanks guys for reading this post. See you guys in the next post with list of vscode extensions.&lt;/p&gt;

&lt;p&gt;Have a Great Day üòä!!!.&lt;/p&gt;

</description>
      <category>vscode</category>
    </item>
    <item>
      <title>What is Linux ? ü§î</title>
      <author>KUMAR HARSH</author>
      <pubDate>Sat, 26 Jun 2021 15:37:14 +0000</pubDate>
      <link>https://dev.to/cenacr007_harsh/what-is-linux-4d8h</link>
      <guid>https://dev.to/cenacr007_harsh/what-is-linux-4d8h</guid>
      <description>&lt;p&gt;I have recently started learning Linux and so I decided to document my journey along the way, so I would be writing a Blog series where I will cover everything that I have learned.&lt;/p&gt;

&lt;p&gt;The entire content credits goes to my instructor &lt;strong&gt;&lt;a href="https://twitter.com/holtbt"&gt;Brian Holt&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So without further ado, let's get on with todays blog.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started-with-a-little-bit-of-backstory-about-linux"&gt;
  &lt;/a&gt;
  Let‚Äôs get started with a little bit of backstory about Linux üë®‚Äçüè´
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e2Xkc96b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d70qfbzl5niz7v5kj6s4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2Xkc96b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d70qfbzl5niz7v5kj6s4.jpg" alt="backstory"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To learn about how Linux came to be, let‚Äôs go back to the beginning to 1969 where Ken Thompson and Dennis Ritchie of Bell Laboratories developed the UNIX operating system. It was later rewritten in C to make it more portable and eventually became a widely used operating system.&lt;/p&gt;

&lt;p&gt;A decade or so later, Richard Stallman started working on the GNU (GNU is Not UNIX) project, the GNU kernel called Hurd, which unfortunately never came to completion. The GNU General Public License (GPL), a free software license, was also created as a result of this.&lt;/p&gt;

&lt;p&gt;The kernel is the most important piece in the operating system. It allows the hardware to talk to the software. It also does a whole lot of other cool things. For now, just know that the kernel controls pretty much everything that happens on your system.&lt;/p&gt;

&lt;p&gt;During this time other efforts such as BSD, MINIX, etc. were developed to be UNIX like-systems. However, one thing that all these UNIX like-systems had in common was the lack of a unified kernel.&lt;/p&gt;

&lt;p&gt;Then in 1991, a young fellow named Linus Torvalds started developing what we now know today as the Linux kernel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If at this you are wondering why I am giving you a history lesson, its because, I think it's useful to know why something was created to understand what problems it can solve for you.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's talk a bit more about UNIX so that we can understand UNIX like-systems better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unix"&gt;
  &lt;/a&gt;
  UNIX
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OcV26OYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l814vtlzw3qzfwvlvv0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OcV26OYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l814vtlzw3qzfwvlvv0.png" alt="unix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Linux is considered a Unix-like operating system which basically means that Linux derives heavy inspiration from Unix without actually conforming to be a full Unix operating system. macOS and FreeBSD would be two more examples of a Unix-like operating system.&lt;/p&gt;

&lt;p&gt;Unix was created in the 70s and has pretty much inspired every operating system created since then. Nearly everything you're going to learn today was originated in Unix itself. A big part of Unix software is the idea of the &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Unix_philosophy"&gt;Unix philosophy&lt;/a&gt;&lt;/strong&gt; which is a sort of digital minimalism when it comes to coding. The idea is instead of having a few very specialized tools (or programs) we should have many small, composable tools that we can use to compose to solve larger problems. The influence of this is still felt and talked about today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heres-what-they-originally-wrote"&gt;
  &lt;/a&gt;
  Here's what they originally wrote:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Make each program do one thing well. To do a new job, build afresh rather than complicate old programs by adding new "features".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expect the output of every program to become the input to another, as yet unknown, program. Don't clutter output with extraneous information. Avoid stringently columnar or binary input formats. Don't insist on interactive input.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Design and build software, even operating systems, to be tried early, ideally within weeks. Don't hesitate to throw away the clumsy parts and rebuild them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use tools in preference to unskilled help to lighten a programming task, even if you have to detour to build the tools and expect to throw some of them out after you've finished using them.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#linux"&gt;
  &lt;/a&gt;
  Linux
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jl0WGj3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cfn8xueofhpz4s5wivz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jl0WGj3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cfn8xueofhpz4s5wivz.jpeg" alt="penguin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Linux isn't directly Unix, just directly inspired by it, and incorporates many of its ideas and interfaces into it. It was created in 1991 by Linus Torvalds who is still an influential figure today and still runs the Linux project. He created Linux because at the time there was no single free, open-source reimplementation of the Unix operating system (the BSD kernel wasn't yet available yet) so he wrote his own kernel which became known as the Linux kernel.&lt;/p&gt;

&lt;p&gt;From here the project took off and was adopted far and wide. (As of writing) all of the top 500 super computers run on Linux, much of the mobile phone market share (thanks to Android being based on Linux), and many of the servers running your favorite websites. Suffice to say, Linux is incredibly important to the modern computing world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TIME has come to answer the most important Question&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-linux"&gt;
  &lt;/a&gt;
  Why Linux ü§î
&lt;/h2&gt;

&lt;p&gt;So why Linux over other operating systems?&lt;/p&gt;

&lt;p&gt;First, it's free. Anyone can use Linux to do anything without paying anyone a dime. This is useful for college students who don't have any money but it's also critical for large businesses running thousands or tens-of-thousands of servers. It can save them millions of dollars to not have to pay for an operating system.&lt;/p&gt;

&lt;p&gt;It's very well maintained. Because Linux is such a popular operating system, it has a lot of eyes on it. Engineers from all over the world and all over the industry are constantly contributing fixes and new features to Linux, both on their own free time and during the course of their jobs.&lt;/p&gt;

&lt;p&gt;It runs just about anywhere. Linux not only runs on x86 (the Intel / AMD processor architecture your computer is likely using) but it runs on Internet-of-Things devices, phones, fridges, cars, etc. If it has a processor in it, chances are you can get Linux running on it already.&lt;/p&gt;

&lt;p&gt;Most of the the things you need already exist for it. Linux already has many of the tools one would need to run servers, devices, media, etc. all on it already, meaning you wouldn't need to create it. Linux has a rich ecosystem of programs available that are also likely free.&lt;/p&gt;

&lt;p&gt;The knowledgebase for Linux is enormous. Having a problem? Chances are someone else already had the same problem and you can find the solution on StackOverflow or someone's blog. Because the knowledgebase is so large, it's really easy to hire someone with deep knowledge of Linux and for you it's profitable to learn Linux because so many jobs demand the skillset.&lt;/p&gt;

&lt;p&gt;At its core, Linux is the kernel. Anything based on this Linux kernel is a considered a Linux distribution, or distro for short.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-a-linux-distribution"&gt;
  &lt;/a&gt;
  Choosing a Linux Distribution ü§Ø
&lt;/h2&gt;

&lt;p&gt;We learned about the Linux kernel which powers millions of devices a day.&lt;/p&gt;

&lt;p&gt;One thing before we move forward, the term Linux is actually quite a misnomer, since it actually refers to the Linux kernel. However, many distributions use the Linux kernel so therefore are commonly known as Linux operating systems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-linux-system-is-divided-into-three-main-parts"&gt;
  &lt;/a&gt;
  A Linux system is divided into three main parts:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hardware - This includes all the hardware that your system runs on as well as memory, CPU, disks, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux Kernel - As we discussed above, the kernel is the core of the operating system. It manages the hardware and tells it how to interact with the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;User Space - This is where users like yourself will be directly interacting with the system.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So the first step we‚Äôll need to take is to install Linux on your machine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#there-are-many-linux-distributions-to-choose-from-well-just-go-over-the-most-popular-options"&gt;
  &lt;/a&gt;
  There are many Linux distributions to choose from, we‚Äôll just go over the most popular options.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.debian.org/"&gt;Debian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K1Mx3Rmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmy03aykdh0avk7b0fp1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K1Mx3Rmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmy03aykdh0avk7b0fp1.jpeg" alt="debian"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Debian is an overall great operating system for any platform.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ubuntu.com/"&gt;Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mL3S8smt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55q4nm1g0dwx8v0u59au.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mL3S8smt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55q4nm1g0dwx8v0u59au.png" alt="ubuntu"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great for any platform, desktop, laptop and server.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linuxmint.com/"&gt;Linux Mint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O7rWBI4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9bmgiy52mw53ig1qidzq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O7rWBI4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9bmgiy52mw53ig1qidzq.jpg" alt="mint"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great for desktop and laptop&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux"&gt;Red Hat Enterprise Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F79xkpH2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/994340da4exxm3dxyrnc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F79xkpH2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/994340da4exxm3dxyrnc.png" alt="redhat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As described by the name it's mostly used in enterprise, so if you need a solid server OS this would be a good one.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://archlinux.org/"&gt;Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zbd59yM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eny55xgn0hnfij3mmp6k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zbd59yM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eny55xgn0hnfij3mmp6k.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great for desktop and laptop. If you also have a small device such as a Raspberry Pi and need to stick a lightweight OS on it, you can‚Äôt go wrong with Arch.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#few-more-popular-ones"&gt;
  &lt;/a&gt;
  Few more popular ones:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.kali.org/"&gt;Kali&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.alpinelinux.org/"&gt;Alpine&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.centos.org/"&gt;CentOS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.gentoo.org/"&gt;Gentoo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://getfedora.org/"&gt;Fedora&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://software.opensuse.org/"&gt;openSUSE&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-run-linux"&gt;
  &lt;/a&gt;
  Let's Run Linux üòé
&lt;/h2&gt;

&lt;p&gt;So, enough chit-chat, let's run Linux!!&lt;/p&gt;

&lt;p&gt;Which operating system are you using right now?&lt;/p&gt;

&lt;p&gt;If you're using a desktop running Linux of some variety, you're already set.&lt;/p&gt;

&lt;p&gt;For Windows and MacOS users we have some options:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#virtualization"&gt;
  &lt;/a&gt;
  Virtualization
&lt;/h3&gt;

&lt;p&gt;We're going to running our Linux through a process call virtualization. We'll be running a virtual machine which is frequently abbreviated as VMs. VMs are an operating system running within another operating system, called the host machine. The host machine will create a virtual environment with virtual access to its hardware to the VM. The VM will have no idea that it's not actually running on real hardware; all it can see is the resources that the host is providing it.&lt;/p&gt;

&lt;p&gt;I'll give you several options so you can do what's best fit for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-either-macos-or-windows-multipass"&gt;
  &lt;/a&gt;
  For either macOS or Windows: &lt;a href="https://multipass.run/"&gt;Multipass&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Multipass is a great new tool from the folks at Canonical (who make Ubuntu). It's a super easy way to spin up and spin down little VMs to try things out. You can even spin up multiple and play with them together. I'd recommend this for most users of macOS and Windows since it just sort of works without a lot of effort and you don't have to install everything yourself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are on Windows 10 Home&lt;/strong&gt; you need to install &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt; too in addition to Multipass.&lt;/p&gt;

&lt;p&gt;Multipass will use VirtualBox if it can't use &lt;strong&gt;Microsoft Hyper-V&lt;/strong&gt; (a feature only available in Windows 10 Pro.) If you are on MacOS or Windows 10 Pro, you do not need VirtualBox.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://multipass.run/docs/installing-on-windows"&gt;Here are the Windows 10 instructions&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://multipass.run/docs/installing-on-macos"&gt;Here are the MacOS instructions&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you have Multipass installed, you should be able to run it and open a new shell.&lt;/p&gt;

&lt;p&gt;You should be here. It has you logged in as the user "ubuntu" who has password less root privileges.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jPpAkzJR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zgdgbdaboz9peg4w2a9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jPpAkzJR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zgdgbdaboz9peg4w2a9.png" alt="multipass"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-either-macos-or-windows-virtualbox"&gt;
  &lt;/a&gt;
  For either macOS or Windows: &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Oracle makes a product called VirtualBox. VirtualBox is a hosted hypervisor which is another way of saying that this is a program that allows you to run VMs. It can run Windows, Linux, macOS, and many other VMs.&lt;/p&gt;

&lt;p&gt;You'll need to download VirtualBox and you'll need to download the &lt;a href="https://ubuntu.com/download/server"&gt;Ubuntu Server Installer&lt;/a&gt; as well and go through the whole process.&lt;/p&gt;

&lt;p&gt;It bears mentioning that VirtualBox isn't the only option. &lt;a href="https://www.vmware.com/products/fusion.html"&gt;VMWare Fusion&lt;/a&gt; and &lt;a href="https://www.parallels.com/"&gt;Parallels&lt;/a&gt; (macOS only) are two great options too. They just aren't &lt;strong&gt;FREE&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here is a &lt;a href="https://www.youtube.com/watch?v=x5MhydijWmc&amp;amp;t=758s"&gt;YouTube Video&lt;/a&gt; I found useful while installing Ubuntu on my Windows 10 VirtualBox. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/x5MhydijWmc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-windows-users-wsl"&gt;
  &lt;/a&gt;
  For Windows Users: &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10#update-to-wsl-2"&gt;WSL&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you're a Windows 10 user, you can install and use WSL. I'd strongly recommend installing WSL2. It allows you to run Linux natively inside of Windows.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#at-this-point-you-should-have-a-shell-prompt-ready-to-go-so-we-can-start-learning-linux"&gt;
  &lt;/a&gt;
  At this point, you should have a shell prompt ready to go so we can start learning Linux.
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h2&gt;

&lt;p&gt;Many people (me included) worship üôè &lt;a href="https://en.wikipedia.org/wiki/Linus_Torvalds"&gt;Linus Torvalds&lt;/a&gt; and I encourage you to find out more about him and how Linux came to be and how that led to Git being developed. &lt;strong&gt;Yes!&lt;/strong&gt; you read it right, this man was the mind behind Git as well, and now you know why I worship him.&lt;/p&gt;

&lt;p&gt;Here is a great &lt;a href="https://www.youtube.com/watch?v=o8NPllzkFhE&amp;amp;t=15s"&gt;Ted Talk&lt;/a&gt; that you should listen to.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/o8NPllzkFhE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-you-think-are-the-best-linux-distros"&gt;
  &lt;/a&gt;
  What do you think are the best Linux Distros?
&lt;/h2&gt;

&lt;p&gt;Let me know in the comments!&lt;/p&gt;

&lt;p&gt;I hope you found this article valuable. If yes do let me know in the comments üòä&lt;/p&gt;

&lt;p&gt;Also if you got any question feel free to ping me on &lt;a href="https://twitter.com/cenacr007_harsh"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/kumarharsh22/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h2&gt;

</description>
      <category>linux</category>
      <category>bash</category>
      <category>ubuntu</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Using json-server as a Mock Server</title>
      <author>Leepzig</author>
      <pubDate>Sat, 26 Jun 2021 15:36:41 +0000</pubDate>
      <link>https://dev.to/leepzig/using-json-server-as-a-mock-server-25jf</link>
      <guid>https://dev.to/leepzig/using-json-server-as-a-mock-server-25jf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;We're going to look at using json-server as a mock server to practice interacting with a server.  We are also going to be using &lt;code&gt;fetch&lt;/code&gt; to do both GET and POST requests.  Before we get started, make sure you have an &lt;code&gt;index.html&lt;/code&gt; and an &lt;code&gt;index.js&lt;/code&gt; file ready to display our data. Let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-and-set-up"&gt;
  &lt;/a&gt;
  Install and Set Up
&lt;/h2&gt;

&lt;p&gt;To install json-server run &lt;code&gt;npm install -g json-server&lt;/code&gt; in the terminal.  Then create a file called db.json you can type &lt;code&gt;touch db.json&lt;/code&gt; in the terminal.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mock-data"&gt;
  &lt;/a&gt;
  Mock Data
&lt;/h3&gt;

&lt;p&gt;Now we're going to put some mock data in db.json to make sure everything is working. JSON files resemble JavaScript objects and arrays, so it should look familiar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "blogs": [
    {
      "title": "title example",
      "content": "content example",
      "author": "Your favorite author",
      "id": 1
    },
    {
      "title": "another title example",
      "content": "more content example",
      "author": "Your friend's favorite author",
      "id": 2
    },
    {
      "title": "title example number 3",
      "content": "even better content",
      "author": "me",
      "id": 3
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#starting-the-server"&gt;
  &lt;/a&gt;
  Starting the Server
&lt;/h3&gt;

&lt;p&gt;After we have some data ready, we're going to start the server by running &lt;code&gt;json-server --watch db.json&lt;/code&gt; in the terminal.&lt;/p&gt;

&lt;p&gt;You should see something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;user@user:~/Development/practice-project$ json-server --watch db.json

  \{^_^}/ hi!

  Loading db.json
  Done

  Resources
  http://localhost:3000/blogs

  Home
  http://localhost:3000

  Type s + enter at any time to create a snapshot of the database
  Watching...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you ctr + click on the link under resources [&lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;] Your db.json file should open up in your browser.&lt;/p&gt;

&lt;p&gt;It'll look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aOnTbocU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3a0xn9ytf1byth3jfxd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aOnTbocU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3a0xn9ytf1byth3jfxd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excellent now we have a server running and ready to go!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#fetch-how-to-get-data-from-your-server"&gt;
  &lt;/a&gt;
  Fetch, How to GET Data from Your Server
&lt;/h2&gt;

&lt;p&gt;To access our server in JavaScript we are going to be using fetch.  It's fairly simple. We call fetch on our server's URL as you see below, that returns a promise, which we call &lt;code&gt;.then&lt;/code&gt; which returns a HTTP &lt;code&gt;response&lt;/code&gt;, now to change the HTTP response from the server to something we can use we call another &lt;code&gt;.then&lt;/code&gt; and that gives us something we are familiar with a JavaScript object. Once we have the &lt;code&gt;data&lt;/code&gt;, we can then do whatever we want with it, most likely display it, but for now, we're going to check to make sure it's working and log it to the console.&lt;/p&gt;

&lt;p&gt;Make sure your &lt;code&gt;index.js&lt;/code&gt; is linked to your index.html like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;body&amp;gt;
  &amp;lt;script src="index.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Put this code in your &lt;code&gt;index.js&lt;/code&gt; file and open index.html in your browser&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fetch("http://localhost:3000/blogs")
.then(response=&amp;gt;response.json())
.then(data=&amp;gt; console.log(data))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you should see something like the image below in the console in the developer tools:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EnC8AcT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2jvwv9csqnp7bzl8cme.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EnC8AcT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2jvwv9csqnp7bzl8cme.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;It works! Now what you can do is write a function such as &lt;code&gt;displayBlog()&lt;/code&gt; and call the function on data like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fetch("http://localhost:3000/blogs")
.then(response=&amp;gt;response.json())
.then(data=&amp;gt; displayBlog(data))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-post-data-to-jsonserver"&gt;
  &lt;/a&gt;
  How to POST data to json-server
&lt;/h2&gt;

&lt;p&gt;So we've made a GET request to the server and we are able to display the data from our server, now let's learn how to send data to the server.  We're going to use fetch again, but there's a little more to it this time.  We also need to include configuration for our fetch. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fetch-configuration"&gt;
  &lt;/a&gt;
  Fetch Configuration
&lt;/h3&gt;

&lt;p&gt;There are a lot of different options for the fetch configuration, but for our purpose we're only going to need three: &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, and &lt;code&gt;body&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;method&lt;/code&gt; is what type of request we're going to make, which will be a "POST". &lt;code&gt;headers&lt;/code&gt; are telling fetch what type of data we'll be interacting with, and for us it'll be "Content-Type":"application/json". And lastly &lt;code&gt;body&lt;/code&gt; is the data that we're going to be posting to the server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const newBlog = {title:"Learning JavaScirpt", content:"I learned about objects today!", author:"Java"}

const fetchPostConfig = {
  method:"POST",
  headers:{
    "Content-Type": "application/json",
    "Accept": "appication/json"
  },
  body:JSON.stringify(newBlog)
}

fetch("http://localhost:3000/blogs", fetchPostConfig)
.then(response =&amp;gt; response.json())
.then(data =&amp;gt; console.log(data))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can of course also write the configuration directly into the fetch instead of storing in a variable. After we send a POST request to our server it will send a response back which we handle the same as we did our GET request.  We should receive exactly what we sent:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6us_Lvhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mrkpgqugmh5q8ey7jl9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6us_Lvhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mrkpgqugmh5q8ey7jl9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And it added the &lt;code&gt;id&lt;/code&gt; for us! Perfect!  And that's it!&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this post.  Now get out there and learn how to interact with a server!&lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Clean Code - Guia e Exemplos</title>
      <author>Andre Baltieri</author>
      <pubDate>Sat, 26 Jun 2021 15:09:19 +0000</pubDate>
      <link>https://dev.to/andrebaltieri/clean-code-guia-e-exemplos-1nd0</link>
      <guid>https://dev.to/andrebaltieri/clean-code-guia-e-exemplos-1nd0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#%C3%ADndice"&gt;
  &lt;/a&gt;
  √çndice
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#%C3%ADndice"&gt;√çndice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#o-que-%C3%A9-o-clean-code"&gt;O que √© o Clean Code?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#regras-gerais"&gt;Regras gerais&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#siga-as-conven%C3%A7%C3%B5es"&gt;Siga as conven√ß√µes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#kiss"&gt;KISS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#regra-do-escoteiro"&gt;Regra do escoteiro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#causa-raiz"&gt;Causa raiz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#regras-de-design"&gt;Regras de design&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#mantenha-dados-de-configura%C3%A7%C3%A3o-em-alto-n%C3%ADvel"&gt;Mantenha dados de configura√ß√£o em alto n√≠vel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#polimorfismo-no-lugar-de-ifs"&gt;Polimorfismo no lugar de IFs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-1"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mult-thread"&gt;Mult-thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-2"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#separe-os-c%C3%B3digos-mult-thread"&gt;Separe os c√≥digos mult-thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-3"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#utilize-async-como-sufixo"&gt;Utilize Async como sufixo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#evite-configura%C3%A7%C3%B5es-desnecess%C3%A1rias"&gt;Evite configura√ß√µes desnecess√°rias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-4"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#utilize-inje%C3%A7%C3%A3o-de-depend%C3%AAncia"&gt;Utilize inje√ß√£o de depend√™ncia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-5"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lei-de-demeter"&gt;Lei de Demeter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-6"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#regras-sobre-entendimento-do-c%C3%B3digo"&gt;Regras sobre entendimento do c√≥digo&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#seja-consistente"&gt;Seja consistente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-7"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#utilize-vari%C3%A1veis-concisas"&gt;Utilize vari√°veis concisas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-8"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#obsess%C3%A3o-primitiva"&gt;Obsess√£o primitiva&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-9"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#evite-depend%C3%AAncias-l%C3%B3gicas"&gt;Evite depend√™ncias l√≥gicas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-10"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#evite-condicionais-negativas"&gt;Evite condicionais negativas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-11"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#regras-de-nomes"&gt;Regras de nomes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#escolha-nomes-descritivos"&gt;Escolha nomes descritivos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-12"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fa%C3%A7a-distin%C3%A7%C3%B5es-significantes"&gt;Fa√ßa distin√ß√µes significantes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-13"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#utilize-nomes-pronunci%C3%A1veis-e-busc%C3%A1veis"&gt;Utilize nomes pronunci√°veis e busc√°veis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-14"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#evite-uso-excessivo-de-strings"&gt;Evite uso excessivo de strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-15"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#n%C3%A3o-use-prefixo-ou-caracteres-especiais"&gt;N√£o use prefixo ou caracteres especiais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-16"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#regras-para-fun%C3%A7%C3%B5es-ou-m%C3%A9todos"&gt;Regras para fun√ß√µes ou m√©todos&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#pequenas-e-com-apenas-um-objetivo"&gt;Pequenas e com apenas um objetivo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-17"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#utilize-nomes-descritivos"&gt;Utilize nomes descritivos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-18"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#opte-por-poucos-par%C3%A2metros"&gt;Opte por poucos par√¢metros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-19"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cuidado-com-efeitos-colaterais"&gt;Cuidado com efeitos colaterais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-20"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#n%C3%A3o-tome-decis%C3%B5es-desnecess%C3%A1rias"&gt;N√£o tome decis√µes desnecess√°rias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-21"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#regras-de-coment%C3%A1rios"&gt;Regras de coment√°rios&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#um-c%C3%B3digo-bom-%C3%A9-expressivo"&gt;Um c√≥digo bom √© expressivo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#n%C3%A3o-seja-redundante"&gt;N√£o seja redundante&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-22"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#n%C3%A3o-feche-os-coment%C3%A1rios"&gt;N√£o feche os coment√°rios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-23"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#evite-c%C3%B3digos-comentados"&gt;Evite c√≥digos comentados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-24"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#inte%C3%A7%C3%A3o"&gt;Inte√ß√£o&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-25"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#esclarecimento"&gt;Esclarecimento&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-26"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#consequ%C3%AAncias"&gt;Consequ√™ncias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-27"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#estrutura-do-c%C3%B3digo"&gt;Estrutura do c√≥digo&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#separe-conceitos-verticalmente"&gt;Separe conceitos verticalmente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-28"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#declare-vari%C3%A1veis-pr%C3%B3ximas-de-seu-uso"&gt;Declare vari√°veis pr√≥ximas de seu uso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-29"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#agrupe-funcionalidades-similares"&gt;Agrupe funcionalidades similares&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-30"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#declare-fun%C3%A7%C3%B5es-de-cima-para-baixo"&gt;Declare fun√ß√µes de cima para baixo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-31"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mantenha-poucas-e-curtas-linhas"&gt;Mantenha poucas e curtas linhas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-32"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#n%C3%A3o-use-alinhamento-horizontal"&gt;N√£o use alinhamento horizontal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-33"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#use-os-espa%C3%A7os-em-branco-corretamente"&gt;Use os espa√ßos em branco corretamente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-34"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#n%C3%A3o-quebre-a-identa%C3%A7%C3%A3o"&gt;N√£o quebre a identa√ß√£o&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-35"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#objetos-e-estruturas"&gt;Objetos e estruturas&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#esconda-estruturas-internas"&gt;Esconda estruturas internas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-36"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#opte-por-estrutura-de-dados"&gt;Opte por estrutura de dados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-37"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#evite-usar-dados-e-objetos-juntos"&gt;Evite usar dados e objetos juntos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#instanciar-poucas-vari%C3%A1veis"&gt;Instanciar poucas vari√°veis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-38"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#classe-base-n%C3%A3o-deve-saber-sobre-suas-derivadas"&gt;Classe base n√£o deve saber sobre suas derivadas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-39"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mais-m%C3%A9todos-menos-tomadas-de-decis%C3%A3o"&gt;Mais m√©todos, menos tomadas de decis√£o&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-40"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#evite-m%C3%A9todos-est%C3%A1ticos"&gt;Evite m√©todos est√°ticos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#testes"&gt;Testes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#um-assert-por-teste"&gt;Um assert por teste&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#leg%C3%ADvel"&gt;Leg√≠vel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-41"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#r%C3%A1pido"&gt;R√°pido&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-42"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#independentes"&gt;Independentes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-43"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repetit%C3%ADvel"&gt;Repetit√≠vel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exemplo-44"&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#code-smells"&gt;Code smells&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#rigidez"&gt;Rigidez&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fragilidade"&gt;Fragilidade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#imobilidade"&gt;Imobilidade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#complexidade-desnecess%C3%A1ria"&gt;Complexidade desnecess√°ria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repeti%C3%A7%C3%A3o-desnecess%C3%A1ria"&gt;Repeti√ß√£o desnecess√°ria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#opacidade"&gt;Opacidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#fontes"&gt;Fontes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-o-clean-code"&gt;
  &lt;/a&gt;
  O que √© o Clean Code?
&lt;/h2&gt;

&lt;p&gt;Por que estamos falando tanto sobre c√≥digo limpo (Clean Code) e por que isto √© t√£o importante para n√≥s? De fato a manuten√ß√£o de um software √© t√£o importante quanto sua constru√ß√£o.&lt;/p&gt;

&lt;p&gt;Como relatado por Robert C. Martin em seu livro cl√°ssico, &lt;em&gt;Clean Code&lt;/em&gt;, um Best Seller da nossa √°rea, algumas pr√°ticas e vis√µes s√£o important√≠ssimas para mantermos a &lt;em&gt;vida&lt;/em&gt; do nosso software.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANTE&lt;/strong&gt; Este artigo n√£o descarta a leitura do livro, que √© muito mais denso e profundo sobre o assunto.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As empresas investem milh√µes em softwares todo ano, mas com tantas mudan√ßas no time e nas tecnologias, como fazer este investimento durar? Como garantir uma boa manuten√ß√£o, durabilidade, vida ao software? Segundo Uncle Bob, as pr√°ticas abaixo s√£o o caminho.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#regras-gerais"&gt;
  &lt;/a&gt;
  Regras gerais
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#siga-as-conven%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Siga as conven√ß√µes
&lt;/h3&gt;

&lt;p&gt;Se voc√™ come√ßou agora em um projeto ou acabaram de definir suas conven√ß√µes, siga-as! Se utilizam por exemplo constantes em mai√∫sculo, enumeradores com &lt;strong&gt;E&lt;/strong&gt; como prefixo, n√£o importa! Siga sempre os padr√µes do projeto.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kiss"&gt;
  &lt;/a&gt;
  KISS
&lt;/h3&gt;

&lt;p&gt;Mantenha as coisas simples! Este conceito vem at√© de outro livro, e particularmente acho que √© a base de uma boa solu√ß√£o. Normalmente tendemos a complicar as coisas que poderiam ser muito mais simples.&lt;/p&gt;

&lt;p&gt;Ent√£o, Keep It Stupid Simple (Mantenha isto estupidamente simples - KISS)!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#regra-do-escoteiro"&gt;
  &lt;/a&gt;
  Regra do escoteiro
&lt;/h3&gt;

&lt;p&gt;"Deixe sempre o acamapamento mais limpo do que voc√™ encontrou!" O mesmo vale para nosso c√≥digo. Devolva (Check in) sempre o c√≥digo melhor do que voc√™ o obteve. Se todo desenvolvedor no time tiver esta vis√£o, e devolver um pedacinho de c√≥digo melhor do que estava antes, em pouco temos teremos uma grande mudan√ßa.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#causa-raiz"&gt;
  &lt;/a&gt;
  Causa raiz
&lt;/h3&gt;

&lt;p&gt;Sempre procure a causa raiz do problema, nunca resolva as coisas superficialmente. No dia-a-dia, na correria, tendemos a corrigir os problemas superficialmente e n√£o adentrar neles, o que muitas vezes causa o re-trabalho!&lt;/p&gt;

&lt;p&gt;Tente sempre procurar a causa raiz e resolver assim o problema de uma vez por todas!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#regras-de-design"&gt;
  &lt;/a&gt;
  Regras de design
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#mantenha-dados-de-configura%C3%A7%C3%A3o-em-alto-n%C3%ADvel"&gt;
  &lt;/a&gt;
  Mantenha dados de configura√ß√£o em alto n√≠vel
&lt;/h3&gt;

&lt;p&gt;Algo que toda aplica√ß√£o tem s√£o suas configura√ß√µes, como as conhecidas &lt;strong&gt;ConnectionStrings&lt;/strong&gt;. Tente sempre deixar estas configura√ß√µes ou o &lt;em&gt;parse&lt;/em&gt; delas em um n√≠vel mais alto poss√≠vel.&lt;/p&gt;

&lt;p&gt;Evite sobrescrever configura√ß√µes em m√©todos dentro de &lt;strong&gt;Controllers&lt;/strong&gt; ou algo do tipo. Se poss√≠vel, mantenha esta passagem no m√©todo principal, no in√≠cio da aplica√ß√£o e n√£o mexa mais nisto!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;

&lt;p&gt;Em diversas aplica√ß√µes que trabalho, crio sempre uma classe &lt;strong&gt;Settings&lt;/strong&gt; no projeto base e depois no &lt;strong&gt;Startup&lt;/strong&gt; das aplica√ß√µes populo ela com as configura√ß√µes. Isto garante que n√£o teremos estas configura√ß√µes sendo escritas em todo lugar e tamb√©m que n√£o precisaremos do &lt;strong&gt;IConfiguration&lt;/strong&gt; que fica no &lt;strong&gt;ASP.NET&lt;/strong&gt; em projetos que n√£o s√£o Web.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;strong&gt;MeuProjeto.Domain&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Settings&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;ConnectionString&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;strong&gt;MeuProjeto.Api&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Startup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IConfiguration&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Configuration&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionString&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetConnectionString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"connectionString"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;strong&gt;MeuProjeto.Infra&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;SqlConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionString&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#polimorfismo-no-lugar-de-ifs"&gt;
  &lt;/a&gt;
  Polimorfismo no lugar de IFs
&lt;/h3&gt;

&lt;p&gt;Um &lt;strong&gt;IF&lt;/strong&gt; ou condicional, como o nome diz, traz uma tomada de decis√£o a nossa aplica√ß√£o, o que implica no aumento da complexidade da mesma. No geral devemos evitar o uso excessivo destes.&lt;/p&gt;

&lt;p&gt;Nestes cen√°rios, opte sempre pelo &lt;a href="https://balta.io/blog/orientacao-a-objetos"&gt;polimorfismo&lt;/a&gt; ao inv√©s de tomar decis√£o em todo m√©todo que cria. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;

&lt;p&gt;Vamos tomar como base uma classe &lt;strong&gt;Pagamento&lt;/strong&gt;, onde temos pagamento via Boleto ou Cart√£o de Cr√©dito, por√©m nos pagamentos via Boleto, caso o dia do vencimento seja s√°bado ou domingo (Final de semana), o mesmo pode ser pago no pr√≥ximo dia √∫til.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANTE&lt;/strong&gt; Esta regra n√£o est√° 100% correta ou eficiente, √© apenas uma demonstra√ß√£o&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pagamento&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;PodeSerPago&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tipo&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ETipoPagamento&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Boleto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vencimento&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Day&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="nf"&gt;IsWeekend&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tipo&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ETipoPagamento&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CartaoCredito&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note que temos duas tomadas de decis√£o dentro do m√©todo &lt;strong&gt;PodeSerPago&lt;/strong&gt;, onde a primeira se refere apenas a pagamentos do tipo Boleto. Caso hajam mais formas de pagamento futuramente, como tratariamos este c√≥digo? Encheriamos de &lt;strong&gt;IF&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;A solu√ß√£o mais plaus√≠vel √© derivar da classe base &lt;strong&gt;Pagamento&lt;/strong&gt; criando o &lt;strong&gt;PagamentoBoleto&lt;/strong&gt; que sobrescreve o m√©todo &lt;strong&gt;PodeSerPago&lt;/strong&gt;, dando uma nova funcionalidade a ele.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pagamento&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;PodeSerPago&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PagamentoBoleto&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Pagamento&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;PodeSerPago&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vencimento&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Day&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="nf"&gt;IsWeekend&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#multthread"&gt;
  &lt;/a&gt;
  Mult-thread
&lt;/h3&gt;

&lt;p&gt;Sempre que necess√°rio utilize processamento em Threads separadas. J√° temos suporte a multi-threads e paralelismo no C# faz um bom tempo e o pr√≥prio Async/Await j√° ajudam nisso.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;

&lt;p&gt;&lt;small&gt;&lt;strong&gt;Sem async/await&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"cursos"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IActionResult&lt;/span&gt; &lt;span class="nf"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;IContentRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ViewBag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Courses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetContents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EContentType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Course&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;View&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;strong&gt;Com async/await&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"cursos"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;IContentRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ViewBag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Courses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetContentsAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EContentType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Course&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;View&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#separe-os-c%C3%B3digos-multthread"&gt;
  &lt;/a&gt;
  Separe os c√≥digos mult-thread
&lt;/h3&gt;

&lt;p&gt;Seguindo o mesmo exemplo acima, √© uma boa pr√°tica manter o que √© ass√≠ncrono separado do que √© s√≠ncrono, para n√£o for√ßar um m√©todo a ser ou n√£o ass√≠ncrono por conta de outro trecho de c√≥digo.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Courses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Courses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToListAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Courses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// N√£o async&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#utilize-async-como-sufixo"&gt;
  &lt;/a&gt;
  Utilize Async como sufixo
&lt;/h3&gt;

&lt;p&gt;Se um m√©todo √© ass√≠ncrono, utilize sempre o sufixo &lt;strong&gt;async&lt;/strong&gt; para identific√°-lo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#evite-configura%C3%A7%C3%B5es-desnecess%C3%A1rias"&gt;
  &lt;/a&gt;
  Evite configura√ß√µes desnecess√°rias
&lt;/h3&gt;

&lt;p&gt;Evite deixar configura√ß√µes no sistema s√≥ por que algu√©m ainda n√£o definiu como aquilo deve ser. Isto polui o c√≥digo e traz uma complexidade desnecess√°ria.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ConfiguraUsoMySql&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ainda n√£o sabemos se vamos ou n√£o suportar MySQL tamb√©m&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;NotImplementedException&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#utilize-inje%C3%A7%C3%A3o-de-depend%C3%AAncia"&gt;
  &lt;/a&gt;
  Utilize inje√ß√£o de depend√™ncia
&lt;/h3&gt;

&lt;p&gt;Sempre que poss√≠vel utilize &lt;a href="https://balta.io/blog/dependency-injection"&gt;inje√ß√£o de depend√™ncia&lt;/a&gt;, ele vai tornar seu c√≥digo mais limpo e desacoplado.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=va9wX68lAfA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XXbCJYAy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.youtube.com/vi/va9wX68lAfA/0.jpg" alt="Dependency Injection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lei-de-demeter"&gt;
  &lt;/a&gt;
  Lei de Demeter
&lt;/h3&gt;

&lt;p&gt;A Lei de Demeter (LoD) ou princ√≠pio do menor conhecimento √© um princ√≠pio que prega os seguintes pontos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cada unidade deve ter conhecimento limitado sobre outras unidades: apenas unidades pr√≥ximas se relacionam. &lt;/li&gt;
&lt;li&gt;Cada unidade deve apenas conversar com seus amigos.&lt;/li&gt;
&lt;li&gt;N√£o fale com estranhos, apenas fale com seus amigos imediatos&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Discount&lt;/span&gt; &lt;span class="n"&gt;Discount&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Discount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;strong&gt;Mau exemplo&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrderHandler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Discount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;strong&gt;Bom exemplo&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Discount&lt;/span&gt; &lt;span class="n"&gt;Discount&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Place&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Discount&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrderHandler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Place&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#regras-sobre-entendimento-do-c%C3%B3digo"&gt;
  &lt;/a&gt;
  Regras sobre entendimento do c√≥digo
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#seja-consistente"&gt;
  &lt;/a&gt;
  Seja consistente
&lt;/h3&gt;

&lt;p&gt;Se voc√™ executa algo de uma forma, execute todo o resto desta mesma forma. Seja consistente na forma com que aplica o c√≥digo. Siga sempre o padr√£o definido.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Codificando em ingl√™s&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Agora mudou para "portugl√™s"&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProdutoRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Agora √© portugu√™s&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RepositorioUnidadeMedida&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilizou sufixo ASYNC no m√©todo ass√≠ncrono&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Agora n√£o usou mais =/&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Course&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#utilize-vari%C3%A1veis-concisas"&gt;
  &lt;/a&gt;
  Utilize vari√°veis concisas
&lt;/h3&gt;

&lt;p&gt;Opte por vari√°veis concisas, mesmo que resultem em um nome maior. Elas devem ser auto-explicativas, sem a necessidade de coment√°rios ou informa√ß√µes adicionais.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Total do que?&lt;/span&gt;
&lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Total do carrinho de compras&lt;/span&gt;
&lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;shoppingCartTotal&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#obsess%C3%A3o-primitiva"&gt;
  &lt;/a&gt;
  Obsess√£o primitiva
&lt;/h3&gt;

&lt;p&gt;No dia-a-dia tendemos a nos focar apenas em tipos primitivos (Built-in), causando uma obsess√£o pelos mesmos. Podemos criar e usar objetos de valor (Value Objects) para suprir melhor esta necessidade.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;

&lt;p&gt;&lt;small&gt;&lt;strong&gt;Mau exemplo&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Customer&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Valida E-mail&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Customer&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Valida E-mail novamente&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;strong&gt;Bom exemplo&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Value Object&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Email&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Valida E-mail&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#evite-depend%C3%AAncias-l%C3%B3gicas"&gt;
  &lt;/a&gt;
  Evite depend√™ncias l√≥gicas
&lt;/h3&gt;

&lt;p&gt;N√£o escreva m√©todos cujo funcionamento correto dependa de algo contido em sua classe.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;

&lt;p&gt;&lt;small&gt;&lt;strong&gt;Mau exemplo&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Student&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;IsSubscriber&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Xpto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IsSubscriber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="c1"&gt;// S√≥ executa se for assinante   &lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;strong&gt;Bom exemplo&lt;/strong&gt;&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Student&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Subscriber&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Student&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Xpto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;        
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#evite-condicionais-negativas"&gt;
  &lt;/a&gt;
  Evite condicionais negativas
&lt;/h3&gt;

&lt;p&gt;No C# a nega√ß√£o √© dada por um sinal de exclama√ß√£o (&lt;strong&gt;!&lt;/strong&gt;) que muitas vezes pode ser impercept√≠vel, ocasionando na m√° leitura do c√≥digo.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;IsSubscriber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IsSubscriber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#regras-de-nomes"&gt;
  &lt;/a&gt;
  Regras de nomes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#escolha-nomes-descritivos"&gt;
  &lt;/a&gt;
  Escolha nomes descritivos
&lt;/h3&gt;

&lt;p&gt;Esolher bons nomes para classes, vari√°veis e m√©todos √© essencial para um c√≥digo limpo. Lembre-se que se voc√™ precisa explicar seu c√≥digo, ent√£o algo pode ser melhorado nele.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Dura√ß√£o do que? Qual a m√©trica?&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;duration&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Muito mais expressivo&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;durationInMinutes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fa%C3%A7a-distin%C3%A7%C3%B5es-significantes"&gt;
  &lt;/a&gt;
  Fa√ßa distin√ß√µes significantes
&lt;/h3&gt;

&lt;p&gt;Utilize sempre nomes nos quais quem estiver lendo seu c√≥digo possa diferenciar seu significado de outros poss√≠veis nomes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;salario&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;7500&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Tem um significado maior&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;salarioEmReais&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;7500&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#utilize-nomes-pronunci%C3%A1veis-e-busc%C3%A1veis"&gt;
  &lt;/a&gt;
  Utilize nomes pronunci√°veis e busc√°veis
&lt;/h3&gt;

&lt;p&gt;Evite utilizar nomes dif√≠ceis de pronunciar ou inventar nomes e conve√ß√µes para vari√°veis, classes e m√©todos. Lembre-se sempre da linguagem ub√≠quoa e da import√¢ncia dela no c√≥digo.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;strTexto&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Meu texto aqui"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;GenerateBoletoInLote&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Cadastry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#evite-uso-excessivo-de-strings"&gt;
  &lt;/a&gt;
  Evite uso excessivo de strings
&lt;/h3&gt;

&lt;p&gt;Quem nunca perdeu horas procurando um BUG que era apenas um problema de compara√ß√£o de string? Evite digitar a mesma string v√°rias vezes, utilize constantes para isto.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"PROD"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"PROD"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#n%C3%A3o-use-prefixo-ou-caracteres-especiais"&gt;
  &lt;/a&gt;
  N√£o use prefixo ou caracteres especiais
&lt;/h3&gt;

&lt;p&gt;N√£o utilize prefixo com o tipo da vari√°vel, classe ou m√©todo e NUNCA use espa√ßos ou caracteres especiais nestes itens.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;clsCustomer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;strNome&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Andr√©"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;situa&lt;/span&gt;&lt;span class="err"&gt;√ß√£&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"Pendente"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#regras-para-fun%C3%A7%C3%B5es-ou-m%C3%A9todos"&gt;
  &lt;/a&gt;
  Regras para fun√ß√µes ou m√©todos
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#pequenas-e-com-apenas-um-objetivo"&gt;
  &lt;/a&gt;
  Pequenas e com apenas um objetivo
&lt;/h3&gt;

&lt;p&gt;Mantenha suas fun√ß√µes ou m√©todos o menor poss√≠vel. √â mais f√°cil ter m√©todos menores e reutiliz√°veis do que tudo dentro de um m√©todo s√≥.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;RealizarPedido&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="c1"&gt;// Cadastra o cliente&lt;/span&gt;
    &lt;span class="c1"&gt;// Aplica o desconto&lt;/span&gt;
    &lt;span class="c1"&gt;// Atualiza o estoque&lt;/span&gt;
    &lt;span class="c1"&gt;// Salva o pedido&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ApplyDiscount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateInventoy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;PlaceOrder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#utilize-nomes-descritivos"&gt;
  &lt;/a&gt;
  Utilize nomes descritivos
&lt;/h3&gt;

&lt;p&gt;A mesma regra dos nomes anteriormente vista aqui se aplica para este cen√°rio. Mantenha nomes concisos, sem caracteres especiais.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="c1"&gt;// Calcular o que?&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Calcular&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="c1"&gt;// Calcula o ICMS&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CalcularICMS&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#opte-por-poucos-par%C3%A2metros"&gt;
  &lt;/a&gt;
  Opte por poucos par√¢metros
&lt;/h3&gt;

&lt;p&gt;Evite exigir muitos par√¢metros para constru√ß√£o do objeto, assim como use e abuse dos &lt;strong&gt;Optional Parameters&lt;/strong&gt; do C#.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;street&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;neighborhood&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;zipCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Melhorando&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cuidado-com-efeitos-colaterais"&gt;
  &lt;/a&gt;
  Cuidado com efeitos colaterais
&lt;/h3&gt;

&lt;p&gt;Evite que uma fun√ß√£o altere valores de outra classe sem ser a dela. Isto √© chamado de efeito colateral.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Qualquer um fora da classe Order &lt;/span&gt;
&lt;span class="c1"&gt;// pode atualizar seu total&lt;/span&gt;
&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CalculateTotal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Total √© privado, ningu√©m de fora consegue &lt;/span&gt;
&lt;span class="c1"&gt;// modific√°-lo, evitando efeitos colaterais&lt;/span&gt;
&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// ERRO&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#n%C3%A3o-tome-decis%C3%B5es-desnecess%C3%A1rias"&gt;
  &lt;/a&gt;
  N√£o tome decis√µes desnecess√°rias
&lt;/h3&gt;

&lt;p&gt;N√£o utilize os famosos "flags" para tomar decis√µes dentro dos m√©todos, divida-os em v√°rios m√©todos ou at√© mesmo outras classes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerRepository&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateOrUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Customer&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerRepository&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Customer&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Customer&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#regras-de-coment%C3%A1rios"&gt;
  &lt;/a&gt;
  Regras de coment√°rios
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#um-c%C3%B3digo-bom-%C3%A9-expressivo"&gt;
  &lt;/a&gt;
  Um c√≥digo bom √© expressivo
&lt;/h3&gt;

&lt;p&gt;Teoricamente, se voc√™ precisa comentar uma parte do seu c√≥digo, √© por que algo est√° errado com ele, ele n√£o est√° expressivo o suficiente.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#n%C3%A3o-seja-redundante"&gt;
  &lt;/a&gt;
  N√£o seja redundante
&lt;/h3&gt;

&lt;p&gt;Evite coment√°rios que n√£o fazem sentido algum ao contexto ou cen√°rio.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;

&lt;span class="c1"&gt;// Fun√ß√£o principal do sistema&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#n%C3%A3o-feche-os-coment%C3%A1rios"&gt;
  &lt;/a&gt;
  N√£o feche os coment√°rios
&lt;/h3&gt;

&lt;p&gt;N√£o h√° necessidade de fechar os coment√°rios.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;

&lt;span class="c1"&gt;// Coment√°rio // &amp;lt;- Desnecess√°rio&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#evite-c%C3%B3digos-comentados"&gt;
  &lt;/a&gt;
  Evite c√≥digos comentados
&lt;/h3&gt;

&lt;p&gt;N√£o deixe sujeira em seu c√≥digo, ao inv√©s de deixar algo comentado, remova ele. Hoje temos versionadores de c√≥digo, voc√™ pode "voltar no tempo" facilmente.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;MinhaFuncao&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="c1"&gt;// string texto = "1234";&lt;/span&gt;
    &lt;span class="c1"&gt;// public void Metodo() {... }&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#inte%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Inte√ß√£o
&lt;/h3&gt;

&lt;p&gt;Um bom uso de coment√°rios √© sobre a inten√ß√£o de um m√©todo, classe ou vari√°vel (Vari√°vel nem tanto).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;

&lt;span class="c1"&gt;// Retorna a lista de produtos inativos&lt;/span&gt;
&lt;span class="c1"&gt;// para o relat√≥rio de fechamento mensal&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IList&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;ObtemProdutosInativos&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#esclarecimento"&gt;
  &lt;/a&gt;
  Esclarecimento
&lt;/h3&gt;

&lt;p&gt;Outro uso interessante para os coment√°rios s√£o esclarecimentos sobre o c√≥digo.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CancelarPedido&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="c1"&gt;// Caso o pedido j√° tenha sido enviado&lt;/span&gt;
    &lt;span class="c1"&gt;// ele n√£o pode mais ser cancelado.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DataEnvio&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;AddNotification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"O pedido j√° foi enviado e n√£o pode ser cancelado"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#consequ%C3%AAncias"&gt;
  &lt;/a&gt;
  Consequ√™ncias
&lt;/h3&gt;

&lt;p&gt;Podemos utilizar coment√°rios para alertar sobre trechos do c√≥digo que podem ter consequ√™ncias mais s√©rias. Neste caso recomendo o uso de um coment√°rio em XML mais elaborado.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;

&lt;span class="c1"&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;/// ATEN√á√ÉO: Este m√©todo cancela o pedido e estorna o pagamento&lt;/span&gt;
&lt;span class="c1"&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CancelarPedido&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#estrutura-do-c%C3%B3digo"&gt;
  &lt;/a&gt;
  Estrutura do c√≥digo
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#separe-conceitos-verticalmente"&gt;
  &lt;/a&gt;
  Separe conceitos verticalmente
&lt;/h3&gt;

&lt;p&gt;Mantenha uma estrutura de pastas saud√°vel e organizada. N√£o precisa criar uma pasta para cada arquivo, mas pode haver uma separa√ß√£o por contexto ou feature.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;MeuApp

&lt;ul&gt;
&lt;li&gt;MeuApp.Domain

&lt;ul&gt;
&lt;li&gt;MeuApp.Domain.Contexts&lt;/li&gt;
&lt;li&gt;MeuApp.Domain.Contexts.PaymentContext

&lt;ul&gt;
&lt;li&gt;MeuApp.Domain.Contexts.PaymentContexts.Entities&lt;/li&gt;
&lt;li&gt;MeuApp.Domain.Contexts.PaymentContexts.ValueObjects&lt;/li&gt;
&lt;li&gt;MeuApp.Domain.Contexts.PaymentContexts.Enums&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;MeuApp.Domain.Contexts.AccountContext

&lt;ul&gt;
&lt;li&gt;MeuApp.Domain.Contexts.AccountContext.Entities&lt;/li&gt;
&lt;li&gt;MeuApp.Domain.Contexts.AccountContext.ValueObjects&lt;/li&gt;
&lt;li&gt;MeuApp.Domain.Contexts.AccountContext.Enums&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#declare-vari%C3%A1veis-pr%C3%B3ximas-de-seu-uso"&gt;
  &lt;/a&gt;
  Declare vari√°veis pr√≥ximas de seu uso
&lt;/h3&gt;

&lt;p&gt;N√£o crie todas as vari√°veis juntas, no come√ßo da class ou m√©todo, defina-as pr√≥ximas de onde ser√£o utilizadas.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateOrder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CalculateTotal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;- S√≥ √© utilizada aqui&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateOrder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CalculateTotal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#agrupe-funcionalidades-similares"&gt;
  &lt;/a&gt;
  Agrupe funcionalidades similares
&lt;/h3&gt;

&lt;p&gt;Se uma fun√ß√£o pertence a um grupo dentro de um objeto, mantenha-as sempre por perto.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CheckInventory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateOrder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CalculateTotal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateCustomer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CheckInventory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateOrder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CalculateTotal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#declare-fun%C3%A7%C3%B5es-de-cima-para-baixo"&gt;
  &lt;/a&gt;
  Declare fun√ß√µes de cima para baixo
&lt;/h3&gt;

&lt;p&gt;Ordenar as fun√ß√µes tamb√©m √© importante. Al√©m da sua ordem de grandeza, suas assinaturas tamb√©m devem ter uma boa oganiza√ß√£o.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mantenha-poucas-e-curtas-linhas"&gt;
  &lt;/a&gt;
  Mantenha poucas e curtas linhas
&lt;/h3&gt;

&lt;p&gt;Evite fun√ß√µes com linhas longas ou muitas linhas. N√£o existe um n√∫mero correto, mas com certeza quanto mais c√≥digo em uma fun√ß√£o, mais dif√≠cil de mant√™-la ser√°.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;_repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Customers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;_repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChanges&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#n%C3%A3o-use-alinhamento-horizontal"&gt;
  &lt;/a&gt;
  N√£o use alinhamento horizontal
&lt;/h3&gt;

&lt;p&gt;N√£o h√° necessidade de alinhar horizontalmente vari√°veis, constantes ou mesmo propriedades.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt;   &lt;span class="n"&gt;Long&lt;/span&gt;            &lt;span class="n"&gt;requestParsingTimeLimit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;Request&lt;/span&gt;         &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt;   &lt;span class="n"&gt;FitNesseContent&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;                   &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getInputStream&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;requestParsingTimeLimit&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;900&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#use-os-espa%C3%A7os-em-branco-corretamente"&gt;
  &lt;/a&gt;
  Use os espa√ßos em branco corretamente
&lt;/h3&gt;

&lt;p&gt;Utilize espa√ßo em branco para associar ou n√£o itens relacionados. Uma boa IDE j√° far√° este trabalho por voc√™.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;meuMetodo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;parametro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;variavel&lt;/span&gt;&lt;span class="p"&gt;++;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;outraVariavel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;algumArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="nf"&gt;algumMetodo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;outraClasse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;algumMetodo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;variavel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nf"&gt;outroMetodo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#n%C3%A3o-quebre-a-identa%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  N√£o quebre a identa√ß√£o
&lt;/h3&gt;

&lt;p&gt;Este item dispensa coment√°rios. Um c√≥digo n√£o identado n√£o pode ser enviado para o projeto.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MinhaClasse&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;valor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#objetos-e-estruturas"&gt;
  &lt;/a&gt;
  Objetos e estruturas
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#esconda-estruturas-internas"&gt;
  &lt;/a&gt;
  Esconda estruturas internas
&lt;/h3&gt;

&lt;p&gt;Este t√≥pico abrange uma discuss√£o extensa. Esconder a estrutura de um objeto, ou seja, privar as propridades relacioadas a dados dele, vai sempre trazer resultados positivos e negativos.&lt;/p&gt;

&lt;p&gt;Particularmente, gosto de tornar os &lt;code&gt;SET&lt;/code&gt; privados, mas n√£o √© uma regra do meu c√≥digo e n√£o aplico em todas as propriedades. Como consequ√™ncia, sempre precisamos de mais m√©todos para manipula√ß√£o destes valores.&lt;/p&gt;

&lt;p&gt;Se os dados n√£o fazem sentido para os objetos externos, n√£o h√° discuss√£o, mantenha-os privados.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NotificationContext&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_notifications&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;notification&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;notification&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;IsValid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IEnumerable&lt;/span&gt; &lt;span class="n"&gt;Notifications&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AsEnumerable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#opte-por-estrutura-de-dados"&gt;
  &lt;/a&gt;
  Opte por estrutura de dados
&lt;/h3&gt;

&lt;p&gt;Estruturas de dados representam a forma como os dados s√£o organizados, podendo ser uma &lt;code&gt;class&lt;/code&gt; ou um &lt;code&gt;struct&lt;/code&gt;. Normalmente associamos as &lt;code&gt;struct&lt;/code&gt; mais a estrutura de dados do que as classes, mas podemos estruturar dados com qualquer uma delas.&lt;/p&gt;

&lt;p&gt;A diferen√ßa √© que ao usar &lt;code&gt;class&lt;/code&gt; (OOP) temos recursos como abstra√ß√£o, heran√ßa, polimorfismo, dentre outros.&lt;/p&gt;

&lt;p&gt;Particularmente acho que a segmenta√ß√£o em objetos de valor √© um ponto chave neste item.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Usando estruturas&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Email&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="c1"&gt;// Permite apenas E-mails hotmail, gmail, yahoo...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Usando classes&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Email&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="c1"&gt;// Permite qualquer tipo de E-mail&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CommonEmail&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="c1"&gt;// Permite apenas E-mails hotmail, gmail, yahoo...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;        
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Nos dois casos temos estruturas representando um E-mail como objeto de valor, por√©m no segundo cen√°rio, podemos criar extens√µes e ter uma maior flexibilidade.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#evite-usar-dados-e-objetos-juntos"&gt;
  &lt;/a&gt;
  Evite usar dados e objetos juntos
&lt;/h3&gt;

&lt;p&gt;Este √© outro ponto pol√™mico que muitos interpretam como manter nos objetos apenas propriedades enquanto seus comportamentos ficam em outros objetos.&lt;/p&gt;

&lt;p&gt;Particularmente acho que a ess√™ncia de um objeto √© justamente o agrupamento de vari√°veis e fun√ß√µes (Propriedades e m√©todos). Neste ponto eu sempre mantenho os comportamentos nas entidades.&lt;/p&gt;

&lt;p&gt;Em rela√ß√£o a manter parte com &lt;code&gt;object&lt;/code&gt; e parte com &lt;code&gt;struct&lt;/code&gt; eu confesso que a maior parte dos meus casos eu uso apenas o &lt;code&gt;object&lt;/code&gt;. Pode ser v√≠cio ou puro comodismo, mas acho estranho esta mistura.&lt;/p&gt;

&lt;p&gt;Talvez uma abordagem que aplique estes conceitos de uma forma legal seja novamente o uso dos &lt;strong&gt;value objects&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Objeto de valor, representa um endere√ßo, sua estrutura de dados&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Address&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;ZipCode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Street&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Neighborhood&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;City&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Country&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Objeto do cliente... com seus comportamentos&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;BillingAddress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;ShippingAddress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ChangeBillingAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ChangeShippingAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#instanciar-poucas-vari%C3%A1veis"&gt;
  &lt;/a&gt;
  Instanciar poucas vari√°veis
&lt;/h3&gt;

&lt;p&gt;Evite instanciar muitas vari√°veis nos objetos e seus m√©todos. Faz uso maior das propriedades se poss√≠vel.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ShoppingCart&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="nf"&gt;CalculateTotal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Desnecess√°rio&lt;/span&gt;
        &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Price&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Melhorando&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ShoppingCart&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;decimal&lt;/span&gt; &lt;span class="nf"&gt;CalculateTotal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;        
        &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Price&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#classe-base-n%C3%A3o-deve-saber-sobre-suas-derivadas"&gt;
  &lt;/a&gt;
  Classe base n√£o deve saber sobre suas derivadas
&lt;/h3&gt;

&lt;p&gt;Uma classe n√£o deve saber sobre detalhes dos seus filhos. Nas verdade isto me soa t√£o estranho que n√£o vejo um cen√°rio onde uma classe pai consiga saber detalhes de seus filhos.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// N/A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mais-m%C3%A9todos-menos-tomadas-de-decis%C3%A3o"&gt;
  &lt;/a&gt;
  Mais m√©todos, menos tomadas de decis√£o
&lt;/h3&gt;

&lt;p&gt;J√° comentamos bastante isto na parte de OOP dos cursos, mas fica aqui o refor√ßo, sempre opte por ter mais m√©todos, mais sobrecargas do que tomadas de decis√£o.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Pay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CreditCard&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;// Pagamento via boleto&lt;/span&gt;

        &lt;span class="c1"&gt;// Pagamento via cart√£o&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Order&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Pay&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Pagamento via boleto&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Pay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CreditCard&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Pagamento via cart√£o de cr√©dito&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#evite-m%C3%A9todos-est%C3%A1ticos"&gt;
  &lt;/a&gt;
  Evite m√©todos est√°ticos
&lt;/h3&gt;

&lt;p&gt;Classes e m√©todos est√°ticos s√£o dif√≠ceis de gerenciar, al√©m de serem compartilhados entre a aplica√ß√£o como um todo. Imagina que voc√™ tem uma classe est√°tica que tem uma lista de notifica√ß√µes, esta lista seria compartilhada entre todas as requisi√ß√µes (Diversos usu√°rios) em seu sistema.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NotificationContext&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;IList&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Notifications&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NotificationContext&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IList&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Notifications&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testes"&gt;
  &lt;/a&gt;
  Testes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#um-assert-por-teste"&gt;
  &lt;/a&gt;
  Um assert por teste
&lt;/h3&gt;

&lt;p&gt;Utilize um e apenas um &lt;code&gt;assert&lt;/code&gt; por teste. Mais de um assert pode confundir voc√™ e comprometer a escrita do seu teste.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Evite&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TestMethod&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;ShouldReturnTrue&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AreEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AreEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Utilize&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TestMethod&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;ShouldReturnTrue&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AreEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#leg%C3%ADvel"&gt;
  &lt;/a&gt;
  Leg√≠vel
&lt;/h3&gt;

&lt;p&gt;Trate seus testes como parte fundamental do seu c√≥digo, n√£o secund√°ria. Os testes tem que ser organizados e bem escritos assim como o resto do seu software.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// N/A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#r%C3%A1pido"&gt;
  &lt;/a&gt;
  R√°pido
&lt;/h3&gt;

&lt;p&gt;Um dos objetivos principais de um teste √© cobrir uma pequena por√ß√£o do nosso c√≥digo. Normalmente estendemos esta ideia para a maior parte do c√≥digo poss√≠vel, ocasionando uma ampla gama de testes de unidade.&lt;/p&gt;

&lt;p&gt;Dados estes testes, os mesmo s√£o executados antes da publica√ß√£o das nossas aplica√ß√µes, garantindo que n√£o enviaremos nada com bugs para produ√ß√£o.&lt;/p&gt;

&lt;p&gt;Por√©m, em cen√°rios mais cr√≠ticos, o tempo dos deploys (Publica√ß√µes) √© extremamente importante, e se nossos testes demoram muito, podem impactar negativamente nisto.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// N/A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#independentes"&gt;
  &lt;/a&gt;
  Independentes
&lt;/h3&gt;

&lt;p&gt;Os testes n√£o devem depender de entidades externas, nem de outros testes. Neste exemplo, volto a salientar o uso do DI e DIP.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=va9wX68lAfA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XXbCJYAy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.youtube.com/vi/va9wX68lAfA/0.jpg" alt="Dependency Injection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#repetit%C3%ADvel"&gt;
  &lt;/a&gt;
  Repetit√≠vel
&lt;/h3&gt;

&lt;p&gt;Devemos ter a possibilidade de repetir o mesmo teste, mas com par√¢metros diferentes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exemplo"&gt;
  &lt;/a&gt;
  Exemplo
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TestMethod&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;DataRow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"email@valido.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"email@balta.io"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ShouldValidateEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IsTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;IsValid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#code-smells"&gt;
  &lt;/a&gt;
  Code smells
&lt;/h2&gt;

&lt;p&gt;Code Smells s√£o alguns sintomas que podemos identificar e que nos remetem a uma m√° aplica√ß√£o do Clean Code de uma forma geral.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rigidez"&gt;
  &lt;/a&gt;
  Rigidez
&lt;/h3&gt;

&lt;p&gt;Seu software √© dif√≠cil de mudar. Qualquer mudan√ßa, por m√≠nima que seja, causa uma cascata de outras mudan√ßas.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fragilidade"&gt;
  &lt;/a&gt;
  Fragilidade
&lt;/h3&gt;

&lt;p&gt;Uma simples mudan√ßa quebra seu software em diversos locais. √â o famosos "cobre o p√©, descobre a cabe√ßa".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imobilidade"&gt;
  &lt;/a&gt;
  Imobilidade
&lt;/h3&gt;

&lt;p&gt;Voc√™ n√£o consegue reutilizar partes do seu c√≥digo em outros projetos por que isto requer um esfor√ßo gigantes. Em resumo, tudo est√° muito acoplado.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#complexidade-desnecess%C3%A1ria"&gt;
  &lt;/a&gt;
  Complexidade desnecess√°ria
&lt;/h3&gt;

&lt;p&gt;Voc√™ usa padr√µes e arquiteturas que tornam seu c√≥digo mais burocr√°tico do que efetivo. √â o famoso "e se", onde pensamos em tudo que o software pode ter um dia e j√° "deixamos tudo pronto".&lt;/p&gt;

&lt;p&gt;"E se eu quiser voar com meu carro um dia?", bem, se um dia voc√™ quiser voar, a√≠ voc√™ constr√≥i as asas, mas se n√£o vai precisar voar agora, foca em construir apenas o carro.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#repeti%C3%A7%C3%A3o-desnecess%C3%A1ria"&gt;
  &lt;/a&gt;
  Repeti√ß√£o desnecess√°ria
&lt;/h3&gt;

&lt;p&gt;Voc√™ precisa repetir o mesmo c√≥digo em diversos lugares.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#opacidade"&gt;
  &lt;/a&gt;
  Opacidade
&lt;/h3&gt;

&lt;p&gt;Seu c√≥digo √© dif√≠cil de entender.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fontes"&gt;
  &lt;/a&gt;
  Fontes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/wojteklu/73c6914cc446146b8b533c0988cf8d29"&gt;Post em Ingl√™s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com.br/Clean-Code-Handbook-Software-Craftsmanship-ebook/dp/B001GSTOAM"&gt;Livro Clean Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cleancode</category>
    </item>
    <item>
      <title>Getting Started with Express</title>
      <author>Christopher Glikpo</author>
      <pubDate>Sat, 26 Jun 2021 14:58:45 +0000</pubDate>
      <link>https://dev.to/cglikpo/getting-started-with-express-370l</link>
      <guid>https://dev.to/cglikpo/getting-started-with-express-370l</guid>
      <description>&lt;p&gt;In the &lt;a href="https://dev.to/cglikpo/getting-started-with-nodejs-130h"&gt;previous article&lt;/a&gt;, I explained getting started with NodeJS.In this article,I am assuming you already have node installed on your pc,if not I recommend you read my &lt;a href="https://dev.to/cglikpo/getting-started-with-nodejs-130h"&gt;previous article&lt;/a&gt; on getting started with NodeJS.&lt;/p&gt;

&lt;p&gt;This article covers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Create Directory and Navigate into directory&lt;/li&gt;
&lt;li&gt; Create package.json file&lt;/li&gt;
&lt;li&gt; What is express&lt;/li&gt;
&lt;li&gt; Install express&lt;/li&gt;
&lt;li&gt; Create a new file&lt;/li&gt;
&lt;li&gt; Basic Example&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-directory-and-navigate-into-directory"&gt;
  &lt;/a&gt;
  Create Directory and Navigate into directory
&lt;/h2&gt;

&lt;p&gt;Step 1: create a directory or folder for your new application anywhere on your desktop in Command Prompt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir learn-express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 2: navigate into the folder or the directory created in command prompt using the commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd learn-express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-packagejson-file"&gt;
  &lt;/a&gt;
  Create package.json file
&lt;/h2&gt;

&lt;p&gt;Use the &lt;code&gt;npm init -y&lt;/code&gt; command to create a &lt;code&gt;package.json&lt;/code&gt; file for your application in the same directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you display the &lt;code&gt;package.json&lt;/code&gt; file , you will see the defaults that you accepted, ending with the license.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "learn-express",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-express"&gt;
  &lt;/a&gt;
  What is express
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt; is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-express"&gt;
  &lt;/a&gt;
  Install express
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Express&lt;/code&gt; is not a native package to &lt;code&gt;Node&lt;/code&gt;, so it must be installed. Because you want to ensure it's included in your node modules, make sure to install it locally and then require it in your server.&lt;/p&gt;

&lt;p&gt;Now install &lt;code&gt;Express&lt;/code&gt; in the learn-express directory by running the command &lt;code&gt;npm install express&lt;/code&gt; in command prompt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The dependencies section of your &lt;code&gt;package.json&lt;/code&gt; will now appear at the end of the &lt;code&gt;package.json&lt;/code&gt; file and will include &lt;code&gt;Express&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "learn-express",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.17.1"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-a-new-file"&gt;
  &lt;/a&gt;
  Create a new file
&lt;/h2&gt;

&lt;p&gt;Create a new file inside learn-express directory,you can call it any name but I am going to call it &lt;code&gt;main.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-example"&gt;
  &lt;/a&gt;
  Basic Example:
&lt;/h2&gt;

&lt;p&gt;Inside the file created add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');
const app = express();
const port =process.env.port || 8000;

app.get('/', (req, res) =&amp;gt; {
  res.send('Hello World!')
});

app.listen(port, () =&amp;gt; {
  console.log(`App listening on port ${port}!`)
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#explanation-of-the-above-code"&gt;
  &lt;/a&gt;
  Explanation of the above code:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#require"&gt;
  &lt;/a&gt;
  Require
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://nodejs.org/api/modules.html#modules_require_id"&gt;Require&lt;/a&gt; are used  to import &lt;code&gt;modules&lt;/code&gt;, &lt;code&gt;JSON&lt;/code&gt;, and &lt;code&gt;local files&lt;/code&gt;. &lt;code&gt;Modules&lt;/code&gt; can be imported from &lt;code&gt;node_modules&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const yourModule = require( "your_module_name" );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ExpressJS  is a &lt;a href="https://nodejs.org/api/modules.html#modules_modules"&gt;NodeJs Module&lt;/a&gt;.&lt;br&gt;
&lt;code&gt;express&lt;/code&gt; is the module's name, as well as the name we usually assign to the variable we use to refer to the module's main function in code like the one you mentioned.&lt;/p&gt;

&lt;p&gt;NodeJS provides the &lt;a href="https://nodejs.org/api/all.html#all_require"&gt;&lt;code&gt;require&lt;/code&gt; function&lt;/a&gt;, whose job is to load modules and give you access to their exports.&lt;/p&gt;

&lt;p&gt;You don't have to call the variable express, you can do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var myvariable = require('express');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and use &lt;code&gt;myvariable&lt;/code&gt; instead, but convention is that you'd use the module's name, or if only using one part of a module, to use the name of that part as defined by the module's documentation.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Express's&lt;/code&gt; default export is a little unique in that it's a function with properties that are themselves functions (methods). This is absolutely acceptable in JavaScript, but not so much in other languages. That's why, in addition to using express() to build an &lt;code&gt;Application&lt;/code&gt; object, you can also use &lt;code&gt;express.static(/*...*/)&lt;/code&gt; to set up serving static files.&lt;/p&gt;

&lt;p&gt;JavaScript Note:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;The backticks in the `App listening on port ${port}!` let us interpolate the value of $port into the string.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can start the server by calling node with the script in your command prompt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;node main
App listening on port 8000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you've reached this point, thank you very much. I hope that this tutorial has been helpful for you and I'll see you all in the next.&lt;/p&gt;

&lt;p&gt;If you  want to learn more about Web Development don't forget to to &lt;a href="https://www.youtube.com/c/ChristopherGlikpo/featured"&gt;follow me on Youtube!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>express</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Wiring Services in Frameworks And How it Works Under the Hood</title>
      <author>eslamelkholy</author>
      <pubDate>Sat, 26 Jun 2021 14:44:57 +0000</pubDate>
      <link>https://dev.to/eslamelkholy/wiring-services-how-it-works-in-frameworks-and-look-under-the-hood-54nj</link>
      <guid>https://dev.to/eslamelkholy/wiring-services-how-it-works-in-frameworks-and-look-under-the-hood-54nj</guid>
      <description>&lt;p&gt;The Most Important Question i have asked myself when i have started learning Clean Architecture like DDD (Domain Driven Development) and Separating Business Logic in Services What is the Best Practices Should i follow To Make the Communication Between Services Better?&lt;br&gt;
Today we will discuss alot of Things Related to The Communication between Classes And How it Works in Most Of Frameworks Like Nestjs and Laravel,....&lt;/p&gt;

&lt;p&gt;First Of All You Must Read this Quote Twice&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every App is The Result of Aggregation of Several Components and App Grows, the Way we connect these Components Becomses Win Or Lose Factor For the Maintainability and Success Of The Project&lt;br&gt;
&lt;a href="https://www.packtpub.com/product/node-js-design-patterns-third-edition/9781839214110"&gt;This Great Quote From Nodejs Design Patterns Book And Most of Code Snippets Also&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#now-lets-start"&gt;
  &lt;/a&gt;
  Now Let's Start
&lt;/h3&gt;

&lt;p&gt;we Have a 1-Blog Service and 2-User Service&lt;br&gt;
we want To Use Blog Service in User Service because User Service Depends on Blog Service &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lG1mBDQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6579jkr2azisek5rab4z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lG1mBDQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6579jkr2azisek5rab4z.jpg" alt="Two Services Depends On Each Other"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if We Have More Service Like Friends Service and User Service Depends on Both So We Going to Create a new Object in every New One?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fLSbcpeU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogar003bwgb6ltwmz6kw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fLSbcpeU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogar003bwgb6ltwmz6kw.jpg" alt="Three Services Connected With Each Other"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The First Thing Comes in your Mind is to Make It as &lt;strong&gt;Singleton&lt;/strong&gt; &lt;br&gt;
Singleton Object And Uses it Every where it's an ideal Solution for Wiring Modules But This Solution Still Have a bottlenecks That Can Easily Solved By &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dependency-injection"&gt;
  &lt;/a&gt;
  Dependency Injection
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mock Our Services &lt;/li&gt;
&lt;li&gt;Improved Decoupling Between Modules&lt;/li&gt;
&lt;li&gt;Let's Say i will change the whole Object Also&lt;/li&gt;
&lt;li&gt;Understand the Relationship Between Components&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dependency-injection-singleton"&gt;
  &lt;/a&gt;
  Dependency Injection + Singleton
&lt;/h3&gt;

&lt;p&gt;it's The Ideal Solution For Wiring Modules Together and how we can easily Control the flow And Dependency Tree With These To That Exactly The Same what IOC(Inversion of Control) Containers Do For Wiring The Modules Together Uses &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dependency Injection + Singleton&lt;/strong&gt; &lt;br&gt;
Makes the Communication between these Modules Easily And helps us To Solve Many Problems Related to Wiring Services Together&lt;/p&gt;

&lt;p&gt;that's why most of Frameworks Already Using IOC Containers To Shift Responsibility Of Wiring Modules To Third Party Package and how it Actually Works Under the hood and Injects Services Easily With Each other&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#nestjs-framework"&gt;
  &lt;/a&gt;
  Nestjs Framework
&lt;/h4&gt;

&lt;p&gt;Nestjs Framework Also Using Dependency Injection + Singleton&lt;br&gt;
For The Communication Between Services They Already Mentioned &lt;br&gt;
and Describe how exactly it Works In The Documentation&lt;br&gt;
&lt;a href="https://docs.nestjs.com/providers#dependency-injection"&gt;Nestjs Dependency Injection and Singleton&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#simple-code-snippet-using-javascript"&gt;
  &lt;/a&gt;
  Simple Code Snippet Using Javascript
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BlogService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UserService&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BlogService&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./blogService&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UserService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;BlogService&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.packtpub.com/product/node-js-design-patterns-third-edition/9781839214110"&gt;Nodejs Design Pattern Book&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://refactoring.guru/design-patterns"&gt;Refactoring Guru Design Patterns&lt;/a&gt;&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>oop</category>
      <category>design</category>
    </item>
    <item>
      <title>Dynamic Brand theming using CSS variables </title>
      <author>mathumitha</author>
      <pubDate>Sat, 26 Jun 2021 14:38:03 +0000</pubDate>
      <link>https://dev.to/mathumitha/dynamic-brand-theming-using-css-variables-2kbd</link>
      <guid>https://dev.to/mathumitha/dynamic-brand-theming-using-css-variables-2kbd</guid>
      <description>&lt;p&gt;Recently, I got to work on an e-commerce checkout page builder (No code tool) where the merchants can change the theme according to their brand. The merchants can configure their brand colour and secondary colour to various elements like buttons, containers, texts, etc. This configuration will be fetched using APIs and applied to checkout pages on rendering. I was exploring various approaches such as &lt;strong&gt;SASS/LESS/Stylus variables, CSS-in-JS libraries and CSS variables&lt;/strong&gt; for applying the theme. After a deep exploration, I ended up using CSS variables. In this article, I would like to explain the pros and cons of each approach and how I ended up using CSS variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sasslessstylus-variables"&gt;
  &lt;/a&gt;
  SASS/LESS/Stylus variables:
&lt;/h2&gt;

&lt;p&gt;CSS preprocessors are scripting languages that allow developers to write DRY styles using variables, functions, mixins, etc. These DRY styles would be converted into raw CSS styles in compile time. If we are aware of all theme-related information during compile time, we can easily map them to these variables and achieve theming. As the checkout has to allow the merchants to change the theme dynamically in run time, we cannot go with this approach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cssinjs-libraries"&gt;
  &lt;/a&gt;
  CSS-in-JS libraries:
&lt;/h2&gt;

&lt;p&gt;There are many CSS-in-Js libraries available in the market such as &lt;strong&gt;styled-components, emotion, glamorous,&lt;/strong&gt; etc. These provide extensive theming support. However, these libraries require &lt;code&gt;&amp;lt;ThemeProvider /&amp;gt;&lt;/code&gt; which has to be wrapped over the app in order to provide theming context. Vendor lock-in is another disadvantage of using this. We will not be able to easily switch to a different approach in the future. As we got used to the traditional CSS approach, the learning curve is also steep.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-variables"&gt;
  &lt;/a&gt;
  CSS Variables:
&lt;/h2&gt;

&lt;p&gt;CSS variables a.k.a custom properties allow us to change the values dynamically in the run time using Javascript. We can use var()to use a variable in the references of the stylesheet. You can assign the value of CSS variable either in CSS or javascript. Many latest browser versions support CSS variables. As CSS variables are supported by native CSS and the learning curve is also shallow, I preferred CSS variables for my theme-able system.&lt;/p&gt;

&lt;p&gt;Let‚Äôs create a simple checkout page that contains the shipping address section, the payment section and the cart section. The merchant would be able to configure &lt;code&gt;brandColor&lt;/code&gt;, &lt;code&gt;secondaryColor&lt;/code&gt; and &lt;code&gt;bodyBackgroundColor&lt;/code&gt; for these sections.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--11_kR93e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfxl9lf9npz19hexa69i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--11_kR93e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfxl9lf9npz19hexa69i.png" alt="Checkout mockup image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-mapping-the-variables-to-check-out-elements"&gt;
  &lt;/a&gt;
  Step 1 ‚Äî Mapping the variables to check out elements
&lt;/h3&gt;

&lt;p&gt;Let‚Äôs map each variable to the respective checkout elements.&lt;br&gt;
&lt;strong&gt;brandColor&lt;/strong&gt;- This is used for primary buttons, logo and border colours&lt;br&gt;
&lt;strong&gt;secondaryColor&lt;/strong&gt; ‚Äî This is used in the apply coupon input group&lt;br&gt;
&lt;strong&gt;bodyBackgroundColor&lt;/strong&gt;- This is applied as a background colour to the main container.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KC7y8XMC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doyl43z973yvewb5zlx9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KC7y8XMC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doyl43z973yvewb5zlx9.png" alt="Checkout mock ip image with pointers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-2-using-the-css-variables-in-the-stylesheet"&gt;
  &lt;/a&gt;
  Step 2 ‚Äî Using the CSS variables in the stylesheet.
&lt;/h3&gt;

&lt;p&gt;To assign a CSS variable to a property, we have to use &lt;code&gt;var()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let‚Äôs have a look at the selectors which use &lt;code&gt;brandColorvariable&lt;/code&gt;. The value for this variable will be set using javascript during run time.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;code&gt;secondaryColor&lt;/code&gt; variable is used for the apply coupon button.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;code&gt;bodyBackgroundColor&lt;/code&gt; is applied to the main container of the application.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#step-3-creating-merchant-configuration-json"&gt;
  &lt;/a&gt;
  Step 3 ‚Äî Creating Merchant configuration JSON
&lt;/h3&gt;

&lt;p&gt;Our theme builder configuration will be exposed via API from the server. The configuration JSON will be looking something like this&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;In order to demo, let‚Äôs mock the server response with static JSON. &lt;code&gt;getMerchantConfigfunction&lt;/code&gt; will return a promise which resolves the merchant configuration using the &lt;code&gt;merchantId&lt;/code&gt; argument.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#step-4-setting-values-for-css-variables-in-javascript"&gt;
  &lt;/a&gt;
  Step 4 ‚Äî Setting values for CSS variables in Javascript
&lt;/h3&gt;

&lt;p&gt;Now, let‚Äôs see how the variables are set in Javascript. As the variables are used across the stylesheet, let‚Äôs set the variables in the root element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--brandColor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;merchant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;brandColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--secondaryColor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;merchant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secondaryColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--bodyBackgroundColor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;merchant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bodyBackgroundColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, we have to get the theme configuration for the merchant. Let‚Äôs say Merchant 1 is active. we have to call &lt;code&gt;getMerchantConfig&lt;/code&gt; function by passing merchantId &lt;code&gt;merchant1&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merchant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getMerchantConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;merchant1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--brandColor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;merchant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;brandColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--secondaryColor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="nx"&gt;merchant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secondaryColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--bodyBackgroundColor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;merchant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bodyBackgroundColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The final Js code will be looking like this.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;That‚Äôs all, We are done with it üòé. You can see the working demo in the codepen. You can play around by passing different merchantIds to getMerchantConfig function. You can also try configuring other properties such as font-size, font-family, etc.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/mathumithapalani/embed/OJpBGjL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;Theming is much more simplified using CSS variables. There is no vendor lock-in. CSS variables are supported by native CSS and have great browser compatibility. It‚Äôs the best fit for my feature. CSS variables have much more potential other than theming. It reduces plenty of repetitive tasks. You can give it a try. I‚Äôm attaching a few good resources here.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties#basic_usage"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties#basic_usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://electerious.medium.com/the-power-of-css-variables-6c4e4ebaf279"&gt;https://electerious.medium.com/the-power-of-css-variables-6c4e4ebaf279&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>design</category>
      <category>html</category>
    </item>
    <item>
      <title>The Invisible Lizard Hunter Game. | 2d Shooter Game</title>
      <author>FRADAR</author>
      <pubDate>Sat, 26 Jun 2021 14:34:24 +0000</pubDate>
      <link>https://dev.to/fradar/the-invisible-lizard-hunter-game-2d-shooter-game-3cih</link>
      <guid>https://dev.to/fradar/the-invisible-lizard-hunter-game-2d-shooter-game-3cih</guid>
      <description>&lt;p&gt;Catch all the camouflaging lizards! Use WASD to move and click to shoot. Don't let the lizards come to you! They decrease your health everytime they touch you. Once you hit a bullet, you can pick that bullet back up and use it again. You cannot move or shoot through black. If you are near a camouflaged lizard, the music will grow louder. (The music can be loud sometimes). The health bar is at the top of the screen.&lt;/p&gt;

&lt;p&gt;Also, you have 60 bullets to kill all 30 lizards.&lt;/p&gt;

&lt;p&gt;READ: &lt;em&gt;Use your cursor to aim at the lizards&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S&lt;/em&gt; The game world is auto generated &lt;/p&gt;

&lt;p&gt;Try the game here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/ZEeYKdK"&gt;https://codepen.io/FRADAR/full/ZEeYKdK&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like my games?&lt;br&gt;
Want to see more?&lt;br&gt;
Follow me here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR"&gt;https://codepen.io/FRADAR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy lizard hunting! :)&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>gamedev</category>
      <category>2d</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
