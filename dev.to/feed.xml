<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Reusing SVG elements in HTML without copy-pasting it
</title>
      <author>Bartłomiej Stefański</author>
      <pubDate>Tue, 23 Nov 2021 20:30:05 +0000</pubDate>
      <link>https://dev.to/bmstefanski/reusing-svg-elements-in-html-without-copy-pasting-it-3hfo</link>
      <guid>https://dev.to/bmstefanski/reusing-svg-elements-in-html-without-copy-pasting-it-3hfo</guid>
      <description>&lt;p&gt;Sometimes you might encounter the case where you want to use the same SVGs multiple times across one page. The first example that comes to my mind is the use of social media icons both in the navbar and footer. This is how I would approach this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SomePage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;  
    &lt;span class="c1"&gt;// Invisible symbol  &lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2.0"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;defs&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;symbol&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"linkedin-badge"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
          /* This is where you would put the contents of the SVG 
          (everything that is inside SVG tag except the tag itself)  */
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;symbol&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;defs&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  

      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;use&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#linkedin-badge"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;  
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;   


    &lt;span class="c1"&gt;// And this is how you would use it  &lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;  
      &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"32"&lt;/span&gt;  
      &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"32"&lt;/span&gt;  
      &lt;span class="na"&gt;viewBox&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0 0 32 32"&lt;/span&gt;  
      &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2.0"&lt;/span&gt;  
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;use&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#linkedin-badge"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;  
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
  &lt;span class="p"&gt;)&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, you can just copy-paste it, but it will make the size of your HTML document bigger and delay the FCP.&lt;br&gt;
You could also export it to a file, and load it through the image element, but it would cause flicks, which you probably don't want to have, especially when the element is above the fold.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>svg</category>
      <category>performance</category>
    </item>
    <item>
      <title>Get Started With ThreeJS</title>
      <author>Shubham Patil</author>
      <pubDate>Tue, 23 Nov 2021 19:33:25 +0000</pubDate>
      <link>https://dev.to/shubhampatilsd/get-started-with-threejs-36mo</link>
      <guid>https://dev.to/shubhampatilsd/get-started-with-threejs-36mo</guid>
      <description>&lt;p&gt;Recently, I used ThreeJS and it was really fun. Today, I'll teach you how to get started with it, with a fun (and simple) tutorial.&lt;/p&gt;

&lt;p&gt;As &lt;a href="https://en.wikipedia.org/wiki/Three.js"&gt;stated by Wikipedia&lt;/a&gt;,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Three.js is a cross-browser JavaScript library and application programming interface (API) used to create and display animated 3D computer graphics in a web browser using WebGL.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here's is the finished product:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zYeo33zl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/59oimfog3q4k2q5u26kh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zYeo33zl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/59oimfog3q4k2q5u26kh.gif" alt="rotating plane" width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also made a &lt;a href="https://threejs-tutorial-demo.vercel.app/"&gt;demo&lt;/a&gt; of the finished product.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#react"&gt;React Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#threejs"&gt;ThreeJS Setup&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'm going to do this in React, but most of this stuff should apply for plain HTML CSS and JS. The ThreeJS docs have a really nice &lt;a href="https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene"&gt;starter guide&lt;/a&gt; to get you up and running with vanilla JS, so do check it out. If you haven't done React before, I would suggest watching [this video[(&lt;a href="https://www.youtube.com/watch?v=MRIMT0xPXFI"&gt;https://www.youtube.com/watch?v=MRIMT0xPXFI&lt;/a&gt;) by Aaron Jack to get you started as fast as possible.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#react-setup"&gt;
  &lt;/a&gt;
  React Setup &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Anyways, let's initialize a React project. If you want, you could also use something like &lt;a href="https://nextjs.org/"&gt;NextJS&lt;/a&gt;, but I'm sticking to &lt;a href="https://create-react-app.dev/"&gt;Create React App&lt;/a&gt; for now.&lt;/p&gt;

&lt;p&gt;I'm using &lt;code&gt;yarn&lt;/code&gt; to initialize my project, so here are the two commands (one with &lt;code&gt;npm&lt;/code&gt; and the other with &lt;code&gt;yarn&lt;/code&gt;) to create a React project.&lt;/p&gt;

&lt;p&gt;npm: &lt;code&gt;npx create-react-app threejs-learning&lt;/code&gt;&lt;br&gt;
yarn &lt;code&gt;yarn create react-app threejs-learning&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And yes, as &lt;a href="https://reactjs.org/docs/create-a-new-react-app.html"&gt;explained by the React docs&lt;/a&gt;, &lt;code&gt;npx&lt;/code&gt; is not a typo (it's something to run scripts that comes with &lt;code&gt;npm&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;When you initialize the project, you'll see something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CvGcL1cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1emx3llnvhxvcbwgngng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CvGcL1cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1emx3llnvhxvcbwgngng.png" alt="New Project Structure" width="169" height="195"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Disregard this for now (we'll deal with the unnecessary files later). What you should do is start the server so you can see what the boilerplate looks like.&lt;/p&gt;

&lt;p&gt;To do that, run the command that corresponds to what you initalized the project with:&lt;br&gt;
yarn: &lt;code&gt;yarn start&lt;/code&gt;&lt;br&gt;
npm: &lt;code&gt;npm run start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will open up a browser tab at &lt;code&gt;http://localhost:3000&lt;/code&gt; and you'll see something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4WYZ6_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9w5cfnwhumgjikmn9wut.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4WYZ6_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9w5cfnwhumgjikmn9wut.png" alt="Starter template" width="686" height="696"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great job you now have a React project set up!&lt;/p&gt;

&lt;p&gt;Back to your editor now. In the &lt;code&gt;src&lt;/code&gt; folder, you'll see these files: &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3UkWaaob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmqo9omlo6fi2z21xevg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3UkWaaob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmqo9omlo6fi2z21xevg.png" alt="src folder structure" width="164" height="199"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, you can delete &lt;code&gt;App.css&lt;/code&gt;, &lt;code&gt;App.test.js&lt;/code&gt;, &lt;code&gt;index.css&lt;/code&gt;, &lt;code&gt;logo.svg&lt;/code&gt;, &lt;code&gt;reportWebVitals.js&lt;/code&gt;, and &lt;code&gt;setupTests.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Shoot! If you look back at the browser tab, we encounter an error:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ynsD6KIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn5xiujkvkl02ssjhs7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ynsD6KIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn5xiujkvkl02ssjhs7d.png" alt="Files not found error" width="880" height="154"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you take a look back at the &lt;code&gt;App.js&lt;/code&gt; and &lt;code&gt;index.js&lt;/code&gt; files in your editor, you'll see that they are importing some of the files we deleted, thus resulting in an error:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;App.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reportWebVitals&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./reportWebVitals&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The solution is simple and requires only a couple keys. Just delete those lines from each file 🤪.&lt;/p&gt;

&lt;p&gt;But some further works still needs to be done. Our code is still using the stuff we imported.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;index.js&lt;/code&gt;, after deleting the imports, your file should look like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;StrictMode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;StrictMode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// If you want to start measuring performance in your app, pass a function&lt;/span&gt;
&lt;span class="c1"&gt;// to log results (for example: reportWebVitals(console.log))&lt;/span&gt;
&lt;span class="c1"&gt;// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals&lt;/span&gt;
&lt;span class="nx"&gt;reportWebVitals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We need to delete the &lt;code&gt;reportWebVitals();&lt;/code&gt; and the &lt;code&gt;&amp;lt;React.StrictMode&amp;gt;&lt;/code&gt; since we removed the imports for that.&lt;/p&gt;

&lt;p&gt;This is &lt;code&gt;index.js&lt;/code&gt; after those changes:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, let's fix &lt;code&gt;App.js&lt;/code&gt;. This is how it should look like right now:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-logo"&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Edit &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;src/App.js&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; and save to reload.
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;
          &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-link"&lt;/span&gt;
          &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://reactjs.org"&lt;/span&gt;
          &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;
          &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"noopener noreferrer"&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Learn React
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Just delete everything in the &lt;code&gt;return();&lt;/code&gt; function and replace it with a simple &lt;code&gt;&amp;lt;h1&amp;gt;I love React!&amp;lt;/h1&amp;gt;&lt;/code&gt;. This is how it should look:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I love React!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Ok great, now we have all the bloat out of our way. Note that this stuff we deleted &lt;em&gt;can&lt;/em&gt; be important if you have a big project, but for now it can be discarded since this a learning project.&lt;/p&gt;

&lt;p&gt;Now, if you save it, you should see this in the browser: &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BZXCqQiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rsifm8wwbpv7cfa43xa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZXCqQiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rsifm8wwbpv7cfa43xa.png" alt="Result after deleting files" width="242" height="98"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#threejs-setup"&gt;
  &lt;/a&gt;
  ThreeJS Setup &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;So now we get to interact with ThreeJS. To get started, install it:&lt;/p&gt;

&lt;p&gt;yarn: &lt;code&gt;yarn add three&lt;/code&gt;&lt;br&gt;
npm: &lt;code&gt;npm install three&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Okay, now go into your &lt;code&gt;App.js&lt;/code&gt; file and import ThreeJS like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, change your &lt;code&gt;&amp;lt;h1&amp;gt;I love React!&amp;lt;/h1&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;canvas id="bg"&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/code&gt; in the &lt;code&gt;return&lt;/code&gt; function of the component. This is so that ThreeJS has something to attach itself on and do its work.&lt;/p&gt;

&lt;p&gt;At this point, we're going to have to do a clever "hack" if you'll call it that. Since the JavaScript loads before the JSX (JSX is the code that looks like HTML), our code is unable to reference the &lt;code&gt;canvas&lt;/code&gt; element if placed before the return statement.&lt;/p&gt;

&lt;p&gt;We're going to have to use something called &lt;code&gt;useEffect&lt;/code&gt; so that ThreeJS runs after the first render and we can access the canvas element.&lt;/p&gt;

&lt;p&gt;Import &lt;code&gt;useEffect&lt;/code&gt; with&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;and insert&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;above the &lt;code&gt;return&lt;/code&gt; statement. Here, the empty array as the second argument indicates for the &lt;code&gt;useEffect&lt;/code&gt; hook to only run on the first render, not repeatedly after each one. Traditionally, you would put variable name(s) there so that &lt;code&gt;useEffect&lt;/code&gt; would run after those variable(s) changed, but we only want it to run after the first render.&lt;/p&gt;

&lt;p&gt;Now, in the &lt;code&gt;useEffect&lt;/code&gt;, create a new ThreeJS scene (this scene is where everything will show up):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we have to create a camera. Add a camera with&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PerspectiveCamera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;1000&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This might be a bit overwhelming, but let me break it down. The first parameter (the &lt;code&gt;75&lt;/code&gt;) is the FOV of the camera. FOV (aka Field of View) is basically how much the camera can see.&lt;/p&gt;

&lt;p&gt;Think of it like this pizza:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vgZqIx2o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqkde1axh3m3ze7mju79.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vgZqIx2o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqkde1axh3m3ze7mju79.png" alt="Pizza without slice" width="703" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The angle of the missing slice is how much the camera can see. The higher the angle, the more it can see. However, if it's too high, you can get results that don't look right.&lt;/p&gt;

&lt;p&gt;The second parameter is for the aspect ratio of the view. This is basically the ratio of the width : height, and I've done so with the space of the page using the &lt;code&gt;window&lt;/code&gt; object. The next two parameters are how near and far the camera can view objects.&lt;/p&gt;

&lt;p&gt;Next, we have to create a renderer. Below the camera, create a renderer and set the background of the scene:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PerspectiveCamera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;1000&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WebGL1Renderer&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#bg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0x4e9fe5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;canvas&lt;/code&gt; option allows ThreeJS to latch itself on an element in the DOM. The &lt;code&gt;scene.background&lt;/code&gt; enables us to create a color with the &lt;code&gt;#4e9fe5&lt;/code&gt; hex code (which will be our sky).&lt;/p&gt;

&lt;p&gt;Next, add the following code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setPixelRatio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;devicePixelRatio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The first line sets the pixel ratio, while the second sets the dimensions for the renderer. The third line sets the position for the camera (with the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; axes, respectively). The last line renders the scene with the camera we made above.&lt;/p&gt;

&lt;p&gt;Now, let's make some lights:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hemiLight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HemisphereLight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffffff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x444444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;hemiLight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hemiLight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dirLight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DirectionalLight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffffff&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;dirLight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dirLight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ambientLight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AmbientLight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffffff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;ambientLight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ambientLight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The first chunk of code creates a new light, creates a gradient (from colors white to grey) of light from the top to the bottom of the scene. To wrap your head around this concept, I would suggest &lt;a href="https://threejsfundamentals.org/threejs/threejs-lights-hemisphere.html"&gt;this interactive playground&lt;/a&gt; online) We then set the position of the light (with the &lt;code&gt;xyz&lt;/code&gt; axes) and add it to the scene.&lt;/p&gt;

&lt;p&gt;The second chunk sets up a directional light, which is like a traditional light source (it illuminates from a point). We set its color to white, set its position, and add it to the scene.&lt;/p&gt;

&lt;p&gt;The ambient light is basically a light that is illuminating from everywhere in your scene. Think of your scene being put in a ball, which is then illuminated from the inside. We then set it's position to the center of the scene and add it.&lt;/p&gt;

&lt;p&gt;Ok so now we have a basic scene set up. It should look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u6ZMdWHg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifdpckuxeiysm9nd5qdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u6ZMdWHg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifdpckuxeiysm9nd5qdg.png" alt="Scene without anything" width="714" height="679"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need to get a model in the scene now, to make it interesting. I would suggest going to &lt;a href="https://poly.pizza/"&gt;poly.pizza&lt;/a&gt; and getting a model. I am using &lt;a href="https://poly.pizza/m/7cvx6ex-xfL"&gt;this airplane&lt;/a&gt;, (Attribution for model: Small Airplane by Vojtěch Balák &lt;a href="https://creativecommons.org/licenses/by/3.0/"&gt;CC-BY&lt;/a&gt; via &lt;a href="https://poly.pizza/m/7cvx6ex-xfL"&gt;Poly Pizza&lt;/a&gt;) but I highly recommend you to use any model you want. Download the &lt;code&gt;.glb&lt;/code&gt; format of the object with this button:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20b-xEms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kqej6rokvn9avwt2oxq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20b-xEms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kqej6rokvn9avwt2oxq.png" alt="Download Button with .obj and .glb files" width="320" height="238"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once downloaded, at this &lt;code&gt;.glb&lt;/code&gt; file to the &lt;code&gt;public/&lt;/code&gt; folder in the root of your project.&lt;/p&gt;

&lt;p&gt;At the top of your code, add this to import the &lt;code&gt;GLTFLoader&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GLTFLoader&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three/examples/jsm/loaders/GLTFLoader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, add this code under the ambient light code to import the model:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GLTFLoader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/NAME_OF_FILE.glb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gltf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;gltf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gltf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The first line creates a new loader object, so we can load the file. The &lt;code&gt;loader.load&lt;/code&gt; part loads the actual model. The first argument is the &lt;code&gt;.glb&lt;/code&gt; file. The &lt;code&gt;/NAME_OF_FILE.glb&lt;/code&gt; accesses it from the &lt;code&gt;public/&lt;/code&gt; folder, which is replaced by the name of your &lt;code&gt;.glb&lt;/code&gt; file. The second argument is a function that has the resulted model as a varible. We can access the proper model with &lt;code&gt;gltf.scene&lt;/code&gt;, hence why we are adding &lt;em&gt;that&lt;/em&gt; to our scene instead of just &lt;code&gt;gltf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Inside the function, I am scaling the model down to 80% of its original size since it was way too big for the viewport. Note that this is optional based on how good your model looks. It might even be small, so you can scale it up in that case.&lt;/p&gt;

&lt;p&gt;Next, we have to add an &lt;code&gt;animate()&lt;/code&gt; function. This basically just re-renders our ThreeJS scene constantly. To do that, just create a function like so:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The first line inside of the function acts like a loop (the actual term is recursion). It calls the animate function again inside of itself, so it keeps re-rendering. The next line renders the scene and the camera again. We call the function outside of itself so it can start.&lt;/p&gt;

&lt;p&gt;But wait a minute, nothing shows up in the browser! It's just a blue background! That's because we didn't add controls for the scene. ThreeJS doesn't work without these controls, hence why they are necessary.&lt;/p&gt;

&lt;p&gt;To put them in the scene, import:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;OrbitControls&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three/examples/jsm/controls/OrbitControls&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;and add this above the &lt;code&gt;function animate()&lt;/code&gt; stuff:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;controls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;OrbitControls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This creates a new object called &lt;code&gt;controls&lt;/code&gt;, which is made from the &lt;code&gt;OrbitControls&lt;/code&gt; class. The constructor of the &lt;code&gt;OrbitControls&lt;/code&gt; has a &lt;code&gt;camera&lt;/code&gt; (which we previously defined), and the domElement to put the controls in (which we set in the creation of the renderer with &lt;code&gt;canvas: document.querySelector("#bg");&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, you should see this in the browser!:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9xlSwGC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyw4j4uq6q312iuzo6gm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9xlSwGC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyw4j4uq6q312iuzo6gm.png" alt="Plane in the scene" width="770" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can even interact with it by dragging using your left mouse button, scrolling to zoom in, and using right click to move the camera.&lt;/p&gt;

&lt;p&gt;The only problem with this is that when you resize the window, it becomes really, &lt;em&gt;REALLY&lt;/em&gt; distorted:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gz8-eMJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lyixu21310j27g9r7p2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gz8-eMJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lyixu21310j27g9r7p2.png" alt="distorted plane" width="880" height="464"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is definitely not what we want, so let's change that. Above the place where you defined your &lt;code&gt;animate&lt;/code&gt; function, create a function like so:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resizeWindow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setPixelRatio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;devicePixelRatio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aspect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateProjectionMatrix&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, we are updating the renderer dimension data. First, we set the new width and height. Then we set the new pixel ratio (this probably will not change but we're setting it just in case). Next, we change the aspect ratio of the camera to the new width and height. We then update the camera's view and re-render the scene.&lt;/p&gt;

&lt;p&gt;If you check the browser again and resize it, you'll see that now this happens:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IQ09Nf5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoazpku9qh7rti319o9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IQ09Nf5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoazpku9qh7rti319o9p.png" alt="width and height not changing after function creation" width="871" height="510"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is happening because we haven't added called the function at all yet. To do so, add this after your &lt;code&gt;resizeWindow&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resizeWindow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This line of code adds an event listener to the window object, and calls the &lt;code&gt;resizeWindow&lt;/code&gt; function whenever the window is resized.&lt;/p&gt;

&lt;p&gt;Now the plane is not distorted anymore!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OzxzJMzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwbu69388twsp3g0ufm0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OzxzJMzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwbu69388twsp3g0ufm0.png" alt="Undistorted plane" width="762" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have the model loaded, but we should add some auto-rotation to make it look cool. To do that, add this in the function:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;autoRotate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;autoRotateSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This essentially enables auto rotation, multiplies the speed by 4, and updates the controls to make it spin. If you want a laugh, change the &lt;code&gt;autoRotateSpeed&lt;/code&gt; to something like &lt;code&gt;1000.0&lt;/code&gt; and watch it go crazy 🤣.&lt;/p&gt;

&lt;p&gt;In the end, your &lt;code&gt;App.js&lt;/code&gt; should look something like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;OrbitControls&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three/examples/jsm/controls/OrbitControls&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GLTFLoader&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three/examples/jsm/loaders/GLTFLoader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PerspectiveCamera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;1000&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WebGL1Renderer&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#bg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0x4e9fe5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setPixelRatio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;devicePixelRatio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hemiLight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HemisphereLight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffffff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x444444&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;hemiLight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hemiLight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dirLight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DirectionalLight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffffff&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;dirLight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dirLight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ambientLight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AmbientLight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffffff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ambientLight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ambientLight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;controls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;OrbitControls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GLTFLoader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/small-airplane-v3.glb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gltf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;gltf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gltf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resizeWindow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setPixelRatio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;devicePixelRatio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aspect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateProjectionMatrix&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resizeWindow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;autoRotate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;autoRotateSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;canvas&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"bg"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;That's it! Now you're up and running with ThreeJS. This is a beginner tutorial and there is a bunch of stuff I didn't cover, so check out the &lt;a href="https://threejs.org/docs/"&gt;ThreeJS docs and examples&lt;/a&gt;. If you've followed along with this tutorial, choose another model and send a picture in the comments section so you can share your work!&lt;/p&gt;

&lt;p&gt;The full code is in a repository on GitHub: &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ShubhamPatilsd"&gt;
        ShubhamPatilsd
      &lt;/a&gt; / &lt;a href="https://github.com/ShubhamPatilsd/threejs-learning"&gt;
        threejs-learning
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Code for the tutorial for ThreeJS!
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you liked this post, the three shiny buttons on the left are waiting to be clicked, and if you didn't like the post, they still are open to clicking.&lt;/p&gt;

&lt;p&gt;Oh yeah, and I also have a Twitter now (very exciting stuff). If you enjoy my blogs, do follow me as I share my thoughts about programming there as well (but more frequently). Follow me at: &lt;a href="https://twitter.com/ShubhamPatilsd"&gt;https://twitter.com/ShubhamPatilsd&lt;/a&gt;&lt;/p&gt;

</description>
      <category>threejs</category>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Quick HTML/CSS hack for prettier Japanese titles</title>
      <author>Claire Froelich</author>
      <pubDate>Tue, 23 Nov 2021 18:43:37 +0000</pubDate>
      <link>https://dev.to/clairefro/quick-htmlcss-hack-for-prettier-japanese-titles-3bnb</link>
      <guid>https://dev.to/clairefro/quick-htmlcss-hack-for-prettier-japanese-titles-3bnb</guid>
      <description>&lt;p&gt;As you read this article in English, look at the end of each line of text. You can thank the &lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt; character for cleanly separating words into unbreakable chunks that aren't interrupted by newlines. &lt;strong&gt;English: words trump newlines&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Japanese does not use spaces, in general. Humans that read Japanese just have a 'spidey sense' of where words start and stop based on grammar and context.&lt;/p&gt;

&lt;p&gt;For large blocks of text like the body of articles, it is common for "words" to be split at newlines. This is OK - characters are mono-spaced and paragraphs keep an aesthetically pleasing blockiness. &lt;strong&gt;Japanese: newlines trump words&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fy87FpF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y196s8ad8mhvbej0vjva.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fy87FpF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y196s8ad8mhvbej0vjva.png" alt="Image description" width="800" height="712"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;From Asahi Shimbun (text in bottom section is read top-to-bottom, right-to-left).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Note above how each newline breaks in the same spot, regardless of position in the word. No hyphens necessary in Japanese! &lt;/p&gt;

&lt;p&gt;While “newlines trump words” looks nice in large blocks of text, it looks awkward on lonely one-line text like titles.&lt;/p&gt;

&lt;p&gt;For example, this text "Learn body parts":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;体の部分を学ぶ&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mJuOiN0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfnqz2ebmi113lk1xha9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJuOiN0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfnqz2ebmi113lk1xha9.gif" alt="Image description" width="800" height="519"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Default "PEZ dispenser" behavior&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Without a space character or hyphen telling the browser where to delimit words, the default behavior is to just pop characters off one-by-one like PEZ candies in a PEZ dispenser.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the English equivalent of what's happening on resize:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Learn body part
s
Learn body par
ts
Learn body pa
rts
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can we agree this is ugly and unreadable?&lt;/p&gt;

&lt;p&gt;To prevent PEZ dispensing and force compound characters to stick together in this Japanese title, you'll want to wrap the desired chunks in display: &lt;code&gt;inline-block&lt;/code&gt; style.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;体の&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;部分を&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;学ぶ&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- 

CSS style:

.w {
  display: inline-block;
}

--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JXBXG2as--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8f4vdtcc6o4zynj69bhf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JXBXG2as--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8f4vdtcc6o4zynj69bhf.gif" alt="Image description" width="880" height="589"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Not PEZ dispensing&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Much better!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automate-it"&gt;
  &lt;/a&gt;
  Automate it!
&lt;/h2&gt;

&lt;p&gt;This solution is fine quick fix for the occasional eye-catching title, but requires knowledge of Japanese grammar to know where to put the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;p&gt;Fortunately there is a cool tool called &lt;a href="https://medium.com/r/?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fbudou"&gt;Budou&lt;/a&gt; that automates this formatting. You don't even have to know Japanese - it uses AI to semantically parse text into words and insert the spans for you (it works for Chinese and Korean too!).&lt;/p&gt;

&lt;p&gt;This has been the first of what will probably be many articles on "things I overlooked when translating my website into Japanese".&lt;/p&gt;




&lt;p&gt;See the pretty Japanese line-wrapping in action on my children's book website: &lt;a href="https://www.power-of-vegetables.com/ja"&gt;The Power of Vegetables&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Deer illustrations in GIFs by &lt;a href="https://www.instagram.com/Fbarbara.fomina"&gt;Varvara Fomina&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was originally posted on &lt;a href="https://medium.com/@clairefroelich/quick-html-css-hack-for-prettier-japanese-titles-fb4ce3d41309"&gt;Medium&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>typography</category>
      <category>japanese</category>
    </item>
    <item>
      <title>What is OpenAPI ? - OpenAPI [1]</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 23 Nov 2021 18:16:58 +0000</pubDate>
      <link>https://dev.to/adaendra/what-is-openapi-openapi-1-404e</link>
      <guid>https://dev.to/adaendra/what-is-openapi-openapi-1-404e</guid>
      <description>&lt;p&gt;&lt;strong&gt;OpenAPI&lt;/strong&gt; &lt;em&gt;(known as Swagger before)&lt;/em&gt; is a standard to declare Restful API.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But why should I use it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the current context, when we are working with APIs &lt;em&gt;(no matters of the language used)&lt;/em&gt; we want to have a clean documentation and be able to share a complete documentation of the API to our consumers.&lt;/p&gt;

&lt;p&gt;With OpenAPI, you will be able to describe &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;all the exposed routes&lt;/li&gt;
&lt;li&gt;all the operations for each route&lt;/li&gt;
&lt;li&gt;the headers&lt;/li&gt;
&lt;li&gt;the body&lt;/li&gt;
&lt;li&gt;all the responses which can be returned
and add a lot of details like the kind of each values, some example, some regex which must match, enumeration of value allowed...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And with the swagger editor or some plugins &lt;em&gt;(&lt;a href="https://swagger.io/tools/swagger-ui/%5D"&gt;Swagger UI&lt;/a&gt;&lt;/em&gt;, you add show it properly to allow non technical people to read it easily!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djbScccF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/py93v99krlrjcquibe2d.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djbScccF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/py93v99krlrjcquibe2d.PNG" alt="Contract example with a plugin to show it properly" width="880" height="818"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ok it's great for consumers, but as a dev is there other pros?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Yes!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-generator"&gt;
  &lt;/a&gt;
  Code Generator
&lt;/h2&gt;

&lt;p&gt;With an OpenAPI contract you can generate some code for you!&lt;br&gt;
For your consumer, it will be all the objects in your bodies or responses.&lt;br&gt;
For you, it will be the same objects and some code generator can create for you all the controllers.&lt;/p&gt;

&lt;p&gt;You can use the &lt;a href="https://swagger.io/tools/swagger-codegen/download/"&gt;Swagger CodeGen&lt;/a&gt; or search in the &lt;a href="https://openapi-generator.tech/docs/generators"&gt;OpenSource OpenAPI generators&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this a lot of time is saved, especially if you have a lot of objects and/or if you update them regularly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;Otherwise, it will be useful for testing. OpenAPI is a standard supported by tools like &lt;strong&gt;&lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt;&lt;/strong&gt; which will generate for you a collection to be able to call every operations listed in!&lt;br&gt;
Also it will fill every headers and field in the body with the default values.&lt;/p&gt;




&lt;p&gt;To conclude, OpenAPI is a must have for a Restful API project. We will see later how to use it!&lt;/p&gt;

&lt;p&gt;I hope it will help you! 🍺&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;OpenAPI : &lt;a href="https://swagger.io/"&gt;https://swagger.io/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;OpenAPI Specification : &lt;a href="https://swagger.io/specification/"&gt;https://swagger.io/specification/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Swagger Editor : &lt;a href="https://editor.swagger.io/"&gt;https://editor.swagger.io/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Swagger UI : &lt;a href="https://swagger.io/tools/swagger-ui/"&gt;https://swagger.io/tools/swagger-ui/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Swagger CodeGen : &lt;a href="https://swagger.io/tools/swagger-codegen/"&gt;https://swagger.io/tools/swagger-codegen/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>productivity</category>
      <category>api</category>
    </item>
    <item>
      <title>🤯 Did you know there are F13-F24 keys? 🤯</title>
      <author>InHuOfficial</author>
      <pubDate>Tue, 23 Nov 2021 18:16:10 +0000</pubDate>
      <link>https://dev.to/inhuofficial/did-you-know-there-are-f13-f24-keys-368p</link>
      <guid>https://dev.to/inhuofficial/did-you-know-there-are-f13-f24-keys-368p</guid>
      <description>&lt;p&gt;I have been using a computer for years and although I will have stumbled across this at some point it never stuck / sank in before.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There are 24 function keys assigned for keyboards. (F1-F24!)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That blew my mind!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-made-you-rediscover-this"&gt;
  &lt;/a&gt;
  What made you (re)discover this?
&lt;/h2&gt;

&lt;p&gt;Recently I got a &lt;a href="https://www.elgato.com/en/stream-deck"&gt;Stream Deck XL&lt;/a&gt; and while setting it up I had keyboard combinations clashing across applications and it was driving me round the bend! &lt;/p&gt;

&lt;p&gt;While I was looking through the menu for assigning key combinations I spotted that the Function keys section had &lt;strong&gt;F13-F24&lt;/strong&gt; keys!? &lt;/p&gt;

&lt;p&gt;5 minutes of Googling later and I was gobsmacked that I didn't know this before! Keyboards can have up to 24 function keys?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H3F7g4h7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ndhpltio7kydwdf1zvc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H3F7g4h7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ndhpltio7kydwdf1zvc.png" alt="Keyboard with two rows of function keys instead of one row" width="880" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyway now that I knew about these "dead" keys that nobody uses anymore I had a way of stopping clashes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-many-extra-keys-combinations-does-that-give-that-wont-clash"&gt;
  &lt;/a&gt;
  How many extra keys / combinations does that give that won't clash?
&lt;/h2&gt;

&lt;p&gt;When combined with Shift, Ctrl and Alt and Windows it gave me 60 keys / combinations &lt;em&gt;guaranteed&lt;/em&gt; not to clash with anything else on your keyboard or interfere with 99% of software (and potentially another 120 keys / combinations if I want to use combinations of Shift, Ctrl, Alt and Windows combined).&lt;/p&gt;

&lt;p&gt;Now I can program 60 keys into my stream deck for global functions and macros that will not clash with &lt;strong&gt;anything&lt;/strong&gt; I currently have set up (or shortcuts already set within applications).&lt;/p&gt;

&lt;p&gt;Anyway, I just thought it was interesting and I would share it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-you-have-a-stream-deck-you-arent-a-streamer"&gt;
  &lt;/a&gt;
  Why Do You Have A Stream Deck, You Aren't A Streamer!
&lt;/h2&gt;

&lt;p&gt;As to why I got a stream deck when I don't stream - article coming out next month on that but I can tell you the conclusion now...&lt;strong&gt;every developer should save up and buy one!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;Anyway, a random post for tonight, did you know that there were 24 function keys and...does anybody own a keyboard that has the F13-F24 keys on?!?&lt;/p&gt;




</description>
      <category>discuss</category>
      <category>todayilearned</category>
      <category>watercooler</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Black Friday - Sweet deals for developers</title>
      <author>Sm0ke</author>
      <pubDate>Tue, 23 Nov 2021 18:13:12 +0000</pubDate>
      <link>https://dev.to/sm0ke/black-friday-sweet-deals-for-developers-9j3</link>
      <guid>https://dev.to/sm0ke/black-friday-sweet-deals-for-developers-9j3</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;This article presents a short-list with nice deals that might help designers and developers to start commercial projects at a lower budget without compromising the quality. &lt;/p&gt;

&lt;p&gt;Criteria used to build this list: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Discounts are real&lt;/code&gt; and consistent (at least 50%)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Vendors provide FREE versions&lt;/code&gt; for ALL discounted products&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;commercial licenses are permissive&lt;/code&gt; (no footer links). &lt;/li&gt;
&lt;li&gt;The products have a &lt;code&gt;quality above the market average&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclosure&lt;/em&gt; - &lt;strong&gt;This post contains affiliate links&lt;/strong&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you use these links to buy something (no additional cost to you) I may earn a commission, product, or service. &lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;code&gt;80%OFF&lt;/code&gt; &lt;a href="https://bit.ly/33auIh8"&gt;Creative-Tim&lt;/a&gt; - promo bundles for Bootstrap, React, and Vue&lt;/li&gt;
&lt;li&gt;✨ &lt;code&gt;90%OFF&lt;/code&gt; &lt;a href="https://bit.ly/33dfOXw"&gt;Themesberg&lt;/a&gt; - UI Kits and FIGMA projects&lt;/li&gt;
&lt;li&gt;✨ &lt;code&gt;80%OFF&lt;/code&gt; &lt;a href="https://simmmple.com/black-friday"&gt;Simmmple&lt;/a&gt; - single bundle with 5 premium products&lt;/li&gt;
&lt;li&gt;✨ &lt;code&gt;95%OFF&lt;/code&gt; &lt;a href="https://bit.ly/2J1Fhwl"&gt;WrapPixel&lt;/a&gt; - single bundle with 25+ products&lt;/li&gt;
&lt;li&gt;✨ &lt;code&gt;60%OFF&lt;/code&gt; &lt;a href="https://bit.ly/2UTgih5"&gt;BootstrapDash&lt;/a&gt; - Bootstrap, Vue and React templates&lt;/li&gt;
&lt;li&gt;✨ &lt;code&gt;50%Off&lt;/code&gt; &lt;a href="https://appseed.us/bundles/black-friday"&gt;AppSeed&lt;/a&gt; - Only $49 per product&lt;/li&gt;
&lt;li&gt;✨ &lt;code&gt;50%Off&lt;/code&gt; &lt;a href="https://bit.ly/37fF9RT"&gt;CodedThemes&lt;/a&gt; - ALL products &lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#creativetim-80off"&gt;
  &lt;/a&gt;
  ✨ &lt;strong&gt;&lt;a href="https://bit.ly/33auIh8"&gt;Creative-Tim&lt;/a&gt;&lt;/strong&gt; - 80%OFF
&lt;/h2&gt;

&lt;p&gt;This company provides discounted bundles per technology: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 $99 &lt;strong&gt;&lt;a href="https://bit.ly/3cFG6pE"&gt;React Bundle&lt;/a&gt;&lt;/strong&gt; - &lt;code&gt;23 UI Kits&lt;/code&gt;, Designer Files, 6mo Support&lt;/li&gt;
&lt;li&gt;👉 $99 &lt;strong&gt;&lt;a href="https://bit.ly/3xiwMl3"&gt;Vue Bundle&lt;/a&gt;&lt;/strong&gt; - &lt;code&gt;15 UI Kits&lt;/code&gt;, Designer Files, 6mo Support&lt;/li&gt;
&lt;li&gt;👉 $99 &lt;strong&gt;&lt;a href="https://bit.ly/3DLv9ih"&gt;Bootstrap Bundle&lt;/a&gt;&lt;/strong&gt; - &lt;code&gt;19 UI Kits&lt;/code&gt;, Designer Files, 6mo Support&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;Some FREE products to play with before purchasing anything: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react?AFFILIATE=128200"&gt;Soft UI React&lt;/a&gt; - free Material-UI Dashboard&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bit.ly/39gor7M"&gt;Black Dashboard React&lt;/a&gt; - free React Dashboard, 23k Downloads&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bit.ly/3nSNOR2"&gt;Vue Material Dashboard&lt;/a&gt; - free Vue Dashboard, 37k Downloads&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3zxCT3At--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9pvqkbk85dyukncfmp2j.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3zxCT3At--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9pvqkbk85dyukncfmp2j.gif" alt="Black Friday - Sweet deals for developers for 2021." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#themesberg-90off"&gt;
  &lt;/a&gt;
  ✨ &lt;strong&gt;&lt;a href="https://themesberg.com/black-friday"&gt;Themesberg&lt;/a&gt;&lt;/strong&gt; - 90%OFF
&lt;/h2&gt;

&lt;p&gt;10 Premium Themes Powered by Bootstrap CSS can be purchased until 28.Nov for &lt;strong&gt;$99&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 Bundle Link: &lt;a href="https://themesberg.com/black-friday"&gt;BF Themesberg&lt;/a&gt; &lt;strong&gt;ONLY $99&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;blockquote&gt;
&lt;p&gt;Popular Free Products:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://themesberg.com/product/ui-kit/pixel-lite-free-bootstrap-4-ui-kit"&gt;Pixel Lite&lt;/a&gt; - Free Bootstrap 4 UI KIT&lt;/li&gt;
&lt;li&gt;&lt;a href="https://themesberg.com/product/admin-dashboard/volt-bootstrap-5-dashboard"&gt;Volt - Bootstrap 5 Dashboard Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://themesberg.com/product/bootstrap/impact-design-system"&gt;Impact Design System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LD40XRZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63es2jpcpc31ts0xk79l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LD40XRZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63es2jpcpc31ts0xk79l.png" alt="Black Friday 2021 - Themesberg." width="880" height="334"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#simmmple"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://simmmple.com/black-friday"&gt;Simmmple&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A nice and exclusive digital bundle which contains all of our premium products &amp;amp; tools that will help you design faster &amp;amp; easier. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 Bundle Link: &lt;a href="https://simmmple.com/black-friday"&gt;Simmmple Bundle&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2u1TQ3hc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1gad3s2jroli4zh8dgi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2u1TQ3hc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1gad3s2jroli4zh8dgi.png" alt="Black Friday 2021 - Simmmple." width="880" height="307"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#codedthemes"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://bit.ly/37fF9RT"&gt;CodedThemes&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Discount available via coupon &lt;code&gt;BF2021&lt;/code&gt; applies on all products: React, Angular, Bootstrap. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 Bundle Link: &lt;a href="https://codedthemes.com/bootstrap-mega-bundle/?ref=appseed"&gt;Bootstrap 4 Mega Bundle&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B624yRQ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttakkc9s7000jy980dx5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B624yRQ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttakkc9s7000jy980dx5.png" alt="Black Friday 2021 - CodedThemes." width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#bootstrapdash-60off"&gt;
  &lt;/a&gt;
  ✨ &lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/offers/?ref=23"&gt;BootstrapDash&lt;/a&gt;&lt;/strong&gt; 60%OFF
&lt;/h2&gt;

&lt;p&gt;Bundle of 50+ Premium Templates with 100+ dashboard layouts, UI kits coded in Bootstrap, React, and Vue.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 Bundle Link: &lt;a href="https://www.bootstrapdash.com/mega-bundle/?ref=23"&gt;BootstrapDash Mega Bundle&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Popular FREE products:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.bootstrapdash.com/product/star-admin-free/?ref=23"&gt;Star Admin Free&lt;/a&gt; - Free Admin dashboard&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.bootstrapdash.com/product/azia-free/?ref=23"&gt;Azia Admin Free&lt;/a&gt; - Bootstrap 4 Admin template&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.bootstrapdash.com/product/purple-vue-admin-free-dashboard-template/?ref=23"&gt;Purple Vue Admin&lt;/a&gt; - Free VueJS product&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k9Kb-YTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8z4yd7yi13dxz51skpe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k9Kb-YTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8z4yd7yi13dxz51skpe.png" alt="Black Friday 2021 - Themesberg." width="880" height="340"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wrappixel-95off"&gt;
  &lt;/a&gt;
  ✨ &lt;strong&gt;&lt;a href="https://bit.ly/2J1Fhwl"&gt;WrapPixel&lt;/a&gt;&lt;/strong&gt; 95%OFF
&lt;/h2&gt;

&lt;p&gt;The BF bundle contains 12 Bootstrap Templates, 8 Angular Templates, 5 React Templates, and 3 Vue Templates.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 BF Bundle Link - &lt;a href="https://bit.ly/2J1Fhwl"&gt;WrapPixel BF Offer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;FREE products from WrapPixel:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wrappixel.com/templates/severny-bootstrap-dashboard-free/?ref=157"&gt;Severny Bootstrap Dashboard Lite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wrappixel.com/templates/ample-free-react-dashboard/?ref=157"&gt;Ample React Dashboard Lite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wrappixel.com/templates/adminpro-vuetify-admin-lite/?ref=157"&gt;AdminPro VueJs Lite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--guNGF-rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/black-friday-deals/black-friday-deals/main/media/bf-wrappixel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--guNGF-rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/black-friday-deals/black-friday-deals/main/media/bf-wrappixel.png" alt="Black Friday - WrapPixel offer." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#appseed-50off"&gt;
  &lt;/a&gt;
  ✨ &lt;strong&gt;&lt;a href="https://appseed.us/bundles/black-friday"&gt;AppSeed&lt;/a&gt;&lt;/strong&gt; 50%OFF
&lt;/h2&gt;

&lt;p&gt;Premium seed project crafted by experts in React, Django and Flask on top of premium UI Kits - &lt;strong&gt;ONLY $49/product&lt;/strong&gt; (discounted from $99/$29)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Bundle Link: &lt;a href="https://appseed.us/bundles/black-friday"&gt;AppSeed Black Friday&lt;/a&gt; &lt;strong&gt;$99&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Popular FREE Starters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/django-datta-able"&gt;Datta Able Django&lt;/a&gt; - a nice Django dashboard&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-volt"&gt;Flask Volt&lt;/a&gt; - Open-Source flask dashboard&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/flask-boilerplate-dashboard-argon"&gt;Flask Dashboard Argon&lt;/a&gt; - Simple Flask Dashboard&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thank You!&lt;/strong&gt; Please suggest more &lt;strong&gt;sweet deals&lt;/strong&gt; in the comments. &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>blackfriday</category>
      <category>discounts</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Kacie Ahmed: Web3 - How to Get Started as a Beginner</title>
      <author>Michael J. Larocca</author>
      <pubDate>Tue, 23 Nov 2021 17:51:40 +0000</pubDate>
      <link>https://dev.to/michaellarocca/kacie-ahmed-web3-how-to-get-started-as-a-beginner-3j2n</link>
      <guid>https://dev.to/michaellarocca/kacie-ahmed-web3-how-to-get-started-as-a-beginner-3j2n</guid>
      <description>&lt;h3&gt;
  &lt;a href="#in-this-article-tech-twitter-celebrity-kaci-ahmed-teaches-us-how-to-get-started-in-web3-development-he-provides-us-with-the-libraries-and-frameworks-to-use-projects-to-practice-tutorials-to-watch-and-more"&gt;
  &lt;/a&gt;
  In this article, Tech Twitter celebrity Kaci Ahmed teaches us how to get started in Web3 development. He provides us with the libraries and frameworks to use, projects to practice, tutorials to watch, and more!
&lt;/h3&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--diu6XZxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/856d2132065d6d951e2d8684411d3191/e35ec/TXG-TN-Kacie-02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--diu6XZxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/856d2132065d6d951e2d8684411d3191/e35ec/TXG-TN-Kacie-02.png" alt="Kacie Ahmed" width="861" height="404"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#about-kacie-ahmed"&gt;
  &lt;/a&gt;
  About Kacie Ahmed
&lt;/h3&gt;

&lt;p&gt;Kacie is a freelance developer with experience in advanced technologies, such as Web3, Solidity, smart contracts, and Decentralized settlement platforms on Blockchain.&lt;/p&gt;

&lt;p&gt;Kacie is also a top 1% Tech Twitter Space host with over 12k followers, and he holds a Bachelor's degree from York University in Toronto, Ontario.&lt;/p&gt;

&lt;p&gt;Kacie believes cryptocurrencies and the underlying blockchain technology will change the world. He envisions this tech industry's direction as his best opportunity to help make a change for a brighter future.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2qa2aGaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/5d21e635f09e463206790254bb54252c/1cfc2/Web3-Logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2qa2aGaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/5d21e635f09e463206790254bb54252c/1cfc2/Web3-Logo.png" alt="Web3" width="880" height="331"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-web3"&gt;
  &lt;/a&gt;
  What is Web3?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;To better understand the concept of Web3, let's take a look at Web1 and Web2.&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#web-10"&gt;
  &lt;/a&gt;
  Web 1.0
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Wikipedia describes,&lt;/strong&gt; &lt;em&gt;"Web 1.0 is a retronym referring to the first stage of the World Wide Web's evolution, from roughly 1991 to 2004.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wikipedia further describes&lt;/strong&gt; that Web 1.0's vast majority of users simply acted as consumers of content and that personal web pages were common, consisting mainly of static pages.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#web-20"&gt;
  &lt;/a&gt;
  Web 2.0
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Wikipedia describes,&lt;/strong&gt; &lt;em&gt;"Web 2.0 Although the term mimics the numbering of software versions, it does not denote a formal change in the nature of the World Wide Web, but merely describes a general change that occurred during this period as interactive websites proliferated and came to overshadow the older, more static websites of the original Web."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wikipedia continues,&lt;/strong&gt; &lt;em&gt;"A Web 2.0 website allows users to interact and collaborate with each other through social media dialogue as creators of user-generated content in a virtual community. This contrasts the first generation of Web 1.0-era websites where people were limited to viewing content in a passive manner."&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#web3"&gt;
  &lt;/a&gt;
  Web3
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Wikipedia explains,&lt;/strong&gt; &lt;em&gt;"Web3, also known as Web 3.0, is an idea for a version of the Internet that is decentralized and based on public blockchains. The concept gained popularity in 2020 and 2021 with interest from cryptocurrency enthusiasts and investments from high-profile technologists and companies."&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#why-learn-web3"&gt;
  &lt;/a&gt;
  Why learn Web3?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;To reiterate Web1, Web2, and Web3 in Kacie's words:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web1 was the "read-only" era&lt;/li&gt;
&lt;li&gt;Web2 was the social media revolution&lt;/li&gt;
&lt;li&gt;Web3 is decentralization, the next jump in how people use the internet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Now that we understand the technical aspects of Web3, why would we want to learn it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kacie tells us,&lt;/strong&gt; "Web3 is a great opportunity for those of us who are ambitious. Other fields in tech are tight and established. Web3 is a vast frontier."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kacie elaborates,&lt;/strong&gt; "Because Web3 is new, there is a greater opportunity to rise to the top and become a thought leader."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kacie then provides an eye-opening statement to make his point clear,&lt;/strong&gt; "Imagine how hard it would be to get in a room with &lt;a href="https://en.wikipedia.org/wiki/Mark_Zuckerberg"&gt;Mark Zuckerberg&lt;/a&gt;. In Web3, the giants of the space are still accessible. Some of them sit in Twitter Spaces."&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#kacies-actionable-steps-to-learn-web3"&gt;
  &lt;/a&gt;
  Kacie's actionable steps to learn Web3
&lt;/h3&gt;

&lt;p&gt;Kacie first advises to "&lt;strong&gt;know what you are getting yourself into&lt;/strong&gt;" before worrying about languages and courses. He then provides an informative YouTube video that put him on the right path: &lt;a href="https://www.youtube.com/watch?v=OwSl2xwl2-w"&gt;How to become a blockchain developer in 2021&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OwSl2xwl2-w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#languages"&gt;
  &lt;/a&gt;
  Languages
&lt;/h3&gt;

&lt;p&gt;Next, Kacie instructs us to learn the basics of &lt;a href="https://en.wikipedia.org/wiki/JavaScript"&gt;JavaScript&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Solidity"&gt;Solidity&lt;/a&gt;, as they are the two main languages for &lt;a href="https://en.wikipedia.org/wiki/Blockchain"&gt;blockchain&lt;/a&gt; development on &lt;a href="https://en.wikipedia.org/wiki/Ethereum"&gt;Etherume&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Solidity is used to make &lt;a href="https://en.wikipedia.org/wiki/Smart_contract"&gt;smart contracts&lt;/a&gt;, and JavaScript is used for interacting with smart contracts.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#libraries-amp-frameworks"&gt;
  &lt;/a&gt;
  Libraries &amp;amp; Frameworks
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Here is Kacie's list of frameworks you'll need to download and why:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js/NPM - Runs JavaScript&lt;/li&gt;
&lt;li&gt;Hardhat - Useful framework&lt;/li&gt;
&lt;li&gt;MetaMask - Your Ethereum wallet&lt;/li&gt;
&lt;li&gt;Ganache - Your localhost blockchain&lt;/li&gt;
&lt;li&gt;Web3.js - Connects sites to blockchain&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jsqhFQIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/71f0256c36371e09f7806d9d0e7f8140/e51a6/Projects.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jsqhFQIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/71f0256c36371e09f7806d9d0e7f8140/e51a6/Projects.png" alt="Projects" width="783" height="528"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#projects"&gt;
  &lt;/a&gt;
  Projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Kacie provides us with four projects we can complete and add to our web3 portfolio in less than a week:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/BlockDevsUnited/TokenTutorial"&gt;Issue your first coin (cryptocurrency)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BlockDevsUnited/BasicFrontEndTutorial"&gt;Build your fist DApp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BlockDevsUnited/NFT-Tutorial"&gt;Deploy your first NFT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/dabit3/building-scalable-full-stack-apps-on-ethereum-with-polygon-2cfb"&gt;Create your own NFT marketplace&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h4&gt;
  &lt;a href="#the-first-three-projects-listed-are-available-on-github-the-fourth-project-is-a-blog-post-tutorial"&gt;
  &lt;/a&gt;
  &lt;em&gt;The first three projects listed are available on GitHub. The fourth project is a blog post tutorial.&lt;/em&gt;
&lt;/h4&gt;




&lt;h3&gt;
  &lt;a href="#project-1"&gt;
  &lt;/a&gt;
  Project 1
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/BlockDevsUnited/TokenTutorial"&gt;Issue your first coin (cryptocurrency)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Issue an ERC-20 token with Remix and Metamask&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this step-by-step tutorial you will learn how to issue and play with your own ERC-20 token on Ethereum. This tutorial can be completed by people with no blockchain programming experience and novice programmers.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#project-2"&gt;
  &lt;/a&gt;
  Project 2
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/BlockDevsUnited/BasicFrontEndTutorial"&gt;Build your fist DApp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create An Ethereum Dapp with Ethersjs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a step-by-step tutorial on how to create a front end, deploy a Solidity smart contract, and connect them together. We will use Metamask, Remix IDE and Ethersjs.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#project-3"&gt;
  &lt;/a&gt;
  Project 3
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/BlockDevsUnited/NFT-Tutorial"&gt;Deploy your first NFT&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NFT-Tutorial&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Deploy an NFT project on Ethereum.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#project-4"&gt;
  &lt;/a&gt;
  Project 4
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://dev.to/dabit3/building-scalable-full-stack-apps-on-ethereum-with-polygon-2cfb"&gt;Create your own NFT marketplace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building a Full Stack NFT Marketplace on Ethereum with Polygon.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUtDO7Fa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/5700019905d1e104258e308db9c57cd1/0a47e/Discord.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUtDO7Fa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/5700019905d1e104258e308db9c57cd1/0a47e/Discord.png" alt="Discord" width="600" height="315"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#join-a-development-group"&gt;
  &lt;/a&gt;
  Join a development group
&lt;/h3&gt;

&lt;p&gt;Once you have completed a few of the projects listed above, Kacie advises us to create Web3 projects on our own.&lt;/p&gt;

&lt;p&gt;Kacie knows from experience it can be a difficult task to create Web3 projects on our own without guidance, so he recommends we join a Web3 development group.&lt;/p&gt;

&lt;p&gt;Kacie provides us with a really good Web3 development &lt;a href="https://discord.com/"&gt;Discord&lt;/a&gt; group called &lt;a href="https://t.co/LwuEV6WIHB"&gt;BDU - Block Devs United&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#know-the-lingo-of-web3"&gt;
  &lt;/a&gt;
  Know the lingo of Web3
&lt;/h3&gt;

&lt;p&gt;When you reach a comfortable level working with Web3 and are ready to engage with development groups, Kacie created a &lt;a href="https://twitter.com/haezurath/status/1452666439018631168?s=21"&gt;Twitter thread&lt;/a&gt; of common words used in Web3 that we should know.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;Definitions according to &lt;a href="https://www.merriam-webster.com/"&gt;https://www.merriam-webster.com/&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fungible:&lt;/strong&gt; being something (such as money or a commodity) of such a nature that one part or quantity may be replaced by another equal part or quantity in paying a debt or settling an account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Non-fungible:&lt;/strong&gt; a unique digital identifier that cannot be copied, substituted, or subdivided, that is recorded in a blockchain, and that is used to certify authenticity and ownership (as of a specific digital asset and specific rights relating to it).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NFTs:&lt;/strong&gt; are NON-FUNGIBLE TOKEN'S&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Blockchain:&lt;/strong&gt; a digital database containing information (such as records of financial transactions) that can be simultaneously used and shared within a large decentralized, publicly accessible network.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xeMhmF3C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/0bc712874683b278e7d2d5f9cdaafbae/1cfc2/ethereum-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xeMhmF3C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/0bc712874683b278e7d2d5f9cdaafbae/1cfc2/ethereum-logo.png" alt="ethereum" width="880" height="398"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#ethereum-is-a-decentralized-opensource-blockchain-with-smart-contract-functionality-ether-eth-or-%CE%BE-is-the-native-cryptocurrency-of-the-platform"&gt;
  &lt;/a&gt;
  &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/Ethereum"&gt;Ethereum&lt;/a&gt; is a decentralized, open-source blockchain with smart contract functionality. Ether (ETH or Ξ) is the native cryptocurrency of the platform.&lt;/em&gt;
&lt;/h5&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;Definitions in Kacie's words&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ERC20&lt;/strong&gt; ERC20 coins are fungible tokens (e.g. Bitcoin).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ERC721:&lt;/strong&gt; ERC721 coins are non-fungible tokens (e.g. NTFs).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ERC 1155:&lt;/strong&gt; ERC 1155 is a hybrid between ERC20 and ERC721. They are tokens that support fungible and non-fungible coins alike.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wallets:&lt;/strong&gt; Wallets (crypto-wallets) are essentially applications that manage your private and public keys. These are used to send and receive crypto-currency and NFTs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DApps:&lt;/strong&gt; DApps are decentralized applications. Basically, any app that's connected to the blockchain instead of a central web server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DAO (Decentralized Autonomous Organization):&lt;/strong&gt; Unlike regular organizations (e.g. Google), DAOs are governed by transparent rules that are encoded by smart contracts. These rules are visible to all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Layer2:&lt;/strong&gt; Layer2 is a term that describes solutions that handle transactions OFF the main Ethereum blockchain. These solutions (e.g. ParaState) are useful because as the blockchain becomes busier, fees go up, so handling transactions off the main network is cheaper.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ETH 2.0:&lt;/strong&gt; ETH 2.0 refers to Ethereums's future "Serenity" patch that will transition Ethereum from "Proof of Work" to "Proof of Stake," drastically reducing carbon footprint.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hiupZA-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/bd620ba9197f1473c64c17362f7029c3/1cfc2/Twitter.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hiupZA-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://selftaughttxg.com/static/bd620ba9197f1473c64c17362f7029c3/1cfc2/Twitter.png" alt="Twitter" width="880" height="460"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#start-networking"&gt;
  &lt;/a&gt;
  Start networking
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#twitter-spaces"&gt;
  &lt;/a&gt;
  Twitter Spaces
&lt;/h4&gt;

&lt;p&gt;Kacie, as a Web3 developer, receives multiple paid offers weekly! He tells us that most of the paid offers are sourced from Twitter Spaces.&lt;/p&gt;

&lt;p&gt;In Twitter Spaces, Kacie has networked with celebrities; recently, &lt;a href="https://mobile.twitter.com/elonmusk"&gt;Elon Musk&lt;/a&gt; attended one!&lt;/p&gt;

&lt;p&gt;At this time, Kacie credits Twitter Spaces as the number one place to meet Web3 clients.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-metaverse"&gt;
  &lt;/a&gt;
  The Metaverse
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Wikipedia explains,&lt;/strong&gt; &lt;em&gt;"The metaverse is a hypothesized iteration of the internet, supporting persistent online 3-D virtual environments through conventional personal computing, as well as virtual and augmented reality headsets. Metaverses, in some limited form, are already present on platforms like VRChat or video games like Second Life."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kacie tells us that the metaverse is a decentralized community that is large and booming right now. Money is being made there, and it has caught the attention of very important people.&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/b9vWShsmE20"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;To network in the metaverse, Kacie informed us of unspoken rules of conduct to follow:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do not self promote&lt;/li&gt;
&lt;li&gt;Match the vibe of the conversation&lt;/li&gt;
&lt;li&gt;Do not force introducing yourself and speaking ( wait for the opportunity )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kacie tells us that if we follow the rules of conduct he provided, we will most likely receive direct messages from clients seeking our services and hiring us as developers.  &lt;/p&gt;




&lt;p&gt;&lt;strong&gt;However, Kacie warns us of scammers. Scams are big in the space, and it is up to us to decipher who is legit and who is not.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kacie provides us with what he considers to be a good offer:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They mention paying right away&lt;/li&gt;
&lt;li&gt;They want to schedule a zoom call&lt;/li&gt;
&lt;li&gt;They are willing to make milestone payments&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#building-in-public"&gt;
  &lt;/a&gt;
  Building in public
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Ah yes, "building in public/having an online presence" seems to be a recurring phenomenon that consistently provides developers with monetary opportunities.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So it is no surprise to me to learn that Kacie credits his "&lt;strong&gt;Building in public&lt;/strong&gt;" to provide monetary opportunities for him.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The topic of building in public and having an online presence is vast, and I have written several articles on the topic, including:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://selftaughttxg.com/2021/08-21/TheImportanceOfLearningInPublic/"&gt;The Importance of Learning in Public&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://selftaughttxg.com/2021/07-21/Swyx-ActionableTactics/"&gt;Shawn Wang (Swyx): Actionable tactics that will help you to become hireable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Kacie ends with a list of resources that he wished he knew about early in his Web3 learning journey:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Polygon&lt;/li&gt;
&lt;li&gt;Learn and Earn&lt;/li&gt;
&lt;li&gt;Etherscan&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Polygon&lt;/strong&gt; is a protocol and a framework for building and connecting Ethereum-compatible blockchain networks. Aggregating scalable solutions on Ethereum supporting a multi-chain Ethereum ecosystem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn and Earn&lt;/strong&gt;, Kacie tells us, are websites that pay you to learn Web3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Etherscan&lt;/strong&gt; allows you to explore and search the Ethereum blockchain for transactions, addresses, tokens, prices, and other activities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; Kacie advises us to read the documentation on &lt;a href="https://docs.openzeppelin.com/"&gt;Openzeppelin.com&lt;/a&gt;, as most smart contracts you deploy will import from existing ones on that website.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#kacies-upcoming-events"&gt;
  &lt;/a&gt;
  Kacie's upcoming events
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Would you like to learn more about Kacie and Web3 from him? Be sure to check out his upcoming events!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nov 30, 2021:&lt;/strong&gt; &lt;a href="https://www.youtube.com/watch?v=nMimDaiOTv4"&gt;Francesco Ciulla: Blockchain and web3 | Kacie Ahmed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Date to be announced&lt;/strong&gt; &lt;a href="https://scrimba.com/podcast/"&gt;The Scrimba Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kacie also regularly hosts Twitter Spaces, so be sure to look out for them and join in on the conversations!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nMimDaiOTv4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#kacies-links"&gt;
  &lt;/a&gt;
  Kacie's Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;🔗&lt;a href="https://twitter.com/Haezurath"&gt;Twitter&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🔗&lt;a href="https://www.linkedin.com/in/kacie-ahmed-2a8b5b171/"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Web3 is a vast new frontier. Becoming a Web3 developer will provide you with many opportunities, including monetary, help you visibly stand out from other developers in the crowd, and potentially network with giants in the industry.&lt;/p&gt;

&lt;p&gt;Joining development groups, such as the Block Devs United on Discord and participating in Twitter Spaces like Kacie hosts regularly will give us the help and support needed to become successful Web3 developers.&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#are-you-now-interested-in-becoming-a-web3-developer-have-you-already-learned-web3-and-successfully-created-projects-please-share-the-article-and-comment"&gt;
  &lt;/a&gt;
  Are you now interested in becoming a Web3 developer? Have you already learned Web3 and successfully created projects? Please share the article and comment!
&lt;/h6&gt;




</description>
      <category>web3</category>
      <category>networking</category>
      <category>twitter</category>
      <category>freelance</category>
    </item>
    <item>
      <title>HacktoberFest 2021</title>
      <author>Sandi Milohanić</author>
      <pubDate>Tue, 23 Nov 2021 17:50:53 +0000</pubDate>
      <link>https://dev.to/sandimilohanic/hacktoberfest-2021-32nj</link>
      <guid>https://dev.to/sandimilohanic/hacktoberfest-2021-32nj</guid>
      <description>&lt;p&gt;This year I participated in the Hacktoberfest'21. I'm glad about the project and my little contribution. This is my first post on dev.to.&lt;/p&gt;

&lt;p&gt;I worked on one mobile project built with flutter.📱 I've learned new technologies and met new people. The experience I got was very good and I suggest to every one to participate at hacktoberfest. I support this project and I will continue working on this project. &lt;/p&gt;

&lt;p&gt;I've fulfilled the Hacktoberfest goal. 🎉 🙌 &lt;/p&gt;

&lt;p&gt;I Can't wait for next year.&lt;/p&gt;

</description>
      <category>hacktoberfest2021</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>Modern Angular</title>
      <author>Colum Ferry</author>
      <pubDate>Tue, 23 Nov 2021 17:47:30 +0000</pubDate>
      <link>https://dev.to/nrwl/modern-angular-2mp0</link>
      <guid>https://dev.to/nrwl/modern-angular-2mp0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-modern-angular-tooling"&gt;
  &lt;/a&gt;
  What is Modern Angular Tooling?
&lt;/h2&gt;

&lt;p&gt;With the Angular CLI no longer including a complete out-of-the-box development solution, it is more important than ever to understand the tools at our disposal to improve the developer experience when building Angular applications.&lt;/p&gt;

&lt;p&gt;Modern Angular Tooling is the term used to describe modern tools that will enable you and your team to build a comprehensive development environment. This development environment takes advantage of the latest improvements in the JavaScript ecosystem to improve productivity, consistency, reliability, scalability and developer experience when building Angular applications and libraries. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-modern-angular-tools"&gt;
  &lt;/a&gt;
  What are the Modern Angular Tools?
&lt;/h2&gt;

&lt;p&gt;We consider Modern Tools to be additional tools that can and should be used when building Angular applications and Angular libraries. These tools tend to focus on a more architectural side of software development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt; - E2E Testing&lt;/strong&gt;&lt;br&gt;
The Angular CLI no longer includes an e2e solution when it generates an Angular application. That means no more Protractor out of the box with Angular applications. Therefore, this leaves a considerable gap in the out-of-the-box experience with Angular. Cypress has one of the best developer experiences and can be used for more than just testing Angular applications. It’s straightforward to write, run and debug tests with Cypress, and it supports cross-browser testing, supporting Chrome-family browsers (including Electron and Edge) and Firefox. There is also an open proposal to support &lt;a href="https://github.com/cypress-io/cypress/issues/6422"&gt;Safari&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt; - Unit Testing&lt;/strong&gt;&lt;br&gt;
Jest is the best-in-class unit testing tool in the JavaScript ecosystem right now. The Angular CLI includes Karma when generating an application, another unit testing tool; however, Karma is noticeably much slower, reducing feedback cycle time. &lt;br&gt;
Jest is much faster, runs without launching a browser and can use JSDom to allow for unit testing of component templates. It can also run in parallel, allowing for a much faster feedback cycle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt; - Linting&lt;/strong&gt;&lt;br&gt;
ESLint has become the defacto linting tool in the JavaScript world, even replacing TSLint in TypeScript projects. The Angular CLI included TSLint in the past for linting Angular applications, but when TSLint support ended in December 2020, the Angular CLI stopped including with TSLint. In fact, the Angular CLI no longer includes any linting tool out of the box. &lt;br&gt;
ESLint is a pluggable linting tool used across the JavaScript ecosystem that allows you to quickly enforce best practices and even implement automatic fixing of problems within your workspace. It makes enforcing team-wide consistency easier and helps avoid common causes of bugs within JavaScript. And it’s fast!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt; - Component Design&lt;/strong&gt;&lt;br&gt;
Frontend frameworks and libraries have converged to a single core design paradigm centred around components. Building these components in the context of your application is fine, but it can become cumbersome. It can lead to inconsistencies in design and a drop in productivity as you have to launch your application every time you want to check your changes while trying to match the design across multiple areas within your application. &lt;br&gt;
Storybook aims to streamline the process of designing and developing components by allowing you to build components in isolation, increasing productivity as you no longer have to launch your application, as well as increasing consistency as it becomes your source of truth for component documentation. You can easily see all the components (with stories) in your workspace from the Storybook application. Storybook also supports addons that can help you test things like the Accessibility of your components (with the &lt;a href="https://storybook.js.org/addons/@storybook/addon-a11y"&gt;A11y Addon&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt; - Formatting&lt;/strong&gt;&lt;br&gt;
When working with multiple developers, consistent code style and formatting is key to rapid development. Time spent figuring out how to read code is time wasted actually reading code. Prettier is an automated, opinionated, formatting tool that removes human emotion from code styling while producing a consistent code style for all developers in the team. Prettier reduces the need for a style guide for your development, removes the question of code style from code reviews, and lets developers focus on writing code. All of this results in improving the team's overall productivity and the readability of the codebase!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-should-we-care-about-it"&gt;
  &lt;/a&gt;
  Why should we care about it?
&lt;/h2&gt;

&lt;p&gt;There are many reasons why we should strive to use Modern Tools with Angular. Many of these reasons were mentioned above in association with each of the tools that we would define as necessary for Modern Angular Development. When we combine them all into one development workspace, we get:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Better productivity&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Storybook can help build components without running your application.&lt;/li&gt;
&lt;li&gt;Developers spend less time formatting and more time writing code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Faster feedback (errors, tests, builds)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Faster testing tools leads to faster feedback on errors, tests and potential bugs that will have been introduced to the application.&lt;/li&gt;
&lt;li&gt;ESLint provides fast feedback on any code that breaks the rules and can even automatically fix that code for you.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Better debugging&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Using Modern Tools, it becomes much easier to find and squash bugs and defects. &lt;/li&gt;
&lt;li&gt;They’ve all been built to work with the JavaScript ecosystem, which already contains excellent debugging tools, such as the Debug features in &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt; or the Chrome DevTools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Better guardrails for teams&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This may seem contradictory. Why would you want to add restrictions to your team? There’s a &lt;a href="https://www.youtube.com/watch?v=X-Dn5ZBUZH0"&gt;Power in putting Constraints&lt;/a&gt; on your team.&lt;/li&gt;
&lt;li&gt;It takes the guesswork out of what is allowed and what is not and helps them focus on writing code consistently. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Consistency across teams&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Maintaining consistency across all development teams working on the application is vital.&lt;/li&gt;
&lt;li&gt;It allows the company to easily onboard and offboard new developers and help to enable any developer to jump into any part of the codebase and understand the structure and patterns used to create the application, improving knowledge reuse.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Comprehensive Testing&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;By writing both unit and e2e tests for our application, we create a comprehensive testing environment.&lt;/li&gt;
&lt;li&gt;This allows us to ensure that the happy paths through our application are guaranteed to work as we add more features and functionality to our applications.&lt;/li&gt;
&lt;li&gt;It also helps us improve our user experience by ensuring exception paths also provide our users with feedback to state that something has gone wrong.&lt;/li&gt;
&lt;li&gt;It helps provide confidence to developers making changes, ensuring that they haven’t introduced any regressions to the codebase.&lt;/li&gt;
&lt;li&gt;It helps bring junior developers up to speed as they can get a comprehensive overview of how the application is expected to function, and they can make changes knowing that they will be informed (&lt;em&gt;quickly&lt;/em&gt;) if they break something.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#how-can-nx-help"&gt;
  &lt;/a&gt;
  How can Nx help?
&lt;/h2&gt;

&lt;p&gt;Nx provides a complete and comprehensive development workspace for building applications. It supports Angular (&lt;em&gt;and other libraries and frameworks!&lt;/em&gt;). It seamlessly integrates all the Modern Tooling mentioned above, instantly improving your developer experience, your team’s productivity, and the scalability and reliability of your applications. &lt;br&gt;
You can get up and running with an Angular application containing the tools above (while still getting all the benefits of Angular) by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-nx-workspace --preset=angular
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you prefer Yarn, you can use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn create nx-workspace --preset=angular
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will create your workspace and integrate the tools above automatically. The only tool that will not be integrated automatically is Storybook. However, Nx makes it easy to integrate that too! After creating your workspace, all you need to do is run the following command at the root of your workspace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run ng g @nrwl/angular:storybook-configuration 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, using Yarn&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn ng g @nrwl/angular:storybook-configuration
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To read more about Nx and how it can help your development see our docs on &lt;a href="https://nx.dev/l/a/angular/overview"&gt;Angular&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>javascript</category>
      <category>nx</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Is your website mobile friendly?</title>
      <author>Andrew (he/him)</author>
      <pubDate>Tue, 23 Nov 2021 17:31:43 +0000</pubDate>
      <link>https://dev.to/awwsmm/is-your-website-mobile-friendly-7ji</link>
      <guid>https://dev.to/awwsmm/is-your-website-mobile-friendly-7ji</guid>
      <description>&lt;p&gt;...find out &lt;a href="https://search.google.com/test/mobile-friendly"&gt;here&lt;/a&gt;, using this free tool from Google.&lt;/p&gt;

&lt;p&gt;If your page isn't live on the web, you can also copy-paste the source code in.&lt;/p&gt;

&lt;p&gt;Pretty handy!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>mobile</category>
    </item>
    <item>
      <title>How no-code solutions can actually help coders</title>
      <author>Haris#</author>
      <pubDate>Tue, 23 Nov 2021 17:11:35 +0000</pubDate>
      <link>https://dev.to/harishash/how-no-code-solutions-can-actually-help-coders-4bfm</link>
      <guid>https://dev.to/harishash/how-no-code-solutions-can-actually-help-coders-4bfm</guid>
      <description>&lt;p&gt;Over the past few years there’s been a growing debate about the no-code or code-less tools and platforms. Many people have mixed thoughts and feelings when it comes to this and the majority likes to believe that these platforms are mainly for non-technical builders. No doubt these platforms serve non-technical builders but low-code and no-code solutions are also tools for developers themselves, making their own jobs trouble-free and facilitating them to compose business related prefabricated application components rapidly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GwFHZ0xJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7enfgjaxf97kshqdvro0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GwFHZ0xJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7enfgjaxf97kshqdvro0.jpg" alt="no code is for  coders too" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No-code or code-less tools help them build fast but it in any way does not mean that functionality or performance needs to be sacrificed for development speed. Yes, no-code and low-code make it far easier for non-technical developers to bring colors to their ideas, but “building faster” means much more than that. These tools can help developers focus on the elements of true differentiators like UI design and logics etc. once a simple task is out of the equation. This way you can also spend more time experimenting with new and innovative ideas and actually think about the end result rather than being stuck in the process. It's not only about what you’re providing to the users/customers but also about how you’re giving back to your own community, and you can always contribute back to your community for making their work easy and less time consuming for them. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--itH6_oP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik6grga2f9doqne90d7x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--itH6_oP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik6grga2f9doqne90d7x.png" alt="coders looking at their laptop to find solutions" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;There are so many advantages of code-less or no-code tools. Using these tools can give you the motivation to work on projects that you’ve been ignoring for too long as they’re very time consuming. It also helps non-technical individuals to build something of their own without thinking about how they’re going to do it. Most of all it helps the dev community and teams by taking the burden off their shoulders and focusing on what needs to be focused on. So, ultimately in the end everyone wins, dev, designers and entrepreneurs etc. No-code or code-less tools opens doors for everyone. Here are a few of my personal no-code tools that I’ve been using and any designer, developer or entrepreneur can use to fast track their workflow.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#personal-favourites"&gt;
  &lt;/a&gt;
  Personal Favourites
&lt;/h1&gt;

&lt;p&gt;Following are some of my favourite no-code or code-less solutions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tailwindui.com/"&gt;Tailwind UI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.vsblox.com/"&gt;blox&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://uideck.com/"&gt;UIdeck&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://shuffle.dev/"&gt;Shuffle&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.builder.io/"&gt;Builder.io&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hope y'all like these too.&lt;/p&gt;

&lt;p&gt;Happy Developing!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>discuss</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Introduction to Entity-Relationship model</title>
      <author>Abhinav Pandey</author>
      <pubDate>Tue, 23 Nov 2021 16:42:06 +0000</pubDate>
      <link>https://dev.to/abh1navv/introduction-to-entity-relationship-model-2kg3</link>
      <guid>https://dev.to/abh1navv/introduction-to-entity-relationship-model-2kg3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#relational-databases"&gt;
  &lt;/a&gt;
  Relational Databases
&lt;/h2&gt;

&lt;p&gt;Relational databases are the most common database type. &lt;br&gt;
They are also very flexible and can be used for many different applications. Like for example, they can be used for storing data about your users. &lt;/p&gt;

&lt;p&gt;They work with an entity-relationship model and are defined by tables and columns.&lt;/p&gt;

&lt;p&gt;Let's take a look at the main components of a relational database. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#components-of-a-relational-database"&gt;
  &lt;/a&gt;
  Components of a Relational Database
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Schema&lt;/strong&gt; - The schema is the structure of the database. It defines the tables and columns. An example of the User schema is the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;User&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="n"&gt;AUTOINCREMENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt; - the actual data stored in the database. An example of the User data is the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;id: 1&lt;/li&gt;
&lt;li&gt;name: John Doe&lt;/li&gt;
&lt;li&gt;email: &lt;a href="mailto:johndoe@gmail.com"&gt;johndoe@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;password: ajn1489valpa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Structured Query Language&lt;/strong&gt; -  the language used to query the database. It is used to select, insert, update and delete data. A few examples of SQL queries are the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'John Doe'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'johndoe@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ajn1489valpa'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'John Doe'&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#entityrelationship-model"&gt;
  &lt;/a&gt;
  Entity-Relationship Model
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Entity&lt;/strong&gt;: Each type of table in a database is called an entity. An entity can have different relationships with other entities. &lt;br&gt;
&lt;strong&gt;Relationship&lt;/strong&gt;: A relationship is a way of connecting two entities. A relationship can be one-to-one, one-to-many, many-to-one or many-to-many. &lt;/p&gt;

&lt;p&gt;Types of relationships:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;One-to-One&lt;/strong&gt;: A one-to-one relationship is a relationship where each entity has a unique relationship with another entity. For example, a user has a unique relationship with their profile.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;One-to-Many&lt;/strong&gt;: A one-to-many relationship is a relationship where each entity has a relationship with multiple other entities. For example, a user can have many posts.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Many-to-One&lt;/strong&gt;: A many-to-one relationship is a relationship where many entities have a relationship with one other entity. It is the opposite of a one-to-many relationship. For example, many posts can be created by a user.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Many-to-Many&lt;/strong&gt;: A many-to-many relationship is a relationship where many entities have a relationship with many other entities. For example, many users can like many posts. Many-to-many relationships are usually stored in a join table which &lt;em&gt;can&lt;/em&gt; be an entity in its own right. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;How are relationships defined?&lt;/strong&gt;&lt;br&gt;
A relationship is defined by the foreign key. A foreign key is a column in a table that references primary key of another table. For example, a profile has a foreign key to a user.&lt;/p&gt;

&lt;p&gt;Let's create a profiles table to demonstrate foreign keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;profiles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="n"&gt;AUTOINCREMENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;bio&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;FOREIGN&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;REFERENCES&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The foreign key is defined in the &lt;code&gt;profiles&lt;/code&gt; table. &lt;br&gt;
The &lt;code&gt;user_id&lt;/code&gt; column references the &lt;code&gt;id&lt;/code&gt; column in the &lt;code&gt;users&lt;/code&gt; table. &lt;br&gt;
This means that each profile belongs to a &lt;code&gt;user&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Syntactically, we could also define the relationship in the &lt;code&gt;users&lt;/code&gt; table. &lt;br&gt;
However, semantically, it is better to define the relationship in the &lt;code&gt;profiles&lt;/code&gt; table.&lt;br&gt;
When we define a foreign key constraint, adding an item to the table will require the referenced primary key to exist. This means that the user must be created before the profile.&lt;/p&gt;

&lt;p&gt;Let's create more tables and define one-to-many, many-to-one and many-to-many relationships.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="n"&gt;AUTOINCREMENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="nb"&gt;DATETIME&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;updated_at&lt;/span&gt; &lt;span class="nb"&gt;DATETIME&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIMESTAMP&lt;/span&gt;
    &lt;span class="k"&gt;FOREIGN&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;REFERENCES&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;comments&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="n"&gt;AUTOINCREMENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;post_id&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="nb"&gt;DATETIME&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;updated_at&lt;/span&gt; &lt;span class="nb"&gt;DATETIME&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIMESTAMP&lt;/span&gt;
    &lt;span class="k"&gt;FOREIGN&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;REFERENCES&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;FOREIGN&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;REFERENCES&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;posts table&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;posts&lt;/code&gt; table, we have a &lt;code&gt;user_id&lt;/code&gt; column that references the &lt;code&gt;id&lt;/code&gt; column in the &lt;code&gt;users&lt;/code&gt; table. &lt;/p&gt;

&lt;p&gt;This means that each post belongs to a &lt;code&gt;user&lt;/code&gt;. But a user can have many posts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;comments table&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the comments table, the &lt;code&gt;post_id&lt;/code&gt; column references the &lt;code&gt;id&lt;/code&gt; column in the &lt;code&gt;posts&lt;/code&gt; table. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;user_id&lt;/code&gt; column references the id column in the &lt;code&gt;users&lt;/code&gt; table. &lt;/p&gt;

&lt;p&gt;Comments have a many-to-one relationship with posts as well as users. &lt;br&gt;
Many comments can be associated with a single post. Many comments can be associated with a single user.&lt;/p&gt;

&lt;p&gt;The comments table also demonstrates the many-to-many relationship between posts and users. &lt;/p&gt;




&lt;p&gt;Thanks for reading! Hope this gives you some ideas on how to define entity-relationship models in SQL. Stay tuned for more! If you want to connect with me, you can find me on Twitter &lt;a href="https://twitter.com/abh1navv"&gt;@abh1navv&lt;/a&gt; &lt;/p&gt;

</description>
      <category>sql</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>database</category>
    </item>
  </channel>
</rss>
