<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>2 tricks to stay motivated on your side project</title>
      <author>rinas</author>
      <pubDate>Sun, 06 Jun 2021 08:17:29 +0000</pubDate>
      <link>https://dev.to/onerinas/2-tricks-to-stay-motivated-on-your-side-project-4a4b</link>
      <guid>https://dev.to/onerinas/2-tricks-to-stay-motivated-on-your-side-project-4a4b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-build-for-yourself"&gt;
  &lt;/a&gt;
  1. Build for yourself
&lt;/h2&gt;

&lt;p&gt;This trick helps a lot. If you are building a tool for yourself, there is no need for the "motivation" part at all. You just want to make your life easier with it.&lt;/p&gt;

&lt;p&gt;I would say keep a single project/codebase for all the tools you are building. So that there is no yet another "setting up the project" involved. Straight to building stuff.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-charge-your-customers"&gt;
  &lt;/a&gt;
  2. Charge your customers
&lt;/h2&gt;

&lt;p&gt;In case you don't the tool you built anymore, there are other people still using it. If it's a free tool, having paid customers would give you a boost to work on it more.&lt;/p&gt;

&lt;p&gt;Well, nothing is free. You still have to pay the server bills right? (also I'm hoping you are not selling your customer data and making some money secretly ü§∑‚Äç‚ôÄÔ∏è). Let me know if you have any tips!&lt;/p&gt;




&lt;p&gt;I think I tackled the #1 part in &lt;a href="https://highscore.domains"&gt;HIGHSCORE.domains&lt;/a&gt; by start building tools to manage my domain names and coming soon pages for my side projects. &lt;/p&gt;

&lt;p&gt;I haven't figure out the #2 yet. I'm hoping to build a paid-only product using &lt;a href="https://highscore.today"&gt;HIGHSCORE.today&lt;/a&gt;. Let's see how that goes ü§û&lt;/p&gt;




&lt;p&gt;In case you haven't read, check out my &lt;a href="https://dev.to/onerinas/top-1-way-to-not-mess-up-your-project-29mk"&gt;Top 1 way to not mess up your project&lt;/a&gt;. TL;DR - Don't be a perfectionist üò¨üòÜ&lt;/p&gt;

</description>
      <category>sideprojects</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>6 Strategies That Helped Me Grow My Twitter Account to 22K Followers</title>
      <author>Sunil Kumar</author>
      <pubDate>Sun, 06 Jun 2021 07:58:19 +0000</pubDate>
      <link>https://dev.to/sunilc_/6-strategies-that-helped-me-grow-my-twitter-account-to-22k-followers-4026</link>
      <guid>https://dev.to/sunilc_/6-strategies-that-helped-me-grow-my-twitter-account-to-22k-followers-4026</guid>
      <description>&lt;p&gt;Sometime in June 2020 I realised the importance of having an online presence when I saw how much money some creators were making by selling info products on Twitter. It was really shocking to me how one can leverage social media to make life changing income. You can in fact replace your salary (and so much more) by using Twitter as a marketing channel.&lt;/p&gt;

&lt;p&gt;Specifically, I came across tweets by &lt;a href="https://twitter.com/dvassallo"&gt;Daniel Vassallo&lt;/a&gt; where he shared how much he was earning through two of his info products on Gumroad. Each of his courses had earned him around &lt;strong&gt;100K+ USD&lt;/strong&gt; in the last 1.5 years. This opened my eyes and made me realise the endless possibilities having a good online presence provides.&lt;/p&gt;

&lt;p&gt;Daniel became my inspiration and I started building my online presence on Twitter right away.&lt;/p&gt;

&lt;p&gt;The first thing I did was to buy Daniel's course on how to grow a Twitter account.  I did buy courses from other creators as well. I really wanted to learn on this topic from different people.&lt;/p&gt;

&lt;p&gt;These courses were really great and helped me learn different strategies to grow on Twitter. Although these strategies provide you with the base templates you can work with, you need to figure out the type of content that works for you, yourself.&lt;/p&gt;

&lt;p&gt;So I started building my online presence right away. Since then I've grown my Twitter &lt;a href="https://twitter.com/sunilc_"&gt;account&lt;/a&gt; from around &lt;strong&gt;150 followers&lt;/strong&gt; to &lt;strong&gt;22K followers&lt;/strong&gt;. This is  good growth considering I did it along with a day job. At a startup. Some of my friends who started around the same time have grown their account to 80K followers in just one year.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-get-followers"&gt;
  &lt;/a&gt;
  How to Get Followers
&lt;/h3&gt;

&lt;p&gt;Just hard work will not get you followers. You need to follow certain strategies to achieve it. Basically the process consists of these 4 steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Post content / comment on others' posts&lt;/li&gt;
&lt;li&gt;Get users to visit your profile&lt;/li&gt;
&lt;li&gt;Convert visitors to followers&lt;/li&gt;
&lt;li&gt;Go back to step 1&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#strategies-to-get-followers"&gt;
  &lt;/a&gt;
  Strategies To Get Followers
&lt;/h3&gt;

&lt;p&gt;Over the last 1 year I've experimented a lot and here are the strategies that worked the best.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-comment-on-others%C2%A0posts"&gt;
  &lt;/a&gt;
  1. Comment on Others'¬†Posts
&lt;/h3&gt;

&lt;p&gt;When you're starting out it's difficult to get visibility on your posts because obviously you don't have many followers at this point. So to start with, comment on other big accounts' posts.&lt;/p&gt;

&lt;p&gt;You can comment to provide:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your own perspective on the idea&lt;/li&gt;
&lt;li&gt;To agree or disagree with the idea&lt;/li&gt;
&lt;li&gt;To add more details which you think are missing from the post
etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If people like your comment, they will visit your profile. If they like what they see on your timeline and what they can expect, they will follow you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-write-more-threads"&gt;
  &lt;/a&gt;
  2. Write More Threads
&lt;/h3&gt;

&lt;p&gt;One thing I've noticed is that people like to read threads and more importantly bookmarking them!&lt;/p&gt;

&lt;p&gt;I have had a lot of success with threads on Twitter. But again it depends on the niche and the way you present your content. For me personally even though many single-post tweets have gone viral and received thousands of likes, it's the threads that bring me followers more often.&lt;/p&gt;

&lt;p&gt;For example, I had written this thread last year when I had only a couple of hundred followers. It mainly provides a step by step guide to get started with freelancing on &lt;strong&gt;Codementor&lt;/strong&gt; platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/sunilc_/status/1291308417185767427"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7sG5fhWX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622827487060/sUZE0j-LD.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This thread was very successful and brought me hope that anyone can go viral on Twitter. It gave me the confidence that I too can grow my account to hundreds of thousands of followers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-network-make-long-term-friends"&gt;
  &lt;/a&gt;
  3. Network: Make Long term Friends
&lt;/h3&gt;

&lt;p&gt;Networking on Twitter (or anywhere for that matter) is equally important as posting valuable content.&lt;/p&gt;

&lt;p&gt;It's the connections you make on Twitter that help you grow and be successful in the long term if your plan is to build a business and make money on the internet. If you're trying to do it all alone, you can only get so far. But having genuine friends will take you a long way.&lt;/p&gt;

&lt;p&gt;I have made a lot of good friends on Twitter in the last 1 year. Some of them are really helpful whenever I publish a product, post an article or post a tweet. They support me by retweeting, by buying my products and helping me spread the word about them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-make-friends-on%C2%A0twitter"&gt;
  &lt;/a&gt;
  How To Make Friends on¬†Twitter?
&lt;/h4&gt;

&lt;p&gt;When you come across someone who is posting similar content as yours or someone who is posting anything interesting, DM her / him, get on a video call, get to know that person. Do this regularly and you will make a lot of good friends on Twitter.&lt;/p&gt;

&lt;p&gt;When you start you will definitely find like minded people who share similar vision.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-consistency-is-the-key"&gt;
  &lt;/a&gt;
  4. Consistency is the key
&lt;/h3&gt;

&lt;p&gt;Growing an online presence takes persistence and hard work. You need to show up every single day and post valuable content.&lt;/p&gt;

&lt;p&gt;Posting consistently is important because of 2 reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you want someone to follow you, they need to know that you post regularly and you're worth a follow.&lt;/li&gt;
&lt;li&gt;Twitter algorithm supports people who post regularly. It's just the way it is designed. I've experienced this first hand when my posts were not getting enough visibility when I didn't post for a couple of days straight in the past. Basically twitter wants to encourage people to keep coming back to their platform. I don't make this mistake anymore.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Being consistent is beneficial to you, the content creator, in many many ways. Since you want to post regularly you need to learn regularly. That's the only way you get so much of content to post and this helps you improve your knowledge and become a better person in general.&lt;/p&gt;

&lt;p&gt;Having done this from the past 1 year, I personally have learnt a lot about good engineering practices, freelancing, talking to clients, different ways of making money online and my writing skills have improved a lot.&lt;/p&gt;

&lt;p&gt;I'm very glad that I started building my online presence. I wish I had started earlier.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-build-credibility"&gt;
  &lt;/a&gt;
  5. Build Credibility
&lt;/h3&gt;

&lt;p&gt;Showing up every single day is only half the battle. If you want to build an audience who trusts you, who wants to help you in your journey, then you need to build credibility. And you can achieve that when you post valuable content and do it often without spamming. Be genuine. Be honest. Help others and grow together.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"100 followers who trust you and want to support your work &amp;gt;&amp;gt;&amp;gt;&amp;gt; thousands of followers who follow you simply because they saw one good post from you."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These 100 followers are the ones who will help you achieve success online.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-keep-a-clean%C2%A0timeline"&gt;
  &lt;/a&gt;
  6. Keep a Clean¬†Timeline
&lt;/h3&gt;

&lt;p&gt;We have discussed different strategies to get users to visit your profile. But if you don't have a clean profile or timeline the conversion rate will suffer. So it's important to have a clear profile without many retweets, quote retweets of others' posts. They follow you when they see a lot of original content and ideas from YOU. &lt;/p&gt;

&lt;p&gt;Retweeting is fine when you have a good audience. But don't do it when you are just getting started.&lt;/p&gt;

&lt;p&gt;Keep the profile visually attractive with images, emojis etc in your posts. But doing this more will make your profile ugly. So do it carefully.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#importance-of-having-an-online-presence"&gt;
  &lt;/a&gt;
  Importance of Having an Online Presence
&lt;/h3&gt;

&lt;p&gt;I cannot emphasise enough on the importance of having an online presence. It can definitely change your life and give you the freedom and wealth you always wanted. It provides immense opportunities you had never imagined.&lt;/p&gt;

&lt;p&gt;I personally have benefited a lot from having an online presence. I have made good friends, sold e-books, generated more traffic to my blog, paid advertising, interview opportunities and so much more!&lt;/p&gt;

&lt;p&gt;You can read this &lt;a href="https://javascript.plainenglish.io/how-i-make-an-average-of-250-every-month-on-twitter-eac90d567542"&gt;&lt;strong&gt;article&lt;/strong&gt;&lt;/a&gt; where I explain how I make an average of &lt;strong&gt;250$&lt;/strong&gt; every month on Twitter.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#your-goal-can-be-any-of-the-following"&gt;
  &lt;/a&gt;
  Your goal can be any of the following:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;build and sell a SaaS product&lt;/li&gt;
&lt;li&gt;freelance&lt;/li&gt;
&lt;li&gt;sell info products&lt;/li&gt;
&lt;li&gt;get more traffic to your blog&lt;/li&gt;
&lt;li&gt;affiliate marketing&lt;/li&gt;
&lt;li&gt;start a YouTube channel&lt;/li&gt;
&lt;li&gt;or just want to be famous on the internet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even without having an online presence you can still achieve all of the above. But having an online presence will definitely help you achieve these goals.&lt;/p&gt;

&lt;p&gt;Check this &lt;a href="https://javascript.plainenglish.io/how-to-make-money-by-growing-an-online-presence-3c99cb9eabf3"&gt;article&lt;/a&gt; if you want to learn how to make money by growing an online presence.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;Here are the courses that have helped me in growing my online presence on Twitter:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/a/238777459/PBkrO"&gt;Everyone Can Build a Twitter Audience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/a/426341491"&gt;Improve Your Online Presence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/a/667087987/XFFpt"&gt;The Art of Twitter: Build a Business That Makes You $100/Day&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Provide value in comments:&lt;/strong&gt; Commenting on posts by big accounts in the only way to get visibility when you are still small.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There's magic in threads:&lt;/strong&gt; People like reading long threads on Twitter. Keep writing threads if you want to grow faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be Consistent:&lt;/strong&gt; People want to follow them who post valuable content regularly. So be consistent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't spam:&lt;/strong&gt; Once you start building your audience on Twitter you will have opportunities to do paid advertising, affiliate marketing etc. These gigs will make you money but may result in loosing followers if you overdo it. Your audience follows you for your valuable content. Not for your advertising.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network:&lt;/strong&gt; Talk to people. Become friends. Help each other and grow together.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clean profile:&lt;/strong&gt; Keep a clean profile. Use emojis, image etc to make it visually appealing.&lt;/p&gt;




&lt;p&gt;The article was originally published on my blog &lt;a href="https://sunilkumarc.in/6-strategies-that-helped-me-grow-my-twitter-account-to-22k-followers"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>career</category>
      <category>marketing</category>
      <category>startup</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Soft UI Dashboard - Bootstrap 5 Design on Steroids</title>
      <author>Sm0ke</author>
      <pubDate>Sun, 06 Jun 2021 07:55:28 +0000</pubDate>
      <link>https://dev.to/sm0ke/soft-ui-dashboard-bootstrap-5-design-on-steroids-5cd2</link>
      <guid>https://dev.to/sm0ke/soft-ui-dashboard-bootstrap-5-design-on-steroids-5cd2</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;Just discovered a few hours ago a really nice Bootstrap 5 Dashboard: &lt;strong&gt;&lt;a href="https://bit.ly/3vVUVwl"&gt;Soft UI Dashboard PRO&lt;/a&gt;&lt;/strong&gt;. This commercial product comes with an open-source version that can be used without limitations for hobby and commercial products.  For newcomers, Soft UI is the latest open-source design system released by &lt;em&gt;Creative-Tim&lt;/em&gt; made of hundred of elements, designed blocks, and fully coded pages. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://www.admin-dashboards.com/"&gt;Admin Dashboards&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://bit.ly/3vVUVwl"&gt;Soft UI Dashboard PRO&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bit.ly/2RtSXVa"&gt;Soft UI Dashboard PRO&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/2Q1uIfK"&gt;Soft UI Dashboard&lt;/a&gt; - the open-source version&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclosure&lt;/em&gt; - &lt;strong&gt;This post contains affiliate links&lt;/strong&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you use these links to buy something (no additional cost to you) I may earn a commission, product, or service. &lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7cxBM8Ap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4umplkqnh32iej2hkcu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7cxBM8Ap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4umplkqnh32iej2hkcu.png" alt="Soft UI Dashboard - Charts Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Official product description&lt;/strong&gt; - Soft UI Dashboard PRO is built with over 300 frontend individual elements, like inputs, navbars, navtabs, cards, or alerts, giving you the freedom of choosing and combining. The UI can be extended with ease by editing the SASS files. This Premium Bootstrap 5 Dashboard is coming with prebuilt design blocks, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example Pages&lt;/strong&gt; - If you want to get inspiration or just show something directly to your clients, you can jump-start your development with our pre-built example pages. You will be able to quickly set up the basic structure for your web project.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tZQvhPQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oxu2e48yok6ywhwjdh4g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tZQvhPQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oxu2e48yok6ywhwjdh4g.png" alt="Soft UI Dashboard - Automotive Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Soft UI Dashboard PRO - Calendar Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PDGChnPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5lffxpjyiix7629ii43.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDGChnPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5lffxpjyiix7629ii43.png" alt="Soft UI Dashboard - Calendar Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;As mentioned in the top paragraph, this premium dashboard comes with an open-source version released under the MIT License on Github. The product can be used and compiled locally without a registration lock. In order to have a successful build we need a &lt;a href="https://docs.appseed.us/content/tutorials/minimal-programming-kit"&gt;minimal programming kit&lt;/a&gt; installed: a decent NodeJS version (&amp;gt;= 10.x), GIT command-line versioning tool and Gulp (globally accessible). &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone/Download sources from the public repository&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/creativetimofficial/soft-ui-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;soft-ui-dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install modules (this operation might take a while)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Start the app in browser&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gulp open-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UCDIYXrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v16mzu7cvln8hm1f1reg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UCDIYXrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v16mzu7cvln8hm1f1reg.png" alt="Soft UI Dashboard - Free Version"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;More &lt;a href="https://bit.ly/3wd5D25"&gt;Free Templates&lt;/a&gt; provided by Creative-Tim&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a curated list | Dev.to&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>bootstrap</category>
      <category>dashboards</category>
    </item>
    <item>
      <title>React Hooks design pattern</title>
      <author>Jonathan Rodriguez</author>
      <pubDate>Sun, 06 Jun 2021 07:29:43 +0000</pubDate>
      <link>https://dev.to/jonathanrodriguezs/react-design-patterns-33id</link>
      <guid>https://dev.to/jonathanrodriguezs/react-design-patterns-33id</guid>
      <description>&lt;p&gt;I want to share with you one design patterns to improve the readability and maintainability of your React components.&lt;/p&gt;

&lt;p&gt;Why should we care about maintainability?&lt;br&gt;
If our components are interdependent, not extensible, and not uniquely responsible, as our application grows in lines of code and complexity, our time to add new features or resolve bugs will also increase.&lt;/p&gt;

&lt;p&gt;Let's say we have a form in your application, and we need to save its content into local storage as it changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;LocalStorageForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValues&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;setValues&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt; &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We might want to change the code into something like this, adding local storage synchronization logic inside the component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MessyLocalStorageForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValues&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;storedValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;storedValues&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updatedValues&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;setValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updatedValues&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt; &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It works, but is messy, what if we have another form where we want to also synchronize the values with local storage? Could we abstract the complexity of state management to reuse it multiple times? Yes, creating a custom hook only responsible for the local storage synchronization.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useLocalStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now, all we need to do is go back to the first version of our code and just change the &lt;code&gt;useState&lt;/code&gt; to our new custom hook &lt;code&gt;useLocalStorage&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;LocalStorageForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValues&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useLocalStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;setValues&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt; &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@xavi_cabrera?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Xavi Cabrera&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/lego?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Learn React-router like a PRO üòé</title>
      <author>gourav majee</author>
      <pubDate>Sun, 06 Jun 2021 07:22:18 +0000</pubDate>
      <link>https://dev.to/varuogm/learn-react-router-like-a-pro-1a9h</link>
      <guid>https://dev.to/varuogm/learn-react-router-like-a-pro-1a9h</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hey,üëã I'm Gourav&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dMTucauj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/59816qp9rfxe97jg0taq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dMTucauj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/59816qp9rfxe97jg0taq.gif" alt="react-router"&gt;&lt;/a&gt;&lt;br&gt;
By the title, you might have guessed it right what things we will be discussing. what is react-router, SPA!.!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#well-the-first-question-arises-what-is-single-page-application-"&gt;
  &lt;/a&gt;
  Well, the first question arises what is &lt;em&gt;Single Page Application&lt;/em&gt; üí°?
&lt;/h2&gt;

&lt;p&gt;When a user runs an application and click on links, the content of the page changes, but the page does not reload, i.e., the user stays on the same page for the entire time; such application is called a Single Page Application or SPA's.&lt;/p&gt;

&lt;p&gt;*A simple illustration is given below ‚¨á  *&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e4AgdDMp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622891631593/TxnmggJz8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e4AgdDMp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622891631593/TxnmggJz8.png" alt="HOME.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#so-what-does-that-mean-and-why-its-beneficial"&gt;
  &lt;/a&gt;
  So, what does that mean, and why it's beneficial?ü§î
&lt;/h2&gt;



&lt;p&gt;The main benefit is &lt;code&gt;Performance&lt;/code&gt; .&lt;br&gt;
It works inside the browser and does &lt;strong&gt;&lt;em&gt;not require page reloading during use&lt;/em&gt;&lt;/strong&gt;. &lt;br&gt;
You use many SPA applications like Facebook, Twitter even some parts of the application in which you are reading this Dev/Hashnode.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#reactrouter-"&gt;
  &lt;/a&gt;
  React-Router -
&lt;/h3&gt;

&lt;p&gt;React-Router matches the URL and loads up the component for that particular page.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
to learn more about router click &lt;a href="https://www.freecodecamp.org/news/react-router-tutorial/"&gt;here&lt;/a&gt; &lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#lets-start-building"&gt;
  &lt;/a&gt;
  Lets start building
&lt;/h1&gt;

&lt;p&gt;so we will be making a simple SPA like this .the codes are self-explanatory and simple.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EUreF5ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622869757972/JDiFmJ6Pp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EUreF5ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622869757972/JDiFmJ6Pp.gif" alt="ezgif.com-gif-maker (1).gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setup-the-project"&gt;
  &lt;/a&gt;
  Setup the project
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;( step- 1 )&lt;/strong&gt;&lt;br&gt;
Open the terminal in your code editor and install react &amp;amp; also install router dom package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app gourav-spa
npm install react-router-dom

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;navigate to our directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd gourav-spa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;( step- 2)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next, we import the essential components from react-router-dom. We do this in the App.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { BrowserRouter as Router,NavLink, Route } from "react-router-dom";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;( step- 3 )&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So now let's get into our App.js and start building our skeleton.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The way React Router works is by defining the region, in which there will have two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;our navigation links&lt;/li&gt;
&lt;li&gt;container to load our content into
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { BrowserRouter as Router,NavLink, Route } from "react-router-dom";
import './App.css';

function App() {
  return (
    &amp;lt;Router&amp;gt;
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;Hey there everyone, I'm gourav üëã &amp;lt;/h1&amp;gt;
        &amp;lt;ul className="header"&amp;gt;
          &amp;lt;li&amp;gt;&amp;lt;NavLink to="/"&amp;gt;Home&amp;lt;/NavLink&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;&amp;lt;NavLink to="/Fav"&amp;gt;Fav&amp;lt;/NavLink&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;&amp;lt;NavLink to="/About"&amp;gt;About&amp;lt;/NavLink&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/Router&amp;gt;
  );
}
export default App;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;( step- 4)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before making routes let's make our home, fav, about pages first, and then we will connect them afterward.&lt;/p&gt;

&lt;p&gt;I'm assuming we know the basics of react and familiar with ESconcepts. let's make our navigation pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-homejs"&gt;
  &lt;/a&gt;
  Creating Home.js
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

const Home = () =&amp;gt; {
  return (
      &amp;lt;div&amp;gt;
        &amp;lt;h2&amp;gt;This is home page&amp;lt;/h2&amp;gt;
        &amp;lt;h3&amp;gt;
          there is nothing much to say. 
          this is a simple home page
        &amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;i hope this helps you out in learning this topic.&amp;lt;/p&amp;gt;
      &amp;lt;/div&amp;gt;
  );
};
export default Home;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-favjs"&gt;
  &lt;/a&gt;
  Creating Fav.js
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";import React from "react";

const Fav = () =&amp;gt; {
  return (
      &amp;lt;div&amp;gt;
        &amp;lt;h2&amp;gt;My fav things&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;there are so many things .here are some of them&amp;lt;/p&amp;gt;
        &amp;lt;ol&amp;gt;
          &amp;lt;li&amp;gt;eating fruits ü•≠üçáüçâ&amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;memes üî•&amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;tweeting ‚ú®&amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;multiplayer games üéÆ&amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;etc..&amp;lt;/li&amp;gt;
        &amp;lt;/ol&amp;gt;
      &amp;lt;/div&amp;gt;
  );
};
export default Fav;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-aboutjs"&gt;
  &lt;/a&gt;
  Creating About.js
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
let gouravpic ="https://pbs.twimg.com/profile_images/1393097871960854530/JEo6JhS1_400x400.jpg",
twitter= "https://twitter.com/Varougm",
github =" https://github.com/varuogm/";

const About = () =&amp;gt; {
  return (
      &amp;lt;div className="both"&amp;gt;
         &amp;lt;h2&amp;gt;About&amp;lt;/h2&amp;gt;&amp;lt;br/&amp;gt;
         &amp;lt;div&amp;gt;
            &amp;lt;img className="image" src={gouravpic} alt="img" /&amp;gt;
         &amp;lt;/div&amp;gt;
        &amp;lt;div className="data"&amp;gt;
            &amp;lt;h3&amp;gt;Name - Gourav Majee&amp;lt;/h3&amp;gt;
            &amp;lt;h3&amp;gt;Student , CS ungrad&amp;lt;/h3&amp;gt;
            &amp;lt;h3&amp;gt;Developer &amp;lt;/h3&amp;gt;
            &amp;lt;h3&amp;gt;twitter :&amp;lt;a href={twitter}&amp;gt;here üê¶&amp;lt;/a&amp;gt;  &amp;lt;/h3&amp;gt;
            &amp;lt;h3&amp;gt;Github :&amp;lt;a href={github}&amp;gt;here &amp;lt;/a&amp;gt; &amp;lt;/h3&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
  );
};
export default About;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-add-some-css-to-make-it-pretty"&gt;
  &lt;/a&gt;
  lets add some css to make it prettyüéÄ
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
  background-color: #4b93cd6b;
  padding: 20px;
  margin: 0;
}
h1, h2, p, ul, li {
  font-family: sans-serif;
}
ul.header li {
  display: inline;
  list-style-type: none;
  margin: 0;
}
ul.header {
  background-color: rgb(0, 0, 0);
  padding: 0;
}
ul.header li a {
  color: #FFF;
  font-weight: bold;
  text-decoration: none;
  padding: 20px;
  display: inline-block;
}
.content {
  background-color: #FFF;
  padding: 20px;
}
.content h2 {
  padding: 0;
  margin: 0;
}
.content li {
  margin-bottom: 10px;
}
.image{
  float:left; width:250px; height:250px; margin-right:55px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it would look like this.great job&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--onylHeDN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622868336721/2WFOk0iqE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--onylHeDN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622868336721/2WFOk0iqE.png" alt="12.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#but-gourav-its-still-not-navigating-us-to-our-desired-path"&gt;
  &lt;/a&gt;
  But gourav.. it's still not navigating us to our desired path
&lt;/h2&gt;

&lt;p&gt;yes because we haven't set up the Route paths yet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// add this in your app.js file under your nav links div
 &amp;lt;div className="content"&amp;gt;
        &amp;lt;Route exact path="/" component={Home} /&amp;gt;
        &amp;lt;Route exact path="/fav" component={Fav} /&amp;gt;
        &amp;lt;Route exact path="/about" component={About} /&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the Route component contains a path prop. The value you specify for the path determines when this route is going to be active. When any route is active,the component specified by the component prop gets rendered. &lt;/p&gt;

&lt;p&gt;we have used exact path so that it returns the route if the path is an EXACT match.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-our-spa-is-ready-lets-see-how-does-it-look-like"&gt;
  &lt;/a&gt;
  So our SPA is ready. let's see how does it look like.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EUreF5ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622869757972/JDiFmJ6Pp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EUreF5ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622869757972/JDiFmJ6Pp.gif" alt="ezgif.com-gif-maker (1).gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Its not the end. Add your personal things /items /colors and play with the code .&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;



&lt;h4&gt;
  &lt;a href="#that-brings-us-to-the-end-of-this-demonstration-of-how-we-can-build-single-page-application-with-reactrouter-congrats"&gt;
  &lt;/a&gt;
  üéâThat brings us to the end of this demonstration of how we can build single page application with react-router üéâCongrats.
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;I think you'll agree that it was a reasonably easy thing to set up. The next step might be to play around with the router, switches to have a grip on those.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you've enjoyed this article  &lt;code&gt;‚âß‚ó†‚Äø‚ó†‚â¶‚úå&lt;/code&gt; or You have any questions then contact me  &lt;a href="https://twitter.com/Varougm"&gt;@Varougm&lt;/a&gt;  where I'd be more than happy to answer you  üíñ  . I'm new to this.if you find any mistake please let me know ‚úå.&lt;/p&gt;

&lt;p&gt;Buy me my first coffee  &lt;a href="https://www.buymeacoffee.com/Gouravmajee"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-"&gt;
  &lt;/a&gt;
  Thank you for reading. ;)
&lt;/h3&gt;

&lt;p&gt;Thanks DEV for giving me place to post my article.üíñ&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>reactrouter</category>
    </item>
    <item>
      <title>How to Publish Your First NPM Package in Minutes!</title>
      <author>Saji Wang</author>
      <pubDate>Sun, 06 Jun 2021 07:21:10 +0000</pubDate>
      <link>https://dev.to/codesphere/how-to-publish-your-first-npm-package-in-minutes-16in</link>
      <guid>https://dev.to/codesphere/how-to-publish-your-first-npm-package-in-minutes-16in</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In this article, I‚Äôm going to show you how to publish your first NPM package in minutes. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now the package we‚Äôre going to create today is pretty useless, but the process we use is going to be applicable for almost every NPM package that you‚Äôre going to want to publish. &lt;/p&gt;

&lt;p&gt;In our example today we are going to create two functions, one that takes the nth root of a number, and one that tells us whether a number is even.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ScXVxxnPmOE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#make-an-npm-account-and-login"&gt;
  &lt;/a&gt;
  Make an NPM Account and Login
&lt;/h3&gt;

&lt;p&gt;To get started, create an NPM account if you haven‚Äôt already done so at npmjs.com and make sure to verify your email address. If you don‚Äôt verify it, you will not be able to publish any packages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/"&gt;https://www.npmjs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now in our command line, we can log in to our npm account:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm login&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You will then be prompted to enter your username, password, and email address.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-packagejson"&gt;
  &lt;/a&gt;
  Create A Package.json
&lt;/h3&gt;

&lt;p&gt;Now the next thing we‚Äôre going to do is create our &lt;code&gt;package.json&lt;/code&gt; with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With the following settings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Package Name&lt;/em&gt;: Make this something unique(Check the NPM website to see if your name is taken)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Version&lt;/em&gt;: 1.0.0&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Description&lt;/em&gt;: This will appear on the NPM page so make it helpful for users&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Entry Point&lt;/em&gt;: index.js&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Test Command&lt;/em&gt;: You can leave this blank&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;GitHub Repository&lt;/em&gt;: If you have a GitHub repo for your module, then add it here. This will appear on the NPM page&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Keywords&lt;/em&gt;: This will make it easier for developers to find your package&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Author&lt;/em&gt;: List yourself&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;License&lt;/em&gt;: ISC (This is the boilerplate license for open-source software)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#create-indexjs-with-nth-root-function"&gt;
  &lt;/a&gt;
  Create index.js with nth root function
&lt;/h3&gt;

&lt;p&gt;Now let‚Äôs make our first function. Create that &lt;code&gt;index.js&lt;/code&gt; file which we designated as the main file for our package at the root of your project.&lt;/p&gt;

&lt;p&gt;For our code, we are going to define module.exports, and whatever we set this value to is what our package will return. For now, let's define a function called nthRt that takes in a number, and then returns the nth root of that number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = function nthRt(n) {
     return n ** (1/n)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#npm-publish-and-test-it"&gt;
  &lt;/a&gt;
  NPM Publish and Test It
&lt;/h3&gt;

&lt;p&gt;We can now publish this by running&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm publish&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now if we go back to npm, and click on our packages, we‚Äôll see the package we just published!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-and-require-isodd"&gt;
  &lt;/a&gt;
  Install and Require is-odd
&lt;/h3&gt;

&lt;p&gt;Now let‚Äôs get a little fancier. How can we add a dependency? Another similarly useless npm package is the is-odd package, which, you guessed it, tells us if an integer is odd.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/is-odd"&gt;https://www.npmjs.com/package/is-odd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs go back to our IDE, and install it with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm i is-odd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once that is done, we should see the dependency in our &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Then on the top of our &lt;code&gt;index.js&lt;/code&gt;, let's require the module with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const isOdd = require(‚Äòis-odd‚Äô)&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-iseven-function"&gt;
  &lt;/a&gt;
  Add isEven Function
&lt;/h3&gt;

&lt;p&gt;Now let‚Äôs use this isOdd function to create our own function to tell whether a number is even.&lt;/p&gt;

&lt;p&gt;Instead of setting module.exports to our nthRt function, let's set it to an object, with keys and values for our individual functions.&lt;/p&gt;

&lt;p&gt;Let‚Äôs then create our isEven function and just return the negation of our isOdd function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const isOdd = require(‚Äòis-odd‚Äô)
module.exports = {
       nthRt: function nthRt(n) {
              return n ** (1/n)
       },
       isEven: function isEven(n) {
              return !isOdd(n)
       }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-readmemd"&gt;
  &lt;/a&gt;
  Add README.md
&lt;/h3&gt;

&lt;p&gt;Now you might have noticed the documentation that was included on the is-odd npm page. To create our own, we just need to make a README markdown file called &lt;code&gt;README.md&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can then insert markdown syntax to explain the installation and usage of our package.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#change-version-publish-and-test"&gt;
  &lt;/a&gt;
  Change Version, Publish, and Test
&lt;/h3&gt;

&lt;p&gt;Now before we can publish this new version, we have to make sure to increment the version value in our &lt;code&gt;package.json()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then run &lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm publish&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and in a matter of seconds, we should see the new update!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unpublish-the-package"&gt;
  &lt;/a&gt;
  Unpublish the Package
&lt;/h3&gt;

&lt;p&gt;Now, on a final note, you should feel free to test the publishing process until you are comfortable with it, but make sure to unpublish NPM packages that are purely for your testing. We all have to do our part to make the NPM system clean and efficient, so the fewer useless packages there are the better.&lt;/p&gt;

&lt;p&gt;To unpublish your package simply run: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm unpublish &amp;lt;the name of your package&amp;gt; -f&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now if we try to go to our npm page, we‚Äôll get a 404, meaning it was successfully unpublished!&lt;/p&gt;




&lt;p&gt;Thanks for reading! &lt;/p&gt;

&lt;p&gt;If you have any questions or just want to show off the cool NPM packages that you‚Äôre making, comment down below!&lt;/p&gt;

&lt;p&gt;Also, don‚Äôt forget to follow us on social media to get all the updates on how Codesphere is revolutionizing the development experience. &lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>npm</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Query in SQFLite using Flutter Apps | Flutter SQFLite Tutorials for beginners #2</title>
      <author>Balram Rathore</author>
      <pubDate>Sun, 06 Jun 2021 07:11:57 +0000</pubDate>
      <link>https://dev.to/devstack06/how-to-query-in-sqflite-using-flutter-apps-flutter-sqflite-tutorials-for-beginners-2-22ac</link>
      <guid>https://dev.to/devstack06/how-to-query-in-sqflite-using-flutter-apps-flutter-sqflite-tutorials-for-beginners-2-22ac</guid>
      <description>&lt;p&gt;In this video we are going to work on the Inserting and Reading the data from SQFLITE. Basically we will going to do the query on sqflite and insert and show data using flutter app.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://youtu.be/IzUP9COufek"&gt;https://youtu.be/IzUP9COufek&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nP72DfuR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6ubovuc0uscfu0w179c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nP72DfuR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6ubovuc0uscfu0w179c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>sql</category>
    </item>
    <item>
      <title>Algorithms: Recursion</title>
      <author>Tamerlan Gudabayev</author>
      <pubDate>Sun, 06 Jun 2021 06:51:09 +0000</pubDate>
      <link>https://dev.to/tamerlang/algorithms-recursion-56lc</link>
      <guid>https://dev.to/tamerlang/algorithms-recursion-56lc</guid>
      <description>&lt;p&gt;There are just way to many algorithms in the world. &lt;/p&gt;

&lt;p&gt;Fortunately, you don't have to learn them all. &lt;/p&gt;

&lt;p&gt;They all mostly come in certain types.&lt;/p&gt;

&lt;p&gt;One of these types is recursion. &lt;/p&gt;

&lt;p&gt;That's what we will be discussing today.&lt;/p&gt;

&lt;p&gt;What you will learn today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is recursion?&lt;/li&gt;
&lt;li&gt;Recursive algorithms&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#recursion"&gt;
  &lt;/a&gt;
  Recursion
&lt;/h2&gt;

&lt;p&gt;Recursion put simply is when a function calls itself. &lt;/p&gt;

&lt;p&gt;But why would it do that?&lt;/p&gt;

&lt;p&gt;Because it breaks down the problems into subproblems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1IqBMst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p19hgkogwrftqbre6hu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1IqBMst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p19hgkogwrftqbre6hu2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the main premise of recursion, breaking down big problems into subproblems.&lt;/p&gt;

&lt;p&gt;Here's a simple example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#recursive-algorithms"&gt;
  &lt;/a&gt;
  Recursive Algorithms
&lt;/h2&gt;

&lt;p&gt;There are many algorithms that use recursion but the most notable ones are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Merge Sort&lt;/li&gt;
&lt;li&gt;Quick Sort&lt;/li&gt;
&lt;li&gt;Binary Search&lt;/li&gt;
&lt;li&gt;Greatest Common Divisor (GCD)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Today was a pretty simple post, we learned what recursion is, and what algorithms use it. I hope you learned something today, and stay tuned for next week.&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>algorithms</category>
      <category>beginners</category>
      <category>progr</category>
    </item>
    <item>
      <title>Is Game Devlopment a good career in 2021</title>
      <author>tirth-uhiha-dev</author>
      <pubDate>Sun, 06 Jun 2021 06:37:58 +0000</pubDate>
      <link>https://dev.to/tirthuhihadev/is-game-devlopment-a-good-career-in-2021-3m2n</link>
      <guid>https://dev.to/tirthuhihadev/is-game-devlopment-a-good-career-in-2021-3m2n</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hey-there"&gt;
  &lt;/a&gt;
  Hey There,
&lt;/h1&gt;

&lt;p&gt;Tired and exhausted Dev's. I am Tirth here your one and only game blogger here.So, today we are taking about something serious its about my or your career, that is game dev a good and demanding career in 2021. Share your answer in the comments down below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, first let's talk about our main interest, that is salary:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JxEva13D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d53strkogi2ii79c8gn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JxEva13D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d53strkogi2ii79c8gn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video game designers earn an average of $40.13 per hour, monthly salary start from $3,559 and go up to $11,227. A average game developer makes $78,499 per year? That's valued at $37.74 per hour! The range surrounding that average can vary between $59,000 and $103,000, meaning game developers have the opportunity to earn more once they move past entry-level roles.&lt;br&gt;
Though being a Gamedevloper is as hard as anyother field in coding or programming.You have bear the stress and invest your time learning it, and after all of that you will get your results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now comes the demand for game dev:&lt;/strong&gt;&lt;br&gt;
Demand for Video Game Designers is expected to go up, with an expected 7,940 new jobs filled by 2018. This represents an annual increase of 11.59 percent over the next few years.&lt;br&gt;
Personal requirements for a Games Developer&lt;br&gt;
Aptitude for computing.&lt;br&gt;
Creative and artistic flair.&lt;br&gt;
Commitment to understanding and using new technology.&lt;br&gt;
Good communication skills.&lt;br&gt;
Aptitude for drawing.&lt;br&gt;
Understanding of colour and form.&lt;br&gt;
Able to work as part of a team.&lt;/p&gt;

&lt;p&gt;Thats all for today guys and is you are intrested in this type type of blogs and content then do make sure to follow me here on dev. And if you like gaming then pls subscribe to my youtube channel &lt;a href="https://www.youtube.com/channel/UC1sE6NRQT5zbgzq9tRhQRlQ"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thnksin-slang-opps"&gt;
  &lt;/a&gt;
  Thnks(in slang opps)
&lt;/h2&gt;

</description>
      <category>gamedev</category>
      <category>programming</category>
      <category>devmeme</category>
      <category>python</category>
    </item>
    <item>
      <title>Web based terminal - Project Demo</title>
      <author>Utsav Ladani</author>
      <pubDate>Sun, 06 Jun 2021 05:11:22 +0000</pubDate>
      <link>https://dev.to/utsavladani/web-based-terminal-project-demo-3ijp</link>
      <guid>https://dev.to/utsavladani/web-based-terminal-project-demo-3ijp</guid>
      <description>&lt;p&gt;Hey folks,&lt;/p&gt;

&lt;p&gt;I am trying to make a web based terminal. In which you can run a command and that command execute on your server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#idea-behind-project"&gt;
  &lt;/a&gt;
  Idea behind project
&lt;/h3&gt;

&lt;p&gt;We know that server run on different operating systems and each operating system has their own basic utility to get useful information and also has some useful tools to monitor CPU and RAM usage, etc. These tools and utilities run through a terminal/CLI. You can use that terminal through my web app to get information about your server system. Mobile client can support also, so no need to open computer, just open the app and type command whatever you want üòÑ.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technical-details"&gt;
  &lt;/a&gt;
  Technical details
&lt;/h3&gt;

&lt;p&gt;Techs are React for frontend and NodeJS, socket.io and child_process modules for backend. There is on any emulator concept. Terminal commands are depends on server's operating system (I make it for my local server, so it supports windows commands),&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-project-works"&gt;
  &lt;/a&gt;
  How project works?
&lt;/h3&gt;

&lt;p&gt;There is a simple concept of &lt;strong&gt;child process&lt;/strong&gt;. For each socket, I create a new child process using the spawn function, which is running terminal executable file("cmd.exe" for windows). Now through socket event, I send input command to standard input of child process and get back standard output/error and send it to client.&lt;/p&gt;

&lt;p&gt;YouTube Demo: &lt;a href="https://youtu.be/JrIg-IOaw1U"&gt;https://youtu.be/JrIg-IOaw1U&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JrIg-IOaw1U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href="https://github.com/Utsav-Ladani/Html-and-Terminal"&gt;Html and Terminal&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Utsav-Ladani"&gt;
        Utsav-Ladani
      &lt;/a&gt; / &lt;a href="https://github.com/Utsav-Ladani/Html-and-Terminal"&gt;
        Html-and-Terminal
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Type command in browser and run on server
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Html-and-Terminal&lt;/h1&gt;
&lt;p&gt;Html and terminal is a basic project, where you can type commnd in browser and run it on your server.
You can use it as a your server manager.&lt;/p&gt;
&lt;p&gt;Demo Link here: &lt;a href="https://youtu.be/JrIg-IOaw1U" rel="nofollow"&gt;https://youtu.be/JrIg-IOaw1U&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note: This project build successfully on windows 7, but not checked on real server.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Utsav-Ladani/Html-and-Terminal"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>react</category>
      <category>socketio</category>
      <category>webbasedterminal</category>
    </item>
    <item>
      <title>Why all developers should learn how to perform basic network troubleshooting</title>
      <author>memattchung</author>
      <pubDate>Sun, 06 Jun 2021 04:51:03 +0000</pubDate>
      <link>https://dev.to/memattchung/why-all-developers-should-learn-how-to-perform-basic-network-troubleshooting-2ihj</link>
      <guid>https://dev.to/memattchung/why-all-developers-should-learn-how-to-perform-basic-network-troubleshooting-2ihj</guid>
      <description>&lt;p&gt;Regardless of whether you work on the front-end or back-end, I think all developers should gain some proficiency in network troubleshooting. This is especially true if you find yourself gravitating towards lower level systems programming. &lt;/p&gt;

&lt;p&gt;The ability to troubleshoot the network and systems separates good developers from great developers. Great developers understand not just code abstraction, but understand the TCP/IP model:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DPsJ7xxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yjopozu278ydhdb5yhxp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPsJ7xxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yjopozu278ydhdb5yhxp.png" alt="OSI and TCP/IP model"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.guru99.com/tcp-ip-model.html"&gt;https://www.guru99.com/tcp-ip-model.html&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-basic-network-troubleshooting-skills"&gt;
  &lt;/a&gt;
  Some basic network troubleshooting skills
&lt;/h2&gt;

&lt;p&gt;If you are just getting into networking, here are some basic tools you should add to your toolbelt:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perform a DNS query (e.g. &lt;code&gt;dig&lt;/code&gt; or &lt;code&gt;nslookup&lt;/code&gt; command)&lt;/li&gt;
&lt;li&gt;Send an ICMP echo request to test end to end IP connectivity (i.e. &lt;code&gt;ping&lt;/code&gt; command)&lt;/li&gt;
&lt;li&gt;Analyze the various network hops (i.e. &lt;code&gt;traceroute X.X.X.X&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Check whether you can establish a TCP socket connection (e.g. &lt;code&gt;telnet X.X.X.X [port]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Test application layer (i.e. &lt;code&gt;curl https://somedomain&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Perform a packet capture (e.g. &lt;code&gt;tcpdump -i any&lt;/code&gt;) and what bits are sent on the wire&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-ip-address-is-my-browser-connecting-to"&gt;
  &lt;/a&gt;
  What IP address is my browser connecting to?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% dig dev.to

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; dev.to
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 39029
;; flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 512
;; QUESTION SECTION:
;dev.to.                IN  A

;; ANSWER SECTION:
dev.to.         268 IN  A   151.101.2.217
dev.to.         268 IN  A   151.101.66.217
dev.to.         268 IN  A   151.101.130.217
dev.to.         268 IN  A   151.101.194.217
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#is-the-web-server-listening-on-the-http-port"&gt;
  &lt;/a&gt;
  Is the web server listening on the HTTP port?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% telnet 151.101.2.217 443
Trying 151.101.2.217...
Connected to 151.101.2.217.
Escape character is '^]'.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each of the above tools helps you isolate connectivity issues. For example, if your client receives an HTTP 5XX error, you can immediately rule out any TCP level issue. That is, you don't need to use &lt;code&gt;telnet&lt;/code&gt; to check whether there's a firewall issue or whether the server is listening in on the right socket: the server already sent an application level response.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Learning more about the network stack helps you quickly pinpoint and isolate problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is it my client-side application?&lt;/li&gt;
&lt;li&gt;Is it a firewall blocking certain ports?&lt;/li&gt;
&lt;li&gt;Is there a transient issue on the network?&lt;/li&gt;
&lt;li&gt;Is the server up and running?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lets-chat-more-about-network-engineering-and-software-development"&gt;
  &lt;/a&gt;
  Let's chat more about network engineering and software development
&lt;/h3&gt;

&lt;p&gt;If you are curious about learning how to move from front-end to back-end development, or from back-end development to low level systems programming, hit me up on Twitter: &lt;a href="https://twitter.com/memattchung"&gt;@memattchung&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>devops</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>5 projects to master Front End Development</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 06 Jun 2021 04:48:53 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p</link>
      <guid>https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p</guid>
      <description>&lt;p&gt;If you are starting on the journey to becoming a Front End Developer, once you get the basics down, you might want to make projects as the best way to learn any skill is to try making something hands-on. This article is for anyone trying to take their skills to the next level, as well as for people who is at a loss for project ideas.&lt;/p&gt;

&lt;p&gt;Here are five project ideas to help you out, according to no order.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-realtime-chat-app"&gt;
  &lt;/a&gt;
  1. Real-Time Chat App
&lt;/h1&gt;

&lt;p&gt;A Real-Time chat application sends and shows messages to a recipient instantly without any page refresh.&lt;/p&gt;

&lt;p&gt;This is a very lucrative project to have in your portfolio as it showcases that you have experience working with real-time data as well as authentication. If you are a Full-Stack Developer, you might also want to create the backend for the application for some extra brownie points in the eyes of the person checking it out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iR3eWewD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmmtamdiqn57pfs4k89j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iR3eWewD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmmtamdiqn57pfs4k89j.png" alt="SmartsApp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web-app: &lt;a href="https://smartsapp-ba40f.firebaseapp.com/"&gt;https://smartsapp-ba40f.firebaseapp.com&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/SmartsApp"&gt;
        SmartsApp
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üí¨üì± An End to End Encrypted Cross Platform messenger app.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Smartsapp&lt;/h1&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ruppysuppy/SmartsApp/master/./readme_img/logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ns_GzKXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ruppysuppy/SmartsApp/master/./readme_img/logo.svg"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;A fully &lt;strong&gt;cross-platform messenger&lt;/strong&gt; app with &lt;strong&gt;End to End Encryption (E2EE)&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ruppysuppy/SmartsApp/master/./readme_img/demo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WyjN1v8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/ruppysuppy/SmartsApp/master/./readme_img/demo.gif"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The features shown in the demo is not exhaustive. Only the core features are showcased in the demo.&lt;/p&gt;
&lt;h2&gt;
Platforms Supported&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Desktop:&lt;/strong&gt; Windows, Linux, MacOS&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mobile:&lt;/strong&gt; Android, iOS&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Website:&lt;/strong&gt; Any device with a browser&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Back-end Setup&lt;/h2&gt;
&lt;p&gt;The back-end of the app is handled by &lt;code&gt;Firebase&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
Basic Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Go to firebase console and create a new project with the name &lt;code&gt;Smartsapp&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;Google Analylitics&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
App Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create an &lt;code&gt;App&lt;/code&gt; for the project from the overview page&lt;/li&gt;
&lt;li&gt;Copy and paste the configurations in the required location (given in the readme of the respective apps)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
Auth Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Go to the project &lt;code&gt;Authentication&lt;/code&gt; section&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Sign-in method&lt;/code&gt; tab&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;Email/Password&lt;/code&gt; and &lt;code&gt;Google&lt;/code&gt; sign in&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
Firestore Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Go to the project &lt;code&gt;Firestore&lt;/code&gt; section&lt;/li&gt;
&lt;li&gt;Create firestore provisions for the project (choose the server nearest to your location)&lt;/li&gt;
&lt;li&gt;Go to the &lt;code&gt;Rules&lt;/code&gt;‚Ä¶&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ruppysuppy/SmartsApp"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#2-ecommerce-store"&gt;
  &lt;/a&gt;
  2. E-Commerce Store
&lt;/h1&gt;

&lt;p&gt;E-commerce stores allow users to buy and sell goods or services using the internet and transfers money and data to execute these transactions. &lt;/p&gt;

&lt;p&gt;This project also involves authentication as well as keeping track of a user's previous orders, cart, etc resulting in a complex project, which tells the viewer you can solve complex development problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WL-CsnDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec20iwqhfvsku0cw37s8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WL-CsnDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec20iwqhfvsku0cw37s8.png" alt="Pizza Man"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web-app: &lt;a href="https://pizza-man-61510.web.app/"&gt;https://pizza-man-61510.web.app/&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/Pizza-Man"&gt;
        Pizza-Man
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üçïüõí An e-commerce website to order pizza online
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Pizza Man Project&lt;/h1&gt;
&lt;p&gt;An E-Commerce website for ordering Pizza Online&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ruppysuppy/Pizza-Man/master/./readme_img/demo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F89HKkX0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/ruppysuppy/Pizza-Man/master/./readme_img/demo.gif"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The features shown in the demo is not exhaustive. Only the core features are showcased in the demo.&lt;/p&gt;
&lt;h2&gt;
Tools used&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;React: To create the Single Page App&lt;/li&gt;
&lt;li&gt;React-Router: For Routing&lt;/li&gt;
&lt;li&gt;Redux: For State Management&lt;/li&gt;
&lt;li&gt;Firebase: As a DataBase&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Firebase Setup&lt;/h2&gt;
&lt;p&gt;You need to create a firebase configeration file holding the firebase settings in the path &lt;code&gt;/src/firebase/config.js&lt;/code&gt;. The required format is:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;firebaseConfig&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;apiKey&lt;/span&gt;: &lt;span class="pl-s"&gt;"API-KEY"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;authDomain&lt;/span&gt;: &lt;span class="pl-s"&gt;"AUTH-DOMAIN.firebaseapp.com"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;databaseURL&lt;/span&gt;: &lt;span class="pl-s"&gt;"DATABASE-URL.firebaseio.com"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;projectId&lt;/span&gt;: &lt;span class="pl-s"&gt;"PROJECT-ID"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;storageBucket&lt;/span&gt;: &lt;span class="pl-s"&gt;"STORAGE-BUCKET.appspot.com"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;messagingSenderId&lt;/span&gt;: &lt;span class="pl-s"&gt;"MESSAGING-SENDER-ID"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;appId&lt;/span&gt;: &lt;span class="pl-s"&gt;"APP-ID"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;measurementId&lt;/span&gt;: &lt;span class="pl-s"&gt;"MEASUREMENT-ID"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt; &lt;span class="pl-s1"&gt;firebaseConfig&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Data needs to be stored in the following format:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;
    &lt;span class="pl-kos"&gt;{&lt;/span&gt;
        &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;"CATEGORY NAME"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
        &lt;span class="pl-c1"&gt;items&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt;
            &lt;span class="pl-kos"&gt;{&lt;/span&gt;
                &lt;span class="pl-c1"&gt;desc&lt;/span&gt;: &lt;span class="pl-s"&gt;"PIZZA DESCRIPTION"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
                &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-s"&gt;"ID"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
                &lt;span class="pl-c1"&gt;img&lt;/span&gt;: &lt;span class="pl-s"&gt;"IMAGE LINK"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
                &lt;span class="pl-c1"&gt;name&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ruppysuppy/Pizza-Man"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#3-weather-report-app"&gt;
  &lt;/a&gt;
  3. Weather Report App
&lt;/h1&gt;

&lt;p&gt;A Weather Report App provides the user with current weather details and forecasts as well for the future.&lt;/p&gt;

&lt;p&gt;This project is probably the easiest one on the list. You only need to use a third-party API like &lt;a href="https://openweathermap.org/api"&gt;Open Weather Map&lt;/a&gt; or &lt;a href="https://www.weatherapi.com/"&gt;Weather API&lt;/a&gt;. It shows the viewer that you can work with external APIs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ysS5Yf2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gajcr877yaxu7hxr3ve2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ysS5Yf2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gajcr877yaxu7hxr3ve2.png" alt="Weather Man"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web-app: &lt;a href="https://the-weather-man-project.herokuapp.com/"&gt;https://the-weather-man-project.herokuapp.com/&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/The-WeatherMan-Project"&gt;
        The-WeatherMan-Project
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üåû‚òÅÔ∏è Get Local and International weather forecasts from the most accurate Weather Forecasting Technology featuring up to the minute Weather Reports.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
THE WEATHER MAN PROJECT&lt;/h1&gt;
&lt;p&gt;This is a simple Django project which displays the weather details (current + forecast + previous) of any location in the world.&lt;/p&gt;
&lt;h3&gt;
Resources Used&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Google Places JavaScript API: For the place name auto-completion&lt;/li&gt;
&lt;li&gt;Open Weather Maps API: For getting the weather details&lt;/li&gt;
&lt;li&gt;Chart.js: For plotting the charts of previous data&lt;/li&gt;
&lt;li&gt;AOS: For Animation on Scroll effect&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
How To Use&lt;/h3&gt;
&lt;p&gt;Follow the steps to start the local server on your machine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enter Your Google API Key (./templates/core/home.html) and Open Weather Maps API KEY (./weather_details/views.py). You receive the key after you make an account in the Google Cloud Platform (and Activate Google Places JavaScript API) and Open Weather Maps&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Download and install Python 3.x&lt;/li&gt;
&lt;li&gt;Navigate to the repository folder&lt;/li&gt;
&lt;li&gt;Open the Terminal/CMD/PowerShell at the location (Shift + Right Click =&amp;gt; Run Command Prompt/PowerShell for Windows or Right Click =&amp;gt; Run Terminal for Linux based system)&lt;/li&gt;
&lt;li&gt;Run the Command‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ruppysuppy/The-WeatherMan-Project"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#4-crossplatform-app"&gt;
  &lt;/a&gt;
  4. Cross-Platform App
&lt;/h1&gt;

&lt;p&gt;Cross-Platform Applications are apps developed to function on multiple Operating Systems from the same code base. &lt;/p&gt;

&lt;p&gt;Being well adapted at Cross-Platform Development is highly in demand these days as companies want to reduce the cost involved in application development, and what's a better way to do it than make an application once and use it on several platforms?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hKfb_LiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9y1r6brs4t2b43lnmmod.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hKfb_LiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9y1r6brs4t2b43lnmmod.png" alt="UnHook"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/SmartsApp"&gt;
        SmartsApp
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üí¨üì± An End to End Encrypted Cross Platform messenger app.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Smartsapp&lt;/h1&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ruppysuppy/SmartsApp/master/./readme_img/logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ns_GzKXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ruppysuppy/SmartsApp/master/./readme_img/logo.svg"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;A fully &lt;strong&gt;cross-platform messenger&lt;/strong&gt; app with &lt;strong&gt;End to End Encryption (E2EE)&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ruppysuppy/SmartsApp/master/./readme_img/demo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WyjN1v8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/ruppysuppy/SmartsApp/master/./readme_img/demo.gif"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The features shown in the demo is not exhaustive. Only the core features are showcased in the demo.&lt;/p&gt;
&lt;h2&gt;
Platforms Supported&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Desktop:&lt;/strong&gt; Windows, Linux, MacOS&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mobile:&lt;/strong&gt; Android, iOS&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Website:&lt;/strong&gt; Any device with a browser&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Back-end Setup&lt;/h2&gt;
&lt;p&gt;The back-end of the app is handled by &lt;code&gt;Firebase&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
Basic Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Go to firebase console and create a new project with the name &lt;code&gt;Smartsapp&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;Google Analylitics&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
App Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create an &lt;code&gt;App&lt;/code&gt; for the project from the overview page&lt;/li&gt;
&lt;li&gt;Copy and paste the configurations in the required location (given in the readme of the respective apps)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
Auth Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Go to the project &lt;code&gt;Authentication&lt;/code&gt; section&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Sign-in method&lt;/code&gt; tab&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;Email/Password&lt;/code&gt; and &lt;code&gt;Google&lt;/code&gt; sign in&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
Firestore Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Go to the project &lt;code&gt;Firestore&lt;/code&gt; section&lt;/li&gt;
&lt;li&gt;Create firestore provisions for the project (choose the server nearest to your location)&lt;/li&gt;
&lt;li&gt;Go to the &lt;code&gt;Rules&lt;/code&gt;‚Ä¶&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ruppysuppy/SmartsApp"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ruppysuppy"&gt;
        ruppysuppy
      &lt;/a&gt; / &lt;a href="https://github.com/ruppysuppy/UnHook"&gt;
        UnHook
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üíªüë®‚Äçüíª Cross Platform Desktop App to Unhook you from the Screen.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
UnHook&lt;/h1&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ruppysuppy/UnHook/master/./assets/img/logo-black.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DkFDV6JB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ruppysuppy/UnHook/master/./assets/img/logo-black.png"&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;If you are one of the rare breed of people who call themselves programmers, you must have faced the following sitation:&lt;/p&gt;
&lt;p&gt;You were so busy working, that you forgot to take a break while coding... now your eyes hurt due to the excessive stress on them.&lt;/p&gt;
&lt;p&gt;The solution? Use UnHook, an app that helps you un-hook yourself from the screen by reminding you to take breaks at the right time.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ruppysuppy/UnHook/master/./screenshots/UnHook.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xkio4bMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/ruppysuppy/UnHook/master/./screenshots/UnHook.gif"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;
Platforms&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;MacOS&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Tools/Frameworks Used&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Electron&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;Redux (This is an overkill for such a small app, its used for practicing redux + electron integration)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
How to Use&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download and go to the repository location.&lt;/li&gt;
&lt;li&gt;Install depenencies for main app using &lt;code&gt;npm run install-dependencies&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Perform either of the following based on the development status of the app you are using
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;PRODUCTION (default):&lt;/strong&gt; Use &lt;code&gt;npm run build-front-end&lt;/code&gt; to build the react app&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DEVELOPMENT:&lt;/strong&gt; Use &lt;code&gt;npm run start-front-end&lt;/code&gt; to‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ruppysuppy/UnHook"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#5-personal-portfolio"&gt;
  &lt;/a&gt;
  5. Personal Portfolio
&lt;/h1&gt;

&lt;p&gt;Since you just completed 4 projects mentioned above, you will definitely need a place to showoff how cool your projects are. Personal Portfolio is the go-to place to do just that, you can also list out your experience, achievements, and any other relevant information.&lt;/p&gt;

&lt;p&gt;If you have a desire to build your personal brand, then a website that can promote your work is a must. This is just the place you can bring out your inner artist and design it to your heart's content. Not an artistic person? Draw ideas from templates or simply use one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yO7-Bq2t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gm5rrz2nl7lhulx57i7t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yO7-Bq2t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gm5rrz2nl7lhulx57i7t.png" alt="Portfolio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web-app: &lt;a href="https://tapajyoti-bose.vercel.app/"&gt;https://tapajyoti-bose.vercel.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is by no means an exhaustive list; feel free to add your ideas in the comments below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a student &amp;amp; freelancer who will soon start off as a Digital Nomad as soon as I graduate. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect to me on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>ux</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
