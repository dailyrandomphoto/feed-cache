<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üöÄ10 Trending projects on GitHub for web developers - 5th November 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 05 Nov 2021 14:54:30 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-5th-november-2021-1aki</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-5th-november-2021-1aki</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-unocss"&gt;
  &lt;/a&gt;
  1. UnoCSS
&lt;/h3&gt;

&lt;p&gt;The instant on-demand atomic CSS engine.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/antfu"&gt;
        antfu
      &lt;/a&gt; / &lt;a href="https://github.com/antfu/unocss"&gt;
        unocss
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The instant on-demand atomic CSS engine.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
UnoCSS&lt;/h1&gt;
&lt;p&gt;The instant on-demand Atomic CSS engine.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/unocss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eb4fbfb77a0d1a25d9628a56b4a48c1b5aab597f19a214e66e833f34dc0cbcf7/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f756e6f6373733f636f6c6f723d613162383538266c6162656c3d" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;üí° I highly recommend reading this blog post - &lt;a href="https://antfu.me/posts/reimagine-atomic-css" rel="nofollow"&gt;&lt;strong&gt;Reimagine Atomic CSS&lt;/strong&gt;&lt;/a&gt; for the story behind this tool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6&gt;
Try it!&lt;/h6&gt;
&lt;p&gt;&lt;a href="https://unocss.antfu.me/" rel="nofollow"&gt;ü§π‚Äç‚ôÇÔ∏è Online Playground&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;Inspired by &lt;a href="http://windicss.org/" rel="nofollow"&gt;Windi CSS&lt;/a&gt;, &lt;a href="https://tailwindcss.com/" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;, &lt;a href="https://github.com/tw-in-js/twind"&gt;Twind&lt;/a&gt; but:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/antfu/unocss#configurations"&gt;Fully customizable&lt;/a&gt; - no core utilities, all functionalities are provided via presets.&lt;/li&gt;
&lt;li&gt;No parsing, no AST, no scanning, it's &lt;strong&gt;INSTANT&lt;/strong&gt; (200x faster than Windi CSS or Tailwind JIT)&lt;/li&gt;
&lt;li&gt;&amp;lt;3kb min+gzip - zero deps and browser friendly.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antfu/unocss#shortcuts"&gt;Shortcuts&lt;/a&gt; - aliasing utilities, dynamically.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antfu/unocss/tree/main/packages/preset-attributify/"&gt;Attributify Mode&lt;/a&gt; - group utilities in attributes&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antfu/unocss/tree/main/packages/preset-icons/"&gt;Pure CSS Icons&lt;/a&gt; - use any icon as a single class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antfu/unocss#css-scoping"&gt;CSS Scoping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code-splitting for CSS - ships minimal CSS for MPA.&lt;/li&gt;
&lt;li&gt;Library friendly - ships atomic styles with your component libraries and safely scoped.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
Benchmark&lt;/h6&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;
&lt;pre&gt;&lt;code&gt;11/5/2021, 4:26:57 AM
1656 utilities | x50 runs (min build time)
none                              8.30 ms / delta.      0.00 ms
unocss       v0.4.15             13.58 ms / delta.      5.28&lt;/code&gt;&lt;/pre&gt;‚Ä¶&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/antfu/unocss"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-notifire"&gt;
  &lt;/a&gt;
  2. Notifire
&lt;/h3&gt;

&lt;p&gt;The ultimate library for managing multi-channel notifications with a single API.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/notifirehq"&gt;
        notifirehq
      &lt;/a&gt; / &lt;a href="https://github.com/notifirehq/notifire"&gt;
        notifire
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üöÄ Open-source notification infrastructure for products
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://discord.gg/9wcGSf22PM" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kpsH-F2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8877285/139603641-66966234-84f4-42aa-9c31-9d296fab7ba1.png"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Read &lt;a href="https://github.com/notifirehq/notifire/discussions/70"&gt;here&lt;/a&gt; our plans for the upcoming weeks.&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://notifire.co" rel="nofollow"&gt;
    &lt;img width="200" src="https://camo.githubusercontent.com/3ca722f7a9be6a1c65edd8297eaf978e70917c3a9344f182adcbe19a7df78474/68747470733a2f2f75706c6f6164732d73736c2e776562666c6f772e636f6d2f3631333062346432396262306162303965313461653965652f3631333065363933316637353564663330323230336663635f536964654c6f676f2532302d253230424c61636b2d702d3830302e706e67"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
Notification management simplified.&lt;/h1&gt;
&lt;div&gt;
The ultimate library for managing multi-channel notifications with a single API
&lt;/div&gt;
  &lt;p&gt;
    &lt;br&gt;
    &lt;a href="https://docs.notifire.co" rel="nofollow"&gt;&lt;strong&gt;Explore the docs ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br&gt;
  &lt;br&gt;
    &lt;a href="https://github.com/notifirehq/notifire/issues"&gt;Report Bug&lt;/a&gt;
    ¬∑
    &lt;a href="https://github.com/notifirehq/notifire/discussions"&gt;Request Feature&lt;/a&gt;
    ¬∑
    &lt;a href="https://blog.notifire.co/" rel="nofollow"&gt;Read our blog&lt;/a&gt;
  &lt;/p&gt;
&lt;h2&gt;
‚≠êÔ∏è Why&lt;/h2&gt;
&lt;p&gt;Building a notification system is hard, at first it seems like just sending an email but in reality it's just the beginning. In today's world users expect multi channel communication experience over email, sms, push, direct and more... An ever growing list of providers are popping up each day, and notifications are spread around the code. Notifire's goal is to simplify notifications and provide developers the tools to create meaningful communication between the system and it's users.&lt;/p&gt;
&lt;h2&gt;
‚ú® Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
üåà Single API for all messaging providers (Email, SMS, Push, Direct)&lt;/li&gt;
&lt;li&gt;
üíÖ Easily manage notification over multiple channels&lt;/li&gt;
&lt;li&gt;
üöÄ Equipped with a templating engine for advanced layouts and designs&lt;/li&gt;
&lt;li&gt;
üõ° Built-in protection for missing‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/notifirehq/notifire"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-react-notion-x"&gt;
  &lt;/a&gt;
  3. React Notion X
&lt;/h3&gt;

&lt;p&gt;Fast and accurate React renderer for Notion. TypeScript batteries included.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/NotionX"&gt;
        NotionX
      &lt;/a&gt; / &lt;a href="https://github.com/NotionX/react-notion-x"&gt;
        react-notion-x
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast and accurate React renderer for Notion. TS batteries included. ‚ö°Ô∏è
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/NotionX/react-notion-x/master/media/notion-ts.png"&gt;&lt;img alt="React Notion X" src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1QzaHxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/NotionX/react-notion-x/master/media/notion-ts.png" width="689"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;
React Notion X&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Fast and accurate React renderer for Notion. TS batteries included. ‚ö°Ô∏è&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/notion-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c472cebb09daf04587bcd5241ab41641eee7c76d219dc926937b6fd477bc122d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6e6f74696f6e2d636c69656e742e737667" alt="NPM"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.com/NotionX/react-notion-x" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7c7a606efc642965df48fd2a10dfeff914ee6e6a01c1c80a17dc6022f39c430c/68747470733a2f2f7472617669732d63692e636f6d2f4e6f74696f6e582f72656163742d6e6f74696f6e2d782e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://prettier.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ead313e18d0b714b50839b1e910575a53dd05d564c45d12b046739c42806ea07/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d627269676874677265656e2e737667" alt="Prettier Code Formatting"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Advice&lt;/h2&gt;
&lt;p&gt;If you just want to publish a website using Notion, then we highly recommend using &lt;a href="https://s.super.so/x" rel="nofollow"&gt;Super.so&lt;/a&gt; ‚Äî a hosted solution with great perf that takes care of all the details for you.&lt;/p&gt;
&lt;p&gt;If you want want more control over your website via React, we recommend using this amazing &lt;a href="https://github.com/transitive-bullshit/nextjs-notion-starter-kit"&gt;Next.js template&lt;/a&gt;, which is free and uses &lt;code&gt;react-notion-x&lt;/code&gt; under the hood.&lt;/p&gt;
&lt;p&gt;And if you want even more control, then you're in the right place! üëáüëá&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
üöÄ &lt;strong&gt;Simple&lt;/strong&gt; - TypeScript + React.&lt;/li&gt;
&lt;li&gt;
‚ö° &lt;strong&gt;Fast&lt;/strong&gt; - 10-100x faster than Notion
&lt;ul&gt;
&lt;li&gt;95-100% Lighthouse scores.&lt;/li&gt;
&lt;li&gt;Heavier components like PDFs and collection views can be loaded lazily via &lt;code&gt;next/dynamic&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
üíØ &lt;strong&gt;Tests&lt;/strong&gt; - Comes with a comprehensive &lt;a href="https://www.notion.so/Notion-Test-Suite-067dd719a912471ea9a3ac10710e7fdf" rel="nofollow"&gt;test suite&lt;/a&gt; covering most of Notion's functionality.&lt;/li&gt;
&lt;li&gt;
üî• &lt;strong&gt;Solid&lt;/strong&gt; - Used in production by &lt;a href="https://www.potion.so" rel="nofollow"&gt;Potion&lt;/a&gt; and thousands of websites.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;First you'll‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/NotionX/react-notion-x"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-oh-my-posh"&gt;
  &lt;/a&gt;
  4. Oh My Posh
&lt;/h3&gt;

&lt;p&gt;A prompt theme engine for any shell.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/JanDeDobbeleer"&gt;
        JanDeDobbeleer
      &lt;/a&gt; / &lt;a href="https://github.com/JanDeDobbeleer/oh-my-posh"&gt;
        oh-my-posh
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A prompt theme engine for any shell.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
A prompt theme engine for any shell&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9624db1cf097dbb73e7f485bd72cc9ec07e991d2060dd65cd59eb3a33ba4cb9b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6a616e6465646f6262656c6565722f6f682d6d792d706f73682f52656c656173653f6c6162656c3d4275696c64"&gt;&lt;img src="https://camo.githubusercontent.com/9624db1cf097dbb73e7f485bd72cc9ec07e991d2060dd65cd59eb3a33ba4cb9b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6a616e6465646f6262656c6565722f6f682d6d792d706f73682f52656c656173653f6c6162656c3d4275696c64" alt="Release Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/9e8516878551aceb6f79acd1966c75206f3303e1d4362219e6c370e71dd6639b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6a616e6465646f6262656c6565722f6f682d6d792d706f73683f6c6162656c3d52656c65617365" alt="Release"&gt;&lt;/a&gt;
&lt;a href="https://ohmyposh.dev/docs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e5cdea8402295dc44944f618522ba13c9351ea5470dd4d3ef5663b3efc7985d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f63732d6f686d79706f73682e6465762d626c7565" alt="Documentation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.powershellgallery.com/packages/oh-my-posh/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/908d7c7cc54cdaad998af91904ea05bfed2e92a4027112636724d1866422ce8b/68747470733a2f2f696d672e736869656c64732e696f2f706f7765727368656c6c67616c6c6572792f64742f6f682d6d792d706f73683f636f6c6f723d70696e6b266c6162656c3d506f7765725368656c6c253230446f776e6c6f616473" alt="PS Gallery"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/23f43438b3eca1ce0b0cce673c2f1c7518d58675f3e6cf9ce0dd2e766b84236d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6a616e6465646f6262656c6565722f6f682d6d792d706f73682f746f74616c3f636f6c6f723d70696e6b266c6162656c3d476974487562253230446f776e6c6f616473"&gt;&lt;img src="https://camo.githubusercontent.com/23f43438b3eca1ce0b0cce673c2f1c7518d58675f3e6cf9ce0dd2e766b84236d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6a616e6465646f6262656c6565722f6f682d6d792d706f73682f746f74616c3f636f6c6f723d70696e6b266c6162656c3d476974487562253230446f776e6c6f616473" alt="GitHub Downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What started as the offspring of &lt;a href="https://github.com/JanDeDobbeleer/oh-my-posh2"&gt;oh-my-posh2&lt;/a&gt; for PowerShell resulted in a cross platform
highly customizable and extensible prompt theme engine. After 4 years of working on oh-my-posh
a modern and more efficient tool was needed to suit my personal needs.&lt;/p&gt;
&lt;h2&gt;
‚ù§ Support ‚ù§
&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/jandedobbeleer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/75155ad404ca28c31b9196e1139e62c0495ee3019330db851d01870d96fe9a9c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537570706f72742d4265636f6d652532306125323050617472656f6e212d7265642e737667" alt="Patreon"&gt;&lt;/a&gt;
&lt;a href="https://liberapay.com/jandedobbeleer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e838c696854773e1a25b48dab178cf6315240b9e71304a94c5d797492bfd590b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c69626572617061792d446f6e6174652d2532336636633931352e737667" alt="Liberapay"&gt;&lt;/a&gt;
&lt;a href="https://ko-fi.com/jandedobbeleer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ec7aa0742d0914ebba8681a3bef96a9c0f0cc833d5f56b9bdc6c63b0dd6295b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4b6f2d2d66692d4275792532306d6525323061253230636f66666565212d2532333436623739382e737667" alt="Ko-Fi"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shell independent&lt;/li&gt;
&lt;li&gt;Git status indications&lt;/li&gt;
&lt;li&gt;Failed command indication&lt;/li&gt;
&lt;li&gt;Admin indication&lt;/li&gt;
&lt;li&gt;Current session indications&lt;/li&gt;
&lt;li&gt;Language info&lt;/li&gt;
&lt;li&gt;Shell info&lt;/li&gt;
&lt;li&gt;Configurable&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://ohmyposh.dev/docs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e5cdea8402295dc44944f618522ba13c9351ea5470dd4d3ef5663b3efc7985d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f63732d6f686d79706f73682e6465762d626c7565" alt="Documentation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Roadmap&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
 CI&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Github Releases&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Create documentation for manual installation&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Create documentation on the different segments&lt;/li&gt;
&lt;li&gt;Create easy installation packages
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
 Powershell&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Brew&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Scoop&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Winget&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Swap V2 with V3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/chrisbenti/PS-Config"&gt;Chris Benti&lt;/a&gt; for providing the first influence to start oh-my-posh&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dahlbyk/posh-git"&gt;Keith Dahlby&lt;/a&gt; for creating posh-git and making life more enjoyable&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;Robby Russel&lt;/a&gt; for creating oh-my-zsh, without him this would probably not be here&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/justjanne"&gt;Janne Mareike Koschinski&lt;/a&gt; for providing information on how to get certain information
using Go (and the amazing &lt;a href="https://github.com/justjanne/powerline-go"&gt;README&lt;/a&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/JanDeDobbeleer/oh-my-posh"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-under-the-hood-react"&gt;
  &lt;/a&gt;
  5. Under the hood: React
&lt;/h3&gt;

&lt;p&gt;Entire React code base explanation by visual block schemes. Each scheme is clickable and can be opened in a new tab, use that to zoom it and be able to read from it&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Bogdan-Lyashenko"&gt;
        Bogdan-Lyashenko
      &lt;/a&gt; / &lt;a href="https://github.com/Bogdan-Lyashenko/Under-the-hood-ReactJS"&gt;
        Under-the-hood-ReactJS
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Entire React code base explanation by visual block schemes (Stack version) 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Under the hood: React&lt;/h1&gt;
&lt;p&gt;&lt;em&gt; This repository contains an explanation of inner work of React. In fact, I was debugging through the entire code base and put all the logic on visual block-schemes, analyzed them, summarized and explained main concepts and approaches. I've already finished with Stack version and now I work with the next, Fiber version.  &lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
I wanted to automate process of "learning and documenting" a complex codebase as much as possible, so I started &lt;a href="https://codecrumbs.io/" rel="nofollow"&gt;Codecrumbs project&lt;/a&gt;. It will help to build projects like "Under the hood ReactJs" in a shorter time and in a simpler way!&lt;/h3&gt;
&lt;p&gt;Each scheme is clickable and can be opened in a new tab, use that to zoom it and be able to read from it. Keep the article and a scheme you are reading about at that moment in separate windows (tabs), that will help to match text and code flow easier.&lt;/p&gt;
&lt;p&gt;We‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Bogdan-Lyashenko/Under-the-hood-ReactJS"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-awesome-actions"&gt;
  &lt;/a&gt;
  6. Awesome Actions
&lt;/h3&gt;

&lt;p&gt;A curated list of awesome actions to use on GitHub&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sdras"&gt;
        sdras
      &lt;/a&gt; / &lt;a href="https://github.com/sdras/awesome-actions"&gt;
        awesome-actions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of awesome actions to use on GitHub
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;br&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/sdras/awesome-actionsawesome-actions.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--roYv4mSj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/sdras/awesome-actionsawesome-actions.png" width="150"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;h1&gt;
Awesome Actions &lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt; &lt;a href="https://github.com/sdras/awesome-actions/actions?workflow=Lint+Awesome+List"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ubjiaxx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/sdras/awesome-actions/workflows/Lint%2520Awesome%2520List/badge.svg" alt="GitHub Actions status | sdras/awesome-actions"&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome things related to GitHub Actions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Actions are triggered by GitHub platform events directly in a repo and run on-demand workflows either on Linux, Windows or macOS virtual machines or inside a container in response. With GitHub Actions you can automate your workflow from idea to production.&lt;/p&gt;

&lt;h2&gt;
Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/sdras/awesome-actions#official-resources"&gt;Official Resources&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#workflow-examples"&gt;Workflow Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#official-actions"&gt;Official Actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#create-your-actions"&gt;Create your Actions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sdras/awesome-actions#community-resources"&gt;Community Resources&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#github-tools-and-management"&gt;GitHub Tools and Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#collection-of-actions"&gt;Collection of Actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#utility"&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#static-analysis"&gt;Static Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#dynamic-analysis"&gt;Dynamic Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#monitoring"&gt;Monitoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#pull-requests"&gt;Pull Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#github-pages"&gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#notifications-and-messages"&gt;Notifications and Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#deployment"&gt;Deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#external-services"&gt;External Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#frontend-tools"&gt;Frontend Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#machine-learning-ops"&gt;Machine Learning Ops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#build"&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#localization"&gt;Localization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#cheat-sheet"&gt;Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sdras/awesome-actions#tutorials"&gt;Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Official Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/features/actions"&gt;Official Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/actions"&gt;Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/actions"&gt;Official Actions organization&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/actions/virtual-environments"&gt;actions/virtual-environments&lt;/a&gt; - GitHub Actions virtual environments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/actions/runner"&gt;actions/runner&lt;/a&gt; - The Runner for GitHub Actions.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.blog/2018-10-17-action-demos/" rel="nofollow"&gt;GitHub Blog Announcement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Workflow Examples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/actions/starter-workflows"&gt;actions/starter-workflows&lt;/a&gt; - Starter workflow management.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/actions/example-services"&gt;actions/example-services&lt;/a&gt; - Example workflows using service containers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Official Actions&lt;/h3&gt;
&lt;h4&gt;
Workflow Tool Actions&lt;/h4&gt;
&lt;p&gt;Tool actions for your workflow.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/actions/checkout"&gt;actions/checkout&lt;/a&gt; -‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sdras/awesome-actions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-data-science-for-beginners-a-curriculum"&gt;
  &lt;/a&gt;
  7. Data Science for Beginners - A Curriculum
&lt;/h3&gt;

&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 10-week, 20-lesson curriculum all about Data Science. Each lesson includes pre-lesson and post-lesson quizzes, written instructions to complete the lesson, a solution, and an assignment&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/microsoft"&gt;
        microsoft
      &lt;/a&gt; / &lt;a href="https://github.com/microsoft/Data-Science-For-Beginners"&gt;
        Data-Science-For-Beginners
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      10 Weeks, 20 Lessons, Data Science for All!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Data Science for Beginners - A Curriculum&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/Data-Science-For-Beginners/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/ec923b89171e0b3edf95b19f394d5c4c6f5c711f62e8ea2b3a541efc702c8d8a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6963726f736f66742f446174612d536369656e63652d466f722d426567696e6e6572732e737667" alt="GitHub license"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Data-Science-For-Beginners/graphs/contributors/"&gt;&lt;img src="https://camo.githubusercontent.com/b32d7dc96708b1c66534c0fb10253d29872079b588fb669526a12cb49e987ca1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d6963726f736f66742f446174612d536369656e63652d466f722d426567696e6e6572732e737667" alt="GitHub contributors"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Data-Science-For-Beginners/issues/"&gt;&lt;img src="https://camo.githubusercontent.com/c31fcd2749b441bcec13e0b7a556450c7031201f3a5f5270513787a4cf119e74/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6d6963726f736f66742f446174612d536369656e63652d466f722d426567696e6e6572732e737667" alt="GitHub issues"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Data-Science-For-Beginners/pulls/"&gt;&lt;img src="https://camo.githubusercontent.com/c9815f6532b20d37e7275c71d14af33726a395bdcdb33bc664602c6c7c7d7681/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f6d6963726f736f66742f446174612d536369656e63652d466f722d426567696e6e6572732e737667" alt="GitHub pull-requests"&gt;&lt;/a&gt;
&lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ff11ed110cfa69f703ef0dcca3cee6141c0a8ef465e8237221ae245de3deb3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="PRs Welcome"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://GitHub.com/microsoft/Data-Science-For-Beginners/watchers/"&gt;&lt;img src="https://camo.githubusercontent.com/83e01408f1c103e93e81ea470ba23ee6bd6386690c4df359869e19985ddfd0c0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f6d6963726f736f66742f446174612d536369656e63652d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d5761746368" alt="GitHub watchers"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Data-Science-For-Beginners/network/"&gt;&lt;img src="https://camo.githubusercontent.com/4978516c1b43d3a03066948864b118e1f259e9f540cb623214d2fe45e3ad05f2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6d6963726f736f66742f446174612d536369656e63652d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d466f726b" alt="GitHub forks"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Data-Science-For-Beginners/stargazers/"&gt;&lt;img src="https://camo.githubusercontent.com/23ccf444f4f98ab03e16ef16e3f40038967ff2eb6fee432efa10f2d6cfe9635a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6d6963726f736f66742f446174612d536369656e63652d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d53746172" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 10-week, 20-lesson curriculum all about Data Science. Each lesson includes pre-lesson and post-lesson quizzes, written instructions to complete the lesson, a solution, and an assignment. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hearty thanks to our authors:&lt;/strong&gt; &lt;a href="https://www.twitter.com/paladique" rel="nofollow"&gt;Jasmine Greenaway&lt;/a&gt;, &lt;a href="http://soshnikov.com" rel="nofollow"&gt;Dmitry Soshnikov&lt;/a&gt;, &lt;a href="https://twitter.com/nitya" rel="nofollow"&gt;Nitya Narasimhan&lt;/a&gt;, &lt;a href="https://twitter.com/JalenMcG" rel="nofollow"&gt;Jalen McGee&lt;/a&gt;, &lt;a href="https://twitter.com/jenlooper" rel="nofollow"&gt;Jen Looper&lt;/a&gt;, &lt;a href="https://twitter.com/maudstweets" rel="nofollow"&gt;Maud Levy&lt;/a&gt;, &lt;a href="https://twitter.com/TiffanySouterre" rel="nofollow"&gt;Tiffany Souterre&lt;/a&gt;, &lt;a href="https://www.twitter.com/geektrainer" rel="nofollow"&gt;Christopher Harrison&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;üôè Special thanks üôè to our &lt;a href="https://studentambassadors.microsoft.com/" rel="nofollow"&gt;Microsoft Student Ambassador&lt;/a&gt; authors, reviewers and content contributors,&lt;/strong&gt; notably Aaryan Arora, &lt;a href="https://github.com/AdityaGarg00"&gt;Aditya Garg&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/alondra-sanchez-molina/" rel="nofollow"&gt;Alondra Sanchez&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/ankitasingh007" rel="nofollow"&gt;Ankita Singh&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/anupam--mishra/" rel="nofollow"&gt;Anupam Mishra&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/arpitadas01/" rel="nofollow"&gt;Arpita Das&lt;/a&gt;, ChhailBihari Dubey, &lt;a href="https://www.linkedin.com/in/dibrinsofor" rel="nofollow"&gt;Dibri Nsofor&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/dishita-bhasin-7065281bb" rel="nofollow"&gt;Dishita Bhasin&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/majd-s/" rel="nofollow"&gt;Majd Safi&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/max-blum-6036a1186/" rel="nofollow"&gt;Max Blum&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/miguelmque/" rel="nofollow"&gt;Miguel Correa&lt;/a&gt;, &lt;a href="https://twitter.com/iftu119" rel="nofollow"&gt;Mohamma Iftekher (Iftu) Ebne Jalal&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/nawrin-tabassum" rel="nofollow"&gt;Nawrin Tabassum&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/raymond-wp/" rel="nofollow"&gt;Raymond Wangsa Putra&lt;/a&gt;‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/microsoft/Data-Science-For-Beginners"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-perflink"&gt;
  &lt;/a&gt;
  8. Perflink
&lt;/h3&gt;

&lt;p&gt;Low friction JavaScript benchmarks that you can share via URL&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lukejacksonn"&gt;
        lukejacksonn
      &lt;/a&gt; / &lt;a href="https://github.com/lukejacksonn/perflink"&gt;
        perflink
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Low friction JavaScript benchmarks that you can share via URL
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Perflink&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript performance benchmarks you can share via URL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The motivation here was to create a single page app like &lt;a href="https://jsperf.com" rel="nofollow"&gt;jsperf&lt;/a&gt; ‚Äì which is commonly used to compare performance characteristics of different Javascript code snippets ‚Äì but with improved usability and portability of results. It is a frontend only static web app with no build step and is hosted on Github pages.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1457604/78142792-49dc2e80-7425-11ea-95a5-2003b2b027f1.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EBzm4e0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/1457604/78142792-49dc2e80-7425-11ea-95a5-2003b2b027f1.gif" alt="perflink"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
üß™ Benchmarks run in isolated web workers&lt;/li&gt;
&lt;li&gt;
üåç Supports imports with worker type module&lt;/li&gt;
&lt;li&gt;
üóÇ Saves test suites to local storage&lt;/li&gt;
&lt;li&gt;
üé® Syntax highlighted textarea inputs&lt;/li&gt;
&lt;li&gt;
üîó Serializable state encoded into shareable URLs&lt;/li&gt;
&lt;li&gt;
‚è± Adaptive timing for more accurate results&lt;/li&gt;
&lt;li&gt;
üóú Super light weight ‚Äì almost no dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;To use the web interface simply visit &lt;a href="https://perf.link" rel="nofollow"&gt;https://perf.link&lt;/a&gt; and write out some test cases. When you are ready hit "Run Test". The code will be evaluated and benchmarked ‚Äì against all other test cases ‚Äì the results of‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lukejacksonn/perflink"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-nextthemes"&gt;
  &lt;/a&gt;
  9. next-themes
&lt;/h3&gt;

&lt;p&gt;Perfect Next.js dark mode in 2 lines of code. Support System preference and any other theme with no flashing&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pacocoursey"&gt;
        pacocoursey
      &lt;/a&gt; / &lt;a href="https://github.com/pacocoursey/next-themes"&gt;
        next-themes
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Perfect Next.js dark mode in 2 lines of code. Support System preference and any other theme with no flashing
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
next-themes &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/992524f4cad01cb42f2afb1d8a5794c3646502c7f111f35e9619116f0c71ad72/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f6e6578742d7468656d6573"&gt;&lt;img src="https://camo.githubusercontent.com/992524f4cad01cb42f2afb1d8a5794c3646502c7f111f35e9619116f0c71ad72/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f6e6578742d7468656d6573" alt="next-themes minzip package size"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/424a53503bb443f2ded037e3992f22c929b033e4cacc93815fe6d23f02862e27/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6e6578742d7468656d65732e7376673f636f6c6f72423d677265656e"&gt;&lt;img src="https://camo.githubusercontent.com/424a53503bb443f2ded037e3992f22c929b033e4cacc93815fe6d23f02862e27/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6e6578742d7468656d65732e7376673f636f6c6f72423d677265656e" alt="Version"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;An abstraction for themes in your Next.js app.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
‚úÖ Perfect dark mode in 2 lines of code&lt;/li&gt;
&lt;li&gt;
‚úÖ System setting with prefers-color-scheme&lt;/li&gt;
&lt;li&gt;
‚úÖ Themed browser UI with color-scheme&lt;/li&gt;
&lt;li&gt;
‚úÖ No flash on load (both SSR and SSG)&lt;/li&gt;
&lt;li&gt;
‚úÖ Sync theme across tabs and windows&lt;/li&gt;
&lt;li&gt;
‚úÖ Disable flashing when changing themes&lt;/li&gt;
&lt;li&gt;
‚úÖ Force pages to specific themes&lt;/li&gt;
&lt;li&gt;
‚úÖ Class or data attribute selector&lt;/li&gt;
&lt;li&gt;
‚úÖ &lt;code&gt;useTheme&lt;/code&gt; hook&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check out the &lt;a href="https://next-themes-example.vercel.app/" rel="nofollow"&gt;Live Example&lt;/a&gt; to try it for yourself.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;$ npm install next-themes
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;
$ yarn add next-themes&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Use&lt;/h2&gt;
&lt;p&gt;You'll need a &lt;a href="https://nextjs.org/docs/advanced-features/custom-app" rel="nofollow"&gt;Custom &lt;code&gt;App&lt;/code&gt;&lt;/a&gt; to use next-themes. The simplest &lt;code&gt;_app&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// pages/_app.js&lt;/span&gt;

&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-v"&gt;MyApp&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; Component&lt;span class="pl-kos"&gt;,&lt;/span&gt; pageProps &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Component&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;...&lt;span class="pl-s1"&gt;pageProps&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;

&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt; &lt;span class="pl-v"&gt;MyApp&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Adding dark mode support takes 2 lines of code:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;ThemeProvider&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'next-themes'&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-v"&gt;MyApp&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; Component&lt;span class="pl-kos"&gt;,&lt;/span&gt; pageProps &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pacocoursey/next-themes"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-omatsuri"&gt;
  &lt;/a&gt;
  10. Omatsuri
&lt;/h3&gt;

&lt;p&gt;Omatsuri is a progressive web application with 12 open source frontend focused tools.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/rtivital"&gt;
        rtivital
      &lt;/a&gt; / &lt;a href="https://github.com/rtivital/omatsuri"&gt;
        omatsuri
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      PWA with 12 open source frontend focused tools
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Omatsuri app&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/rtivital/omatsuri./src/assets/logo-text.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sNx9PDhR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/rtivital/omatsuri./src/assets/logo-text.svg" alt="Logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Omatsuri is a progressive web application with 12 open source frontend focused tools. Omatsuri translates to ¬´festival¬ª from Japanese („ÅäÁ•≠„Çä) and here we have a small festival of applications. It was built with strong respect to your privacy ‚Äì you will never see ads and it does not include analytics services (or actually any services at all). You are highly encouraged to explore source code and use it in your projects.&lt;/p&gt;
&lt;h2&gt;
Quick links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rtivital/omatsuri./CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rtivital/omatsuri./CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Key features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fast non-blocking computations with web workers&lt;/li&gt;
&lt;li&gt;No tracking, no ads, no other server connections ‚Äì everything runs in browser only&lt;/li&gt;
&lt;li&gt;Full offline support&lt;/li&gt;
&lt;li&gt;Dark theme support&lt;/li&gt;
&lt;li&gt;All-in-one application for everyday tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Included Applications&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CSS Triangle Generator&lt;/li&gt;
&lt;li&gt;Color Shades Generator&lt;/li&gt;
&lt;li&gt;Gradient Generator&lt;/li&gt;
&lt;li&gt;Page Dividers Generator&lt;/li&gt;
&lt;li&gt;SVG compressor&lt;/li&gt;
&lt;li&gt;SVG to JSX converter&lt;/li&gt;
&lt;li&gt;Base64 encoder&lt;/li&gt;
&lt;li&gt;Realistic Fake Data Generator&lt;/li&gt;
&lt;li&gt;HTML/CSS Symbols Collection&lt;/li&gt;
&lt;li&gt;Lorem/Samuel/Poke Ipsum Generator&lt;/li&gt;
&lt;li&gt;CSS Cursor Properties&lt;/li&gt;
&lt;li&gt;JavaScript Events Keycodes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Local development&lt;/h2&gt;
&lt;p&gt;To‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/rtivital/omatsuri"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing üìà
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for beginner&lt;/a&gt; +1,131 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +773 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +579 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/csswizardry/ct"&gt;ct.css&lt;/a&gt; +537 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vercel/next.js"&gt;Next.js&lt;/a&gt; +504 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/aralroca/fragstore"&gt;Fragstore&lt;/a&gt; +152%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/csswizardry/ct"&gt;ct.css&lt;/a&gt; +74%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/CharlesStover/use-mui"&gt;use-mui&lt;/a&gt; +42%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/keiya01/react-performance-testing"&gt;React Peformance Testing&lt;/a&gt; +24%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vizzuhq/vizzu-lib"&gt;Vizzu&lt;/a&gt; +22%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/louislam/uptime-kuma"&gt;Uptime Kuma&lt;/a&gt; +4,925 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +4,206 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +4,070 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +2,994 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +2,596 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/KilledByAPixel/LittleJS"&gt;LittleJS&lt;/a&gt; +160%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/csswizardry/ct"&gt;ct&lt;/a&gt; +157%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ebs-integrator/ebs-design"&gt;EBS Design&lt;/a&gt; +152%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/louislam/uptime-kuma"&gt;Uptime Kuma&lt;/a&gt; +121%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +113%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>sifting thru the types</title>
      <author>Matthew</author>
      <pubDate>Fri, 05 Nov 2021 14:33:21 +0000</pubDate>
      <link>https://dev.to/mtfoley/sifting-thru-the-types-5e2p</link>
      <guid>https://dev.to/mtfoley/sifting-thru-the-types-5e2p</guid>
      <description>&lt;p&gt;Flow state is a rare treat for me these days. The last time I can remember being in that zone was working on a &lt;a href="https://github.com/graphql/graphiql"&gt;GraphiQL&lt;/a&gt; implementation for Open Sauced, &lt;a href="https://explore.opensauced.pizza"&gt;https://explore.opensauced.pizza&lt;/a&gt;. The Open Sauced project makes use of &lt;a href="https://onegraph.com"&gt;OneGraph&lt;/a&gt;, to handle authentication and persisted query features in working with the &lt;a href="https://docs.github.com/en/graphql"&gt;GitHub GraphQL API&lt;/a&gt;. This was the first I had worked on any kind of GraphiQL implementation, so for those of you at the point I was at then, GraphiQL is an Open Source project that can be used to interact with a GraphQL API in an ad-hoc and dynamic way, allowing a developer to iterate quickly on features from a data retrieval standpoint. This post is about the &lt;a href="https://github.com/open-sauced/explore.opensauced.pizza/pull/2"&gt;PR #2&lt;/a&gt; in the repo.&lt;/p&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/0vortex"&gt;@0vortex&lt;/a&gt;
 had laid a lot of the groundwork for this implementation and as he brought myself and &lt;a class="mentioned-user" href="https://dev.to/bdougieyo"&gt;@bdougieyo&lt;/a&gt;
 up to speed on the where things were at, the problem to solve was having too much stuff to interact with.  OneGraph brings a lot of value to the table in working with GraphQL, and this is evident in the number and breadth of APIs that it works with. For some reference, take a look at this image (or play with their GraphiQL tool). &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--73HJaY3F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qutuu4v0j37sf7asndp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--73HJaY3F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qutuu4v0j37sf7asndp.png" alt="OneGraph GraphiQL Screenshot" width="444" height="539"&gt;&lt;/a&gt;&lt;br&gt;
The vision for &lt;a href="https://explore.opensauced.pizza"&gt;https://explore.opensauced.pizza&lt;/a&gt; was to have a rapid prototyping tool &lt;em&gt;specific to Open Sauced&lt;/em&gt;, and that's why having all these other services in the explorer tool is too much. We also wanted to let users quickly reproduce the queries we use in Open Sauced so that when a feature calls for an adjustment - this way, when its time to iterate on an existing feature, there's very little friction to finding that starting point. For reference, here's what the Explorer portion on our implementation looks like.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tLy3SbIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2y50grwgdnhzdn5cegl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tLy3SbIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2y50grwgdnhzdn5cegl.png" alt="explore.opensauced.pizza screenshot" width="444" height="212"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before I forget to explain this part, the flow state came from the fun challenge of chopping up OneGraph's GraphQL schema, on the client side. I searched around, and I really couldn't find any practical examples of this.  So now I got to venture into data science-y territory of manipulating a dataset iteratively :-) &lt;/p&gt;

&lt;p&gt;When you look at a GraphQL result of an introspection query (where a GraphQL endpoint describes itself), it's mainly a long flat list of "types". These types refer to each other in different ways, and the GraphiQL tool uses all of this data to build up a dynamic UI to work with valid GraphQL queries. Also, a GraphQL schema gets validated in handling all of the cross references and such. In order to get things the way we wanted it, we needed to modify the schema to only include the pieces we absolutely needed. I tried unsuccessfully to take the approach of picking the parts of the schema I wanted and followed the links outward to extrapolate the required parts. Don't remember exactly why but it DID NOT WORK. So I settled on the opposite - tear out the parts I didn't want and work with whatever was left. This explains the wicked long regex I used!&lt;/p&gt;

&lt;p&gt;Normally, the way GraphiQL React components would work with the schema would be something like this line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;buildClientSchema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But instead, the way the changes read:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// To modify schema, we follow this process:&lt;/span&gt;
&lt;span class="c1"&gt;// 1) Remove all the types we don't want, based on regex match&lt;/span&gt;
&lt;span class="c1"&gt;// 2) Strip out all of the dependencies that matched the same regex&lt;/span&gt;
&lt;span class="c1"&gt;// 3) Remove types of kind=OBJECT that have had their fields emptied out (to satisfy schema validation)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filteredTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;types&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nodeBlackListFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stripPrefixedDeps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emptyObjectFilterFn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filteredData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;__schema&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;filteredTypes&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;buildClientSchema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filteredData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now utility functions that make this work:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blacklistRe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;adroll|airtable|apollo|asana|box|brex|bundlephobia|chargebee|clearbit|cloudflare|contentful|crunchbase|descuri|devTo|dribbble|dropbox|eggheadio|emailNode|eventil|facebookBusiness|fedex|firebase|google|googleAds|hubspot|immigrationGraph|intercom|logdna|mailchimp|meetup|mixpanel|mux|netlify|notion|npm|openCollective|orbit|productHunt|quickbooks|rss|salesforce|slack|spotify|stripe|trello|twilio|twitchTv|twitter|ups|usps|ynab|youTube|youTubeSearch|youTubeVideo|zeit|zendesk&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;typeBlackListFn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;blacklistRe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;blacklistRe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ofType&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ofType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;blacklistRe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ofType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Filter function for picking things that are not blacklisted&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nodeBlackListFn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;blacklistRe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;blacklistRe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Strips out dependencies that are blacklisted&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripPrefixedDeps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fields&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;typeBlackListFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;inputFields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputFields&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;typeBlackListFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputFields&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;possibleTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;possibleTypes&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;possibleTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;typeBlackListFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;possibleTypes&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="c1"&gt;// Removes OBJECT types that have had all of their fields stripped out.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emptyObjectFilterFn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;OBJECT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There was one other feature in the same PR, that I'll talk about next week!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>graphql</category>
      <category>opensource</category>
      <category>node</category>
    </item>
    <item>
      <title>3 things to note when you design an App</title>
      <author>Kiran S Baliga</author>
      <pubDate>Fri, 05 Nov 2021 14:30:29 +0000</pubDate>
      <link>https://dev.to/kiransbaliga/3-things-to-note-when-you-design-an-app-5g9b</link>
      <guid>https://dev.to/kiransbaliga/3-things-to-note-when-you-design-an-app-5g9b</guid>
      <description>&lt;p&gt;We all are self taught developer. We all use different methods.. but for sure we practice by building what we learned. Let it be a simple web app or an mobile app. If you just put a little extra effort to make your design better with these tips, your app is going to standout.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#let-me-demonstrate"&gt;
  &lt;/a&gt;
  let me demonstrate...
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SSblyVX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mazajrpt8hvmm3tckt8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SSblyVX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mazajrpt8hvmm3tckt8.jpg" alt="calculator" width="880" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes! Both are simple calculator apps. It is one of the most basic apps in your phones. But If you were to download one which one are you gonna choose the first or second? and why?&lt;/p&gt;

&lt;p&gt;As you can guess my point, I would and many other choose the second one, why did I chose that? its aesthetically pleasing. simply put, it looks good.&lt;/p&gt;

&lt;p&gt;Now what about this one? (I know this was discussed by so many but still..)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JUzElo23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7r5kwrvig2otstk8dqox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JUzElo23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7r5kwrvig2otstk8dqox.png" width="880" height="933"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Individually if you look the google app's logo, its great. It matches with the google logo. But when it is together in your screen, its so unpleasant. &lt;/p&gt;

&lt;p&gt;Meanwhile apple's simple and distinctive logos makes us easier to select an app. And if we talk about apple.. there is so much. Apple is very strong in terms of its UI / UX designs.&lt;br&gt;
this article wont be enough to write about it and I am not even an I-phone or Mac user.. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-how-can-you-improve-your-ui"&gt;
  &lt;/a&gt;
  So how can you improve your UI?
&lt;/h2&gt;

&lt;p&gt;While you always build your apps you must create a balance between UI and UX.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-1"&gt;
  &lt;/a&gt;
  Tip 1
&lt;/h2&gt;

&lt;p&gt;Most of you already does this.. if not you should really!!&lt;/p&gt;

&lt;p&gt;Before you start coding always develop a prototype design. design its UI components.&lt;br&gt;
There are so many tools to help you workflow like Figma, Adobe Xd&lt;br&gt;
I recommend &lt;a href="https://www.figma.com"&gt;Figma&lt;/a&gt; cause its free and runs on your browser.&lt;br&gt;
It's really easy to &lt;a href="https://www.youtube.com/watch?v=lg7w3Ntfqy0"&gt;learn figma&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I-1gOX6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.sequoiacap.com/img/c/figma-gif.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I-1gOX6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.sequoiacap.com/img/c/figma-gif.gif" alt="figma" width="600" height="407"&gt;&lt;/a&gt;&lt;br&gt;
Basically before you build an app, build it UI cleanly with all the components and selecting proper colours, effects like blur, transparency etc.. This is going to save you lot of time because you have this as a reference while you code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-2"&gt;
  &lt;/a&gt;
  Tip 2
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#fonts"&gt;
  &lt;/a&gt;
  Fonts
&lt;/h3&gt;

&lt;p&gt;Always try to stay consistent with your fonts. Maintain the same font size throughout the app.&lt;/p&gt;

&lt;p&gt;Choose a headline size both contrasting with the body text and fitting on average 2‚Äì3 lines.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rVbnaE1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AMi5ylDkTglOfUK8apXqQyg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rVbnaE1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AMi5ylDkTglOfUK8apXqQyg.png" alt="font" width="880" height="572"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-3"&gt;
  &lt;/a&gt;
  Tip 3
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#colours"&gt;
  &lt;/a&gt;
  Colours
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The colors must ensure a clear visual Hierarchy of UI elements. The user should be able to tell which elements of your UI are interactive and how they relate to the other elements on the screen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Text and icons should be legible relative to the background they are placed on. Ensure that white text is not placed on a light background and vice versa, for example&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strategically use the color you have picked for your brand to reinforce your brand visually without overdoing it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O382tpVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/282/1%2A33kejA69um5oRyg9gKQO2A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O382tpVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/282/1%2A33kejA69um5oRyg9gKQO2A.png" alt="netflix" width="282" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it with these simple tips you can make your app look good.&lt;/p&gt;

&lt;p&gt;What about you? What all do you do when you design an app?&lt;br&gt;
let me know... I would love to hear it...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#carpe-diem"&gt;
  &lt;/a&gt;
  &lt;em&gt;carpe diem&lt;/em&gt;‚ú®&lt;br&gt;&lt;br&gt;
&lt;/h2&gt;

&lt;pre&gt;
    ‚ù§Ô∏è &lt;a href="https://kiransbaliga.me"&gt;Portfolio&lt;/a&gt;  |  üì∑&lt;a href="https://www.instagram.com/kiransbaliga"&gt;Instagram &lt;/a&gt;  |  üíº&lt;a href="https://www.linkedin.com/in/kiransbaliga"&gt;LinkedIn&lt;/a&gt;   |  üê•&lt;a href="https://twitter.com/kiransbaliga"&gt;Twitter&lt;/a&gt;    
&lt;/pre&gt;

</description>
      <category>ux</category>
      <category>design</category>
      <category>android</category>
      <category>flutter</category>
    </item>
    <item>
      <title>Using the Twitter API with¬†NodeJS</title>
      <author>Saji Wang</author>
      <pubDate>Fri, 05 Nov 2021 14:22:32 +0000</pubDate>
      <link>https://dev.to/codesphere/using-the-twitter-api-with-nodejs-4p3c</link>
      <guid>https://dev.to/codesphere/using-the-twitter-api-with-nodejs-4p3c</guid>
      <description>&lt;p&gt;There was a &lt;a href="https://www.pewresearch.org/internet/2018/04/09/bots-in-the-twittersphere/"&gt;study&lt;/a&gt; done by Pew Research a number of years ago that found that ‚Öî of all tweets with links to popular websites. To the average Twitter user that probably doesn't come as a surprise.&lt;/p&gt;

&lt;p&gt;Twitter is incredibly easy to automate, in fact, today I'm going to show you just how easy it is to use the Twitter API with NodeJS to read, search, and post tweets.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setup-your-twitter-dev%C2%A0account"&gt;
  &lt;/a&gt;
  Setup Your Twitter Dev¬†Account
&lt;/h3&gt;

&lt;p&gt;Because of the sheer volume of Twitter bots, Twitter requires an application before you can use their API. While you can start using your API key as soon as you submit the application, some features might be restricted until it is reviewed.&lt;/p&gt;

&lt;p&gt;Apply here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.twitter.com/en/apply-for-access"&gt;https://developer.twitter.com/en/apply-for-access&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your application is complete, navigate to your developer dashboard and create a new application. Once, you generate your application, go to settings and make sure to turn on Read and Write Permissions:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--adhR4acK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3u499mgv65ww1cq3kk0v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--adhR4acK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3u499mgv65ww1cq3kk0v.png" alt="app permissions" width="880" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, head to the keys menu, and generate and copy your API and Access tokens. We'll use them to authenticate next.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setting-up-our%C2%A0script"&gt;
  &lt;/a&gt;
  Setting Up Our¬†Script
&lt;/h3&gt;

&lt;p&gt;Since we're going to be using NodeJS to work with the Twitter API, create a new NPM project with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And go through the standard questions. Next, we are going to install a great wrapper for the Twitter Developer API. While this isn't necessary, it will make authentication much cleaner.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install twitter-api-v2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once that's done, we can create and authenticate our client like so:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;And of course, fill in the relevant API keys and tokens for your app.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pulling-and-posting%C2%A0tweets"&gt;
  &lt;/a&gt;
  Pulling and Posting¬†Tweets
&lt;/h3&gt;

&lt;p&gt;Now let's showcase some of the API calls you can make.&lt;br&gt;
To get data about a tweet from its ID:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;In the tweet.fields you can put all the specific data you want. To get a full list of all the parameters you can use:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.twitter.com/en/docs/api-reference-index"&gt;https://developer.twitter.com/en/docs/api-reference-index&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To tweet something out programmatically:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;And there you go!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QMJs0zuP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rh1gv04j9ssvpyuvzyeb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QMJs0zuP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rh1gv04j9ssvpyuvzyeb.png" alt="tweet" width="880" height="148"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use Cases
&lt;/h3&gt;

&lt;p&gt;Virtually anything that you might do normally on Twitter can be done through the API. That means that any automation you might want to do is completely possible. This includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automated Run Accounts&lt;/li&gt;
&lt;li&gt;Automatically retweet certain articles based on hashtags(Aggregation accounts)&lt;/li&gt;
&lt;li&gt;Track trendings topics for algorithmic trading&lt;/li&gt;
&lt;li&gt;Sentiment Analysis on tweets&lt;/li&gt;
&lt;li&gt;Data analysis for your company's Twitter campaigns&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;So what are you going to build? Let us know down below!&lt;/p&gt;

&lt;p&gt;If you're looking for a place to host your Twitter bot, try coding, debugging, and deploying on &lt;a href="https://link.codesphere.com/FG"&gt;Codesphere&lt;/a&gt;, the most intuitive cloud provider on the market.&lt;/p&gt;

</description>
      <category>node</category>
      <category>twitter</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Free eBook for React Optimization and Dev Resources</title>
      <author>Nilanth</author>
      <pubDate>Fri, 05 Nov 2021 13:58:58 +0000</pubDate>
      <link>https://dev.to/nilanth/free-ebook-for-react-optimization-and-dev-resources-2ahk</link>
      <guid>https://dev.to/nilanth/free-ebook-for-react-optimization-and-dev-resources-2ahk</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ug3OuSZs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er0vbdeoxdm5dp5qo2xv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ug3OuSZs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er0vbdeoxdm5dp5qo2xv.png" alt="ebook" width="880" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReactJS Optimization Techniques and Development Resources&lt;/strong&gt; ebook helps you to optimize your React App during the development stage using some open-source packages and avoid unexpected issues during production üöÄ.&lt;/p&gt;

&lt;p&gt;This also has a number of React development resources for&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;10+ Hosting&lt;/strong&gt; services&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;10K Plus&lt;/strong&gt; Open source UI Components List and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;15+ Custom Hooks&lt;/strong&gt; to fasten your development.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Grab your Copy now on &lt;strong&gt;&lt;a href="https://nilanth.gumroad.com/l/NYkdN"&gt;Gumroad&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download the Ebook for free&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Get more updates on &lt;a href="https://twitter.com/Nilanth"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blogs"&gt;
  &lt;/a&gt;
  Blogs
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/how-to-structure-your-react-redux-app-4d24"&gt;How to Structure Your React Redux App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/how-to-reduce-react-app-loading-time-by-70-1kmm"&gt;How to Reduce React App Loading Time By 70%&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/build-a-portfolio-using-next-js-tailwind-and-vercel-4dd8"&gt;Build a Portfolio Using Next.js, Tailwind, and Vercel with Dark Mode Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/no-more-import-in-react-2mbo"&gt;No More ../../../ Import in React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/10-react-packages-with-1k-ui-components-2bf3"&gt;10 React Packages with 1K UI Components
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/5-packages-to-optimize-and-speed-up-your-react-app-during-development-4h5f"&gt;5 Packages to Optimize and Speed Up Your React App During Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/how-to-use-axios-in-an-optimized-and-scalable-way-with-react-518n"&gt;How To Use Axios in an Optimized and Scalable Way With React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/15-custom-hooks-to-make-your-react-component-lightweight-17cd"&gt;15 Custom Hooks to Make your React Component Lightweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/10-ways-to-host-your-react-app-for-free-27ga"&gt;10 Ways to Host Your React App For Free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/how-to-secure-jwt-in-a-single-page-application-cko"&gt;How to Secure JWT in a Single-Page Application&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Another Gatsby cheat sheet</title>
      <author>Œá≈ø</author>
      <pubDate>Fri, 05 Nov 2021 13:33:21 +0000</pubDate>
      <link>https://dev.to/jmau111/another-gatsby-cheat-sheet-5ep7</link>
      <guid>https://dev.to/jmau111/another-gatsby-cheat-sheet-5ep7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#concepts"&gt;
  &lt;/a&gt;
  Concepts
&lt;/h2&gt;

&lt;p&gt;Gatsby is a phenomenal framework that abstracts cutting edge technologies.&lt;/p&gt;

&lt;p&gt;
  React hydration
  &lt;br&gt;
Gatsby uses React DOM server-side APIs to generate static HTML contents and those pages eventually get rehydrated into a React application. Some of the same JavaScript code used to generate Gatsby pages is reused in the browser where DOM APIs like window are available.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  GraphQL
  &lt;br&gt;
Gatsby uses &lt;a href="https://www.gatsbyjs.com/docs/conceptual/graphql-concepts/"&gt;this query language&lt;/a&gt; to make data available in the browser when needed by your components.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Webpack
  &lt;br&gt;
Gatsby uses &lt;a href="https://www.gatbsyjs.com/docs/conceptual/gatsby-jargon/#webpack"&gt;this JavaScript module bundler&lt;/a&gt;.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Routing
  &lt;br&gt;
The mechanism for loading the correct content in a website or app based on a network request - usually a URL. Gatsby creates paths to access content and handles dynamic routing with content prefetching under the hood.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Plugins
  &lt;br&gt;
&lt;a href="https://www.gatbsyjs.com/docs/conceptual/gatsby-jargon/#plugins"&gt;Node.js packages&lt;/a&gt; that implement Gatsby APIs to add extra functionality to a Gatsby site.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Themes
  &lt;br&gt;
Themes are a particular type of plugins with their own &lt;code&gt;gatsby-config.js&lt;/code&gt;. &lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Theme shadowing
  &lt;br&gt;
You can override components, objects, and anything else in any theme‚Äôs src directory. You'll find &lt;a href="https://www.gatbsyjs.com/docs/conceptual/how-shadowing-works/"&gt;more details here&lt;/a&gt;.&lt;br&gt;


&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#v2-to-v3"&gt;
  &lt;/a&gt;
  v2 to v3
&lt;/h2&gt;

&lt;p&gt;V3 is a major version that comes with breaking changes.&lt;/p&gt;

&lt;p&gt;
  Update Gatsby
  &lt;br&gt;
    &lt;code&gt;yarn add gatsby@latest&lt;/code&gt;&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Update all other dependencies
  &lt;br&gt;
    &lt;code&gt;yarn upgrade-interactive --latest&lt;/code&gt;&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  The official guide
  &lt;br&gt;
The Gatsby community is crazy good at writing documentation. You can &lt;a href="https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v2-to-v3/"&gt;read the migration guide&lt;/a&gt;&lt;br&gt;


&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#core-files"&gt;
  &lt;/a&gt;
  Core files
&lt;/h2&gt;

&lt;p&gt;
  gatsby-config.js
  &lt;br&gt;
The main configuration file that contains:

&lt;ul&gt;
&lt;li&gt;  the list of plugins and themes (NPM packages, local plugins, etc)&lt;/li&gt;
&lt;li&gt;  the siteMetadata object&lt;/li&gt;
&lt;li&gt;  some mappings
&lt;/li&gt;
&lt;/ul&gt;




&lt;/p&gt;
&lt;p&gt;
  gatsby-node.js
  &lt;br&gt;
Gatsby loads that file after the plugins, the cache, the bootstrap, and the GraphQL scheme. You get access to the &lt;code&gt;CreatePages&lt;/code&gt; API to add your custom nodes (~ URLs).&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  gatsby-ssr.js
  &lt;br&gt;
That file controls a special step, when Gatsby handles by itself the equivalent of a node server (~ compilation) to transform React code into static HTML assets. You get access to &lt;a href="https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/"&gt;SSR APIs&lt;/a&gt;.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  gatsby-browser.js
  &lt;br&gt;
&lt;a href="https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser/"&gt;Browser APIs&lt;/a&gt; let you respond to Gatsby-specific events within the browser. This is where you can interact with the client side.&lt;br&gt;


&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#plugins"&gt;
  &lt;/a&gt;
  Plugins
&lt;/h2&gt;

&lt;p&gt;Gatsby has a strong ecosystem with &lt;a href="https://www.gatsbyjs.com/plugins"&gt;helpful plugins&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;
  Adding a plugin
  &lt;br&gt;
Install the node package and open the &lt;code&gt;gatsby-config.js&lt;/code&gt; file:&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;siteMetadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gatsby-plugin-image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Note that you can have additional lines for the plugin configuration&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
  Must-have plugins
  &lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-manifest/"&gt;Gatsby plugin manifest&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-offline/"&gt;Gatsby plugin offline&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-image/"&gt;Gatsby plugin image&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-react-helmet/"&gt;Gatsby plugin react helmet&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-source-filesystem/"&gt;Gatsby source filesystem&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-sass/"&gt;Gatsby plugin sass&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's a plugin for Google Analytics if you need too.&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
  Best plugins for alternative approaches
  &lt;br&gt;
    Use this list with caution and check the compatibility with the v3 before.

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-preact/"&gt;Gatsby plugin preact&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-purgecss/"&gt;Gatsby plugin purge css&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-no-javascript/"&gt;Gatsby plugin no javascript&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#cli"&gt;
  &lt;/a&gt;
  CLI
&lt;/h2&gt;

&lt;p&gt;
  Create the next big thing with Gatsby
  &lt;br&gt;
    Start with &lt;code&gt;gatsby new the-next-big-thing&lt;/code&gt;&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Start a new dev server
  &lt;br&gt;
    Run &lt;code&gt;gatsby develop -o&lt;/code&gt;, the &lt;code&gt;-o&lt;/code&gt; option opens the site in the browser as a new tab.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Delete the cache and the public folder
  &lt;br&gt;
    Run &lt;code&gt;gatsby clean&lt;/code&gt;.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Build the site
  &lt;br&gt;
    Run &lt;code&gt;gatsby build&lt;/code&gt;.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Serve the build
  &lt;br&gt;
    Run &lt;code&gt;gatsby serve -o&lt;/code&gt;, the &lt;code&gt;-o&lt;/code&gt; option opens the site in the browser as a new tab.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  Test the site locally on a real mobile phone
  &lt;br&gt;
    Run &lt;code&gt;gatsby develop -H 0.0.0.0 -p 8000&lt;/code&gt;&lt;br&gt;


&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flags"&gt;
  &lt;/a&gt;
  Flags
&lt;/h2&gt;

&lt;p&gt;You can add flags in your config to customize your dev experience:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// In your gatsby-config.js&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;FAST_DEV&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;
  PRESERVE_WEBPACK_CACHE
  &lt;br&gt;
    to keep webpack‚Äôs cache when changing &lt;code&gt;gatsby-node.js&lt;/code&gt; &amp;amp; &lt;code&gt;gatsby-config.js&lt;/code&gt; files because you rarely need to delete it&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  FAST_DEV
  &lt;br&gt;
    to improve dev server start time&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  DEV_SSR
  &lt;br&gt;
    to detect SSR bugs and fix them without having to build&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  QUERY_ON_DEMAND
  &lt;br&gt;
    to only run queries when needed instead of running all queries upfront&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  LAZY_IMAGES
  &lt;br&gt;
    to skip process images during development until there‚Äôs an explicit request for them from the browser&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  PRESERVE_FILE_DOWNLOAD_CACHE
  &lt;br&gt;
    to keep the downloaded files cache when changing &lt;code&gt;gatsby-node.js&lt;/code&gt; &amp;amp; &lt;code&gt;gatsby-config.js&lt;/code&gt; files because, again, you rarely need to re-download them&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  FAST_REFRESH
  &lt;br&gt;
    to use React Fast Refresh instead of the legacy react-hot-loader for instantaneous feedback&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  PARALLEL_SOURCING
  &lt;br&gt;
    to run all source plugins at the same time instead of serially&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;
  FUNCTIONS
  &lt;br&gt;
    Serverless functions for Gatsby cloud&lt;br&gt;


&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-from-cms"&gt;
  &lt;/a&gt;
  Source from CMS
&lt;/h2&gt;

&lt;p&gt;Gastby can source from various CMS and APIs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wordpress"&gt;
  &lt;/a&gt;
  WordPress
&lt;/h3&gt;

&lt;p&gt;Gatsby can connect to WordPress through GraphQL to query contents.&lt;/p&gt;

&lt;p&gt;See &lt;a href="https://github.com/jmau111/demo-gatsby-v3-wordpress"&gt;Gatsby demo v3 - WordPress&lt;/a&gt;. Read the installation guide carefully.&lt;/p&gt;

</description>
      <category>gatsby</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Responsive Personal Portfolio Website with HTML CSS JS - Part 3</title>
      <author>Sadee</author>
      <pubDate>Fri, 05 Nov 2021 13:12:34 +0000</pubDate>
      <link>https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-3-2m6a</link>
      <guid>https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-3-2m6a</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qnjvpzh0fKI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Responsive personal portfolio website with html css js&lt;/p&gt;

&lt;p&gt;In this video series, &lt;br&gt;
I will show you how to build a Complete Responsive Personal Portfolio Website using HTML CSS JavaScript. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#website-features"&gt;
  &lt;/a&gt;
  üåü Website features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;5 pages&lt;/li&gt;
&lt;li&gt;Fully Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Awesome Page Navigation&lt;/li&gt;
&lt;li&gt;Filterable item showcase&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;HI üëã&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel üëá&lt;/p&gt;

&lt;p&gt;üì∫ My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
üîî Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
üïê New videos Every Friday &amp;amp; Tuesday&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  üìπ Recommended Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-1-3dlg"&gt;Part 1&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-2-l5"&gt;Part 2&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  üîó Essential links
&lt;/h2&gt;

&lt;p&gt;Images : &lt;a href="https://drive.google.com/file/d/1CZZcnaOEVDDneSve6qpSUoyAfEBuPrqD/view"&gt;image.zip&lt;/a&gt;&lt;br&gt;
Font : &lt;a href="https://fonts.google.com/specimen/Poppins?query=poppins"&gt;Poppins&lt;/a&gt;&lt;br&gt;
Ionicon : &lt;a href="https://ionic.io/ionicons"&gt;https://ionic.io/ionicons&lt;/a&gt;&lt;br&gt;
How to use ionicon : &lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;https://youtu.be/TTrYjLOJeKs&lt;/a&gt;&lt;br&gt;
Source Code : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#timestamp"&gt;
  &lt;/a&gt;
  ‚è±Ô∏è Timestamp
&lt;/h2&gt;

&lt;p&gt;0:00 - Demo&lt;br&gt;
1:05 - Portfolio section&lt;br&gt;
11:09 - Media queries&lt;br&gt;
13:03 - Portfolio filter functionality&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  üë§ Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Consulting, Heuristics, and Engineering w/ Jo√£o Rosa</title>
      <author>Mikhail Karan</author>
      <pubDate>Fri, 05 Nov 2021 13:07:57 +0000</pubDate>
      <link>https://dev.to/mikhailkaran/consulting-heuristics-and-engineering-w-joao-rosa-111n</link>
      <guid>https://dev.to/mikhailkaran/consulting-heuristics-and-engineering-w-joao-rosa-111n</guid>
      <description>&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5Ta8Y66Fje6E8uSYXALWBt"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-html-all-the-things"&gt;
  &lt;/a&gt;
  What is HTML All The Things
&lt;/h2&gt;

&lt;p&gt;HTML All The Things is a &lt;a href="https://podcast.htmlallthethings.com/"&gt;web development podcast&lt;/a&gt; and &lt;a href="https://discord.com/invite/jweMCx9"&gt;discord community&lt;/a&gt; which was started by Matt and Mike, developers based in Ontario, Canada. &lt;/p&gt;

&lt;p&gt;The podcast speaks to web development topics as well as running a small business, self-employment and time management. You can join them for both their successes and their struggles as they try to manage expanding their Web Development business without stretching themselves too thin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#announcements"&gt;
  &lt;/a&gt;
  Announcements
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Svelte for Beginners&lt;/strong&gt; Udemy course is now live! Mike took his experience in teaching and learning Svelte and created a course. &lt;/p&gt;

&lt;p&gt;This course will teach you the fundamentals of JavaScript frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get it now on Udemy!&lt;/strong&gt; üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/svelte-for-beginners/?couponCode=HATTSALE"&gt;Svelte For Beginners&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-this-one-about"&gt;
  &lt;/a&gt;
  What's This One About?
&lt;/h2&gt;

&lt;p&gt;In this episode Matt and Mike sit down with Jo√£o Rosa, host of the Software Crafts Podcast, to discuss his unique career in the development industry. Jo√£o fulfills interim positions, such as CTO, at various companies as apart of his consultancy practice. He advises on strategic technology implementation and has also worked as a coordinator, software engineer, technical team lead, and more. He also has a passion for heuristics, which is uses alongside other design problems to challenge guests in his own podcast.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#guest-introduction"&gt;
  &lt;/a&gt;
  Guest Introduction
&lt;/h2&gt;

&lt;p&gt;Jo√£o is a Principal Consultant at a company called Xebia. As part of his consultancy practice, he fulfills interim positions, such as CTO, and also advises on strategic technology implementation. He has worked as a coordinator, CTO, software engineer, software architect and, technical team lead across different industries. He has also done numerous talks on topics such as Domain-Driven Design, DevOps, property-based testing, and many more. Then to top it all off, he is also a podcast host of his own show - the Software Crafts Podcast where he interviews guests on each episode, challenging them with a variety of heuristics and other design problems.&lt;/p&gt;

&lt;p&gt;Jo√£o's Links: (&lt;a href="https://www.softwarecraftspodcast.com/"&gt;Software Crafts Podcast&lt;/a&gt; | &lt;a href="https://twitter.com/joaoasrosa"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/joaoasrosa/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://www.joaorosa.io/"&gt;Website&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-notes"&gt;
  &lt;/a&gt;
  Show Notes
&lt;/h2&gt;

&lt;p&gt;3:00 - What is it like to jump into a CTO role?&lt;br&gt;
10:00 - Engineer vs Coordinator?&lt;br&gt;
15:30 - Minimum requirements for leading/mentoring as you become a senior engineer?&lt;br&gt;
19:00 - How important are technical skills vs soft skills?&lt;br&gt;
28:40 - Is it important to put in extra time for talks, blogs, etc?&lt;br&gt;
35:30 - How do you go about handling the software delivery experience?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-takeaways"&gt;
  &lt;/a&gt;
  Key Takeaways
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Senior Engineers should be able to teach/mentor. They don't need to lead teams but at least explain concepts and help developers ramp up.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an environment that allow for reteaming. Great documentation, onboarding process and readable code all allow for new team members to spin up quickly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Companies should allow employees to experiment and allow employees to do developer outreach &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you!
&lt;/h2&gt;

&lt;p&gt;If you're enjoying the podcast consider giving us a review on &lt;a href="https://podcasts.apple.com/us/podcast/html-all-things-web-development-web-design-small-business/id1412209136"&gt;Apple Podcasts&lt;/a&gt; or checking out our Patreon to get a shoutout on the podcast. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.patreon.com/htmlallthethings"&gt;Support us on Patreon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find us on all the podcast platforms out there as well as&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/htmlallthethings/"&gt;Instagram (@htmlallthethings)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/htmleverything"&gt;Twitter (@htmleverything)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tiktok.com/@htmlallthethings"&gt;TikTok (Html All The Things)&lt;/a&gt;&lt;/p&gt;

</description>
      <category>podcast</category>
    </item>
    <item>
      <title>UI Dev Newsletter #81</title>
      <author>Silvestar Bistroviƒá</author>
      <pubDate>Fri, 05 Nov 2021 13:02:03 +0000</pubDate>
      <link>https://dev.to/starbist/ui-dev-newsletter-81-3b32</link>
      <guid>https://dev.to/starbist/ui-dev-newsletter-81-3b32</guid>
      <description>&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bit.ly/31dGg5b"&gt;Lists&lt;/a&gt;&lt;br&gt;
Chrome Developers share a module where you will learn how to style all the parts of a list.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w4IUWl"&gt;#26 HTMHell special: tasty buttons&lt;/a&gt;&lt;br&gt;
Manuel Matuzoviƒá shares the second HTMHell special, which focuses on another highly controversial pattern in front-end development: the burger button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3my3WcR"&gt;Implementing Accessible UX for Your Business Site&lt;/a&gt;&lt;br&gt;
Zoho team shares a guide on navigating a website if visitors cannot use a mouse, listen to a video, or read text and graphics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3brQNf9"&gt;Why Outdated jQuery Is Still the Dominant JavaScript Library&lt;/a&gt;&lt;br&gt;
Richard MacManus tries to find out the latest on this jQuery, so he spoke to one of the developers who continues to maintain jQuery, Micha≈Ç Go≈Çƒôbiowski-Owczarek.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3CNj6AR"&gt;GitHub Command Palette&lt;/a&gt;&lt;br&gt;
GitHub team launched a command palette to navigate, search, and run commands directly from your keyboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3GEpv3v"&gt;30 HTML Snippets for the Most Frequently Used HTML Tasks&lt;/a&gt;&lt;br&gt;
Stephan Miller lists 30 commonly used HTML code snippets that might be helpful for any project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3pVyuHq"&gt;Blobity&lt;/a&gt;&lt;br&gt;
Georgy Marchuk shares a JavaScript plugin for taking the cursor to the next level.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3Bz9Pef"&gt;100 Best Free Fonts for Designers in 2021&lt;/a&gt;&lt;br&gt;
Awwwards team shares some nice fonts that are free to use, some for non-commercial use only, and some that have a free version available.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfpromotion"&gt;
  &lt;/a&gt;
  Self-promotion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3CxIn1y"&gt;Using CSS Variables for reduced motion on a global scale&lt;/a&gt;&lt;br&gt;
I have published an article where you could learn how to use CSS Variable and prefers-reduced-motion media feature to remove or minimize animations and transitions on a global scale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#around-the-web"&gt;
  &lt;/a&gt;
  Around the web
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3mzkeSY"&gt;The metaverse is bullshit&lt;/a&gt;&lt;br&gt;
Wes Fenlon explains why metaverse does sound like a worse version of the internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy coding!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://buttondown.email/starbist"&gt;Subscribe to the newsletter here!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Running multiple versions of a Stencil Design System without conflicts</title>
      <author>Andre Sander</author>
      <pubDate>Fri, 05 Nov 2021 12:39:27 +0000</pubDate>
      <link>https://dev.to/sanderand/running-multiple-versions-of-a-stencil-design-system-without-conflicts-2f46</link>
      <guid>https://dev.to/sanderand/running-multiple-versions-of-a-stencil-design-system-without-conflicts-2f46</guid>
      <description>&lt;p&gt;This post is about overcoming technical challenges produced when combining Microfrontend environments with reusable Web Components. While it focusses on Stencil component libraries, the presented concepts can be applied to non-Stencil Web Component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#microfrontend-environments-mfe"&gt;
  &lt;/a&gt;
  Microfrontend Environments (MFE)
&lt;/h2&gt;

&lt;p&gt;In a MFE different product teams work on separate features of a larger application. One team might be working on the search feature, while another team works on the product detail page. Ultimately, all features will be integrated together in the final application.&lt;/p&gt;

&lt;p&gt;These features range from being very independent to being closely coupled to other features on the page. Generally speaking, teams try to work as independently as possible, meaning also that they can choose which package dependencies or even frameworks they use - and which versions thereof.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-elements"&gt;
  &lt;/a&gt;
  Custom Elements
&lt;/h2&gt;

&lt;p&gt;Web Components are a popular way of sharing and reusing components across applications and JavaScript frameworks today. Custom Elements lie at the heart of Web Components. They can be registered like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You're now ready to use &lt;code&gt;&amp;lt;my-component&amp;gt;&lt;/code&gt; in the DOM. &lt;strong&gt;Please note that there can only be one Custom Element for a given tagName&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt;Let's imagine the following situation: The MFE features are supposed to reuse certain components; in this case the Web Components provided by the Design System (DS). The DS is being actively developed and exists in different versions.&lt;/p&gt;

&lt;p&gt;As each feature is independent, different teams might use different versions of the Design System. Separate features are developed in isolation and work fine with the provided version of the DS. Once multiple features are integrated in the large application we'll have multiple versions of the DS running. This causes naming conflicts because each Custom Element can only be registered once:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Feature-A uses &lt;code&gt;&amp;lt;my-component&amp;gt;&lt;/code&gt; in version &lt;code&gt;1.2.3&lt;/code&gt; and Feature-B uses &lt;code&gt;&amp;lt;my-component&amp;gt;&lt;/code&gt; in version &lt;code&gt;2.0.0&lt;/code&gt; üí•üí•üí•&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oops! Now what? How do we address this problem? Is there a technical solution? Or maybe a strategic solution? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#forcing-feature-teams-to-use-the-same-ds-version"&gt;
  &lt;/a&gt;
  Forcing feature teams to use the same DS version
&lt;/h3&gt;

&lt;p&gt;One way to address this issue is to let the "shell application" provide one version of the DS. All integrated features would no longer bring their own DS version, but make use of the provided one. We no longer have multiple DS versions running.&lt;/p&gt;

&lt;p&gt;In many complex environments this is not a good solution. It's unrealistic that all feature teams can align on one version. If upgrades need to be made, all teams would need to upgrade at the exact same time. In our situation &lt;strong&gt;dictating the version is not an option&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-design-system"&gt;
  &lt;/a&gt;
  The Design System
&lt;/h2&gt;

&lt;p&gt;The problem we're seeing is common when combining a complex MFE with reusable Custom Elements. It's not a problem created by reusable components themselves but rather by the MFE architecture. Nevertheless it is a problem that can be addressed by making small adjustments in the right places of the reusable components.&lt;/p&gt;

&lt;p&gt;Let's take a look at our Design System called "Things". It consists of various components. Some are quite independent i.e. &lt;code&gt;&amp;lt;th-icon&amp;gt;&lt;/code&gt; and some are somewhat interconnected i.e. &lt;code&gt;&amp;lt;th-tabs&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;th-tab&amp;gt;&lt;/code&gt;. The DS has been built with Stencil, which turned out to be a fantastic tool for building component libraries. Let's check out the tabs component and its usage:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0GULF9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gme6a444bf8ort8h6bk7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0GULF9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gme6a444bf8ort8h6bk7.png" alt="Picture of the tabs component" width="880" height="169"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;th-tabs&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;th-tab&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;First&lt;span class="nt"&gt;&amp;lt;/th-tab&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;th-tab&amp;gt;&lt;/span&gt;Second&lt;span class="nt"&gt;&amp;lt;/th-tab&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;th-tab&amp;gt;&lt;/span&gt;Third&lt;span class="nt"&gt;&amp;lt;/th-tab&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/th-tabs&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find the full code of the components in their initial state &lt;a href="https://github.com/Sanderand/dev-to-things-design-system/tree/6be6b89131d2ad0b05459ca8af8535772e55a87e/things/src/components"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-stencil-solution"&gt;
  &lt;/a&gt;
  A Stencil solution
&lt;/h2&gt;

&lt;p&gt;The first thing we'll do is enable the &lt;code&gt;transformTagName&lt;/code&gt; flag in our &lt;code&gt;stencil.config.ts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="na"&gt;extras&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;tagNameTransform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allows us to register Custom Elements with a custom prefix or suffix.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineCustomElements&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;things/loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// registers custom elements with tagName suffix&lt;/span&gt;
&lt;span class="nx"&gt;defineCustomElements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;transformTagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-v1`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great! Feature teams can now register their own custom instances of the components, avoiding conflicts with the CustomElementsRegistry! Alternatively, "shell application"  could provide version-specific instances of the DS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- using v1 version of the tabs component --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;th-tabs-v1&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/th-tabs-v1&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- using v2 version of the tabs component --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;th-tabs-v2&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/th-tabs-v2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's imagine having 2 versions available. Feature teams can now pick from the provided options without having to provide their own custom ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#were-not-done-yet"&gt;
  &lt;/a&gt;
  We're not done, yet
&lt;/h2&gt;

&lt;p&gt;Looking at &lt;code&gt;&amp;lt;th-tabs-v1&amp;gt;&lt;/code&gt; we can see that the icon component is no longer rendered. And the click handler even throws an error! So what's going on here? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k6234LDE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4xxtxaywtke6c6rflh5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6234LDE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4xxtxaywtke6c6rflh5.png" alt="Picture of the broken tabs component" width="880" height="155"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wherever a component references other components we will potentially run into problems because the referenced components might not exist.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;th-tab-v1&amp;gt;&lt;/code&gt; tries to render &lt;code&gt;&amp;lt;th-icon&amp;gt;&lt;/code&gt; internally, but &lt;code&gt;&amp;lt;th-icon&amp;gt;&lt;/code&gt; does not exist. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;th-tab-v1&amp;gt;&lt;/code&gt; tries to apply styles to the &lt;code&gt;th-icon&lt;/code&gt; selector which no longer selects anything&lt;/li&gt;
&lt;li&gt;on click, &lt;code&gt;&amp;lt;th-tab-v1&amp;gt;&lt;/code&gt; calls a function of &lt;code&gt;&amp;lt;th-tabs&amp;gt;&lt;/code&gt;, but &lt;code&gt;&amp;lt;th-tabs&amp;gt;&lt;/code&gt; does not exist&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;th-tabs-v1&amp;gt;&lt;/code&gt; provides a method &lt;code&gt;setActiveTab&lt;/code&gt; which no longer finds any &lt;code&gt;&amp;lt;th-tab&amp;gt;&lt;/code&gt; child element&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For every reference to another custom tagName we need to consider that the tagName might have been transformed using &lt;code&gt;transformTagName&lt;/code&gt;. As &lt;code&gt;transformTagName&lt;/code&gt; executes at runtime our component also need to figure out the correctly transformed tagNames during runtime. It would be great if Stencil provided a &lt;code&gt;transformTagName&lt;/code&gt; function that we could execute at runtime. Unfortunately, that's not the case. Instead, we can implement a (slightly ugly) solution ourselves.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#transformtagname-at-runtime"&gt;
  &lt;/a&gt;
  transformTagName at runtime
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transformTagName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tagNameToBeTransformed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;knownUntransformedTagName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;knownUntransformedTagNameElementReference&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actualCurrentTag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;knownUntransformedTagNameElementReference&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actualCurrentTag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;knownUntransformedTagName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;prefix&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;tagNameToBeTransformed&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function is not pretty. It requires 3 parameters to return a transformed tagName:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;tagNameToBeTransformed&lt;/code&gt;: tagName that we want to transform, i.e. &lt;code&gt;th-tabs&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;knownUntransformedTagName&lt;/code&gt;: untransformed tagName of another component, i.e. &lt;code&gt;th-tab&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;knownUntransformedTagNameElementReference:&lt;/code&gt; reference to element with that untransformed tagName, i.e &lt;code&gt;this.el&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Usage example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// file: tab.tsx&lt;/span&gt;

&lt;span class="nx"&gt;transformTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;th-tabs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;th-tab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 'th-tabs-v1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that &lt;code&gt;this.el&lt;/code&gt; is a reference to the host element of the Custom Element created by the &lt;a href="https://stenciljs.com/docs/host-element"&gt;Element Decorator&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#fixing-our-components"&gt;
  &lt;/a&gt;
  Fixing our components
&lt;/h2&gt;

&lt;p&gt;Using our &lt;code&gt;transformTagName&lt;/code&gt; function we're now able to figure out which tagName transformation needs to be considered during runtime.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typescript-call-expressions"&gt;
  &lt;/a&gt;
  TypeScript call expressions
&lt;/h3&gt;

&lt;p&gt;A Custom Element tagName may be referenced in &lt;code&gt;querySelector(tagName)&lt;/code&gt;, &lt;code&gt;closest(tagName)&lt;/code&gt;, &lt;code&gt;createElement(tagName)&lt;/code&gt; or other functions. Before we call these, we need to find out the transformed tagName.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// file: tab.tsx&lt;/span&gt;

&lt;span class="c1"&gt;// before&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tabsEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;closest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;th-tabs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// after&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ThTabs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;transformTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;th-tabs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;th-tab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tabsEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;closest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ThTabs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#jsx-element-rendering"&gt;
  &lt;/a&gt;
  JSX element rendering
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// file: tab.tsx&lt;/span&gt;

&lt;span class="c1"&gt;// before&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;th&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// after&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ThIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;transformTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;th-icon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;th-tab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 'th-tabs-v1'&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ThIcon&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;icon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note the &lt;code&gt;.icon&lt;/code&gt; class, which will be required for the next step.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-selectors"&gt;
  &lt;/a&gt;
  CSS selectors
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// file: tab.css&lt;/span&gt;

&lt;span class="c1"&gt;// before&lt;/span&gt;
&lt;span class="nt"&gt;wb-icon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* styles */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// after&lt;/span&gt;
&lt;span class="nc"&gt;.icon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* styles */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#wrapping-it-up"&gt;
  &lt;/a&gt;
  Wrapping it up
&lt;/h2&gt;

&lt;p&gt;We made it! With a few adjustments we prepared our codebase and components to support running in multiple versions at once. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fy4vLp4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8u09zuouawew0ibllj2g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fy4vLp4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8u09zuouawew0ibllj2g.png" alt="three variations of the tabs component" width="555" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Applying this concept we can not only run multiple versions of a Design System but really multiple versions of all sorts of reusable Custom Elements. This is a huge step for complex Microfrontend Environments. It gives feature teams more freedom in choosing the versions they want to use and releasing when they want to release. It avoids complex couplings between features (feature teams) and reduces coordination and communication efforts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-words"&gt;
  &lt;/a&gt;
  Last words
&lt;/h3&gt;

&lt;p&gt;You can find the full code of the referenced example project in &lt;a href="https://github.com/Sanderand/dev-to-things-design-system"&gt;this Github repo&lt;/a&gt;. The second commit shows all required adjustments to support tagName transformations.&lt;/p&gt;

</description>
      <category>webcomponent</category>
      <category>stencil</category>
      <category>javascript</category>
      <category>designsystem</category>
    </item>
    <item>
      <title>Coding with an accent</title>
      <author>Cheikh Tidjane Konteye</author>
      <pubDate>Fri, 05 Nov 2021 12:24:25 +0000</pubDate>
      <link>https://dev.to/wariored/coding-with-an-accent-1lei</link>
      <guid>https://dev.to/wariored/coding-with-an-accent-1lei</guid>
      <description>&lt;p&gt;After few years working in the software industry, I realized that most of the companies do not really care enough about conventions. They mostly focus on the "Getting Things Done" and keep using accent - sometimes unconsciously - in their code base which make the integration of newcomers very difficult.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#natural-languages-amp-software-languages"&gt;
  &lt;/a&gt;
  Natural Languages &amp;amp; Software Languages
&lt;/h2&gt;

&lt;p&gt;We use natural languages to communicate with humans as we use software languages to communicate with computers. The fact is when we code we do not communicate only with the computer but also with other coders. So basically we want other to understand what we do. &lt;br&gt;
 As you can feel the accent of a french native speaker speaking in English without respecting words pronunciations, you can also feel the accent of a developer from &lt;code&gt;Java&lt;/code&gt; world coding in &lt;code&gt;Python&lt;/code&gt; without respecting conventions. It's the same thing when a developer comes from technology A and apply its conventions to a technology B.&lt;br&gt;
In natural languages, accent is not that bad. However, it can provoke a big mess in software development.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#avoid-using-accent"&gt;
  &lt;/a&gt;
  Avoid using accent
&lt;/h2&gt;

&lt;p&gt;I one day worked on a project where the technology used was &lt;code&gt;Python/Django&lt;/code&gt;. The first time I joined the team - as usual - they gave me the requirements to read. After reading them and jumped into the project, I was a little lost. The project architecture did not respect the Django conventions and there were no documentation in the project saying it. It took me time to get into it and start coding. "Why you didn't use the default architecture?" "Is there any purpose on changing it?" I asked. "No, We've used to design like that" one of my teammate answered.&lt;br&gt;
 It was not the only weird thing I've found. For each python &lt;code&gt;.py&lt;/code&gt; files, there was only one &lt;code&gt;class&lt;/code&gt; that has the same name as the file. Then I realized those guys are from &lt;code&gt;Java&lt;/code&gt; or &lt;code&gt;C#&lt;/code&gt; where the convention is to have only one class for each file (required in Java, preferred in C#). In fact in those languages, files are not modules whereas they're in Python. So they were coding with &lt;code&gt;accent&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The following snippets shows two Python code: the first with accent (brought from &lt;code&gt;Golang&lt;/code&gt;) and the second with Python's conventions:&lt;/p&gt;

&lt;p&gt;Python code with Golang accent:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;

 &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Python code without accent:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
         &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"inputs should be digits"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;

 &lt;span class="c1"&gt;# Python doesn't use errors. It uses exceptions.
&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This shows how bad it is to code with &lt;code&gt;accent&lt;/code&gt;. It's because people usually don't read the official technologies documentations. They pick a technology and apply a foreign conventions to it. It makes the code harder to understand.&lt;/p&gt;

&lt;p&gt;Don't fall into the trap.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>I created a tool to check if your VPN still shows your IP Address or location using PHP</title>
      <author>Ayush Singh</author>
      <pubDate>Fri, 05 Nov 2021 11:57:32 +0000</pubDate>
      <link>https://dev.to/ayush_singh_dev/i-created-a-tool-to-check-if-your-vpn-still-shows-your-ip-address-or-location-using-php-1n6i</link>
      <guid>https://dev.to/ayush_singh_dev/i-created-a-tool-to-check-if-your-vpn-still-shows-your-ip-address-or-location-using-php-1n6i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About Me
&lt;/h2&gt;

&lt;p&gt;Hello my name is Ayush. I am from India. I create and sell sites and apps for a living. Sometimes I keep them too. This is the whole process of how I did it this time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-deciding-what-to-make"&gt;
  &lt;/a&gt;
  Step - 1 [Deciding What To Make]
&lt;/h2&gt;

&lt;p&gt;I recently discovered that you can sort all the keywords people are searching throughout the world in ahrefs and then sort them based on the KD or Keyword Difficulty. Using that I discovered a site recently stopped working and the search volume was good for the keyword so I decided to create a site for the Keyword &lt;strong&gt;&lt;a href="https://whatleaks.site/"&gt;WhatLeaks&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-creating-the-ui-for-site"&gt;
  &lt;/a&gt;
  Step - 2 [Creating the UI for site]
&lt;/h2&gt;

&lt;p&gt;I decided I am not going to make anything for this in the starting instead I will just edit css for a wordpress theme. So, I deployed wordpress on my cloud server and installed a theme by wordpress. &lt;/p&gt;

&lt;p&gt;I added this css to make sure the it is mobile responsive and doesn't look to basic on phone.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media (max-width:768px) {
  .custom-logo {
    display: none;
  }
}
table,td,tr,th{border-color:#1e73be;}

#enabled_js{color:green;}
.noscriptmsg{color:red;}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3-creating-content"&gt;
  &lt;/a&gt;
  Step - 3 [Creating Content]
&lt;/h2&gt;

&lt;p&gt;See SEO is important so I created relevant content for the users. Anyways this is just the boring part. Let's get to the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-showing-details-to-the-user-visiting"&gt;
  &lt;/a&gt;
  Step - 4 [Showing Details To The User Visiting]
&lt;/h2&gt;

&lt;p&gt;In this step I am going to show the code I used to get each detail in the table showing for each user.&lt;/p&gt;

&lt;p&gt;To get IP address I used this function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getRealIpAddr()
{
    if (!empty($_SERVER['HTTP_CLIENT_IP']))   //check ip from share internet
    {
      $ip=$_SERVER['HTTP_CLIENT_IP'];
    }
    elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR']))   //to check ip is pass from proxy
    {
      $ip=$_SERVER['HTTP_X_FORWARDED_FOR'];
    }
    else
    {
      $ip=$_SERVER['REMOTE_ADDR'];
    }
    return $ip;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get ip address get echo function_name anywhere you want.&lt;/p&gt;

&lt;p&gt;After that I has to get all the details till timezone. I used this site &lt;a href="https://freegeoip.app/json/"&gt;https://freegeoip.app/json/&lt;/a&gt; + User IP address to get all details till the timezone. Here's the code below,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$userIP = getRealIpAddr(); 

// API end URL 
$apiURL = 'https://freegeoip.app/json/'.$userIP; 

// Create a new cURL resource with URL 
$ch = curl_init($apiURL); 

// Return response instead of outputting 
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); 

// Execute API request 
$apiResponse = curl_exec($ch); 

// Close cURL resource 
curl_close($ch); 

// Retrieve IP data from API response 
$ipData = json_decode($apiResponse, true); 

if(!empty($ipData)){ 
    $country_code = $ipData['country_code']; 
    $country_name = $ipData['country_name']; 
    $region_code = $ipData['region_code']; 
    $region_name = $ipData['region_name']; 
    $city = $ipData['city']; 
    $zip_code = $ipData['zip_code']; 
    $latitude = $ipData['latitude']; 
    $longitude = $ipData['longitude']; 
    $time_zone = $ipData['time_zone']; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check if javascript is enabled or not I wrote disabled in noscript tag and if javascript is enabled then It will change it to enabled.&lt;/p&gt;

&lt;p&gt;To get DNS server address and Port I used this PHP code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$_SERVER['SERVER_ADDR']
$_SERVER['SERVER_PORT']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, I had to check the IP is blacklisted or not as the previous Whatleaks used to show that.&lt;/p&gt;

&lt;p&gt;I found this function online and somehow it worked after a few modifications.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function dnsbllookup($ip)
{
    // Add your preferred list of DNSBL's
    $dnsbl_lookup = [
        "dnsbl-1.uceprotect.net",
        "dnsbl-2.uceprotect.net",
        "dnsbl-3.uceprotect.net",
        "dnsbl.dronebl.org",
        "dnsbl.sorbs.net",
        "zen.spamhaus.org",
        "bl.spamcop.net",
        "list.dsbl.org"
    ];

    $listed = "";

    if ($ip) {
        $reverse_ip = implode(".", array_reverse(explode(".", $ip)));
        foreach ($dnsbl_lookup as $host) {
            if (checkdnsrr($reverse_ip . "." . $host . ".", "A")) {
                $listed .= $reverse_ip . '.' . $host . ' - &amp;lt;font color="red"&amp;gt;Listed&amp;lt;/font&amp;gt;&amp;lt;br /&amp;gt;';
            }
        }
    }
$listed2 ="'No record was not found'";
    if (empty($listed)) {
        return $listed2;
    } else {
       return $listed;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At last I wanted to show the user agent which is pretty easy to do in PHP. Here is what you have to write to get it. I am not sharing the entire code here. Just the PHP code to get user agent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$_SERVER['HTTP_USER_AGENT']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am going to show more and more info on each user soon. If you can please tell me what else should I show.&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
