<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Do you need a Automata Library ?</title>
      <author>ZigRazor</author>
      <pubDate>Tue, 28 Sep 2021 11:42:54 +0000</pubDate>
      <link>https://dev.to/zigrazor/do-you-need-a-automata-library-1i6m</link>
      <guid>https://dev.to/zigrazor/do-you-need-a-automata-library-1i6m</guid>
      <description>&lt;p&gt;In this day i see that there is no implementation of an Automata Library in &lt;strong&gt;C++&lt;/strong&gt;.&lt;br&gt;
I think it can be useful for the community start a new open-source project for this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-automaton"&gt;
  &lt;/a&gt;
  What is an Automaton?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;is a relatively self-operating machine, or control mechanism designed to automatically follow a properations, or respond to predetermined instructions. ( &lt;a href="https://en.wikipedia.org/wiki/Automaton"&gt;Wikipedia&lt;/a&gt; ).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-automata-theory"&gt;
  &lt;/a&gt;
  What is the Automata Theory?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T3J_IYPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywie65p4kcw1ncadjrov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T3J_IYPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywie65p4kcw1ncadjrov.png" alt="Classes of Automata"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Automata theory is the study of abstract machines and automata, as well as the computational problems that can be solved using them. ( &lt;a href="https://en.wikipedia.org/wiki/Automata_theory"&gt;Wikipedia&lt;/a&gt; )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-an-automata-library"&gt;
  &lt;/a&gt;
  Why an Automata Library?
&lt;/h2&gt;

&lt;p&gt;There are so much reason to develop an automata library, but the most important is the capability of study and solve computational problem that can be solved with an &lt;strong&gt;Automaton&lt;/strong&gt;. For Example there are a lot of study on &lt;strong&gt;Formal Languages Theory&lt;/strong&gt; that use the Automata.&lt;br&gt;
Moreover Automata find a major role in &lt;strong&gt;theory of computation&lt;/strong&gt;, &lt;strong&gt;compiler construction&lt;/strong&gt;, &lt;strong&gt;artificial intelligence&lt;/strong&gt;, &lt;strong&gt;parsing&lt;/strong&gt; and &lt;strong&gt;formal verification&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-c"&gt;
  &lt;/a&gt;
  Why C++?
&lt;/h2&gt;

&lt;p&gt;I thought about &lt;em&gt;C++&lt;/em&gt; for performance reasons. With large automata the performance of other languages ​​can be a bottleneck, so &lt;em&gt;C++&lt;/em&gt; can be a solution to this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;So do we need an &lt;strong&gt;Automata Library&lt;/strong&gt;? Maybe we do or maybe we don't but either way please let me know if you are interested in this project? I look forward to reading your comments.&lt;/p&gt;

&lt;p&gt;Thank you so much for reading.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>cpp</category>
      <category>opensource</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How to use the JavaScript += operator?</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 28 Sep 2021 11:33:24 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-use-the-javascript-operator-1fjh</link>
      <guid>https://dev.to/hrishikesh1990/how-to-use-the-javascript-operator-1fjh</guid>
      <description>&lt;p&gt;In this tutorial, we look at how to use the JavaScript += operator. We explain its use-case and break down the code to allow further learning.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-javascript-"&gt;
  &lt;/a&gt;
  Table of Contents - JavaScript +=
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-does-mean-in-javascript"&gt;What does += mean in JavaScript?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#syntax-code-amp-explanation"&gt;Syntax, Code &amp;amp; Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-javascript-"&gt;Closing thoughts - JavaScript +=&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-does-mean-in-javascript"&gt;
  &lt;/a&gt;
  What does += mean in JavaScript?
&lt;/h2&gt;

&lt;p&gt;The JavaScript += operator takes the values from the right of the operator and adds it to the variable on the left. This is a very concise method to add two values and assign the result to a variable hence it is called the addition assignment operator.&lt;/p&gt;

&lt;p&gt;This operator is not only used to add numerical values but can also be used to concatenate strings together. Essentially it replaces the variable = a + b syntax with a += b.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax-code-amp-explanation"&gt;
  &lt;/a&gt;
  Syntax, Code &amp;amp; Explanation:
&lt;/h2&gt;

&lt;p&gt;The syntax of the assignment operator is quite straightforward and does not require any prerequisites.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you are still confused, I shall break it down even further. This method is just a shorter way of writing the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are again taking the value on the right (y) and adding &amp;amp; assigning it to the value on the left (x). The assignment operator does the same in a more concise method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-using-javascript-"&gt;
  &lt;/a&gt;
  Code using JavaScript +=:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Code using JavaScript +=&lt;/span&gt;
&lt;span class="c1"&gt;//On int values&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="c1"&gt;//On strings&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the above code snippet is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the values of ‘y’ &amp;amp; ‘b’ have been added to the ‘x’ &amp;amp; ‘a’ respectively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-javascript-"&gt;
  &lt;/a&gt;
  Closing thoughts - JavaScript +=:
&lt;/h2&gt;

&lt;p&gt;Using the JavaScript += operator would help increase code readability, and such minor changes would help while working with a group of senior developers.&lt;/p&gt;

&lt;p&gt;Once you have familiarized yourself with the addition assignment operator (+=) I would recommend practicing the other assignment operators. There are seven in total ( =, +=, -=, &lt;em&gt;=, /=, %=, *&lt;/em&gt;= ), and mastering them all would help you go a long way.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Which One is The Best Tech Stack Spring-Boot or Laravel for UberEats Clone App?
</title>
      <author>Johnmarison</author>
      <pubDate>Tue, 28 Sep 2021 11:18:12 +0000</pubDate>
      <link>https://dev.to/johnmarison2/which-one-is-the-best-tech-stack-spring-boot-or-laravel-for-ubereats-clone-app-2ifg</link>
      <guid>https://dev.to/johnmarison2/which-one-is-the-best-tech-stack-spring-boot-or-laravel-for-ubereats-clone-app-2ifg</guid>
      <description>&lt;p&gt;On-demand food delivery business online is now at its peak on startups among entrepreneurs. Due to its heavy market value in real-time, contemporary business personalities are highly focused on the profitable marketplace. In which, the UberEats clone app is the most favored for them with high benefits already in-built itself.&lt;/p&gt;

&lt;p&gt;Following, developing an UberEats clone for business could be done much more effectively through using some powerful tech-stack. On that, we are going to see about the two, Spring-boot and Laravel, backend frameworks on the basis of which one is the best for you to build your UberEats clone app to the present market demands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UberEats Clone - An Overview of Client-centric Development Needs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ready to Move Design&lt;/strong&gt; - Today’s increasing competition in the food delivery marketplace rushes new service providers to present themselves online soon as possible. So that their new business apps are effectively visible for the users in real-time shortly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick Testing&lt;/strong&gt; - The high possibility to go live that quick with the UberEats clone app for the entrepreneurs’ initiation is depending on fast unit testing. So that all the bugs or exceptions would be entirely clear for perfect business app output speedily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New Features Add-on Solution&lt;/strong&gt; - Even the readymade UberEats clone app solution available with all the very latest in-app options, having facilitated with additional add-ons is much expected by contemporary entrepreneurs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High Security&lt;/strong&gt; - To securely sustain the digitized food delivery business online, it is crucial to have your yet-to-develop business app as robust. Therefore, ensuring high security is always considered important in UberEats clone development at present. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enhanced App Performance&lt;/strong&gt; - The more smoothie business app performance naturally acquires more users in fact. Hence, the food delivery app to businesses should possess such achievement for great user value and service productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Which One Is The Best Tech Stack Spring-Boot or Laravel for UberEats Clone?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Spring-Boot and Laravel, both are very popular backend frameworks in the development platform. And, could be widely used by most clone app developers around the world. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring-Boot and Laravel - UberEats Clone App Development Side of Notable Advantages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G9ClDM-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpadeqtjwwkj19a7p8by.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G9ClDM-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpadeqtjwwkj19a7p8by.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring-Boot and Laravel - UberEats Clone App Development Side of Notable Disadvantages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t-QYHFU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i0j072bbdornth5ho3oh.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t-QYHFU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i0j072bbdornth5ho3oh.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In which, the majority of today’s developers are highly preferred Laravel compared to Spring-boot because of its notable assistance in the UberEats clone app development as viewed.&lt;/p&gt;

&lt;p&gt;Following, the majority of today’s developers using the Laravel framework focus on its crucial benefits as discussed. Developing an UberEats clone for the on-demand food ordering service startup highly preferred some crucial custom-centric options. So that building your business app according to requirements makes your clients benefit from advanced stuff. &lt;/p&gt;

&lt;p&gt;Taking this into account, the following strategies greatly help you as a developer to create this ready-to-go food delivery app too progressive. For i.e., you could develop your new UberEats clone app powerful to the latest marketplace using the Laravel framework as follows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Progressively You Can Develop Your UberEats clone with Selective Tech-stack?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advanced Built-in Tech Traits&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Laravel has its own templating system. Through this, you can format existing/default data and create a new one based on demands. So that the client could smartly get the new food delivery app apt to his exact business model and plan requirement. &lt;/p&gt;

&lt;p&gt;For i.e., it lets you remove any premade features and add a new one, and the entrepreneurs can create their apps by modulating the complete app look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Utilizing Laravel’s powerful authentication technology, you could create your app much faster than usual. So that the possibility of getting a fully developed new app output for launching is reduced to days.&lt;/p&gt;

&lt;p&gt;As discussed earlier, the quicker the app launching smartly gains high user value for the greatest productivity evolutions. Also, such an advantage provides both sides, on you and on your client-side benefits evenly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full-customizing Solution Provision&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Through your future-ready app creation with Laravel, you can provide a fully tailored app creation solution to entrepreneurs. Using the regularly improving framework technology you can smartly build your food delivery app with extraordinary functionality nature.&lt;/p&gt;

&lt;p&gt;When it goes to the custom modulations, it completes with uniqueness in the actual business app output. And, the top of new technology options for the freshly building food delivery app is finely possessed greatness at all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Robust App Security Provision&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As your UberEats clone developed with the safeguarding framework Laravel, you and your clients smartly receive one of the most important security benefits on the digitized business functionality certainly. &lt;/p&gt;

&lt;p&gt;As a result, you can develop a secured on-demand food delivery app for businesses that do not allow any malware activities or security threats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bottom Line:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.spotnrides.com/ubereats-clone"&gt;UberEats clone&lt;/a&gt; app is now a powerful app source to develop a food delivery app as per the entrepreneurs’ requirements. This is why the clone script is becoming too famous among service providers nowadays. &lt;/p&gt;

&lt;p&gt;As the backend program plays a major role in the food delivery service business online, creating it strong enough using the Laravel framework would be more effective for you.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>appdevelopment</category>
      <category>springboot</category>
    </item>
    <item>
      <title>How To Learn About Artificial Intelligence In Only 10 Days.
</title>
      <author>XTEALTH</author>
      <pubDate>Tue, 28 Sep 2021 11:16:44 +0000</pubDate>
      <link>https://dev.to/xtealth/how-to-learn-about-artificial-intelligence-in-only-10-days-5coe</link>
      <guid>https://dev.to/xtealth/how-to-learn-about-artificial-intelligence-in-only-10-days-5coe</guid>
      <description>&lt;p&gt;Artificial intelligence is trending topic in technology related field and currently many colleges and universities are now adding Artificial intelligence and machine learning in  their technology courses and due to which its creating new Artificial intelligence technologists  , which can advance this Artificial intelligence  industry.&lt;/p&gt;

&lt;p&gt;Below are some of the ways you can learn Artificial intelligence in 10 days. &lt;/p&gt;

&lt;p&gt;1&lt;br&gt;
First setup your goal for Artificial intelligence learning and follow that goal. &lt;/p&gt;

&lt;p&gt;2.&lt;br&gt;
Learn basic Python  , there are many online learning Platforms you can learn there. &lt;/p&gt;

&lt;p&gt;3&lt;br&gt;
Learn from youtube Artificial intelligence projects. &lt;/p&gt;

&lt;p&gt;4&lt;br&gt;
Learn about tensorflow and their projects. &lt;/p&gt;

&lt;p&gt;5&lt;br&gt;
Create some AI projects with the help of Python and Tensorflow.&lt;/p&gt;

&lt;p&gt;6&lt;br&gt;
Do debugging in your project. &lt;/p&gt;

&lt;p&gt;Learning Artificial intelligence is totally depends on the person , how quickly they can grab programming and technology. &lt;/p&gt;

&lt;p&gt;Artificial intelligence will be change the ways of learning in the future so it's very important to be get update in the field of Artificial intelligence.&lt;br&gt;
We are XTEALTH, a technology company which can develop and work on new technologies which can solve problems and  technologies for the future like Artificial intelligence  and machine learning. &lt;/p&gt;

&lt;p&gt;We are Artificial intelligence  based services and products development company &lt;a href="https://www.xtealthglobal.com"&gt; XTEALTH.&lt;/a&gt;&lt;br&gt;
We are developing Technology Developers community around the world &lt;/p&gt;

&lt;p&gt;Join our Discord Channel&lt;br&gt;
Links are in the description below.&lt;br&gt;
Like and Share.&lt;br&gt;
Join our Discord Channel  and visit our  website.&lt;br&gt;
Inviting people to join our Discord channel &lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/Errt88sE"&gt;https://discord.gg/Errt88sE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>python</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>How can I integrate the CCAvenue payment gateway in flutter</title>
      <author>anveshrajb</author>
      <pubDate>Tue, 28 Sep 2021 11:14:57 +0000</pubDate>
      <link>https://dev.to/anvesh/how-can-i-integrate-the-ccavenue-payment-gateway-in-flutter-368g</link>
      <guid>https://dev.to/anvesh/how-can-i-integrate-the-ccavenue-payment-gateway-in-flutter-368g</guid>
      <description></description>
    </item>
    <item>
      <title>Flutter: Interesting packages, part 3.</title>
      <author>Samuel Wahome</author>
      <pubDate>Tue, 28 Sep 2021 11:07:21 +0000</pubDate>
      <link>https://dev.to/samueldotcloud/flutter-interesting-packages-part-3-2c5a</link>
      <guid>https://dev.to/samueldotcloud/flutter-interesting-packages-part-3-2c5a</guid>
      <description>&lt;p&gt;Welcome one and all to yet another edition of this blog series, that revolves around flutter packages that can and may be included in your individual flutter projects. The first and second parts can be found right &lt;a href="https://medium.com/@samuelwahome/flutter-interesting-packages-part-1-bcbae82e4d4b"&gt;here&lt;/a&gt; and &lt;a href="https://medium.com/@samuelwahome/flutter-interesting-packages-part-2-b8edd9292e90"&gt;here&lt;/a&gt;. Finally, enough of the niceties and let's cut to the chase.&lt;/p&gt;




&lt;p&gt;1.&lt;a href="https://pub.dev/packages/video_player"&gt;video_player&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Need to include video playback functionality in your flutter app, well look no further than this, as the Flutter dev team has your back with this awesome plugin. It is able to display videos by integrating with &lt;a href="https://exoplayer.dev/"&gt;ExoPlayer&lt;/a&gt; and &lt;a href="https://developer.apple.com/documentation/avfoundation/avplayer"&gt;AVPlayer&lt;/a&gt; for Android and iOS specifically. As much as it is a great package, the tooling isn't exactly a piece of cake, as one would be required to build their own custom controls for volume, playback speed, and everything in between. Plus &lt;a href="https://docs.fileformat.com/video/srt/#:~:text=SRT%20(SubRip%20file%20format)%20is,content%20after%20it%20is%20produced."&gt;SRT&lt;/a&gt; is the only subtitle format it supports at the moment, hence this plugin does have some improvements that should be considered in the near future.&lt;br&gt;
Other than that, if your needs aren't that complex, then this package is definitely a good recommendation for you.&lt;/p&gt;

&lt;p&gt;2.&lt;a href="https://pub.dev/packages/chewie"&gt;chewie&lt;/a&gt;&lt;br&gt;
Enough judgment of the &lt;a href="https://pub.dev/packages/video_player"&gt;video_player&lt;/a&gt; plugin, as it may have just found a suitable companion. Long story short, chewie simply wraps around the video player plugin and adds custom controls that you can easily adjust to your liking, resulting in a unique and positive user experience. In case you do need a bit of help integrating both chewie and &lt;a href="https://pub.dev/packages/video_player"&gt;video_player&lt;/a&gt; in your flutter app, this &lt;a href="https://medium.com/flutterdevs/video-player-in-flutter-22202be72d6e"&gt;post&lt;/a&gt; by &lt;a href="https://medium.com/@shaiq_khan"&gt;Shaiq khan&lt;/a&gt; should be of much help. Therefore, this package is definitely a good recommendation.&lt;/p&gt;

&lt;p&gt;3.&lt;a href="https://pub.dev/packages/url_launcher"&gt;url_launcher&lt;/a&gt;&lt;br&gt;
Ever required your flutter to handle URLs? Well, then this package may be just what you need to accomplish just that. This package supports a wide variety of URL schemes, both on Android and iOS, hence this package definitely has your back. All in all, this package is definitely a good recommendation for all interested flutter developers out there.&lt;/p&gt;

&lt;p&gt;4.&lt;a href="https://pub.dev/packages/flutter_blurhash"&gt;flutter_blurhash&lt;/a&gt;&lt;br&gt;
Ever required a placeholder for an image that may be loaded from storage or a network? Then this package may be just what you need for that very purpose. I know that I've mentioned &lt;a href="https://pub.dev/packages/transparent_image"&gt;transparent_image&lt;/a&gt; somewhere in one of my other posts. Well, this package simply serves as an alternative to that, depending of course, on your preferences or specific use-case. In case you do need help incorporating this package, then this blog &lt;a href="https://medium.com/flutterdevs/exploring-blurhash-image-placeholder-in-flutter-24dad611c487"&gt;post&lt;/a&gt; should be of much help. All in all, this package is definitely a good recommendation.&lt;/p&gt;

&lt;p&gt;5.&lt;a href="https://pub.dev/packages/flutter_bloc"&gt;flutter_bloc&lt;/a&gt;&lt;br&gt;
All this talk about &lt;a href="https://flutter.dev/docs/development/data-and-backend/state-mgmt"&gt;state management&lt;/a&gt;, then suddenly bloc pops into the fray. In addition to other solutions out there such as &lt;a href="https://pub.dev/packages/provider"&gt;provider&lt;/a&gt;, &lt;a href="https://pub.dev/packages/flutter_bloc"&gt;flutter_bloc&lt;/a&gt; simply enables you to share application state between screens, and across your app. Therefore, depending on your specific use case, then this package is definitely a good recommendation.&lt;/p&gt;

&lt;p&gt;6.&lt;a href="https://pub.dev/packages/share_plus"&gt;share_plus&lt;/a&gt;&lt;br&gt;
Do you require your flutter application to be able to share content with other apps, much like implicit &lt;a href="https://developer.android.com/guide/components/intents-filters"&gt;intents&lt;/a&gt; in android? Well, look no further as this package definitely has your back. This package enables you to share files, text, and links with ease, and also invokes the share dialog on your behalf, so it definitely has you covered. All in all, this package is definitely a worthy recommendation.&lt;/p&gt;

&lt;p&gt;7.&lt;a href="https://pub.dev/packages/device_info_plus"&gt;device_info_plus&lt;/a&gt;&lt;br&gt;
Do you need to collect information on the specific device your application is running on, perhaps for analytical or debugging purposes? Well, look no further as this package may just be what you need. With this package, you are able to get current device information from within the Flutter application and is supported on most platforms, which is definitely a huge plus. All in all, this package is definitely a good recommendation.&lt;/p&gt;

&lt;p&gt;8.&lt;a href="https://pub.dev/packages/sign_in_with_apple"&gt;sign_in_with_apple&lt;/a&gt;&lt;br&gt;
Are you a flutter dev that needs an authentication service that is specific to Apple device users, specifically via their Apple ID? Then this package may be just what you need. Implementing this functionality goes beyond just importing this package in your app, but the official package docs do a good job of simplifying the process to ensure a smooth user experience. All in all, this package is definitely a worthy recommendation.&lt;/p&gt;

&lt;p&gt;9.&lt;a href="https://pub.dev/packages/android_alarm_manager_plus"&gt;android_alarm_manager_plus&lt;/a&gt;&lt;br&gt;
Ever needed to include an alarm clock-like functionality in your Flutter application? Then this package may be just what you are looking for. This package works by accessing the android &lt;a href="https://developer.android.com/reference/android/app/AlarmManager"&gt;AlarmManager&lt;/a&gt; service, then runs some dart code underneath to extend even more control to your Flutter app.&lt;br&gt;
With that said, there is one catch though, as this package only caters to the android platform, which kinda beats the logic of designing an app that can work on more than one platform. Anyways, this package is still definitely a worthy recommendation to all who may need it.&lt;/p&gt;

&lt;p&gt;10.&lt;a href="https://pub.dev/packages/infinite_scroll_pagination"&gt;infinite_scroll_pagination&lt;/a&gt;&lt;br&gt;
All this talk about efficiently retrieving information from databases and suddenly pagination pops into mind. Need a package for this exact use case? Well, look no further as this package may be just what you need. Call it auto-pagination, lazy loading pagination, progressive loading pagination, or endless scrolling pagination, then this package definitely has your back, and is also a worthy recommendation to all who may need it.&lt;/p&gt;




&lt;p&gt;I guess that has been a lot to swallow😂. All the afro mentioned packages have null safety incorporated into them, hence no worries about incompatibility with recent versions of Flutter. If you've loved this post, leaving a like❤ won't hurt one bit.&lt;br&gt;
To all readers, cheers to code🥂, and have a blessed day.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
      <category>dart</category>
    </item>
    <item>
      <title>Using the values of a function's arguments to default initialize subsequent arguments.</title>
      <author>Sergey Plishka</author>
      <pubDate>Tue, 28 Sep 2021 11:01:56 +0000</pubDate>
      <link>https://dev.to/russelldev/using-the-values-of-a-function-s-arguments-to-default-initialize-subsequent-arguments-51bn</link>
      <guid>https://dev.to/russelldev/using-the-values-of-a-function-s-arguments-to-default-initialize-subsequent-arguments-51bn</guid>
      <description>&lt;p&gt;You knew that when coding in javascript, you can use the values of a function's arguments to default initialize subsequent arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const rectangle = (width, height, square = width * height) =&amp;gt; {
  console.log({ width, height, square });
};

rectangle(5, 5, 25);    // {width: 5, height: 5, square: 25}
rectangle(3, 7);        // {width: 3, height: 7, square: 21}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But &lt;strong&gt;not vise versa&lt;/strong&gt;, compiler going through arguments and create variables that can be used for initializing next ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const square = (square = length * length, length) =&amp;gt; {
  console.log({ length, square });
};

square(7);  // {length: undefined, square: 7}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also use object deconstructing. But initializing parameters must come before initialized ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const figure = ({ w, h } = {}, { width = w, height = h } = {}, square = width * height) =&amp;gt; {
  console.log({ width, height, square });
};

figure(undefined, { width: 3, height: 7 }); //{width: 3, height: 7, square: 21}
figure({ w: 5, h: 8});                      //{width: 5, height: 8, square: 40}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can event use function calls and pass previous arguments to them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const perimeter = (...sides) =&amp;gt; sides.reduce((p, side) =&amp;gt; p + side);
const trapezium = (a, b, c, d, p = perimeter(a, b, c, d)) =&amp;gt; {
  console.log(`Perimeter - ${p}`);
};

trapezium(12, 36, 15, 15);  //Perimeter - 78
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://stackblitz.com/edit/js-default-args"&gt;Source&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How Google’s Penalty Damage Your Business Online</title>
      <author>SDM</author>
      <pubDate>Tue, 28 Sep 2021 11:00:32 +0000</pubDate>
      <link>https://dev.to/shrushtidigitalmarketing/how-google-s-penalty-damage-your-business-online-1ck7</link>
      <guid>https://dev.to/shrushtidigitalmarketing/how-google-s-penalty-damage-your-business-online-1ck7</guid>
      <description>&lt;p&gt;As a new online business owner, you may look for ways to run a legitimate business. You care for every post that you share online and even want to stay within the safe boundaries of the search engines like Google. However, there are small things that you might do to your website to cause Google to object. The result is a penalty from Google. &lt;/p&gt;

&lt;p&gt;Here, Pearl Lemon comes up with its specialized &lt;a href="https://pearllemon.com/google-penalty-checker/"&gt;Google penalty checker service&lt;/a&gt;. The firm has experience handling several online marketing and branding programs, from PR services to SEO and SEM. Their hands-on experience has given them an upper hand in protecting businesses while also helping them earn ROI in time. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#google-penalty-and-when-do-you-get-them"&gt;
  &lt;/a&gt;
  Google Penalty and When Do You Get them
&lt;/h1&gt;

&lt;p&gt;Google hands you a penalty in case your site violates any rule that it has laid down. The penalty could tarnish a business’s online image, and this is why you should go for the same. &lt;/p&gt;

&lt;p&gt;Before we proceed on how it could do so, let us examine why it might in the first place. First, Google changes its algorithms and rules frequently. It will penalize a site that manipulates or tries to hoodwink Google’s crawling process. If the site does not provide the products it uses to draw in traffic or has misleading information, it might get a penalty. &lt;/p&gt;

&lt;p&gt;If there is a spurious link or too much of a keyword overdose and some plagiarized content, Google may spot it. Have a Google penalty checker to comb through your site regularly, and be safe.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-penalty-and-its-effects"&gt;
  &lt;/a&gt;
  The Penalty and its Effects
&lt;/h1&gt;

&lt;p&gt;Your site will see a slip in the rankings and even have more inadequate leads. The most significant damage will be when you do not find your site as you search for it in Google. Once that happens, your &lt;a href="https://kitelytech.com/how-to-get-small-businesses-big-results-with-local-seo-plans/"&gt;SEO plans&lt;/a&gt; may not work in your favor too. The Webmaster will issue warning messages, and these would further complicate your business. &lt;/p&gt;

&lt;p&gt;You may get a Manual penalty when your site has a harmful virus or violates Google’s policies. In that case, you have to appeal to Google for a resolution. If the site uses plagiarized content or has used too many keywords, you may get an algorithm-based penalty, and if this happens, your site will slip down the ranking. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-save-your-site"&gt;
  &lt;/a&gt;
  How to Save Your Site
&lt;/h1&gt;

&lt;p&gt;Prevention is better than cure, and so the Google Penalty checker will scan through the site and check everything. They will check the content, the bad links and even help to bring SEO back on track. They will help in solving any bugs or technical issues the site has. It will not just help your site safe from any Google penalties but also in enabling it to be able to proceed with SEO. &lt;/p&gt;

&lt;p&gt;Companies spend thousands and more on advertising and in Google ads. To ensure that you have a healthy relationship with the search engine, doing regular diagnostics is a necessity. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Making of Three Dots Jumping Loader or Loading Status Animation using Vanilla CSS only</title>
      <author>Designing Coder</author>
      <pubDate>Tue, 28 Sep 2021 10:47:50 +0000</pubDate>
      <link>https://dev.to/designingcoder/making-of-three-dots-jumping-loader-or-loading-status-animation-using-vanilla-css-only-3f1b</link>
      <guid>https://dev.to/designingcoder/making-of-three-dots-jumping-loader-or-loading-status-animation-using-vanilla-css-only-3f1b</guid>
      <description>&lt;p&gt;Let's go step-by-step walk-through on How to Make a Simple Three Dots Jumping Loader or Loading Status Animation using Vanilla or Pure CSS only.&lt;br&gt;
&lt;em&gt;If you want to skip reading then you can watch YouTube video on it. The link is at the end of the article.&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step1-setting-up-theme-and-container"&gt;
  &lt;/a&gt;
  Step-1: Setting up theme and container
&lt;/h2&gt;

&lt;p&gt;Firstly, we will create a container in which we can have our loader and caption. The following will place the container at the centre of the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class =&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loader"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"caption"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;midnightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;max-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have added a yellow border for the ease of visualisation, which should be removed at the end.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step2-adding-the-three-dots"&gt;
  &lt;/a&gt;
  Step-2: Adding the three dots
&lt;/h2&gt;

&lt;p&gt;Now we will add the three dots. Since all the three dots have similar look, we can provide them a common class as &lt;code&gt;circle&lt;/code&gt; and assign unique ids as &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; for animation purpose(you'll find why and how as we proceed further).&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Here also we have added yellow border for the ease of visualisation, which should be removed at the end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class =&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loader"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"caption"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;   &lt;span class="nc"&gt;.loader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;180px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step3-adding-the-caption"&gt;
  &lt;/a&gt;
  Step-3: Adding the caption
&lt;/h2&gt;

&lt;p&gt;Let's add our caption and make sure it is properly placed properly with respect to the loader.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loader"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        ...
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"caption"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;We are almost there...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nc"&gt;.caption&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;arial&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step4-animating-the-loader"&gt;
  &lt;/a&gt;
  Step-4: Animating the loader
&lt;/h2&gt;

&lt;p&gt;We add a common animation property with animation-name as jump, animation-duration as 1 second, animation-timing-function as linear and animation-iteration-count as infinite. To make them jump at different time, we add animation-dealy to ids &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;circle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;...&lt;/span&gt;
        &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;jump&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;jump&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="err"&gt;35&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-75px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="err"&gt;70&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="nf"&gt;#b&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nf"&gt;#c&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.4s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can remove the yellow border, we don't need them anymore. Finally, we have our loading animation ready. Thank you for reading.You can also watch a How To YouTube Video on this topic.&lt;/p&gt;

&lt;p&gt;Feel free to connect on Social Media. Please feel free to drop you opinion or any helpful tips.&lt;/p&gt;

&lt;p&gt;Social Media Links: &lt;a href="https://designingcoder.github.io"&gt;https://designingcoder.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/c_408ArF1NM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>animation</category>
      <category>webdesign</category>
    </item>
    <item>
      <title>Creating a reusable layout in Next.js</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 28 Sep 2021 10:46:43 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/creating-a-reusable-layout-in-next-js-158l</link>
      <guid>https://dev.to/dailydevtips1/creating-a-reusable-layout-in-next-js-158l</guid>
      <description>&lt;p&gt;Yesterday we &lt;a href="https://daily-dev-tips.com/posts/retrieving-the-primary-wordpress-menu-in-nextjs/"&gt;added a menu to our Next.js application&lt;/a&gt;. However, this was hardcoded on one page.&lt;/p&gt;

&lt;p&gt;Today we'll take a look at how we can introduce a layout component to have a shared layout for our menu on each page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-layout-component"&gt;
  &lt;/a&gt;
  Creating the layout component
&lt;/h2&gt;

&lt;p&gt;Create a file called &lt;code&gt;layout.js&lt;/code&gt; in the &lt;code&gt;components&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;This file will act as the main layout. In our case, it will render the header and the children for each page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Header&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="nx"&gt;menuItems&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The children are passed through our main page, the &lt;code&gt;_app.js&lt;/code&gt;, and we will pass the &lt;code&gt;menu&lt;/code&gt; variable, so we'll have a look at how that works next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retrieving-the-menu-items"&gt;
  &lt;/a&gt;
  Retrieving the menu items
&lt;/h2&gt;

&lt;p&gt;Before we go there, let's see how we can retrieve the menu items in one place instead of doing it per page.&lt;/p&gt;

&lt;p&gt;For this, we need to open the &lt;code&gt;_app.js&lt;/code&gt; file. Here we can add a function called &lt;code&gt;getInitialProps&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This function can be used to retrieve the menu and eventually pass it to our layout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getPrimaryMenu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../lib/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getInitialProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;menuItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getPrimaryMenu&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;menuItems&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#passing-items-to-the-layout-component"&gt;
  &lt;/a&gt;
  Passing items to the layout component
&lt;/h2&gt;

&lt;p&gt;Let's see how we can now make sure the layout is used everywhere and pass the menu items.&lt;/p&gt;

&lt;p&gt;Let's first add the layout to our &lt;code&gt;_app.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Layout&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/Layout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Layout&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Layout&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To access the menu items, we have to add them to the &lt;code&gt;MyApp&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;menuItems&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Layout&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;menuItems&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Layout&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And with this, we have a fully functional universal layout.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;_app&lt;/code&gt; loads the menu and passes it to our layout component&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;layout&lt;/code&gt; works as the main layout and renders the header&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we now run our application, we can see the menu work on all pages automatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xR_czLGK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632208147971/Lwx9qRv_b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xR_czLGK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632208147971/Lwx9qRv_b.gif" alt="Creating a reusable layout in Next.js"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find the complete code on &lt;a href="https://github.com/rebelchris/next-tailwind/tree/layout"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
    </item>
    <item>
      <title>In 7 lines of code, you can turn any Database into Airtable-like spreadsheet using NocoDB!  </title>
      <author>o1lab</author>
      <pubDate>Tue, 28 Sep 2021 10:31:37 +0000</pubDate>
      <link>https://dev.to/o1lab/in-7-lines-of-code-you-can-turn-any-database-into-airtable-like-spreadsheet-using-nocodb-51ah</link>
      <guid>https://dev.to/o1lab/in-7-lines-of-code-you-can-turn-any-database-into-airtable-like-spreadsheet-using-nocodb-51ah</guid>
      <description>&lt;h2&gt;
  &lt;a href="#so-what-is-airtable-"&gt;
  &lt;/a&gt;
  So what is Airtable ?
&lt;/h2&gt;

&lt;p&gt;Airtable is a low-code platform for building collaborative apps. It works like a part spreadsheet &amp;amp; part database.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#what-is-nocodb-"&gt;
  &lt;/a&gt;
  What is NocoDB ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/nocodb/nocodb"&gt;NocoDB is a free &amp;amp; open source Airtable alternative&lt;/a&gt; - that  turns your existing MySQL/Postgres databases into a smart and beautiful spreadsheets. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Jo1mE5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv98dny7q93srxetpi7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Jo1mE5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv98dny7q93srxetpi7e.png" alt="NocoDB - The Open Source Airtable"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#now-show-me-the-code"&gt;
  &lt;/a&gt;
  Now, show me the code.
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Noco&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nocodb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Noco&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({}));&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Visit : localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/dashboard`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
    &lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#lets-break-down-the-7-lines"&gt;
  &lt;/a&gt;
  Let's break down the 7 lines.
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// require express &lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;

    &lt;span class="c1"&gt;// require nocodb&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Noco&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nocodb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// mount nocodb as a middleware&lt;/span&gt;
    &lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Noco&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({}));&lt;/span&gt;

    &lt;span class="c1"&gt;// print &lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Visit : localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/dashboard`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    

    &lt;span class="c1"&gt;// listen to a port &lt;/span&gt;
    &lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Yes, that is it - simple, minimalistic &amp;amp; boring. Like the way it should be while trying something new. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-does-it-work-internally-"&gt;
  &lt;/a&gt;
  How does it work internally ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;NocoDB depends on a database to store metadata about projects or spreadsheets. This can be specified using

&lt;code&gt;NC_DB&lt;/code&gt;

environment variable. If

&lt;code&gt;NC_DB&lt;/code&gt;

is absent then NocoDB defaults to SQLite storing this metadata.&lt;/li&gt;
&lt;li&gt;NocoDB Projects can be created in two ways 

&lt;ul&gt;
&lt;li&gt;First, on

&lt;code&gt;NC_DB&lt;/code&gt;

database it self. Second, by connecting to external database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sG1ondSN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ttwudpcbfcxabia800t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sG1ondSN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ttwudpcbfcxabia800t.png" alt="Screen Shot 2021-09-28 at 12.36.13"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#so-how-to-try-this-quickly-"&gt;
  &lt;/a&gt;
  So how to try this quickly ?
&lt;/h2&gt;

&lt;p&gt;You can get started with just one command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-nocodb-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -d --name nocodb -p 8080:8080 nocodb/nocodb:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#where-can-i-find-more-about-the-project-"&gt;
  &lt;/a&gt;
  Where can I find more about the project ?
&lt;/h2&gt;

&lt;p&gt;Please find it below -&amp;gt; &lt;a href="https://github.com/nocodb/nocodb"&gt;fork it&lt;/a&gt; / &lt;a href="https://github.com/nocodb/nocodb"&gt;star it&lt;/a&gt; / &lt;a href="https://github.com/nocodb/nocodb"&gt;twist it&lt;/a&gt; / &lt;a href="https://github.com/nocodb/nocodb"&gt;turn it&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nocodb"&gt;
        nocodb
      &lt;/a&gt; / &lt;a href="https://github.com/nocodb/nocodb"&gt;
        nocodb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🔥 🔥  The Open Source Airtable alternative  - Powered by Vue.js 🚀 🚀  
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
    &lt;b&gt;
        &lt;a href="https://www.nocodb.com" rel="nofollow"&gt;NocoDB&lt;/a&gt;&lt;br&gt;
    &lt;/b&gt;
    ✨ The Open Source Airtable Alternative ✨ &lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;
Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp;amp; MariaDB into a smart-spreadsheet
&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/github/NocoDB/NocoDB" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e084bac046962268fcf7a8aaf3d4ac422d3327564f9685c9d1b57aa56b142e9/68747470733a2f2f7472617669732d63692e6f72672f6477796c2f657374612e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="http://nodejs.org/download/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78a6449b07220242899619ce10cd5c39cc1e74992b768d308bd98f2a7e9995ae/68747470733a2f2f62616467656e2e6e65742f6e706d2f6e6f64652f6e657874" alt="Node version"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/NocoDB" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec77e5fb18e5c0eef7b879f7b1473bc68ce6a354bdfdb9510c3bf70ad168eded/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f4e6f636f44422e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f772532302534304e6f636f4442" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
    &lt;a href="http://www.nocodb.com" rel="nofollow"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://discord.gg/5RgZmkW" rel="nofollow"&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://twitter.com/nocodb" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133762127-e94da292-a1c3-4458-b09a-02cd5b57be53.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PB_59gfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133762127-e94da292-a1c3-4458-b09a-02cd5b57be53.png" alt="OpenSourceAirtableAlternative"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div&gt;
&lt;p&gt;&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/chinese.md"&gt;🇨🇳   读我&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/french.md"&gt;🇫🇷   Lisez-moi&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/german.md"&gt;🇩🇪    Liesmich&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/spanish.md"&gt;🇲🇽    Léame&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/portuguese.md"&gt;🇵🇹   Leia-me&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/italian.md"&gt;🇮🇹   Leggi&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/dutch.md"&gt;🇳🇱    Leesmij&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/japanese.md"&gt;🇯🇵   私を読む&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/korean.md"&gt;🇰🇷   소개글&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/russian.md"&gt;🇷🇺   Прочти меня&lt;/a&gt; •
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/indonesian.md"&gt;🇮🇩   Baca aku&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/62d299d2b7261e4c5f757e5ac9bc313ef9203b9b819dedf340db82138f8da065/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d63313261373763632d383535652d343630322d386130662d363134623264306461353661"&gt;&lt;img src="https://camo.githubusercontent.com/62d299d2b7261e4c5f757e5ac9bc313ef9203b9b819dedf340db82138f8da065/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d63313261373763632d383535652d343630322d386130662d363134623264306461353661"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/nocodb?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-nocodb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9cff91c3d5ada7906ec16f4adbde10de461bf84718d3cfbb0d37c8ca1ffc2a2d/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d323937353336267468656d653d6461726b" alt="NocoDB - The Open Source Airtable alternative | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
Quick try&lt;/h1&gt;

&lt;h3&gt;
1-Click Deploy&lt;/h3&gt;
&lt;h4&gt;
Heroku&lt;/h4&gt;
&lt;a href="https://heroku.com/deploy?template=https://github.com/npgia/nocodb-seed-heroku" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/6979881d5a96b7b18a057083bb8aeb87ba35fc279452e29034c1e1c49ade0636/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667" width="300px" alt="Deploy NocoDB to Heroku with 1-Click"&gt;
&lt;/a&gt;
&lt;br&gt;
&lt;h3&gt;
Using Docker&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;docker run -d --name nocodb -p 8080:8080 nocodb/nocodb:latest&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;To persist data you can mount volume at &lt;code&gt;/usr/app/data/&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
Using Npm&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npx create-nocodb-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Using Git&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/nocodb/nocodb-seed
cd nocodb-seed
npm install
npm start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
GUI&lt;/h3&gt;
&lt;p&gt;Access Dashboard using : &lt;a href="http://localhost:8080/dashboard" rel="nofollow"&gt;http://localhost:8080/dashboard&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Join Our Community&lt;/h1&gt;
&lt;a href="https://discord.gg/5RgZmkW" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8a7e4d7b3342da59bf8e778636f0860c8045593cc8003a834f88b0315782760e/68747470733a2f2f696e7669646765742e737769746368626c6164652e78797a2f3552675a6d6b57" alt="Join NocoDB : Free &amp;amp; Open Source Airtable Alternative"&gt;
&lt;/a&gt;
&lt;br&gt;
&lt;h1&gt;
Screenshots&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759229-4275b934-873b-4a9b-9f23-96470fec9775.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rdup1vIP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759229-4275b934-873b-4a9b-9f23-96470fec9775.png" alt="2"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759218-f8b0bffc-707f-451c-82f2-b5ba2573d6a6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6LATNShL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759218-f8b0bffc-707f-451c-82f2-b5ba2573d6a6.png" alt="1"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759245-a536165b-55f1-46a8-a74e-1964e7e481c6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wv2SIY6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759245-a536165b-55f1-46a8-a74e-1964e7e481c6.png" alt="7"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759240-dd3f2509-aab7-4bd1-9a58-4c2dff08f2f2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zao1XzmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759240-dd3f2509-aab7-4bd1-9a58-4c2dff08f2f2.png" alt="5"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759242-2311a127-17c8-406c-b865-1a2e9c8ee398.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6vTK1eTn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759242-2311a127-17c8-406c-b865-1a2e9c8ee398.png" alt="6"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759234-9b539029-be36-4a35-b55a-bee3ebd0e010.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AcJfIMgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759234-9b539029-be36-4a35-b55a-bee3ebd0e010.png" alt="3"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759236-dc182129-3768-4e23-874e-98f5f32e962c.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fdapWRRj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759236-dc182129-3768-4e23-874e-98f5f32e962c.png" alt="4"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759253-bb9bc729-ee28-4f86-ab95-7d112c0815f2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ve3FcC51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759253-bb9bc729-ee28-4f86-ab95-7d112c0815f2.png" alt="11"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759250-ebd75ecf-31db-4a17-b2d7-2c43af78a54e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aS0r1Yof--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759250-ebd75ecf-31db-4a17-b2d7-2c43af78a54e.png" alt="10"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759248-3a7141e0-4b7d-4079-a5f9-cf8611d00bc5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qWJU8PJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759248-3a7141e0-4b7d-4079-a5f9-cf8611d00bc5.png" alt="8"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759249-8c1a85c2-a55c-48f6-bd58-aa6b4195cce7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fXwYsZln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759249-8c1a85c2-a55c-48f6-bd58-aa6b4195cce7.png" alt="9"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Features&lt;/h1&gt;
&lt;h3&gt;
Rich Spreadsheet Interface&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
⚡  Search, sort, filter, hide columns with uber ease&lt;/li&gt;
&lt;li&gt;
⚡  Create Views : Grid, Gallery, Kanban, Gantt, Form&lt;/li&gt;
&lt;li&gt;
⚡  Share Views : public &amp;amp; password protected&lt;/li&gt;
&lt;li&gt;
⚡  Personal &amp;amp; locked Views&lt;/li&gt;
&lt;li&gt;
⚡  Upload images to cells (Works…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nocodb/nocodb"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#do-you-have-a-video-demo-"&gt;
  &lt;/a&gt;
  Do you have a video demo ?
&lt;/h2&gt;

&lt;p&gt;We do!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#using-npx"&gt;
  &lt;/a&gt;
  Using npx
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/K-UEecQyiOk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-docker"&gt;
  &lt;/a&gt;
  Using docker
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/v6Nn75P1p7I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Happy hacking!&lt;/p&gt;

</description>
      <category>node</category>
      <category>database</category>
      <category>webdev</category>
    </item>
    <item>
      <title>I have built Zero: Fast and high performance Python RPC framework to build microservices</title>
      <author>Azizul Haque Ananto</author>
      <pubDate>Tue, 28 Sep 2021 10:18:18 +0000</pubDate>
      <link>https://dev.to/ananto30/i-have-built-zero-fast-and-high-performance-python-rpc-framework-to-build-microservices-3j55</link>
      <guid>https://dev.to/ananto30/i-have-built-zero-fast-and-high-performance-python-rpc-framework-to-build-microservices-3j55</guid>
      <description>&lt;p&gt;Zero is actually a RPC like framework that uses ZeroMQ under the hood for communication over tcp. That's why it's fast and super lightweight.&lt;/p&gt;

&lt;p&gt;Without going into details let's just get started, cause one of the philosophy behind Zero is &lt;strong&gt;Zero Learning Curve&lt;/strong&gt; 😃&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Ensure Python 3.8+&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install Zero
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install zeroapi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Sadly the &lt;code&gt;zero&lt;/code&gt; package is already there&lt;/em&gt; 🙁&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a &lt;code&gt;server.py&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;zero&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ZeroServer&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"hello world"&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ZeroServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5559&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register_rpc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register_rpc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that server &lt;strong&gt;RPC methods' args are type hinted&lt;/strong&gt;. Type hint is &lt;strong&gt;must&lt;/strong&gt; in Zero server.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See the method type async or sync, doesn't matter.&lt;/em&gt; 😃&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run it
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python -m server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Call the rpc methods
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;zero&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ZeroClient&lt;/span&gt;

&lt;span class="n"&gt;zero_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ZeroClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"localhost"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5559&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zero_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"echo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hi there!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zero_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello_world"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is it! Tell me about the learning curve 😉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-bit-of-background"&gt;
  &lt;/a&gt;
  A bit of background
&lt;/h2&gt;

&lt;p&gt;After working on large systems (with 50M+ users) over the years, one of the realization is - we waste a good amount of time writing boilerplate code and clients when working on microservices. And also we mostly use HTTP to communicate among them. This is really fine and usual but http has some overheads (headers, separate tcp connection every request etc). In case of microservice communications we can avoid these to get better performance. &lt;br&gt;
Another thing is usual web frameworks are bulky and has a learning curve. So I was looking for something to reduce these costs and overheads.&lt;/p&gt;

&lt;p&gt;Zero is still an idea, though the package is there already 😜 Zero solves the boilerplate code problem by using RPC like structure, you can just focus on the business logic. And use ZeroMQ rather HTTP to solve the overhead and reconnection problem. Though not both of them are solved explicitly, Zero is still a baby to learn more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons-of-zero-over-flask-or-fastapi"&gt;
  &lt;/a&gt;
  Pros and Cons of Zero over Flask or FastAPI
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Inter-service communication is faster as using ZeroMQ and raw TCP under the hood.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Simple and easy to learn and use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extremely lightweight.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Super flexible zero can be used only for network communication and you can structure your codebase independently.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Not an HTTP framework, not so much traditional like Flask of FastAPI. People need to understand the actual usage. Like if you have fairly large microservice architecture and there are independent services that communicate among them, zero is a good substitute to reduce network overhead and other framework complexity. But if you only have a few services that communicate directly with the client/frontend, zero is not that much of a use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Only Python based framework. Zero server can only be connected with Python zero client for now. (I have plan to introduce Go, in distant future btw)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You always need another HTTP framework as a gateway if your frontend communicates over HTTP, which is the usual and extremely common way.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#i-will-be-back"&gt;
  &lt;/a&gt;
  I will be back!
&lt;/h2&gt;

&lt;p&gt;There are more, I will write more about Zero in coming weeks. For now I will be looking towards comments, opinions and suggestions 🙏&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/Ananto30/zero"&gt;https://github.com/Ananto30/zero&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>microservices</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
