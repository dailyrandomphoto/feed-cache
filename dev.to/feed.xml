<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Fre is 10 times faster than react!</title>
      <author>Yisar</author>
      <pubDate>Sat, 07 Aug 2021 02:11:59 +0000</pubDate>
      <link>https://dev.to/132/fre-is-10-times-faster-than-react-224k</link>
      <guid>https://dev.to/132/fre-is-10-times-faster-than-react-224k</guid>
      <description>&lt;p&gt;Recently, some people used react to find that rendering a large amount of data is particularly slow. They began to try fre and found that fre is 10 times faster on average than react！&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4CrjSeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr2j2zq42cxykuw25nma.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4CrjSeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr2j2zq42cxykuw25nma.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fre has been very fast. Frankly, I know react very well. I think the structure and algorithm used by the react team are not good enough within the framework, and they have not improved.&lt;/p&gt;

&lt;p&gt;Let's look at the flame diagram.&lt;/p&gt;

&lt;p&gt;react:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x1Zl2NhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jy6vqf830jfxyvg2qzw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1Zl2NhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jy6vqf830jfxyvg2qzw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;fre:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RGzm03c_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y1fkdqt39gwxjjv14rwy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGzm03c_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y1fkdqt39gwxjjv14rwy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this test, react defaults to synchronous mode and fre to concurrent mode, but in theory, the synchronous mode should be faster.&lt;/p&gt;

&lt;p&gt;The time slice unit of fre is 16ms, which can finally be close to 60 FPS. There is an error in react. They think that the smaller the unit, the better, so that the unit of 5ms is too small and JS pressure is too high.&lt;/p&gt;

&lt;p&gt;According to my experience, the advantage of vdom framework is that it has a better structure and can make better algorithms. Not only diff algorithms, but also offscreen algorithms.&lt;/p&gt;

&lt;p&gt;But fre's algorithm is not the best. Maybe I will implement a better algorithm in fre3.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yisar/fre"&gt;https://github.com/yisar/fre&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are interested, you can see it.&lt;/p&gt;

&lt;p&gt;Now I mainly do miniapps in the company. The rendering of miniapp uses fre. &lt;/p&gt;

&lt;p&gt;Because this is a mobile architecture, I don't have much time to realize the fetures of PC side such as SSR, which is a pity.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why the New Firebase Web v9 Modular SDK is a Game-Changer</title>
      <author>Cole Gawin</author>
      <pubDate>Sat, 07 Aug 2021 01:34:00 +0000</pubDate>
      <link>https://dev.to/chroline/why-the-new-firebase-web-v9-modular-sdk-is-a-game-changer-nph</link>
      <guid>https://dev.to/chroline/why-the-new-firebase-web-v9-modular-sdk-is-a-game-changer-nph</guid>
      <description>&lt;p&gt;Firebase is one of the most popular Backend-as-a-Service options for a modern tech stack. In addition to offering a NoSQL database solution called Firestore, the Firebase platform provides solutions for authentication, file storage, hosting, and analytics. The Firebase SDK is available for many platforms, including mobile, Unity, Java, C++, and the web.&lt;/p&gt;

&lt;p&gt;One of the major shortcomings of Firebase on the web, however, was its sheer size. According to &lt;a href="https://bundlephobia.com/"&gt;BundlePhobia&lt;/a&gt;, a tool used to determine the size of NPM packages, the &lt;code&gt;firebase&lt;/code&gt; Web Javascript package &lt;a href="https://bundlephobia.com/package/firebase@8.9.0"&gt;weighs in at 235.5kB when minified &amp;amp; g-zipped&lt;/a&gt;. This can result in an additional 0.59s of loading time for some users with slower network connections. For comparison, &lt;code&gt;lodash&lt;/code&gt; is another notoriously heavy NPM package yet it only &lt;a href="https://bundlephobia.com/package/lodash@4.17.21"&gt;weighs 24.5kB when minified &amp;amp; g-zipped&lt;/a&gt;: a 10th of the size of Firebase.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jQhB_ZLO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.craft.do/user/full/2a960b4f-1324-04c1-6008-a9adf8c53a2a/doc/BDE6EA65-F475-49E4-B3FA-668D9E3206AD/AF807877-706D-411E-B81C-C897E22C1C3D_2/Image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jQhB_ZLO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.craft.do/user/full/2a960b4f-1324-04c1-6008-a9adf8c53a2a/doc/BDE6EA65-F475-49E4-B3FA-668D9E3206AD/AF807877-706D-411E-B81C-C897E22C1C3D_2/Image.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a known issue with the Firebase Web Javascript SDK, and has turned many developers away from the product. Especially for developers building products for end-users who may not have access to a fast internet connection, loading a package as large as Firebase was simply not an option for them.&lt;/p&gt;

&lt;p&gt;Thankfully, the Firebase team has been hard at work recreating the Firebase Web SDK from the group up. On July 27th, 2021, the official Firebase Blog account &lt;a href="https://firebase.googleblog.com/2021/07/introducing-the-new-firebase-js-sdk.html"&gt;announced the pre-release of the a new, modular JavaScript SDK&lt;/a&gt; that can be “up to 80% smaller!”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/Firebase/status/1420112970453897216"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qgodw1c0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628284443278/rVvPvk-5PR.png" alt="Firebase Twitter announcement"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firebase Web v9 will completely change how web developers use Firebase. With the introduction of a fully overhauled, modular, functional programming style and the inclusion of a Firestore “lite” library, web apps powered by Firebase Web v9 will run faster, loader quicker, and dramatically enhance both the user and developer experience.&lt;/p&gt;

&lt;p&gt;With all that said, let’s take a look at some of the radical changes introduced in this new modular Firebase Web SDK.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#sideeffectfree-imports"&gt;
  &lt;/a&gt;
  Side-effect-free imports
&lt;/h2&gt;

&lt;p&gt;Previously, the Firebase Javascript SDK incorporated what is known as &lt;em&gt;side-effect imports&lt;/em&gt;. In simplest terms, a side-effect occurs when a function modifies state outside of its provided scope. For example, if function &lt;code&gt;a&lt;/code&gt; were to modify global variable &lt;code&gt;x&lt;/code&gt;, then function &lt;code&gt;a&lt;/code&gt; would produce a side-effect. Side-effect &lt;em&gt;imports&lt;/em&gt; effect the state, logic, or functionality of your program without calling any methods or referencing any variables that are exported from the package. The mere presence of the package in your program (via an &lt;code&gt;import&lt;/code&gt; statement or &lt;code&gt;require&lt;/code&gt; call) can affect the functionality of your program.&lt;/p&gt;

&lt;p&gt;The old Firebase Web SDK heavily relied on side-effect imports. For each additional Firebase functionality you wanted to include in your app (authentication, Firestore, cloud storage, analytics, etc.), you had to import an additional package like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// main firebase app import&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// SIDE EFFECT PACKAGES&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/auth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/firestore&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/storage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have experience with working with the old Firebase Web SDK, you might have incorporated lazy-loading for importing the Firebase packages. This solution would decrease the initial load size and time of your web app, but users would still be forced to wait for all of these packages to load before the app became fully functional.&lt;/p&gt;

&lt;p&gt;Firebase Web v9 changes all of this. The concept of side-effect packages is non-existent in the new Firebase Web SDK, and all of the packages are completely tree-shakable. That means that only the parts of Firebase that are needed by your app will be imported on the client. This drastically reduces the final bundle size of your app and will lead to much faster loading times!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#native-javascript-es-modules"&gt;
  &lt;/a&gt;
  Native Javascript ES modules
&lt;/h2&gt;

&lt;p&gt;In the new Firebase Web SDK, each individual functionality of Firebase that your app requires is imported separately thanks to the introduction of modular packages. Because the new SDK is built into native Javascript ES modules, you can directly import only the features that your program needs: nothing more, nothing less. For example, let’s say you want to initialize your Firebase app and then watch for auth changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// imports with ES modules&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;initializeApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/auth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// initialize firebase app&lt;/span&gt;
&lt;span class="nx"&gt;initializeApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firebaseConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// watch for auth changes&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;// deal with authentication changes &lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The introduction of modular packages in turn results in the introduction of a more functional programming style when working with the Firebase Web SDK.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#functional-programming-style"&gt;
  &lt;/a&gt;
  Functional programming style
&lt;/h2&gt;

&lt;p&gt;If you have ever worked with functional programming languages or libraries, you will be familiar with the advantages that functional programming grants you as a developer. Programs that adhere to the functional programming style often have the advantages of being very intuitive and incredibly test-friendly. Although the old Firebase Web SDK was hardly difficult to comprehend, the new Firebase Web SDK is no less intuitive or beginner-friendly.&lt;/p&gt;

&lt;p&gt;To demonstrate the functional programming style introduced by the new modular Firebase packages, let’s look at an example of updating a document in Firestore.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getStorage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;uploadBytes&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/storage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;// first, get a reference to the storage bucket for our app&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;storage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getStorage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// then, make a reference to the file&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usersCollection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;files/example.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// finally, upload the file to the reference&lt;/span&gt;
&lt;span class="nx"&gt;uploadBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;usersCollection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, there is a lot of function nesting present in this code example—the result of one function is passed as the argument to &lt;em&gt;another&lt;/em&gt; function, whose result is passed to the argument of &lt;em&gt;another&lt;/em&gt; function, and so on. This is in stark contrast to the method chaining approach used by the old Firebase Web SDK.&lt;/p&gt;

&lt;p&gt;To summarize, the code used with the new Firebase SDK functional languages like F# or Scala (or functional libraries like Ramda and RxJS), whereas the code used with the old Firebase Web SDK resembles that of Java or C++.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#firestore-lite"&gt;
  &lt;/a&gt;
  Firestore Lite
&lt;/h2&gt;

&lt;p&gt;Firestore is an incredibly powerful and useful database service. It provides a lot of features, many of which aren’t actually utilized in all web apps that use Firestore. Many developers simply use Firestore as an easy-to-implement NoSQL database that handles many of the complexities of operating a database on both the client- and server-side. To that extent, a lot of web apps don’t need the realtime updates capability of Firestore; they just need access to one-time document and collection queries.&lt;/p&gt;

&lt;p&gt;The Firebase team recognizes this valid use case, and has addressed it with the introduction of a new library: Firestore Lite. The Firestore Lite library is up to 80% lighter than the old Firestore v8 library. All of the features of Firestore that you have grown to love and take full advantage of, minus realtime updates, are available in the Firestore Lite library. This is a big win for the Firebase Web community because your apps can now be more performant and less bloated with unused code!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compatibility"&gt;
  &lt;/a&gt;
  Compatibility
&lt;/h2&gt;

&lt;p&gt;The new Firebase Web v9 SDK makes it easy to progressively upgrade from the v8 SDK. The &lt;code&gt;firebase&lt;/code&gt; package provides a &lt;code&gt;compat&lt;/code&gt; library to make migrating from v8 to v9 easy and incremental. For all of the places in your codebase where you aren't ready to make the full switch to Firebase Web v9, you can take advantage of the &lt;code&gt;compat&lt;/code&gt; library and incrementally upgrade parts of your codebase until you no longer need to use the &lt;code&gt;compat&lt;/code&gt; library functionality.&lt;/p&gt;

&lt;p&gt;The main drawback for this is that you won’t experience all of the bloat and load time reducing features of the new v9 SDK when using the &lt;code&gt;compat&lt;/code&gt; library. The &lt;code&gt;compat&lt;/code&gt; library still relies on side-effect imports, so you will have to deal with those like you would with the Firebase Web v8 SDK.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you have ever worked with Firebase on the web before, the future of Firebase should really excite you. The introduction of this new modular Firebase Web v9 SDK changes everything in terms of developing with Firebase on the web. From making your apps less bloated to improving the experiences of both the developer and the end-user, the new Firebase Web v9 modular SDK removes one of the biggest downsides to using Firebase, and will revolutionize the future of Firebase-powered web apps!&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Another 5 Helpful Python String Methods</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sat, 07 Aug 2021 00:19:12 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/another-5-helpful-python-string-methods-jd</link>
      <guid>https://dev.to/ayabouchiha/another-5-helpful-python-string-methods-jd</guid>
      <description>&lt;p&gt;Hello, I'm &lt;a href="//developer.aya.b@gmail.com"&gt;Aya Bouchiha&lt;/a&gt;, &lt;/p&gt;

&lt;p&gt;this is the &lt;strong&gt;part 2 of 5 useful python string methods&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/5-useful-python-string-methods-4pe7"&gt;part 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#capitalize"&gt;
  &lt;/a&gt;
  capitalize()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;capitalize()&lt;/strong&gt;: this string method converts to uppercase the first letter of the first word in the specified string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"aya"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# Aya
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#isalpha"&gt;
  &lt;/a&gt;
  isalpha()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;isalpha()&lt;/strong&gt;: checks if all string's characters are alphabets letters &lt;strong&gt;[A-z]&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AyaBouchiha'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   &lt;span class="c1"&gt;# True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Aya Bouchiha'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;  &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Aya-Bouchiha'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;  &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AyaBouchiha 1'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Aya Bouchiha!'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#isdigit"&gt;
  &lt;/a&gt;
  isdigit()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;isdigit()&lt;/strong&gt;: checks if all string's characters are digits.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'100'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;     &lt;span class="c1"&gt;# True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'12a'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;     &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'100 000'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'+212-6000-00000'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'12a'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'3&lt;/span&gt;&lt;span class="se"&gt;\u00B2&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 3²
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'3&lt;/span&gt;&lt;span class="se"&gt;\u00B2&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# True
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#isalnum"&gt;
  &lt;/a&gt;
  isalnum()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;isalnum()&lt;/strong&gt;: checks if all string's characters are alphanumeric (alphabets, numbers).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'2021'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalnum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'30kviews'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalnum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'+212600000000'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalnum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False           
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'dev.to'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalnum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False  
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'developer.aya.b@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalnum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False   
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Aya Bouchiha'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalnum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# False  
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#strip"&gt;
  &lt;/a&gt;
  strip()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;strip(characters(optional))&lt;/strong&gt;: lets you delete the given characters (by default =&amp;gt; &lt;em&gt;whitespaces&lt;/em&gt;) at the start and at the end of the specified string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' Aya Bouchiha  '&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# Aya Bouchiha
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'   +212612345678  '&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' +'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 212612345678
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hi, I&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s"&gt;m Aya Bouchiha'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hi, '&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# I'm Aya Bouchiha
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;capitalize()&lt;/strong&gt;: converts to uppercase the first letter of the first word in the specified string.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;isalpha()&lt;/strong&gt;: checks if all string's characters are alphabets letters.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;isdigit()&lt;/strong&gt;: checks if all string's characters are digits.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;isalnum()&lt;/strong&gt;: checks if all string's characters are alphanumeric.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;strip()&lt;/strong&gt;: deletes the given characters (by default =&amp;gt; &lt;em&gt;whitespaces&lt;/em&gt;) at the start and at the end of the specified string.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested Posts
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/all-you-need-to-know-about-python-json-module-5ef0"&gt;All You Need To Know About Python JSON Module&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/youtube-courses-projects-to-master-javascript-3lhc"&gt;Youtube Courses, Projects To Learn Javascript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-useful-python-string-methods-4pe7"&gt;part-1: 5 Useful Python String Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf"&gt;5 Helpful Python Math Module Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;p&gt;email: &lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have a great day!&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Do you want to join the largest programming community? Then join Programming Students! ‎‍🎓</title>
      <author>Programming Students</author>
      <pubDate>Fri, 06 Aug 2021 23:35:19 +0000</pubDate>
      <link>https://dev.to/programmingstudents/do-you-want-to-join-the-largest-programming-community-then-join-programming-students-4eac</link>
      <guid>https://dev.to/programmingstudents/do-you-want-to-join-the-largest-programming-community-then-join-programming-students-4eac</guid>
      <description>&lt;p&gt;Do you want to join the largest programming community? Then join Programming Students! ‎‍🎓&lt;/p&gt;

&lt;p&gt;Use the "Community Checklist" in community.programmingstudents.com. It's a checklist of the platforms to join to be part of the community. 👥&lt;/p&gt;

&lt;p&gt;Watch this short video to learn how: 👉 &lt;a href="https://youtu.be/ttlR7TJbDi4"&gt;https://youtu.be/ttlR7TJbDi4&lt;/a&gt; 👈&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>javascript</category>
      <category>java</category>
    </item>
    <item>
      <title>4 Effective Tools for Building a React Design System</title>
      <author>Muhi Masri</author>
      <pubDate>Fri, 06 Aug 2021 23:30:36 +0000</pubDate>
      <link>https://dev.to/muhimasri/4-effective-tools-for-building-a-react-design-system-564j</link>
      <guid>https://dev.to/muhimasri/4-effective-tools-for-building-a-react-design-system-564j</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h3&gt;

&lt;p&gt;Building a design system is a progressive and abstractive approach to maintaining a consistent and cost-efficient components library that follows a specific styling guide and is sharable across multiple products. A design system has always been associated with designers but now it’s becoming critical for frontend developers to understand it from the technology perspective.&lt;/p&gt;

&lt;p&gt;In this article, I will share some of the tools I used to successfully build a design system in React. Of course, before building the library, we require the designer’s expertise to develop the brand’s look and feel, user experience, style guide, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#createreactlibrary"&gt;
  &lt;/a&gt;
  create-react-library:
&lt;/h3&gt;

&lt;p&gt;One of the essential parts of providing a design system library is to be able to have an independent React components solution that can be published and used by other projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/create-react-library"&gt;create-react-library&lt;/a&gt; is a CLI for creating reusable React libraries using Rollup and &lt;a href="https://reactjs.org/docs/create-a-new-react-app.html"&gt;create-react-app&lt;/a&gt;. All you need to do is a simple global installation &lt;code&gt;npm install -g create-react-library&lt;/code&gt;, then &lt;code&gt;create-react-library&lt;/code&gt;, followed by few questions about your package and you have it all! A Boilerplate project for publishing React components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_SKdL1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://muhimasri.com/wp-content/uploads/2021/06/image-7-1024x928.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_SKdL1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://muhimasri.com/wp-content/uploads/2021/06/image-7-1024x928.png" alt="React design system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;src&lt;/code&gt; folder is where you develop and export components.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;example&lt;/code&gt; folder is for testing your components.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#react-material"&gt;
  &lt;/a&gt;
  React Material:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://material-ui.com/"&gt;React Material&lt;/a&gt; can serve as a powerful base layer for your design system and can be easily customized to meet your component’s requirements.&lt;/p&gt;

&lt;p&gt;Advantages of using Material UI over building components from scratch:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Built-in functionalities that will take a while to build from scratch, e.g. Dialogs, Autocomplete, Trees, Tables…&lt;/li&gt;
&lt;li&gt;Material is not only a library but a design system guide that helps you follow best design practices&lt;/li&gt;
&lt;li&gt;Responsive components that work on different devices&lt;/li&gt;
&lt;li&gt;Supported by Google&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Material uses JSS at its core – a high-performance JavaScript to CSS compiler which works at runtime and server-side. This works great for isolating components and creating dynamic CSS. If you’d like to learn more, I wrote an article on &lt;a href="https://muhimasri.com/blogs/how-to-customize-a-button-with-react-material-and-jss/"&gt;how to create custom dynamic styling for a Material Button using JSS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9xwDzpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://muhimasri.com/wp-content/uploads/2021/06/image-9-1024x654.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9xwDzpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://muhimasri.com/wp-content/uploads/2021/06/image-9-1024x654.png" alt="React design system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storybook"&gt;
  &lt;/a&gt;
  Storybook:
&lt;/h3&gt;

&lt;p&gt;Storybook is a great tool for documenting, showcasing, and testing components with designers, managers, and developers. It allows you to create a story for each component that showcases different variants, behaviors, and features of your component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OnnuU7Oq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storybook.js.org/ff519d6518900d4be0ce86bbf3655913/example-button-args.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OnnuU7Oq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storybook.js.org/ff519d6518900d4be0ce86bbf3655913/example-button-args.png" alt="Button story with args"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Designers can provide feedback and updates while developers can test and learn how to work with your components.&lt;/p&gt;

&lt;p&gt;Besides documentation, it has plenty of other useful features and plugins such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unit test functionality&lt;/li&gt;
&lt;li&gt;Accessibility testing&lt;/li&gt;
&lt;li&gt;Visual test appearance&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#style-dictionary-and-design-tokens"&gt;
  &lt;/a&gt;
  Style Dictionary and Design Tokens:
&lt;/h3&gt;

&lt;p&gt;Design tokens are defined as all the values needed to construct and maintain a design system — spacing, color, typography, border, shadow, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://amzn.github.io/style-dictionary/#/README"&gt;Style Dictionary&lt;/a&gt; enables you to create and organize all Design Tokens as variables in a JSON format and automatically transform it into any format like JS, SASS, XML (for Android), etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xFIhh6E3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://muhimasri.com/wp-content/uploads/2021/06/image-10-1024x308.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xFIhh6E3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://muhimasri.com/wp-content/uploads/2021/06/image-10-1024x308.png" alt="React design system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a powerful tool for both designers and developers. As a designer, you control all the design system values to ensure consistency, and as a developer, you don’t need to create and structure style variables for every project that follows the same style guide. As soon as there is a design update, the designer will change the value and it will reflect on all platforms. Awesome!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#takeaway"&gt;
  &lt;/a&gt;
  Takeaway:
&lt;/h3&gt;

&lt;p&gt;A design system is a hot topic and an integral part of many companies. Following the best practices to building a design system will ensure scalable and cost-efficient products.&lt;/p&gt;

&lt;p&gt;I hope this article was helpful and if you have any questions, please leave a comment below.&lt;/p&gt;

&lt;p&gt;Bye for now!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For more related articles, you can visit my &lt;a href="https://muhimasri.com"&gt;site&lt;/a&gt; or &lt;a href="https://muhimasri.com/signup"&gt;subscribe here&lt;/a&gt; to receive the latest Frontend Development articles.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>designsystem</category>
      <category>javascript</category>
      <category>jss</category>
    </item>
    <item>
      <title>Building a QR code generator with Ruby on Rails</title>
      <author>Marco Colli</author>
      <pubDate>Fri, 06 Aug 2021 22:43:50 +0000</pubDate>
      <link>https://dev.to/collimarco/building-a-qr-code-generator-with-ruby-on-rails-28ki</link>
      <guid>https://dev.to/collimarco/building-a-qr-code-generator-with-ruby-on-rails-28ki</guid>
      <description>&lt;p&gt;Today many applications use QR codes.&lt;/p&gt;

&lt;p&gt;QR codes are used for many different purposes, like tickets, restaurant menus, payments, sharing a contact or a URL, etc.&lt;/p&gt;

&lt;p&gt;A QR code may seem magical to non-tech users, but it is actually very simple. &lt;strong&gt;QR codes are simply a different way to write text: instead of using the normal alphabet, that is easily read by humans, we use different signs that are easily read by a machine&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Since you can write any text inside a QR code, you can also write a URL for example. URLs are one of the most common contents of QR codes. A mobile device that scans a QR code, reads the text, and finds a URL, may decide to open that link.&lt;/p&gt;

&lt;p&gt;For example, if you have a restaurant menu online you can simply take the URL of the menu and convert it into a QR code: in this way users that scan the QR code will open the restaurant menu. That is exactly how a QR code menu works. And indeed this post is based on the work that I have done for &lt;a href="https://buonmenu.com"&gt;BuonMenu&lt;/a&gt;, a QR code menu for restaurants built with Ruby on Rails.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-code"&gt;
  &lt;/a&gt;
  The code
&lt;/h2&gt;

&lt;p&gt;We want to build a simple page with Ruby on Rails that given an arbitrary text or a URL as an input, generates the QR code and allows the user to download it.&lt;/p&gt;

&lt;p&gt;First of all create a new Rails application (or open an existing one).&lt;/p&gt;

&lt;p&gt;Then add &lt;a href="https://github.com/whomwah/rqrcode"&gt;this gem&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Gemfile&lt;/span&gt;

&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'rqrcode'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And run &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then create these routes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# config/routes.rb&lt;/span&gt;

&lt;span class="n"&gt;controller&lt;/span&gt; &lt;span class="ss"&gt;:pages&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="ss"&gt;:qr_code_generator&lt;/span&gt;
  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="ss"&gt;:qr_code_download&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then the controller:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# app/controllers/pages_controller.rb&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PagesController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;qr_code_generator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;qr_code_download&lt;/span&gt;
    &lt;span class="n"&gt;send_data&lt;/span&gt; &lt;span class="no"&gt;RQRCode&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;QRCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:content&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;as_png&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;size: &lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="ss"&gt;type: &lt;/span&gt;&lt;span class="s1"&gt;'image/png'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;disposition: &lt;/span&gt;&lt;span class="s1"&gt;'attachment'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the code of the view:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;%# app/views/pages/qr_code_generator.html.erb %&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;QR code generator&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form_tag&lt;/span&gt; &lt;span class="ss"&gt;:qr_code_download&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;method: :get&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"field"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;label_tag&lt;/span&gt; &lt;span class="s1"&gt;'Text or URL'&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;text_field_tag&lt;/span&gt; &lt;span class="ss"&gt;:content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;required: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"actions"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;submit_tag&lt;/span&gt; &lt;span class="s1"&gt;'Generate QR code'&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Basically the view is to display a form where the user can add his text or URL and then it sends a request to &lt;code&gt;qr_code_download&lt;/code&gt; which actually generates a PNG for the QR code. The QR code will be downloaded on the user device since we use &lt;code&gt;disposition: 'attachment'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, if we prefer to display the QR code instead of downloading it, we can use a method similar to &lt;code&gt;qr_code_download&lt;/code&gt; but with &lt;code&gt;disposition: 'inline'&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>qrcode</category>
    </item>
    <item>
      <title>Dev log for Wonder Wanderer 2: Day 6 #LOWREZJAM</title>
      <author>Michael Primo</author>
      <pubDate>Fri, 06 Aug 2021 22:13:16 +0000</pubDate>
      <link>https://dev.to/michaelprimo/dev-log-for-wonder-wanderer-2-day-6-lowrezjam-4dd9</link>
      <guid>https://dev.to/michaelprimo/dev-log-for-wonder-wanderer-2-day-6-lowrezjam-4dd9</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-did-i-do-today"&gt;
  &lt;/a&gt;
  What did I do today?
&lt;/h3&gt;

&lt;p&gt;Today I managed to create my own collision system on map and also jumping and other skills! I can manage to create more gravity hazards (and other ones) from now! I am also thinking to change palette of the game.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_Jzk3XS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy3e5vnuzx16bq22xvk0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_Jzk3XS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy3e5vnuzx16bq22xvk0.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
It works!



</description>
      <category>devjournal</category>
      <category>javascript</category>
      <category>challenge</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>Career Change to Code</title>
      <author>Kirsten Hardern</author>
      <pubDate>Fri, 06 Aug 2021 21:14:41 +0000</pubDate>
      <link>https://dev.to/kirst_codes/career-change-to-code-2c1n</link>
      <guid>https://dev.to/kirst_codes/career-change-to-code-2c1n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-am-i-changing-careers"&gt;
  &lt;/a&gt;
  Why am I changing careers?
&lt;/h2&gt;

&lt;p&gt;One simple answer: I LOVE to code and program. Sure, I am not master of the trade yet, but dabbling in it here and there is enough to convince me that code is the perfect creative and logical blend. &lt;/p&gt;

&lt;p&gt;For years, I have dedicated myself to studying Microbiology, Genetics and Biotechnology. I even graduated and with my degree landed myself a job in the laboratory. I should have been living the dream, right? Nope. &lt;/p&gt;

&lt;p&gt;I would go home in the evenings, feeling exhausted and unsatisfied. Something was missing. I did not know what that something was until I started to help out family members build their websites on Wordpress.&lt;/p&gt;

&lt;p&gt;Opportunity brought forward a curiosity and passion I never knew I had. I left the laboratory and instead found myself working in a corporate environment to align myself with the thinking patterns of businesses that work with tech. Even if only to a degree, understanding the way tech businesses make money and their consumer markets is eye-opening. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-journey-of-juggling-learning-and-a-fulltime-job"&gt;
  &lt;/a&gt;
  The journey of juggling learning and a full-time job
&lt;/h2&gt;

&lt;p&gt;Well, I love learning new things about code. That makes it easier for me to forge my way through the unknown, despite there being mounds upon mounds of it. &lt;/p&gt;

&lt;p&gt;I give my all in my workdays, but in order to avoid feeling lethargic or experience the dreaded burnout, I set a hard start and stop time for work to ensure that the hours I spend learning are uninterrupted and available to me. Sure, there are days I cannot follow this exactly due to emergencies or other odd circumstances, however, sticking as closely as I can to the work-home time boundary is life changing. Is it easy? No! Is it worth it? A thousand times, yes!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-findings-the-best-way-to-learn-code-and-programming-languages"&gt;
  &lt;/a&gt;
  My findings: The best way to learn code and programming languages
&lt;/h2&gt;

&lt;p&gt;I find that getting trapped in an overwhelming pool of tutorials and courses is the biggest pitfall when it comes to learning code. Do yourself a favour, stop placing pressure on yourself to be a whizz and be able to replicate code from theory. Code is best learned by practicing. This can be done by trying to replicate technologies that you are interested in making yourself. &lt;/p&gt;

&lt;p&gt;Another issue is the feeling of having to learn at a rapid pace. If you don't understand something, even if you have put your "scheduled" time in for the subject, try other resources and practicing it until you have a firm understanding. The act of moving on to the next section because it seems like you are making swift progress is very destructive to your learning. &lt;/p&gt;

&lt;p&gt;I mentioned getting suck in by many courses, however, whilst that is a problem it is also ok to learn the same subject through multiple resources. Not all teaching types are the same and one source may sit better with you than another. Remember though, practicing is where the magic lies. Don't hop several courses before attempting to practice. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-goal"&gt;
  &lt;/a&gt;
  My goal
&lt;/h2&gt;

&lt;p&gt;I am building a solid foundation with code projects, whilst ensuring that I keep up with modern concepts through reading and interacting with tutorials that I find interesting. &lt;/p&gt;

&lt;p&gt;With time, I hope to get a job that allows room for me to me guided and mentored by seniors so that I can adapt my practice to real-world standards and gain an even deeper level of understanding. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V3_wLx_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1528716321680-815a8cdb8cbe%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1010%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V3_wLx_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1528716321680-815a8cdb8cbe%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1010%26q%3D80" alt="Motivational Image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>writing</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What Does "Right To Repair" Mean to You?</title>
      <author>Max Ong Zong Bao</author>
      <pubDate>Fri, 06 Aug 2021 20:56:42 +0000</pubDate>
      <link>https://dev.to/steelwolf180/what-does-right-to-repair-mean-to-you-5dgb</link>
      <guid>https://dev.to/steelwolf180/what-does-right-to-repair-mean-to-you-5dgb</guid>
      <description>&lt;p&gt;For me, &lt;strong&gt;Right to Repair&lt;/strong&gt; has always been the build quality of items that I use on a daily basis. Which given the right knowledge &amp;amp; access to the right parts. You can continue to use that product for a longer time. Thereby the product becomes cheaper to own in the long term basis despite they can be expensive to buy.&lt;/p&gt;

&lt;p&gt;Heck, I can even have the option to don't do it myself. Which I can find skilled craftsman or company to do the repairs for me. &lt;/p&gt;

&lt;p&gt;This spawned a cottage industry surrounding the product or a brand displaying their care for the customers. Bringing them tons of good will and brand loyalty like some of these great examples are &lt;a href="https://www.allenedmonds.com/discover/our-story/recrafting.html"&gt;Allen Edmonds Recrafting Services&lt;/a&gt; or &lt;a href="https://www.redwingshoes.com/customer-service-contact-us/repairs.html"&gt;Red Wings Repair&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This was precisely why I personally own 2 Allen Edmonds dress shoes for that specific reason. Because I could repair these shoes in my own country (Singapore) or ship them back to the US even when Allen Edmonds doesn't sell their shoes in my country.&lt;/p&gt;

&lt;p&gt;So what does &lt;strong&gt;Right to Repair&lt;/strong&gt; mean to you?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>hardware</category>
      <category>news</category>
    </item>
    <item>
      <title>Top 40 Docker interview questions (with answers)</title>
      <author>Erin Schaffer</author>
      <pubDate>Fri, 06 Aug 2021 20:35:23 +0000</pubDate>
      <link>https://dev.to/educative/top-40-docker-interview-questions-with-answers-5ba4</link>
      <guid>https://dev.to/educative/top-40-docker-interview-questions-with-answers-5ba4</guid>
      <description>&lt;p&gt;Docker is a popular open-source software platform that simplifies the process of creating, managing, running, and distributing applications. It uses containers to package applications along with their dependencies. Docker dominates the market. Most of the top cloud and IT companies have adopted Docker to streamline their application development workflows. The demand for applicants with Docker experience is high.&lt;/p&gt;

&lt;p&gt;Cracking your Docker interview is the key to landing one of these highly coveted roles. We’ve gathered the top 40 Docker interview questions to help you prepare for your Docker interview. This Docker tutorial includes both questions and answers. Let’s get started!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We'll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#questionanswer"&gt;Docker interview questions and answers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#morequestions"&gt;20 more interview questions to explore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#docker-interview-questions-and-answers"&gt;
  &lt;/a&gt;
  Docker interview questions and answers
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-what-are-docker-containers"&gt;
  &lt;/a&gt;
  1. What are Docker containers?
&lt;/h3&gt;

&lt;p&gt;Docker containers create an abstraction at the application layer and package applications together with all of their dependencies. This allows us to deploy applications quickly and reliably. Containers don’t require us to install a different operating system. Instead, they use the underlying system’s CPU and memory to perform tasks. This means that any containerized application can run on any platform regardless of the underlying operating system. We can also think of containers as runtime instances of Docker images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-what-is-a-dockerfile"&gt;
  &lt;/a&gt;
  2. What is a DockerFile?
&lt;/h3&gt;

&lt;p&gt;A Dockerfile is a text file that contains all of the commands that we need to run to build a Docker image. Docker uses the instructions in the Dockerfile to automatically build images. We can use &lt;code&gt;docker build&lt;/code&gt; to create automated builds that execute multiple command-line instructions in sequential order. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-how-do-you-create-a-docker-container-from-a-docker-image"&gt;
  &lt;/a&gt;
  3. How do you create a Docker container from a Docker image?
&lt;/h3&gt;

&lt;p&gt;To create a container from an image, we pull out the image that we want from the Docker repository and create a container. We can use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run -it -d &amp;lt;image_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-can-you-use-json-instead-of-yaml-for-docker-compose"&gt;
  &lt;/a&gt;
  4. Can you use JSON instead of YAML for Docker Compose?
&lt;/h3&gt;

&lt;p&gt;Yes, we can use a JSON file instead of a YAML file for the Docker Compose file. To use JSON, we need to specify the filename like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker-compose -f docker-compose.json up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-what-is-docker-swarm"&gt;
  &lt;/a&gt;
  5. What is Docker Swarm?
&lt;/h3&gt;

&lt;p&gt;Docker Swarm is a container orchestration tool that allows us to manage multiple containers across different host machines. With Swarm, we can turn multiple Docker hosts into a single host for easy monitoring and management.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-if-you-want-to-use-a-base-image-and-make-modifications-to-it-how-do-you-do-that"&gt;
  &lt;/a&gt;
  6. If you want to use a base image and make modifications to it, how do you do that?
&lt;/h3&gt;

&lt;p&gt;We can pull an image from Docker Hub onto our local system using the following Docker command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker pull &amp;lt;image_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-how-do-you-start-stop-and-kill-containers"&gt;
  &lt;/a&gt;
  7. How do you start, stop, and kill containers?
&lt;/h3&gt;

&lt;p&gt;To start a Docker container, use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker start &amp;lt;container_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To stop a Docker container, use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker stop &amp;lt;container_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To kill a Docker container, use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker kill &amp;lt;container_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-what-platforms-does-docker-run-on"&gt;
  &lt;/a&gt;
  8. What platforms does Docker run on?
&lt;/h3&gt;

&lt;p&gt;Docker runs on the following Linux distributions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CentOS 6+&lt;/li&gt;
&lt;li&gt;Gentoo&lt;/li&gt;
&lt;li&gt;ArchLinux&lt;/li&gt;
&lt;li&gt;CRUX 3.0+&lt;/li&gt;
&lt;li&gt;openSUSE 12.3+&lt;/li&gt;
&lt;li&gt;RHEL 6.5+&lt;/li&gt;
&lt;li&gt;Fedora 19/20+&lt;/li&gt;
&lt;li&gt;Ubuntu 12.04, 13.04&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Docker can also be used in production with these cloud services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Microsoft Azure&lt;/li&gt;
&lt;li&gt;Google Compute Engine&lt;/li&gt;
&lt;li&gt;Amazon AWS EC2&lt;/li&gt;
&lt;li&gt;Amazon AWS ECS&lt;/li&gt;
&lt;li&gt;Rackspace&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: We always recommend engaging in some company research prior to your interview. To prepare for this particular question, find out how to company uses Docker and include the platform they use in your answer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#9-explain-the-docker-components"&gt;
  &lt;/a&gt;
  9. Explain the Docker components.
&lt;/h3&gt;

&lt;p&gt;The three architectural components include Docker Client, Host, and Registry.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Docker Client&lt;/strong&gt;: This component executes build and run operations to communicate with the Docker Host.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Docker Host&lt;/strong&gt;: This component holds the Docker Daemon, Docker images, and Docker containers. The daemon sets up a connection to the Docker Registry.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Docker Registry&lt;/strong&gt;: This component stores Docker images. It can be a public registry, such as Docker Hub or Docker Cloud, or a private registry.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#10-whats-the-difference-between-virtualization-and-containerization"&gt;
  &lt;/a&gt;
  10. What's the difference between virtualization and containerization?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Virtualization helps us run and host multiple operating systems on a single physical server. In virtualization, hypervisors give a virtual machine to the guest operating system. The VMs form an abstraction of the hardware layer so each VM on the host can act as a physical machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Containerization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Containerization provides us with an isolated environment for running our applications. We can deploy multiple applications using the same operating system on a single server or VM. Containers form an abstraction of the application layer, so each container represents a different application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-what-is-the-functionality-of-a-hypervisor"&gt;
  &lt;/a&gt;
  11. What is the functionality of a hypervisor?
&lt;/h3&gt;

&lt;p&gt;A hypervisor, or virtual machine monitor, is software that helps us create and run virtual machines. It enables us to use a single host computer to support multiple guest virtual machines. It does this by dividing the system resources of the host and allocating them to the installed guest environments. Multiple operating systems can be installed on a single host operating system. There are two kinds of hypervisors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Native&lt;/strong&gt;: Native hypervisors, or bare-metal hypervisors, run directly on the underlying host system. It gives us direct access to the hardware of the host system and doesn’t require a base server operating system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hosted&lt;/strong&gt;: Hosted hypervisors use the underlying host operating system.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#12-how-do-you-build-a-dockerfile"&gt;
  &lt;/a&gt;
  12. How do you build a Dockerfile?
&lt;/h3&gt;

&lt;p&gt;In order to create an image with our outlined specifications, we need to build a Dockerfile. To build a Dockerfile, we can use the &lt;code&gt;docker build&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker build &amp;lt;path to dockerfile&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#13-what-command-do-you-use-to-push-a-new-image-to-the-docker-registry"&gt;
  &lt;/a&gt;
  13. What command do you use to push a new image to the Docker Registry?
&lt;/h3&gt;

&lt;p&gt;To push a new image to the Docker Registry, we can use the &lt;code&gt;docker push&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker push myorg/img
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#14-what-is-docker-engine"&gt;
  &lt;/a&gt;
  14. What is Docker Engine?
&lt;/h3&gt;

&lt;p&gt;Docker Engine is an open-source containerization technology that we can use to build and containerize our applications. Docker Engine is supported by the following components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docker Engine REST API&lt;/li&gt;
&lt;li&gt;Docker Command-Line Interface (CLI)&lt;/li&gt;
&lt;li&gt;Docker Daemon&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#15-how-do-you-access-a-running-container"&gt;
  &lt;/a&gt;
  15. How do you access a running container?
&lt;/h3&gt;

&lt;p&gt;To access a running container, we can use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker exec -it &amp;lt;container_id&amp;gt; bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#16-how-do-you-list-all-the-running-containers"&gt;
  &lt;/a&gt;
  16. How do you list all the running containers?
&lt;/h3&gt;

&lt;p&gt;To list all of the running containers, we can use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker ps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#17-describe-the-lifecycle-of-a-docker-container"&gt;
  &lt;/a&gt;
  17. Describe the lifecycle of a Docker container.
&lt;/h3&gt;

&lt;p&gt;Docker containers go through the following stages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a container&lt;/li&gt;
&lt;li&gt;Run the container&lt;/li&gt;
&lt;li&gt;Pause the container (optional)&lt;/li&gt;
&lt;li&gt;Un-pause the container (optional)&lt;/li&gt;
&lt;li&gt;Start the container&lt;/li&gt;
&lt;li&gt;Stop the container&lt;/li&gt;
&lt;li&gt;Restart the container&lt;/li&gt;
&lt;li&gt;Kill the container&lt;/li&gt;
&lt;li&gt;Destroy the container&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#18-what-are-docker-object-labels"&gt;
  &lt;/a&gt;
  18. What are Docker object labels?
&lt;/h3&gt;

&lt;p&gt;Docker object labels are key-value pairs that are stored as strings. They enable us to add metadata to Docker objects such as containers, networks, local daemons, images, Swarm nodes, and services. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19-how-do-you-ensure-that-container-1-runs-before-container-2-while-using-docker-compose"&gt;
  &lt;/a&gt;
  19. How do you ensure that container 1 runs before container 2 while using Docker Compose?
&lt;/h3&gt;

&lt;p&gt;Docker Compose doesn’t wait for containers to be ready before moving forward with the next container. In order to control our order of execution, we can use the "depends on" condition, &lt;code&gt;depends_on&lt;/code&gt;. Here’s an example of it being used in a docker-compose.yml file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: "2.4"
services:
 backend:
   build: .
   depends_on:
     - db
 db:
   image: postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;docker-compose up&lt;/code&gt; command will start and run the services in the dependency order that we specify.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#20-what-does-the-raw-docker-create-endraw-command-do"&gt;
  &lt;/a&gt;
  20. What does the &lt;code&gt;docker create&lt;/code&gt; command do?
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;docker create&lt;/code&gt; command creates a writable container layer over a specified image and prepares that image for running the specified command.&lt;/p&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-more-interview-questions-to-explore"&gt;
  &lt;/a&gt;
  20 more interview questions to explore
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;21. Explain Docker architecture.&lt;/li&gt;
&lt;li&gt;22. What's the difference between CMD and ENTRYPOINT?&lt;/li&gt;
&lt;li&gt;23. What is the purpose of the volume parameter in a Docker run command?&lt;/li&gt;
&lt;li&gt;24. Is it a good practice to run stateful applications on Docker?&lt;/li&gt;
&lt;li&gt;25. What are Docker Namespaces?&lt;/li&gt;
&lt;li&gt;26. Explain the implementation method of continuous integration and continuous deployment in Docker.&lt;/li&gt;
&lt;li&gt;27. What is the process for stopping and restarting a Docker container?&lt;/li&gt;
&lt;li&gt;28. How do you give your Docker image an image name?&lt;/li&gt;
&lt;li&gt;29. What does the &lt;code&gt;docker service&lt;/code&gt; command do?&lt;/li&gt;
&lt;li&gt;30. Can you lose data when the container exits?&lt;/li&gt;
&lt;li&gt;31. How do Jenkins and Docker work together?&lt;/li&gt;
&lt;li&gt;32. How far do Docker containers scale?&lt;/li&gt;
&lt;li&gt;33. Describe the differences between daemon logging and container logging.&lt;/li&gt;
&lt;li&gt;34. Explain the purposes of up, run, and start commands of Docker compose.&lt;/li&gt;
&lt;li&gt;35. Where are Docker volumes stored?&lt;/li&gt;
&lt;li&gt;36. Explain the difference between Docker image and layer.&lt;/li&gt;
&lt;li&gt;37. Can a paused container be removed from Docker?&lt;/li&gt;
&lt;li&gt;38. How do you use the &lt;code&gt;docker save&lt;/code&gt; and &lt;code&gt;docker load&lt;/code&gt; commands?&lt;/li&gt;
&lt;li&gt;39. What is the default Docker network driver? How can you change it when running a Docker image?&lt;/li&gt;
&lt;li&gt;40. What does the &lt;code&gt;docker system prune&lt;/code&gt; command do?&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;Congrats! You made it to the end. Preparing for your Docker interview will take time, so be patient with the process. Be prepared to spend a lot of time studying and preparing. There’s still more to learn about Docker. Some recommended topics to cover next include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docker with common development profiles&lt;/li&gt;
&lt;li&gt;Docker security&lt;/li&gt;
&lt;li&gt;Private registries&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get started learning these concepts and a lot more, check out Educative's learning path &lt;a href="https://www.educative.io/path/devops-for-developers"&gt;&lt;strong&gt;DevOps for Developers&lt;/strong&gt;&lt;/a&gt;. In this curated learning path, you’ll get hands-on practice with Docker and Kubernetes. By the end, you’ll have cutting-edge stills and hands-on experience so you can excel in your DevOps role.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#continue-reading-about-interview-prep"&gt;
  &lt;/a&gt;
  Continue reading about interview prep
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/python-interview-questions"&gt;50 Python interview questions and answers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/top-react-native-interview-questions"&gt;Top 50 React Native interview questions (with answers)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/hardest-coding-interview-questions"&gt;Top 5 hardest coding interview questions from recent FAANG interviews&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>docker</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Set Yourself Up For an Easier Development Project...</title>
      <author>Fannie E Gunton</author>
      <pubDate>Fri, 06 Aug 2021 20:33:38 +0000</pubDate>
      <link>https://dev.to/fanniegunton/set-yourself-up-for-an-easier-development-project-1j61</link>
      <guid>https://dev.to/fanniegunton/set-yourself-up-for-an-easier-development-project-1j61</guid>
      <description>&lt;h1&gt;
  &lt;a href="#-and-give-this-guide-to-your-next-client"&gt;
  &lt;/a&gt;
  ... And Give This Guide To Your Next Client
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;These are a series of client-directed notes that I put together following a really poorly-planned project with the intent of communicating how to do better next time. Will each of these items seem obvious to us as developers? Certainly. How about to our clients and designers that are directing the work? Too often, not at all. Read on --&amp;gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tl;dr -&lt;/strong&gt; Put together a clear design that is complete before the development work gets started. Give all of those details to your developer up front. If they ask questions before or during, give a complete answer. They should not have to make any assumptions or guesses unless you have hired them to do that planning and/or design work in addition to development. Treat them well, and have a clear idea about your budget going in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-more-with-the-design-doc"&gt;
  &lt;/a&gt;
  Do More With The Design Doc:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Lay out page designs in such a way that the user flow is clear, and the developer does not have to wonder about how the pages function.&lt;/li&gt;
&lt;li&gt;Add all element states to the design (e.g., provide an image of a mobile nav menu both when opened and when closed).&lt;/li&gt;
&lt;li&gt;Add a Typography key to the design docs with size, weight, color, and style changes for each type of text used on page&lt;/li&gt;
&lt;li&gt;Provide a color palette in the design doc and verify that the hex/rgb codes displayed are correct. &lt;/li&gt;
&lt;li&gt;Think about your overall styles globally, and design the mocks to match. Note those details in your design. This will enable your developer to style the site globally and only restyle smaller changes per component or page rather than having to write out styles over and over again throughout the site. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#make-a-cohesive-project-plan"&gt;
  &lt;/a&gt;
  Make A Cohesive Project Plan:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use consistent naming across the design, written documentation, and in communications for site-specific elements. And if those names change, post an update to your developer ASAP.&lt;/li&gt;
&lt;li&gt;Outline the data structure for the site. You may know exactly how the data for a series of pages nests together (e.g. albums, songs, lyrics, &amp;amp; videos), but someone you’ve hired for a short window of time does not. The more they have to look up, ask about, figure out, or do on their own all costs time &amp;amp; money.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-big-little-things"&gt;
  &lt;/a&gt;
  The Big Little Things:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Provide all assets up front. For any that are still pending, alert your dev to what is missing and what the ETA is.&lt;/li&gt;
&lt;li&gt;Give pertinent information directly to your developer up front and upon request. The more your developer has to look up, ask about, figure out, or do on their own all costs money &lt;em&gt;in addition to&lt;/em&gt; the actual costs of writing the code. This includes asking them to search through old threads or readme’s rather than grabbing the info yourself and sending it over.&lt;/li&gt;
&lt;li&gt;Establish the channels for communication up front, and stick to them. Keep it professional. If your project chat is all in Slack, don't text their personal number (especially if they never gave you their number!).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hiring-developers-from-a-dev-community"&gt;
  &lt;/a&gt;
  Hiring Developers From A Dev Community?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Developers hired from a particular community are there for jobs using that software/framework/approach. For instance, if you hire a developer from a modern CMS software community, that means they are ready to build reusable components that pull data from the CMS to flesh out the pages. If you decide instead to hardcode the data and build bulkier pages &amp;amp; components, you are not getting the best out of your dev. In fact, you might be forcing them to do more &amp;amp; longer work for a lesser reward. &lt;/li&gt;
&lt;li&gt;That community is probably more closely-knit than you think! Keep that in mind before underpaying, bad-mouthing, or setting completely incorrect expectations up front about the project requirements. Your reputation matters, too.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#keeping-the-budget-low"&gt;
  &lt;/a&gt;
  Keeping The Budget Low?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Simplify the design as much as you can. Every little bit extra adds up! Examples: 

&lt;ul&gt;
&lt;li&gt;When re-sizing, keep your elements in the same order, the same colors, etc.&lt;/li&gt;
&lt;li&gt;Conditional formatting of elements that you might be building into the design. &lt;/li&gt;
&lt;li&gt;Consistency keeps it simple *&lt;em&gt;and&lt;/em&gt; leads to a better design. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Put copy in the data, not in the code. Dealing with copy in the code is nitpicky and adds time.
&lt;/li&gt;
&lt;li&gt;And if your budget is so low that you cannot reasonably pay a developer or are inclined to negotiate them down far below their rate, consider the "no-code" options and hire a developer to build your custom site later once you can afford it. There's no shame in going this route.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Feel free to share this link or copy/paste the items that line up closest with your own project needs in your own communications.&lt;/p&gt;

&lt;p&gt;Otherwise, I'd love to know your thoughts! Have you run into these issues with your clients? Have other suggestions to add to the list? Let me know in the comments.&lt;/p&gt;




&lt;p&gt;Still here? Great! I'm trying to connect with more developers on &lt;a href="https://twitter.com/fanniegunton"&gt;Twitter&lt;/a&gt; so I can ask the questions and share quick insights and aha's as I find them. See y'all there!&lt;/p&gt;

&lt;p&gt;Cover Photo by &lt;a href="https://unsplash.com/@micheile?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Visual Stories || Micheile&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/easy?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>career</category>
      <category>contracting</category>
    </item>
    <item>
      <title>📚 Git Branching Explained With A Story 📚</title>
      <author>Adam Gordon Bell</author>
      <pubDate>Fri, 06 Aug 2021 19:54:21 +0000</pubDate>
      <link>https://dev.to/adamgordonbell/story-time-git-branching-strategies-explained-42d1</link>
      <guid>https://dev.to/adamgordonbell/story-time-git-branching-strategies-explained-42d1</guid>
      <description>&lt;p&gt;👋 Hello 👋&lt;br&gt;
I've been a professional software developer for 15 years now and I've had this realization.&lt;/p&gt;

&lt;p&gt;Some modern development practices are easiest to understand from a historical perspective. &lt;/p&gt;

&lt;p&gt;Things started a certain way, and then steps were added or removed as conditions changed. If you don't know the backstory, then the current state of the world can seem arbitrary and confusing. &lt;strong&gt;Git branching is like that&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-plan"&gt;
  &lt;/a&gt;
  The Plan
&lt;/h2&gt;

&lt;p&gt;I'm going to explain various git branching strategies with a story. We will start with something straightforward and add complexity as we go. Eventually, we will end up back simple again.&lt;/p&gt;

&lt;p&gt;I hope that explaining things this way will give you a deeper understanding of when to use specific branching and merging strategies. So instead of telling you how to cherry-pick a bug fix into a hotfix branch using GitFlow work, I can describe the conditions that would lead to adopting that process. Once you understand the whys, the hows will be easier.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ashelysoft-2006"&gt;
  &lt;/a&gt;
  AshelySoft 2006
&lt;/h2&gt;

&lt;p&gt;The year is 2006, and Ashley Protagonist starts a software business. She builds and sells an eCommerce solution she wrote in PHP. It's just her building and selling it, but she uses a new source control solution called git to store her software. She starts with trunk-based development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trunk-based-development"&gt;
  &lt;/a&gt;
  Trunk Based Development
&lt;/h2&gt;

&lt;p&gt;Trunk-based development is working on the main, or trunk branch. Ashley commits her code right into the main branch on her local machine and, when she has complete a feature, she pushes her code to the source control server.  &lt;/p&gt;

&lt;p&gt;Customers pay for her software, and she emails them a link to the current version as an archive file using &lt;a href="https://git-scm.com/docs/git-archive"&gt;git archive&lt;/a&gt;. She is a PHP developer, so she whips up a simple PHP script that returns the git archive for the branch requested.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y048DMbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earthly.dev/blog/generated/assets/images/git-branching/email2-800-c3cecc459.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y048DMbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earthly.dev/blog/generated/assets/images/git-branching/email2-800-c3cecc459.webp" alt="grab your copy of AshelySoft"&gt;&lt;/a&gt;&lt;/p&gt;
Simple Release Distribution



&lt;p&gt;Her customers then install her software on their web servers, where they use it to run their eCommerce businesses.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mainline-development"&gt;
  &lt;/a&gt;
  MainLine Development
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#fun-fact-trunk-vs-main"&gt;
  &lt;/a&gt;
  ℹ️ Fun Fact: Trunk VS. Main
&lt;/h3&gt;

&lt;p&gt;If Ashley had chosen subversion or CVS, which were more prevalent in 2006, she would have called her branch &lt;code&gt;trunk&lt;/code&gt; because every branch is branched off the trunk like a real-world tree. This is where the term trunk-based development comes from. However, Ashley uses &lt;code&gt;main&lt;/code&gt;, so she may prefer the term mainline development. It's the same thing, just a different name.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#release-branches"&gt;
  &lt;/a&gt;
  Release Branches
&lt;/h2&gt;

&lt;p&gt;Ashley's business succeeds. She acquires many more customers and hires more developers and a customer-support person. Support becomes problematic, though, as some customers are very slow to upgrade, and it's unclear what version any given customer is on. Additionally, customers can't keep up with the latest version when every commit is a new version, and there are no version numbers.&lt;/p&gt;

&lt;p&gt;So she decides to batch up the changes into monthly releases and create a new release branch for each revision. Of course, she could use tags for these releases, but branches and tags are pretty similar, and she already has her release script in place.  &lt;/p&gt;

&lt;p&gt;Now her support people can ask customers what version they are on. If it's more than two releases back, they ask them to upgrade. That is, AshelySoft only supports the current release and the two previous versions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cutting-a-release"&gt;
  &lt;/a&gt;
  Cutting a Release
&lt;/h2&gt;

&lt;p&gt;There was a time before modern source control when creating a release branch was an expensive process that had to be planned. "Cutting a Release" was the name for this process, which involved locking down the source and starting the lengthy process of 'cutting a release branch off the trunk'. People still use the phrase today.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Well, the performance was so bad that when they wanted to cut a branch, they would announce it ahead of time. They would schedule the branching because you didn't want anybody else committing while you were branching, because that would totally screw things up. Right? And I said, "Okay, Friday at 2:00 pm., we're going to cut the branch." Then all activity would stop, access to the server would be cut off."&lt;/p&gt;

&lt;p&gt;And it would take 45 minutes to cut this branch. And then you'd say, "Okay, we've opened up the branch. Everybody can start working again."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://corecursive.com/software-that-doesnt-suck-with-jim-blandy/"&gt;Jim Blandy&lt;/a&gt; creator of Subversion&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#hot-fixes-and-the-multiverse"&gt;
  &lt;/a&gt;
  Hot Fixes and the Multiverse
&lt;/h2&gt;

&lt;p&gt;This is all working great. Ashley starts scaling the development team, and they start shipping more features. Unfortunately, while each monthly release now contains more cool new features, more regressions and bugs start slipping into the releases as well.&lt;/p&gt;

&lt;p&gt;Some customers respond to this by not upgrading right away. If they are well-served by the current product, they can stay two releases back and get active support while giving the latest release time to stabilize. Bugs do show up in the old versions, though, and this is where things get interesting.&lt;/p&gt;

&lt;p&gt;Up until now, time, as viewed by AshelySoft's source control, moves forward in a single line. There is one &lt;code&gt;main&lt;/code&gt; branch that represents one linear release timeline. But now, when bugs are found, they need to be addressed in multiple versions of the product. And you can't simply ask people to upgrade because they are still on a supported version, and they are correctly worried about the quality of the latest release. They want the version they have plus the bug fixes, with no new development.&lt;/p&gt;

&lt;p&gt;You are now in the hot fixing multiverse. AshelySoft has to fix bugs in the latest version and all other active versions. Each release is a separate timeline where active development ceased at the release date, but bugs continued to be fixed.&lt;/p&gt;

&lt;p&gt;If you've seen any time travel movies, you probably realize that this can get complex. What if a bug fix to back release introduces a bug of its own? Thankfully AshelySoft is only supporting two active versions back and only supporting them for a couple of months. Suppose they were supporting back versions for several years. In that case, they might find themselves spending more and more time maintaining all these versions, and the various versions would slowly drift away from each other.&lt;/p&gt;

&lt;p&gt;Nevertheless, release branches are an enormous help for AshelySoft. They help customers stay on a version that works for them, while AshelySoft can still push new features. However, it does increase the amount of effort that fixing bugs requires, and dealing with that will lead to AshelySoft's next innovation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-raw-develop-endraw-branch"&gt;
  &lt;/a&gt;
  The &lt;code&gt;develop&lt;/code&gt; Branch
&lt;/h2&gt;

&lt;p&gt;The cost of shipping bugs has now increased for AshelySoft. In the worse case, a bug isn't discovered until it's in all active versions of the software and the code between versions has changed enough that the fix is slightly different in each version, tripling the bug fix cost.&lt;/p&gt;

&lt;p&gt;Fortunately, a solution for this does exist: Continuing with our time travel/multiverse analogy, we need to travel back in time and stop the bug before our releases branches off the main timeline. Unfortunately, AshelySoft does not have access to literal time travel machines, but Ashley has a more straightforward idea: Catch the bugs before they are released.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gitflow-to-the-rescue"&gt;
  &lt;/a&gt;
  GitFlow to the Rescue
&lt;/h2&gt;

&lt;p&gt;A popular branching method called &lt;a href="https://nvie.com/posts/a-successful-git-branching-model/"&gt;GitFlow&lt;/a&gt; has excellent suggestions for achieving this: you create a &lt;code&gt;develop&lt;/code&gt; branch. So now all new work goes into &lt;code&gt;develop,&lt;/code&gt; and instead of 4 weeks of development in each release, you spend the last week stabilizing &lt;code&gt;develop&lt;/code&gt;. You make sure &lt;code&gt;develop&lt;/code&gt; has no bugs as best you can, and when it seems stable, you merge it into main and then cut a release branch off main.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"We consider origin/develop to be the main branch where the source code of HEAD always reflects a state with the latest delivered development changes for the next release. Some would call this the "integration branch". This is where any automatic nightly builds are built from."&lt;/p&gt;

&lt;p&gt;"When the source code in the develop branch reaches a stable point and is ready to be released, all of the changes should be merged back into master somehow and then tagged with a release number."&lt;/p&gt;

&lt;p&gt;GitFlow Explanation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This whole process adds more overhead to the branching and release process, but it's a fixed cost overhead, and it saves a lot of HotFixing bugs on release branches. AshelySoft, following the git-flow model, also adds a &lt;a href="https://dev.to/blog/continuous-integration"&gt;continuous integration&lt;/a&gt; service. When new code shows up in &lt;code&gt;develop&lt;/code&gt;, &lt;a href="https://dev.to/blog/unit-vs-integration"&gt;automated tests&lt;/a&gt; are run.&lt;/p&gt;

&lt;p&gt;This setup, git-flow and CI on develop branch, with release branches and hot fixing serves AshelySoft for several years. However, it is a complicated process. Thankfully, from here on out, AshelySoft's process will only get simpler. The first thing that helps to simplify things is &lt;code&gt;The Cloud&lt;/code&gt;™️.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-cloud"&gt;
  &lt;/a&gt;
  The Cloud
&lt;/h2&gt;

&lt;p&gt;AshelySoft customers want to run an eCommerce store. However, they don't want to run a web server. After repeatedly getting this feedback, Ashley shifts the company to be a Software-As-A-Service (SAAS) company. It takes some extensive work, but AshelySoft eCommerce becomes a multi-tenant eCommerce platform. No more &lt;code&gt;git archive&lt;/code&gt; releases. Now the release process is deploying the latest version of the main branch onto the production server.&lt;/p&gt;

&lt;p&gt;There are downsides to this SAAS model. AshelySoft now owns the uptime of all their customers, and this is eCommerce, so real money is lost when things go down. But, the customers are willing to pay more for AshelySoft to worry about these problems. They no longer have to support multi releases at a time - no more hot fixing bugs back into old versions, no more multiverse of drifting branches to update, and no more release branches. To make this work, AshelySoft works off a simple rule: &lt;code&gt;main&lt;/code&gt; must be releasable. Before anyone can merge &lt;code&gt;develop&lt;/code&gt; into &lt;code&gt;main&lt;/code&gt; they must make sure the continuous integration build is passing, and if they find problems that the CI process missed, they do their best to make sure CI will catch it in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-flow"&gt;
  &lt;/a&gt;
  GitHub Flow
&lt;/h2&gt;

&lt;p&gt;Around this time, GitHub private repositories appear, and AshelySoft moves from their own git hosting to GitHub and starts following a Pull Request process. Instead of pushing code straight into &lt;code&gt;develop&lt;/code&gt; and then ensuring they didn't break the build, developers now create pull-requests. Other team members review the pull-requests, and the continuous integration service runs its suite of tests right on the PR. As a result, the speed of getting code into &lt;code&gt;develop&lt;/code&gt; has decreased, but with each PR being manually reviewed and automatically tested, the quality of code that makes it into the &lt;code&gt;develop&lt;/code&gt; branch is way up.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#death-to-raw-develop-endraw-"&gt;
  &lt;/a&gt;
  Death to &lt;code&gt;develop&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;With the quality of &lt;code&gt;develop&lt;/code&gt; now increased, AshelySoft can increase its release velocity. They even adopt a continuous deployment model where a merge into &lt;code&gt;main&lt;/code&gt; causes the software to be automatically deployed. From there, they move to a &lt;a href="https://dev.to/blog/deployment-strategies/#canary-deployment"&gt;Canary deployment model&lt;/a&gt; where a new release is tested on a small portion of web traffic before it's fully deployed. Once a PR is merged, Ashley just has to merge &lt;code&gt;develop&lt;/code&gt; into &lt;code&gt;main&lt;/code&gt; to perform a release.&lt;/p&gt;

&lt;p&gt;But what is the point of having &lt;code&gt;develop&lt;/code&gt; and merging it into &lt;code&gt;main&lt;/code&gt;? It was introduced to prevent the release of bugs by giving the software time to 'integrate', but AshelySoft is doing all the integration as part of the PR process. So they drop the &lt;code&gt;develop&lt;/code&gt; branch.  &lt;/p&gt;

&lt;p&gt;Ashley has come a long way but sometimes what is old is new again. She is now back to doing trunk-based or mainline development. Just like when she built the first version: features go into &lt;code&gt;main&lt;/code&gt;, and the HEAD of &lt;code&gt;main&lt;/code&gt; is constantly released.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lessons-learned"&gt;
  &lt;/a&gt;
  Lessons Learned
&lt;/h2&gt;

&lt;p&gt;There is a lot about git merging strategies, continuous integration, and deployment that doesn't seem to make sense without going through a long journey like Ashely's.  &lt;/p&gt;

&lt;p&gt;For instance, calling software that builds and tests code a continuous integration process only makes sense when you understand what non-continuous integration was. It was spending time manually testing the upcoming release for days or even weeks before feeling confident enough to release it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hopefully this historical perspective helps you understand why &lt;code&gt;main&lt;/code&gt; branches, and feature branches, and &lt;code&gt;develop&lt;/code&gt; branches exist.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And with this background you'll can tell when a complicated branching and release processes is useful and when it serves no purpose.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ashely's story is fictional, and history didn't necessarily unfold this way for all or even most software shops, but I think it's helpful to understand where we are coming from and how cloud and SAAS workflows influence branching models.&lt;/p&gt;

&lt;p&gt;Some software always had an extensive review process, and much software will never be cloud-based and will continue to deal with release branches and backporting fixes. But some software has moved to the cloud and yet hasn't embraced the simplified workflows that cloud deployment can enable.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this story / lesson. Follow me on dev.to and like the story to encourage more writing in the future. &lt;/p&gt;

&lt;p&gt;A longer version of this article is found on earthly called &lt;a href="https://earthly.dev/blog/git-branching/"&gt;Git Branching Strategies and The Greek Revival&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>github</category>
    </item>
  </channel>
</rss>
