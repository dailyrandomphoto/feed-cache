<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10 Must read Books for Coder and Non Coders (personal reviews)</title>
      <author>Dev Write Ups</author>
      <pubDate>Tue, 11 May 2021 02:49:34 +0000</pubDate>
      <link>https://dev.to/devwriteups/10-must-read-books-for-coder-and-non-coders-personal-reviews-2k84</link>
      <guid>https://dev.to/devwriteups/10-must-read-books-for-coder-and-non-coders-personal-reviews-2k84</guid>
      <description>&lt;p&gt;A book can characterize an individual's inclination and knowledge. On the off chance that you are a coder, you ought to be additionally a decent peruser on the grounds that it builds up the brain and the psyche is your weapon.  You need to prepare it day by day. Prior to discovering any answer for an issue Reading and understanding the issues is the most significant in the event that you are a coder or any difficult solver. Without great perusing and appreciation abilities, an individual sets aside more effort to comprehend the issues prior to tackling it. &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#for-noncoder"&gt;
  &lt;/a&gt;
  For Non-Coder
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#cryptonomicon"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3nXV2oa"&gt;Cryptonomicon &lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Cryptonomicon-Neal-Stephenson/dp/0060512806?dchild=1&amp;amp;keywords=Cryptonomicon&amp;amp;qid=1620536298&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=a87a6f9327ebfee8a980b22fca0abaef&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=0060512806&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m2k9qPFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D0060512806" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2k9qPFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D0060512806" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The book is somewhat delayed toward the start, and on the off chance that you are not used to Neal Stepheson's composing style (This was my first) you may get somewhat confounded and irritated.But kindly read on in light of the fact that after around 50 - 60 pages, you will be enchanted!!! This book genuinely is a work of art and for all individuals who has some information around IT this is an unquestionable requirement perused. ( Not saying non-specialized people cannot appreciate it ..... however, for IT people, I trust it will be considerably more charming)&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3nXV2oa"&gt;Cryptonomicon &lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#atomic-habits"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3bcFx6K"&gt; Atomic Habits&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Atomic-Habits-James-Clear/dp/1847941834?dchild=1&amp;amp;keywords=Atomic+Habits&amp;amp;qid=1620536573&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=d093d3e8f371237c67acd48f62633bcd&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=1847941834&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WL3ZEtdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1847941834" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WL3ZEtdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1847941834" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a remarkable book! I have perused such countless books as a feature of my self-awareness yet I generally find that writers wind up extolling themselves all through persistently continuing forever about their own accomplishments. Indeed you finish the book feeling siphoned up partially and feeling like you as well, can be a whiz just to end up in a similar spot seven days after the fact. &lt;/p&gt;

&lt;p&gt;This book is totally extraordinary, a straightforward, rational viable piece with fabulous takeaways which anybody can apply so effectively to find a place with their way of life. It is so orderly in it's methodology thus clear&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3bcFx6K"&gt; Atomic Habits&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deep-work"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3vXnJo1"&gt;Deep Work&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Deep-Work-Focused-Success-Distracted/dp/0349413681?dchild=1&amp;amp;keywords=Deep+Work&amp;amp;qid=1620541734&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=c3b4c222da0713512143a11491bd453f&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=0349413681&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WpGYRc8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D0349413681" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WpGYRc8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D0349413681" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deep work is a book for everybody albeit the writer accentuates it for information laborers. As I would like to think it is for money managers who needs to accomplish their objectives in their furious timetable, educators (resources) who needs to seek after explore notwithstanding their scholastic obligations, or a business person who needs to expand the profitability and innovativeness of the group, or simply some arbitrary person who needs to invest some quality energy with family yet can't. Books assists you with creating self-restraint. This book can best be put among books like Outliers/Mastery/Flow/Peak and so forth where significance of work and it's ramifications are clarified. Just thing is Deep work is more point by point as far as methodologies and touch less on brain science considers.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3vXnJo1"&gt;Deep Work&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eat-that-frog"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3tw2b0a"&gt;Eat that Frog&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Eat-That-Frog-Great-Procrastinating/dp/152309513X?&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=315991fb0a4eac3ff1f1412f734e877c&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=152309513X&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--458PTcBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D152309513X" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--458PTcBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D152309513X" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a book that I decide to peruse consistently not long prior to Eating the Frog and it's really a piece of my Miracle Morning. Every single section is very short yet mind you, the Content is incredibly acceptable. You should simply peruse the entire book once and plan your Goal and Plan of activity following the standards lying in the book and attempt to peruse atleast 1 section/rule consistently and in a matter of seconds you will be the place where you need to be.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3tw2b0a"&gt;Eat that Frog&lt;/a&gt; &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#for-coders"&gt;
  &lt;/a&gt;
  For Coders
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#the-pragmatic-programmer"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3vUH0GK"&gt;The Pragmatic Programmer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Pragmatic-Programmer-Anniversary-Journey-Mastery/dp/B0833FBNHV?dchild=1&amp;amp;keywords=the+pragmatic+programmer&amp;amp;qid=1620534258&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=blog0bb2-20&amp;amp;linkId=899c412967a45cf928cd57d61b165383&amp;amp;language=en_US&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B0833FBNHV&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=blog0bb2-20&amp;amp;language=en_US"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1asJjTdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-na.amazon-adsystem.com/e/ir%3Ft%3Dblog0bb2-20%26language%3Den_US%26l%3Dli2%26o%3D1%26a%3DB0833FBNHV" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1asJjTdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-na.amazon-adsystem.com/e/ir%3Ft%3Dblog0bb2-20%26language%3Den_US%26l%3Dli2%26o%3D1%26a%3DB0833FBNHV" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This book will show not about codes, in some cases you can peruse but rather the fundamental thought is to be a superior developer and think better, break the issues, consider calculation without help from anyone else. There isn't a lot to say, see the primary version was composed 20 years prior and when you begin perusing you see the nature of the book. Its separated in certain themes inside certain subjects. You can peruse by look or follow cover as far as possible. This book doesn't have a particular language or a 'formula' to follow, really it will open your brain to think better.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3vUH0GK"&gt;The Pragmatic Programmer&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-simplicity"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3h7DDbc"&gt;Code Simplicity&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Code-Simplicity-Max-Kanat-alexander/dp/1449313892?_encoding=UTF8&amp;amp;qid=1620535681&amp;amp;sr=1-1&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=0423cfd1dac6b395f6a04bbf8d863989&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=1449313892&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4piNqVx---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1449313892" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4piNqVx---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1449313892" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The book is only 88 pages, yet experiences are helpful for any computer programmer. &lt;/p&gt;

&lt;p&gt;At whatever point I go over strong explanations in the book, I would sit and think for 2 minutes to associate with my programming experience. More often than not I had the option to think of substantial model. &lt;/p&gt;

&lt;p&gt;This book is energetically suggested for developers who had invested huge energy perusing different software engineers code. On the off chance that you are an accomplished developer you can think about the focuses in the books as to approve your present convictions. I will in general concur on the entirety of the focuses referenced in the book and associate with open source projects in certain and negative sense. &lt;/p&gt;

&lt;p&gt;Not many of my top picks: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Everybody who composes programming is fashioner. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Design isn't majority rules system. Choices ought to be made by people. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is something about future you don't have the foggiest idea. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be just pretty much as conventional as you most likely are aware you should be at the present time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Get the Book -&amp;gt;  &lt;a href="https://amzn.to/3h7DDbc"&gt;Code Simplicity&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coders-the-making-of-a-new-tribe-and-the-remaking-of-the-world"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/2RB3wpd"&gt;Coders: The Making of a New Tribe and the Remaking of the World&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Coders-Making-Tribe-Remaking-World/dp/0735220581?dchild=1&amp;amp;keywords=Coders&amp;amp;qid=1620534616&amp;amp;sr=8-2&amp;amp;linkCode=li2&amp;amp;tag=blog0bb2-20&amp;amp;linkId=0ea80afbb857e3d5e5af78149e76100b&amp;amp;language=en_US&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=0735220581&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=blog0bb2-20&amp;amp;language=en_US"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wclI_B7Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-na.amazon-adsystem.com/e/ir%3Ft%3Dblog0bb2-20%26language%3Den_US%26l%3Dli2%26o%3D1%26a%3D0735220581" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wclI_B7Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-na.amazon-adsystem.com/e/ir%3Ft%3Dblog0bb2-20%26language%3Den_US%26l%3Dli2%26o%3D1%26a%3D0735220581" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I get so energized when I track down an extraordinary book. I completed this book in seven days: intriguing and elegantly composed. It's true to life however it peruses practically like a novel, making it simple and amusing to peruse. I don't anticipate turning into a coder yet this has assisted me with seeing how pertinent software engineers are in the functioning scene. I altogether delighted in it; you will not find the mysteries of the universe or be motivated to set up a business, however it's a light and agreeable read. Suggested!&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt;  &lt;a href="https://amzn.to/2RB3wpd"&gt;Coders&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coders-at-work-reflections-on-the-craft-of-programming-paperback"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3trkR13"&gt;Coders at Work: Reflections on the Craft of Programming Paperback&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Coders-Work-Reflections-Craft-Programming/dp/1430219483?dchild=1&amp;amp;keywords=Coders+at+work&amp;amp;qid=1620535805&amp;amp;sr=8-2&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=17300407625f1e52ad7037e4b9ad110b&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=1430219483&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Zhm3p2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1430219483" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Zhm3p2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3D1430219483" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This resembles a set of experiences course book of the processing age. It's essentially an assortment of meetings with eminent developers, done in a characteristic and decipherable style. In case you're a geek, or you're in the innovation business in any capacity, at that point you should peruse it to get a feeling of where "it" all came from, and particularly to hear from a portion of individuals who got it going. &lt;/p&gt;

&lt;p&gt;The difference between the various meetings is intriguing by its own doing - you can go starting with one person then onto the next to get a totally extraordinary or in any event, restricting perspective, so the final product is a wide viewpoint.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt;  &lt;a href="https://amzn.to/3trkR13"&gt;Coders at Work: Reflections on the Craft of Programming Paperback&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-patterns-elements-of-reusable-objectoriented-software-1st-edition"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3h9YQRF"&gt;Design Patterns: Elements of Reusable Object-Oriented Software 1st Edition&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Design-Patterns-Object-Oriented-Addison-Wesley-Professional-ebook/dp/B000SEIBB8?&amp;amp;linkCode=li3&amp;amp;tag=rahulism0d-21&amp;amp;linkId=3a3bfccf54b7027f60ee13f15bf2fc94&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B000SEIBB8&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m8IPlSfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli3%26o%3D31%26a%3DB000SEIBB8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8IPlSfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli3%26o%3D31%26a%3DB000SEIBB8" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a software engineer or whoever working in the software development may it be a fresher or an experienced developer, this book is a must read. But sometimes it lacks more practical examples and the the example gives does not fully explains concept it is describing.  Great patterns for programming but rubbish patterns for knitting. &lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt;  &lt;a href="https://amzn.to/3h9YQRF"&gt;Design Patterns: Elements of Reusable Object-Oriented Software 1st Edition&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-make-me-think-revisited-a-common-sense-approach-to-web-usability"&gt;
  &lt;/a&gt;
  &lt;a href="https://amzn.to/3be8VJI"&gt;Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Dont-Make-Think-Revisited-Usability-ebook/dp/B00HJUBRPG?dchild=1&amp;amp;keywords=web+usability&amp;amp;qid=1620535971&amp;amp;sr=8-3&amp;amp;linkCode=li2&amp;amp;tag=rahulism0d-21&amp;amp;linkId=91efaeed3a55092d6f851daa3ec3beee&amp;amp;ref_=as_li_ss_il"&gt;&lt;img src="//ws-in.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00HJUBRPG&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=IN&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=rahulism0d-21"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mP_71DXq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3DB00HJUBRPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mP_71DXq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ir-in.amazon-adsystem.com/e/ir%3Ft%3Drahulism0d-21%26l%3Dli2%26o%3D31%26a%3DB00HJUBRPG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The book for the most part centers around broad rule about how to make a site pages so a client doesn't need to think a lot and can see quick from the plan and position of the areas. &lt;/p&gt;

&lt;p&gt;It likewise disclose how to plan various areas of the page so client can undoubtedly distinguish what he/she is searching for and how to return from here. How a landing page should look a like. What a landing page ought to contain. Book is truly pleasant for a web designer also web deigner.&lt;/p&gt;

&lt;p&gt;Get the Book -&amp;gt; &lt;a href="https://amzn.to/3be8VJI"&gt;Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability&lt;/a&gt; &lt;/p&gt;




&lt;p&gt;Thank you for reading. Also you can Subscribe to our  &lt;a href="https://www.devintro.com"&gt;newsletter&lt;/a&gt; , we send it occasionally with amazing news, resources and many thing.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>books</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How Does JS code run - Execution context  and Call stack</title>
      <author>prashanth</author>
      <pubDate>Tue, 11 May 2021 02:46:24 +0000</pubDate>
      <link>https://dev.to/prashan81992916/how-does-js-code-run-execution-context-and-call-stack-3a7</link>
      <guid>https://dev.to/prashan81992916/how-does-js-code-run-execution-context-and-call-stack-3a7</guid>
      <description>&lt;p&gt;Do you know how javascript code runs in the javascript engine? &lt;/p&gt;

&lt;p&gt;If not, then I hope this post will be useful for understanding execution context and how the order of execution context is maintained by call stack.This fundamental concept also pays way to have the foundation to comprehend hoisting, scopes, scope chains, and closures&lt;/p&gt;

&lt;p&gt;So lets start,&lt;/p&gt;

&lt;p&gt;Before diving deep into the concept, we must have the basic understanding that &lt;code&gt;Javascript is synchronous and single threaded&lt;/code&gt;,&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1.Synchrounous - control waits until the particular code 
                 is executed and only then it moves to the 
                 next line.
2.Single threaded - only one call stack(explained below)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;(ie) During memory creation phase and code execution phase in the Execution context, js code is executed line by line.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Execution context&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;From here onwards I will be addressing execution context as EC&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Whenever we run a javascript code, a global EC is created, which comprises mainly of two phases,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Memory creation phase&lt;/li&gt;
&lt;li&gt;Code execution or thread of execution phase&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me explain this with a simple example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As I mentioned before when we run this code, a global EC is created and the memory creation phase starts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ui49CrOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzxhzch70awih1zbamdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ui49CrOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzxhzch70awih1zbamdg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fl0SW7XU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atd7r5yx8cgme6epngoe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fl0SW7XU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atd7r5yx8cgme6epngoe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Memory creation phase&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This phase is mainly about allocating memory for the variables and functions declared in the code.The js engine looks for the variables and functions from the first line synchronously.  It is important to note that during this phase,&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1. For variables, a special keyword - undefined is 
     initialized by default
  2. For functions, the function code is copied as it is.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;So in the above example variable &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;isColorPrinted&lt;/code&gt; is initialized with keyword &lt;code&gt;undefined&lt;/code&gt; and for the &lt;code&gt;Square&lt;/code&gt; function, &lt;code&gt;function code&lt;/code&gt; is copied as it is.&lt;/p&gt;

&lt;p&gt;It's very important to understand this, because it will be easy to understand why variable hoisting happens in js, which I will be covering in the another post😉.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Code execution phase&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After completing the memory creation phase, the code gets executed right from the first line synchronously. So in the above example, the assignment &lt;code&gt;a = 5&lt;/code&gt; replaces &lt;code&gt;undefined&lt;/code&gt; for &lt;code&gt;a&lt;/code&gt; in memory.When the control reaches the function invocation &lt;code&gt;Square(a)&lt;/code&gt; a new EC is created within the global EC. Again for the new EC it has to repeat two phases. After memory creation and code execution phase are over, the value returned will be assigned to&lt;code&gt;isColorPrinted&lt;/code&gt;in the memory part of global EC and newly created EC will be permantly deleted,If anymore function invocation happens then a new EC is created.For nested function,an EC will be created within the parent EC.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z92ar_Ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys7b6wrh9cpwv32rsps9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z92ar_Ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys7b6wrh9cpwv32rsps9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But for deeply nested functions and other complex scenarios it becomes really tough to manage the execution contexts, so here comes to our aid - &lt;code&gt;call Stack&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Call Stack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Call stack is responsible for managing the order of exection of EC's. When the js code runs, &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    1. Initially:
       the global EC is pushed into the stack.

    2. After a function invocation:
       The newly created EC is pushed on top of the global 
       EC,

    3. When function execution is over: 
       It pops the EC out of the stack.

    4  When the entire program is executed: 
       It pops the global EC out of the stack.

     For nested functions:
       The child EC is pushed on top of the parent EC.

     For infinite loop: 
       Call stack crashes as it is completely filled with 
       EC's and max memory is reached
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;I hope this was insightful! Let me know in the comments .&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>executioncontext</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top Utility Packages In Javascript</title>
      <author>Sudarshan Sawandkar</author>
      <pubDate>Tue, 11 May 2021 02:42:20 +0000</pubDate>
      <link>https://dev.to/sudarshansb143/top-utility-packages-in-javascript-2cp7</link>
      <guid>https://dev.to/sudarshansb143/top-utility-packages-in-javascript-2cp7</guid>
      <description>&lt;h3&gt;
  &lt;a href="#tldr-"&gt;
  &lt;/a&gt;
  📢 TL:DR :
&lt;/h3&gt;

&lt;p&gt;We all seek for utility packages on &lt;em&gt;npm&lt;/em&gt;. No Matter we admire it or not, everyone (once a day or many times a day ) needs some &lt;strong&gt;UTILITY&lt;/strong&gt;. So Here is the list of some utility packages which makes your life a bit easier.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#%F0%9F%9B%A0-papa-parse-"&gt;
  &lt;/a&gt;
  🛠 Papa Parse :
&lt;/h3&gt;

&lt;p&gt;This is the great package when we deal with files. Consider a scenario, you are building a automation system, which query's the data from third party API and process it internally and outputs processed data. &lt;/p&gt;

&lt;p&gt;During your development, you want to process massive amount of CSV data, then *&lt;em&gt;Papa Parse *&lt;/em&gt; is your  🗡Go-to Man 🗡&lt;/p&gt;

&lt;p&gt;Here is an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;          &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;CSVdata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getCSVContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getCSVContentURL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

          &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;parsedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;papaParse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;CSVdata&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ParsedData is  &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;parsedData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
          &lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, after await() call, we are getting CSV file, which contains the data. Once we got the data, I used papa parse and Papa parse give me the array of objects (In my case) pretty easily without any jargon. &lt;/p&gt;

&lt;p&gt;There is whole lot more functionality you can &lt;a href="https://www.papaparse.com/docs"&gt; use&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#puppteer"&gt;
  &lt;/a&gt;
  💻 Puppteer:
&lt;/h3&gt;

&lt;p&gt;Puppteer is the browser automation tool. It is a pretty similar as compared to Selenium or any other automation tool. But, advantage of Puppeteer, it provides wide variety of functionality with respect to headless chromium browser and lower level DOM API's &lt;/p&gt;

&lt;p&gt;If you want to know more about it then, I have a article regarding usage of Puppteer take a look at it  👉👉 &lt;a href="https://dev.to/sudarshansb143/productivity-hacks-using-puppeteer-81d"&gt;Here &lt;/a&gt; &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cheerio-"&gt;
  &lt;/a&gt;
  ⚡ Cheerio ⚡:
&lt;/h3&gt;

&lt;p&gt;Cheerio can be used with puppeteer. Cheerio parses the available html data and gives us the ability to interact with data and extract the useful information. It can act as parser, if you are building the 🔍 SEO scrapper 🔍 or the Resume scrapper for your organization&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cheerio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cheerio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="c1"&gt;//jquery style&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cheerio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//use $ to interact with elements&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#gcl-"&gt;
  &lt;/a&gt;
  GCL :
&lt;/h3&gt;

&lt;p&gt;GCL is the short form for the get-current-line. It is my favorite package. It is totally optionally to use but, if you have project where you have to implement :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;logging specific events to the database &lt;/li&gt;
&lt;li&gt;getting the line number, where the specific code is executed&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;then you must use it. It does nothing but gives you the current line of code with very simplistic API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; Getting current line number &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentLineNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gcl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pretty simple :) &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#proxy-chain-"&gt;
  &lt;/a&gt;
  🤑 Proxy Chain 🤑 :
&lt;/h3&gt;

&lt;p&gt;Whenever you want to apply the proxy to your nodejs, then use it undoubtedly. Proxy chain provides us the  way to interact the proxy with pretty  simple way. It generates the new proxy URL which you can put into the configuration  and then we are good to go &lt;/p&gt;

&lt;p&gt;Here the example usage of proxy chain&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newProxyUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;proxyChain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;anonymizeProxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;proxyUrl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;launchConfigObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;--no-sandbox&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;--disable-setuid-sandbox&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;`--proxy-server=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;newProxyUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;proxy executed ....&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the example of proxy chain with puppeteer. While doing automation, applying proxy is non-written rule. In the above snippet, I have used &lt;em&gt;anonymizeProxy()&lt;/em&gt; API of proxy chain which builds ready to use proxy URL for us.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#%F0%9F%96%8D-chalk-"&gt;
  &lt;/a&gt;
  🖍 Chalk  :-
&lt;/h3&gt;

&lt;p&gt;If you are the fan of doing the colorful stuff in the terminal then this is for you. Chalk provides the API's which makes our terminal colorful and it is pretty  light weight and flexible to use. we can directly put it into native javascript API's like &lt;em&gt;console.log&lt;/em&gt; and  use it comprehensively&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D7x9ikEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhnoke6ebzx71g0zkhy9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D7x9ikEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhnoke6ebzx71g0zkhy9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the example of chalk used with the &lt;em&gt;morgan&lt;/em&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#morgan-"&gt;
  &lt;/a&gt;
  🏏Morgan :
&lt;/h3&gt;

&lt;p&gt;Morgan is used as the logger for the nodejs server it is pretty helpful to interact with the incoming requests and  all these stuff happening inside the nodejs. It gives us the prebuilt modification of request logging. if you used&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;        &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;morgan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then it will run in developer mode and will log pretty helpful information regarding request like *execution time *, *response code * etc&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#%E2%98%80-final-thoughts-%E2%98%80-"&gt;
  &lt;/a&gt;
  ☀ Final Thoughts ☀ :
&lt;/h3&gt;

&lt;p&gt;These is the list of 0.00000001 % of npm packages which are available to use. Using packages is pretty much optional and preference based. but, using them saves us from *Re implementing the Wheel *&lt;/p&gt;

&lt;p&gt;Please, let me know in comments if you know any other utility packages&lt;/p&gt;

&lt;p&gt;Thanks For Reading  🙏&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Criando overlay com a previsão do tempo</title>
      <author>bug_elseif</author>
      <pubDate>Tue, 11 May 2021 01:19:06 +0000</pubDate>
      <link>https://dev.to/bug_elseif/criando-overlay-com-a-previsao-do-tempo-5af</link>
      <guid>https://dev.to/bug_elseif/criando-overlay-com-a-previsao-do-tempo-5af</guid>
      <description>&lt;p&gt;Após várias pessoas perguntarem se eu estava com frio durante as &lt;a href="https://www.twitch.tv/bug_elseif"&gt;lives na Twitch&lt;/a&gt;, surgiu a ideia de colocar um overlay com a previsão do tempo, mostrando a temperatura atual da minha localização.&lt;/p&gt;

&lt;p&gt;Foi possível fazer isso de uma maneira simples, usando uma página HTML e uma API.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#vamos-aos-passos"&gt;
  &lt;/a&gt;
  Vamos aos passos:
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;
&lt;em&gt;Primeiramente, criamos um arquivo com a estrutura básica de HTML:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"pt-br"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Titulo&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;
&lt;em&gt;Dentro do corpo do HTML, criamos uma tag &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; da seguinte forma:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"http://wttr.in/~Lages+Brazil_tqp0.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;
Desta maneira acessamos a API que nos retorna uma imagem &lt;code&gt;.png&lt;/code&gt;, através do link vamos passar alguns parâmetros, são eles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Localização - informa o nome da cidade e país;&lt;/li&gt;
&lt;li&gt;t - aplica transparência na imagem;&lt;/li&gt;
&lt;li&gt;q- retira o texto “previsão do tempo” deixando só o nome da cidade e país como título;&lt;/li&gt;
&lt;li&gt;p - adiciona uma borda ao redor da imagem;&lt;/li&gt;
&lt;li&gt;0 - deixa visível somente o clima no momento atual.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Além destes, existem &lt;a href="http://wttr.in/:help"&gt;outros parâmetros&lt;/a&gt; que modificam a imagem.&lt;br&gt;
&lt;br&gt;
&lt;em&gt;Por fim adicionamos um &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag que atualizará a página em determinado tempo (em segundos):&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"refresh"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;
&lt;em&gt;A estrutura final do código fica assim:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"pt-br"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"refresh"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Previsão do tempo&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"http://wttr.in/~Lages+Brazil_tqp0.png"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;
&lt;em&gt;Gerando este resultado:&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IasaJfGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5fa1u8jg5zp0bhw1pn9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IasaJfGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5fa1u8jg5zp0bhw1pn9.png" alt="Retângulo contendo informações sobre o clima"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
Com a página pronta, basta adicionar uma fonte de navegador no OBS com o caminho no qual o arquivo HTML foi salvo.&lt;br&gt;
&lt;br&gt;
Mais informações sobre a API &lt;a href="https://github.com/chubin/wttr.in"&gt;neste github&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Enjoy!&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>html</category>
    </item>
    <item>
      <title>What is Agile – Demystifying “Agile”</title>
      <author>Najeeb Arif</author>
      <pubDate>Mon, 10 May 2021 23:31:06 +0000</pubDate>
      <link>https://dev.to/najeebarif/what-is-agile-demystifying-agile-2b9o</link>
      <guid>https://dev.to/najeebarif/what-is-agile-demystifying-agile-2b9o</guid>
      <description>&lt;p&gt;What comes to your mind when I say the word &lt;em&gt;“Agile”&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;It is Software development Methodology. So, let’s say we treat it as a definition of &lt;em&gt;“Agile”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Everyone’s golden period in life is their Schooling. Specifically, the 11th and 12th grade and I am no exception to that. So I am going to use a the “basis” of Mathematical Induction to proof the definition of “Agile”. Don’t worry, I won’t go into full blown mathematical induction proof and bore everyone around here. But for people who are not familiar with what Mathematical Induction is then here is a very layman definition for it:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is a mathematical proof technique and is used to mathematically prove a statement. Long story short, Mathematical induction proves that we can climb as high as we like on a ladder, by proving that we can climb onto the bottom rung (the basis) and that from each rung we can climb onto the next one (the step).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Considering our “climbing the ladder” analogy, we should be able to first climb the bottom rung only then we will be able to climb higher. We can say that we must first establish that the base case holds true only then anything else will be possible. &lt;/p&gt;

&lt;p&gt;Let’s assume that the definition of &lt;em&gt;“Agile”&lt;/em&gt; is a software development methodology. &lt;/p&gt;

&lt;p&gt;What is the actual dictionary meaning of “Agile”? (I usually tell my younger brother and sister that whenever you hear Buzz word in Computer Science, the first thing you should do is lookup the dictionary for its meaning) &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Marked by ready ability to move with quick easy grace or able to move quickly and easily. Ex: an &lt;em&gt;agile&lt;/em&gt; dancer&lt;/li&gt;
&lt;li&gt; Having a quick resourceful and adaptable character. Ex: an &lt;em&gt;agile&lt;/em&gt; mind&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The key words here are &lt;em&gt;move quickly and easily&lt;/em&gt; and &lt;em&gt;adaptable or flexible&lt;/em&gt; so to speak. Now we can derive our own meaning of &lt;em&gt;“Agile”&lt;/em&gt; &lt;em&gt;ability to move quickly and easily and also being adaptable or flexible at the same time&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Let’s focus on what do we mean by methodology:&lt;br&gt;
&lt;em&gt;A methodology is a body of methods, procedures and rules for a particular discipline&lt;/em&gt;. Set of steps are defined or dictated to be adhered to. – Not so flexible, true?&lt;/p&gt;

&lt;p&gt;If we look &lt;em&gt;“Agility”&lt;/em&gt; with our Software Development Hat on, we will realize that “Agility” &lt;em&gt;is the ability to continuously adapt and make improvements to the way we work&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Therefore, if “Agile” specified any methodology then, well it will be “Less Agile”.&lt;/p&gt;

&lt;p&gt;We can clearly see our initial assumption falling apart. If our initial assumption turns out to be false then it means we can’t mathematically prove any statement. If you can not climb on the first rung then you cannot climb the ladder.&lt;/p&gt;

&lt;p&gt;Coming back to our starting question &lt;em&gt;What is “Agile”?&lt;/em&gt; (if it is not a software development methodology).&lt;/p&gt;

&lt;p&gt;The actual definition of &lt;em&gt;“Agile”&lt;/em&gt; is found in the &lt;a href="https://agilemanifesto.org/"&gt;&lt;em&gt;&lt;strong&gt;“Agile Manifesto”&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;. The manifesto makes it clear that &lt;strong&gt;“Agile” is not&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Methodology&lt;/li&gt;
&lt;li&gt; Specific way of developing software&lt;/li&gt;
&lt;li&gt; Framework or Process&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Agile is a set of Values and Principles&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Agile is really a collection of beliefs that teams can use in making decisions about how to do the work of developing the software&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If we truly understand what “Agile” is, then we will learn that it is truly flexible. “Agile” does not make decisions of us but it gives us a foundation that teams can use to make decision that result in better software development.&lt;/p&gt;

&lt;p&gt;I urge you to quickly skim through the &lt;a href="https://agilemanifesto.org/"&gt;Agile Manifesto&lt;/a&gt; and learn what values does it promise. &lt;/p&gt;

&lt;p&gt;There are &lt;a href="https://agilemanifesto.org/principles.html"&gt;12 principles&lt;/a&gt; behind the Agile Manifesto and they are also a good reading material. Trust me it will hardly take more than 5 mins.&lt;/p&gt;

&lt;p&gt;Both the values and principles of manifesto are very general and are less about telling us what to do, than they are about giving us the ability to make good decision in a particular situation. Agile values and principles explicitly avoid prescribing any methods and procedures. &lt;/p&gt;

&lt;p&gt;Therefore, Agile is not a methodology but guidance on how to choose to methods and procedures that will work best for one’s team. Now if we consider the fact that if “Agile” specified methodology then it would have resulted in less agility. Less able to adapt to the specific circumstances of one’s team. So instead of giving us what should be done, “Agile” gave us “Values &amp;amp; Principles” which our teams can use to decide what we should do.&lt;/p&gt;

&lt;p&gt;Then next obvious question which comes to our mind is that if “Agile” is not a methodology then what are daily stand-ups, product demo, retrospective etc? &lt;/p&gt;

&lt;p&gt;While “Agile” is not a methodology, there are a number of methodologies which teams can use to follow agile principles and values. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SCRUM&lt;/strong&gt;: specifies a number of specific ways for teams to work. This includes having daily stand-ups, fixed length sprints, product demos, retrospectives etc. &lt;/p&gt;

&lt;p&gt;Many teams find SCRUM as a very good way to follow “Agile” values and principles. It provides powerful methodology which assists in following “Agile”. But it is also important to know that just following these methodologies doesn’t makes a team “Agile”. They have to know that they are following these principles because it helps them align with the “Agile” values and principles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extreme Programming (XP)&lt;/strong&gt;: is another methodology which includes number of practices like Test Driven Development, Pair Programming etc. The extreme programming methodology gives teams methods and processes that can be used to follow “Agile” values and principles. For example, Agile principle says that team should leverage change as a competitive advantage. XP practices give methods for writing software that enables it.&lt;/p&gt;

&lt;p&gt;If your team is truly trying to follow “Agile” principles and values, your methodology will evolve over time as your team grows and adapts. &lt;em&gt;After all, that is what it means to be “Agile”&lt;/em&gt;.&lt;/p&gt;

</description>
      <category>agile</category>
      <category>productivity</category>
    </item>
    <item>
      <title>$weeklyUpdate #22 (May 10, 2021): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Mon, 10 May 2021 23:19:18 +0000</pubDate>
      <link>https://dev.to/mongodb/weeklyupdate-22-may-10-2021-latest-mongodb-tutorials-events-podcasts-streams-426n</link>
      <guid>https://dev.to/mongodb/weeklyupdate-22-may-10-2021-latest-mongodb-tutorials-events-podcasts-streams-426n</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  👋 Hi everyone!
&lt;/h1&gt;

&lt;p&gt;Welcome to MongoDB $weeklyUpdate!&lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#new-on-youtube"&gt;
  &lt;/a&gt;
  🎥 New on YouTube!
&lt;/h1&gt;

&lt;p&gt;We have lots of new content to share with you! Take a look at our &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube channel&lt;/a&gt; to see the latest premieres from our Dev Rel team!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mongodb-amp-nodejs-aggregation-amp-data-analysis-part-2-of-4"&gt;
  &lt;/a&gt;
  &lt;strong&gt;MongoDB &amp;amp; Node.js: Aggregation &amp;amp; Data Analysis (Part 2 of 4)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;When you want to analyze data stored in MongoDB, you can use MongoDB's powerful aggregation framework to do so. In part two of this quick start tutorial for beginners, &lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt; provides a high-level overview of the aggregation framework and demonstrates how to use it in a Node.js script.  She explains how to use aggregate() to analyze data.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iz37fDe1XoM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mapping-sql-terms-and-concepts-to-mongodb"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Mapping SQL Terms and Concepts to MongoDB&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/JoeKarlsson1"&gt;Joe Karlsson&lt;/a&gt; has another popular topic out! When you need to model data, is your first instinct to start breaking it down into rows and columns? It was for Joe, and many others too. When you want to develop apps in a modern, agile way, MongoDB databases can be the best option. In this video, we’ll compare and contrast the terms and concepts in SQL databases and MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UuNVpLIOHW8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;💡 As always, be sure to like, subscribe, and turn on notifications for our &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube channel&lt;/a&gt; so you never miss a video!&lt;/strong&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  🎓 Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aggregation-pipeline-applying-benfords-law-to-covid19-data"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://developer.mongodb.com/article/aggregation-pipeline-covid19-benford-law/"&gt;Aggregation Pipeline: Applying Benford's Law to COVID-19 Data&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/MBeugnet"&gt;Maxime Beugnet&lt;/a&gt; and &lt;a href="https://developer.mongodb.com/author/john-page/"&gt;John Page&lt;/a&gt; use the MongoDB Aggregation Pipeline to apply Benford’s law on the COVID-19 data set from Johns Hopkins University.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-to-a-mongodb-database-using-nodejs"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.mongodb.com/blog/post/quick-start-nodejs-mongodb--how-to-get-connected-to-your-database"&gt;Connect to a MongoDB Database Using Node.js&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Part one of &lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt;'s popular series, Node.js and MongoDB. Here, she'll walk you though connecting to MongoDB in a Node.js application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mongodb-and-nodejs-tutorial-crud-operations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://developer.mongodb.com/quickstart/node-crud-tutorial/"&gt;MongoDB and Node.js Tutorial - CRUD Operations&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt; shows you how to execute the CRUD (create, read, update, and delete) operations in MongoDB using Node.js in this step-by-step tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-automate-continuous-data-copying-from-mongodb-to-s3"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://developer.mongodb.com/how-to/automated-continuous-data-copying-from-mongodb-to-s3/"&gt;How to Automate Continuous Data Copying from MongoDB to S3&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Learn how to set up a continuous copy from MongoDB into an AWS S3 bucket in Parquet with &lt;a href="https://twitter.com/JoeKarlsson"&gt;Joe Karlsson&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#official-mongodb-events"&gt;
  &lt;/a&gt;
  📅 Official MongoDB &lt;a href="https://live.mongodb.com/events/#/calendar"&gt;Events&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Attend an official MongoDB event near you (virtual for now)! Chat with MongoDB experts, learn something new, meet other developers, and win some swag!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;May 18 (1:00 PM GMT | Nigeria) - &lt;a href="https://live.mongodb.com/events/details/mongodb-warri-nigeria-presents-join-our-expert-on-our-mini-workshop-on-how-to-scale-your-product-with-mongodb/"&gt;How to Scale Your Product With MongoDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;May 21 (11:00 AM GMT | Kenya) - &lt;a href="https://live.mongodb.com/events/details/mongodb-nairobi-kenya-presents-mongodb-community-mini-workshop-in-eldoret/"&gt;MongoDB Community Mini Workshop in Eldoret&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;May 21 (5:00 PM GMT | Global) - &lt;a href="https://live.mongodb.com/events/details/mongodb-mongodb-global-virtual-community-presents-removing-master-slave-terminology-from-apache-lucene/"&gt;Removing master/slave terminology from Apache Lucene&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;May 26 (4:00 PM GMT | Global) - &lt;a href="https://live.mongodb.com/events/details/mongodb-realm-global-community-presents-realm-kotlin-multiplatfrom-for-modern-mobile-apps/"&gt;Realm Kotlin Multiplatform for Modern Mobile Apps&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#mongodb-on-twitch"&gt;
  &lt;/a&gt;
  📺 MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community every Friday. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
&lt;iframe src="https://clips.twitch.tv/embed?autoplay=false&amp;amp;clip=970171464&amp;amp;parent=dev.to" height="399" width="710"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Upcoming Streams&lt;/em&gt;&lt;br&gt;
May 21, 10am PDT - &lt;a href="https://live.mongodb.com/events/details/mongodb-mongodb-global-virtual-community-presents-removing-master-slave-terminology-from-apache-lucene/"&gt;Removing master-slave terminology from Apache Lucene&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🍿 &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch so you never miss a stream!&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  🎙 Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5l6RZQ9vaPl7NsJNysrZW7"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Catch up on past episodes:&lt;br&gt;
Ep. 53 - &lt;a href="https://open.spotify.com/episode/25ar9muN29AXuaK2T1vz5x?si=R05pMFGsS5aZVBuAF5fG0g"&gt;The MERN Stack with Beau Carnes of freeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 52 - &lt;a href="https://open.spotify.com/episode/210MLQnorlVzx9MPdCc92e?si=S4NgOQnVSv6mdZOaEMpQ6g"&gt;Scaling Startups with Blerp and MongoDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 51 - &lt;a href="https://open.spotify.com/episode/6p2Q8G0NJ5GqmktfQvsrc0?si=2EzcsbrHTfO-JpHbdzexbQ"&gt;Scaling Startups - Funnelytics with Alexey Glazunov&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; 😊)&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#mongodb-devrel-around-the-interwebz"&gt;
  &lt;/a&gt;
  🌍 MongoDB DevRel around the Interwebz
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Watch our team do their thang at various conferences, meetups, and podcasts around the world (virtually, for now). Also, find external articles and guest posts from our DevRel team here!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;📅 Upcoming&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#may-17-adrienne-tacke-techorama"&gt;
  &lt;/a&gt;
  May 17: &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt; @ &lt;a href="https://techorama.be/agenda/session/there-is-no-developer-uniform/"&gt;Techorama&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Sr. Dev Advocate Adrienne Tacke gives one of her favorite talks "There is NO Developer Uniform!" at Techorama 2021!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#may-18-lauren-schaefer-codemotion-online-conference"&gt;
  &lt;/a&gt;
  May 18: &lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt; @ &lt;a href="https://events.codemotion.com/conferences/online/2021/online-tech-conference-spring/coming-soon"&gt;Codemotion Online Conference&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Staff Dev Advocate Lauren Schaefer will be at Codemotion Online Conference to give their talk "Top Ten Tips for Making Remote Work Actually Work Right Now"!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#may-26-lauren-schaefer-devsum"&gt;
  &lt;/a&gt;
  May 26: &lt;a href="https://twitter.com/lauren_schaefer"&gt;Lauren Schaefer&lt;/a&gt; @ &lt;a href="https://www.devsum.se/agenda/top-ten-tips-for-making-remote-work-actually-work-right-now"&gt;DevSum&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Staff Dev Advocate Lauren Schaefer will be at DevSum Conference to give their talk "Top Ten Tips for Making Remote Work Actually Work Right Now"!&lt;/p&gt;




&lt;p&gt;💡 These $weeklyUpdates are always posted to the &lt;a href="https://developer.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; &lt;em&gt;first&lt;/em&gt;! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>news</category>
      <category>programming</category>
    </item>
    <item>
      <title>Why I'm glad I chose Tech!</title>
      <author>Charity Parks</author>
      <pubDate>Mon, 10 May 2021 22:47:06 +0000</pubDate>
      <link>https://dev.to/charityparks/why-i-m-glad-i-chose-tech-14kh</link>
      <guid>https://dev.to/charityparks/why-i-m-glad-i-chose-tech-14kh</guid>
      <description>&lt;p&gt;Hi Everyone!  This is my first blog post here!&lt;/p&gt;

&lt;p&gt;I've been asked repeatedly why I chose to learn Software Engineering. I wasn't seeking out this particular journey per se, but I was in a rut. One day I was scrolling through Twitter and I saw a post about this opportunity to learn computer programming at the Flatiron School.  I could take the course online while still being able to work my 9-5 job. So I signed up immediately.&lt;/p&gt;

&lt;p&gt;Through my journey with the Flatiron bootcamp, I began to see the world in a different way. There are so many parts of our lives that are enhanced through technology. For example, we no longer need a camera, video camera, library, tape recorder or even a television. We have cellphones that run on software programs that we use in place of those things! So many things are run by software. Vehicles, refrigerators, washer and dryers, traffic lights, thermostats and so much more are all run by software programs!&lt;/p&gt;

&lt;p&gt;What I have come to realize is that there is a great deal of opportunity in the technology field. Job opportunities are everywhere! For a lot of people this means an increase in pay allowing them new freedoms. Combining the tech field with other fields can be fun. You could have a tech job for an Art museum if you also have a love for the Arts, for example. Tech is everywhere!  Check out the Flatiron School and you can get started on an amazingly diverse new career! &lt;/p&gt;

</description>
      <category>firstpost</category>
      <category>career</category>
      <category>technology</category>
      <category>shecoded</category>
    </item>
    <item>
      <title>Laravel Service Classes Explained</title>
      <author>Farhan Hasin Chowdhury</author>
      <pubDate>Mon, 10 May 2021 22:40:48 +0000</pubDate>
      <link>https://dev.to/fhsinchy/laravel-service-classes-explained-3m7p</link>
      <guid>https://dev.to/fhsinchy/laravel-service-classes-explained-3m7p</guid>
      <description>&lt;p&gt;Benjamin Franklin once said —&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A place for everything, everything in its place.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This applies to software development as well. Understanding which portion of the code goes where is the key to a maintainable code base.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt; being an elegant web framework, comes with a pretty organized &lt;a href="https://laravel.com/docs/8.x/structure"&gt;directory structure&lt;/a&gt; by default but still I've seen a lot of people suffer.&lt;/p&gt;

&lt;p&gt;Don't get me wrong. It's a no brainer that controllers go inside the &lt;code&gt;controllers&lt;/code&gt; directory, no confusions whatsoever. The thing people often confuse themselves with is, what to write in a controller and what not to.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#project-codes"&gt;Project Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-scenario"&gt;The Scenario&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#understanding-business-logic"&gt;Understanding Business Logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#service-classes-to-the-rescue"&gt;Service Classes to the Rescue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#action-re-usability"&gt;Action Re-usability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing Thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#project-codes"&gt;
  &lt;/a&gt;
  Project Codes
&lt;/h1&gt;

&lt;p&gt;You can find an implementation of the service discussed in this article in the following repository:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/fhsinchy"&gt;
        fhsinchy
      &lt;/a&gt; / &lt;a href="https://github.com/fhsinchy/laravel-livewire-shopping-cart"&gt;
        laravel-livewire-shopping-cart
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A real-time shopping cart powered by Laravel, Livewire and TailwindCSS
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Apart from Laravel, the project makes use of &lt;a href="https://laravel-livewire.com/"&gt;Livewire&lt;/a&gt; and &lt;a href="https://tailwindcss.com/"&gt;TailwindCSS&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-scenario"&gt;
  &lt;/a&gt;
  The Scenario
&lt;/h1&gt;

&lt;p&gt;Take the following piece of code for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CartItemController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
        &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart.index'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'content'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'total'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|numeric'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|integer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;floatval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

        &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item added to cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;compact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'item'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'fail'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item not found'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'plus'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'minus'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;

                    &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item updated in cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'fail'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item not found'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;except&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item removed from cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'fail'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item not found'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a controller from an imaginary e-commerce project, responsible for managing the shopping cart. Although this is a perfectly valid piece of code, there are some problems.&lt;/p&gt;

&lt;p&gt;The controller also knows too much. Look at the &lt;code&gt;index&lt;/code&gt; method for example. It doesn't need to know whether the cart content comes from the session or database. Neither does it need to know how to calculate the total price of the cart items.&lt;/p&gt;

&lt;p&gt;A controller should be only responsible for transporting requests and responses. The inner details aka the business logic should be handled by other classes in the server.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#understanding-business-logic"&gt;
  &lt;/a&gt;
  Understanding Business Logic
&lt;/h1&gt;

&lt;p&gt;As explained in this &lt;a href="https://softwareengineering.stackexchange.com/questions/234251/what-really-is-the-business-logic"&gt;thread&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Business logic or domain logic is that part of the program which encodes the real-world business rules that determine how data can be created, stored, and changed. It prescribes how business objects interact with one another, and enforces the routes and the methods by which business objects are accessed and updated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In case of a simple shopping cart system, the business logic behind adding an item to cart can be described as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take necessary product information (id, name, price, quantity) as input.&lt;/li&gt;
&lt;li&gt;Validate the input data.&lt;/li&gt;
&lt;li&gt;Form a new cart item.&lt;/li&gt;
&lt;li&gt;Check if the item already exists in the cart.&lt;/li&gt;
&lt;li&gt;If yes, update it's quantity and if no, add the newly formed item to cart.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now lets have a look at the &lt;code&gt;store&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="cd"&gt;/**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// validate the input data.&lt;/span&gt;
        &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|numeric'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'required|integer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="c1"&gt;// form a new cart item.&lt;/span&gt;
        &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;floatval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="c1"&gt;// check if the item already exists in the cart.&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
        &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// if yes, update it's quantity&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// if no, add the newly formed item to cart.&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item added to cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the business logic translates to code pretty accurately. Now the problem is, controllers are not meant to contain business logic.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#service-classes-to-the-rescue"&gt;
  &lt;/a&gt;
  Service Classes to the Rescue
&lt;/h1&gt;

&lt;p&gt;According to the very popular &lt;a href="https://github.com/alexeymezenin/laravel-best-practices/"&gt;alexeymezenin/laravel-best-practices&lt;/a&gt; repository:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zGOrxs7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620657955936/1AfO4cLA6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zGOrxs7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620657955936/1AfO4cLA6.png" alt="Business logic should be in service class"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea of service classes is not something built into the framework or documented in the official docs. As a result, different people refer to them differently. At the end of the day, service classes are plain classes responsible for holding the business logic.&lt;/p&gt;

&lt;p&gt;A service class for holding the shopping cart related business logic can be as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Services&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Collection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Session\SessionManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CartService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'shopping-cart'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$session&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$instance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Constructs a new cart object.
     *
     * @param Illuminate\Session\SessionManager $session
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SessionManager&lt;/span&gt; &lt;span class="nv"&gt;$session&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$session&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Adds a new item to the cart.
     *
     * @param string $id
     * @param string $name
     * @param string $price
     * @param string $quantity
     * @param array $options
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]):&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;createCartItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Updates the quantity of a cart item.
     *
     * @param string $id
     * @param string $action
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'plus'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'minus'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;

                    &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$updatedQuantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cartItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Removes an item from the cart.
     *
     * @param string $id
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;except&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Clears the cart.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;forget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Returns the content of the cart.
     *
     * @return Illuminate\Support\Collection
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Collection&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;is_null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Returns total price of the items in the cart.
     *
     * @return string
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'quantity'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;number_format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Returns the content of the cart.
     *
     * @return Illuminate\Support\Collection
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;Collection&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DEFAULT_INSTANCE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Creates a new cart item from given inputs.
     *
     * @param string $name
     * @param string $price
     * @param string $quantity
     * @param array $options
     * @return Illuminate\Support\Collection
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;createCartItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;Collection&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;floatval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$quantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$quantity&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$quantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MINIMUM_QUANTITY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'price'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'quantity'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As I've already said, service classes are not something built into the framework hence there is no &lt;code&gt;artisan make&lt;/code&gt; command for creating a service class. You keep the classes anywhere you like. I'm keeping my classes inside &lt;code&gt;App/Services&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;CartService.php&lt;/code&gt; file contains both &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt; methods. The public methods named &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt; are responsible for adding item to cart, removing item from cart, updating cart item quantity and clearing the cart respectively.&lt;/p&gt;

&lt;p&gt;The other public methods are &lt;code&gt;content()&lt;/code&gt; and &lt;code&gt;total()&lt;/code&gt; responsible for returning the cart content and total price of added items respectively.&lt;/p&gt;

&lt;p&gt;Finally the protected methods &lt;code&gt;getContent()&lt;/code&gt; and &lt;code&gt;createCartItem()&lt;/code&gt; are responsible for returning cart content within the class methods and forming a new cart item from the received parameters.&lt;/p&gt;

&lt;p&gt;Now that the service class is ready, you need to use it inside the controller. To utilize the service class inside the &lt;code&gt;CartItemController.php&lt;/code&gt; file, the code needs to be updated as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Services\CartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Requests\CartItemRequest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CartItemController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Instantiate a new controller instance.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CartService&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;content&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;total&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart.index'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'content'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'total'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\CartItemRequest  $request
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CartItemRequest&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item added to cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;content&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cart'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;compact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'item'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item updated in cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Item removed from cart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks to zero configuration resolution, the service container resolves any class that doesn't depend on any interface automatically. Hence simply injecting the &lt;code&gt;CartService&lt;/code&gt; in the controller constructor does the trick:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CartItemController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Instantiate a new controller instance.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CartService&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;cartService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$cartService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now an instance of the &lt;code&gt;CartService&lt;/code&gt; class becomes available within the controller and can be accessed as &lt;code&gt;$this-&amp;gt;cartService&lt;/code&gt; property. Rest of the controller action have been updated to make use of the service and as you can see, the controller has become much cleaner now.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#action-reusability"&gt;
  &lt;/a&gt;
  Action Re-usability
&lt;/h1&gt;

&lt;p&gt;Apart from making the controller cleaner, you also get the benefit of the shopping cart related actions being accessible from anywhere. Consider the following livewire component for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Livewire&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Facades\Cart&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Livewire\Component&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Contracts\View\View&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Component&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$product&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Mounts the component on the template.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Renders the component on the browser.
     *
     * @return \Illuminate\Contracts\View\View
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'livewire.product'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Adds an item to cart.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;addToCart&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Cart&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;unit_price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'productAddedToCart'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can add, remove, update or clear the shopping cart from anywhere. Prior to the service class implementation, the only way to manage the cart was through HTTP requests. Now you can even manage the cart through &lt;code&gt;artisan&lt;/code&gt; commands.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h1&gt;

&lt;p&gt;The concept of service classes discussed in this article is nothing concrete and I'm not claiming it to be a silver bullet. It's something that I've used in the past and have had no problem whatsoever. If you want to look at some other approach, consider reading about action classes &lt;a href="https://freek.dev/1371-refactoring-to-actions/"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>cyber secutiry</title>
      <author>vishwasnarayanre</author>
      <pubDate>Mon, 10 May 2021 22:23:35 +0000</pubDate>
      <link>https://dev.to/vishwasnarayan5/cyber-secutiry-3c8a</link>
      <guid>https://dev.to/vishwasnarayan5/cyber-secutiry-3c8a</guid>
      <description>&lt;p&gt;First, I would say understand the seven layers of the Cyber security.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O84seKy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcrrtrmkks6b55wt1d0p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O84seKy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcrrtrmkks6b55wt1d0p.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now understand all the hardware and software and the ports just run on &lt;strong&gt;Operating System&lt;/strong&gt; and have a specific driver and any set of the hardware's defined thus its hackable.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-cyber-security"&gt;
  &lt;/a&gt;
  What is cyber security?
&lt;/h1&gt;

&lt;p&gt;The practice of protecting computers, websites, mobile devices, electronic services, networks, and data against malware threats is known as cyber defense. It's sometimes referred to as information infrastructure protection or electronic data security. The concept is used in a number of ways, ranging from enterprise to mobile computing, and can be classified into a few general groups for the computer defence.&lt;/p&gt;

&lt;p&gt;Computer defence(never go offensive), also known as cybersecurity or information technology security, is the safeguarding of computer systems and networks from information leakage, theft or harm to their devices, applications, or electronic records, as well as interruption or misdirection of the services they offer.&lt;/p&gt;

&lt;p&gt;It's no surprise that online security breaches are becoming so common. Despite the fact that digital is pervading every aspect of our lives, most people are terrible at security. In a 2016 Pew Research poll on cybersecurity, the vast majority of online adults correctly answered just two of thirteen questions.&lt;br&gt;
Let's do something about it by strengthening our own personal digital protections.While not to be confused with the internet, the word "cyberspace" refers to identities or incidents that occur during the contact process. Consider a website, which exists in CyberSpace as well.Interactions of others If you make a tweet, upload a photo, or share a message, all of these social experiences take place in Cyber Space, and this Cyber Space is evolving in seconds rather than minutes. Many of these activities are taking place "in cyberspace," not in their actual environments. You can see a picture below of different digital devices that are linked through the internet.The comoanies assets are on the internet.&lt;/p&gt;

&lt;p&gt;I've made it a tradition over the last 2 years or so to do an annual audit of my personal digital security. Every year, I review all of my online activities for security risks and make a commitment to improve. As a product of the endeavor, these are the behaviors I employ for the search and bounty.&lt;/p&gt;

&lt;p&gt;In general, I attempt to address these core questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What data is available about me, and where is it stored and what kind of a domain it?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Never say to a person where you have hosted your websites through always make sure to use a custom domain name certificate and also have a certified SSL for your websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the risks that I’m going to guard against (playing defensive against all the offenses) i.e. what is my Threat Model?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please make sure that you have all the ethical aspects when you do the bounty or the cyberattack and also dont missuse your freedom.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the impacts to my privacy and also about my social presence?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should be very carefull abut what is your social presence and also about all the aspects that you want to take care.&lt;/p&gt;

&lt;p&gt;Network protection is the practise of defending a computer network against intruders, whether they be targeted attackers or opportunistic malware.&lt;/p&gt;

&lt;p&gt;Application secutiry is concerned with keeping apps and computers safe from attacks. A hacked programme could allow access to the data it is supposed to secure. Protection starts in the design stage, well before a software or system is implemented.&lt;/p&gt;

&lt;p&gt;Information protection safeguards the confidentiality and anonymity of data when it is in storage and transit.&lt;/p&gt;

&lt;p&gt;The procedures and decisions for managing and maintaining computer properties are included in operational security. This includes the permissions that users have when connecting to a network as well as the procedures that govern how and where data can be accessed or exchanged.&lt;/p&gt;

&lt;p&gt;Disaster recovery and business continuity describe how a company reacts to a cyber-security incident or some other situation that results in the loss of activities or records. Disaster recovery procedures govern how an organisation recovers its activities and records in order to resume operations at the same level as before the disaster.Business sustainability is the plan that a company uses when it is unable to function due to a lack of funding.&lt;/p&gt;

&lt;p&gt;End-user education tackles the most unpredictability of cyber-security: individuals. By failing to observe sound security standards, someone may inadvertently inject a virus into an otherwise stable environment. Instructing users to remove questionable email attachments rather than inserting unknown plug-in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Types of cyber threats and attacks that you might face&lt;/strong&gt;&lt;br&gt;
The threats countered by cyber-security are three-fold:&lt;br&gt;
Today, the term is almost entirely used to refer to information security issues. We've taken to visualising the digital phenomena as a tangible one because it's difficult to imagine how digital signals flowing over a wire might reflect an assault.A cyber assault is an attack launched against us (or our digital devices) through cyberspace. Cyberspace, a non-existent cyber space, has become a term for understanding digital weaponry designed to threaten us.What is true, though, is the attacker's motive as well as the possible effect. While certain cyber attacks are minor annoyances, others are very serious, even endangering human lives.&lt;/p&gt;

&lt;p&gt;Cyber attacks are a major concern. Cyber attacks will result in power outages, the loss of military facilities, and the disclosure of national security information. They will lead to the stealing of important and confidential data, such as medical information. They have the ability to interrupt phone and internet networks as well as paralyze devices, rendering data inaccessible. It is not an exaggeration to suggest that cyber attacks have the potential to disrupt the functioning of life as we know it.&lt;/p&gt;

&lt;p&gt;Threats are now becoming more severe. According to Gartner, "cybersecurity risks pervade every organisation and aren't always directly under IT's control."Market executives are pushing forward with digital business plans, and those leaders are making technology-related risk decisions on a daily basis. Increased cyber vulnerability exists, but so do computer protection solutions.”&lt;/p&gt;

&lt;p&gt;Virtually every cyber threat falls into one of these three modes. In terms of attack techniques, malicious actors have an abundance of options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Actors in cyberspace :&lt;/strong&gt; In cybersecurity, the "enemy" we may learn about is known as a "threat actor" - a concept that may apply to lone individuals, organised crime organisations, or whole entities attempting to compromise an individual's or organization's protection.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Cybercrime includes single threat actors or groups targeting systems (like DDOS) for financial gain or to cause disruption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cyber-attack often involves politically motivated information gathering and threats which can be like an apocalypse.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cyberterrorism is predetermined to undermine electronic systems to cause panic or fear in the victim.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cyber attacks may originate from a wide range of locations, individuals, and contexts. Among the malicious actors are:&lt;/p&gt;

&lt;p&gt;Individuals that create attack vectors using their own software tools&lt;br&gt;
Criminal organizations that are run like corporations, with large numbers of employees developing attack vectors and executing attacks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nation states&lt;/li&gt;
&lt;li&gt;Terrorists&lt;/li&gt;
&lt;li&gt;Industrial spies&lt;/li&gt;
&lt;li&gt;Organized crime groups&lt;/li&gt;
&lt;li&gt;Unhappy insiders&lt;/li&gt;
&lt;li&gt;Hackers&lt;/li&gt;
&lt;li&gt;Business competitors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, how do malicious actors gain control of computer systems? Here are some common methods used to threaten cyber-security:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Malware&lt;/strong&gt;&lt;br&gt;
Malware is short for malicious applications. Malware is software developed by a cybercriminal or intruder to disable or destroy a legitimate user's computer. It is one of the most popular cyber threats. Malware, which is often distributed through unsolicited email attachments or legitimate-looking downloads, can be used by cybercriminals to make money or in politically motivated cyber-attacks.&lt;/p&gt;

&lt;p&gt;There are a number of different types of malware, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Virus :&lt;/strong&gt; A software that binds itself to clean files and spreads within a computer system, infecting files with malicious code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Trojans :&lt;/strong&gt; Malware that behaves as legitimate apps. Cybercriminals deceive users into installing Trojans on their computers, which inflict harm or capture data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Spyware :&lt;/strong&gt; A software that secretly tracks what a user does in order for cybercriminals to use this material. Spyware, for example, may record credit card information.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Probably shoulder surfing and spoofing might also come uder this category.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ransomware:&lt;/strong&gt; Malware that encrypts a user's files and data and threatens to delete it until a ransom is paid.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Adware:&lt;/strong&gt; Advertising tech that has the potential to distribute malware in the victims local system or the server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Botnets :&lt;/strong&gt; Malware-infected computer networks that cybercriminals use to execute activities online without the user's consent.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;SQL injection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SQL (structured language query) injection is a method of cyber-attack used to gain access to and steal data from a database. Cybercriminals take advantage of flaws in data-driven applications to inject malicious code into a database with a malicious SQL comment. This grants them access to the database's classified details.&lt;/p&gt;

&lt;p&gt;this attack is a fact that we still know how the computer or the server behaves.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phishing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Phishing occurs as cybercriminals send emails that claim to be from a reputable organisation and request personal information from victims. Phishing attacks are often used to trick users into providing credit card information and other sensitive information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Man-in-the-middle attack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A man-in-the-middle attack is a type of cyber threat in which a cybercriminal intercepts contact between two people in order to steal information. On an insecure WiFi network, for example, an attacker might intercept data passing between the victim's computer and the network.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Denial-of-service attack&lt;/strong&gt;&lt;br&gt;
A denial-of-service attack occurs as cybercriminals overload networks and servers with traffic in order to block a computer system from serving legitimate requests. This makes the machine inoperable and prevents an entity from performing critical functions.&lt;br&gt;
and many &lt;strong&gt;more&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Domains of Cyber Security&lt;/strong&gt;&lt;br&gt;
Below are the domains of Cybersecurity as a subject.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Access Control Systems and Methodology&lt;/li&gt;
&lt;li&gt;Telecommunications and Network Security&lt;/li&gt;
&lt;li&gt;Business Continuity Planning and Disaster Recovery Planning&lt;/li&gt;
&lt;li&gt;Security Management Practices&lt;/li&gt;
&lt;li&gt;Security Architecture and Models&lt;/li&gt;
&lt;li&gt;Law, Investigation, and Ethics&lt;/li&gt;
&lt;li&gt;Application and Systems Development Security&lt;/li&gt;
&lt;li&gt;Cryptography&lt;/li&gt;
&lt;li&gt;Computer Operations Security&lt;/li&gt;
&lt;li&gt;Physical Security&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Access Control Systems and Methodology:&lt;/strong&gt;&lt;br&gt;
The primary goal of Cyber Security is to safeguard your files. But, first, we'll learn more about Data and the different access control schemes and methodologies.&lt;br&gt;
&lt;strong&gt;Six Dimensions of Data Quality Assessment :&lt;/strong&gt;&lt;br&gt;
A Data Quality(DQ) Dimension is a well-known concept that describes a data attribute that can be analysed or tested against predefined criteria in order to analyse data quality.&lt;br&gt;
&lt;strong&gt;The six core data quality dimensions are:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Consistency&lt;/li&gt;
&lt;li&gt;Completeness&lt;/li&gt;
&lt;li&gt;Correctness&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Timeliness&lt;/li&gt;
&lt;li&gt;Accuracy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;States of Data :&lt;/strong&gt;&lt;br&gt;
Understanding the various states of digital data will help you choose the various types of security measures and encryption methods to use on the data. In this section, we will look at three types of data states.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Data at rest/storage :&lt;/strong&gt;
&lt;strong&gt;Data at rest&lt;/strong&gt; refers to data that has been stored on a physical medium or backup medium, such as hard drives or even cell devices. What distinguishes data at rest is that it is unused and is not actually being exchanged or stored.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data in motion/transmission:&lt;/strong&gt;
The second data process has begun. Data in motion is actually being sent over a network or is sitting in a computer's RAM waiting to be read, modified, or interpreted. Emails or data shared through FTP or SSH are examples.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data in process :&lt;/strong&gt;
The third step of data is in use or in operation. This data state is not passively stored on a storage medium. This is the data that one or more programmes are processing. This is the information that is currently being created, modified, appended, or deleted.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The third step of data is in use or in operation. This data state is not passively stored on a storage medium. This is the data that one or more programmes are processing. This is the information that is currently being created, modified, appended, or deleted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Confidentiality :&lt;/strong&gt;It guarantees that only approved parties have access to computer-related assets, also known as confidentiality or privacy.&lt;br&gt;
Measures taken to discourage classified information from meeting the wrong persons and to ensure that only designated individuals have access to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technique used is Encryption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Encryption to ensure Confidentiality:&lt;/strong&gt;&lt;br&gt;
If we choose to word “HELLO,” we can use cryptography to substitute each alphabet of HELLO with its neighbour alphabet, such as H replacing I, E replacing F, and so on, rendering the word meaningless. Then we decrypt using the same method as on the other hand.&lt;br&gt;
&lt;strong&gt;Bitlocker&lt;/strong&gt; is a disk/drive-level encryption. We cannot apply &lt;strong&gt;BitLocker on file.&lt;/strong&gt;&lt;br&gt;
The NTFS file system is used for Windows. EFS (Encrypted File System)-File Level Encryption is accessible. Right-click on the file and choose Properties (Compress the contents in blue color).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features of EFS:&lt;/strong&gt; There are two colors that show encryption and decryption.&lt;br&gt;
Policies are at the heart of the whole operation. To hold a data backup. When an employee resigns, the corporation reformats the scheme, erasing the BitLocker keys and other data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Types of Encryption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two top-level types of encryption. Symmetric and Asymmetric&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Symmetric Encryption :&lt;/strong&gt;&lt;br&gt;
Encrypts and decrypts data with the same key.Consider using a desktop password manager. You enter your name, which is encrypted with your exclusive key. When it is time to recover the data, the same key is used, and the data is decrypted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Asymmetric Encryption :&lt;/strong&gt;&lt;br&gt;
It employs a private key and a public key pair.&lt;br&gt;
A single key will encrypt but not decrypt its own decrypted data. The paired key is needed to decrypt.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;Asymmetric encryption&lt;/code&gt; is used for topics like HTTPS Transport Layer Security (TLS) and data signing.&lt;/p&gt;

&lt;p&gt;Access Controls:&lt;br&gt;
Access controls authenticate and authorize individuals to access the information they are allowed to see and use&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Something you know — (you know passwords)&lt;/li&gt;
&lt;li&gt;Something you are — (biometric scan)&lt;/li&gt;
&lt;li&gt;Something you have — (ATM card)&lt;/li&gt;
&lt;li&gt;Something you do — (signature style)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Integrity of Data :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Integrity :&lt;/strong&gt; This ensures the properties can only be changed by registered parties and in approved ways. Ensures the material is in a format that is true and valid for the purposes for which it was created. It entails ensuring the quality, precision, and trustworthiness of data over the entire life cycle.&lt;br&gt;
&lt;code&gt;Hash&lt;/code&gt; is the technique used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hash:&lt;/strong&gt; Hash Calculator that accepts a file as input and applies an algorithm to it. The object of hashing is to demonstrate that the original file has not been altered.&lt;br&gt;
Let's look at a real-world example of hashing using the Microsoft File Checksum Integrity Verifier. You will have it from the internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Availability of Data :&lt;/strong&gt;&lt;br&gt;
It ensures the funds are available to approved parties at all times. High availability (99.9 percent) with a 0.1 percent error rate, and 99.999 uptime with a 0.0001 error rate when improved. It is carried out by techniques such as hardware repair, programme patching, and network optimization.&lt;br&gt;
A Denial of Service Attack is a classic example of a malicious actor's lack of availability (DOS).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SLA :&lt;/strong&gt; The Service Level Agreement is a legally binding contract. It is a contract between a service provider and a customer. Specific facets of service — such as consistency, affordability, and obligations — are settled upon between the service provider and the service consumer. If a service recipient should not accept files in a timely manner, the service provider is fined.&lt;/p&gt;

&lt;p&gt;Before discussing the types of DOS attacks, let’s have a look at &lt;strong&gt;Ping Command.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ping is a computer network management software utility that is used to measure a host's reachability on an Internet Protocol network. A quick way to see if a computer can connect with another computer or network system over the network.(available both in Windows anf Linux)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ping 127.0.0.1&lt;/code&gt; (127.0.0.1 is a loopback address)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ping &amp;lt;any ip&amp;gt;&lt;/code&gt; is for any domain to be tested.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Types of DOS Attacks:&lt;/strong&gt;&lt;br&gt;
Will discuss a few of the DOS Attacks&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ping of Death&lt;/li&gt;
&lt;li&gt;Ping of Flood&lt;/li&gt;
&lt;li&gt;Smurf Attack&lt;/li&gt;
&lt;li&gt;Fraggle Attack&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Ping of Death:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A Ping of Death attack is a form of Denial of Service (DoS) attack in which the attacker sends a packet that is greater than the maximum allowed capacity, forcing the target computer to freeze or crash.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ping of Flood:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ping flood, also known as ICMP flood, is a popular Denial of Service (DoS) attack in which an attacker overwhelms a victim's device with ICMP echo requests, also known as pings. As an example, consider the Education Board's website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fraggle Attack :&lt;/strong&gt;&lt;br&gt;
A Fraggle attack is a form of DOS attack in which the attacker sends a large amount of spoofed UDP traffic to a network router's broadcast address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;"Bugs and Viruses play a majour role in destoying the software thus some first found were."&lt;/p&gt;

&lt;p&gt;On September 9, 1947 CE, the world's first computer bug was discovered. On September 9, 1947, a team of computer scientists at Harvard University announced the world's first computer bug—a moth stuck in their computer.&lt;/p&gt;

&lt;p&gt;The first computer virus, known as the "Creeper Virus," was discovered in 1971. The virus was finally removed by a machine known as "The Reaper," although it is important to remember that the Reaper was also a virus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TeleCommunications and Network Security:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The focus is on messaging, protocols, and network facilities, as well as the possible flaws involved with each. It refers to the procedures and policies put in place to deter and track unauthorised access and abuse of a computer network and its infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Protocols:&lt;/strong&gt;&lt;br&gt;
Network Protocols are a series of rules that regulate the exchanging of information in a simple, dependable, and protected manner. There are three kinds of network protocols, as mentioned below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TCP/IP&lt;/li&gt;
&lt;li&gt;OSI Model&lt;/li&gt;
&lt;li&gt;CISCO Hierarchical Model&lt;/li&gt;
&lt;li&gt;TCP/IP VS OSI Model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The two most popular network protocols are TCP/IP and the OSI model. The primary distinction between them TCP/IP is a functional model used for forming a stable link and communicating over a network, while OSI is a logical model.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hierarchical Model of Cisco:&lt;/strong&gt;&lt;br&gt;
Cisco has developed a three-layered hierarchical architecture for creating a dependable infrastructure. Each of the layers has its own functionality and features, which aids in the reduction of network complexity.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Access Layer :&lt;/strong&gt; 
Control network resource access for users and workgroups. Layer 2 switches are usually used in this layer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Distribution Layer :&lt;/strong&gt; 
It acts as a bridge between the entry layer and the main layer. This layer is usually made up of multilayer switches.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Core Layer :&lt;/strong&gt; 
This layer, also known as the Backbone layer, is in charge of easily moving large volumes of traffic.
&lt;code&gt;Planning for the Unexpected:&lt;/code&gt;
&lt;strong&gt;Contingency Planning :&lt;/strong&gt;
&lt;strong&gt;IR(Incident Response)-&lt;/strong&gt;There are several tears, so the first move is to identify, contain, investigate (forensics), execute the remedy, and register (document)
&lt;strong&gt;DR(Disaster Recovery) :&lt;/strong&gt; Floods and earthquakes are examples of high-level problems that cause significant damage.
&lt;strong&gt;BCP(Business Continuity Planning) :&lt;/strong&gt; When all is lost in a storm, how will the company continue? Laws, Investigations, and Ethics.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Law, Investigation, and Ethics is one of the most intriguing defence realms. As the name suggests, this security domain addresses the legal aspects of information security.Cryptography is a form of encryption.&lt;/p&gt;

&lt;p&gt;Cryptography, or data coding, is one of the most commonly used authentication methods today. The Cryptography security domain is intended to teach you how and when to use encryption.&lt;br&gt;
&lt;strong&gt;What’s next?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This article was written to provide you with a short overview and how-to guide for Cyber Security Fundamentals. Feel free to play around with it ethically.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Latest cyber threats&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What are the most recent cyber attacks that people and companies must be aware of? Here are some of the most recent cyber attacks identified by the governments of the United Kingdom, the United States, and Australia.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hijack of Telegram&lt;/strong&gt;&lt;br&gt;
Telegram has a critical flaw that allows hackers to spread cryptojacking malware.&lt;br&gt;
Hackers gained access to Telegram's email details and messenger of some of the top cryptocurrency companies. The hackers, according to rumours at the time, used Signaling System 7 (SS7), which is used to link mobile networks all over the world.&lt;/p&gt;

&lt;p&gt;According to cybersecurity analysts, the hackers were searching for two-factor authentication (2FA) login information from the server.&lt;/p&gt;

&lt;p&gt;They took over the network's short message services centre (SMSC) and used it to send calls for location alerts to over 20 high-profile victims.&lt;/p&gt;

&lt;p&gt;The attackers carried out the assault in order to obtain cryptocurrencies. It is a frequent attack in the crypto space, but victims are still unsure how to defend their networks from such attacks.&lt;/p&gt;

&lt;p&gt;However, with blockchain technologies at work, it appears that the crypto world has superior authentication mechanisms than using call or SMS-based 2FA.&lt;/p&gt;

&lt;p&gt;Cybersecurity researchers believe that protocols such as SS7 can not be used by telecom experts because they lack the necessary security standards to guard against advanced attacks in the modern era.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dridex malware&lt;/strong&gt;&lt;br&gt;
The US Department of Justice (DoJ) indicted the leader of an organised cyber-criminal organisation in December 2019 for their role in a multinational Dridex ransomware attack. This malicious campaign had a global impact on the public, economy, infrastructure, and industry.&lt;/p&gt;

&lt;p&gt;Dridex is a financial trojan with many capabilities. It has been infecting machines via phishing emails or existing malware since 2014. It has incurred huge financial damages amounting to hundreds of millions of dollars by stealing passwords, banking records, and personal data that can be used in illegal transactions.&lt;/p&gt;

&lt;p&gt;In reaction to the Dridex threats, the United Kingdom's National Cyber Security Centre urges the public to "ensure that computers are patched, anti-virus software is turned on and up to date, and files are backed up."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Romance scams&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In February 2020, the FBI sent a warning to U.S. people about trust theft perpetrated by cybercriminals using dating forums, chat rooms, and applications. Perpetrators prey on individuals looking for new relationships, duping victims into disclosing sensitive information.&lt;/p&gt;

&lt;p&gt;According to the FBI, romance cyber attacks targeted 114 victims in New Mexico in 2019, resulting in $1.6 million in financial losses.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emotet malware&lt;/strong&gt;&lt;br&gt;
The Australian Cyber Security Centre sent an alert to national entities in late 2019 about a pervasive global cyber threat posed by Emotet malware.&lt;/p&gt;

&lt;p&gt;Emotet is a complex trojan that has the ability to harvest data as well as load other malware. Emotet thrives on simple passwords, serving as a reminder of the value of having a safe password to protect against cyber attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sopra Steria Attack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On October 20, Sopra Steria, a French IT service provider, was targeted by a ransomware attack by a new version of the Ryuk ransomware, which was previously unknown to cybersecurity providers.&lt;/p&gt;

&lt;p&gt;Sopra Steria stated after the attack that the attack infected a portion of its IT architecture. According to the firm, the data breach caused no harm or leakage of consumer data.&lt;/p&gt;

&lt;p&gt;When it comes to ransomware threats, Ryuk is one of the most potent in this day and era. The ransomware has infiltrated high-profile companies such as Prosegur, a Spanish logistics firm, and EWA, a US defence contractor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;End-user protection&lt;/strong&gt;&lt;br&gt;
End-user safety, also known as endpoint defence, is a critical component of cyber security. After all, it is frequently a person (the end-user) that unintentionally downloads ransomware or some kind of cyber threat to their desktop, laptop, or mobile device.&lt;/p&gt;

&lt;p&gt;But, how can cyber-security safeguards safeguard end users and systems? To begin, cryptographic protocols are used to encrypt emails, directories, and other sensitive data in cyber-security. This not only safeguards information in transit, but also prevents it from destruction or fraud.&lt;/p&gt;

&lt;p&gt;Furthermore, end-user protection programme checks machines for malicious malware, quarantines it, and then deletes it from the system. Security programmes can also identify and delete malicious code concealed in the Master Boot Record (MBR) and are programmed to encrypt or erase data from the hard drive of a device.&lt;/p&gt;

&lt;p&gt;Real-time intrusion prevention is also a subject of electronic security protocols. Many people use heuristic and behavioural analysis to track a program's and its code's actions in order to protect against viruses or Trojans that change form with each execution (polymorphic and metamorphic malware).Security programmes can isolate potentially malicious programmes in a virtual bubble isolated from the user's network in order to observe their actions and learn how to spot new pathogens more effectively.&lt;/p&gt;

&lt;p&gt;As cyber-security experts discover emerging risks and ways to fight them, security programmes begin to develop new protections. Employees must be trained about how to use end-user security tools in order to get the best out of it. Importantly, keeping it going and upgrading it on a regular basis means that it will protect consumers from the most recent cyber attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cyber safety tips -&lt;/strong&gt; safeguard yourself from cyber-attacks&lt;br&gt;
How will companies and individuals protect themselves from cyber threats? Here are our top cyber safety tips:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Update your software and operating system, you benefit from the latest security patches updates from the company that has given the software, One of the safest ways to defend your devices from any hacking attempt is to keep your system informed on a daily basis. The majority of attacks occur as hackers discover a security flaw or loophole that they can manipulate. However, with routine patches, those bugs will be eliminated. It is best to run programme upgrades for your device as soon as they become usable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use anti-virus software, security solutions like Kaspersky Total Security will detect and removes threats. Keep your software updated for the best level of protection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use strong passwords, ensure your passwords are not easily guessable and make sure that you regularly change the software every fiscal time(change every 90 days recommended).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not open email attachments from unknown senders: These could be infected with malware, or just can be a phishing mail to gather all your information. Do not click on links in emails from unknown senders or unfamiliar website,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid using unsecure Wi-Fi networks in public places like hotels and malls etc,Unsecure networks leave you vulnerable to man-in-the-middle attacks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If your archives or records are corrupted and stolen, a previous backup of those files will assist in fully restoring them. It is important to backup the data and archive it in a reliable cloud storage service or on an external hard drive. As a result, if a file is lost due to a hacking event or system corruption, you will copy those data again.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The methods mentioned above are some of the most powerful ways to defend your device from malware intrusion or attack.&lt;/p&gt;

&lt;p&gt;happy learning folks thank you.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>codenewbie</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>HTTP caching is a superpower</title>
      <author>Hugh Haworth</author>
      <pubDate>Mon, 10 May 2021 22:08:21 +0000</pubDate>
      <link>https://dev.to/elliotclydenz/http-caching-is-a-superpower-45ka</link>
      <guid>https://dev.to/elliotclydenz/http-caching-is-a-superpower-45ka</guid>
      <description>&lt;p&gt;&lt;a href="https://www.elliotclyde.nz/blog/http-caching-is-a-superpower"&gt;Original post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What do people mean when they say “use the platform” or “web fundamentals”?&lt;/p&gt;

&lt;p&gt;The web is well designed: It’s reliable, it’s consistent, and it’s open. Some sites built on it aren’t so great. But we keep coming back anyway. I’d maintain that the original design of the web is, and &lt;em&gt;always&lt;/em&gt; has been, pretty damn good. If we have a deeper look into its basic building blocks, we can improve our websites.&lt;/p&gt;

&lt;p&gt;The web got started with a few fundamental features: Hypertext Markup Language, the Uniform Resource Locator, and what we’ll be looking at here: the Hypertext Transfer Protocol. These features give web browsers the ability to fetch and present data. But they can also instruct the browser on &lt;em&gt;how&lt;/em&gt; to perform these functions. Why should you care about these specs from the ‘90s? Here's why:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We can continue to improve experiences using features the web has provided for&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;decades&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s think about how we become web developers. Usually it’s something like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We start as consumers of the web. We learn how to use browsers, including the “back” button and the hyperlink. We learn what URLs are by typing them into the address bar.&lt;/li&gt;
&lt;li&gt;One day we decide we want to learn how to make websites. The roadmap usually tells you to start with authoring with HTML, then styling with CSS, then building interactivity with JavaScript, (and/or producing dynamic documents with server-side languages).&lt;/li&gt;
&lt;li&gt;We end up pretty far ahead before looking at a very basic part of the stack in any meaningful way: the humble hypertext transfer protocol.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#http-11"&gt;
  &lt;/a&gt;
  HTTP 1.1
&lt;/h2&gt;

&lt;p&gt;I want to take us back to 1997.  &lt;a href="https://www.youtube.com/watch?v=OefdqK3jKi0"&gt;Candle in the Wind is ringing in your radio&lt;/a&gt;. You’re greiving for the Peoples’ Princess. You’re wearing low-rise baggy jeans. Bill Clinton is starting his second term. Apple is a computer company that seems to have lost the war against Microsoft. A mobile phone is a suitcase with a phone attached to it.&lt;/p&gt;

&lt;p&gt;This was the year the &lt;a href="https://tools.ietf.org/html/rfc2068"&gt;RFC for HTTP 1.1&lt;/a&gt; was officially released. Why was it released? It tells you in the purpose section:&lt;/p&gt;

&lt;p&gt;“The first version of HTTP, referred to as HTTP/0.9, was a simple protocol for raw data transfer across the Internet. HTTP/1.0, as defined by &lt;a href="https://tools.ietf.org/html/rfc1945"&gt;RFC 1945&lt;/a&gt; [&lt;a href="https://tools.ietf.org/html/rfc2068#ref-6"&gt;6&lt;/a&gt;], improved the protocol by allowing messages to be in the format of MIME-like messages, containing metainformation about the data transferred and modifiers on the request/response semantics. However, HTTP/1.0 does not sufficiently take into consideration the effects of hierarchical proxies, caching, the need for persistent connections, and virtual hosts.”&lt;/p&gt;

&lt;p&gt;While Britain was handing keys of Hong Kong government offices to China, a bunch of developers were working hard to improve HTTP: The very protocol Facebook uses today to send you &lt;a href="https://www.theguardian.com/technology/2020/aug/19/facebook-funnelling-readers-towards-covid-misinformation-study"&gt;misinformation&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=YMPR-jffgRw"&gt;bizarre craft videos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There was a whole lot of good stuff that came from the HTTP 1.1 proposal. We got persistent TCP connections. This meant less work handshaking between computers. We got &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;TRACE&lt;/code&gt; , and &lt;code&gt;OPTIONS&lt;/code&gt; for request methods. We got the &lt;code&gt;Content-Encoding&lt;/code&gt; header so we could compress the data over the wire. We got the ability to have one IP address serve multiple domains. &lt;/p&gt;

&lt;p&gt;And on page 100 of the proposal you can find we got a new header called “cache-control”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-cache-control-header"&gt;
  &lt;/a&gt;
  The Cache Control Header
&lt;/h2&gt;

&lt;p&gt;This HTTP header will make your site faster. It'll improve user experience. It’ll give you better SEO. It's been doing all this since before 9/11 and people don't talk about it enough. You don’t need any specific framework or language to use it. It’s not “hot”. It is an underrated building block of the web platform which is probably offsetting the carbon footprint of Ireland (an estimate I’ve made based on nothing).&lt;/p&gt;

&lt;p&gt;How can we activate this superpower?&lt;/p&gt;

&lt;p&gt;First, you’ll some kind of access to the server-side of your site and a way to specify the HTTP headers of what your application sends. If you’re running a PHP/Ruby/ASP.NET/Django site this shouldn’t be too hard. For each of these you’ll need to find out how to specify content headers in your HTTP response.&lt;/p&gt;

&lt;p&gt;Here’s some links for how  with each language/framework:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.php.net/manual/en/function.header"&gt;HTTP header function in PHP&lt;/a&gt; or the &lt;a href="https://laravel.com/docs/8.x/responses#attaching-headers-to-responses"&gt;header method of the response class&lt;/a&gt; if you’re writing Laravel&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.rubyonrails.org/classes/ActionController/ConditionalGet.html"&gt;The action dispatch class in Rails (specifically the conditional get module)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpresponsemessage.headers?view=net-5.0#System_Net_Http_HttpResponseMessage_Headers"&gt;The Headers property of the http response method class in ASP.NET&lt;/a&gt; or with &lt;a href="https://www.strathweb.com/2013/03/adding-http-head-support-to-asp-net-web-api/"&gt;this guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/3.2/topics/http/decorators/#django.views.decorators.cache.cache_control"&gt;The cach control view decorator in Django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you’re going for a JAMstack/static site approach it might be a little more difficult. &lt;/p&gt;

&lt;p&gt;I could attempt to find out how to set an HTTP header in AWS but that might take a lifetime. I expect developer-friendly companies like Netlify, Vercel, and Cloudflare provide easy ways to set these headers. I’m a masochist, so I host my static site on an Azure CDN and I found the way to set headers is using their &lt;a href="https://docs.microsoft.com/en-us/azure/cdn/cdn-standard-rules-engine-reference"&gt;Rules Engine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, if you’re a quote unquote &lt;em&gt;“real”&lt;/em&gt; programmer - with a grey ponytail, history of taking LSD in the ‘70s and a loathing for writing in any language other than C - you can configure HTTP headers with &lt;a href="https://httpd.apache.org/docs/2.4/caching.html"&gt;Apache&lt;/a&gt;, or with &lt;a href="http://nginx.org/en/docs/http/ngx_http_headers_module.html"&gt;Nginx&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-http-caching-do"&gt;
  &lt;/a&gt;
  What does HTTP caching do?
&lt;/h2&gt;

&lt;p&gt;HTTP caching allows us to stop browsers re-fetching information they already have. &lt;/p&gt;

&lt;p&gt;This is why server-rendered websites will usually load faster on the second page than the first. When I was learning Laravel my sites always took about two seconds: On the first page, on the second page, the third. Always. I was always re-fetching CSS, images, other assets. Every time I clicked on a new page my browser would ask the server for &lt;em&gt;everything&lt;/em&gt; all over again. This includes fonts, where I can’t imagine any case where you’d want the same URL to ever return a different font.&lt;/p&gt;

&lt;p&gt;How did other Laravel developers get their pages to load so fast on the second run? How did they prevent the page re-fetching everything? Did they always use turbolinks to fetch each page using JavaScript and rerender? Were they always pulling in Vue and fetching JSON data?&lt;/p&gt;

&lt;p&gt;The (far simpler) answer was HTTP caching. You can see it in action if you head into your browser’s developer tools, jump into the network tab and refresh a page. Under “Size” you’ll usually see a bunch of files which say “disc cache” or “memory cache”. These files are the beneficiaries of somebody, somewhere setting a &lt;code&gt;Cache-Control&lt;/code&gt; header. &lt;/p&gt;

&lt;p&gt;You can see the amount of data they’ve saved going across the wire by keeping your developer tools open and doing a hard refresh (&lt;code&gt;Control + F5&lt;/code&gt; on Windows, &lt;code&gt;Command + F5&lt;/code&gt; on Mac). You might have even used a hard refresh before, but not known that this is what a hard refresh does: It’s a refresh which ignores the browser cache.&lt;/p&gt;

&lt;p&gt;You don’t have to tell the browser to do this using JavaScript. This logic is baked into the platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-we-cache"&gt;
  &lt;/a&gt;
  What should we cache?
&lt;/h2&gt;

&lt;p&gt;We first need to decide what to cache. &lt;/p&gt;

&lt;p&gt;We don’t want any dynamic content to be cached, otherwise when we refresh the page or click on a link, we might get stale data. &lt;/p&gt;

&lt;p&gt;For example, let's say where on a &lt;a href="https://tdnforums.com/topic/40477-beautiful-neopian-items/"&gt;neopets forum.&lt;/a&gt; We write a comment. Something like: “The most beautiful neopets item is the &lt;a href="https://items.jellyneo.net/item/882/"&gt;fire and ice blade&lt;/a&gt;!”. In a traditional server-rendered forum we’d get redirected back to the original post. And we’d want the HTML page to be re-fetched from the server. Otherwise our contribution to the conversation won’t be visible to us - the browser would have shown us the cached file instead of re-fetching the updated page. There is a way we can cache the file and check with the server whether things have changed with something called an Etag - more on this later.&lt;/p&gt;

&lt;p&gt;However, there will be many things on your neopets forum post which &lt;em&gt;don’t&lt;/em&gt; need to change when your browser makes a new request. The styles won’t need to change and can be cached. This is &lt;a href="https://www.w3.org/TR/html401/present/styles.html#Cascading"&gt;one of the original arguments for separating CSS files from HTML&lt;/a&gt;. The fonts will stay the same. The images will usually stay the same. You might have some JSON data that you can trust you’ll never need to change - for example I built &lt;a href="https://www.elliotclyde.nz/phonetic-quiz"&gt;a phonetic alphabet quiz app&lt;/a&gt; and I can trust that the phonetic alphabet JSON won’t change. If any of these do need to be updated, you also do have the option of serving them from a different URL.&lt;/p&gt;

&lt;p&gt;A more controversial issue might be your scripts.  If you find a terrible security floor in your JavaScript bundle, you won’t want your user’s browser to touch it with a ten-foot pole. If dangerous scripts get cached, your user will be stuck on the other side of the world with an evil gremlin in their browser. For this reason, if you are caching JavaScript, it’s a good idea to version your bundles to create new URLs for updates. You can set up build tools to do this, and there will be a thousand Medium articles to show you how.&lt;/p&gt;

&lt;p&gt;Essentially, we want to cache an asset if we can comfortably say we’re not going to need to update it. and if we &lt;em&gt;do&lt;/em&gt; need to update it, we can point to a different URL without affecting the user experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-we-use-http-caching"&gt;
  &lt;/a&gt;
  How do we use HTTP caching?
&lt;/h2&gt;

&lt;p&gt;The number one way to use HTTP caching is to set the &lt;code&gt;Cache-Control&lt;/code&gt; header to a &lt;code&gt;max-age&lt;/code&gt; value. Here you can define (in seconds) how long you want the browser to keep using a cached version of the resource.&lt;/p&gt;

&lt;p&gt;If head to the &lt;a href="https://www.catan.com/"&gt;Settlers of Catan website,&lt;/a&gt; we know we’re about to see some medieval fonts. A quick dive into the source and we can see they’re using &lt;a href="https://fonts.adobe.com/fonts/minion"&gt;Minion Pro&lt;/a&gt;. Nice. Times New Roman of the sophisticated. On the network tab, after reloading the *&lt;em&gt;checks notes *&lt;/em&gt; 9MB of assets?! We can see Minion Pro is being fetched from the following URL: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://use.typekit.net/af/ea8d85/0000000000000000000151d1/27/l?subset_id=2&amp;amp;fvd=n7&amp;amp;v=3"&gt;https://use.typekit.net/af/ea8d85/0000000000000000000151d1/27/l?subset_id=2&amp;amp;fvd=n7&amp;amp;v=3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we click into the headers of the response, we see: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;cache-control:&lt;/code&gt; &lt;code&gt;****&lt;/code&gt;&lt;code&gt;public, max-age=31536000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;60 seconds x 60 minutes x 24 hours times x 365 days = 31536000, so the font host is telling our browser to cache the font for a full year.&lt;/p&gt;

&lt;p&gt;We know what the &lt;code&gt;max-age&lt;/code&gt; means. What about the public? Well, here’s where we find out that your browser isn’t the only thing that caches the request. When we make HTTP requests, they will usually pass through proxy servers - servers inbetween the client and the server. &lt;/p&gt;

&lt;p&gt;If we set &lt;code&gt;cache-control&lt;/code&gt; to public, these proxy servers will also cache our requests. Even if the browser doesn’t find the file in its cache, the proxy server may prevent a request from getting all the way to our server. This saves our server compute-time and effort. We may not want proxies to store private information, so we have the option to set &lt;code&gt;cache-control&lt;/code&gt; to &lt;code&gt;private&lt;/code&gt; instead, which will only allow the browser to cache the response. &lt;/p&gt;

&lt;p&gt;What other instructions can we give using the &lt;code&gt;cache-control&lt;/code&gt; header?&lt;/p&gt;

&lt;p&gt;If we don’t want the resource to be cached, we have the option of using the &lt;code&gt;cache-control:no-store&lt;/code&gt; option. This will make sure that CDNs, proxies and browsers don’t store something we don’t want them to. Good for anything that we &lt;em&gt;know&lt;/em&gt; will change from request to request.&lt;/p&gt;

&lt;p&gt;This is not to be confused with &lt;code&gt;cache-control:no-cache&lt;/code&gt; which &lt;em&gt;doesn’t&lt;/em&gt; actually stop the browser from caching. Instead, this tells the browser to check every time with the server whether the resource has changed, and only if it hasn’t changed will it use the cached version. This begs the question: How does the server tell the browser whether the resource has changed? &lt;/p&gt;

&lt;p&gt;This brings us to our next topic:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#etags"&gt;
  &lt;/a&gt;
  Etags
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19"&gt;Etags&lt;/a&gt; are still another way to stop a resource from needing to be downloaded.&lt;/p&gt;

&lt;p&gt;An Etag is an arbitrary string which the server can choose to provide with a resource. It will usually be a hash generated from the body of a response (with something like &lt;a href="https://en.wikipedia.org/wiki/MD5"&gt;MD5&lt;/a&gt;) or instead generated from the last-modified-time of a file. It’s up to the server how this is done.&lt;/p&gt;

&lt;p&gt;The browser will store the Etag when it first downloads a resource. Later, if we refresh our website and the following requirements are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;browser has the file in its cache &lt;strong&gt;and either&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;max-age&lt;/code&gt; has expired &lt;strong&gt;or&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;the &lt;code&gt;cache-control&lt;/code&gt; from a previous request was set to &lt;code&gt;no-cache&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then the browser will send a request to ask for the resource again with the previously downloaded Etag and an &lt;code&gt;If-None-Match&lt;/code&gt; header. The server will then generate a response with an Etag. If this new Etag matches what the browser sent, the server won’t send the whole response back. Instead it will sent a &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.5"&gt;304 response&lt;/a&gt; with no body. This is HTTP-speak for saying “The file in your cache is fine” and the entire response will only be about 80 to 100 bytes. A little bit smaller than when &lt;a href="https://twitter.com/_developit/status/1232891191110389760"&gt;Jason Miller&lt;/a&gt; writes a DOM library.&lt;/p&gt;

&lt;p&gt;This Etag method of caching isn’t as performant as when the browser pulls from its cache without a request - we still have to send an HTTP request over the wire and ask the server to check if anything has changed. The good part about it is that the server has fine-grained control over when to bust the cache when things &lt;em&gt;have&lt;/em&gt; changed. So using etag responses, we could actually cache more dynamic content, like HTML files, as long as we’re finding a way to generate a new Etag based on our response body or last-modified-time of a file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You now have a simple, platform-reliant way of preventing unnecessary requests. You have another tool in your belt to save your users time and money. Also you’ve got a way to save a little carbon from being released into our atmosphere to power a server farm. And you can use this tool with any style of website: static file sites, single page applications, and server rendered applications. It’s a superpower. &lt;/p&gt;

&lt;p&gt;But don’t take it from me, here are some smarter people than me who’ve written on this topic: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://almanac.httparchive.org/en/2019/caching"&gt;Caching | 2019 | The Web Almanac by HTTP Archive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/http-cache/"&gt;Prevent unnecessary network requests with the HTTP Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/the-low-hanging-fruit-of-web-performance/#4-make-sure-youre-browser-caching"&gt;The Low Hanging Fruit of Web Performance | CSS-Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/web-caching-basics-terminology-http-headers-and-caching-strategies"&gt;Web Caching Basics: Terminology, HTTP Headers, and Caching Strategies | DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/http-caching-in-depth-part-1-a853c6af99db/"&gt;An in-depth introduction to HTTP Caching: exploring the landscape | freecodecamp.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And if this isn’t enough power for you and you want even more out of your browser cache, you can take it to the next level with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers"&gt;Service workers&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webperf</category>
      <category>http</category>
      <category>webdev</category>
      <category>performance</category>
    </item>
    <item>
      <title>My Programming Story</title>
      <author>Ekekenta Zion</author>
      <pubDate>Mon, 10 May 2021 21:54:12 +0000</pubDate>
      <link>https://dev.to/icode247/my-programming-journey-4jj2</link>
      <guid>https://dev.to/icode247/my-programming-journey-4jj2</guid>
      <description>&lt;p&gt;When I got to the higher institution, I had not laptop, no knowledge of what computer science was all  about. Truthfully I choose computer science without any prior knowledge of it was. Now I am in school no laptop, no good mobile device for information hunting. &lt;br&gt;
One day I went to the class, we had Qbasic in our time table that day. The lecturer introduced the language and began explaining what variables are. &lt;br&gt;
To me I was just like someone sent to a big local market for the first time. It all the lecturer was explaining seemed like and illusion. &lt;br&gt;
I could remember boy who was very bright in class then, he was answering questions and the lecturer was making reference to him.&lt;br&gt;
I decided I should get a laptop and get someone to teach me. Then I got my first HP laptop, started downloading tutorials which I didn't seem to understand.&lt;br&gt;
One day I was on was in the lecture when a guy approached me to make space for him to seat with me, I simply obeyed him and he switched on his computer and started coding. I could remember he was coding on the Java programming language.&lt;br&gt;
I called his attention said 'Please can I learn programming from you?', he turned and smiled and said 'are you sure you can learn programming', out of curiosity I replied why do you ask, then he said he has encountered a lot of people who had showed some interest in becoming a programmer but concluded it was heard and left.&lt;br&gt;
At this point I was seriously confused, I have not written a line of code before. I said to him since you learnt it and now written programs with it I believe I can. The guy thought and mentored me in #HTML, #CSS and #PHP. I was building static websites with crazy ui. Each time I look at my design and my code compared to others I felt like giving up, but he kept on encouraging me to continue learning. He used these words a lot 'Everyone stated a learner, so keep learning',these were ringing in my mind while I kept learning day and night, writing and copying codes in #Stackoverflow, #Dev community, logrocket,mediums and other open source platforms.&lt;br&gt;
I built a simple voting system using PHP and MYSQL as my database management system. I was very happy depict that the UI wasn't good enough, it also had weak UX. But I was happy that was able to build something. I continued learning and building small scaled app with PHP and Mysql, until I mastered the basics of PHP.&lt;br&gt;
Two years later, this guy graduated and I moved to Python. I started learning python because of its easy to syntax, strength and cross platform capability, more especially it has a lot of modules that can ease development process. I build a bank management system with fingerprints authentication, online shopping system and other GUI and Web app. Currently I am developing use Nodejs.&lt;br&gt;
In conclusion, nothing good comes easy, you have to be determined. Don't let the beginning deprive you the  tressure at the end. I encourage the newbies to keep on learning no matter how difficult it is. A persistent water breaks a mighty rock.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>opensource</category>
      <category>performance</category>
    </item>
    <item>
      <title>How To Use let, const and var in JavaScript.</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 10 May 2021 21:21:32 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/how-to-use-let-const-and-var-in-javascript-4c8l</link>
      <guid>https://dev.to/ubahthebuilder/how-to-use-let-const-and-var-in-javascript-4c8l</guid>
      <description>&lt;p&gt;In Programming, variables are containers used to store data. &lt;/p&gt;

&lt;p&gt;For example, when you type in your name into a field on a website, that data is stored in a variable. When you search for a particular item on a website, the returned information is first stored in a variable before displayed to you.&lt;/p&gt;

&lt;p&gt;The assignment operator is used to “assign” data to a variable. It then becomes a value at that point.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In JavaScript, there are three keywords used to define variables. They are let, const and var. Before 2015, using the var keyword was the only way to declare a JavaScript variable.&lt;/p&gt;

&lt;p&gt;However, the advent of EmcaScript 2016 (ES16) came with two other variable keywords: let and const.&lt;/p&gt;

&lt;p&gt;Before we proceed to understand these keywords, we have to understand three concepts in variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Global Scope: A variable declared globally (outside of a function) has a global scope and can be accessed anywhere across the entire program.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// global scope&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;//code goes here&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Function Scope: A variable declared inside a function (i.e locally) has a function scope
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// global scope&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="c1"&gt;// function scope&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have the various scopes defined, let’s define the three variable keywords and what variable scoping they allow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FOR BLOCK SCOPING&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#var"&gt;
  &lt;/a&gt;
  Var
&lt;/h4&gt;

&lt;p&gt;Variables declared with the var keyword does not have block scoping. That is, any variable declared within a block can be accessed outside.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#let"&gt;
  &lt;/a&gt;
  Let
&lt;/h4&gt;

&lt;p&gt;Variables defined with Let can have block scoping. That is, any variable declared within a block {} cannot be accessed outside of that block.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#const"&gt;
  &lt;/a&gt;
  Const
&lt;/h4&gt;

&lt;p&gt;Like let, variables defined with const can have block scoping. That is, any variable declared within a block {} cannot be accessed outside of that block.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;const&lt;/strong&gt; and &lt;strong&gt;let&lt;/strong&gt; both have &lt;strong&gt;block scoping.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// name is Peter inside this block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// name is Peter inside this block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Also, let and var behave differently when a redeclaration is made inside the block.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// name is Peter inside this block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Peter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// name is Peter inside this block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here name is Kingsley&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A variable defined with const cannot be reassigned another value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Kingsley&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;Peter&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;// This will give an error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;N/B: Arrays and Objects defined with const can have their properties changed.  The immutability only pertains to primitive values like numbers and strings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can create an object with const:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;21&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You CAN change a property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can add a new property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;surname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ubah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, you cannot reassign a complete object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;21&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;25&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="c1"&gt;//error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same for an array of items:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Joe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;writers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sam&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Clark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;    &lt;span class="c1"&gt;// error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;N/B: If you're looking to see this new ES6 Syntax in action, I'll highly recommend  &lt;a href="https://gumroad.com/a/834147443"&gt;HTML To React By Sleepless Yogi&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Inside loops&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Var and let also behave differently in loops.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here i is 10&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Here i is 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;FOR FUNCTION SCOPE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Variables declared with the let keyword has function scoping. That is, the variable is not accessible outside the scope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// name can’t be accessed by this global code&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// func scope&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;FOR GLOBAL SCOPE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Variables declared with &lt;strong&gt;var&lt;/strong&gt; keyword has a global scope. It is accessible from all over the JavaScript code (and can be accessed with the window object).&lt;/p&gt;

&lt;p&gt;Variables declared with &lt;strong&gt;let&lt;/strong&gt; keyword has a global scope. However, it can’t be accessed with the windows object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These two keywords also behave differently when a declaration is made within the global scope:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Now x is 1&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Now x is 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that redeclaration within the same scope is allowed with the var keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that redecleration within the same scope or same block is not allowed with the let keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that while you can successfully redeclare a variable with in another block with var, you can’t with let.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="c1"&gt;// Not allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that while you can successfully redeclare a variable with in another block with var, you can’t with const.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that redeclaration is another scope or another block is possible with let.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Allowed&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// Allowed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet shows that redeclaration is another scope or another block is possible with const.&lt;/p&gt;

&lt;p&gt;Variable scopes is crucial for every sofware developer to grasp.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you enjoyed this article and want to support me, feel free to buy me my favourite fruit:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you for your time and see you soon!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
