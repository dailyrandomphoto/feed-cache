<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React SaaS Boilerplate with Next JS and Serverless</title>
      <author>Remi W.</author>
      <pubDate>Wed, 27 Oct 2021 18:31:17 +0000</pubDate>
      <link>https://dev.to/ixartz/react-saas-boilerplate-with-next-js-and-serverless-n3m</link>
      <guid>https://dev.to/ixartz/react-saas-boilerplate-with-next-js-and-serverless-n3m</guid>
      <description>&lt;p&gt;Building a SaaS application from scratch is a difficult task and it involves a lot of skills: Frontend, Backend, Cloud infrastructure and third-party integration like payment. It took me 5 months to build my first SaaS and make it available to the public.&lt;/p&gt;

&lt;p&gt;I built a &lt;a href="https://nextlessjs.com" rel="noopener noreferrer"&gt;React SaaS Boilerplate&lt;/a&gt; to reduce this time by 80%. The perfect solution to build your SaaS faster and better. My goal is to help you (developers) focus on your SaaS and your customers instead of losing time on boring configuration and integration.&lt;/p&gt;

&lt;p&gt;Get access to the most common SaaS building blocks and launch your SaaS in weeks, not in months.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1qKLlCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/nextless-react-saas-boilerplate.png" alt="Next JS SaaS Boilerplate Starter" width="720" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#landing-page-and-user-dashboard"&gt;
  &lt;/a&gt;
  Landing Page and User Dashboard
&lt;/h2&gt;

&lt;p&gt;Save time with a prebuilt landing page component written in React styled with Tailwind CSS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigation bar&lt;/li&gt;
&lt;li&gt;Hero&lt;/li&gt;
&lt;li&gt;Features&lt;/li&gt;
&lt;li&gt;Vertical features&lt;/li&gt;
&lt;li&gt;Testimonial&lt;/li&gt;
&lt;li&gt;Pricing card&lt;/li&gt;
&lt;li&gt;FAQ&lt;/li&gt;
&lt;li&gt;Call to action&lt;/li&gt;
&lt;li&gt;Footer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only thing left to you is the copywriting. Here is the example of the landing page:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dKUm8xr4PxI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;For your authenticated users, you also need to have a user dashboard:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login&lt;/li&gt;
&lt;li&gt;Sidebar&lt;/li&gt;
&lt;li&gt;Table&lt;/li&gt;
&lt;li&gt;Form with label, input, textarea, radio button, checkbox, etc.&lt;/li&gt;
&lt;li&gt;Dialog (modal)&lt;/li&gt;
&lt;li&gt;Message state&lt;/li&gt;
&lt;li&gt;Settings page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yBAZxidjW34"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Like the landing page, every component is prebuilt. So, you don't need to implement and design yourself. It'll save you several days and weeks of development. Built in a modular way, the components are easy to customize and you can easily extend them for your use-cases.&lt;/p&gt;

&lt;p&gt;No need to be a designer or hire one to build your SaaS product. Focus on the things that matter to your customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h2&gt;

&lt;p&gt;All SaaS products need authentication for their users. A way for the users to have access to their user dashboard and use the products.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqf7D1oH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/aws-cognito-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqf7D1oH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/aws-cognito-logo.png" alt="AWS Cognito authentication login" width="500" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com" rel="noopener noreferrer"&gt;React SaaS Template&lt;/a&gt; provides an authentication method out of the box with AWS Cognito, a secure and scalable identity provider. So, you don't need to implement or configure an authentication from scratch. It accepts several social sign-in methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facebook&lt;/li&gt;
&lt;li&gt;Google&lt;/li&gt;
&lt;li&gt;Apple&lt;/li&gt;
&lt;li&gt;Amazon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It also secures your cloud resources by denying unauthorized users and keeps your cost down.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#100-serverless"&gt;
  &lt;/a&gt;
  100% Serverless
&lt;/h2&gt;

&lt;p&gt;With recent development in Serverless, it's now totally possible to rely on Serverless to build a SaaS business. The pay-as-you-go pricing is perfect when you are launching your product.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tLUpU0Kf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/serverless-framework-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tLUpU0Kf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/serverless-framework-logo.png" alt="AWS Lambda Serverless framework" width="880" height="263"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When your products get some traction, Serverless removes the burden to handle the scaling. It automatically scales based on your traffic.&lt;/p&gt;

&lt;p&gt;And, the most important thing about Serverless, it reduces the infrastructure maintenance of your SaaS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No need to configure your server&lt;/li&gt;
&lt;li&gt;No need to update your server&lt;/li&gt;
&lt;li&gt;Make the security easier&lt;/li&gt;
&lt;li&gt;No need to scale your server&lt;/li&gt;
&lt;li&gt;Make your deployment faster&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You don't need to worry about server management and it frees your operation time. The perfect solution to help you focus on your products and make them grow faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serverless-database"&gt;
  &lt;/a&gt;
  Serverless database
&lt;/h2&gt;

&lt;p&gt;After making the REST API serverless, the other step is to make the database serverless. Currently, the most viable solution is DynamoDB, a fully serverless NoSQL database:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highly scalable&lt;/li&gt;
&lt;li&gt;Scale to zero&lt;/li&gt;
&lt;li&gt;Pay-as-you-go pricing&lt;/li&gt;
&lt;li&gt;No cold start&lt;/li&gt;
&lt;li&gt;Managed service&lt;/li&gt;
&lt;li&gt;Production-ready&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o3RDv2HD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/aws-dynamodb-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3RDv2HD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/aws-dynamodb-logo.png" alt="AWS DynamoDB serverless database" width="500" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For someone who has already worked with SQL, data migration is a nightmare to handle. On the opposite, Database schema in NoSQL is extremely flexible. It makes the deployment of the new version extremely easy without the need for data migration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stripe-integration"&gt;
  &lt;/a&gt;
  Stripe integration
&lt;/h2&gt;

&lt;p&gt;It's great to have a lot of users but it's even better to have paying customers for your SaaS. Accepting payment is hard and it's even harder for subscription payment used in SaaS.&lt;/p&gt;

&lt;p&gt;Setting up a recurring payment where you need to debit your customer every billing period (daily, weekly, monthly, yearly, or custom). You also need to generate and send an invoice for subscriptions. That is only the happy path, you also need to handle all the edge cases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Di7UTlQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/stripe-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Di7UTlQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/stripe-logo.png" alt="Stripe logo" width="880" height="419"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com" rel="noopener noreferrer"&gt;React SaaS&lt;/a&gt; has an integration with Stripe. All the integration has made for you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stripe checkout page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iVN9VDJm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/stripe-hosted-checkout.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVN9VDJm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/stripe-hosted-checkout.png" alt="Stripe hosted checkout page" width="880" height="560"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stripe customer portal where the customer can manage his subscriptions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97tqtWyf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/stripe-customer-portal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97tqtWyf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/stripe-customer-portal.png" alt="Stripe customer portal" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Invoice history with downloadable PDF&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rJqz3hq5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/stripe-downloadble-invoice-pdf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rJqz3hq5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/stripe-downloadble-invoice-pdf.png" alt="Stripe downloadable invoice PDF" width="531" height="699"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Receive event notification with Stripe webhook&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#clean-code-and-architecture"&gt;
  &lt;/a&gt;
  Clean code and architecture
&lt;/h2&gt;

&lt;p&gt;A boilerplate code shouldn't lose your time and energy. You don't want to spend your time restructuring and fixing the project. It's extremely important for starter code to provide high-quality code. React SaaS Boilerplate was built by following industry standards and best practices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Consistent coding standards&lt;/li&gt;
&lt;li&gt;Bulletproof architecture&lt;/li&gt;
&lt;li&gt;Readable code&lt;/li&gt;
&lt;li&gt;Clean source code&lt;/li&gt;
&lt;li&gt;Highly modular&lt;/li&gt;
&lt;li&gt;Reusable code&lt;/li&gt;
&lt;li&gt;Well-architecture&lt;/li&gt;
&lt;li&gt;Layered architecture&lt;/li&gt;
&lt;li&gt;Scalable folder structure&lt;/li&gt;
&lt;li&gt;Easy to maintain&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some code samples from Nextless JS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prebuilt landing page components in React (code sample):&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VR_6nEO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/frontend-landing-page-component.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VR_6nEO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/frontend-landing-page-component.png" alt="Prebuilt landing page components" width="731" height="685"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An example of React landing page component, a testimonial component:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TsoOhkfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-page-index.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TsoOhkfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-page-index.png" alt="Testimonial components" width="805" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frontend folder and architecture:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gAXSeqD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/frontend-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gAXSeqD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/frontend-architecture.png" alt="Next JS frontend architecture" width="269" height="953"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Backend Express JS REST API router:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pf-TL8jJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/backend-router.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pf-TL8jJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/backend-router.png" alt="REST Api backend router" width="832" height="568"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Backend Express JS controller code sample:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gb0gp_wE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/backend-crontroller.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gb0gp_wE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/backend-crontroller.png" alt="Backend controller" width="833" height="876"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Backend folder and architecture:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1GhJd9eD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/backend-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1GhJd9eD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/backend-architecture.png" alt="Backend architecture" width="326" height="922"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#form-management"&gt;
  &lt;/a&gt;
  Form management
&lt;/h2&gt;

&lt;p&gt;Almost all applications need some user input. With some basic HTML, you can easily create a form like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WILdNfii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/form-add-todo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WILdNfii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/form-add-todo.png" alt="Form add todo" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the backend side, you need to implement a validation method to verify the user input. The validation method is configured with definition and schema. Then, when an error occurs, you need to display it in the frontend:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMgGVbq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/form-error-handling.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMgGVbq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/form-error-handling.png" alt="Form error handling" width="880" height="236"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Good news! With React SaaS, everything has been set up for you. You only need to customize it for your needs. Saving you time:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;easy to use forms&lt;/li&gt;
&lt;li&gt;accessible forms&lt;/li&gt;
&lt;li&gt;no need to design forms from scratch&lt;/li&gt;
&lt;li&gt;form submission&lt;/li&gt;
&lt;li&gt;implement the validation method&lt;/li&gt;
&lt;li&gt;connect the form with the backend, the two-ways communication&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#bestinclass-developer-experience"&gt;
  &lt;/a&gt;
  Best-in-class Developer Experience
&lt;/h2&gt;

&lt;p&gt;Built by developers for developers with experience in mind. &lt;a href="https://nextlessjs.com" rel="noopener noreferrer"&gt;React SaaS Starter&lt;/a&gt; includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type checking, TypeScript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7JV9B02r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/typescript-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7JV9B02r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/typescript-logo.png" alt="TypeScript programming language logo" width="300" height="74"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linter, ESLint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HuMQAyxe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/eslint-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HuMQAyxe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/eslint-logo.png" alt="ESLint JS linter logo" width="480" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Code formatter, Prettier&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xArC6TOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/prettier-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xArC6TOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/prettier-logo.png" alt="Code formatter Prettier logo" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Git Hooks, Husky&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Everything has been perfectly configured for you to write high-quality code. You don't need to lose any seconds to make JS tooling work together. So, you can move fast on your SaaS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nzah4kh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/vscode-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nzah4kh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/vscode-logo.png" alt="VSCode logo" width="512" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The React SaaS goes beyond by providing configuration for the most used code editor VSCode: debug configuration, Settings, Task and suggested extension.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#infrastructure-as-code"&gt;
  &lt;/a&gt;
  Infrastructure as Code
&lt;/h2&gt;

&lt;p&gt;Infrastructure as Code allows developers to set up a cloud infrastructure without any manual configuration. As you know, the manual configuration has a lot of drawbacks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Error-prone&lt;/li&gt;
&lt;li&gt;Not easy to replicate for each environment&lt;/li&gt;
&lt;li&gt;Have inconsistent between environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React SaaS Template helps you deploy all your cloud infrastructure in one command. No need to become a DevOps engineer or hire one to build your SaaS.&lt;/p&gt;

&lt;p&gt;Create and deploy DynamoDB on your own AWS account:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7eGAFWkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/next-js-infrastructure-as-code.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7eGAFWkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/next-js-infrastructure-as-code.png" alt="Next JS Infrastructure as Code" width="741" height="467"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-example-and-documentation"&gt;
  &lt;/a&gt;
  Code example and documentation
&lt;/h2&gt;

&lt;p&gt;It's always good to have code examples to start a project. React SaaS Boilerplate comes up with a Todo SaaS product as a code example. A Todo app where the user can create, read, update and delete a Todo (CRUD operation).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cS7eEKcu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/nextless-todo-crud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cS7eEKcu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/nextless-todo-crud.png" alt="Nextless Todo app CRUD code example" width="720" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Documentation is provided to run the boilerplate in 10 minutes on your local computer. In 10 minutes, you'll be able to set up and run the full-stack application. After that, you are ready to go and start on what makes your SaaS unique!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h2&gt;

&lt;p&gt;If you want to make your own SaaS and to get all these features out of the box for a fast time to market, please check out &lt;a href="https://nextlessjs.com"&gt;React SaaS Boilerplate&lt;/a&gt; and focus on the core development of your SaaS.&lt;/p&gt;

&lt;p&gt;The perfect starter kit to launch your SaaS faster and better. Focus on your business, products and customers instead of losing your time to implement basic functionalities like authentication, Stripe subscription, prebuilt landing page, prebuilt dashboard page, form and error handling, CRUD operation, layered architecture, deployment, server maintenance, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1qKLlCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/nextless-react-saas-boilerplate.png" alt="Next JS SaaS Boilerplate Starter" width="720" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Get Started with MariaDB in 3 Steps</title>
      <author>Rob Hedgpeth</author>
      <pubDate>Wed, 27 Oct 2021 18:28:15 +0000</pubDate>
      <link>https://dev.to/probablyrealrob/get-started-with-mariadb-in-3-steps-jhd</link>
      <guid>https://dev.to/probablyrealrob/get-started-with-mariadb-in-3-steps-jhd</guid>
      <description>&lt;p&gt;OK, we all know that there are a ton of database options out there these days. &lt;a href="https://en.wikipedia.org/wiki/Relational_database"&gt;Relational (SQL)&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/NoSQL"&gt;NoSQL&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Distributed_SQL"&gt;Distributed SQL (NewSQL)&lt;/a&gt;. And that’s really just the tip of the iceberg. Choosing a new database is likely one of the most important architectural decisions that go into creating or integrating into a new solution or application. &lt;/p&gt;

&lt;p&gt;The reasons for choosing a database can be everything from extremely simple to pretty damn complex, but, ultimately, it all boils down to the type of data workload you’re looking to handle. But that’s not something I’m going to get into, because that’s the kind of research you can certainly go off and do on your own. &lt;/p&gt;

&lt;p&gt;Instead, in this article, I want to focus on the quickest way you can go from nothing to having a local instance of a &lt;a href="https://mariadb.com"&gt;MariaDB&lt;/a&gt; database up, running and ready to use so you can start checking things out, using a &lt;a href="https://www.docker.com/resources/what-container"&gt;Docker container&lt;/a&gt;, for yourself.&lt;/p&gt;

&lt;p&gt;OK, let’s get into it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-install-docker"&gt;
  &lt;/a&gt;
  Step 1 - Install Docker
&lt;/h2&gt;

&lt;p&gt;Now, unless you’ve been living under a rock for the past several years I'm willing to bet you’ve at least heard of &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;, or, at the very least, the concept of containerization. And, if not, no biggie check &lt;a href="https://www.docker.com/resources/what-container"&gt;this&lt;/a&gt; out if you’re curious. &lt;/p&gt;

&lt;p&gt;Either way, the good news is that using Docker on your local machine is incredibly easy. Just &lt;a href="https://www.docker.com/get-started"&gt;download and install Docker Desktop&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-start-a-mariadb-docker-container"&gt;
  &lt;/a&gt;
  Step 2 - Start a MariaDB Docker Container
&lt;/h2&gt;

&lt;p&gt;Once you’ve successfully installed Docker on your machine you’re ready to pull the MariaDB image and spin up a container (which will contain a MariaDB database instance). &lt;/p&gt;

&lt;p&gt;For this you’re going to use the &lt;a href="https://hub.docker.com/_/mariadb"&gt;Official MariaDB Docker Image&lt;/a&gt; hosted at &lt;a href="https://hub.docker.com"&gt;https://hub.docker.com&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Open up a new terminal window and execute the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 127.0.0.1:3306:3306  &lt;span class="nt"&gt;--name&lt;/span&gt; mdb &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;MARIADB_ROOT_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Password123! &lt;span class="nt"&gt;-d&lt;/span&gt; mariadb:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The previous statement will pull down the latest version of the Official MariaDB image and spin up a new container on localhost (&lt;code&gt;127.0.0.1&lt;/code&gt;), exposing port &lt;code&gt;3306&lt;/code&gt; and allow you to connect using the root &lt;code&gt;user&lt;/code&gt; with password &lt;code&gt;Password123!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt; I guess this is something like Step 2-b, but you can confirm that the docker run command has successfully pulled the MariaDB Image and spun up a container by executing docker ps, which will show you all of the containers currently running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-connect-to-mariadb"&gt;
  &lt;/a&gt;
  Step 3 - Connect to MariaDB
&lt;/h2&gt;

&lt;p&gt;Lastly, you don’t need to install anything else to start using MariaDB. While you certainly can use &lt;em&gt;other&lt;/em&gt; types of clients or tools to connect to and communicate with a MariaDB database, for this brief walkthrough you don't have to worry about any of that. Everything you need you already have. Just use the &lt;code&gt;mariadb&lt;/code&gt; command-line client that’s included within the MariaDB Docker container. &lt;/p&gt;

&lt;p&gt;Execute the following to connect to MariaDB using the command-line client.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; mdb mariadb &lt;span class="nt"&gt;--user&lt;/span&gt; root &lt;span class="nt"&gt;-pPassword123&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which should result in something like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Welcome to the MariaDB monitor.  Commands end with &lt;span class="p"&gt;;&lt;/span&gt; or &lt;span class="se"&gt;\g&lt;/span&gt;&lt;span class="nb"&gt;.&lt;/span&gt;
Your MariaDB connection &lt;span class="nb"&gt;id &lt;/span&gt;is 4
Server version: 10.6.3-MariaDB-1:10.6.3+maria~focal mariadb.org binary distribution

Copyright &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type &lt;span class="s1"&gt;'help;'&lt;/span&gt; or &lt;span class="s1"&gt;'\h'&lt;/span&gt; &lt;span class="k"&gt;for &lt;/span&gt;help. Type &lt;span class="s1"&gt;'\c'&lt;/span&gt; to clear the current input statement.

MariaDB &lt;span class="o"&gt;[(&lt;/span&gt;none&lt;span class="o"&gt;)]&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s it! That’s all you need to connect to and start using (querying) MariaDB.&lt;/p&gt;

&lt;p&gt;Happy coding, friends!&lt;/p&gt;

</description>
      <category>mariadb</category>
      <category>docker</category>
      <category>beginners</category>
      <category>database</category>
    </item>
    <item>
      <title>Functions to be called only once in C++</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 27 Oct 2021 18:27:32 +0000</pubDate>
      <link>https://dev.to/sandordargo/functions-to-be-called-only-once-in-c-5al1</link>
      <guid>https://dev.to/sandordargo/functions-to-be-called-only-once-in-c-5al1</guid>
      <description>&lt;p&gt;In this article, we are going to discuss how we can make sure member functions are called no more than once while their enclosing object is alive.&lt;/p&gt;

&lt;p&gt;There can be different motivations for having such functions. Certain operations might be very costly, so we don't want to recompute the results several times, or maybe logically it doesn't make sense to call a function twice.&lt;/p&gt;

&lt;p&gt;As we're going to see, the different motivations can lead to different solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#very-costly-operations"&gt;
  &lt;/a&gt;
  Very costly operations
&lt;/h2&gt;

&lt;p&gt;Imagine that a function has something very costly to perform. Maybe it has to retrieve something from the database, or from the network, maybe simply it's just very CPU intensive and we want to avoid doing that work twice.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cache-the-data"&gt;
  &lt;/a&gt;
  Cache the data
&lt;/h3&gt;

&lt;p&gt;A simple and clean solution can be that when you call the costly function the first time, it saves the data in a private member. For later calls, the result is simply retrieved from that member instead of repeating the computation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;computeCostlyResult&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m_result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
  &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;m_result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this simple example, we default initialize &lt;code&gt;m_result&lt;/code&gt; of type &lt;code&gt;CostlyResult&lt;/code&gt; which has the means to check whether it already stores the outcome of the costly operations. For practical reasons, it's called &lt;code&gt;CostlyResult::empty&lt;/code&gt; but there can be other ways to make such checks. You might even use a helper member to track if the function has been already called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
  &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;m_result_initialized&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;computeCostlyResult&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;m_result_initialized&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m_result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
  &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;m_result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;m_result_initialized&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The goal is clearly to avoid the computation being done twice. If the object lives long and the result might change, you might want to provide means to trigger a refresh of the data. As long as it doesn't happen automatically but the user of the class had to pass in a special flag or call a function, it's okay. The computation won't be triggered accidentally.&lt;/p&gt;

&lt;p&gt;But what if you really want to restrict the number of calls and not just the computations?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#have-a-counter"&gt;
  &lt;/a&gt;
  Have a counter
&lt;/h3&gt;

&lt;p&gt;Instead of checking whether the &lt;code&gt;m_result&lt;/code&gt; member was initialized, we can have a counter that counts how many times &lt;code&gt;getCostly&lt;/code&gt; was called.&lt;/p&gt;

&lt;p&gt;We can set a threshold and if there are more calls than that, we can raise an error like in the below example. Note that if the threshold is only one, meaning that the function can be called only once, instead of using a counter, we can fall back to a &lt;code&gt;bool&lt;/code&gt; that is set after the first call - like in the previous example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;stdexcept&amp;gt;
&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CostlyResult&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number_of_costly_calls&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;runtime_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MyClass::getCostly() can be called only once"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;number_of_costly_calls&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;computeCostlyResult&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
  &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;computeCostlyResult&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;number_of_costly_calls&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;MyClass&lt;/span&gt; &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// ERROR THROWN&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, you can also see that we called &lt;code&gt;getCostly()&lt;/code&gt;, yet we didn't store the result. That's probably a mistake and a waste of resources. Since C++17 we shall use &lt;code&gt;[[nodiscard]]&lt;/code&gt; to have a compile-time warning in such situations and change &lt;code&gt;getCostly&lt;/code&gt; as such:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;nodiscard&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="nf"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's jump to our other main motivation to avoid multiple calls to the same functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multiple-calls-are-illogical"&gt;
  &lt;/a&gt;
  Multiple calls are illogical
&lt;/h2&gt;

&lt;p&gt;What can we do if it logically doesn't make sense to call a function more than once?&lt;/p&gt;

&lt;p&gt;For sure, caching is not needed, we want to completely avoid multiple calls.&lt;/p&gt;

&lt;p&gt;Then we have to ask ourselves a question. Will the call to the constrained function be the very last call on the object?&lt;/p&gt;

&lt;p&gt;If no...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implement-a-flag"&gt;
  &lt;/a&gt;
  Implement a flag
&lt;/h3&gt;

&lt;p&gt;If the given function call is not the last one on the object, we can take the idea of the counter from the previous sections and implement it strictly with a flag, and of course with the &lt;code&gt;[[nodiscard]]&lt;/code&gt; attribute in case it returns something.&lt;/p&gt;

&lt;p&gt;Let's also have a runtime error in case we go against the rule we set:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;stdexcept&amp;gt;
&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CostlyResult&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;nodiscard&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getCostly_already_called&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;runtime_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MyClass::getCostly() can be called only once"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;getCostly_already_called&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;computeCostlyResult&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
  &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;computeCostlyResult&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;getCostly_already_called&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;MyClass&lt;/span&gt; &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;//r = mc.getCostly();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#destructive-separation-move-away-and-call"&gt;
  &lt;/a&gt;
  Destructive separation: move away and call
&lt;/h3&gt;

&lt;p&gt;This solution is borrowed by &lt;a href="https://youtu.be/nLSm3Haxz0I?t=2523"&gt;Matt Godbolt and his talk at C++ On Sea 2020&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can go this way if the function call should be the last one on the object. After this call, our object won't - necessarily - be in a usable shape.&lt;/p&gt;

&lt;p&gt;The first thing to do is to add a &lt;code&gt;[[nodiscard]]&lt;/code&gt; attribute if it has any return type so that people don't accidentally forget to save the results in a variable.&lt;/p&gt;

&lt;p&gt;The other step is something more interesting and at the first sight even esoteric.&lt;/p&gt;

&lt;p&gt;We have to add the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; qualifier to the function declaration - something I wrote about &lt;a href="https://www.sandordargo.com/blog/2018/11/25/override-r-and-l0-values#use--or--for-function-overloading"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This means that the function can only be called if the object:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;is temporary&lt;/li&gt;
&lt;li&gt;is about to fall out of scope&lt;/li&gt;
&lt;li&gt;has been moved from&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In other words, the object is gone after the call.&lt;/p&gt;

&lt;p&gt;Let's have a look at an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CostlyResult&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;nodiscard&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;MyClass&lt;/span&gt; &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The compiler says now that we are ignoring the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; qualifier. We even got a compile-time check so that it should be called only once!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;main.cpp: In function 'int main()':
main.cpp:16:24: error: passing 'MyClass' as 'this' argument discards qualifiers [-fpermissive]
   16 |   auto r = mc.getCostly();
      |            ~~~~~~~~~~~~^~
main.cpp:8:30: note:   in call to 'CostlyResult MyClass::getCostly() &amp;amp;&amp;amp;'
    8 |   [[nodiscard]] CostlyResult getCostly() &amp;amp;&amp;amp; {
      |                              ^~~~~~~~~

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not so fast. The easiest way to get rid of the error message is to move away from &lt;code&gt;mc&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can do the same thing again!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;r2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, you should not do this, but it's possible and the compiler will not shout. At least, when you see the first line, the &lt;code&gt;std::move&lt;/code&gt; should ring a bell that you shouldn't use that object anymore. But nothing prevents you.&lt;/p&gt;

&lt;p&gt;A better way would be to wrap the call in a function and have the call at the last statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;CostlyResult&lt;/span&gt; &lt;span class="nf"&gt;getThatCostly&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;MyClass&lt;/span&gt; &lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;getCostly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that in the video, std::move is not used in this case, (but with the compiler I use,) it doesn't work without the &lt;code&gt;move&lt;/code&gt;. Anyway, it's the last line, so for sure, you're not going to reuse the object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we've seen different solutions to prevent functions to be called more than once, or at least to trigger their computations more than once.&lt;/p&gt;

&lt;p&gt;Depending on the motivations, there are different solutions, such as caching, throwing exceptions or using function overloads.&lt;/p&gt;

&lt;p&gt;Do you have other solutions in mind?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cpp</category>
      <category>functions</category>
      <category>oop</category>
    </item>
    <item>
      <title>Check Out My Hubpages Profile</title>
      <author>Saleh-Mubashar</author>
      <pubDate>Wed, 27 Oct 2021 18:26:57 +0000</pubDate>
      <link>https://dev.to/salehmubashar/check-out-my-hubpages-profile-klp</link>
      <guid>https://dev.to/salehmubashar/check-out-my-hubpages-profile-klp</guid>
      <description>&lt;p&gt;Hi guys&lt;br&gt;
Along with publishing here, I also write articles at [Hubpages](&lt;a href="http://hubpages.com/_dev/user/new"&gt;http://hubpages.com/_dev/user/new&lt;/a&gt;.&lt;br&gt;
I would really appreciate if you follow me there.&lt;br&gt;
I will continue to post here too, but many useful articles will be posted over there too.&lt;br&gt;
This is my &lt;a href="https://hubpages.com/@salehmubashar"&gt;profile&lt;/a&gt;&lt;br&gt;
You can signup using the below link:&lt;br&gt;
&lt;a href="http://hubpages.com/_dev/user/new"&gt;SignUp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks you soooo much !&lt;br&gt;
Bye for now :)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Java Notes #3</title>
      <author>DH Kim</author>
      <pubDate>Wed, 27 Oct 2021 18:19:33 +0000</pubDate>
      <link>https://dev.to/icncsx/java-notes-3-7ah</link>
      <guid>https://dev.to/icncsx/java-notes-3-7ah</guid>
      <description>&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Java is a strongly typed language. You must declare the type of a variable, and variables must hold data of the correct type.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To declare a variable is to declare the type of the variable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To assign is to assign a value to a variable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Initialization is the assignment of a value to a variable at the time of declaration.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Reusable Parallax Effect With CSS Variables</title>
      <author>Sarmun Bustillo</author>
      <pubDate>Wed, 27 Oct 2021 18:07:42 +0000</pubDate>
      <link>https://dev.to/sarmunbustillo/reusable-parallax-effect-with-css-variables-79d</link>
      <guid>https://dev.to/sarmunbustillo/reusable-parallax-effect-with-css-variables-79d</guid>
      <description>&lt;p&gt;CSS variables offers us a very neat way to share information between CSS and JavaScript. The perk of connecting these two with CSS variables is that we can access them and modify them in CSS and in JS at any time.&lt;/p&gt;

&lt;p&gt;I am using the parallax effect as an example, but there are so many things this could be used for. The parallax effect in a nutshell is where the background of a website scrolls at a slower pace than the whatever is on foreground. Let's build a one, but one that can be easily extended. &lt;/p&gt;

&lt;p&gt;We will use this cards for our example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CT-yhnHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqrxx88gta16lk9tcang.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CT-yhnHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqrxx88gta16lk9tcang.png" alt="cards" width="880" height="352"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's first take care of the CSS part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.card {
    --translate-y: 0px;
    --translate-x: 0px;
    transform: translate(var(--translate-x), var(--translate-y));

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, we created two CSS variables for horizontal and vertical movement and we set them to our desired element. Let's move on to JavaScript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-the-function"&gt;
  &lt;/a&gt;
  Creating the function
&lt;/h3&gt;

&lt;p&gt;For our function we will need some parameters: &lt;strong&gt;the element&lt;/strong&gt;, &lt;strong&gt;the direction&lt;/strong&gt; to be translated, either horizontal or vertical, &lt;strong&gt;the speed&lt;/strong&gt;, and if the value to be translated is a &lt;strong&gt;negative number&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;parallax = (element, direction, speed, negative) =&amp;gt; {}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The amount to be translated depends on how much the page has been scrolled. We can access this amount in the &lt;strong&gt;window's pageYOffset&lt;/strong&gt;, but to make it look smoother and slower we need to reduce this amount a bit and here is where our speed comes into play. It is also a good place to use our &lt;strong&gt;negative&lt;/strong&gt; parameter and decide whether it is a negative number or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let translate = window.pageYOffset * speed * (negative ? -1 : 1);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we only need to update our CSS variable to our desired direction and our computed amount.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;element.style.setProperty(`--translate-${direction}`, `${translate}px`);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But what if we also want to use this function on more than one element at the same time?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;parallax = (element, direction , speed , negative) =&amp;gt; {
    let translate = window.pageYOffset * speed * (negative ? -1 : 1);

    if (element.length &amp;gt; 1) {
        element.forEach((el) =&amp;gt; {
            el.style.setProperty(`--translate-${direction}`, `${translate}px`);
        });
    } else {
        element.style.setProperty(`--translate-${direction}`, `${translate}px`);
    }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly we only need to listen when the page gets scrolled and call our function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const firstCard = document.querySelector('.cards-parallax .card');
const lastCard = document.querySelector('.cards-parallax .card:last-of-type');
const cards = document.querySelectorAll('.cards-parallax .card');
window.addEventListener('scroll', () =&amp;gt; {
    parallax(firstCard,'y', 0.4, true);
    parallax(lastCard,'x', 0.5, false);
    parallax(cards,'x', 0.2, false);

});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The cool thing is that you could follow the same technique for many other properties like scale, rotate, opacity even colors and may more.&lt;/p&gt;

&lt;p&gt;Here is a &lt;a href="https://codepen.io/sarmunbustillo/pen/bGrRbRZ"&gt;Demo&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Build iOS apps from the command line using xcodebuild</title>
      <author>Tarik Dahic</author>
      <pubDate>Wed, 27 Oct 2021 18:06:46 +0000</pubDate>
      <link>https://dev.to/daholino/build-ios-apps-from-the-command-line-using-xcodebuild-47i2</link>
      <guid>https://dev.to/daholino/build-ios-apps-from-the-command-line-using-xcodebuild-47i2</guid>
      <description>&lt;p&gt;At some point in your iOS development career you will want to automate app building and distribution when there are new changes on your version control system. At the company I work for we did just that - whenever a pull request is merged our CI/CD system is notified and it starts to build and test the app with the newest changes. The successful builds are then deployed to QAs and they are ready for manual testing and verification. This can save you a lot of time in your development workflow. In this article I will go through the process on how to create &lt;strong&gt;.ipa&lt;/strong&gt; file from your project that is ready for testing or distribution using only terminal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h2&gt;

&lt;p&gt;You will need to have &lt;em&gt;Xcode Command Line Tools&lt;/em&gt; installed on the machine that will be building the app. If you already have Xcode it is very likely that you have &lt;em&gt;Xcode Command Line Tools&lt;/em&gt; installed. Specifically, we will be using the &lt;strong&gt;xcodebuild&lt;/strong&gt; tool . To see if you have it installed you can run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcodebuild &lt;span class="nt"&gt;-help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have Xcode and don’t have this tool you can install it by running this in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcode-select &lt;span class="nt"&gt;--install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or you can download the command line tools from &lt;a href="https://developer.apple.com/download/all/"&gt;developer.apple.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building"&gt;
  &lt;/a&gt;
  Building
&lt;/h2&gt;

&lt;p&gt;Building iOS apps is a two step process. First we compile and link the compiled code using &lt;strong&gt;archive&lt;/strong&gt; step and then we &lt;strong&gt;export&lt;/strong&gt; and sign that archive to create the &lt;em&gt;.ipa&lt;/em&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S8QWspXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://tarikdahic.com/images/xcodebuild-build-process.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S8QWspXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://tarikdahic.com/images/xcodebuild-build-process.png" alt="Build process" width="880" height="128"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#choosing-what-to-build"&gt;
  &lt;/a&gt;
  Choosing what to build
&lt;/h4&gt;

&lt;p&gt;Open the terminal and navigate to the root of the folder of your project. We need to know what will we build so let’s see what options we have:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# If you are using Xcode project:&lt;/span&gt;
xcodebuild &lt;span class="nt"&gt;-list&lt;/span&gt; &lt;span class="nt"&gt;-project&lt;/span&gt; &amp;lt;project-name&amp;gt;.xcodeproj
&lt;span class="c"&gt;# or if you are using Xcode workspace:&lt;/span&gt;
xcodebuild &lt;span class="nt"&gt;-list&lt;/span&gt; &lt;span class="nt"&gt;-workspace&lt;/span&gt; &amp;lt;project-name&amp;gt;.xcworkspace
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should get information about available targets, build configurations and schemes. Schemes contain data about which targets and configurations to use when building so remember what scheme you want to use.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#clean"&gt;
  &lt;/a&gt;
  Clean
&lt;/h4&gt;

&lt;p&gt;Before building anything that will be distributed internally or externally I always like to perform &lt;em&gt;clean&lt;/em&gt; operation. You can do that via &lt;em&gt;xcodebuild&lt;/em&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcodebuild clean
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#archive"&gt;
  &lt;/a&gt;
  Archive
&lt;/h4&gt;

&lt;p&gt;The first step in the actual building is to create an app &lt;strong&gt;archive&lt;/strong&gt;. It will compile your code and sign it with you development certificate. This step is analogous to &lt;em&gt;Archiving&lt;/em&gt; via Xcode. Xcode generated archives can be accessed in Xcode’s &lt;em&gt;Organizer&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcodebuild archive &lt;span class="nt"&gt;-scheme&lt;/span&gt; &amp;lt;scheme-that-you-want-to-use&amp;gt; &lt;span class="nt"&gt;-sdk&lt;/span&gt; iphoneos &lt;span class="nt"&gt;-allowProvisioningUpdates&lt;/span&gt; &lt;span class="nt"&gt;-archivePath&lt;/span&gt; &amp;lt;path-and-name-for-archive&amp;gt;.xcarchive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above I included the flag &lt;strong&gt;-allowProvisioningUpdates&lt;/strong&gt; and this will generate or modify provisioning profiles if you use &lt;em&gt;Automatic signing&lt;/em&gt;. This option is not very reliable and in most of my apps I’ve downloaded and imported manually provisioning profiles or certificates to Keychain.&lt;/p&gt;

&lt;p&gt;Documentation for &lt;em&gt;allowProvisioningUpdates&lt;/em&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Allow xcodebuild to communicate with the Apple Developer website. For automatically signed targets, xcodebuild will create and update profiles, app IDs, and certificates. For manually signed targets, xcodebuild will download missing or updated provisioning profiles. Requires a developer account to have been added in Xcode’s Accounts preference pane or an App Store Connect authentication key to be specified via the -authenticationKeyPath, -authenticationKeyID, and -authenticationKeyIssuerID parameters.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Because I am building for iOS I provided &lt;code&gt;-sdk iphoneos&lt;/code&gt; and if you want to see what other sdks are available or if you want to build your app for another platform you can use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcodebuild &lt;span class="nt"&gt;-showsdks&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#export"&gt;
  &lt;/a&gt;
  Export
&lt;/h4&gt;

&lt;p&gt;In export step we need to decide how are we gonna distribute the &lt;strong&gt;.ipa&lt;/strong&gt; file that we will generate and we need to sign it with &lt;strong&gt;distribution certificate&lt;/strong&gt;. If you already archived and exported the app from your computer using Xcode you have the distribution certificate in Keychain and you will be able to complete this step. If you don’t have the distribution certificate you can generate a new one or you can export existing one from your development computer and import it into the computer that will be doing the export step.&lt;/p&gt;

&lt;p&gt;We can run the export operation with the command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcodebuild &lt;span class="nt"&gt;-exportArchive&lt;/span&gt; &lt;span class="nt"&gt;-archivePath&lt;/span&gt; &amp;lt;path-and-name-for-archive-from-the-previous-step&amp;gt;.xcarchive &lt;span class="nt"&gt;-exportOptionsPlist&lt;/span&gt; exportOptions.plist &lt;span class="nt"&gt;-exportPath&lt;/span&gt; &amp;lt;path-where-ipa-file-will-be-saved&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The export options &lt;em&gt;plist&lt;/em&gt; file plays an important role in this step. It is an xml formatted file that contains all the necessary information for &lt;code&gt;xcodebuild&lt;/code&gt; so that the &lt;em&gt;.ipa&lt;/em&gt; file can be generated.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#export-options"&gt;
  &lt;/a&gt;
  Export options
&lt;/h5&gt;

&lt;p&gt;If you don’t know how to generate your export options plist file you can see how Xcode does it for your app. For example, archive the app inside Xcode and then proceed with exporting it from the Xcode Organizer. Choose &lt;code&gt;Ad-Hoc&lt;/code&gt; distribution and export it wherever you like. Navigate to the folder where your app &lt;em&gt;.ipa&lt;/em&gt; file was exported and in it you will find the &lt;strong&gt;ExportOptions.plist&lt;/strong&gt; file that Xcode internally generated. This could be a great starting point for manually building your apps because we can use that file for builds from command line.&lt;/p&gt;

&lt;p&gt;This is how the export options file looked for one of my apps:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;plist&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;compileBitcode&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;destination&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;export&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;method&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;ad-hoc&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;signingStyle&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;automatic&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;stripSwiftSymbols&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;teamID&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;YOUR_TEAM_ID&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;thinning&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;lt;&lt;/span&gt;none&lt;span class="ni"&gt;&amp;amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- If you need to provide provisioning profiles you can do it like this: --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;provisioningProfiles&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;APP_IDENTIFIER&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Ad Hoc Distribution&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- I didn't need to provide provisioning profiles for this app 
         because its signing style is set to automatic --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a lot of more options which you can find by running &lt;code&gt;xcodebuild -help&lt;/code&gt;.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#export-method"&gt;
  &lt;/a&gt;
  Export method
&lt;/h5&gt;

&lt;p&gt;Documentation for export method from &lt;code&gt;xcodebuild&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Describes how Xcode should export the archive. Available options: app-store, validation, ad-hoc, package, enterprise, development, developer-id, and mac-application. The list of options varies based on the type of archive. Defaults to development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mostly used ones for iOS are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;app-store:&lt;/strong&gt; Generates an &lt;em&gt;.ipa&lt;/em&gt; signed with your distribution certificate that is ready for production or deploying to TestFlight.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ad-hoc:&lt;/strong&gt; Generates an &lt;em&gt;.ipa&lt;/em&gt; signed with Ad-Hoc distribution certificate which will enable users that have their device identifiers registered in your Developer portal to install the app.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;enterprise:&lt;/strong&gt; Generates an &lt;em&gt;.ipa&lt;/em&gt; signed with your Enterprise Distribution certificate which will enable you to distribute the app in your organisation. For this option you need to have Enterprise Apple developer account.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;development:&lt;/strong&gt; Generates an &lt;em&gt;.ipa&lt;/em&gt; signed with your Development certificate which will enable your account members to install and use the app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the company I work for we use &lt;code&gt;Ad-Hoc&lt;/code&gt; export method for distributing apps to our QAs and we use &lt;code&gt;enterprise&lt;/code&gt; export method for sending custom builds with debug options so that we can resolve tricky issues.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#building-with-different-versions-of-xcode"&gt;
  &lt;/a&gt;
  Building with different versions of Xcode
&lt;/h4&gt;

&lt;p&gt;In some cases we need to build apps with different version of Xcode. This might happen when a new Xcode with new iOS version and SDK is announced but there are some breaking changes that will take some time to fix. To build the app with an older Xcode version we need to change what Xcode our command line tool uses.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To see the current Xcode path we can enter this command:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcode-select &lt;span class="nt"&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To change the path to custom version of Xcode we can enter this command:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcode-select &lt;span class="nt"&gt;-switch&lt;/span&gt; &amp;lt;path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;​ where &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is the path to &lt;code&gt;Xcode.app&lt;/code&gt; package.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you want to verify that correct version is being used by command line tool you can use this command:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcodebuild &lt;span class="nt"&gt;-version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#issues-that-can-happen"&gt;
  &lt;/a&gt;
  Issues that can happen
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;There might be an error with unverified &lt;em&gt;.framework&lt;/em&gt; files and to fix this issue, this command should be entered before the build process:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;spctl &lt;span class="nt"&gt;--master-disable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deploying-and-installing"&gt;
  &lt;/a&gt;
  Deploying and installing
&lt;/h2&gt;

&lt;p&gt;Now that you have the &lt;em&gt;.ipa&lt;/em&gt; file, you can upload it to App Store for production and TestFlight or you can distribute it to your organization or QAs.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#uploading-to-app-store"&gt;
  &lt;/a&gt;
  Uploading to App Store
&lt;/h5&gt;

&lt;p&gt;You can upload the generated &lt;em&gt;.ipa&lt;/em&gt; file to App Store from terminal or using the &lt;a href="https://apps.apple.com/ba/app/transporter/id1450874784?mt=12"&gt;Transporter&lt;/a&gt;, an app from Apple that is made for uploading builds.&lt;/p&gt;

&lt;p&gt;Uploading from the command line can be done using &lt;code&gt;xcrun altool&lt;/code&gt;. To read more about it you can run &lt;code&gt;man altool&lt;/code&gt; and get the manual for using it. Example for uploading the app to the App Store using this tool coud look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xcrun altool &lt;span class="nt"&gt;--upload-app&lt;/span&gt; &lt;span class="nt"&gt;--type&lt;/span&gt; ios &lt;span class="nt"&gt;--file&lt;/span&gt; &amp;lt;path-to-your-package-ipa&amp;gt; &lt;span class="nt"&gt;--username&lt;/span&gt; &amp;lt;user-name&amp;gt; &lt;span class="nt"&gt;--password&lt;/span&gt; &amp;lt;app-specific-password&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to provide the &lt;code&gt;altool&lt;/code&gt; with &lt;strong&gt;username&lt;/strong&gt; and &lt;strong&gt;app specific password&lt;/strong&gt;. The username is your Apple ID and app specific password can be generated in &lt;em&gt;App Store Connect&lt;/em&gt; for this app to authorize it.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#installing-to-devices"&gt;
  &lt;/a&gt;
  Installing to devices
&lt;/h5&gt;

&lt;p&gt;This procedure depends on the operating system that the person who wants to install the app is using. The prerequisite for this step is to connect your iOS device to the computer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;macOS users can use &lt;a href="https://apps.apple.com/us/app/apple-configurator-2/id1037126344?mt=12"&gt;Apple Configurator 2&lt;/a&gt; which is an app from Apple. This is my preferred way of installing the apps via macOS.&lt;/li&gt;
&lt;li&gt;Linux users can use &lt;a href="https://github.com/libimobiledevice/ideviceinstaller"&gt;ideviceinstaller&lt;/a&gt; which I tested and it worked great.&lt;/li&gt;
&lt;li&gt;Windows users can use &lt;a href="https://www.quamotion.mobi/docs/imobiledevice/"&gt;iMobileDevice&lt;/a&gt; builds for Windows. I haven’t tested this approach but after researching it a bit it seems to work good.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#distributing-to-your-organisation"&gt;
  &lt;/a&gt;
  Distributing to your organisation
&lt;/h5&gt;

&lt;p&gt;If you have the Enterprise Apple Developer account the best way to distribute the apps is by using the manifest file that Xcode can generate for you when you export the app via Xcode. You can use that manifest file to host the &lt;em&gt;.ipa&lt;/em&gt; on some web server and allow the users of your organisation OTA updates.&lt;/p&gt;

&lt;p&gt;Manifest can also be generated when you use &lt;code&gt;xcodebuild&lt;/code&gt;. This is what the documentation says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;manifest : Dictionary&lt;/p&gt;

&lt;p&gt;For non-App Store exports, users can download your app over the web by opening your distribution manifest file in a web browser. To generate a distribution manifest, the value of this key should be a dictionary with three sub-keys: appURL, displayImageURL, fullSizeImageURL. The additional sub-key assetPackManifestURL is required when using on-demand resources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a really great way to ease the app installation for enterprise users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Although you might never need to build your apps manually from the command line because there are great tools like &lt;a href="https://fastlane.tools/"&gt;fastlane&lt;/a&gt; and &lt;a href="https://www.bitrise.io/"&gt;bitrise&lt;/a&gt; it will be very beneficial to understand what happens &lt;em&gt;under the hood&lt;/em&gt;. When things go wrong you will have the knowledge to fix the issues that happen by automating app building.&lt;/p&gt;

&lt;p&gt;By knowing this you can even create your own CI/CD tool. Add a &lt;code&gt;git hook&lt;/code&gt; to run tests and builds for your app in a script that contains the contents of this post, expose the generated &lt;em&gt;.ipa&lt;/em&gt; file via some web server and you have a great in-house solution!&lt;/p&gt;

&lt;p&gt;I hope that this article has helped you to understand how the build process for iOS apps work. If I forgot to add something or made a mistake somewhere please let me know in the comments!&lt;/p&gt;

</description>
      <category>ios</category>
      <category>xcode</category>
      <category>automation</category>
      <category>tools</category>
    </item>
    <item>
      <title>10 reasons why you should use Typescript</title>
      <author>Anjan Shomooder</author>
      <pubDate>Wed, 27 Oct 2021 17:40:08 +0000</pubDate>
      <link>https://dev.to/thatanjan/10-reasons-why-you-should-use-typescript-3h9h</link>
      <guid>https://dev.to/thatanjan/10-reasons-why-you-should-use-typescript-3h9h</guid>
      <description>&lt;h1&gt;
  &lt;a href="#why-should-you-use-typescript"&gt;
  &lt;/a&gt;
  Why should you use Typescript?
&lt;/h1&gt;

&lt;p&gt;Simple. It solves your problem. Let's see.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type checking: This is why typescript really exists. It adds type checking over javascript. It stops you to write stupid code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ey0fsPbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2vqw6pu59bp1zs1mcmy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ey0fsPbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2vqw6pu59bp1zs1mcmy.png" alt="Alt Text" width="493" height="694"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addNums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;u003e&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; should be numbers. But you stupidly pass strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;addNums&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;12&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We don't want this to happen. It was a stupid example. But if you are working on a bigger project, this kind of bug can happen easily. You waste hours and hours to fix the code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2MsrFk6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvswszftaehk1s2zkwqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2MsrFk6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvswszftaehk1s2zkwqk.png" alt="Alt Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is where typescript rescues us with type checking.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addNums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;u003e&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you pass string it will give you an error so that you can fix it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Gives error at compile time instead of runtime: Instead of your code giving the error at code run time, typescript will throw you compile error.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Object oriented programming: Typescript allow you to use object-oriented programming concepts very easily. Like class, interface, inheritance, and so on.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Predictable Code: If you have type checking, then you know where to put what type of data. And which code will return which type of output. You can predict the code and it is very important&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Great Intellisense: You will have far better IntelliSense with Typescript than JavaScript. If you don't believe me, try it out.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Write Next-generation code: Typescript allow you to write next generation code. It will compile down your code to older versions so that your code stays compatible with older browsers and javascript runtime.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Absolute import and alias: You can use absolute import and import aliases with typescript. They are super helpful.&lt;br&gt;
In case if you don't understand the absolute import.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I4CG_cu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/400gedk393xdn0h631ql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I4CG_cu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/400gedk393xdn0h631ql.png" alt="Alt Text" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to understand: Typescript makes your code a lot easier to read and understand. Because you know what variable is which type and where to use what.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By the way, this blog is originally published on &lt;a href="https://www.culescoding.space/blog/10-reasons-why-you-should-use-typescript"&gt;cules coding website.&lt;/a&gt;. I would be glad if you give it a visit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WQTm43Yw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dottlzmq9fs3dtr1snvo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WQTm43Yw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dottlzmq9fs3dtr1snvo.png" alt="Image description" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Support with most libraries: Most of the third-party libraries has typescript support.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Great community: Typescript has a huge community. It is so much popular that most developer uses typescript over JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and the list goes on and on........&lt;/p&gt;

&lt;p&gt;There are a lot more things that are available on the typescript. But I believe they are enough to convince you to use typescript.&lt;/p&gt;

&lt;p&gt;So,&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#will-you-use-typescript-after-reading-this-blog"&gt;
  &lt;/a&gt;
  Will you use Typescript after reading this blog?
&lt;/h3&gt;

&lt;p&gt;Also if you use typescript what feature do you like most about it?&lt;/p&gt;

&lt;p&gt;Please let me know in the comments section. I would love to hear from you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#shameless-plug"&gt;
  &lt;/a&gt;
  Shameless Plug
&lt;/h2&gt;

&lt;p&gt;I have made a video about how to build a carousel postcard with React, Material-UI, and Swiper.js.&lt;br&gt;
If you are interested you can check the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can also demo the application form &lt;a href="https://insta-carousel-demo.vercel.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" alt="Screenshot of Insta Carousel" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please like and subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;. It motivates me to create more content like this.&lt;/p&gt;

&lt;p&gt;If you have any questions, please comment down below.&lt;br&gt;
You can reach out to me on social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
.&lt;br&gt;
Stay safe. Goodbye.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#why-do-i-do-what-i-do"&gt;
  &lt;/a&gt;
  Why do I do what I do?
&lt;/h4&gt;

&lt;p&gt;The Internet has revolutionized our life. I want to make the internet more beautiful and useful.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-do-i-do"&gt;
  &lt;/a&gt;
  What do I do?
&lt;/h4&gt;

&lt;p&gt;I ended up being a full-stack software engineer.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-can-i-do"&gt;
  &lt;/a&gt;
  What can I do?
&lt;/h4&gt;

&lt;p&gt;I can develop complex full-stack web applications like social media applications or e-commerce sites.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-have-i-done"&gt;
  &lt;/a&gt;
  What have I done?
&lt;/h4&gt;

&lt;p&gt;I have developed a social media application called &lt;a href="https://con-fession.vercel.app/"&gt;Confession&lt;/a&gt;. The goal of this application is to help people overcome their imposter syndrome by sharing our failure stories.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" alt="Alt Text" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also love to share my knowledge. So, I run a youtube channel called &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt; where I teach people full-stack web development, data structure algorithms, and many more. So, Subscribe to Cules Coding so that you don't miss the cool stuff.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#want-to-work-with-me"&gt;
  &lt;/a&gt;
  Want to work with me?
&lt;/h2&gt;

&lt;p&gt;I am looking for a team where I can show my ambition and passion and produce great value for them.&lt;br&gt;
Contact me through my email or any social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
. I would be happy to have a touch with you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contacts"&gt;
  &lt;/a&gt;
  Contacts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Email: &lt;a href="mailto:thatanjan@gmail.com"&gt;thatanjan@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;portfolio: &lt;a href="https://thatanjan.me/"&gt;anjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="https://www.facebook.com/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blogs you might want to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/setup-eslint-prettier-with-typescript-and-react"&gt; Eslint, prettier setup with TypeScript and react &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-client-side-rendering"&gt;What is Client-Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-server-side-rendering"&gt;What is Server Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-tree-data-structure"&gt;Everything you need to know about tree data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/13-reasons-why-you-should-use-Nextjs"&gt;13 reasons why you should use Nextjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos might you might want to watch:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rSa8sUC8m_4"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-n0mrssDiw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Be_C_Op8Tx8"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KYLBb1W1ZBA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>How to Install ReactJS on MacOS?</title>
      <author>Code_Jedi</author>
      <pubDate>Wed, 27 Oct 2021 17:29:54 +0000</pubDate>
      <link>https://dev.to/code_jedi/how-to-install-reactjs-on-macos-4hio</link>
      <guid>https://dev.to/code_jedi/how-to-install-reactjs-on-macos-4hio</guid>
      <description>&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;ReactJS&lt;/a&gt; is a free and open-source front-end JavaScript library created by Facebook in 2013. ReactJS is a User Interface (UI) library, and it is used for building and manipulating UI components.&lt;br&gt;
In this article, I will be walking you through the full ReactJS installation process on MacOS in detail. I will be covering:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;NodeJS and NPM installation.&lt;/li&gt;
&lt;li&gt;ReactJS library installation.&lt;/li&gt;
&lt;li&gt;Creating a ReactJS project.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#nodejs-and-npm"&gt;
  &lt;/a&gt;
  NodeJS and NPM:
&lt;/h2&gt;

&lt;p&gt;In order to install ReactJS on MacOS, you must first have NodeJS and NPM installed. NodeJS is a JavaScript runtime which makes it possible to run JavaScript outside of the browser. NPM(node package manager) is used to install libraries such as ReactJS on the command line.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installing-nodejs-amp-npm"&gt;
  &lt;/a&gt;
  Installing Nodejs &amp;amp; NPM:
&lt;/h3&gt;

&lt;p&gt;The only way you can install NodeJS is through their &lt;a href="https://nodejs.org/"&gt;official website&lt;/a&gt;. Installing NodeJS will also automatically download NPM on your machine. You can find their NodeJS downloads section &lt;a href="https://nodejs.org/download/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nxzaYTyk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5c5310ya9zbtin2yul6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nxzaYTyk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5c5310ya9zbtin2yul6.png" alt="Download for MacOS" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you've downloaded NodeJS through their website, you should find the downloaded ".pkg" file inside of your downloads folder. Simply open this ".pkg" file by double-clicking on it and you will be prompted with a pop-up containing info about the NodeJS and NPM installation process.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QaTxP6YW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5pe5px8e72fud55os0z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QaTxP6YW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5pe5px8e72fud55os0z.png" alt="Pop-up" width="880" height="637"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simply go through the next sections in this pop-up, and you will be prompted with this message once you get to the "Installation Type" section:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M3xc4SP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e98jk4auauhgsp88il9w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M3xc4SP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e98jk4auauhgsp88il9w.png" alt="Install confirmation" width="880" height="638"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on "Install", or if you want to change the install location, click on "Change Install Location". This will start the NodeJS and NPM installation process. Once finished, you will be prompted with a final message displaying the location where NodeJS and NPM are installed. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--he0GkQHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqfvtevfzx2wlf8who9i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--he0GkQHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqfvtevfzx2wlf8who9i.png" alt="Node.js location" width="880" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As stated in the pop-up, to have access to NodeJS and NPM from your project's directory, make sure that "/usr/local/bin" is in your project's "$PATH". To add "/usr/local/bin" to your "$PATH" on MacOS, run the following command in your project's terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export PATH=/usr/local/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can then click "Close" to close the pop-up.&lt;/p&gt;

&lt;p&gt;To check if both NodeJS and NPM were installed successfully, in your project's terminal, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will return your NodeJS and NPM versions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-reactjs-on-macos"&gt;
  &lt;/a&gt;
  Installing ReactJS on MacOS:
&lt;/h2&gt;

&lt;p&gt;Now that you have NodeJS and NPM installed, You should now be able to install ReactJS in your project's directory by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save react react-dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-a-reactjs-project"&gt;
  &lt;/a&gt;
  Creating a ReactJS project:
&lt;/h2&gt;

&lt;p&gt;Now that you have ReactJS installed, you can create a new react project directory by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app my-react-project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a new project directory named "my-react-project" that will look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_oA9Epv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pr4nsimtaijme0vpqbsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_oA9Epv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pr4nsimtaijme0vpqbsg.png" alt="A react project structure" width="381" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then open a terminal window inside of this react project by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd my-react-project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you're inside a terminal window inside of this react project, you can finally run the following command to start a development server on "localhost:3000":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xqE8Nftl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jy0xskm83arzmje8pe5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xqE8Nftl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jy0xskm83arzmje8pe5x.png" alt="Local react development server" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Sourcegraph Search Tricks for Open Source Contributors and Maintainers</title>
      <author>Erika Heidi</author>
      <pubDate>Wed, 27 Oct 2021 17:07:16 +0000</pubDate>
      <link>https://dev.to/sourcegraph/10-sourcegraph-search-tricks-for-open-source-contributors-and-maintainers-44n9</link>
      <guid>https://dev.to/sourcegraph/10-sourcegraph-search-tricks-for-open-source-contributors-and-maintainers-44n9</guid>
      <description>&lt;p&gt;October is nearly finished, which means &lt;a href="https://hacktoberfest.com"&gt;Hacktoberfest&lt;/a&gt; is on the hearts and minds of developers around the world, with many last-minute participants. And although the idea of contributing to open source and getting some cool swag is very inviting for most devs (including myself), I know that finding the right project as well as the right issue where you can be helpful can become a challenging task for contributors.&lt;/p&gt;

&lt;p&gt;One of the biggest challenges of open source project maintainers, especially during Hacktoberfest, is to scope issues to all different skill levels of potential contributors. "Good first issues" are easier to spot, but intermediate to advanced issues are often full of unknowns and require a deeper dive into the codebase.&lt;/p&gt;

&lt;p&gt;Apart from enabling contributors to efficiently navigate codebases of all sizes, a comprehensive code search tool like &lt;a href="https://sourcegraph.com"&gt;Sourcegraph&lt;/a&gt; can be helpful to find more specific issues in open source projects that may have not (yet) been flagged by maintainers. Such problems can range from outdated dependencies to the use of functionality that is about to be deprecated in future releases.&lt;/p&gt;

&lt;p&gt;In this post, you'll learn 10 Sourcegraph search tricks to help identify projects and issues where your contribution can really make a difference. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-find-projects-that-welcome-contributions"&gt;
  &lt;/a&gt;
  1. Find projects that welcome contributions
&lt;/h2&gt;

&lt;p&gt;Repositories that have documentation around how to contribute are usually very friendly towards contributions, with tagged issues and contribution guidelines that will make it easier for your pull request to be considered valid and accepted into the project. To be sure you're looking for documentation, include the &lt;code&gt;lang:Markdown&lt;/code&gt; filter.&lt;/p&gt;

&lt;p&gt;The following query will run a global search on open source repositories for the string &lt;code&gt;contributing&lt;/code&gt; in markdown files:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;contributing lang:Markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+contributing+lang:Markdown+&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+contributing+lang:Markdown+&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To search repositories with documentation specific to Hacktoberfest, you can use the following search:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hacktoberfest lang:Markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkGjJM_i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34kytfm4t4znysgo9gm2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkGjJM_i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34kytfm4t4znysgo9gm2.png" alt="Sourcegraph search: finding repositories that welcome contributions" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-find-hacktoberfestfriendly-projects-using-a-certain-language-or-framework"&gt;
  &lt;/a&gt;
  2. Find Hacktoberfest-friendly projects using a certain language or framework
&lt;/h2&gt;

&lt;p&gt;While looking for your next project to contribute to, you can include a filter to only select repositories which contain a certain file. This allows you to search for projects that have a known structure or a file that is very specific. For instance, if I were to search for PHP projects that are hacktoberfest-friendly, I could include a filter to only return repositories that contain a &lt;code&gt;composer.json&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hacktoberfest lang:Markdown repohasfile:"^composer.json$" patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+repohasfile:%22%5Ecomposer.json%24%22&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+repohasfile:%22%5Ecomposer.json%24%22&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This query  uses the &lt;code&gt;regexp&lt;/code&gt; pattern type to search for a file with the exact name of &lt;code&gt;composer.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Similarly, you could look for a hacktoberfest-friendly Laravel project by using &lt;code&gt;artisan&lt;/code&gt; as a filter in your search:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hacktoberfest lang:Markdown repohasfile:"^artisan$" patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+repohasfile:%22artisan%22&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+hacktoberfest+lang:Markdown+repohasfile:%22artisan%22&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKVkE6su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqprnipyiugkzmwbbd2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKVkE6su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqprnipyiugkzmwbbd2c.png" alt="Sourcegraph search: hacktoberfest friendly repositories that contain a specific file" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-find-projects-that-rely-on-specific-dependencies"&gt;
  &lt;/a&gt;
  3. Find projects that rely on specific dependencies
&lt;/h2&gt;

&lt;p&gt;If you are a maintainer, looking for all repositories that depend on your library can be a fun experiment, and you can also use this trick to find projects using libraries you are very familiar with. This way, you might be able to provide meaningful help in issues that are aligned with your background and expertise.&lt;/p&gt;

&lt;p&gt;For example, the following query will look for projects that reference &lt;a href="https://tailwindcss.com"&gt;TailwindCSS&lt;/a&gt; as a dependency within their &lt;code&gt;package.json&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tailwindcss file:package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+file:package.json+tailwindcss&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+file:package.json+tailwindcss&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fWWN1FDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjt5s2fh7ldlmyf5cwvj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fWWN1FDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjt5s2fh7ldlmyf5cwvj.png" alt="Sourcegraph search: projects that have a specific dependency" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could combine this search with the &lt;code&gt;repohasfile&lt;/code&gt; filter to filter the results down to a specific language or framework. For example, the following query limits results from the previous query to repositories containing a &lt;code&gt;composer.json&lt;/code&gt; file (for PHP):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;file:package.json tailwindcss repohasfile:"composer.json" patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+file:package.json+tailwindcss+repohasfile:%22composer.json%22&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+file:package.json+tailwindcss+repohasfile:%22composer.json%22&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-find-how-an-object-is-used-across-multiple-repositories"&gt;
  &lt;/a&gt;
  4. Find how an object is used across multiple repositories
&lt;/h2&gt;

&lt;p&gt;Developers of all levels and backgrounds often find themselves in a situation where documentation is not available for a method, and just looking at the method signature isn't enough to understand where the parameters come from. You need a real example to see the connections between different components of the application. &lt;/p&gt;

&lt;p&gt;The following search query will look into all repositories inside the &lt;a href="https://github.com/minicli"&gt;minicli&lt;/a&gt; organization on GitHub, and return all occurrences for when a new object of type &lt;code&gt;TableHelper&lt;/code&gt; was created:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/minicli/.* new TableHelper lang:PHP
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/minicli/.*+new+TableHelper+lang:PHP&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/minicli/.*+new+TableHelper+lang:PHP&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C4phzDKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2oivbbyxbdlmfprkteya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C4phzDKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2oivbbyxbdlmfprkteya.png" alt="Sourcegraph search: how an object is used across repositories in an organization" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The search results give you context around the fact that the &lt;code&gt;TableHelper&lt;/code&gt; class can be instantiated with an optional argument. To see the full code, you can click on the code snippet, and that will bring you to the full contents of that file. &lt;/p&gt;

&lt;p&gt;Now let's say you have a method call that can accept an optional second parameter, and you want to only look for cases where the second parameter is provided. For that you can use &lt;a href="https://docs.sourcegraph.com/code_search/reference/structural"&gt;structural search&lt;/a&gt;, which will give you the ability to search for code patterns.&lt;/p&gt;

&lt;p&gt;For example, the method &lt;code&gt;getPrinter()-&amp;gt;out()&lt;/code&gt; is used in Minicli to output messages in the command line, and accepts a mandatory first parameter (text to be printed) and an optional second parameter that specifies the color style. The following query will search for instances where the custom style was applied, within the repositories of the Minicli organization on GitHub:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/minicli/.* getPrinter()-&amp;gt;out(...,...) patterntype:structural
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/minicli/.*+getPrinter%28%29-%3Eout%28...%2C...%29&amp;amp;patternType=structural"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/minicli/.*+getPrinter%28%29-%3Eout%28...%2C...%29&amp;amp;patternType=structural&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yd-J_XNx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/364b7b16wudkygxtnfjw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yd-J_XNx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/364b7b16wudkygxtnfjw.png" alt="Sourcegraph search: using structural search for specific method call" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-find-keys-and-secrets-that-should-not-have-been-committed-to-the-codebase"&gt;
  &lt;/a&gt;
  5. Find keys and secrets that should not have been committed to the codebase
&lt;/h2&gt;

&lt;p&gt;It is not uncommon that a key or secret is committed to a code versioning system by mistake. This can happen to anyone, especially in new projects.&lt;/p&gt;

&lt;p&gt;The following query will use the &lt;code&gt;regexp&lt;/code&gt; pattern type to search for files with content that looks like an API key token or secret. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/sourcegraph/.* (key|secret|token)-[\w+]{32,} patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/.*+%28key%7Csecret%7Ctoken%29-%5B%5Cw%2B%5D%7B32%2C%7D&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/sourcegraph/.*+%28key%7Csecret%7Ctoken%29-%5B%5Cw%2B%5D%7B32%2C%7D&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-find-usage-of-compromised-dependencies"&gt;
  &lt;/a&gt;
  6. Find usage of compromised dependencies
&lt;/h2&gt;

&lt;p&gt;Every now and then we hear about libraries being compromised with malware and other suspicious code. A new technique called "package typosquatting"() exploits the popularity of framework libraries to share malicious code as packages with a similar name, which can go unnoticed for a while under a big dependency tree. That's what &lt;a href="https://www.kernelmode.blog/typosquatting-malware-found-in-composer-repository/"&gt;happened recently&lt;/a&gt; in PHP land with the &lt;code&gt;symfont/process&lt;/code&gt; package, a malware disguised as Symfony package that would open up a web shell for attackers to exploit the server.&lt;/p&gt;

&lt;p&gt;A global search for the &lt;code&gt;symfont/process&lt;/code&gt; package in JSON files indicates that most PHP projects have already removed this dependency from their &lt;code&gt;composer.json&lt;/code&gt; files, while some cached lock files still contain a reference to the library:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;symfont/process lang:JSON
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+symfont/process+lang:JSON+&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+symfont/process+lang:JSON+&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xIqLNBR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91p6t43106klsjxbrl1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xIqLNBR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91p6t43106klsjxbrl1a.png" alt="Sourcegraph search: find usage of compromised libraries" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could use a similar search to look for compromised NPM packages, since they are also defined in a JSON file. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-audit-an-organization-for-outdated-or-vulnerable-dependencies-across-repositories"&gt;
  &lt;/a&gt;
  7. Audit an organization for outdated or vulnerable dependencies across repositories
&lt;/h2&gt;

&lt;p&gt;Outdated dependencies can become an issue for maintainers, especially when they represent a security vulnerability. For instance, the &lt;a href="https://snyk.io/vuln/npm:lodash"&gt;lodash&lt;/a&gt; NPM package has a history of known CVEs. The latest critical issue was reported on &lt;a href="https://snyk.io/test/npm/lodash/4.17.19"&gt;version &lt;code&gt;4.17.19&lt;/code&gt; &lt;/a&gt;. The following query will search for this specific &lt;code&gt;lodash&lt;/code&gt; version globally, using &lt;code&gt;regexp&lt;/code&gt; as search pattern type:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search string:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;file:package.json lodash 4.17.19 patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+file:package.json+lodash+4.17.19&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+file:package.json+lodash+4.17.19&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-find-code-that-is-not-up-to-language-standards-across-multiple-repositories"&gt;
  &lt;/a&gt;
  8. Find code that is not up to language standards across multiple repositories
&lt;/h2&gt;

&lt;p&gt;Most programming languages have a superset of rules that are adopted by the community as standards, even though they are not syntactically enforced. With a single search, you can identify code that does not follow certain coding standards, which can be helpful for both maintainers and contributors working across multiple repositories.&lt;br&gt;
For instance, the following query will search globally for code that doesn't adhere to the &lt;a href="https://www.php-fig.org/psr/psr-12/"&gt;PSR-12&lt;/a&gt; PHP coding standards, which advises you to use one blank space character between the &lt;code&gt;if&lt;/code&gt; keyword and the opening parenthesis of the evaluation expression:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lang:PHP ^if([(...)]) patterntype:regexp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+lang:PHP+%5Eif%28%5B%28...%29%5D%29&amp;amp;patternType=regexp"&gt;https://sourcegraph.com/search?q=context:global+lang:PHP+%5Eif%28%5B%28...%29%5D%29&amp;amp;patternType=regexp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cJ6D6yAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oh9msmwspjlqdtnkbsnr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cJ6D6yAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oh9msmwspjlqdtnkbsnr.png" alt="Sourcegraph Search: find code that doesn't adhere to language standards" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-search-for-recent-changes-in-large-or-multiple-projects"&gt;
  &lt;/a&gt;
  9. Search for recent changes in large or multiple projects
&lt;/h2&gt;

&lt;p&gt;If you are a regular user of larger projects such as frameworks or CMSs, you may want to be watching for any recent changes to be on top of new features. This also might be useful if you update to a newer version and start facing issues that are difficult to debug, or if your website is down after a code update and you are not sure what may have caused the issue.&lt;/p&gt;

&lt;p&gt;The following search query will look for recent commits on the Laravel framework and list all changes merged in the past week:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/laravel/laravel%24+type:commit+after:lastweek"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/laravel/laravel%24+type:commit+after:lastweek&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/laravel/laravel$ type:commit after:lastweek
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more context, you can change the search &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;diff&lt;/code&gt;, and this will give you the information about the commit &lt;em&gt;diff&lt;/em&gt;, or in other words what changed after the commit was merged. The following query will search for recent changes in all Laravel repositories, showing the corresponding diff for each change:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search String&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repo:^github\.com/laravel/.*  type:diff after:lastweek
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/laravel/.*++type:diff+after:lastweek&amp;amp;patternType=literal"&gt;https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/laravel/.*++type:diff+after:lastweek&amp;amp;patternType=literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ngh-Fk5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kzi5vk6v5q5nbi3juam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ngh-Fk5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kzi5vk6v5q5nbi3juam.png" alt="Sourcegraph search: finding the recent changes in a project" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This provides a quick way to look for recent changes. To nail it down and reduce the number of results, you may want to specify the type of file you want to see in the results with &lt;code&gt;lang:PHP&lt;/code&gt; for instance to show only &lt;code&gt;.php&lt;/code&gt; files in the result.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-find-deprecated-function-calls-among-oss-projects-in-your-language-of-choice"&gt;
  &lt;/a&gt;
  10. Find deprecated function calls among OSS projects in your language of choice
&lt;/h2&gt;

&lt;p&gt;When working with languages and frameworks that evolve rapidly, it might be useful to be on the lookout for deprecated function calls, and usage of methods that are about to be deprecated in future releases.&lt;/p&gt;

&lt;p&gt;As an example, the new PHP 8.1 release will remove several methods that have been marked as deprecated, which will cause backwards compatibility issues for projects using those methods. The &lt;code&gt;mhash()&lt;/code&gt; method is part of the list of methods to be deprecated.&lt;/p&gt;

&lt;p&gt;The following query will use &lt;a href="https://docs.sourcegraph.com/code_search/reference/structural"&gt;structural search&lt;/a&gt; to look for &lt;code&gt;mhash&lt;/code&gt; method calls on all open source projects currently indexed:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search Query:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mhash(...) lang:PHP select:content patterntype:structural
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Direct Link:&lt;/strong&gt; &lt;a href="https://sourcegraph.com/search?q=context:global+mhash%28...%29+lang:PHP+select:content&amp;amp;patternType=structural"&gt;https://sourcegraph.com/search?q=context:global+mhash%28...%29+lang:PHP+select:content&amp;amp;patternType=structural&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DauaJC6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czink9hvhq5e1qawhq8g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DauaJC6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czink9hvhq5e1qawhq8g.png" alt="Sourcegraph search: find deprecated method calls across repositories" width="880" height="724"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The structural search can be extremely helpful for refactoring code in situations like this, for projects in any language. Just replace the &lt;code&gt;lang&lt;/code&gt; with your preferred language and the search string with the method you want to search for.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Advanced code search can give you the insights you miss from only looking at the surface of things. That can be extremely useful when working with open source software, since contributors hardly have the time for long deep dives into the code and need a quick onboarding to the project. Maintainers can also benefit from advanced code search in order to keep their projects up to date and welcoming to new contributors. For more information on Sourcegraph's search query syntax, please refer to the &lt;a href="https://docs.sourcegraph.com/code_search/reference/queries"&gt;official documentation&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Have suggestions or questions? Leave a comment, or join our &lt;a href="https://about.sourcegraph.com/community/?utm_medium=social&amp;amp;utm_source=devto&amp;amp;utm_campaign=slacklaunch"&gt;Community Slack Space&lt;/a&gt; where our team will be happy to answer any questions you may have about Sourcegraph.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
      <category>beginners</category>
      <category>cheatsheet</category>
    </item>
    <item>
      <title>Let’s Talk About Executing and Caching Queries with React Apollo</title>
      <author>Danko Šimunović</author>
      <pubDate>Wed, 27 Oct 2021 16:45:31 +0000</pubDate>
      <link>https://dev.to/infobipdev/lets-talk-about-executing-and-caching-queries-with-react-apollo-15f1</link>
      <guid>https://dev.to/infobipdev/lets-talk-about-executing-and-caching-queries-with-react-apollo-15f1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpTjgPLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13ynlmycoph96dp9tem4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpTjgPLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13ynlmycoph96dp9tem4.jpg" alt="Cover photo" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yep, you’ve guessed it. We’re going to talk about queries. &lt;/p&gt;

&lt;p&gt;Let’s start with basics. The &lt;code&gt;useQuery&lt;/code&gt; React hook is the primary API for executing queries when using Apollo Client in React. To run a query within a React component, we call the &lt;code&gt;useQuery&lt;/code&gt;  and pass it a GraphQL query string. When the component renders, &lt;code&gt;useQuery&lt;/code&gt;  returns an object from Apollo Client that contains &lt;code&gt;loading&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;data&lt;/code&gt; properties. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Apollo Query component is a deprecated way of executing queries. It’s a part of &lt;code&gt;@apollo/react-components&lt;/code&gt; package and it is implementing Render props pattern. Render props are used for sharing code between React components using a prop whose value is a function. A component with a render prop takes a function that returns a React element. The component then calls this function instead of implementing its own render logic. In the case of Query component, we are using the &lt;strong&gt;children&lt;/strong&gt; prop as a render prop. But because the children prop doesn’t need to be named in the list of “attributes”,  you can put it directly inside the element. In the following example, we are passing a query prop, which is required. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Internally, Query component actually uses the &lt;code&gt;useQuery&lt;/code&gt; hook and then calls the render props function with results returned from the hook. This means that we’re using the same options and are getting the same result object as when using the &lt;code&gt;useQuery&lt;/code&gt; hook. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cachefirst-ask-questions-later"&gt;
  &lt;/a&gt;
  Cache-first, Ask Questions Later
&lt;/h3&gt;

&lt;p&gt;Apollo is locally caching results for the queries by default. This makes subsequent executions of the same query extremely fast. This is called &lt;strong&gt;cache-first&lt;/strong&gt; policy. We can define fetch policy on query level.  &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;These are 6 supported fetch policies: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cache-first&lt;/strong&gt;: This is the default fetch policy. If data is present in the cache, that data is returned. Otherwise, a query is executed against the GraphQL server and the data is returned after it is cached. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cache-only&lt;/strong&gt;: Query is only executed against the cache. GraphQL server is never called. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cache-and-network&lt;/strong&gt;: If data is present in the cache, that data is returned. But even then, a query is executed against the GraphQL server. If the response differs from what is stored in the cache, it will update the cache. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;network-only&lt;/strong&gt;:  Query is executed against the GraphQL server, without first checking the cache. The query's result is stored in the cache in case the same query with a different fetch policy is being made elsewhere in the application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;no-cache&lt;/strong&gt;: Behaves like network-only, except the query's result is not stored in the cache. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;standby&lt;/strong&gt;: Behaves like cache-first, except this query does not automatically update when underlying field values change. You have to update it manually. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is also a possibility to define &lt;strong&gt;nextFetchPolicy&lt;/strong&gt; option. This way, you can define fetch policy for the first query execution using &lt;strong&gt;fetchPolicy&lt;/strong&gt; and then you can define fetch policy for the subsequent executions with &lt;strong&gt;nextFetchPolicy&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apollo-client-behind-the-scenes"&gt;
  &lt;/a&gt;
  Apollo Client Behind the Scenes
&lt;/h3&gt;

&lt;p&gt;Apollo Client acts as a facade to the underlying cached data. Behind the scenes, Apollo normalizes the data by splitting the results into individual objects and assigns a unique identifier to each object. These objects are stored in a flattened structure. Apollo then exposes an API to interact with the cached data. By minimizing direct access to the actual data using the facade/API, Apollo can normalize data under the hood. &lt;/p&gt;

&lt;p&gt;Apollo can &lt;strong&gt;automatically update cache&lt;/strong&gt; for: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Queries &lt;/li&gt;
&lt;li&gt;Mutations that update a single existing entity &lt;/li&gt;
&lt;li&gt;Bulk update mutations that return the entire set of changed items &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, there are use cases in which we have to &lt;strong&gt;manually update the cache&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application-specific side-effects (something that happens after the mutation, but does not use data returned from the mutation) &lt;/li&gt;
&lt;li&gt;Update operations that add, remove, or reorder items in a cached collection &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#manually-updating-cached-data"&gt;
  &lt;/a&gt;
  Manually Updating Cached Data
&lt;/h3&gt;

&lt;p&gt;Apollo supports multiple ways of reading and writing cached data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;readQuery / writeQuery&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readFragment / writeFragment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cache.modify&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With &lt;code&gt;readQuery&lt;/code&gt; method, it is possible to run GraphQL queries directly on the local cache. If the cache contains all of the data necessary to execute a specified query, &lt;code&gt;readQuery&lt;/code&gt; returns a data object in the shape of the query, just like a GraphQL server does.  If some fields are missing from the cache, &lt;code&gt;null&lt;/code&gt; is returned. Using &lt;code&gt;writeQuery&lt;/code&gt; we can write arbitrary data to the cache for the specific query. It looks similar to &lt;code&gt;readQuery&lt;/code&gt;, but it accepts &lt;code&gt;data&lt;/code&gt; option. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Using fragments it is possible to read or update only parts of the cached data, unlike &lt;code&gt;readQuery / writeQuery&lt;/code&gt; methods, which require a complete query. When using fragments to interact with cache, we can use &lt;code&gt;readFragment / writeFragment&lt;/code&gt; methods. They require &lt;code&gt;id&lt;/code&gt; option, which represents the unique identifier that was assigned to the object in the cache.  By default, this identifier has the format &lt;code&gt;&amp;lt;_typename&amp;gt;:&amp;lt;id&amp;gt;&lt;/code&gt;, but this can be customized. If there is no object with the specified ID, &lt;code&gt;readFragment&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.  &lt;code&gt;writeFramgent&lt;/code&gt; accepts &lt;code&gt;data&lt;/code&gt; option, which represents data that will be written for the specified object and that conforms to the specified fragment. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With &lt;code&gt;cache.modify&lt;/code&gt; it is possible to directly modify cached fields. This method requires the ID of the cached object to modify and a modifier function for each field to modify. &lt;/p&gt;

&lt;p&gt;It is important to emphasize that any changes made with these methods are not pushed to the GraphQL server. If the current page is refreshed, these changes will disappear. Also, all methods trigger a refresh of all active queries that depend on modified fields. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#two-strategies-for-updating-the-cached-results"&gt;
  &lt;/a&gt;
  Two Strategies for Updating the Cached Results
&lt;/h3&gt;

&lt;p&gt;Besides manually rewriting cached data, there are two strategies for updating the cached results: &lt;strong&gt;polling&lt;/strong&gt; and &lt;strong&gt;refetching&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;With polling, we execute the query periodically at a specified interval. &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Refetching is done by using &lt;code&gt;refetch&lt;/code&gt; function that enables us to re-execute the query.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#apollo-client-is-a-powerful-caching-machine"&gt;
  &lt;/a&gt;
  Apollo Client is a Powerful Caching Machine
&lt;/h3&gt;

&lt;p&gt;In conclusion, one would have to agree that Apollo Client is a mighty caching machine. It’s equipped with a powerful caching mechanism that makes it  easy to execute data queries quickly and efficiently. However, to make better use of its caching possibilities, one should get familiar with various methods of interacting with cache, cache setup and configuration. &lt;/p&gt;

</description>
      <category>graphql</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Install VirtualBox Guest Additions for openEuler 20.03 SP1 </title>
      <author>Hollow Man</author>
      <pubDate>Wed, 27 Oct 2021 16:31:33 +0000</pubDate>
      <link>https://dev.to/hollowman6/install-virtualbox-guest-additions-for-openeuler-2003-sp1-3abg</link>
      <guid>https://dev.to/hollowman6/install-virtualbox-guest-additions-for-openeuler-2003-sp1-3abg</guid>
      <description>&lt;p&gt;This article mainly discusses encountered issues and solutions when I installed VirtualBox Guest Additions for OpenEuler 20.03 SP1.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;After installing openEuler 20.03 SP1, log in to openEuler (I login as root here, if you are a regular user, you may need to use &lt;code&gt;sudo&lt;/code&gt; when executing commands below), and then click &lt;code&gt;Device&lt;/code&gt; -&amp;gt; &lt;code&gt;Insert Guest Additions CD image...&lt;/code&gt; to load the latest version of the Guest Additions CD into the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mount the CD:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; /run/media/openeuler/VBoxAdditions
mount /dev/sr0 /run/media/openeuler/VBoxAdditions
&lt;span class="nb"&gt;cd&lt;/span&gt; /run/media/openeuler/VBoxAdditions
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zE74W06j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714095112172.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zE74W06j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714095112172.png" alt="" width="759" height="183"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you choose to install directly as usual, it may prompt an error for extraction because the system lacks the &lt;code&gt;tar&lt;/code&gt; extraction program in the case of minimal installation. So install it:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dnf update
dnf &lt;span class="nb"&gt;install tar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rBB1xGsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100053588.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rBB1xGsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100053588.png" alt="" width="607" height="63"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the installation:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./VBoxLinuxAdditions.run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZICbxCQg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100606358.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZICbxCQg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100606358.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="800" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see there exists an error. Let's take a look at the details of the error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; /var/log/vboxadd-setup.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SD9KBJdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100827446.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SD9KBJdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714100827446.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="796" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be seen that it is a compilation error. According to Linux kernel documentation, the &lt;code&gt;access_ok&lt;/code&gt; function has been changed from passing three parameters to passing two parameters after the Linux kernel version 5. VBoxAdditions judges whether to use three or two parameters by the Linux version number. However, the kernel version number used by openEuler 20.03 SP1 is 4, but the patches later than the Linux kernel version 5 for this have been applied. As a result, the &lt;code&gt;access_ok&lt;/code&gt; function only needs two parameters in this case, so we only need to change the VBoxAdditions source code to let it call &lt;code&gt;access_ok&lt;/code&gt; with two parameters.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Modify the source code of VBoxAdditions (note that the corresponding path is changed according to the version number of VBoxAdditions):
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /opt/VBoxGuestAdditions-6.1.22/src/vboxguest-6.1.22/vboxguest/r0drv/linux
vi memuserkernel-r0drv-linux.c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use i to edit, and change the following two places &lt;code&gt;RTLNX_VER_MIN(5,0,0)&lt;/code&gt; to &lt;code&gt;RTLNX_VER_MIN(4,0,0)&lt;/code&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nG4zn3Pb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021071410233935.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nG4zn3Pb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021071410233935.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="478" height="229"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJaq54pn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714102414400.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJaq54pn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714102414400.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="520" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then press the &lt;code&gt;ESC&lt;/code&gt; key, &lt;code&gt;:wq&lt;/code&gt; save and exit.&lt;/p&gt;

&lt;p&gt;There is also a same issue in another file, so continue to execute the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ../../../vboxsf
vi regops.c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PYtHNg0R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714103207764.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PYtHNg0R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210714103207764.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="782" height="542"&gt;&lt;/a&gt;&lt;br&gt;
Then press the &lt;code&gt;ESC&lt;/code&gt; key, &lt;code&gt;:wq&lt;/code&gt; save and exit.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Finally continue the installation:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/sbin/rcvboxadd setup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdeI-XT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021071410354843.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdeI-XT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021071410354843.png%3Fx-oss-process%3Dimage/watermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTcyMDIz%2Csize_16%2Ccolor_FFFFFF%2Ct_70" alt="" width="649" height="234"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Installation is complete!&lt;/p&gt;

&lt;p&gt;Finally, the VirtualBox Guest Addition can be used after restarting the system! &lt;/p&gt;

</description>
      <category>linux</category>
      <category>virtualbox</category>
      <category>openeuler</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
