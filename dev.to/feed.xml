<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Developing A Game Engine with Perl: Part 5 - 32bit -&gt; 64bit &amp; Perl's Storable</title>
      <author>Shawn Holland</author>
      <pubDate>Wed, 01 Dec 2021 03:14:32 +0000</pubDate>
      <link>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-5-32bit-64bit-perls-storable-5l8</link>
      <guid>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-5-32bit-64bit-perls-storable-5l8</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj"&gt;If you haven't heard already...&lt;/a&gt; &lt;strong&gt;I DO NOT KNOW WHAT I AM DOING.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to start reading from the beginning. Check out the &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-3b8"&gt;first article in this series&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Continuing on with the &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-4-uefi-vs-opensuse-installer-5e1c"&gt;last article&lt;/a&gt; let's talk about changing system architecture and how that can affect Perl code, specifically &lt;a href="https://perldoc.perl.org/Storable"&gt;Storable&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mouse Input Support&lt;/li&gt;
&lt;li&gt;Hardware Failure&lt;/li&gt;
&lt;li&gt;Server Upgrade&lt;/li&gt;
&lt;li&gt;UEFI vs OpenSuSE Installer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;32bit -&amp;gt; 64bit &amp;amp; Perl's Storable&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After the old server had &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-3-hardware-failure-server-upgrade-on1"&gt;HDD failures&lt;/a&gt; and finally &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-4-uefi-vs-opensuse-installer-5e1c"&gt;managing to upgrade&lt;/a&gt; to the new server, I eagerly began getting all the services and software installed to test the engine on new hardware. I was quickly meet with an error I have never seen before.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Byte order is not compatible at /usr/lib/perl5/5.34.0/x86_64-linux-thread-multi/Storable.pm&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After doing some quick reading, I came to understand that Perl uses architecture specific ways to save content to files when using Storable. Specifically if you use &lt;code&gt;lock_store&lt;/code&gt; and &lt;code&gt;store&lt;/code&gt;. These are part of Perl's core system and what I use throughout the engine for working with the file structure.&lt;/p&gt;

&lt;p&gt;I had to carefully re-read the perldoc's to discover that you can avoid architecture incompatibility by simply using &lt;code&gt;nstore&lt;/code&gt; and &lt;code&gt;lock_nstore&lt;/code&gt; The method you use for retrieving the stored files doesn't matter, only when storing the data into files does it matter.&lt;/p&gt;

&lt;p&gt;I tried to find ways of being able to convert the stored files from 32bit architecture to 64bit, but ultimately the only real option was to use the old server to re-store the files with lock_nstore.&lt;/p&gt;

&lt;p&gt;Luckily the old PC was still working, and I was able to modify the code and re-store all the files. The change and usage was simple:&lt;/p&gt;

&lt;p&gt;I had to change my use statement from:&lt;br&gt;
&lt;code&gt;use Storable qw(lock_store lock_retrieve);&lt;/code&gt;&lt;br&gt;
to&lt;br&gt;
&lt;code&gt;use Storable qw(lock_nstore lock_retrieve)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And to re-store I changed my code from this:&lt;br&gt;
&lt;code&gt;lock_store($data_ref, $dir_location);&lt;/code&gt;&lt;br&gt;
to&lt;br&gt;
&lt;code&gt;lock_nstore($data_ref, $dir_location);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Have you ever had to write code for architecture compatibility? Or fix code migrated from one architecture to another? What do you prefer for storing data to files in Perl?&lt;/p&gt;

&lt;p&gt;If you have any suggestions or comments please share constructively. Also please visit our social media pages for lots of fun videos and pictures showing the game engine in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/ANSIGameEngine/"&gt;ANSI Game Engine on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/ANSIGameEngine"&gt;ANSI Game Engine on Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
Shawn&lt;/p&gt;

</description>
      <category>perl</category>
      <category>gamedev</category>
      <category>linux</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Developing A Game Engine with Perl : Part  4 - UEFI vs OpenSuSE Installer</title>
      <author>Shawn Holland</author>
      <pubDate>Wed, 01 Dec 2021 02:34:10 +0000</pubDate>
      <link>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-4-uefi-vs-opensuse-installer-5e1c</link>
      <guid>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-4-uefi-vs-opensuse-installer-5e1c</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj"&gt;I'm still learning&lt;/a&gt; so remember... &lt;strong&gt;I DO NOT KNOW WHAT I AM DOING.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to start reading from the beginning. Check out the &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-3b8"&gt;first article in this series&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Continuing on with the &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-3-hardware-failure-server-upgrade-on1"&gt;last article&lt;/a&gt; let's talk about old hardware with &lt;a href="https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface"&gt;UEFI&lt;/a&gt;. It can be difficult (for me) to know how to get &lt;a href="https://www.opensuse.org/"&gt;Linux OpenSuSE&lt;/a&gt; installed properly.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mouse Input Support&lt;/li&gt;
&lt;li&gt;Hardware Failure&lt;/li&gt;
&lt;li&gt;Server Upgrade&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UEFI vs OpenSuSE Installer&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;32bit -&amp;gt; 64bit &amp;amp; Perl's Storable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-small-computer-and-almost-destroying-it"&gt;
  &lt;/a&gt;
  A small computer and almost destroying it...
&lt;/h2&gt;

&lt;p&gt;The last server's hard drive died, and I happen to have this old, but better, computer. It was in pieces, sitting in a box for a long time. Putting it back together was not easy. This &lt;a href="https://www.acer.com/ac/en/US/content/support-product/3916?b=1&amp;amp;pn=DT.SLQAA.001"&gt;Aspire X1470&lt;/a&gt; is a small form factor design, meaning there is no room to spare. Also meaning if your computer has been sitting around in a box, in pieces for a long time, and its' frame gets bent... well that means it's going to be very difficult to get it back together. I managed to rip off a chip heatsink in the process. I tell ya, my stomach turned right over... but luckily it went back on and seems to be holding and working fine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uefi-vs-opensuse-installer"&gt;
  &lt;/a&gt;
  UEFI vs OpenSuSE Installer
&lt;/h2&gt;

&lt;p&gt;This is where things get interesting. After finally getting the computer together, I downloaded the OpenSuSE ISO for 64bit. I went with &lt;a href="https://get.opensuse.org/tumbleweed"&gt;Tumbleweed&lt;/a&gt; again. It worked well with the last server, so I'll just go with what I know. Tumbleweed is a &lt;a href="https://en.wikipedia.org/wiki/Rolling_release"&gt;rolling release linux&lt;/a&gt;, which means I shouldn't have to reinstall when a new version is released and I should still stay up to date. I created a &lt;a href="https://askubuntu.com/questions/1335903/make-a-full-bootable-usb-stick-with-gnome-disk-utility"&gt;bootable USB from ISO in Ubuntu 20.04&lt;/a&gt; (My Desktop). Booted the new computer, installed OpenSuSE, and was happy... until I tried to reboot.&lt;/p&gt;

&lt;p&gt;When I rebooted, I pulled out the USB stick and the BIOS said no boot drives. I knew of UEFI, and started reading. I found that in /boot/efi/ there was no EFI directory. If you don't know anything about UEFI (No worries, neither do I) ..apparently there is supposed to be a Fat32 partition marked as type EFI. The BIOS checks for this location and attempts to load the OS this way as apposed to using the &lt;a href="https://en.wikipedia.org/wiki/Master_boot_record"&gt;MBR&lt;/a&gt; for booting like in the old days. &lt;/p&gt;

&lt;p&gt;Here is what it looks like now in the server using &lt;a href="https://man7.org/linux/man-pages/man8/fdisk.8.html"&gt;fdisk&lt;/a&gt; to look at the partitions and &lt;a href="https://linux.die.net/man/1/tree"&gt;tree&lt;/a&gt; to look at the directory structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;localhost:/ # fdisk -l
Device          Start        End    Sectors  Size Type
/dev/sda1        2048    1050623    1048576  512M EFI System
/dev/sda2     1050624 2893709311 2892658688  1.3T Linux filesystem
/dev/sda3  2893709312 2930277134   36567823 17.4G Linux swap

localhost:/ # tree /boot/efi/
/boot/efi/
└── EFI
    ├── boot
    │   ├── MokManager.efi
    │   ├── bootx64.efi
    │   └── fallback.efi
    └── opensuse
        ├── MokManager.efi
        ├── boot.csv
        ├── grub.cfg
        ├── grub.efi
        ├── grubx64.efi
        └── shim.efi

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may need to scroll right to see the partition type EFI.&lt;/p&gt;

&lt;p&gt;Well, this is what was &lt;strong&gt;NOT&lt;/strong&gt; happening when I installed. I tried several different ways to get it to do an EFI install, but it kept doing it MBR style. The difficult thing is I didn't know what to ask google, and every time I had to try a new install method, it took about an hour to do the install, just to check and find out that it was wrong.&lt;/p&gt;

&lt;p&gt;I knew that the installer wasn't loading in EFI mode and was running in legacy mode, but I didn't know how to switch it manually, and why it was choosing legacy in the first place. I checked the BIOS for booting options, and there just wasn't anything that would force it to boot from a HDD's MBR. I also didn't want to do a firmware update, I just wanted to code and get this install done.&lt;/p&gt;

&lt;p&gt;Finally.... the answer was the BIOS just sucks. For some reason it prioritizes legacy mode on USB booting and I could only get it to chose an EFI boot from USB by manually loading it in the boot menu with F12. Allowing it to choose the USB for booting always resulted in legacy mode, regardless of the settings specified in the BIOS. Of course OpenSuSE's installer will not allow you to switch to EFI if you are in legacy mode. Also it does not make it obvious for the uninitiated to know that it is in legacy (MBR) mode. &lt;/p&gt;

&lt;p&gt;I managed to find an obscure article that said &lt;strong&gt;&lt;code&gt;"If you see the options for pressing F keys at the bottom of the install screen, then it's legacy mode"&lt;/code&gt;&lt;/strong&gt; That one little piece of information is all I needed to understand what was happening. I saw that every time I booted into the OpenSuSE installer there were F key options at the bottom. That's when I realized that the BIOS wasn't booting from the USB's EFI partition. After realizing this, I used a manual BIOS boot, picked the correct USB boot drive (of course the BIOS displays both EFI and Legacy USB boot drives with the same name) I got the correct install screen, the EFI boot options were all there. The install went really easy at this point and is up and running now for a few days with no issues.&lt;/p&gt;

&lt;p&gt;Have you ever worked with small form factor computers? What sort of disaster stories, or success stories have you had? Also what about installing an OS with UEFI vs MBR, what sort of experiences have you had?&lt;/p&gt;

&lt;p&gt;If you have any suggestions or comments please share constructively. Also please visit our social media pages for lots of fun videos and pictures showing the game engine in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/ANSIGameEngine/"&gt;ANSI Game Engine on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/ANSIGameEngine"&gt;ANSI Game Engine on Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
Shawn&lt;/p&gt;

</description>
      <category>perl</category>
      <category>gamedev</category>
      <category>linux</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>EVOLVING TECHNOLOGY AND IT'S IMPORTANCE </title>
      <author>Avinash Kumar</author>
      <pubDate>Wed, 01 Dec 2021 01:57:56 +0000</pubDate>
      <link>https://dev.to/darkxenium/evolving-technology-and-its-importance-22gm</link>
      <guid>https://dev.to/darkxenium/evolving-technology-and-its-importance-22gm</guid>
      <description>&lt;h5&gt;
  &lt;a href="#the-main-goal-of-technology-which-brings-together-tools-to-promote-development-use-and-information-exchange-is-to-make-tasks-easier-and-to-solve-many-of-humanitys-problems-we-must-emphasise-how-beneficial-technology-is-to-our-lives-as-it-advances-and-makes-our-lives-even-more-convenient"&gt;
  &lt;/a&gt;
  The main goal of technology, which brings together tools to promote development, use, and information exchange, is to make tasks easier and to solve many of humanity's problems. We must emphasise how beneficial technology is to our lives as it advances and makes our lives even more convenient.
&lt;/h5&gt;

&lt;p&gt;Some technologies that can be worked upon:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Controlled Artificial Intelligence&lt;/li&gt;
&lt;li&gt;Better machine learning and Nano tech&lt;/li&gt;
&lt;li&gt;Secured networks&lt;/li&gt;
&lt;/ol&gt;

&lt;h5&gt;
  &lt;a href="#also-technology-is-evolving-according-to-the-law-of-demand-we-basically-build-and-improve-what-the-market-wants-to-buy-for-me-this-is-an-outofcontrol-way-of-evolving-we-become-more-and-more-disconnected-from-nature-and-rely-more-on-dependable-tech-for-example-thanks-to-technological-advances-humans-now-are-more-educated-than-ever-before-but-that-knowledge-is-not-generally-used-whereas-a-few-decades-and-even-centuries-ago-people-where-less-educated-but-were-wiser-they-could-make-better-use-of-the-knowledge-they-had-and-better-use-of-their-mental-and-physical-abilities"&gt;
  &lt;/a&gt;
  Also, technology is evolving according to the law of demand! We basically build and improve what the market wants to buy! For me this is an 'out-of-control' way of evolving. We become more and more disconnected from nature and rely more on "dependable" tech. For example, thanks to technological advances humans now are more educated than ever before. But that knowledge is not generally used. Whereas a few decades and even centuries ago, people where less educated, but were wiser, they could make better use of the knowledge they had, and better use of their mental and physical abilities.
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#technology-also-helps-us-communicate-more-efficiently-and-effectively-with-others-who-are-spread-out-over-large-distances-and-its-always-developing-new-ways-of-doing-things-that-make-life-easier-or-bring-us-closer-together-whether-its-through-video-chat-social-media-or-even-just-taking-pictures-with-your-phone-and-posting-them-online-but-on-the-other-hand-there-are-some-people-who-think-technology-should-be-used-less-so-we-can-spend-more-time-interacting-with-each-other-facetoface-or-in-real-life-as-they-call-it-they-argue-that-technology-is-making-us-lazier-because-we-dont-have-to-make-as-much-effort-to-contact-people-or-do-things-and-they-also-say-that-the-new-way-we-communicate-online-can-lead-to-misunderstandings-and-fights-because-it-is-so-easy-for-others-to-misinterpret-the-way-you-mean-something"&gt;
  &lt;/a&gt;
  Technology also helps us communicate more efficiently and effectively with others who are spread out over large distances. And it's always developing new ways of doing things that make life easier or bring us closer together whether it's through video chat, social media, or even just taking pictures with your phone and posting them online. But on the other hand, there are some people who think technology should be used less so we can spend more time interacting with each other face-to-face, or "in real life" as they call it. They argue that technology is making us lazier because we don't have to make as much effort to contact people or do things. And they also say that the new way we communicate online can lead to misunderstandings and fights because it is so easy for others to misinterpret the way you mean something.
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qQ4WelUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/PortlyGraveHen-size_restricted.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qQ4WelUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/PortlyGraveHen-size_restricted.gif" alt="person panting" width="338" height="249"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>techtalks</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Things to know about Artificial intelligence</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Wed, 01 Dec 2021 01:50:38 +0000</pubDate>
      <link>https://dev.to/markfusion/things-to-know-about-artificial-intelligence-5dc7</link>
      <guid>https://dev.to/markfusion/things-to-know-about-artificial-intelligence-5dc7</guid>
      <description>&lt;p&gt;In the future, Artificial Intelligence will be everywhere. AI is a &lt;br&gt;
computer system that can think for itself and make decisions about how to solve problems. It's becoming more advanced as time goes on. In this blog post, we will look at some of the things you need to know before AI becomes a part of your everyday life before it's too late.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ai-is-not-humankind-robot"&gt;
  &lt;/a&gt;
  AI is not Humankind Robot
&lt;/h2&gt;

&lt;p&gt;If you think that AI thinks and growing as fast as people do, so you're wrong, it's doing it much faster than you can even imagine. To be what you're right now you need several years, while AI doing it probably in 1 day or even in a less period of time. &lt;/p&gt;

&lt;p&gt;AI can help you much more than you think. For example, AI currently helps doctors to diagnose diseases better, or AI researchers helping scientists from NASA to do something that they couldn't even imagine before the AI era.&lt;/p&gt;

&lt;p&gt;Why I'm telling you this? Because time will run fast and you won't even notice how AI will be implemented in all spheres of your life and work. I'm not saying that it will be an apocalypse and there will be terminators walking on the street (However, it can be so) AI will surely make your life much easier, for instance, you can already use some services like Upscaler of Image, Generator of Music, and even AI that is helping you to write articles like this one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-have-to-catch-the-train"&gt;
  &lt;/a&gt;
  You have to catch the train
&lt;/h2&gt;

&lt;p&gt;Probably this information could sound too futuristic and AI will not be everywhere, but I'm telling you that it's already here. So before AI takes your job think twice about what can be done with AI in this sphere if there is such an opportunity. &lt;/p&gt;

&lt;p&gt;There're still many things that we can't do with AI such as a great design for your website. Yeah, you can say that there's already one but it's horrible and can't replace usual freelances who are making designs&lt;/p&gt;

&lt;p&gt;There are many specialties that you can choose from, including but not limited to: Security, Blockchain Technology &amp;amp; More, Trading and Investing Strategies. There's a strong emphasis on security this year as well since it was last year's theme. In addition, there are several directions in which the term "Neural Network" might be used - these&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-prepared-for-the-future"&gt;
  &lt;/a&gt;
  Be prepared for the future
&lt;/h2&gt;

&lt;p&gt;As we discussed AI doing everything faster than Humankind, so probably prepare yourself to live in the AI era. AI will help to do everything much easier and faster, so old technologies like PCs or laptops won't be needed probably soon. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-forget-about-ethics"&gt;
  &lt;/a&gt;
  Don't forget about ethics
&lt;/h2&gt;

&lt;p&gt;One of the things that you need to know before AI is taking over our lives completely is ethical issues with AI. AI doing it fast, but not always correctly. It can easily make a mistake and learn from it, but if AI starts doing unethical things just stop working. So probably think about ethical issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fears"&gt;
  &lt;/a&gt;
  Fears
&lt;/h2&gt;

&lt;p&gt;We don't know what will be in the future and maybe terminators will destroy all humans or something like that. For example, such influencers like Elon Musk, Bill Gates, and others think that AI can be a very dangerous thing because if it's growing so fast, it can easily rethink itself and several rules that it had in original code, and who knows that will be next.  AI already doing all the crazy things, like AI that is flying drones or AI that beat humans in games.&lt;/p&gt;

&lt;p&gt;So these are some of the important things to know about AI before it's everywhere and you can't do anything about it anymore. Before AI takes over our life we should understand what AI really is and how helpful it will be for us? So think twice if this technology helps people or destroy them especially old technologies.&lt;/p&gt;

&lt;p&gt;AI will probably take your job so try to learn something new because soon there won't be any jobs at least not with the usual salary. Think carefully about which area suits you best so when AI comes out you can use its benefits instead of getting into trouble.&lt;/p&gt;




</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>career</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Developing A Game Engine with Perl: Part 3 - Hardware Failure &amp; Server Upgrade</title>
      <author>Shawn Holland</author>
      <pubDate>Wed, 01 Dec 2021 01:03:41 +0000</pubDate>
      <link>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-3-hardware-failure-server-upgrade-on1</link>
      <guid>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-3-hardware-failure-server-upgrade-on1</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj"&gt;Remember...&lt;/a&gt; &lt;strong&gt;I DO NOT KNOW WHAT I AM DOING.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Continuing from the &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj"&gt;last article&lt;/a&gt;, let's talk about the hardware failures and server upgrade.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mouse Input Support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hardware Failure&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server Upgrade&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;UEFI vs OpenSuSE Installer&lt;/li&gt;
&lt;li&gt;32bit -&amp;gt; 64bit &amp;amp; Perl's Storable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#all-your-bad-sectors-are-belong-to-us"&gt;
  &lt;/a&gt;
  All your bad sectors are belong to us.....
&lt;/h2&gt;

&lt;p&gt;Ugh, seeing these sort of log errors screams panic to me&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Nov 25 03:44:25 Dev smartd[627]: Device: /dev/sda [SAT], Self-Test Log error count increased from 3 to 4
Nov 25 03:44:25 Dev smartd[627]: Device: /dev/sda [SAT], previous self-test completed with error (read test element)
Nov 25 03:44:25 Dev smartd[627]: Device: /dev/sda [SAT], Failed SMART usage Attribute: 184 End-to-End_Error.
Nov 25 03:44:25 Dev smartd[627]: Device: /dev/sda [SAT], 136 Offline uncorrectable sectors
Nov 25 03:44:25 Dev smartd[627]: Device: /dev/sda [SAT], 136 Currently unreadable (pending) sectors
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My Dev/Test server's hard drive is going bad and I need to deal with this ASAP! It's one of those &lt;a href="https://www.acer.com/ac/en/ID/content/support-product/4000;-;"&gt;all in one PC's Acer makes&lt;/a&gt; You can see it far right, tucked behind the laptops in this pic of my setup.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gh0StCVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t6ca8pe8d1sggz4kj1a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gh0StCVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t6ca8pe8d1sggz4kj1a.jpg" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's been a while since I've had to look at system logs in &lt;a href="https://www.opensuse.org/"&gt;Linux OpenSuSE&lt;/a&gt;. I used to remember just doing a &lt;a href="https://man7.org/linux/man-pages/man1/tail.1.html"&gt;tail -f /var/log/messages&lt;/a&gt; or what ever log file you wanted to watch. I guess at some point since then they switched to using systemd journal service and you can now view everything using &lt;a href="https://documentation.suse.com/es-es/sles/15-SP1/html/SLES-all/cha-journalctl.html"&gt;journalctl&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-can-rebuild-it-we-have-the-technology"&gt;
  &lt;/a&gt;
  We can rebuild it, we have the technology...
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qJEe5LJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfxkmd942pem6o4ggx7y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qJEe5LJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfxkmd942pem6o4ggx7y.gif" alt="Image description" width="334" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is actually OK. I back up my code, so I'm not worried about data loss. Aaaaand... I just so happen to have another Acer computer that has been sitting in a cardboard box in pieces for a long time. Buuut... this other computer is much better spec'd. &lt;/p&gt;

&lt;p&gt;Here you can see a &lt;a href="https://github.com/dylanaraps/neofetch"&gt;neofetch&lt;/a&gt; comparison of the 2 servers side by side. Left is the "new" server, right is the old server with the bad HDD.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j2dXVXrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f70tbyuqndxq3gy3t0p9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j2dXVXrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f70tbyuqndxq3gy3t0p9.jpg" alt="Image description" width="688" height="259"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notable upgrades:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;32bit -&amp;gt; 64bit Architecture&lt;/li&gt;
&lt;li&gt;2 Core -&amp;gt; 4 Core CPU&lt;/li&gt;
&lt;li&gt;4 GB -&amp;gt; 6 GB RAM&lt;/li&gt;
&lt;li&gt;A Very Slow 1 TB -&amp;gt; Much Faster 1.5 TB HDD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm excited mainly for the extra core count for &lt;a href="https://perldoc.perl.org/functions/fork"&gt;forking&lt;/a&gt; and the working hard drive, that is exceptionally faster.&lt;/p&gt;

&lt;p&gt;Running an &lt;a href="http://manpages.org/fio"&gt;fio test&lt;/a&gt; shows dramatic differences in results.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fio --name=randwrite --ioengine=libaio --iodepth=1 --rw=randwrite --bs=4k --direct=0 --size=512M --numjobs=4 --runtime=240 --group_reporting&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Old server write speeds are around 6789kB/s and took a few minutes to run. The new server performs @ 109MB/s and finished the test in a few seconds. I'd say we should see a huge performance increase, and we do! &lt;/p&gt;

&lt;p&gt;The engine can do a lot of writing to the hard drive at times, and I used to see the lag, now... no lag from the hard drive! Nice and quick! Also no bad sectors.&lt;/p&gt;

&lt;p&gt;I've &lt;a href="https://docs.oracle.com/en-us/iaas/Content/Block/References/samplefiocommandslinux.htm"&gt;read somewhere&lt;/a&gt; that you may not want to perform randwrite against a device that is in use... So, be careful. I did it with no apparent problems, and the bad sectors were well before ever running the fio command. &lt;/p&gt;

&lt;p&gt;Let me know if you have any experience with hard drive failure diagnosing and testing write speeds with fio.&lt;/p&gt;

&lt;p&gt;If you have any suggestions or comments please share constructively. Also please visit our social media pages for lots of fun videos and pictures showing the game engine in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/ANSIGameEngine/"&gt;ANSI Game Engine on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/ANSIGameEngine"&gt;ANSI Game Engine on Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-4-uefi-vs-opensuse-installer-5e1c"&gt;Next &amp;gt;&amp;gt; Part 4 - UEFI vs OpenSuSE Installer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
Shawn&lt;/p&gt;

</description>
      <category>perl</category>
      <category>gamedev</category>
      <category>linux</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>You DON'T need these to be a web dev</title>
      <author>Nitzan Hen</author>
      <pubDate>Wed, 01 Dec 2021 00:18:43 +0000</pubDate>
      <link>https://dev.to/nitzanhen/you-dont-need-these-to-be-a-web-dev-c3b</link>
      <guid>https://dev.to/nitzanhen/you-dont-need-these-to-be-a-web-dev-c3b</guid>
      <description>&lt;p&gt;&lt;em&gt;"If you don't know all of these, don't call yourself a web developer"&lt;/em&gt;, followed by some list of web dev related terms. Have you encountered one of these posts before? I come across them every once in a while on social media.&lt;/p&gt;

&lt;p&gt;These sorts of divisive claims bring about nothing but toxicity to our community, and only alienate the junior developers who are new to it. Especially for the profit of some traffic on Twitter or elsewhere, it's despicable.&lt;/p&gt;

&lt;p&gt;They paint a completely wrong image of the web dev scene, too - being a web developer is much more about the perpetual process of self-improving, learning new tools &amp;amp; technologies and experimenting with methods to combine them in the best way, rather than knowing some constant list of terms (which are often occasionally useful at best). And, built on top of the open-source industry, the web dev industry is one of the most welcoming industries out there, to programmers of any caliber.&lt;/p&gt;

&lt;p&gt;So, to be perfectly clear - &lt;strong&gt;you don't need to know &lt;a href="https://stackoverflow.com/questions/111102/how-do-javascript-closures-work"&gt;closures&lt;/a&gt;, &lt;a href="https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/"&gt;the event loop&lt;/a&gt;, &lt;a href="https://www.digitalocean.com/community/tutorials/understanding-hoisting-in-javascript"&gt;hoisting&lt;/a&gt;, etc. to be a web developer&lt;/strong&gt;. The same goes for non-niche concepts &amp;amp; technologies - you can be a good dev without knowing &lt;a href="https://docs.docker.com/get-started/overview/"&gt;Docker&lt;/a&gt;, &lt;a href="https://www.infoworld.com/article/3613715/what-is-functional-programming-a-practical-guide.html"&gt;FP&lt;/a&gt;/&lt;a href="https://searchapparchitecture.techtarget.com/definition/object-oriented-programming-OOP"&gt;OOP&lt;/a&gt; or &lt;a href="https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/"&gt;cloud computing&lt;/a&gt;, for example. Knowledge is always good to have, so if you're not familiar with them you should aspire to learn them sometime, but you can also be a damn good developer without them.&lt;/p&gt;

&lt;p&gt;I think my personal journey is a good indication to this point: I was met with web development close to three years ago, when I began my mandatory service; beforehand I knew some Java, from school and from coding as a hobby. The "tutoring" I received consisted of one half-baked, 30 minute lesson about the basics of HTML, and my "training period" consisted of watching some YouTube tutorials for close to two weeks, after which I was already being assigned tasks (that I was obviously not ready for). &lt;br&gt;
Virtually all of my knowledge and experience was gained on-the-job, much of it through ad-hoc googling, and it was months before I actually went back and strengthened my knowledge on the fundamentals. And, for an even longer time, concepts like &lt;a href="https://www.youtube.com/watch?v=4KHiSt0oLJ0"&gt;CORS&lt;/a&gt;, &lt;a href="https://owasp.org/www-community/attacks/xss/"&gt;XSS&lt;/a&gt; and &lt;a href="https://reactjs.org/docs/faq-internals.html"&gt;Virtual DOM&lt;/a&gt; remained unclear to me.&lt;/p&gt;

&lt;p&gt;It's not like I'm at the top of the industry today (still working on it!) but I've definitely gained a lot of experience and knowledge as a web developer, and have created some awesome projects along the way. &lt;strong&gt;And you can too!&lt;/strong&gt; don't let anybody deter you from it.&lt;/p&gt;

&lt;p&gt;My bottom line is - don't let any random list of technical terms discredit your journey as a developer. &lt;em&gt;Be proud of what you know&lt;/em&gt;, and be curious in what you don't. &lt;/p&gt;

&lt;p&gt;And, perhaps most importantly, be a good person; see people, not their labels, and invest energy in helping them improve instead of discouraging them from doing so.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>It's Advent time</title>
      <author>Chris Jarvis</author>
      <pubDate>Wed, 01 Dec 2021 00:10:04 +0000</pubDate>
      <link>https://dev.to/jarvisscript/its-advent-time-43in</link>
      <guid>https://dev.to/jarvisscript/its-advent-time-43in</guid>
      <description>&lt;p&gt;December is here at that means Advent calendar time. Advent calendars count down till Christmas. They often have candy or small toys. I've used a LEGO Advent calendar the past few years. That was my inspiration for my CSS ugly sweater posts.&lt;/p&gt;

&lt;p&gt;Some developers wanted to join in on the Advent fun so they have made their own software related advents. You can join them, solve some daily puzzles, and learn something new.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advent of Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most well known is the &lt;a href="https://twitter.com/ericwastl"&gt;Eric Wastl's&lt;/a&gt; &lt;a href="https://adventofcode.com/"&gt;Advent of Code&lt;/a&gt; it will start dropping daily challenges at midnight EST December 1. The puzzles are language agnostic. You can solve them in whatever language you want. &lt;/p&gt;

&lt;p&gt;There's usually two brain teasers a day you have to solve the first one to unlock the second. But you don't have to solve December 1 before you open December 2. Coders can jump in at any point to solve a problem. There's a story that join the puzzles together. &lt;/p&gt;

&lt;p&gt;There's a leaderboard and a subreddit. People will be blogging their solutions as well. There's a big community that participates, check your community if you want to collaborate or encourage each other.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advent of Cyber&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tryhackme.com/room/adventofcyber3"&gt;Advent of Cyber&lt;/a&gt; is a Cyber Security daily challenge. You can learn about cyber security in this challenge. You can also win prizes. For each task you solve, you earn a raffle ticket. Prizes will be drawn on the 26th.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advent of CSS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;New this year is &lt;a href="https://www.adventofcss.com/"&gt;Advent of CSS&lt;/a&gt;. A daily CSS challenge by &lt;a href="https://twitter.com/selfteachme_"&gt;Amy Dutton&lt;/a&gt;. The challenges are emailed and you build and share your solutions. The email includes a Figma file, style guide, and hints to help. The basic tier is free but there's a $24 tier that includes the final solution and tutorial. You can order a Bundle with Advent of JS for $39.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advent of JS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Also new is &lt;a href="https://www.adventofjs.com/"&gt;Advent of JS&lt;/a&gt; by &lt;a href="https://twitter.com/jamesqquick"&gt;James Quick&lt;/a&gt;. A daily email challenge for JavaScript. The free tier includes, all the HTML and CSS you need to get started, allowing you to focus on the JavaScript. Plus a brief on how to get started and ways to push yourself.&lt;br&gt;
The $24 level includes final solutions and instructions. You can bundle with the Advent of CSS for $39.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev Advent Calendar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/themarcba"&gt;Marc Backes&lt;/a&gt; &lt;a href="https://github.com/devadvent/readme"&gt;Dev Advent Calendar&lt;/a&gt; will have daily challenges with a chance for a daily prize. Solutions will be submitted via GitHub. Puzzles will be beginner friendly and Christmas themed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UX Mas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.uxmas.com/"&gt;UX Mas&lt;/a&gt; ran a few years ago. It wasn't a challenge but was a UX Calendar with a new UX article posted each day. The site is still up if you want to read about UX.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How am I Participating&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I thought about trying a 24-day blog event with some short posts each day but the job search needed more of my time. I haven't created anything ahead of time. I will do some CSS Ugly sweaters, and some small things but not everyday. &lt;/p&gt;

&lt;p&gt;I am participating in the Advent of CSS and JS but that will be my solutions to the daily challenge and not original content. I may or may not post my solutions daily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-submissions"&gt;
  &lt;/a&gt;
  Your Submissions
&lt;/h2&gt;

&lt;p&gt;Do you know of any more developer related advents? Put them in the comments.&lt;br&gt;
Will you be participating in any of these challenges? Where will you share your solutions?&lt;/p&gt;

&lt;p&gt;Follow the people that built these advent Challenges.&lt;/p&gt;

</description>
      <category>adventofcode</category>
    </item>
    <item>
      <title>When are microservices appropriate?</title>
      <author>Ted Ngeene</author>
      <pubDate>Tue, 30 Nov 2021 23:52:25 +0000</pubDate>
      <link>https://dev.to/tngeene/when-are-microservices-appropriate-g2n</link>
      <guid>https://dev.to/tngeene/when-are-microservices-appropriate-g2n</guid>
      <description>&lt;p&gt;Lately, I've been tending to lean more towards employing a monolithic approach in system architecture. On paper, using micro-services seems like an ideal solution. The fact that you can decouple a project into smaller manageable bits is good. However, from experience and a couple of blog posts and videos I've watched, they do introduce a lot of complexities. Just to mention a few would be; giving database access to a microservice poses major security risks if not properly implemented, error handling, and especially if the said microservice is down would essentially make the system fail, connection error, read timeout, resource not found...you have to deal with many error scenarios.&lt;/p&gt;

&lt;p&gt;I'm not completely against them, for example I believe a microservice should do one thing and do it really well. A good example would be sending sms notifications. This wouldn't really need to interact with any database. Just accept a list of phone numbers and send out the messages.&lt;/p&gt;

&lt;p&gt;So my question is; when are my microservices appropriate and do we really need them as much as folks preach?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>distributedsystems</category>
      <category>watercooler</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Developing A Game Engine with Perl : Part  2 - Mouse Input</title>
      <author>Shawn Holland</author>
      <pubDate>Tue, 30 Nov 2021 23:43:03 +0000</pubDate>
      <link>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj</link>
      <guid>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj</guid>
      <description>&lt;p&gt;Let me start by saying.... &lt;strong&gt;I DO NOT KNOW WHAT I AM DOING.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Literally, developing a game engine is not on my resume... yet! So any code or ways of doing anything you read here, is just what I've figured out and works for me, which by no means should suggest to you that it is the proper way to do what ever it may be. Please consult your local guru first.&lt;/p&gt;

&lt;p&gt;OK, now that we have that established... Please consider the following as entertainment and should you learn along the way with me, that's wonderful!&lt;/p&gt;

&lt;p&gt;Now, by the time of writing this article, I am several months into this undertaking. I'll describe in future posts what the engine is capable of, but for today, let me tell you about what happened over the last 2 weeks. I will likely break them up into separate posts for easier consumption.&lt;/p&gt;

&lt;p&gt;Here's a quick list of the accomplishments, disasters and discoveries.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mouse Input Support&lt;/li&gt;
&lt;li&gt;Hardware Failure&lt;/li&gt;
&lt;li&gt;Server Upgrade&lt;/li&gt;
&lt;li&gt;UEFI vs OpenSuSE Installer&lt;/li&gt;
&lt;li&gt;32bit -&amp;gt; 64bit &amp;amp; Perl's Storable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#mouse-input-support"&gt;
  &lt;/a&gt;
  Mouse Input Support
&lt;/h2&gt;

&lt;p&gt;Yes, that's right, &lt;a href="https://fb.watch/9CgSmojbM1/"&gt;ANSI Game Engine games will be able to use a mouse&lt;/a&gt;. Seems like such a simple concept, that a game engine should have mouse support. And as it turns out, it is. I just hadn't gotten to it until now. You see, my mind-set up to now has been on the idea of &lt;a href="https://en.wikipedia.org/wiki/List_of_BBS_door_games"&gt;BBS door games&lt;/a&gt; So keyboard only input was something I never questioned.... until &lt;a href="https://fb.watch/9Cf-UjDA41/"&gt;I started developing the engine's Editor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At some point I realized the only way to have the capabilities I wanted in the engine, was to design a graphics &amp;amp; meta editor. Which so far turns out to be basically an MSPaint program that draws in ANSI and contains game meta information. Up until now, I have been relying on procedural code / command line utilities (&lt;a href="https://github.com/cslarsen/jp2a"&gt;jp2a&lt;/a&gt;, &lt;a href="https://github.com/hit9/img2txt"&gt;img2txt&lt;/a&gt;) to convert jpeg's, gif's &amp;amp; png's images into ANSI, or 3rd party &lt;a href="http://wiki.synchro.net/resource:ansi_editors"&gt;ANSI drawing programs&lt;/a&gt; like &lt;a href="https://blocktronics.github.io/moebius/"&gt;Moebius ANSI Art Editor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These tools are great for what they can do, unfortunately, they were never intended for such uses as a game engine. So a purpose built ANSI graphics editor that can also store meta and game information was needed.&lt;/p&gt;

&lt;p&gt;I very quickly realized that editing graphics and meta information by keyboard alone was slooooooooooooow!!! Not gonna work, I thought. I mean, yeah, it could be done, but even a single scene image is 132x57 "pixels". And to edit 7,524 cells with just arrow keys... nah son, that aint gonna happen. So time to start reading about mouse input via telnet/terminal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.xfree86.org/current/ctlseqs.html#Mouse%20Tracking"&gt;As it turns out, it's quite a simple process.&lt;/a&gt; All you need to do is send/print one of a few &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code"&gt;ANSI Escape Codes&lt;/a&gt; to the telnet/terminal client and you can get varying levels of detailed mouse input information in return.&lt;/p&gt;

&lt;p&gt;For my application, I needed the most detail, which includes mouse movement, button press, button release and X/Y coordinate information. &lt;/p&gt;

&lt;p&gt;Sending/printing these ANSI escape codes to the telnet/terminal client enables/disables exactly (almost, see limitation on Mouse Button 3 below) what I need.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;my $turn_mouse_on = "\033[?1003h";&lt;/code&gt;&lt;br&gt;
&lt;code&gt;my $turn_mouse_off = "\033[?1003l";&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In Perl, \033 is the escape key. The return I started getting from enabling this was perfect.&lt;/p&gt;

&lt;p&gt;It looked something like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;input: ^[[M 5&amp;lt;&lt;br&gt;
Mouse Button: 0, Line: 28, Column: 21&lt;/p&gt;

&lt;p&gt;input: ^[[M!5&amp;lt;&lt;br&gt;
Mouse Button: 1, Line: 28, Column: 21&lt;/p&gt;

&lt;p&gt;input: ^[[M"5&amp;lt;&lt;br&gt;
Mouse Button: 2, Line: 28, Column: 21&lt;/p&gt;

&lt;p&gt;input: ^[[M#5&amp;lt;&lt;br&gt;
Mouse Button: 3, Line: 28, Column: 21&lt;/p&gt;

&lt;p&gt;input: ^[[M&amp;lt;80&amp;gt;5&amp;lt;&lt;br&gt;
Mouse Button: 96, Line: 28, Column: 21&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First character &lt;code&gt;^[&lt;/code&gt; is escape (\033) followed by [M followed by the mouse button number and X/Y coordinates, all offset by +32.&lt;/p&gt;

&lt;p&gt;What this offset +32 means is, if you take the first example:&lt;br&gt;
&lt;code&gt;input: ^[[M 5&amp;lt;&lt;/code&gt;&lt;br&gt;
you see the first character after [M is a space. If we look up what space is in Dec from an &lt;a href="https://www.ascii-codes.com/#standard_character_set"&gt;ASCII chart&lt;/a&gt; we find space is Dec 32. If we adjust for offset, by subtracting 32, it is a 0. Mouse button 0 is the main left mouse button on my mouse.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mouse Button 0: Left Mouse Click&lt;br&gt;
Mouse Button 1: Middle Mouse Click&lt;br&gt;
Mouse Button 2: Right Mouse Click&lt;br&gt;
Mouse Button 3: Mouse button release&lt;br&gt;
Mouse Button 96: Mouse Move&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not sure if you see the limitation, but Mouse Button 3 is all we get to let us know that a mouse button was let go. Not which mouse button was let go, just that one was. Unfortunately, this is the best I have been able to discover, and works good enough for now.&lt;/p&gt;

&lt;p&gt;Here is a quick snip of code I use to extract the necessary information. Sometimes they come in a string with multiple mouse inputs back to back, especially on mouse movements when buffered over telnet. So I &lt;a href="https://perldoc.perl.org/functions/split"&gt;split the string&lt;/a&gt; on &lt;code&gt;\033[M&lt;/code&gt; first to get an array of mouse inputs, then split each mouse input on every character to get the mouse button and coordinate information. I use &lt;a href="https://perldoc.perl.org/functions/ord"&gt;ord()&lt;/a&gt; to get the Dec value of each ASCII character, then adjust for the offset:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;input: ^[[M&amp;lt;80&amp;gt;3&amp;lt;^[[M&amp;lt;80&amp;gt;4&amp;lt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;my @mouse = split(/\033\[M/,$input);
foreach my $mouse_input (@mouse) {
    my @button_and_coords = split(//, $mouse_input);
    my $mouse_button = ord($button_and_coords[0]) - 32;
    my $column       = ord($button_and_coords[1]) - 32;
    my $line         = ord($button_and_coords[2]) - 32;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I've &lt;a href="https://man7.org/linux/man-pages/man4/console_codes.4.html"&gt;read somewhere in a man page&lt;/a&gt; that you shouldn't put terminal controls into code, and should opt for using a &lt;a href="https://en.wikipedia.org/wiki/Ncurses"&gt;library, such as ncurses&lt;/a&gt;. I probably should as well, but I'm still learning and enjoy working directly with the codes today.&lt;/p&gt;

&lt;p&gt;Let me know if you have had any experience coding for using mouse in a terminal and if you've used a library like &lt;a href="https://metacpan.org/pod/Curses"&gt;Curses cpan module for Perl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any suggestions or comments please share constructively. Also please visit our social media pages for lots of fun videos and pictures showing the game engine in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/ANSIGameEngine/"&gt;ANSI Game Engine on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/ANSIGameEngine"&gt;ANSI Game Engine on Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-3-hardware-failure-server-upgrade-on1"&gt;Next &amp;gt;&amp;gt; Part 3 - Hardware Failure &amp;amp; Server Upgrade&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
Shawn&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Get your open source project featured on GitHub</title>
      <author>Michelle Mannering</author>
      <pubDate>Tue, 30 Nov 2021 23:28:48 +0000</pubDate>
      <link>https://dev.to/github/get-your-open-source-project-featured-on-github-1n06</link>
      <guid>https://dev.to/github/get-your-open-source-project-featured-on-github-1n06</guid>
      <description>&lt;p&gt;Each month, GitHub publishes a &lt;a href="https://github.blog/?s=release+radar"&gt;Release Radar&lt;/a&gt;. Top community projects who have shipped major version releases during the previous month are featured on the blog post.&lt;/p&gt;

&lt;p&gt;Now, this is your chance to submit your project to be featured. We've launched an open source repo where you can find information on the Release and submit your open source project to be considered.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-be-featured-on-the-release-radar"&gt;
  &lt;/a&gt;
  How to be featured on the Release Radar
&lt;/h2&gt;

&lt;p&gt;If you are a maintainer or contributor of an open source project, or you come across an awesome open source project, submit it! Head over to the new &lt;a href="https://releaseradar.github.com"&gt;GitHub Release Radar repo&lt;/a&gt; and &lt;a href="https://github.com/github/release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;open an issue&lt;/a&gt;. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/github"&gt;
        github
      &lt;/a&gt; / &lt;a href="https://github.com/github/release-radar"&gt;
        release-radar
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Repo for submission of projects to consider for the GitHub Release Radar 📡
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
GitHub Release Radar&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/mishmanners/github-release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;Submit your release for consideration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repo is designed to collect projects to consider for the &lt;a href="https://github.blog/?s=release+radar" rel="nofollow"&gt;GitHub Release Radar&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/36594527/141879290-ffbc7a47-6843-4122-990b-684c4b885dbf.png"&gt;&lt;img width="700" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mcin9T0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/36594527/141879290-ffbc7a47-6843-4122-990b-684c4b885dbf.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The GitHub Release Radar is a post written on the GitHub blog each month to showcase community projects that have shipped major version releases. A post is shipped at the start of the month showcasing community projects from the previous month.&lt;/p&gt;
&lt;p&gt;If you're a maintainer, or a contributor of an open source project, and you have a major version release that shipped, we'd love to hear from you.&lt;/p&gt;
&lt;p&gt;We can't promise we can feature all projects, but we would love to consider your project.&lt;/p&gt;
&lt;p&gt;Fill out this &lt;a href="https://github.com/mishmanners/github-release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;issue&lt;/a&gt; to be considered.&lt;/p&gt;
&lt;p&gt;If you have questions, check out the &lt;a href="https://github.com/mishmanners/github-release-radar/blob/main/faq.md"&gt;FAQs&lt;/a&gt;, or get in touch.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/github/release-radar"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;In the issue, fill out as much information as possible. The more information you include, the more likely we are to feature you. Side note, we're using &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/syntax-for-issue-forms"&gt;GitHub Issue forms&lt;/a&gt; to collect information. &lt;a href="https://dev.to/github/how-to-build-google-like-forms-with-github-3ig2"&gt;You can create these forms too&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We get a lot of submissions each month. So while we can't promise we can feature all projects, we would love to consider your project. There are other opportunities to be featured on GitHub videos, &lt;a href="https://twitter.com/github/status/1465410387134849027"&gt;social media posts&lt;/a&gt;, and more.&lt;/p&gt;

&lt;p&gt;We also have a video released which goes out as part of the Release Radar each month. So there's lots of platforms for you to get eyes on your project 👀.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/7d50L0kJncw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So if you're thinking about it, don't think. Just &lt;a href="https://github.com/github/release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;submit&lt;/a&gt; 💥&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-a-major-version-release"&gt;
  &lt;/a&gt;
  What's a major version release?
&lt;/h2&gt;

&lt;p&gt;The question we get asked the most, is "what's a major version". Each month we feature projects who shipped major version releases. Major version releases are usually x.0, ie. 1.0, 2.0 etc. But not everyone's major versions will follow this format.&lt;/p&gt;

&lt;p&gt;We also get loads of submissions, so we'll often favour x.0 releases. However, if you have a x.x release with major (or big) changes we'll also consider it.&lt;/p&gt;

&lt;p&gt;What's considered a "major" or "big" change is up to you. It's your open source project; whether you're a maintainer or contributor. If you think it's big, &lt;a href="https://github.com/github/release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;submit it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more answers regarding submissions and the Release Radar, please check out the &lt;a href="https://github.com/github/release-radar/blob/main/faq.md"&gt;FAQs on the repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;✨ Looking forward to seeing your submissions coming through ✨&lt;/p&gt;

</description>
      <category>contributorswanted</category>
      <category>opensource</category>
      <category>github</category>
      <category>news</category>
    </item>
    <item>
      <title>Beautiful Android Apps</title>
      <author>Moritz Ruth</author>
      <pubDate>Tue, 30 Nov 2021 23:26:08 +0000</pubDate>
      <link>https://dev.to/moritzruth/beautiful-android-apps-14cg</link>
      <guid>https://dev.to/moritzruth/beautiful-android-apps-14cg</guid>
      <description>&lt;p&gt;This is a list of Android apps I found over the years which have a pretty UI and good UX. I will update it whenever I find a new app that matches these criteria.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.xaviertobin.noted"&gt;&lt;strong&gt;Bundled Notes&lt;/strong&gt;&lt;/a&gt;: Notes in folders + tags. Especially the animations are really good.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=widget.dd.com.overdrop.free"&gt;&lt;strong&gt;Overdrop&lt;/strong&gt;&lt;/a&gt;: It’s a weather app.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.alt.goodmorning"&gt;&lt;strong&gt;Routinery&lt;/strong&gt;&lt;/a&gt;: Keep track of your habits.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.awedea.nyx"&gt;&lt;strong&gt;Nyx Music Player&lt;/strong&gt;&lt;/a&gt;: A music player with an organic design.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.tombayley.volumepanel"&gt;&lt;strong&gt;Volume Styles&lt;/strong&gt;&lt;/a&gt;: Customize your volume sliders.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=me.zhanghai.android.files"&gt;&lt;strong&gt;Material Files&lt;/strong&gt;&lt;/a&gt;: It’s a file manager.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.pavelrekun.skit"&gt;&lt;strong&gt;Skit&lt;/strong&gt;&lt;/a&gt;: Provides useful utilities for managing your installed apps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Chooloo/koler"&gt;&lt;strong&gt;Koler&lt;/strong&gt;&lt;/a&gt;: A replacement for the default phone app.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tachiyomi.org/"&gt;&lt;strong&gt;Tachiyomi&lt;/strong&gt;&lt;/a&gt;: Manga reader.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/MuntashirAkon/Metro"&gt;&lt;strong&gt;Metro&lt;/strong&gt;&lt;/a&gt;: A Material Design music player.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=moe.shizuku.privileged.api"&gt;&lt;strong&gt;Shizuku&lt;/strong&gt;&lt;/a&gt;: Makes it easy for app developers to use privileged APIs.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>android</category>
      <category>list</category>
    </item>
    <item>
      <title>A Deep Dive Into Video Auto-Tagging
</title>
      <author>Prosper Otemuyiwa</author>
      <pubDate>Tue, 30 Nov 2021 22:49:39 +0000</pubDate>
      <link>https://dev.to/unicodeveloper/a-deep-dive-into-video-auto-tagging-3i4k</link>
      <guid>https://dev.to/unicodeveloper/a-deep-dive-into-video-auto-tagging-3i4k</guid>
      <description>&lt;p&gt;Video is one of the best ways for capturing audience attention. Product demonstrations, property tours, tutorials, and keynotes all make great content—provided that they’re readily searchable by your team and visitors alike. Even though tagging and categorization help organize videos and make them easy to find, the labeling process is labor intensive, taking time away from key tasks like creating new videos.&lt;/p&gt;

&lt;p&gt;The solution? Automation. Through machine learning (ML) algorithms, Cloudinary’s  &lt;a href="https://cloudinary.com/blog/new_google_powered_add_on_for_automatic_video_categorization_and_tagging"&gt;video-tagging&lt;/a&gt; feature &lt;strong&gt;automatically&lt;/strong&gt; detects video content. Video tagging extends image classification to image sequences, capable of detecting types of scenes (cities, mountains, the seaside) and objects (people, cars), and even inferring whether the content is appropriate for public viewing. Additionally, with video auto-tagging supplemented by detailed labels, you can moderate videos and automatically determine the minimum age for viewers.&lt;/p&gt;

&lt;p&gt;Video auto-tagging benefits a wide range of apps. For example: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For a basketball game, auto-tagging can identify which player has the ball and for how long. The team can then make use of that information in optimizing its game strategy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For personal protective equipment, such as face masks or hand covers, auto-tagging can help you pinpoint and recognize human emotions, automatically detecting if the people in a video are happy or sad, for example.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those capabilities might be highly challenging to implement, however. Gratifyingly, many major IT companies have recognized the need, offering various cloud services with AI-powered image and video analysis. Nonetheless, because each provider has its own programming interfaces or SDKs, you must use several completely different toolsets, complicating the workflow.&lt;/p&gt;

&lt;p&gt;Cloudinary’s convenient API simplifies video tagging through automation. You can decide which underlying tagging engine to use through the API and combine various services to further improve the tagging performance. This tutorial cites several use cases to which video tagging adds value, and steps you through an example that explains how to use Cloudinary’s API with the JavaScript client library. To follow this tutorial, you just need basic familiarity with HTML and JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#organization-of-media-library"&gt;
  &lt;/a&gt;
  Organization of Media Library
&lt;/h2&gt;

&lt;p&gt;Large companies often store hundreds or even thousands of videos in their website’s media library, which is a pain to organize. Organizing by file name or upload date is straightforward but unhelpful. Organizing through tagging, i.e., grouping videos by category, is much more effective. Instead of sorting videos into a single folder structure based on one basic property, you organize them by tag category, sorting footage by attribute, such as the featured product, location type, and color scheme. &lt;/p&gt;

&lt;p&gt;The process of manually adding descriptions and tagging is arduous and time consuming, however. Auto-tagging categorizes videos automatically, making it easy to quickly find what you and your app users are looking for. The technology, which relies on artificial intelligence (AI) trained on large datasets, automatically recognizes and labels objects, such as cars and animals; attributes, such as color; and sentiments, such as adventure. Cloudinary, for example, combines AI from Google and other sources to automatically label the objects in your videos as you upload them, making tagging as simple and efficient as possible. &lt;/p&gt;

&lt;p&gt;To work with the Cloudinary API, start by &lt;a href="https://cloudinary.com/documentation/upload_images"&gt;uploading your media assets&lt;/a&gt;. (Note that even though that post refers to examples on image upload, they apply to videos, too.) During the upload, you can specify the public identifier (ID) of your assets and divide them into folders to create structured delivery URLs. Alternatively, you can group the assets in folders and subfolders, organizing the media library according to the same structure as your on-premise server.&lt;/p&gt;

&lt;p&gt;While uploading media to Cloudinary, you can also apply transformations, e.g., on-the-fly video encoding and delivery, transcoding, resizing, and cropping, which can convert videos to animated images and even add blurred backgrounds. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useruploaded-content"&gt;
  &lt;/a&gt;
  User-Uploaded Content
&lt;/h2&gt;

&lt;p&gt;For all that user-uploaded content enhances your website, you cannot assume that your users are as knowledgeable and skilled as your internal team or that they would mount the level of effort for tagging and descriptions. For instance, if you’re running a real-estate website, users would upload videos of their property but might not accurately tag all the elements in the video. Instead, you can rely on auto-tagging to find objects like "pool" and "palm tree," which certain house shoppers might be looking for. Those tags greatly improve the listing’s discoverability and searchability. &lt;/p&gt;

&lt;p&gt;Another example: Consider an animal shelter that posts videos of animals that are up for adoption. Instead of having to manually type in a comprehensive set of tags for each animal, the staff needs to enter only the basic information, based on which the auto-tagging capability can figure out the animal type (like cat, dog, hamster, or horse), color, and other attributes.&lt;/p&gt;

&lt;p&gt;Any web app into which users can upload their media can benefit from the Cloudinary API, saving you the time and effort of building the capabilities yourself: upload, transformation, storage, and so on. Another alternative is to adopt serverless approaches like AWS Lambda or Azure Functions, which is easier than manual tagging. However, processing large videos with those services is either impossible (Lambda has an execution-time limit) or expensive (you pay for the execution time—the long tasks incur significantly higher costs). Ultimately, Cloudinary is the best answer for processing and tagging videos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#autotagging-in-action"&gt;
  &lt;/a&gt;
  Auto-Tagging in Action
&lt;/h2&gt;

&lt;p&gt;The demo below, which makes use of a &lt;a href="https://www.pexels.com/video/a-giraffe-walking-in-the-wilderness-5220298/"&gt;Pexels video&lt;/a&gt; of a giraffe in the wild, shows you how to use Cloudinary’s video-tagging feature with the JavaScript SDK. &lt;/p&gt;

&lt;p&gt;First, upload the video with the &lt;a href="https://cloudinary.com/documentation/image_upload_api_reference"&gt;upload method&lt;/a&gt; or the &lt;a href="https://cloudinary.com/documentation/upload_widget"&gt;Cloudinary upload widget&lt;/a&gt; on the Cloudinary portal. Here, you use the upload widget to access the advanced video uploader. Integrate the upload widget with your site by referencing the &lt;a href="https://widget.cloudinary.com/v2.0/global/all.js"&gt;JavaScript&lt;/a&gt;. Afterwards, you can use the various &lt;a href="https://cloudinary.com/documentation/upload_widget_reference#initialization_methods"&gt;widget initialization methods&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The upload widget supports signed and unsigned uploads. For this demo, use unsigned uploads, which require the upload preset. See the &lt;a href="https://cloudinary.com/documentation/upload_presets"&gt;related documentation&lt;/a&gt; on how to create an unsigned preset in the Cloudinary management console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YyVrh903--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/upload_preset_auto_tag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YyVrh903--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/upload_preset_auto_tag.png" alt="Upload preset" width="704" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When configuring the upload preset, you can also enable video auto-tagging on upload, setting your preference for how “confident” you want the algorithm to be before applying a tag.To do so, click the &lt;strong&gt;Media analysis and AI&lt;/strong&gt; tab of your preset, choose a categorization engine (for example, Google Automatic Video Tagging), and set the auto-tagging threshold (0.5), which denotes 50% confidence, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k5RHNFI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/edit-auto-tagging_preset.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k5RHNFI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/edit-auto-tagging_preset.png" alt="Edit Preset" width="512" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, proceed to implementation. See the complete source code &lt;a href="https://github.com/dawidborycki/Cloudinary-VideoAutoTagging-JS"&gt;on GitHub&lt;/a&gt;. Follow these steps:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Create a simple HTML page that references the Cloudinary widget scripts and that contains a button serving as the upload widget’s opener. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Video auto-tagging&amp;lt;/title&amp;gt;

    …
    &amp;lt;script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"&amp;gt;&amp;lt;/script&amp;gt;        
&amp;lt;/head&amp;gt;

&amp;lt;body class="w3-black"&amp;gt;
    &amp;lt;div class="w3-container"&amp;gt;
       &amp;lt;h1&amp;gt;Video auto-tagging&amp;lt;/h1&amp;gt;
       &amp;lt;hr /&amp;gt;

       &amp;lt;button id="upload_widget_opener" class="w3-button w3-orange"&amp;gt;
           Upload video file...
       &amp;lt;/button&amp;gt;        

       &amp;lt;a id="info_link" href="" target="_blank"&amp;gt;Click to get info&amp;lt;/p&amp;gt;       
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add custom JavaScript to handle the logic. Here, you create the upload widget and then store the reference to it under the &lt;code&gt;uploadWidget&lt;/code&gt; variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var uploadWidget = cloudinary.createUploadWidget({
    cloudName: '&amp;lt;YOUR_CLOUD_NAME&amp;gt;',
    uploadPreset: 'autotagging-preset',
    sources: [
        'local'
    ],
    cropping: false,
    multiple: false,
    styles: {
    palette: {
        window: "#10173a",
            sourceBg: "#20304b",
            windowBorder: "#7171D0",
            tabIcon: "#79F7FF",
            inactiveTabIcon: "#8E9FBF",
            menuIcons: "#CCE8FF",
            link: "#72F1FF",
            action: "#5333FF",
            inProgress: "#00ffcc",
            complete: "#33ff00",
            error: "#cc3333",
            textDark: "#000000",
            textLight: "#ffffff"
        }
    }
}, (error, result) =&amp;gt; uploadCallback(error, result));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Generate the above code on Cloudinary’s &lt;a href="https://demo.cloudinary.com/uw/#/"&gt;Upload Widget Demo page&lt;/a&gt; to visually configure the widget and get the corresponding configuration code. &lt;/p&gt;

&lt;p&gt;Show the widget by calling the &lt;code&gt;open&lt;/code&gt; method, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$('#upload_widget_opener').click(() =&amp;gt; { 
    uploadWidget.open();        
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Click the &lt;strong&gt;Upload video file&lt;/strong&gt; button. The app then displays the upload widget:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7l4CzBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/upload-widget.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7l4CzBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/upload-widget.png" alt="upload widget" width="512" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Implement the &lt;code&gt;uploadCallback&lt;/code&gt; function, which is invoked by the upload widget for specific events, for example, when the asset is uploaded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function uploadCallback(error, result) {         
    if (!error &amp;amp;&amp;amp; result &amp;amp;&amp;amp; result.event === "success") {   

        // Cloudinary API info
        const apiKey = '&amp;lt;YOUR_API_KEY&amp;gt;';
        const apiSecret = '&amp;lt;YOUR_SECRET&amp;gt;';
        const baseUrl ='api.cloudinary.com/v1_1/&amp;lt;YOUR_CLOUD_NAME&amp;gt;/resources/video/upload/';

        const url = 'https://' + apiKey +':' + apiSecret 
            + '@' + baseUrl + result.info.public_id;

        $infoLink.attr("href", url);
        $infoLink.show();
    }    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the callback creates the URL to upload resources. The URL is supplemented by basic authorization (Cloudinary’s API and secret) and is displayed as an HTML tag next to the &lt;strong&gt;Upload video file&lt;/strong&gt; button (see the screenshot above). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Click the generated URL for details on the resource along with the video tags in JSON format, for example: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BT4fYKMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/auto-tag_json.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BT4fYKMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/auto-tag_json.png" alt="JSON" width="880" height="205"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As shown, Cloudinary successfully tagged the giraffe video with the appropriate keywords, from the type of animal to the type of environment, and to helpful words like the activity “safari” and the sentiment “adventure.” With those useful tags, giraffe fans, students who are studying grasslands, and adventure-seeking travelers can all readily find and enjoy the video.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Initially, the categorization section might be pending since the tagging might take some time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;Tools like Cloudinary save you innumerable hours of manual labor. Not only does auto-tagging enable you and your team to stay organized, it also helps your audience find videos through which they can become acquainted with your goods and services on a deeper level than with images and text alone.&lt;/p&gt;

&lt;p&gt;Now that you know how easy it is to use Cloudinary’s upload widget to automatically tag videos, why not incorporate this feature into your own app? Uploading your videos and encouraging your users to share theirs helps the audience find what they need: from adventure seekers in search of wildlife to homeowners looking for decorative trim and picture windows, and to pet lovers finding their lifelong companion.&lt;/p&gt;

&lt;p&gt;Do give auto-tagging a try and discover how Cloudinary can enhance your app’s videos. Start by &lt;a href="https://cloudinary.com/users/register/free"&gt;signing up for a free account&lt;/a&gt; along with free credits.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>video</category>
      <category>media</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
