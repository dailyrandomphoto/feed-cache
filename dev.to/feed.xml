<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Crypto Exchange App Development</title>
      <author>tommylanis</author>
      <pubDate>Mon, 01 Nov 2021 13:52:09 +0000</pubDate>
      <link>https://dev.to/tommylanis/crypto-exchange-app-development-54aa</link>
      <guid>https://dev.to/tommylanis/crypto-exchange-app-development-54aa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#about-cryptocurrency"&gt;
  &lt;/a&gt;
  About cryptocurrency
&lt;/h2&gt;

&lt;p&gt;A cryptocurrency is a form of payment that can be exchanged online for goods and services. Many companies have issued their own currencies, often called tokens, and these can be traded specifically for the good or service that the company provides. You’ll need to exchange real currency for the cryptocurrency to access the good or service.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m_T3QhtQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub9vo2rgepls4u9hxc5n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_T3QhtQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub9vo2rgepls4u9hxc5n.png" alt="Crypto exchange app development" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-crypto-exchange-development"&gt;
  &lt;/a&gt;
  What is Crypto exchange development?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency transactions are recorded on the Blockchain, paving the way for decentralized value exchange. A Cryptocurrency Exchange platform enables buyers &amp;amp; sellers to exchange their coins with other coins, or to further sell or buy the cryptocurrency with the market trends.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types-of-crypto-exchanges"&gt;
  &lt;/a&gt;
  Types of Crypto Exchanges
&lt;/h3&gt;

&lt;p&gt;Ideally, there are three kinds of exchanges; namely: &lt;br&gt;
• Centralized, &lt;br&gt;
• Decentralized, and &lt;br&gt;
• Hybrid&lt;br&gt;
It is essential to know the difference between the three to best suit your operations.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---18IqLLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuqav8b7mqnaoyl5doey.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---18IqLLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuqav8b7mqnaoyl5doey.png" alt="How do you make a crypto exchange app" width="800" height="527"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-make-a-crypto-exchange-app"&gt;
  &lt;/a&gt;
  How do you make a crypto exchange app?
&lt;/h2&gt;

&lt;p&gt;Starting a crypto exchange involves six basic steps:&lt;br&gt;
1)  Decide where you want to do business: Defining the scope for where your app will be made available to operate is the first important thing to consider. Ideally, you can confine your app to a region, a country, a continent, or globally. However, with expanding scope, the need for licensing increases. Moreover, with expanding borders, the laws of the countries vary. To operate an app across various regions and borders, it is best to take expert advice on local and national laws.&lt;br&gt;
2)  Learn about relevant regulations in that area: The world is distributed in borders and governments. And all these governments require certain compliance when it comes to financial matters and money exchanges. Most institutions need businesses to comply with the Know Your Customers (KYC) policy. Under these policies, any customer interacting with a business has to verify themselves by providing their identity documents. The purpose here is to discourage money laundering and corruption. Given the decentralized nature of Bitcoin exchanges, it, indeed, becomes even more necessary. &lt;br&gt;
3)  Partner with a bank or payment processor: It is important to give your customers as many options as you can when it comes to payment options—withstanding that these payment options run smoothly and dictate the least errors. &lt;br&gt;
4)  Establish a transaction history and liquidity on the exchange: It is instilling trust and confidence in customers to make any business venture a success. Especially when it is about money, it becomes even more crucial. Managing and creating liquidity can solve the problem and spark confidence. Any customer would be hesitant to interact or place orders unless they see more activity.&lt;br&gt;
5)  Implement the best security practices: With platforms like a Bitcoin exchange, which is an investment commodity, users’ data is important to keep safe.&lt;br&gt;
6)  Offer customer support: Taking care of your customers and their troubles is important. In addition, regular, follow-up and feedback are vital to regulating. Once the business starts thriving, the operators usually forget about their customers’ problems. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iinhb33r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbhvm5bn16hxm1pusdje.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iinhb33r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbhvm5bn16hxm1pusdje.png" alt="What Does a Cryptocurrency Exchange App Do" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-a-cryptocurrency-exchange-app-do"&gt;
  &lt;/a&gt;
  What Does a Cryptocurrency Exchange App Do?
&lt;/h2&gt;

&lt;p&gt;For those unaware, cryptocurrency exchange apps help you with quick access to various cryptos available in the market and let you trade (buy and sell) them on the go. You don’t have to mine cryptos using laptops. Instead, these apps are facilitating your wish to trade in cryptos and enter the world of decentralized digital currency networks. The whole process has been simplified for anyone to sign up, and the mobile app interface caters to quick learning. You have crypto exchange apps for mobile available on Google Play Store and Apple App Store that work on Android and iOS phones respectively.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-the-best-crypto-apps"&gt;
  &lt;/a&gt;
  Features of the best crypto apps:
&lt;/h3&gt;

&lt;p&gt;There are several great cryptocurrency apps on the market. To choose the right one, you'll need to decide on which features matter most to you.&lt;br&gt;
Here are a few to consider:&lt;br&gt;
• Security: Look at the exchange's security features to see how many of its assets are kept offline in cold storage, whether it has private insurance, and whether it is part of a bug bounty program that encourages ethical hackers to report any weaknesses. You can also find out whether the exchange has ever been hacked.&lt;br&gt;
• Customer service: If you're new to cryptocurrency investing, 24/7 customer service is a must. Nobody wants to wade through pages of FAQ to get help because money hasn't arrived in their account.&lt;br&gt;
• Range of currencies: There are over 4,000 cryptocurrencies, but even big exchanges only offer 50 to 150 coins. On most platforms, you'll likely be able to buy Bitcoin and one or two other major currencies. But if you want to buy a specific currency or plan to invest in some of the smaller coins, you'll need an exchange that has some variety.&lt;br&gt;
• Ease of use: Cryptocurrency apps have developed rapidly as more people want to invest. However, at times that fast development has come at the cost of user-friendliness. Make sure the app has the features you want to use, and if you've never traded before, pick one that is beginner-friendly.&lt;br&gt;
• Fees: Paying unnecessary fees is throwing money away, whether you're choosing a bank, a brokerage, or the best cryptocurrency app. Check how much it costs to deposit, withdraw, and trade before you open an account. It's also worth checking the withdrawal and deposit options to make sure they work for you.&lt;br&gt;
• Research: Cryptocurrencies are a relatively new kind of investment, so the more you can learn, the better. Some apps include cryptocurrency learning centers as well as information on specific coins.&lt;br&gt;
• Interest earning: Several cryptocurrency exchanges offer ways to earn interest on your coins. Make sure you understand and are comfortable with how the interest is generated. The exchange may loan out your money, or it may pay you staking fees if you commit to leaving your coins alone for a set period.&lt;br&gt;
• Location: Some exchanges cannot operate in every U.S. state. Make sure the exchange you choose covers your state.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7nDKfyWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo946ohuznlja5mk3g3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7nDKfyWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo946ohuznlja5mk3g3w.png" alt="Security Features of Crypto Exchange App Development" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-features-of-crypto-exchange-app-development"&gt;
  &lt;/a&gt;
  Security Features of Crypto Exchange App Development
&lt;/h3&gt;

&lt;p&gt;• Two-Factor Authentication (2FA)&lt;br&gt;
• DDOs Withstand Ability&lt;br&gt;
• Jail Login Method&lt;br&gt;
• Escrow Management&lt;br&gt;
• Firebase, Firewall Implementation&lt;br&gt;
• End-To-End Encrypted Transactions&lt;br&gt;
• SSL Integration&lt;br&gt;
• Encrypted Crypto Wallets&lt;br&gt;
• Anti-Phishing Software&lt;br&gt;
• Multi-Sig Wallets&lt;br&gt;
• Browser Detection Security&lt;br&gt;
• KYC and AML Verification&lt;br&gt;
• DB Encryption&lt;br&gt;
• CSRF Protection&lt;br&gt;
• Decentralized Data Handling&lt;br&gt;
• IP Login Restriction&lt;br&gt;
• Regular Security Audits&lt;br&gt;
• Face &amp;amp; Fingerprint ID&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-a-crypto-exchange-app-development-works"&gt;
  &lt;/a&gt;
  How a crypto Exchange App Development Works?
&lt;/h2&gt;

&lt;p&gt;A Crypto exchange app is an intermediary between sellers and buyers. It acts as a brokerage, allowing users to deposit money from a bank or other means of deposit. If a user wants to trade between cryptocurrencies, the exchange app charges a currency conversion fee. Let’s try to understand the Crypto Exchange app working model with basic steps to complete a transaction on a cryptocurrency exchange.&lt;br&gt;
For any crypto trade on an exchange platform, a user must register and go through a set of verification steps to authenticate their identity.&lt;br&gt;
After the successful user authentication, the user gets an account to deposit their money before buying digital coins.&lt;br&gt;
Different crypto exchange software contains other user deposit methods, including direct bank transfers, bank wires, debit or credit cards, PayPal, etc. Using the same options, traders can withdraw money from their crypto exchange accounts.&lt;br&gt;
Bitcoin or any crypto exchange platforms match buyers and sellers, also known as takers and makers (in cryptocurrency language). The platform works similarly to a traditional stock exchange. Traders choose to buy and sell bitcoin by inserting either a market order (buy/sell immediately, regardless of price) or a limit order (buy/sell at a specific price or better).&lt;br&gt;
All crypto exchange apps charge transaction and funds transfer fees. The fee applied to each buy or sell order depends on the trading volume. In addition, the platform may charge currency conversion fees based on currencies accepted by the platform. &lt;br&gt;
Now that you know Crypto Exchange’s working flow, understanding its development would be much easier. So, without further ado, let us move on to the main part of the post.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0vjNY91e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22nwfqbvoudaz02500e8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0vjNY91e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22nwfqbvoudaz02500e8.png" alt="Best Crypto Exchange App Development" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-best-crypto-exchange-app-development"&gt;
  &lt;/a&gt;
  What Is the Best Crypto Exchange App Development?
&lt;/h2&gt;

&lt;p&gt;Here I have listed out Ready-Made Clone App development. They are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Binance clone App: Binance clone app is ready to market, bug-free, tested, source code to launch exchange-like Binance. Binance Clone App has advanced features and functionalities to facilitate hassle-free trading with a robust trade engine, intuitive UI/UX to launch crypto exchange-like Binance in a short time. The companies provide a customized Binance clone app based on the business conditions. Start your Binance exchange with white-label Binance clone app that empowers the quality of trading ventures efficiently.&lt;/li&gt;
&lt;li&gt;Coinbase clone app:  Coinbase clone app is a ready-made, secure, customizable, and multi-tested clone app that is an exact replica of a popular cryptocurrency exchange - Coinbase. The app is scripted without infringing the copyright violations of the original software, imbibed with all the essential features of Coinbase.&lt;/li&gt;
&lt;li&gt;Okex clone app:  With more than 350 ways to buy and sell cryptocurrencies, it is the best choice for starting your decentralized cryptocurrency exchange platform. Your user can buy, spend, trade, or convert the cryptocurrencies as per their trading desire with Okex clone app. Initiate your Okex clone app-based exchange platform immediately with the best technologies.&lt;/li&gt;
&lt;li&gt;Paxful clone app: Paxful clone app is the clone software of the Paxful cryptocurrency exchange. This clone app follows a similar preface of Paxful with some unique features. It is a ready-made clone app software that can help client to start their cryptocurrency exchange business right away. This clone app is open to customization. This allows clients to do certain modifications based on business requirements. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-cost-to-develop-a-crypto-exchange-application-development"&gt;
  &lt;/a&gt;
  The Cost to Develop a Crypto Exchange Application Development
&lt;/h2&gt;

&lt;p&gt;The crypto exchange app development cost is a variable factor. It varies depending on some of your requirements, choices, and development rate. For example, the below requirements or preferences may affect your budget.&lt;br&gt;
• The business model for crypto exchange app (centralized, decentralized, or peer-to-peer),&lt;br&gt;
• The number of features to build in the exchange software,&lt;br&gt;
• Technology stack to develop secured exchange&lt;br&gt;
• Platforms to deploy the exchange: Android, iOS, or Web&lt;br&gt;
• Third-party APIs to integrate into the platform&lt;/p&gt;

&lt;p&gt;Now, the team you need to create a crypto exchange application includes:&lt;br&gt;
• Backend &amp;amp; iOS/Android developers &lt;br&gt;
• Frontend developers&lt;br&gt;
• Graphic Designer&lt;br&gt;
• Quality Analysis&lt;br&gt;
• Project Manager to create and manage project milestones&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;Following the above description in mind, it may seem hard at first, but if you look into the future, the deposit required to produce a cryptocurrency exchange app will offer substantial profit earnings. Its success isn’t contingent on the exchange rate and cryptocurrency state. It’s difficult to predict any currency’s course. The only certainty is that the popularity of cryptocurrency will continue to rise over the next several years, and all market tendencies, be it positive or negative, will result in greater interest in these platforms. To summarize, this cryptocurrency exchange app isn’t contingent on cryptocurrency vacillating course since it is only dependent on transactions of trade which will remain intact forever.&lt;/p&gt;

</description>
      <category>app</category>
      <category>blockchain</category>
      <category>exchange</category>
    </item>
    <item>
      <title>P2P Crypto Exchange Script</title>
      <author>mia milinkovic</author>
      <pubDate>Mon, 01 Nov 2021 13:46:12 +0000</pubDate>
      <link>https://dev.to/milinkovicmia/p2p-crypto-exchange-script-3poe</link>
      <guid>https://dev.to/milinkovicmia/p2p-crypto-exchange-script-3poe</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-the-p2p-crypto-exchange"&gt;
  &lt;/a&gt;
  What is the P2P crypto exchange?
&lt;/h2&gt;

&lt;p&gt;Peer-to-peer (P2P) or' decentralized 'exchanges are managed completely by the software and the owner of the exchange. Also is a platform for buyers and sellers to directly transfer cryptocurrencies to the individual accounts.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EDVSBlUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zip8j02e3s532n0i3rv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EDVSBlUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zip8j02e3s532n0i3rv9.png" alt="P2P crypto exchange" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
P2P crypto exchange platform avoids intermediaries to send and receive digital currencies without compromising on the seamless experience for trading. P2P exchanges permit market participants to trade directly with each other without any reliable third party to process all trades.&lt;br&gt;
This alternative approach has a number of comparative advantages, as well as downsides. Overall, peer-to-peer cryptocurrency exchanges are vivid examples of the decentralization philosophy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-p2p-crypto-work"&gt;
  &lt;/a&gt;
  How does P2P crypto work?
&lt;/h2&gt;

&lt;p&gt;P2P crypto exchanges allow users to buy or sell directly with another user. Unlike centralized exchanges where you have to complete KYC to process an order, most P2P exchanges allow you to send/receive cryptocurrencies without asking you for identity verification.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FpD-HJbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dndz8q7qah2npsleiytp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpD-HJbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dndz8q7qah2npsleiytp.png" alt="Advantages of P2P Crypto Exchanges" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-p2p-crypto-exchanges"&gt;
  &lt;/a&gt;
  Advantages of P2P Crypto Exchanges:
&lt;/h3&gt;

&lt;p&gt;• Desired Trading&lt;br&gt;
• Different Modes of Payment &lt;br&gt;
• Multiple Cryptocurrencies can be exchanged&lt;br&gt;
• Multiple Language Support&lt;br&gt;&lt;br&gt;
• KYC and AML Checks &lt;br&gt;
• Atomic exchange &lt;br&gt;
• Matching Engine&lt;br&gt;
• Offers extreme privacy&lt;br&gt;
• Live chat&lt;br&gt;
• Power-packed matching system&lt;br&gt;
• Administrative panel&lt;br&gt;
Here you will be able to find out the complete review about P2P crypto exchange script.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-p2p-crypto-exchange-script"&gt;
  &lt;/a&gt;
  What is p2p crypto exchange script?
&lt;/h2&gt;

&lt;p&gt;P2P Crypto exchange script is a decentralized exchange script which permits peers in the crypto market to buying and selling directly with each other without any trusted third-party processing their trades or holding their funds. P2P Exchange script accelerates peer-to-peer exchanges which are executed entirely by pre-programmed software, without requiring human operation or supervision. Buy the way as an admin, you need not store your trader’s cryptocurrencies and their address. So, you can free from the difficulties, risk-free p2p exchange script.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-p2p-crypto-exchange-script"&gt;
  &lt;/a&gt;
  Features of P2p Crypto Exchange Script:
&lt;/h3&gt;

&lt;p&gt;• Multiple payment options: Peer-to-peer crypto exchanges offer anonymous ways to buy and sell cryptocurrency with a wide range of payment methods.&lt;br&gt;
• Accurate and private transaction: Both buyers and sellers can pick their desired orders over the large volume for crypto trading and vice versa.&lt;br&gt;
• Hassle-free crypto swapping: this option allows the buyers and sellers to carry out a secure trading process, avoiding interaction of any middleman parties. The transactions can be processed and eliminated entirely, avoiding the fraud lent of any digital agreements. &lt;br&gt;
• Support multiple language and multiple cryptocurrencies: supports multiple language and numerous cryptocurrencies to achieve crypto transactions over world.&lt;br&gt;
• Escrow service: p2p crypto exchange helps you stay up to date on all the paperwork and transactions, and makes sure the buyer and seller follow through with their contractual agreement. Also offers secure and trusted smart contract-based escrow system fuels the trust and hope to make successful trading between the platform’s users.&lt;br&gt;
• No third parties: No intermediaries or central authorities to deduct crypto transaction fee.&lt;br&gt;
• Instant KYC and profile verification: KYC/AML permits admins to authorize the user profiles quickly and efficiently, which helps remove unauthorized users to your reliable crypto exchange platform. &lt;br&gt;
• Real-time market value: P2p exchange script has built with displaying the volatile cryptocurrency value which can be checked in real-time with no difficulties.&lt;br&gt;
• Automated transactions: Though it’s a decentralized peer-to-peer swaps automated crypto transactions drives trusted users’ transactions, eliminating the need for a middleman and eliminates unnecessary transaction fee.&lt;br&gt;
• Multi-factor authentication: Multi-factor authentication is when a user must provide two or more pieces of evidence to verify their identity to gain access to an app or digital resource. Multifactor authentication (MFA) is used to protect against hackers by ensuring that digital users are who they say they are.&lt;br&gt;
• Faster way to trade: This ensures an easier, secure, smooth trading process.&lt;br&gt;
• User interface (UI): p2p crypto exchange script offers single paged solutions, so it makes users can register and sign themselves using their social media accounts and log and trade themselves in the platform with ease manner.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-features-of-decentralized-exchange-script"&gt;
  &lt;/a&gt;
  Security Features of Decentralized Exchange Script
&lt;/h3&gt;

&lt;p&gt;• Secure Admin Panel&lt;br&gt;
• Two-Factor Authentication&lt;br&gt;
• Multi SIG Wallet Integration&lt;br&gt;
• Secure Cold Wallet Storage&lt;br&gt;
• Anti-Denial of Service (DOS)&lt;br&gt;
• HTTPS Authentication&lt;br&gt;
• Registry Lock&lt;br&gt;
• Secure Data Encryption&lt;br&gt;
• Jail login System&lt;br&gt;
• Email Verifications&lt;br&gt;
Here’s how you can easily buy cryptocurrency using a P2P crypto exchange:&lt;br&gt;
• Register for a free account.&lt;br&gt;
• You choose a seller you’d like to trade with or create a new trading advertisement.&lt;br&gt;
• You send the payment.&lt;br&gt;
• The seller will send cryptocurrency straight to your wallet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#which-is-the-best-p2p-crypto-exchange-script"&gt;
  &lt;/a&gt;
  Which is the best p2p Crypto Exchange script?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XCtAQEIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu4033zvw297hq9n8uie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XCtAQEIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu4033zvw297hq9n8uie.png" alt="Top 5 Cryptocurrency Exchange Scripts" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Top 5 Cryptocurrency Exchange Scripts:&lt;br&gt;
Binance clone script: binance clone script is a p2p cryptocurrency exchange which is currently the largest exchange in the world in terms of daily trading volume of cryptocurrencies. Binance clone script is ready to market, bug-free, tested, source code to launch exchange-like binance.&lt;br&gt;
Coinbase clone script: Coinbase clone script is a peer to peer crypto exchange, a popular platform for buying and selling cryptocurrency like Bitcoin etc. Coinbase clone script is a ready-made, secure, customizable, and multi-tested clone script software that is an exact replica of a popular cryptocurrency exchange - Coinbase.&lt;br&gt;
LocalBitcoins clone script: LocalBitcoins is a p2p cryptocurrency exchange script that helps entrepreneurs to successfully a crypto exchange website to buy and sell cryptocurrencies or fiat.&lt;br&gt;
Paxful clone script: Paxful works on a P2P network-based decentralized platform that upholds trading transparency and efficiency. Paxful Clone Script will be the proper choice for startups and budding entrepreneurs who wish to establish a cryptocurrency trading website alike Paxful.&lt;br&gt;
Wazirx clone script: WazirX Clone script is premier P2P cryptocurrency exchange platform software that developed on the lines of the top crypto exchange player WazirX. It supports a range of popular cryptocurrencies like Bitcoin, Litecoin, Ethereum, etc., and facilitates buying and selling of them among users.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>p2p</category>
      <category>exchange</category>
    </item>
    <item>
      <title>My first day on dev.to</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Mon, 01 Nov 2021 13:37:06 +0000</pubDate>
      <link>https://dev.to/vadimkolobanov/my-first-day-on-devto-d7e</link>
      <guid>https://dev.to/vadimkolobanov/my-first-day-on-devto-d7e</guid>
      <description>&lt;p&gt;Hello everyone, it was the first day since my registration on Dev.&lt;/p&gt;

&lt;p&gt;I'll tell you right away: I write through a translator, so some phrases may seem strange to you. So, my impressions...&lt;/p&gt;

&lt;p&gt;Wow! It is very cool! I will explain why this is the case, but later&lt;/p&gt;

&lt;p&gt;I collected a lot of different materials on programming and Python in particular, and at that moment I came up with the idea "Why don't I put all this where everyone can find it". The problem was in English, but thanks to the translator. I went to the website, created an account, uploaded some of my work to the translator and posted it all here (By the way, your markdown is very cool). I have published 4 articles with my ideas and a short article about the basics of SQL for beginners. After the articles were published, I updated my page every minute to find out if anyone was interested in my work.&lt;/p&gt;

&lt;p&gt;After 3 hours, the articles received 30 views and several reactions. Well, for a beginner, it probably should be. Okay, I'm going to bed.&lt;/p&gt;

&lt;p&gt;Morning.&lt;/p&gt;

&lt;p&gt;I went to my favorite job and looked at Dev without much hope. One of my articles received 375 views. Cool! It's more than a lifetime. I started refreshing the page again every minute and was surprised when after 2 hours there were 600 views, and after another 2 it was already 1000. And, it seems, I didn't write anything, I wrote well-known facts! But the incredible uplift I experienced was priceless.&lt;/p&gt;

&lt;p&gt;I created my blog on Medium, and now there are only 15 views. It's such a contrast between dev.to and Medium, and I firmly decided, first of all, to publish articles about Dev, and then think about whether the Medium is worthy for this.&lt;/p&gt;

&lt;p&gt;I was very pleased with the first subscribers, I wanted to do even more, more often and more interesting. I have a lot of templates about VCS and Git, Python and programming in general. I saw something that I had never seen in my endeavors - this is the assessment and reaction of people completely unfamiliar to me, with whom we are separated not only by distance, but also by language and ideology. But they understood me! Sometimes it's ugly and through a translator, with incomprehensible expressions, but they understand! And today I'm happy because I met you! I will be very glad if they write me comments (it is possible in Russian).&lt;/p&gt;

&lt;p&gt;I will be glad if they show me errors in the English text or in the subject. I am very happy with this platform! I'm waiting for you! I went to create!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>discuss</category>
      <category>motivation</category>
    </item>
    <item>
      <title>5 tips to finish your side projects (and make money doing so)</title>
      <author>Mustapha Aouas</author>
      <pubDate>Mon, 01 Nov 2021 13:25:03 +0000</pubDate>
      <link>https://dev.to/mustapha/5-tips-to-finish-your-side-projects-and-make-money-doing-so-27eo</link>
      <guid>https://dev.to/mustapha/5-tips-to-finish-your-side-projects-and-make-money-doing-so-27eo</guid>
      <description>&lt;p&gt;This past year I worked on a side project, and for once I saw it through to completion and profit. &lt;br&gt;
While working on this project, I made some good decisions as well as a lot of mistakes! In this post, I'll share with you 5 points that worked for me. Hopefully they will work for you.&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
But before we start, let me establish some context:&lt;br&gt;
I began developing a tool to help me memorize the fretboard layout of my guitar (the notes on the fretboard). The project received some attention after I shared it on Reddit. Other guitar players (including bass and ukulele) were interested in such an app. So i quickly made an &lt;a href="https://dev.to/mustapha/i-made-this-game-tool-to-help-people-learn-the-notes-on-their-guitar-it-s-free-and-mobile-friendly-4lf9"&gt;MVP&lt;/a&gt; and shared it with them. &lt;br&gt;
Their feedback was so encouraging that I decided to start working (more seriously) on this project.&lt;/p&gt;

&lt;p&gt;I soft launched the product pretty much a year ago and it generated &lt;strong&gt;$1k without any marketing at all&lt;/strong&gt;, only organic traffic on the &lt;a href="https://apps.apple.com/us/app/fretboard-learning/id1554316449"&gt;App store&lt;/a&gt;. Some times you just have to publish your work.&lt;/p&gt;

&lt;p&gt;Of course that's not a lot compared to other projects and I need to do some marketing if I want to increase the revenue from the app, but that's another story.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QUyDnFvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bztog43tiiadlq7b27eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QUyDnFvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bztog43tiiadlq7b27eg.png" alt="Revenue from Fretboard Learning app" width="880" height="152"&gt;&lt;/a&gt;&lt;/p&gt;
Revenue from Fretboard Learning app



&lt;p&gt; &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Disclamer:&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The tips I will provide below are useful for relatively small projects involving a small team (you). Moreover, nothing beats hard work; if you do not put in the necessary effort, your project will not move forward on its own. However, if you do put the necessary effort, you can use these suggestions as a guide.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-dont-be-shy-talk-about-your-project-early"&gt;
  &lt;/a&gt;
  1. Don't be shy, talk about your project early
&lt;/h2&gt;

&lt;p&gt;One thing I learned is that there's two things you should do at the very beginning of your project: Write the code and talk to users. &lt;/p&gt;

&lt;p&gt;Talking to users early-on allows you to get the necessary feedback to test your ideas. Reddit, pinterest, ... are great for that.&lt;/p&gt;

&lt;p&gt;Then, once this first step is done, it's critical to keep them engaged because you'll need their continuous input as your side project shifts and ideas evolve into a complete and marketable product. Those early testers can then become beta testers and, eventually, customers/users. So connect with them, ask for their emails, or use any other method to stay in touch.&lt;/p&gt;

&lt;p&gt;Also, Another benefits is that seeing that your product is being used might provide you with the additional motivation you need to keep going.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-choosing-a-goal-definition-of-done"&gt;
  &lt;/a&gt;
  2. Choosing a goal / Definition of done
&lt;/h2&gt;

&lt;p&gt;The Definition of Done is an agreed upon set of items that must be completed before a project or a feature can be considered complete.&lt;/p&gt;

&lt;p&gt;It's important to have that so you don't fall victim to perfectionism, which can lead to a loss of motivation and a lot of time wasted on features that may or may not be discarded later. Always try to make it work and give it to users before trying to make it "right and fast".&lt;/p&gt;

&lt;p&gt;This goes hand in hand with the first point, so don't be afraid to ship your project early; you can always make adjustments afterwards.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-have-a-backlog"&gt;
  &lt;/a&gt;
  3. Have a backlog
&lt;/h2&gt;

&lt;p&gt;This one is straight forward. Having a backlog can help you track your progression and keep track of what needs to be done. This backlog will evolve overtime as your project progresses and will help you stay on track with your objectives.&lt;/p&gt;

&lt;p&gt;Break every idea into small steps and prioritise them. Then set some confortable weekly or monthly goals.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-discipline-over-motivation"&gt;
  &lt;/a&gt;
  4. Discipline over motivation
&lt;/h2&gt;

&lt;p&gt;Self-discipline and the ability to stay committed are required for a job in software engineering. The same is true for side projects; you cannot rely solely on motivation, because motivation can fluctuate and decrease from time to time. So you must continue working on your project even if you lack the motivation. &lt;/p&gt;

&lt;p&gt;Set a time during the day to work on your project and stick to it.&lt;/p&gt;

&lt;p&gt;If you feel like you're about to abandon the project, take a short break now and then (maybe a week or so), but don't take a long break because it can kill your project (How many times have you put a project on hold and never touched it again?). &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#5-keep-a-technical-journal"&gt;
  &lt;/a&gt;
  5. Keep a technical journal
&lt;/h2&gt;

&lt;p&gt;Keep a detailed technical journal for your project. Write problems down and document all the dead-ends that you encounter. This will make context switching a lot less painful and it will give you a better notion of how much work was done compared to lines of code or commit count.&lt;/p&gt;

&lt;p&gt;In addition, if you drop the project at some point, it will be easier to pick it up again.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
 &lt;/p&gt;

&lt;p&gt;That's it for this post. I hope some of these points will help you in your journey!&lt;br&gt;
If you liked this post, please share it with your friends or colleagues and follow me on twitter at &lt;a href="https://twitter.com/TheAngularGuy"&gt;@theAngularGuy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#what-to-read-next"&gt;
  &lt;/a&gt;
  What to read next?
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mustapha" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TjMto4tb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Bz3nRw5I--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/174804/95610498-02ee-4f3f-846b-b85ccb539f0a.jpg" alt="mustapha"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mustapha/a-deep-dive-into-es6-classes-2h52" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A deep dive into ES6 Classes&lt;/h2&gt;
      &lt;h3&gt;Mustapha Aouas ・ Oct 26 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>sideprojects</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Containerization with Docker 🐳</title>
      <author>Josh</author>
      <pubDate>Mon, 01 Nov 2021 13:17:26 +0000</pubDate>
      <link>https://dev.to/jryther/containerization-with-docker-40o0</link>
      <guid>https://dev.to/jryther/containerization-with-docker-40o0</guid>
      <description>&lt;p&gt;Hello everyone!  This week I am going to go over containerization in docker and when it might be best to use it.  For those that are familiar with virtual machines, containers have the same concept.  Their purpose is to create an isolated environment that can be configured for a specific application.  Since virtual machines and containers are similar I think it is important to explain the difference between them for those that aren’t familiar.&lt;/p&gt;

&lt;p&gt;Virtual machines were developed first and they are essentially virtual computers that are ran on the same hardware.  Each VM has it’s own OS and environment.  It uses something called a hypervisor to manage the hardware resources between each VM.  Disadvantages of a VM is that they are resource heavy and difficult to migrate between platforms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iGgBc4JZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgzktewhe9l5unmgq419.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGgBc4JZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgzktewhe9l5unmgq419.png" alt="Virtual Machine Diagram" width="880" height="703"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Containers are similar to VMs in concept but the big difference is that they don’t include the OS in the container.  This allows developers to create an environment for the application without including the resource heavy components of the VM.  Unlike VMs, containers are easy to migrate between platforms with the same OS and are lightweight.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ksI5Zo9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4euw9brh1mpcvj2clr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ksI5Zo9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4euw9brh1mpcvj2clr2.png" alt="Docker Diagram" width="558" height="254"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Containers do have their downsides though, some of which have to do with sharing the OS.  Any security vulnerabilities introduced with one container that effects the OS will therefore affect all of the containers on the same machine.  The containers are also initialized to work on a specific OS so if you want to migrate it, the new platform will need to be the same.  With the positives and negatives weighed, the developer will need to consider what migration, resource, and security concerns will effect the application.  Neither method is inherently better and will depend on the type of project.&lt;/p&gt;

&lt;p&gt;I hope you all found this post helpful in understanding the basics of what containerization in docker is.  Next week I plan on giving a tutorial for setting up and using docker.  Please like and comment to let me know how I am doing and I hope you all have a great rest of your week.  Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docker-curriculum.com/#getting-started"&gt;https://docker-curriculum.com/#getting-started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JSLpG_spOBM"&gt;https://www.youtube.com/watch?v=JSLpG_spOBM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.netapp.com/blog/containers-vs-vms/"&gt;https://www.netapp.com/blog/containers-vs-vms/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/topics/containers/containers-vs-vms"&gt;https://www.redhat.com/en/topics/containers/containers-vs-vms&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>docker</category>
      <category>todayilearned</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Here's Why You Should Be A Programmer</title>
      <author>Danish Saleem</author>
      <pubDate>Mon, 01 Nov 2021 13:15:28 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/heres-why-you-should-be-a-programmer-53p4</link>
      <guid>https://dev.to/mrdanishsaleem/heres-why-you-should-be-a-programmer-53p4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#salary"&gt;
  &lt;/a&gt;
  Salary
&lt;/h2&gt;

&lt;p&gt;The average salary of a front-end developer in 2017 was about $70K per year. This varies, even more, depending on which country you live in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creativity"&gt;
  &lt;/a&gt;
  Creativity
&lt;/h2&gt;

&lt;p&gt;Having the ability to create whatever you want is an amazing perk of being a programmer. You don’t depend on anyone to build your projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transferrable-skills"&gt;
  &lt;/a&gt;
  Transferrable Skills
&lt;/h2&gt;

&lt;p&gt;Usually, most of the things you learn in programming are transferrable skills you can reuse in another job position or company.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#side-hustles"&gt;
  &lt;/a&gt;
  Side Hustles
&lt;/h2&gt;

&lt;p&gt;There are more and more remote jobs for programmers, which means more time to focus on side hustles while having a job. This is one of the best perks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-your-empire"&gt;
  &lt;/a&gt;
  Building your empire
&lt;/h2&gt;

&lt;p&gt;If you look closely at the most successful people, most of them knew to program. Programming allows you to do anything!&lt;/p&gt;




&lt;p&gt;Did you find it help? Let me know your thoughts in the comments below!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect!
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" alt="Buy Me a Coffee" width="880" height="193"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>career</category>
      <category>beginners</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Tips for developers switching from Windows to Mac</title>
      <author>Cathal Mac Donnacha 🚀</author>
      <pubDate>Mon, 01 Nov 2021 13:07:27 +0000</pubDate>
      <link>https://dev.to/returnofthemac/tips-for-developers-switching-from-windows-to-mac-3d51</link>
      <guid>https://dev.to/returnofthemac/tips-for-developers-switching-from-windows-to-mac-3d51</guid>
      <description>&lt;p&gt;I was a Windows fan all my life, both at home since I was 10 years old, and at work for 8 years of my frontend development career. However, when I moved jobs recently I was given a MacBook Pro, and so I had little choice but to dive headfirst into everything MacOS. It was a bit strange at first and it honestly took me a few days to get settled in with the Mac, but once I did, I really started to like it.&lt;/p&gt;

&lt;p&gt;From the beginning, there were a couple of things I missed about Windows, and some alternative apps that I had to find. In this article, I go through some of the things that helped me, in the hope that I can help smoothen the ride for other developers starting out on their Windows to Mac journey.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#package-manager"&gt;
  &lt;/a&gt;
  Package manager 📦
&lt;/h2&gt;

&lt;p&gt;I used to use &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; as my package manager on Windows. I found it really useful to install and organise all of my various packages, and so I wanted to find the best alternative for Mac. &lt;a href="https://brew.sh/"&gt;Brew&lt;/a&gt; was the answer! I've been using it for the past year and haven't had any issues or missing features compared to Chocolatey.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terminal"&gt;
  &lt;/a&gt;
  Terminal 📺
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://conemu.github.io/"&gt;ConEmu&lt;/a&gt; was my go-to terminal on Windows and so I was pretty bummed out when I realised that it wasn't supported on Mac. After asking some folks on my team, they suggested &lt;a href="https://iterm2.com/"&gt;iTerm2&lt;/a&gt; and I must admit it's equally fantastic.&lt;/p&gt;

&lt;p&gt;One feature that is not included in iTerm2 though is the ability to display the currently active git branch at a glance. Worry not! &lt;a href="https://ohmyz.sh/"&gt;oh-my-zsh&lt;/a&gt; to the rescue 🦸‍♂️  You can install it using &lt;a href="https://ohmyz.sh/#install"&gt;this curl command&lt;/a&gt; and hey presto, you now see those nice pretty git branches in your terminal.&lt;/p&gt;

&lt;p&gt;Similar to ConEmu, I use a feature in iTerm2 called "window arrangements" to automatically launch tabs whenever I open the terminal. I find this really handy, as it automatically navigates to the correct directory and opens my regular 3 &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; tabs for me. This feature has saved me countless hours over the years!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finder-%F0%9F%97%84"&gt;
  &lt;/a&gt;
  Finder 🗄
&lt;/h2&gt;

&lt;p&gt;Finder is the default file manager on the Mac and it's equivalent to Windows Explorer, with some differences. The biggest difference for me was the lack of a classic cut and paste. On Windows you could simply press &lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;v&lt;/code&gt;. However, to do this on Mac you have to select the file and then press &lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;v&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hidden-files"&gt;
  &lt;/a&gt;
  Hidden Files
&lt;/h3&gt;

&lt;p&gt;To show hidden files in Finder just press &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;i&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If you want to show hidden files by default just open your terminal and run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;defaults write com.apple.finder AppleShowAllFiles YES&lt;span class="p"&gt;;&lt;/span&gt; killall Finder&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#split-screen"&gt;
  &lt;/a&gt;
  Split screen 💻
&lt;/h2&gt;

&lt;p&gt;I often use split screen to view both the browser and VS Code side by side. On Windows, this is quite simple to do using a feature called &lt;a href="https://support.microsoft.com/en-us/windows/snap-your-windows-885a9b1e-a983-a3b1-16cd-c531795e6241#WindowsVersion=Windows_10"&gt;Snap Assist&lt;/a&gt;. You simply just drag a window to the edge of the screen and then select the other window you want to show beside it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xnXNQKeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/S4tZrd0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xnXNQKeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/S4tZrd0.gif" alt="Windows Split View" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again I was pretty disappointed to find out that you couldn't easily achieve this on the Mac. Not to worry though, it does have a feature called &lt;a href="https://support.apple.com/en-ie/HT204948"&gt;Split View&lt;/a&gt;, which is close enough for me. It's not as quick and easy but gets the job done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xsMQpk2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/P0H2Vd9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xsMQpk2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/P0H2Vd9.gif" alt="Mac Split View" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ms-paint"&gt;
  &lt;/a&gt;
  MS Paint 🎨
&lt;/h2&gt;

&lt;p&gt;Oh man, how I loved this app. As a frontend developer, I was constantly taking screenshots, pasting them into Paint and then drawing arrows, boxes and text on top of them to include in JIRA tickets, emails etc. I even remember using it to create some icons back in the day. I couldn't believe the Mac didn't have a native paint app. However, I found two solutions that helped me dry my tears.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-shape-detection-in-preview"&gt;
  &lt;/a&gt;
  1. Shape detection in Preview
&lt;/h3&gt;

&lt;p&gt;I may be easily amused, but this feature blew my mind when I first tried it. When you take a screenshot (&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;3&lt;/code&gt;), a thumbnail will appear in the bottom right corner of the screen. Once you click on the thumbnail, the native Preview app on the Mac will open. From here you can draw a rough circle, square, or arrow and if it's recognised as a standard shape, it’s replaced by that shape. How cool is that?!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FmawrNUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/fZPwazm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FmawrNUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/fZPwazm.gif" alt="Shape detection in Preview app" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-sketchpad"&gt;
  &lt;/a&gt;
  2. Sketchpad
&lt;/h3&gt;

&lt;p&gt;One drawback to the native Preview app is that you can't simply copy and paste two images onto one canvas. Again, I do this a lot when creating "before and after" screenshots of tasks I'm working on. It's so much easier to convey this in one single side-by-side image instead of two separate ones.&lt;/p&gt;

&lt;p&gt;Again MS Paint was great for this, so I had to find an alternative. I tried lots of Mac apps, browser extensions and web apps but struggled to find anything suitable, user friendly, and free, which had similar features to MS Paint. Finally, I found it! &lt;a href="https://sketch.io/sketchpad/"&gt;Sketchpad&lt;/a&gt; is a fantastic web app where you can quickly copy and paste images side by side, draw, add text, fill vectors and lots more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screenshots-and-video-recording"&gt;
  &lt;/a&gt;
  Screenshots and video recording 📹
&lt;/h2&gt;

&lt;p&gt;I touched on this earlier, but as a frontend developer, I take &lt;strong&gt;a lot&lt;/strong&gt; of screenshots and recordings so that I can attach them to JIRA tickets, Slack messages, emails and so on. I think that this is an important part of any frontend developer's workflow, so I wanted to go through it in a bit more detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-screenshot"&gt;
  &lt;/a&gt;
  Basic screenshot
&lt;/h3&gt;

&lt;p&gt;Using the &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;3&lt;/code&gt; shortcut, you can take a screenshot of the currently active screen. You should then see a thumbnail appear in the right bottom corner of your screen. Clicking on this will bring up the native Preview app, which (as mentioned earlier) you can use to draw on the image. It will save the image to your default screenshots folder on your Mac, which is useful if you want to refer back to it later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#capture-a-portion-of-the-screen"&gt;
  &lt;/a&gt;
  Capture a portion of the screen
&lt;/h3&gt;

&lt;p&gt;Using the &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;4&lt;/code&gt; shortcut, you can take a screenshot of a portion of the screen. This will save the image to your Mac. Out of all the screenshot options, I probably use this the most. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DSwRRohq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635622962173/sbZw41Co2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DSwRRohq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635622962173/sbZw41Co2.png" alt="Capture a portion of the screen" width="880" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#capture-a-portion-of-the-screen-and-copy-to-clipboard"&gt;
  &lt;/a&gt;
  Capture a portion of the screen and copy to clipboard
&lt;/h3&gt;

&lt;p&gt;Using the &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;control&lt;/code&gt; +  &lt;code&gt;4&lt;/code&gt; shortcut, you can take a screenshot of a portion of the screen. The difference between this and the previous shortcut is that it will only copy the image to your clipboard. It will not save the image to your Mac. This is useful if you want to quickly copy and paste screenshots into chat or an email body, but not take up space on your hard drive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshot-a-window"&gt;
  &lt;/a&gt;
  Screenshot a window
&lt;/h3&gt;

&lt;p&gt;Using the &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;control&lt;/code&gt; +  &lt;code&gt;space&lt;/code&gt; shortcut, you can take a screenshot of a particular window.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uuo17s3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635622880504/cVoCEuyxf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uuo17s3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635622880504/cVoCEuyxf.png" alt="Screenshot a window" width="880" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#record-the-screen"&gt;
  &lt;/a&gt;
  Record the screen
&lt;/h3&gt;

&lt;p&gt;Using the &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;5&lt;/code&gt; shortcut, you will see a toolbar appear which allows you to record the entire screen, or just a portion of it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fs4a_0WD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635623129663/4TmBzZsyf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fs4a_0WD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635623129663/4TmBzZsyf.png" alt="Mac record video toolbar" width="487" height="53"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To stop recording, just press the same &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;5&lt;/code&gt; shortcut again and press the "stop" button. I use this very often in PRs, or when showing my team some early progress of a feature I'm working on.&lt;/p&gt;

&lt;p&gt;You can even trim the beginning and end of the video using this button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--adwSJbZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635623459731/NDwUc-vkE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--adwSJbZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635623459731/NDwUc-vkE.png" alt="Trim video button on Mac" width="332" height="108"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#noteworthy-screenshot-app"&gt;
  &lt;/a&gt;
  Noteworthy screenshot app
&lt;/h3&gt;

&lt;p&gt;I thought it was worth calling out a great free tool which I've found very useful called &lt;a href="https://shottr.cc/"&gt;Shottr&lt;/a&gt;. It hasn't fully replaced the native screenshot functionality for me, but it's mighty close.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shortcuts"&gt;
  &lt;/a&gt;
  Shortcuts ⌨️
&lt;/h2&gt;

&lt;p&gt;First of all, the keyboard is subtly different compared to Windows. The &lt;code&gt;command&lt;/code&gt; key is what you'll use for most shortcuts and commands, it's mostly similar to the &lt;code&gt;ctrl&lt;/code&gt; key on Windows. In most cases, shortcuts that require the use of the &lt;code&gt;alt&lt;/code&gt; key on windows will use the &lt;code&gt;option&lt;/code&gt; key on Mac. &lt;/p&gt;

&lt;p&gt;Once I got used to these differences I started to look up various shortcuts for applications I use every day. Below are only some of the shortcuts I use, but &lt;a href="https://support.apple.com/en-us/HT201236"&gt;here&lt;/a&gt; is the full list if you need it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basics"&gt;
  &lt;/a&gt;
  Basics
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;x&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Cut&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;c&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Copy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;v&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Paste&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;w&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Close window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;z&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Undo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;spacebar&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Open spotlight to quickly find and open apps, documents, and other files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;tab&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Switch apps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;n&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;New finder window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;delete&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Delete file / folder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;i&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Show hidden files in Finder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;control&lt;/code&gt; + &lt;code&gt;down arrow&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Show all windows of the active app (i.e all Chrome windows)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;3&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Take a screenshot of the currently active screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;4&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Take a screenshot a portion of the screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;4&lt;/code&gt; + &lt;code&gt;space&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Take a sccreenshot of a window of your choosing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;control&lt;/code&gt; + &lt;code&gt;4&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Take a screenshot of a portion of the screen and copy it to the clipboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;c&lt;/code&gt; then &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;v&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Cut and paste files in finder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Rename selected file or folder&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#text-editing"&gt;
  &lt;/a&gt;
  Text editing
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;left arrow&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Go to beginning of line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;right arrow&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Go to end of line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;control&lt;/code&gt; + &lt;code&gt;spacebar&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Show Emoji viewer 😃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;v&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Paste without formatting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;option&lt;/code&gt; + &lt;code&gt;backspace&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Delete word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;backspace&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Delete all text left of cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#chrome"&gt;
  &lt;/a&gt;
  Chrome
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;i&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Open dev tools&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;r&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Reload page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;f&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Search within the page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;t&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Open last closed tab&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#slack"&gt;
  &lt;/a&gt;
  Slack
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;c&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Format higlighted text to code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;k&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Quick switcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;u&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Add link text (You can also paste a link directly onto highlighted text to achieve the same)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#iterm2"&gt;
  &lt;/a&gt;
  iTerm2
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;control&lt;/code&gt; + &lt;code&gt;u&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Delete line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;control&lt;/code&gt; + &lt;code&gt;y&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Restore previous deleted line. This is handy if you need to run another command then come back to the previous one.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;t&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;New tab&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#vs-code"&gt;
  &lt;/a&gt;
  VS Code
&lt;/h3&gt;

&lt;p&gt;For VS Code, I have customised a lot of the shortcuts myself as I personally think they make more sense and are easier to remember, so I've included them below. However, &lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf"&gt;here's a list&lt;/a&gt; of the default out-of-the-box shortcuts.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;click&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Go to definition&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;p&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Quick search&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;option&lt;/code&gt; + &lt;code&gt;left arrow&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Go back&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;option&lt;/code&gt; + &lt;code&gt;right arrow&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Go forward&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;d&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Copy lines down i.e duplicate line of code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;control&lt;/code&gt; + &lt;code&gt;e&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Add cursor to next matching text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;/&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Comment out line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;backspace&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Delete line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;\&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;Open file in side pane&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts 🤔
&lt;/h2&gt;

&lt;p&gt;You might wonder if I miss Windows for frontend development, well my answer is "kinda but not really". Yes, Windows does some things better, but Mac has some of its own advantages. I think Mac is a happy medium for software developers who work on a lot of backend code as it's based on Unix, runs most Linux applications but is still user friendly. However, as a frontend developer, all I really need is VS Code and a browser to do my work, both of which work exactly the same regardless of which OS I'm using.&lt;/p&gt;

&lt;p&gt;Hopefully, this article can make the Windows to Mac switch that small bit easier for you. If you found this article useful, or have some tips of your own, feel free to leave a comment 🙌&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-resources"&gt;
  &lt;/a&gt;
  Useful resources 📖
&lt;/h2&gt;

&lt;p&gt;I found these resources useful when learning the basics during my Windows to Mac switcharoo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://support.apple.com/en-us/HT204216"&gt;Mac tips for Windows switchers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.apple.com/en-gb/guide/mac-help/cpmh0038/mac"&gt;A list of Windows and Mac terms to help you find what you’re looking for.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#want-more"&gt;
  &lt;/a&gt;
  Want more? 📢
&lt;/h2&gt;

&lt;p&gt;I mainly write about real-world tech topics I face in my everyday life as a frontend developer. If this appeals to you, then feel free to follow me on Twitter for more: &lt;a href="https://twitter.com/cmacdonnacha"&gt;https://twitter.com/cmacdonnacha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bye for now 👋&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tooling</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Hexagonal Architecture</title>
      <author>Abhinav Pandey</author>
      <pubDate>Mon, 01 Nov 2021 13:00:37 +0000</pubDate>
      <link>https://dev.to/abh1navv/hexagonal-architecture-3ocl</link>
      <guid>https://dev.to/abh1navv/hexagonal-architecture-3ocl</guid>
      <description>&lt;p&gt;In the evolution of software architecture, &lt;a href="https://en.wikipedia.org/wiki/Loose_coupling"&gt;loose coupling&lt;/a&gt; has been at the centre. There is an emphasis on breaking applications into components which can be switched, replaced or updated without affecting the dependent components.&lt;/p&gt;

&lt;p&gt;Hexagonal architecture is another advancement in loosely coupled architectures. It originated around the beginning of the shift to domain-driven designs and formed a basis of further advancements in the field of software design. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intoduction"&gt;
  &lt;/a&gt;
  Intoduction
&lt;/h2&gt;

&lt;p&gt;A hexagonal architecture is divided into three parts and defines the strict roles that these parts play within the application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fb6-BjGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/abh1navv/learning-notes/master/microservices/images/hexagonal-intro.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fb6-BjGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/abh1navv/learning-notes/master/microservices/images/hexagonal-intro.jpg" alt="Hexagonal architecture layers - User Interfaces, Business Logic and Data sources" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Interfaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There can be many user interfaces to a backend - mobile apps, web apps, desktop softwares, etc. They will all get their resources from the Business logic layer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Business Logic&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It forms the core of the application. It's objective is to cater to the requests of user interfaces. Based on the request, it runs some custom logic, gets the resources needed to fulfil the request and answers back in an agreed upon response format.&lt;/p&gt;

&lt;p&gt;Below is a small word cloud of the responsibilities of a business logic layer. The responsibilities can vary from one use case to another.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q-kpPAnF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/abh1navv/learning-notes/master/microservices/images/business-logic-components.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q-kpPAnF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/abh1navv/learning-notes/master/microservices/images/business-logic-components.png" alt="Components of Business Logic layer" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Backing services&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are services which support the business logic. They each serve a specific purpose and provide data/services to the application. They interact with the business logic layer and are replaceable as long as the communication contract between the two layers is maintained. A few examples:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Data sources&lt;/li&gt;
&lt;li&gt;Cache aside servers like Redis&lt;/li&gt;
&lt;li&gt;Notification services&lt;/li&gt;
&lt;li&gt;Another service like a payment gateway&lt;/li&gt;
&lt;li&gt;In microservices context, another microservice.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#intent-and-principles"&gt;
  &lt;/a&gt;
  Intent and principles
&lt;/h3&gt;

&lt;p&gt;The intent is to make the core of our application immune to changes in the communication with other layers. Those concerns are to be handled at the boundary of our hexagon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ports&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ports are what our core application interacts with. Ports stay consistent for the inner application no matter what happens outside them. They are &lt;em&gt;interfaces&lt;/em&gt; that the inner components interact with without knowing whats being plugged into them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adapters&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ports are staying consistent but we still want to be able to plug multiple applications to them when needed. These applications could have different needs and may not comply with the interface defined by the ports. This is where out adapters come in. Their purpose is to convert the data provided by the outer applications into a format digestible for the inner application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - Hexagonal is just a term that has stuck with the architecture for simplicity. It is not to be misunderstood as the business logic layer having 6 ports. There can be many more sides to the polygon as per the services required to connect&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1wXtih8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/abh1navv/learning-notes/master/microservices/images/ports-and-adapters.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1wXtih8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/abh1navv/learning-notes/master/microservices/images/ports-and-adapters.jpg" alt="Ports and adapters" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;With respect to the above diagram, imagine a small application - a REST API which deals with user related operations. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Frontend Port&lt;/strong&gt; - the requests can come from a website or an app. They may have different parameters and may expect a different response formats. We create an adapter for each frontend actor. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It receives the request &lt;/li&gt;
&lt;li&gt;converts it into a consistent format defined by the port &lt;/li&gt;
&lt;li&gt;passes it onto the inner application. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When the request reaches the inner application, it is consistent with the interface exposed by the port. The application works on it and returns the response in a format that the port expects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The port forwards the response to the adapter it received the request from.&lt;/li&gt;
&lt;li&gt;The adapter converts the response into a format suitable for the requesting party.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Database port&lt;/strong&gt; - the inner application needs to get some data from the database to fulfil the request. Once again, it interacts through a consistent port. And we are able to plug in whichever database we need into that port. The actual DB to be used will be decided at runtime or through configurations. &lt;/p&gt;

&lt;p&gt;Let's see a use case of the Database port through code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-see-some-code"&gt;
  &lt;/a&gt;
  Let's see some code
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Design Intention&lt;/strong&gt; - We want to start with a MySQL database but we are not sure if a different database would be necessary in future. Our code should allow for easy swapping of databases when needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The port (Interface)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We provide an interface for our core to interact with. The interface performs crud operations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;UserRepository&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Adapter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MySQL Database adapter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MySqlDatabaseRepository&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;UserRepository&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Saving to database"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Deleting from database"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Updating database"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Finding in database"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Interacting with the databases&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As we already know, all communication happens using the interfaces. Our core application will not look beyond the &lt;code&gt;UserRepository&lt;/code&gt; interface.&lt;/p&gt;

&lt;p&gt;Let's look at one of our core services. The below class is concerned with getting the user details - either basic or full.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserDetailsClient&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;UserRepository&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UserDetailsServiceImpl&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;UserRepository&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;userRepository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;BasicDetails&lt;/span&gt; &lt;span class="nf"&gt;getBasicDetails&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;BasicDetails&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getEmail&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;FullDetails&lt;/span&gt; &lt;span class="nf"&gt;getFullDetails&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;FullDetails&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getEmail&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getAddress&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Look how it uses an object of the interface and does not care about which specific database works in the background.&lt;/p&gt;

&lt;p&gt;Still, we will need to pass into the service the actual implementation. There are a large number of ways to do that - especially with modern frameworks. &lt;/p&gt;

&lt;p&gt;What I have used here is &lt;a href="https://www.tutorialsteacher.com/ioc/dependency-injection"&gt;constructor dependency injection&lt;/a&gt; which will hold true for most object-oriented programming languages which use interfaces. Other patterns could be Factory and Strategy patterns.&lt;/p&gt;

&lt;p&gt;In my case, the outer layer which tries to get User details will initialize &lt;code&gt;UserDetailsClient&lt;/code&gt; by passing the required adapter. For e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;UserDetailsClient&lt;/span&gt; &lt;span class="n"&gt;userDetailsClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;UserDetailsClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;MongoDbRepository&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;span class="n"&gt;userDetailsClient&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBasicDetails&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Swapping databases&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After a while, it was agreed that having a NoSQL database made things easier due to scalability reasons. What was needed in this case was to introduce another adapter for MongoDb database and make it implement the functionalities defined by the port.&lt;/p&gt;

&lt;p&gt;MongoDB adapter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MongoDbRepository&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;UserRepository&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Saving User to mongoDb"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Deleting User from mongoDb"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Updating User in mongoDb"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Finding User in mongoDb"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use the MongoDb database, the only change required is in the way the &lt;code&gt;UserDetailsClient&lt;/code&gt; is initialized. Our calling code changes in the below way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;UserDetailsClient&lt;/span&gt; &lt;span class="n"&gt;userDetailsClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;UserDetailsClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;MongoDbRepository&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;span class="n"&gt;userDetailsClient&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBasicDetails&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Swappable components&lt;/strong&gt; - as we can see in the database layer. There could also be other services in the same pattern. For e.g. I could have notification services and swap between emails and SMS whenever needed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Separation of business logic&lt;/strong&gt; - If implemented well, the hexagonal architecture does not pose a threat to the business rules at the core of the application when outer layers change. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Easier testing across ports&lt;/strong&gt; - Testing of the core application can be performed around the ports. If needed, mock resources can be introduced using adapters of their own to make unit testing without databases easier.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Although hexagonal architecture is not something that is explicitely thought about when designing the architecture of the application, it is often accidentally used throughout modern applications - especially the Java world which revolves around &lt;a href="https://www.freecodecamp.org/news/a-quick-intro-to-dependency-injection-what-it-is-and-when-to-use-it-7578c84fa88f/"&gt;dependency injection&lt;/a&gt; and coding to interfaces rather than implementations.&lt;/p&gt;

&lt;p&gt;Nowadays, there is a lot of emphasis on configurability and adaptability of applications. It is important to keep the "ports and adapter pattern" in mind in the low-level design process more than the high-level design.&lt;/p&gt;




&lt;p&gt;Thank you for reading. Hope you enjoyed the article. Please leave any appreciation and suggestions in the comments. If you want to connect with me, you can find me on &lt;a href="https://twitter.com/abh1navv"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fun Fact&lt;/strong&gt;: The code samples are created by Github Co-pilot with little manual intervention.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>programming</category>
      <category>java</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Hey Marshal</title>
      <author>bseyhan</author>
      <pubDate>Mon, 01 Nov 2021 12:59:38 +0000</pubDate>
      <link>https://dev.to/bseyhan/hey-marshal-1134</link>
      <guid>https://dev.to/bseyhan/hey-marshal-1134</guid>
      <description>&lt;p&gt;Hi everyone,&lt;/p&gt;

&lt;p&gt;Before creating a project, let's simply talk about other issue. What is Json, Struct, Marshall &amp;amp; UnMarshall. In this document, I'll introduce Json to Struct and apposite of it. How to make a request and how to convert it. What are these required packages? A struct is a user-defined type that represent a collection of field. If you write C# code before you might remember it. Well let's start. First in first how to define a simple struct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type Users struct{}

type Customers struct{}

type Students struct{
    FirstName string
    LastName  string
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's create a new GoLang project and run it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I7Oj_y_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r02qjo6knetgh6fphzc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I7Oj_y_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r02qjo6knetgh6fphzc6.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-student-struct"&gt;
  &lt;/a&gt;
  Create Student Struct
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type Student struct{
    FirstName string 
    LastName  string
}

type Company struct{
    Name string `json:"name"`
    Address  string `json:"address"`
}

//initialize
student := Student{FirstName:"Burak", LastName:"Seyhan"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your application has already it. You don't run go get -u command.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#marshal"&gt;
  &lt;/a&gt;
  Marshal()
&lt;/h1&gt;

&lt;p&gt;Converting Go objects into JSON is called Marshal() in GoLang. As the JSON is a language-independent data format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "fmt"
    "encoding/json"
)

type Student struct{
    FirstName string
    LastName  string
}

func main()  {
    fmt.Println("Welcome to Json and Struct Implementation")

    //initialize
    student := Student{FirstName:"Burak", LastName:"Seyhan"}

    data, err := json.Marshal(student)
    if(err != nil){
        fmt.Println(err)
    }

    fmt.Println(data) // data is byteArray
    fmt.Println(string(data)) convert to byteArray to string
}   

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xr-k7F4Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wk4i9qp9agrqm8a753st.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xr-k7F4Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wk4i9qp9agrqm8a753st.png" alt="Image description" width="880" height="56"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#unmarshal"&gt;
  &lt;/a&gt;
  UnMarshal()
&lt;/h1&gt;

&lt;p&gt;Unmarshalling just opposite of Marshal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var unmarshalStudent Student
unmarshal := json.Unmarshal([]byte(data), &amp;amp;unmarshalStudent)

if(unmarshal != nil){
    fmt.Println(unmarshal)
}

fmt.Printf("%v+\n", data)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6QDGmwky--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l1dfqkndpghwviy7b4lt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6QDGmwky--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l1dfqkndpghwviy7b4lt.png" alt="Image" width="880" height="44"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Full code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "fmt"
    "encoding/json"
)

type Student struct{
    FirstName string `json:"firtname"`
    LastName  string `json:"lastnamename"`
}


func main()  {
    fmt.Println("Welcome to Json and Struct Implementation")


    //initialize
    student := Student{FirstName:"Burak", LastName:"Seyhan"}

    data, err := json.Marshal(student)
    if(err != nil){
        fmt.Println(err)
    }

    fmt.Println(data)
    fmt.Println(string(data))


    var unmarshalStudent Student
    unmarshal := json.Unmarshal([]byte(data), &amp;amp;unmarshalStudent)
    if(unmarshal != nil){
        fmt.Println(unmarshal)
    }
    fmt.Printf("%v+\n", data)

}   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#real-world-example"&gt;
  &lt;/a&gt;
  Real world example
&lt;/h1&gt;

&lt;p&gt;In this example I'll request a public Web API. &lt;a href="https://jsonplaceholder.typicode.com/users"&gt;PublicAPI&lt;/a&gt; This end point related with some user informations. At the beginning I'm gonna create a Struct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type Users struct{
    Id int `json:"id"`
    Name  string `json:"name"`
    UserName  string `json:"username"`
    Email  string `json:"email"`
    Address  Address `json:"address"`
    Phone  string `json:"phone"`
    Website  string `json:"website"`
    Company  Company `json:"company"`
}

type Address struct{
    Street  string `json:"street"`
    Suite  string `json:"suite"`
    City  string `json:"city"`
    Zipcode  string `json:"zipcode"`
}

type Company struct{
    Name  string `json:"name"`
    CatchPhrase  string `json:"catchPhrase"`
    Bs  string `json:"bs"`
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next step is creating a web request. &lt;a href="https://pkg.go.dev/net/http"&gt;About net/http&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //endpoint
    url := "https://jsonplaceholder.typicode.com/users"

    //create a client
    client := http.Client{
        Timeout: time.Second * 2, // Timeout after 2 seconds
    }

    //prepera new request s
    req, err := http.NewRequest(http.MethodGet, url, nil)
    if(err != nil){
        fmt.Println(err)
    }

    result , getErr:= client.Do(req)
    if(getErr != nil){
        fmt.Println(getErr)
    }
    fmt.Println(result)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vbT5LQf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btts5wkmx53x58ohupoh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vbT5LQf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btts5wkmx53x58ohupoh.png" alt="Image" width="880" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The defer keyword which executes result.Body.Close() at the end of the function is used to close the response body.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(result.Body != nil){
        defer result.Body.Close()
    }

    body, _ := ioutil.ReadAll(result.Body)

    users := []Users{} // declare array cause Json data is array

    jsonErr := json.Unmarshal(body, &amp;amp;users)

    if(jsonErr != nil){
        fmt.Println(jsonErr)
    }

    for _, data := range users{
        fmt.Println(data)
    }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7_eWOx6K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owvy01andvtmf09twbpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7_eWOx6K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owvy01andvtmf09twbpv.png" alt="Image" width="880" height="252"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#packages"&gt;
  &lt;/a&gt;
  packages
&lt;/h3&gt;

&lt;p&gt;These packages are loaded by default you don't need a go get command&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"fmt"&lt;/li&gt;
&lt;li&gt;"net/http"&lt;/li&gt;
&lt;li&gt;"time"&lt;/li&gt;
&lt;li&gt;"io/ioutil"&lt;/li&gt;
&lt;li&gt;"encoding/json"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;"fmt" package using for display some information or get any inputs from client but if you don't wanna use "fmt" code is Println("") because GoLang come with default packages. "net/http" packages is Web Request packages same as "fmt" package. "time" packages related to time information like DateTime. In this example doesn't need to this. You don't have to set Timeout actually it depends on. To get the response we are interested in, we have to access the Body property why we use "io/ioutil" packages. "encoding/json" packages related with marshal and unmarshal functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#another-usage"&gt;
  &lt;/a&gt;
  Another usage
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;url := "https://jsonplaceholder.typicode.com/users"

resp, err := http.Get(url)
if err != nil {
   fmt.Println(err)
}

body, err := ioutil.ReadAll(resp.Body)
if err != nil {
    fmt.Println(err)
}

fmt.Println(string(body))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run &lt;code&gt;go run main.go&lt;/code&gt; see results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },
  {
    "id": 2,
    "name": "Ervin Howell",
    "username": "Antonette",
    "email": "Shanna@melissa.tv",
    "address": {
      "street": "Victor Plains",
      "suite": "Suite 879",
      "city": "Wisokyburgh",
      "zipcode": "90566-7771",
      "geo": {
        "lat": "-43.9509",
        "lng": "-34.4618"
      }
    },
    "phone": "010-692-6593 x09125",
    "website": "anastasia.net",
    "company": {
      "name": "Deckow-Crist",
      "catchPhrase": "Proactive didactic contingency",
      "bs": "synergize scalable supply-chains"
    }
  },
  {
    "id": 3,
    "name": "Clementine Bauch",
    "username": "Samantha",
    "email": "Nathan@yesenia.net",
    "address": {
      "street": "Douglas Extension",
      "suite": "Suite 847",
      "city": "McKenziehaven",
      "zipcode": "59590-4157",
      "geo": {
        "lat": "-68.6102",
        "lng": "-47.0653"
      }
    },
    "phone": "1-463-123-4447",
    "website": "ramiro.info",
    "company": {
      "name": "Romaguera-Jacobson",
      "catchPhrase": "Face to face bifurcated interface",
      "bs": "e-enable strategic applications"
    }
  },
  {
    "id": 4,
    "name": "Patricia Lebsack",
    "username": "Karianne",
    "email": "Julianne.OConner@kory.org",
    "address": {
      "street": "Hoeger Mall",
      "suite": "Apt. 692",
      "city": "South Elvis",
      "zipcode": "53919-4257",
      "geo": {
        "lat": "29.4572",
        "lng": "-164.2990"
      }
    },
    "phone": "493-170-9623 x156",
    "website": "kale.biz",
    "company": {
      "name": "Robel-Corkery",
      "catchPhrase": "Multi-tiered zero tolerance productivity",
      "bs": "transition cutting-edge web services"
    }
  },
  {
    "id": 5,
    "name": "Chelsey Dietrich",
    "username": "Kamren",
    "email": "Lucio_Hettinger@annie.ca",
    "address": {
      "street": "Skiles Walks",
      "suite": "Suite 351",
      "city": "Roscoeview",
      "zipcode": "33263",
      "geo": {
        "lat": "-31.8129",
        "lng": "62.5342"
      }
    },
    "phone": "(254)954-1289",
    "website": "demarco.info",
    "company": {
      "name": "Keebler LLC",
      "catchPhrase": "User-centric fault-tolerant solution",
      "bs": "revolutionize end-to-end systems"
    }
  },
  {
    "id": 6,
    "name": "Mrs. Dennis Schulist",
    "username": "Leopoldo_Corkery",
    "email": "Karley_Dach@jasper.info",
    "address": {
      "street": "Norberto Crossing",
      "suite": "Apt. 950",
      "city": "South Christy",
      "zipcode": "23505-1337",
      "geo": {
        "lat": "-71.4197",
        "lng": "71.7478"
      }
    },
    "phone": "1-477-935-8478 x6430",
    "website": "ola.org",
    "company": {
      "name": "Considine-Lockman",
      "catchPhrase": "Synchronised bottom-line interface",
      "bs": "e-enable innovative applications"
    }
  },
  {
    "id": 7,
    "name": "Kurtis Weissnat",
    "username": "Elwyn.Skiles",
    "email": "Telly.Hoeger@billy.biz",
    "address": {
      "street": "Rex Trail",
      "suite": "Suite 280",
      "city": "Howemouth",
      "zipcode": "58804-1099",
      "geo": {
        "lat": "24.8918",
        "lng": "21.8984"
      }
    },
    "phone": "210.067.6132",
    "website": "elvis.io",
    "company": {
      "name": "Johns Group",
      "catchPhrase": "Configurable multimedia task-force",
      "bs": "generate enterprise e-tailers"
    }
  },
  {
    "id": 8,
    "name": "Nicholas Runolfsdottir V",
    "username": "Maxime_Nienow",
    "email": "Sherwood@rosamond.me",
    "address": {
      "street": "Ellsworth Summit",
      "suite": "Suite 729",
      "city": "Aliyaview",
      "zipcode": "45169",
      "geo": {
        "lat": "-14.3990",
        "lng": "-120.7677"
      }
    },
    "phone": "586.493.6943 x140",
    "website": "jacynthe.com",
    "company": {
      "name": "Abernathy Group",
      "catchPhrase": "Implemented secondary concept",
      "bs": "e-enable extensible e-tailers"
    }
  },
  {
    "id": 9,
    "name": "Glenna Reichert",
    "username": "Delphine",
    "email": "Chaim_McDermott@dana.io",
    "address": {
      "street": "Dayna Park",
      "suite": "Suite 449",
      "city": "Bartholomebury",
      "zipcode": "76495-3109",
      "geo": {
        "lat": "24.6463",
        "lng": "-168.8889"
      }
    },
    "phone": "(775)976-6794 x41206",
    "website": "conrad.com",
    "company": {
      "name": "Yost and Sons",
      "catchPhrase": "Switchable contextually-based project",
      "bs": "aggregate real-time technologies"
    }
  },
  {
    "id": 10,
    "name": "Clementina DuBuque",
    "username": "Moriah.Stanton",
    "email": "Rey.Padberg@karina.biz",
    "address": {
      "street": "Kattie Turnpike",
      "suite": "Suite 198",
      "city": "Lebsackbury",
      "zipcode": "31428-2261",
      "geo": {
        "lat": "-38.2386",
        "lng": "57.2232"
      }
    },
    "phone": "024-648-3804",
    "website": "ambrose.net",
    "company": {
      "name": "Hoeger LLC",
      "catchPhrase": "Centralized empowering task-force",
      "bs": "target end-to-end models"
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://github.com/bburaksseyhan/workingjson.git"&gt;Repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;

</description>
      <category>go</category>
      <category>tutorial</category>
      <category>opensource</category>
      <category>programming</category>
    </item>
    <item>
      <title>Day 24 of 100 Days of Code &amp; Scrum: React Framework for Production!</title>
      <author>Rammina</author>
      <pubDate>Mon, 01 Nov 2021 12:44:08 +0000</pubDate>
      <link>https://dev.to/rammina/day-24-of-100-days-of-code-scrum-react-framework-for-production-46g9</link>
      <guid>https://dev.to/rammina/day-24-of-100-days-of-code-scrum-react-framework-for-production-46g9</guid>
      <description>&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;I'd be lying to all of you if I said that this Monday was a great start to my week! It was definitely on the rough side with personal/family issues getting in the way.&lt;/p&gt;

&lt;p&gt;However, I managed to commit to the requirements of the challenge! I finished the official Next.js tutorial and I am 3/4ths of the way through Scrum and XP from the Trenches.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I planned for what I'll be doing this week. I decided I'll be focusing on Next.js and Scrum.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I learned about the two forms of rendering in Next.js:

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Static Generation&lt;/strong&gt; - the page HTML is generated during &lt;em&gt;build time&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Server-side Rendering&lt;/strong&gt; - the page HTML is generated during &lt;em&gt;each request&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;I read about &lt;code&gt;getStaticProps&lt;/code&gt;, &lt;code&gt;getStaticPaths&lt;/code&gt;, and &lt;code&gt;getServerSideProps&lt;/code&gt;.

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;getStaticProps&lt;/code&gt; - fetch data at build time (static generation).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;getStaticPaths&lt;/code&gt; - specify dynamic routes to prerender pages based on data (static generation).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;getServerSideProps&lt;/code&gt; - fetch data on each request (server-side rendering).&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;I learned how to do dynamic routing in Next.js.&lt;/li&gt;
&lt;li&gt;I read about how Next.js handles API support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I continued to read &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It is best to estimate using man-days instead of hours.&lt;/li&gt;
&lt;li&gt;no team member has complete focus, the best realistic expectation is a focus factor of 70%.&lt;/li&gt;
&lt;li&gt;in most cases, it might be best to shorten the time to do manual testing, over taking a long time to establish automated tests.&lt;/li&gt;
&lt;li&gt;I learned a lot about Extreme Programming.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At least, I managed to get through today and still commit to my goals. I hope that I manage to make up for it on the rest of the days in this week.&lt;/p&gt;

&lt;p&gt;Have a great Monday, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTUETMOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9dd6zelfb0pagv2n55m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTUETMOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9dd6zelfb0pagv2n55m.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>3 Soft Skills To Succeed as a Developer</title>
      <author>Victor Loveday</author>
      <pubDate>Mon, 01 Nov 2021 12:40:36 +0000</pubDate>
      <link>https://dev.to/vicviral/3-soft-skills-to-succeed-as-a-developer-26f3</link>
      <guid>https://dev.to/vicviral/3-soft-skills-to-succeed-as-a-developer-26f3</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. Creativity&lt;/strong&gt;&lt;br&gt;
When problems surface, a creative developer knows solutions likely already exist. And if it doesn’t, the developer isn’t afraid to come up with new solutions.&lt;/p&gt;

&lt;p&gt;As a software developer, solutions aren’t handed over to you to mindlessly code. Instead, you must explore possibilities, weighing different technologies and your team’s skills. After gaining some experience to understand what technologies exist, the creativity of combining these solutions together becomes easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As a full-time software developer, you cannot fail — if a problem exists in your code, there is a solution, and you will find it. This will be the true test of your creativity.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Reliability&lt;/strong&gt;&lt;br&gt;
In a team, people rely on you to get your work done, especially when you promise to complete a task. If you’re reliable, no one will need to check up on your progress, as you’ve proven you can take on responsibilities.&lt;/p&gt;

&lt;p&gt;Leaders want software developers who don’t need any babysitting. They want direct reports from who agree to do something and then follow through on their commitment. Believe it or not, many people aren’t reliable, so being a reliable developer will make you the go-to person for new tasks and opportunities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Steller Communication&lt;/strong&gt;&lt;br&gt;
All softwares are built on a team composed of people with different ideologies, beliefs, biases, and experiences.&lt;/p&gt;

&lt;p&gt;The best software developers communicate complex technical concepts to non-technical folks or technical ones who are still learning. You will go far as a developer if you can communicate across roles and teach others.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>career</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Connect to MongoDB Atlas from SvelteKit</title>
      <author>kvetoslavnovak</author>
      <pubDate>Mon, 01 Nov 2021 12:38:58 +0000</pubDate>
      <link>https://dev.to/kvetoslavnovak/connect-to-mongodb-atlas-from-sveltekit-25hg</link>
      <guid>https://dev.to/kvetoslavnovak/connect-to-mongodb-atlas-from-sveltekit-25hg</guid>
      <description>&lt;p&gt;MongoDB Atlas recently published new &lt;a href="https://docs.atlas.mongodb.com/best-practices-connecting-from-vercel/"&gt;best practices how to connect to MongoDB Atlas database&lt;/a&gt;. If you would like to know how to apply this recommendations in SvelteKit using MongoDB Atlas database read on.&lt;/p&gt;

&lt;p&gt;Start a new SvelteKit project in your console called for example SvelteKit_MongoDB_Atlas&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="nx"&gt;svelte&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;next&lt;/span&gt; &lt;span class="nx"&gt;SvelteKit_MongoDB_Atlas&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;SvelteKit_MongoDB_Atlas&lt;/span&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To communicate with MongoDB database we will need Node driver &lt;a href="https://github.com/mongodb/node-mongodb-native"&gt;mongodb&lt;/a&gt;. So install it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;mongodb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I assume you have set up your MongoDB Atlas database. Their Starter Cluster is free. They have a clear &lt;a href="https://docs.atlas.mongodb.com/getting-started/"&gt;tutorial&lt;/a&gt; how to do this. Or just follow the steps after your sign up, it is pretty straightforward.&lt;/p&gt;

&lt;p&gt;To connect to MongoDB Atlas you need to use a so called MONGODB_URI. MongoDB Atlas gave you this link when you set up your database there. It should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;MONGODB_URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongodb&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;srv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@cluster0.ol6zu.mongodb.net/todos?retryWrites=true&amp;amp;w=majority&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you see it contains some sensitive data. So our project needs some features to keep it secret, keep it save. Best way is to use environmental variables. You usually store them in &lt;strong&gt;.env&lt;/strong&gt; file in the root directory of your project. SvelteKit is using &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt; under the hood. Vite has its &lt;a href="https://vitejs.dev/guide/env-and-mode.html#env-files"&gt;own implementation of environmental variables&lt;/a&gt;. But it is somehow &lt;a href="https://dev.to/danawoodman/storing-environment-variables-in-sveltekit-2of3"&gt;tricky&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So our project will need some other tool. Let install good old &lt;a href="https://github.com/motdotla/dotenv#readme"&gt;dotenv&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the root directory of your project create a new file &lt;strong&gt;.env&lt;/strong&gt; and insert your MONGODB_URI. Specify also database name (DB_NAME). Following recommendation from MongoDB Atlas specify that we use it in development (NODE_ENV) as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;MONGODB_URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongodb&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;srv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@cluster0.ol6zu.mongodb.net/todos?retryWrites=true&amp;amp;w=majority&lt;/span&gt;
&lt;span class="nx"&gt;DB_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;database_name&lt;/span&gt;
&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;development&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally we have arrived to the implementation of MongoDB Atlas best practices. One problem this tries to solve is not open more connections to the database so it will not crash eventually.&lt;/p&gt;

&lt;p&gt;In your &lt;em&gt;lid&lt;/em&gt; directory (which is in a &lt;em&gt;scr&lt;/em&gt; directory) create a new file &lt;strong&gt;mongodb-client.js&lt;/strong&gt;. Copy inside the code advice by MongoDB Atlas best practices.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;MongoClient&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongodb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MONGODB_URI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;clientPromise&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Please add your Mongo URI to .env.local&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NODE_ENV&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// In development mode, use a global variable so that the value&lt;/span&gt;
    &lt;span class="c1"&gt;// is preserved across module reloads caused by HMR (Hot Module Replacement).&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_mongoClientPromise&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MongoClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_mongoClientPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;clientPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_mongoClientPromise&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// In production mode, it's best to not use a global variable.&lt;/span&gt;
    &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MongoClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;clientPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Export a module-scoped MongoClient promise. By doing this in a&lt;/span&gt;
&lt;span class="c1"&gt;// separate module, the client can be shared across functions.&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;clientPromise&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may have noticed that we made &lt;strong&gt;one very important modification&lt;/strong&gt; concerning how we are referencing environmental variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MONGODB_URI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// this works&lt;/span&gt;
&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGODB_URI&lt;/span&gt; &lt;span class="c1"&gt;//this does not work!!!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;em&gt;routes&lt;/em&gt; folder create &lt;strong&gt;index.js&lt;/strong&gt; file. We are now ready to define an endpoint. To make it easy and keep this example rather simple we will  and insert one task "Walk a dog" to a collection "sveltekit-todos" in MongoDB Atlas using get method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;clientPromise&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../lib/mongodb-client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dbConnection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;clientPromise&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dbConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sveltekit-todos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Walk a dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;todos&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you open the index page of the project the page should notify you that the  insertion was successful, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;acknowledged&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;insertedId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;617fd886f9f1f3f9a838c382&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope this was helpful. &lt;/p&gt;

</description>
      <category>sveltekit</category>
      <category>mongodb</category>
      <category>tutorial</category>
      <category>vercel</category>
    </item>
  </channel>
</rss>
