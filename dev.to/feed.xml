<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS Selectors: The Full Reference Guide üöÄ</title>
      <author>_ùô≤ùôæùô≥ùô¥</author>
      <pubDate>Wed, 23 Jun 2021 13:35:26 +0000</pubDate>
      <link>https://dev.to/underscorecode/css-selectors-the-full-reference-guide-3cbf</link>
      <guid>https://dev.to/underscorecode/css-selectors-the-full-reference-guide-3cbf</guid>
      <description>&lt;p&gt;Hello, everybody! üöÄ&lt;/p&gt;

&lt;p&gt;Today we'll be covering CSS selectors in depth.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-a-css-selector"&gt;What is a selector in CSS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#types-of-selectors"&gt;Types of selectors&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#universal-selector"&gt;Universal selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#type-selector"&gt;Type selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#class-selector"&gt;Class selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id-selector"&gt;ID selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#attribute-selector"&gt;Attribute selector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#grouping-selectors"&gt;Grouping selectors&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#group-selector"&gt;Group selector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#combining-selectors"&gt;Combining selectors&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#descendant-combinator"&gt;Descendant combinator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#child-combinator"&gt;Child combinator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#general-sibling-combinator"&gt;General sibling combinator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adj-sibling-combinator"&gt;Adjacent sibling combinator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#pseudo-classes"&gt;Pseudo-classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pseudo-elements"&gt;Pseudo-elements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#what-is-a-selector-in-css"&gt;
  &lt;/a&gt;
  What is a selector in CSS? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A CSS selector is a &lt;strong&gt;pattern&lt;/strong&gt; used to &lt;strong&gt;choose the HTML elements&lt;/strong&gt; that we want to &lt;strong&gt;style&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Speaking more technically, CSS selectors are able to &lt;strong&gt;select those HTML elements to which a style ruleset will be applied&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#types-of-selectors"&gt;
  &lt;/a&gt;
  Types of selectors &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-universal-selector"&gt;
  &lt;/a&gt;
  1. Universal selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;*&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by an &lt;strong&gt;asterisk&lt;/strong&gt; (*) and matches &lt;strong&gt;all the elements&lt;/strong&gt; in the HTML document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Computer Science Eng.&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Mathematics&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Physics&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;coral&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a 1px solid coral border to all elements in the document.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hhcs9u2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pljk80n8hmj0ihv68wdk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hhcs9u2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pljk80n8hmj0ihv68wdk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The border property shows very well the behavior of this selector. As you can observe in the image above, every element is now surrounded by a border, including the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element and the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element. &lt;/p&gt;



&lt;p&gt;The universal selector is also used to &lt;strong&gt;avoid confusion&lt;/strong&gt; and make your code &lt;strong&gt;easier to read&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Let's take a look at the following examples:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nd"&gt;:first-child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;maroon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;maroon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;These two code snippets look both pretty much the same, right?&lt;/p&gt;

&lt;p&gt;Well, we only need to notice the &lt;strong&gt;blank space&lt;/strong&gt; between the type selector and the pseudo-class to realize that they're not exactly the same: the first one selects the first child of every &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element and the second one selects the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements that are first children themselves of another element.&lt;/p&gt;

&lt;p&gt;Don't panic yet, we'll be talking more in detail about &lt;strong&gt;pseudo-classes&lt;/strong&gt; and &lt;strong&gt;how selectors work&lt;/strong&gt; later on üôÇ&lt;/p&gt;

&lt;p&gt;For now, just keep in mind that in this example there are two different element selectors working together to apply a styling rule. Everything will make sense later. Promise.&lt;/p&gt;

&lt;p&gt;In any case, to distinguish one from the other and being able to see the blank space more clearly, &lt;strong&gt;we can make use of the universal selector&lt;/strong&gt;, as shown below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;maroon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Speaking in terms of functionality, adding an asterisk symbol &lt;strong&gt;does nothing&lt;/strong&gt;, but it's useful to quickly &lt;strong&gt;identify the elements that are going to be targeted&lt;/strong&gt; and to keep your code &lt;strong&gt;neat and tidy&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-type-selector"&gt;
  &lt;/a&gt;
  2. Type selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elemType&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector matches &lt;strong&gt;all elements that belong to the specified type&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;A paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Another paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;One more paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;deeppink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a font size of 1.5rem and a deep pink color to all &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements. Easy and direct.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jjVLGiSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lajufuf1sxcuqf7qh7v1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jjVLGiSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lajufuf1sxcuqf7qh7v1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-class-selector"&gt;
  &lt;/a&gt;
  3. Class selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;.classname&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;period&lt;/strong&gt; (.) and matches &lt;strong&gt;all elements that contain the specified class&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"deeppink"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a deep pink paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hotpink"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a hot pink paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pink"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a regular pink paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"deeppink-bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a paragraph with a deep pink background&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hotpink-bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a paragraph with a hot pink background&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"pink-bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is a paragraph with a regular pink background&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.deeppink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;deeppink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.hotpink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.pink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.deeppink-bg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;deeppink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.hotpink-bg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.pink-bg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Group selector - Stay until the end to understand its
 behavior üòâ */&lt;/span&gt;
&lt;span class="nc"&gt;.deeppink-bg&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.hotpink-bg&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.pink-bg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a different pink color variant to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element depending on the class they contain, styling either their text or their background.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELbwokgu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcqh7jakxg9aibe7jep4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELbwokgu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcqh7jakxg9aibe7jep4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Another way to specify a class selector is &lt;strong&gt;by appending the type of the element that contains the classname&lt;/strong&gt; in front of the regular class selector.&lt;/p&gt;

&lt;p&gt;Take a look at this example of a regular list:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We could style every &lt;em&gt;list item&lt;/em&gt; like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.list-item&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Or like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nc"&gt;.list-item&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Note that in this specific case it wouldn't be necessary to use this method because all the elements that contain the &lt;em&gt;list-item&lt;/em&gt; class are &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, so appending the element type wouldn't make any difference .&lt;/p&gt;

&lt;p&gt;But let's have a look at this other example below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;List of animals&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Cat&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Dog&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Monkey&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Dolphin&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Frog&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this example, we have different types of elements referencing the same class, so, in order to apply &lt;strong&gt;different styling rules&lt;/strong&gt; to each of them, &lt;strong&gt;we need to specify the type of the elements&lt;/strong&gt; that contain that class. Otherwise, the elements won't be targeted properly and, consequently, the styles we're trying to apply won't be displayed as expected.&lt;/p&gt;

&lt;p&gt;So we should do something like the following to apply different rules depending on if the element is a heading or a paragraph:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="nc"&gt;.big&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;coral&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="nc"&gt;.big&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;orange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---8ofQjZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/it9a9k8vsyosjziprhbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---8ofQjZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/it9a9k8vsyosjziprhbv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-id-selector"&gt;
  &lt;/a&gt;
  4. ID selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;#idname&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;hash&lt;/strong&gt; symbol (#) and matches &lt;strong&gt;the unique element that contains the specified id&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"users-table"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Users&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;John Doe&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Jane Doe&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"staff-table"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Staff&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Hannah Legend&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Daniel Oaks&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Type selector */&lt;/span&gt;
&lt;span class="nt"&gt;table&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* ID selectors */&lt;/span&gt;
&lt;span class="nf"&gt;#users-table&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#staff-table&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a black background color and a white text color to the table that matches the id &lt;em&gt;users-table&lt;/em&gt;, and a 1px solid black border to the table that matches the id &lt;em&gt;staff-table&lt;/em&gt;. Both of them receive a padding of 20px based on their type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YBLdR7lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxf6mgk56mc7bz7xwfc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YBLdR7lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxf6mgk56mc7bz7xwfc6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Even though HTML allows you to assign the same id value to several elements, &lt;strong&gt;you shouldn't ever do it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you need to apply the same style to a bunch of different elements, &lt;strong&gt;always use the class attribute&lt;/strong&gt;. You'll keep your code clean and will get rid of a possible confusion.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#5-attribute-selector"&gt;
  &lt;/a&gt;
  5. Attribute selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The attribute selector is more complex than the rest of the selectors and has &lt;strong&gt;several syntaxes&lt;/strong&gt; that can be applied to our HTML elements based on which &lt;strong&gt;condition&lt;/strong&gt; should be satisfied by them.&lt;/p&gt;

&lt;p&gt;In other words, it matches &lt;strong&gt;all the HTML elements which contain a specified attribute&lt;/strong&gt; and whose value for that attribute &lt;strong&gt;satisfies a given condition&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#attribute-selector-syntaxes"&gt;
  &lt;/a&gt;
  Attribute selector syntaxes
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#syntax-1"&gt;
  &lt;/a&gt;
  Syntax 1
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements with the &lt;strong&gt;specified attribute&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/contact"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/about"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Type selector */&lt;/span&gt;
&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkslategray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Attribute selector */&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a white color to every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that contains the &lt;code&gt;href&lt;/code&gt; attribute, regardless of its value, and removes the underline.&lt;/p&gt;

&lt;p&gt;We're also styling the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element with a background color and some padding by making use of the type selector.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HXtAwOBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gv6kb7j9gqb0bshhrft3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HXtAwOBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gv6kb7j9gqb0bshhrft3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-2"&gt;
  &lt;/a&gt;
  Syntax 2
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; is exactly&lt;/strong&gt;  &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Username&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Username"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Password&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Password"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;chocolate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a chocolate text color to every &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element that has the &lt;code&gt;type&lt;/code&gt; attribute with an exact value of &lt;em&gt;text&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9g3kJiWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98clr2noel3w93i126t4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9g3kJiWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98clr2noel3w93i126t4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;We could as well use this syntax to &lt;strong&gt;emulate the ID selector&lt;/strong&gt; (remember the example in section 4):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"users-table"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"staff-table"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; By using this attribute selector syntax, we are targeting elements that contain an &lt;em&gt;id&lt;/em&gt; attribute whose value is exactly &lt;em&gt;users-table&lt;/em&gt; or &lt;em&gt;staff-table&lt;/em&gt;. We're using this one syntax because an element can only have one &lt;em&gt;idname&lt;/em&gt;, so the value needs to be exact (=).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#syntax-3"&gt;
  &lt;/a&gt;
  Syntax 3
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr~=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; is a list of words separated by blanks and one of them is exactly&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en-gb en-us en-ca en-au en-nz"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Welcome!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"fr-fr fr-ca fr-be"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Bienvenue!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;~=&lt;/span&gt;&lt;span class="s1"&gt;"en-us"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;navy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;~=&lt;/span&gt;&lt;span class="s1"&gt;"fr-fr"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a navy color to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element whose value for &lt;code&gt;lang&lt;/code&gt; is a list that contains the exact string &lt;em&gt;en-us&lt;/em&gt;. Same for all &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements whose value for &lt;code&gt;lang&lt;/code&gt; contains &lt;em&gt;fr-fr&lt;/em&gt;, applying a red color in this case.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EIFKMbEt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0qn0t4xfsmcp08kgjcwq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EIFKMbEt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0qn0t4xfsmcp08kgjcwq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;As well as the previous syntax, through which we could emulate the ID selector behavior, we can also use this one attribute syntax to &lt;strong&gt;emulate the behavior of the class selector&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;~=&lt;/span&gt;&lt;span class="s1"&gt;"list-item"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; By using this attribute selector syntax, we are targeting elements that have a &lt;em&gt;class&lt;/em&gt; attribute whose value is a list that contains the string &lt;em&gt;list-item&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;We're using this specific syntax because an element can contain several classes and we're aiming at just one of them (~=). But even though the element had just one class, &lt;strong&gt;the value for the class attribute always acts like a list of values&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#syntax-4"&gt;
  &lt;/a&gt;
  Syntax 4
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr|=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; is exactly&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;or starts with&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;followed by a hyphen&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en-us"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en-gb"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="s1"&gt;"en"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;cornflowerblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;antiquewhite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a cornflower blue background color and an antique white text color to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element that has a &lt;code&gt;lang&lt;/code&gt; attribute whose value is exactly &lt;em&gt;en&lt;/em&gt; or starts with &lt;em&gt;en-&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P3SOBuOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hs7uwkhop6l34ae1ibe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P3SOBuOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hs7uwkhop6l34ae1ibe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-5"&gt;
  &lt;/a&gt;
  Syntax 5
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr^=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; starts with&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#list1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go to list 1&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#list2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go to list 2&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Lists&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"list1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;List 1&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Milk&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Butter&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Eggs&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Sugar&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"list2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;List 2&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Oranges&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Lemons&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Strawberries&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Apples&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;^=&lt;/span&gt;&lt;span class="s1"&gt;"#"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;crimson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a crimson color and a font size of 2rem to every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that has a &lt;code&gt;href&lt;/code&gt; attribute whose value starts with &lt;em&gt;#&lt;/em&gt;.&lt;br&gt;
&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AxEpGji---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ej7ue7fvtvm7ml5cojma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AxEpGji---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ej7ue7fvtvm7ml5cojma.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-6"&gt;
  &lt;/a&gt;
  Syntax 6
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr$=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; ends with&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"css-selectors-guide.pdf"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CSS Selectors Guide&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;".pdf"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;slateblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a slate blue color to every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that has a &lt;code&gt;href&lt;/code&gt; attribute whose value ends with &lt;em&gt;.pdf&lt;/em&gt;.&lt;br&gt;
&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U-uhIl0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vemqc0qkwnfbeacap4xr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U-uhIl0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vemqc0qkwnfbeacap4xr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax-7"&gt;
  &lt;/a&gt;
  Syntax 7
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;[attr*=value]&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;Matches elements whose &lt;strong&gt;value for &lt;em&gt;attr&lt;/em&gt; contains at least one occurrence of&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"small-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a small box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"big-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a big box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s1"&gt;"box"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;burlywood&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a burlywood background color to every &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element that contains a &lt;code&gt;class&lt;/code&gt; attribute whose value has at least one occurrence of the string &lt;em&gt;box&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fW_s2XoF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9ocd7x3jzxr5hc15chv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fW_s2XoF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9ocd7x3jzxr5hc15chv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#grouping-selectors"&gt;
  &lt;/a&gt;
  Grouping selectors &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Grouping selectors in CSS is basically used to &lt;strong&gt;put together&lt;/strong&gt; those elements of different type or with different id/classes that we want to apply the &lt;strong&gt;same style properties&lt;/strong&gt; to.&lt;/p&gt;

&lt;p&gt;Additionally, by using this technique, we'll get rid of redundancy and our code will be &lt;strong&gt;clean&lt;/strong&gt;, &lt;strong&gt;concise&lt;/strong&gt; and &lt;strong&gt;organized&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#group-selector"&gt;
  &lt;/a&gt;
  Group selector &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1, ..., elemN&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;comma&lt;/strong&gt; (,) and matches &lt;strong&gt;all the elements stated in the list&lt;/strong&gt; and applies the same ruleset to all of them.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Computer Science Engineering&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;List of courses&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Algebra&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Calculus&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Physics&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Discrete Mathematics&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Introduction to Programming&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkred&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a dark red color to every &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aow1sF9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hvbszl13m7vfy7f1uvm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aow1sF9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hvbszl13m7vfy7f1uvm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#combining-selectors"&gt;
  &lt;/a&gt;
  Combining selectors &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;CSS selectors can also be combined. By combining selectors, then we can define &lt;strong&gt;CSS combinators&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;CSS combinators are used to &lt;strong&gt;establish a relationship between different selectors&lt;/strong&gt; and are very useful to make your element selection &lt;strong&gt;more targeted&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-descendant-combinator"&gt;
  &lt;/a&gt;
  1. Descendant combinator &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1 elem2&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This combinator is represented by a &lt;strong&gt;single space&lt;/strong&gt; ( ) and matches &lt;strong&gt;all &lt;em&gt;elem2&lt;/em&gt; that are descendants of&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;elem1&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Consider the following navigation:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;People&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;Students&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Faculty members&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Discrete Mathematics&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Programming&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Physics&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;Algorithms&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;Staff members&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;About&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;crimson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkslateblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a 1px solid crimson border, a dark slate blue color, a font size of 1.5rem and a bold font weight to every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that is descendant of a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element, &lt;strong&gt;regardless of how nested they are&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NptW7b-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2p6xm0nqrlni7anhvark.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NptW7b-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2p6xm0nqrlni7anhvark.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-child-combinator"&gt;
  &lt;/a&gt;
  2. Child combinator &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1 &amp;gt; elem2&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This combinator is represented by a &lt;strong&gt;prompt&lt;/strong&gt; (&amp;gt;) and matches &lt;strong&gt;all &lt;em&gt;elem2&lt;/em&gt; that are direct children of&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;elem1&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a direct child of .box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is not a direct child of .box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is another direct child of .box&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkgoldenrod&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a dark golden color to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element that is a direct child of any element that has the class &lt;em&gt;box&lt;/em&gt;, so, in this HTML example, the first and last &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements will be selected, but not the one in the middle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_sHMKHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpmqn5iqgv3iob6w0bds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_sHMKHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpmqn5iqgv3iob6w0bds.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-general-sibling-combinator"&gt;
  &lt;/a&gt;
  3. General sibling combinator &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1 ~ elem2&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This combinator is represented by a &lt;strong&gt;tilde&lt;/strong&gt; (~) and matches &lt;strong&gt;all &lt;em&gt;elem2&lt;/em&gt; that are siblings to&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;elem1&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;and come after it&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"blue-mug.jpeg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"a regular blue coffee mug"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Blue mug&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Price: $15&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will apply a dark blue color to every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element which is a sibling of any &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element and comes after it. In this example, both &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements will be selected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XySZq72u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzd07tw58z4i6dwq725o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XySZq72u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzd07tw58z4i6dwq725o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-adjacent-sibling-combinator"&gt;
  &lt;/a&gt;
  4. Adjacent sibling combinator &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem1 + elem2&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This combinator is represented by a &lt;strong&gt;plus&lt;/strong&gt; symbol (+) and matches &lt;strong&gt;all &lt;em&gt;elem2&lt;/em&gt; that are siblings to&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;elem1&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;and appear immediately after it&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"blue-mug.jpeg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"a regular blue coffee mug"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Blue mug&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Price: $15&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this case, only the first &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element will be selected, since the second one doesn't appear immediately after the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SllalOHu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6he4xnv2xj565trggu7p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SllalOHu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6he4xnv2xj565trggu7p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#pseudoclasses"&gt;
  &lt;/a&gt;
  Pseudo-classes &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A CSS pseudo-class is a keyword that is added to a selector and &lt;strong&gt;defines a special state&lt;/strong&gt; of the selected elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem:pseudo-class&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;colon&lt;/strong&gt; (:).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Shopping list&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Milk&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Butter&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Eggs&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Sugar&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this example, we're applying a black background color and a white text color to every &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element when the cursor hovers over it.&lt;/p&gt;

&lt;p&gt;Take a look at what happens when we hover over the &lt;em&gt;Butter&lt;/em&gt; element:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGWZUQuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kadphf9gvfhu0hab6vlc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGWZUQuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kadphf9gvfhu0hab6vlc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some of the &lt;strong&gt;most common CSS pseudo-classes&lt;/strong&gt; are:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:active&lt;/code&gt;, &lt;code&gt;:hover&lt;/code&gt;, &lt;code&gt;:focus&lt;/code&gt;, &lt;code&gt;:disabled&lt;/code&gt;, &lt;code&gt;:checked&lt;/code&gt;, &lt;code&gt;:first-child&lt;/code&gt;, &lt;code&gt;:nth-child&lt;/code&gt;, &lt;code&gt;:first-of-type&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#pseudoelements"&gt;
  &lt;/a&gt;
  Pseudo-elements &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A CSS pseudo-element is a keyword that is added to a selector to &lt;strong&gt;style a specific part&lt;/strong&gt; of the selected elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt; &lt;em&gt;elem:pseudo-element&lt;/em&gt; { style properties }&lt;/p&gt;

&lt;p&gt;This selector is represented by a &lt;strong&gt;double colon&lt;/strong&gt; (::).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;CODE&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"_"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In this example, we're appending an underscore symbol in front of every &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z0vBDXSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p6dm0v4obsehzpedvf8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z0vBDXSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p6dm0v4obsehzpedvf8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some of the &lt;strong&gt;most common CSS pseudo-elements&lt;/strong&gt; are:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;::after&lt;/code&gt; (can also be written as &lt;code&gt;:after&lt;/code&gt;), &lt;code&gt;::before&lt;/code&gt; (can also be written as &lt;code&gt;:before&lt;/code&gt;), &lt;code&gt;::marker&lt;/code&gt;, &lt;code&gt;::placeholder&lt;/code&gt;, &lt;code&gt;::first-letter&lt;/code&gt;.&lt;/p&gt;



&lt;p&gt;And that's pretty much it üôÇ&lt;/p&gt;

&lt;p&gt;I hope this reference guide has been helpful for you.&lt;/p&gt;

&lt;p&gt;You can also check out the following related posts about CSS selectors on &lt;a href="https://instagram.com/underscorecode"&gt;@underscorecode&lt;/a&gt; Instagram account:&lt;/p&gt;


&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CP8znDHsMmV/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;

&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CQErX0PMe1I/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;

&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CQWagoQsEdV/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;






&lt;p&gt;üéâ Don't forget to follow &lt;a class="mentioned-user" href="https://dev.to/underscorecode"&gt;@underscorecode&lt;/a&gt;
 on &lt;a href="https://instagram.com/underscorecode"&gt;Instagram&lt;/a&gt; and &lt;a href="https://twitter.com/underscorecode"&gt;Twitter&lt;/a&gt; for more daily webdev content üñ•üñ§&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Escalando aplica√ß√µes automaticamente no Kubernetes usando KEDA</title>
      <author>Willian C√©sar</author>
      <pubDate>Wed, 23 Jun 2021 13:18:01 +0000</pubDate>
      <link>https://dev.to/willianccs/escalando-aplicacoes-automaticamente-no-kubernetes-usando-keda-c41</link>
      <guid>https://dev.to/willianccs/escalando-aplicacoes-automaticamente-no-kubernetes-usando-keda-c41</guid>
      <description>&lt;p&gt;Para quem ainda n√£o conhece o &lt;a href="https://keda.sh/"&gt;KEDA (Kubernetes Event-Driven Autoscaling)&lt;/a&gt;, √©:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Um componente leve e de finalidade √∫nica que pode ser adicionado a qualquer cluster do Kubernetes. Funciona junto com componentes Kubernetes padr√£o, como o Horizontal Pod Autoscaler (HPA) e pode estender a funcionalidade sem sobrescrever ou duplica√ß√£o.&lt;br&gt;
Retirado da documenta√ß√£o oficial&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Foi lan√ßado no fim de 2019 &lt;a href="https://cloudblogs.microsoft.com/opensource/2019/11/19/keda-1-0-release-kubernetes-based-event-driven-autoscaling/"&gt;(an√∫ncio oficial)&lt;/a&gt; e √© fruto de uma parceria entre Microsoft &amp;amp; Red Hat.&lt;/p&gt;

&lt;p&gt;E ele cumpre bem o lema, que √©: &lt;strong&gt;‚ÄúApplication autoscaling made simple‚Äù&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Nativamente o Kubernetes s√≥ permite configurar &lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/"&gt;HPA&lt;/a&gt; com as m√©tricas de CPU e mem√≥ria.&lt;br&gt;
Se quiser escalar as aplica√ß√µes utilizando outro tipo de m√©trica, por exemplo, lags de eventos ou filas, voc√™ precisa primeiro criar um adaptador de m√©tricas (custom metrics) para extrair as m√©tricas da fonte desejada. Entretanto se  precisar obter m√©tricas de v√°rias fontes usando v√°rios adaptadores, voc√™ est√° sem sorte porque apenas um por vez √© compat√≠vel (a menos que tenha mudado recentemente).&lt;/p&gt;

&lt;p&gt;J√° o KEDA extrai de uma &lt;a href="https://keda.sh/docs/2.3/scalers/"&gt;variedade de fontes&lt;/a&gt; e dimensiona automaticamente suas implanta√ß√µes de &lt;code&gt;0&lt;/code&gt; a &lt;code&gt;N-inst√¢ncias&lt;/code&gt; com base em sua configura√ß√£o no ScaledObject.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sbBw_34S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sav8cxq4lajkb3tfo7bk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sbBw_34S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sav8cxq4lajkb3tfo7bk.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Outro ponto interessante √© que o KEDA n√£o ‚Äúreinventa a roda‚Äù e n√£o construiu seu pr√≥prio mecanismo de escalonamento, se aproveitando de HPAs do Kubernetes e dos secrets (&lt;strong&gt;TriggerAuthentication&lt;/strong&gt;) j√° usados pelas aplica√ß√µes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#instalando-o-keda"&gt;
  &lt;/a&gt;
  INSTALANDO O KEDA
&lt;/h2&gt;

&lt;p&gt;As instru√ß√µes para implantar o KEDA s√£o muito simples e podem ser encontradas &lt;a href="https://keda.sh/docs/2.3/deploy/"&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem tr√™s maneiras de implantar KEDA em seu cluster Kubernetes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Helm charts&lt;/li&gt;
&lt;li&gt;Operator Hub&lt;/li&gt;
&lt;li&gt;Implantar YAMLs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos usar a primeira op√ß√£o.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo add kedacore https://kedacore.github.io/charts
helm repo update

kubectl create ns keda
helm install keda kedacore/keda --namespace keda
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ap√≥s a instala√ß√£o teremos 2 deployments (KEDA Operator e KEDA Metrics API) rodando no cluster‚Ä¶&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get deployment -n keda
NAME                              READY   UP-TO-DATE   AVAILABLE   AGE
keda-operator                     1/1     1            1           1h
keda-operator-metrics-apiserver   1/1     1            1           1h
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;e mais alguns CRDs dispon√≠veis:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl api-resources --api-group=keda.sh
NAME                     SHORTNAMES       APIGROUP   NAMESPACED   KIND
scaledjobs               sj               keda.sh    true         ScaledJob
scaledobjects            so               keda.sh    true         ScaledObject
triggerauthentications   ta,triggerauth   keda.sh    true         TriggerAuthentication
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ScaledJobs*/ScaledObject&lt;/strong&gt;: Os ScaledJobs/ScaledObjects mapeiam uma fonte de evento para a jobs/deployments que voc√™ deseja dimensionar.&lt;br&gt;
&lt;strong&gt;TriggerAuthentication&lt;/strong&gt;: Se necess√°rio, este recurso cont√©m a configura√ß√£o de autentica√ß√£o necess√°ria para monitorar a origem do evento.&lt;/p&gt;

&lt;p&gt;O "ScaledObject" tamb√©m cria o HPA para voc√™.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;O KEDA n√£o apenas dimensiona deployments, mas tamb√©m pode dimensionar seus jobs do Kubernetes. Em vez de ter muitos eventos processados ‚Äã‚Äãem sua implanta√ß√£o e aumentar ou diminuir com base no n√∫mero de mensagens que precisam ser consumidas, o KEDA pode ativar um trabalho para cada mensagem na origem do evento.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#exemplo-com-kafka"&gt;
  &lt;/a&gt;
  EXEMPLO COM KAFKA
&lt;/h2&gt;

&lt;p&gt;Vamos dar uma olhada mais de perto no &lt;a href="https://keda.sh/docs/2.3/concepts/scaling-deployments/"&gt;ScaledObject&lt;/a&gt; e &lt;a href="https://keda.sh/docs/2.3/scalers/apache-kafka/"&gt;Kafka trigger&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: kafka-consumer-scaler
  labels:
    deploymentName: my-kafka-consumer-service
  namespace: sample
spec:
  scaleTargetRef:
    deploymentName: my-kafka-consumer-service
  pollingInterval: 1        # Optional. Default: 30 seconds
  cooldownPeriod:  30       # Optional. Default: 300 seconds
  minReplicaCount: 0        # Optional. Default: 0
  maxReplicaCount: 10   # Optional. Default: 100
  triggers:
    - type: kafka
      metadata:
        topic: test-topic-1
        # brokerList: my-cluster-kafka-bootstrap.kafka:9092 - deprecated
        bootstrapServers: my-cluster-kafka-bootstrap.kafka:9092    
        consumerGroup: my-kafka-consumerGroup
        lagThreshold: '5'       # Default: 10
        offsetResetPolicy: latest
        allowIdleConsumers: false
      authenticationRef:
        name: keda-trigger-auth-kafka-credential
    ## Optional: list of topics to trigger
    #- type: kafka
    #   metadata:
    #     topic: test-topic-2
    #     bootstrapServers: my-cluster-kafka-bootstrap.kafka:9092    
    #     consumerGroup: my-kafka-consumerGroup
    #     lagThreshold: '5'     # Default: 10
    #     offsetResetPolicy: latest
    #     allowIdleConsumers: false
    #   authenticationRef:
    #     name: keda-trigger-auth-kafka-credential
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;O ScaledObject, TriggerAuthentication e a implanta√ß√£o referenciada em deploymentName precisam estar no mesmo namespace.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Apesar de serem valores opcionais, √© importante definir valores dentro dos padr√µes para seu neg√≥cio nos par√¢metros &lt;code&gt;minReplicaCount&lt;/code&gt; e &lt;code&gt;maxReplicaCount&lt;/code&gt;. Para evitar rebalanceamento de parti√ß√µes no Kafka E/OU evitar que muitos pods sejam iniciados - consumindo todos os recursos do cluster üí•.&lt;/li&gt;
&lt;li&gt;O par√¢metro &lt;code&gt;offsetResetPolicy&lt;/code&gt; pode ser earliest ou latest. Como o KEDA vai percorrer todos os t√≥picos, vale a pena entender como o c√≥digo (neg√≥cio) se comporta com duplicidade de eventos. &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Por padr√£o, o n√∫mero de r√©plicas n√£o exceder√° o n√∫mero de parti√ß√µes em um t√≥pico. Ou seja, se maxReplicaCount for definido mais do que o n√∫mero de parti√ß√µes, o escalonador n√£o vai atingir o valor definido. Caso queira mudar este comportamento, ajuste o par√¢metro &lt;code&gt;allowIdleConsumers&lt;/code&gt; para &lt;code&gt;true&lt;/code&gt;. Por√©m, se houver mais n√∫mero de consumidores do que n√∫mero de parti√ß√µes em um t√≥pico, o consumidor extra ter√° que ficar ocioso.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para facilitar criamos um usu√°rio no Kafka com permiss√£o de somente leitura (&lt;code&gt;list&lt;/code&gt; e &lt;code&gt;describe&lt;/code&gt;) em todos os grupos e t√≥picos e referenciamos no TriggerAuthentication o &lt;strong&gt;secret&lt;/strong&gt; com este usu√°rio:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: keda-trigger-auth-kafka-credential
  namespace: sample
spec:
  secretTargetRef:
  - key: sasl
    name: keda-credentials
    parameter: sasl
  - key: username
    name: keda-credentials
    parameter: username
  - key: password
    name: keda-credentials
    parameter: password
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  REFER√äNCIAS:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://keda.sh/docs/2.3/"&gt;https://keda.sh/docs/2.3/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/"&gt;https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cloudblogs.microsoft.com/opensource/2020/04/06/kubernetes-event-driven-autoscaling-keda-cncf-sandbox-project/"&gt;https://cloudblogs.microsoft.com/opensource/2020/04/06/kubernetes-event-driven-autoscaling-keda-cncf-sandbox-project/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://keda.sh/resources/"&gt;https://keda.sh/resources/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#agradecimentos"&gt;
  &lt;/a&gt;
  AGRADECIMENTOS
&lt;/h2&gt;

&lt;p&gt;Obrigado √† &lt;a href="https://twitter.com/lipekis/status/1407064351010398208?s=20"&gt;todos os envolvidos&lt;/a&gt; que me incentivaram a escrever este artigo e revisaram o texto:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Felipe Lamar√£o Silva (@lipekis)&lt;/li&gt;
&lt;li&gt;Willian Itiho (@Willian_Itiho)&lt;/li&gt;
&lt;li&gt;Rafael Gomes (&lt;a class="mentioned-user" href="https://dev.to/gomex"&gt;@gomex&lt;/a&gt;
)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>kubernetes</category>
      <category>keda</category>
    </item>
    <item>
      <title>Reactifying Custom Elements using a Custom Elements Manifest</title>
      <author>Pascal Schilp</author>
      <pubDate>Wed, 23 Jun 2021 13:08:59 +0000</pubDate>
      <link>https://dev.to/thepassle/reactifying-custom-elements-using-a-custom-elements-manifest-2e</link>
      <guid>https://dev.to/thepassle/reactifying-custom-elements-using-a-custom-elements-manifest-2e</guid>
      <description>&lt;p&gt;We finally have a stable version of the Custom Elements Manifest schema, and this means we can finally start creating some cool tooling with it. Don't know what a Custom Elements Manifest is? Read all about it in the &lt;a href="https://dev.to/open-wc/introducing-custom-elements-manifest-gkk"&gt;announcement&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A Custom Elements Manifest is a JSON file that contains all metadata about the custom elements in your project. You can read all about it &lt;a href="https://github.com/webcomponents/custom-elements-manifest"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;React is a &lt;a href="https://dev.to/bennypowers/what-s-not-new-in-react-18-45c7"&gt;bit&lt;/a&gt; of a &lt;a href="https://custom-elements-everywhere.com/#:~:text=LIBRARY-,React%2016.14.0,-SCORE"&gt;pain&lt;/a&gt; when it comes to web components, and (unlike other frameworks) requires a bunch of special handling to support HTML. The &lt;strong&gt;TL;DR:&lt;/strong&gt; here is that React passes all data to Custom Elements in the form of HTML attributes, and can't listen to DOM events due to reinventing the wheel with their own synthetic events system. &lt;/p&gt;

&lt;p&gt;For fun and science, I decided to try my hand at creating a &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt; plugin to ‚ú® automagically ‚ú® create some React wrappers for my custom elements project &lt;a href="https://github.com/thepassle/generic-components"&gt;generic-components&lt;/a&gt;, which is a collection of accessible, zero-dependency, vanilla JS web components. Do note that this is mostly a PoC, I'm sure things could be improved and edgecases were missed; this is mostly an experiment to see how we can utilize the Custom Elements Manifest. &lt;/p&gt;

&lt;p&gt;In this blog we'll walk through a couple of the steps and decisions to reactify our custom elements, and showcase how we can leverage a projects &lt;code&gt;custom-elements.json&lt;/code&gt; to achieve this goal.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can read more about &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt;s rich plugin system here: &lt;a href="https://github.com/open-wc/custom-elements-manifest/blob/master/packages/analyzer/docs/plugins.md"&gt;Plugin Authoring Handbook&lt;/a&gt;, and be sure to check out the  &lt;a href="(https://github.com/open-wc/cem-plugin-template)"&gt;cem-plugin-template&lt;/a&gt; repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to follow along, you can find the code for our &lt;code&gt;reactify&lt;/code&gt; plugin &lt;a href="https://github.com/thepassle/generic-components/blob/master/cem-plugin-reactify.js"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-elements"&gt;
  &lt;/a&gt;
  Custom Elements
&lt;/h2&gt;

&lt;p&gt;First of all, we have to find all the custom elements in our Custom Elements Manifest that we want to reactify. Fortunately, classes in the Manifest that are actually custom elements are flagged with a: &lt;code&gt;"customElement": true&lt;/code&gt; flag, so we can loop through all the modules of our Manifest, and find any class declaration that has the &lt;code&gt;customElement&lt;/code&gt; flag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="nx"&gt;customElementsManifest&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mod&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;declarations&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have an array of all the custom elements in our project, we can start creating some React wrappers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#slots"&gt;
  &lt;/a&gt;
  Slots
&lt;/h2&gt;

&lt;p&gt;Lets start off easy; slots. Slots are a native way to provide children to your custom elements. Much like React's &lt;code&gt;children&lt;/code&gt;. Which means... we can just use &lt;code&gt;children&lt;/code&gt; to project any children of the Reactified component, straight to the Custom Element, which (if it supports slots), will correctly render them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Toggle me!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Easy peasy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#properties"&gt;
  &lt;/a&gt;
  Properties
&lt;/h2&gt;

&lt;p&gt;Next up: Properties. In React-land, everything gets passed around as a property. This is forms a bit of a problem, because in HTML-land &lt;em&gt;not&lt;/em&gt; everything is a property, we also have &lt;em&gt;attributes&lt;/em&gt;. Sometimes, an elements attributes and properties are even synced up, and this could mean that there are attributes and properties with the same name; like an element with a &lt;code&gt;disabled&lt;/code&gt; attribute/property or a &lt;code&gt;checked&lt;/code&gt; attribute/property.&lt;/p&gt;

&lt;p&gt;Fortunately, in a Custom Elements Manifest we can make a distinction between the two. If an attribute has a relation with a corresponding property, it will have a &lt;code&gt;fieldName&lt;/code&gt; property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"attributes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"boolean"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"fieldName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that we can ignore the &lt;code&gt;checked&lt;/code&gt; &lt;em&gt;attribute&lt;/em&gt;, but interface with the &lt;code&gt;checked&lt;/code&gt; &lt;em&gt;property&lt;/em&gt; instead, and avoid having two props with the same name.&lt;/p&gt;

&lt;p&gt;Because React will set everything on a custom element as an attribute (ugh), we have to get a &lt;code&gt;ref&lt;/code&gt; for our custom element, and set the property that way. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  Attributes
&lt;/h2&gt;

&lt;p&gt;This is where things get a little bit more interesting. Again, in React-land, everything gets passed around as a property. However, it could be the case that a custom element has an &lt;em&gt;attribute name&lt;/em&gt; that is a reserved keyword in JS-land. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;generic-skiplink&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"someID"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/generic-skiplink&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In HTML, this &lt;code&gt;for&lt;/code&gt; attribute is no problem. But since we're reactifying, and everything in React-land gets passed around as a JavaScript property, we now have a problem. Can you spot what the problem is in this code?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSkiplink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exactly. &lt;code&gt;for&lt;/code&gt; is a reserved JavaScript keyword, so this will cause an error. In order to avoid this, we'll provide an attribute mapping to avoid these kinds of clashes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;reactify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="c1"&gt;// Provide an attribute mapping to avoid clashing with React or JS reserved keywords&lt;/span&gt;
      &lt;span class="na"&gt;attributeMapping&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_for&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever we find an attribute that is a reserved keyword in JavaScript, we try to see if there was an attributeMapping for this attribute provided, and if not; we have to throw an error. Using this attributeMapping, the resulting React component now looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSkiplink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;_for&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;_for&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that we don't want to change the actual attribute &lt;em&gt;name&lt;/em&gt;, because that would cause problems, we only change the &lt;em&gt;value&lt;/em&gt; that gets passed to the attribute.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boolean-attributes"&gt;
  &lt;/a&gt;
  Boolean attributes
&lt;/h3&gt;

&lt;p&gt;Boolean attributes require some special attention here, as well. The way boolean attributes work in HTML is that the presence of them considers them as being true, and the absence of them considers them as being false. Consider the following examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- Yes, even this is considered as `true`! --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Calling &lt;code&gt;button.hasAttribute('disabled')&lt;/code&gt; on any of these will result in &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This means that for boolean attributes, we can't handle them the same way as regular attributes by just calling &lt;code&gt;ref.current.setAttribute()&lt;/code&gt;, but we need some special handling. Fortunately, the Custom Elements Manifest supports types, so we can easily make a distinction between 'regular' attributes, and boolean attributes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "attributes": [
    {
      "name": "checked",
      "type": {
&lt;span class="gi"&gt;+       "text": "boolean"
&lt;/span&gt;      },
      "fieldName": "checked"
    },
  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#events"&gt;
  &lt;/a&gt;
  Events
&lt;/h2&gt;

&lt;p&gt;React has their own synthetic event system to handle events, which doesn't play nice with custom elements (read: HTML). Fortunately, we can easily reactify them. React events work with the following convention:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our Custom Elements Manifest very conveniently holds an array of Events for our custom elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"events"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked-changed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CustomEvent"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means we can find all events for our custom element, prefix them with &lt;code&gt;on&lt;/code&gt;, and capitalize, and camelize them; &lt;code&gt;onCheckedChanged&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then we can use our &lt;code&gt;ref&lt;/code&gt; to add an event listener:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;checked-changed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#importing"&gt;
  &lt;/a&gt;
  Importing
&lt;/h2&gt;

&lt;p&gt;Finally, we just need to create the import for the actual custom element in our reactified component. Fortunately for us, if a module contains a &lt;code&gt;customElements.define()&lt;/code&gt; call, it will be present in the Manifest. This means we can loop through the Manifest, find where our custom element gets defined, and stitch together some information from the &lt;code&gt;package.json&lt;/code&gt; to create a bare module specifier:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;switch.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./generic-switch/GenericSwitch.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;generic-switch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Will result in:&lt;br&gt;
&lt;code&gt;custom-elements.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"kind"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"javascript-module"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"switch.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"declarations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"exports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"kind"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"custom-element-definition"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"generic-switch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"declaration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"GenericSwitch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/generic-switch/GenericSwitch.js"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By stitching together the &lt;code&gt;name&lt;/code&gt; property from the projects &lt;code&gt;package.json&lt;/code&gt;, and the &lt;code&gt;path&lt;/code&gt; from the module containing the custom element definition, we can construct a bare module specifier for the import:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@generic-components/components/switch.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-the-plugin"&gt;
  &lt;/a&gt;
  Using the plugin
&lt;/h2&gt;

&lt;p&gt;To use our &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt; Reactify plugin, all I have to do is create a &lt;code&gt;custom-elements-manifest.config.js&lt;/code&gt; in the root of my project, import the plugin, and add it to the &lt;code&gt;plugins&lt;/code&gt; array:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;custom-elements-manifest.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reactify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./cem-plugin-reactify.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;reactify&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that every time I analyze my project, it will automagically create the Reactified wrappers of my custom elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚îî‚îÄ‚îÄ legacy
    ‚îú‚îÄ‚îÄ GenericAccordion.jsx
    ‚îú‚îÄ‚îÄ GenericAlert.jsx
    ‚îú‚îÄ‚îÄ GenericDialog.jsx
    ‚îú‚îÄ‚îÄ GenericDisclosure.jsx
    ‚îú‚îÄ‚îÄ GenericListbox.jsx
    ‚îú‚îÄ‚îÄ GenericRadio.jsx
    ‚îú‚îÄ‚îÄ GenericSkiplink.jsx
    ‚îú‚îÄ‚îÄ GenericSwitch.jsx
    ‚îú‚îÄ‚îÄ GenericTabs.jsx
    ‚îî‚îÄ‚îÄ GenericVisuallyHidden.jsx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;And as a final result, here's our reactified Custom Element that correctly handles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Events&lt;/li&gt;
&lt;li&gt;Properties&lt;/li&gt;
&lt;li&gt;Attributes&lt;/li&gt;
&lt;li&gt;Boolean attributes&lt;/li&gt;
&lt;li&gt;Slots
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;
  &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// boolean attribute&lt;/span&gt;
  &lt;span class="na"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// property&lt;/span&gt;
  &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// regular attribute&lt;/span&gt;
  &lt;span class="na"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// event&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  Toggle me! // slot
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/react-kghcjw?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding"&gt;
  &lt;/a&gt;
  Concluding
&lt;/h2&gt;

&lt;p&gt;While it's cool that we finally have a stable version of the Custom Elements Manifest, which allows us to automate things like this, working on this reactify plugin made me realize how backwards it even is that we need to resort to shenanigans like this, and I hope React will seriously consider supporting HTML properly in future versions.&lt;/p&gt;

</description>
      <category>react</category>
      <category>customelements</category>
      <category>webcomponents</category>
      <category>customelementsmanifest</category>
    </item>
    <item>
      <title>Vue, Wordpress, MEAN, MERN, Doesn‚Äôt Matter! ‚Äì Why we shouldn‚Äôt emphasize too much on tech tools</title>
      <author>Kingsley Ubah</author>
      <pubDate>Wed, 23 Jun 2021 13:00:13 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/vue-wordpress-mean-mern-doesn-t-matter-why-we-shouldn-t-emphasize-too-much-on-tech-tools-4bbe</link>
      <guid>https://dev.to/ubahthebuilder/vue-wordpress-mean-mern-doesn-t-matter-why-we-shouldn-t-emphasize-too-much-on-tech-tools-4bbe</guid>
      <description>&lt;p&gt;Every once in a while we see things like this emerge in our feed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React is better than Vue&lt;/li&gt;
&lt;li&gt;Vue is better than React&lt;/li&gt;
&lt;li&gt;Svelte is the new thing, people&lt;/li&gt;
&lt;li&gt;I still think Jquery is the best&lt;/li&gt;
&lt;li&gt;WordPress is useless&lt;/li&gt;
&lt;li&gt;PHP powers the whole web so use it&lt;/li&gt;
&lt;li&gt;Dump everything, use JamStack!&lt;/li&gt;
&lt;li&gt;MEVN is the best JavaScript stack&lt;/li&gt;
&lt;li&gt;No, MERN is the best stack&lt;/li&gt;
&lt;li&gt;Hey, MEAN here &lt;/li&gt;
&lt;li&gt;This is better&lt;/li&gt;
&lt;li&gt;That is better&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am going to give my two cents on the issue:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It doesn‚Äôt really matter. Yes it doesn‚Äôt!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let me make something clear here: &lt;strong&gt;every single technology was created for a main purpose&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Initially &lt;strong&gt;jQuery&lt;/strong&gt; was created mainly to manipulate the DOM and to improve the UX with animation methods methods like &lt;em&gt;show()&lt;/em&gt;, &lt;em&gt;hide()&lt;/em&gt;, &lt;em&gt;slideUp()&lt;/em&gt; and so on. But then direct manipulation became a problem especially for complex applications. The performance issues were accentuated.&lt;/p&gt;

&lt;p&gt;Then came &lt;strong&gt;React and Vue&lt;/strong&gt;. Both utilized the virtual DOM mechanism for rendering web elements. One of the other big strength of these two is how easy it is to build UI components. Something you couldn‚Äôt get with jQuery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wordpress&lt;/strong&gt; was created so anyone who doesn‚Äôt know how to code can still build cool websites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt; may have an ugly syntax but it remains the main language behind Wordpress which powers a significant part of the web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap&lt;/strong&gt; was created so you don‚Äôt have to go through the hell of writing CSS and centering divs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tailwind&lt;/strong&gt; was created so that while you enjoyed the benefits of using an already built CSS framework, you also kept in touch with your CSS roots. &lt;strong&gt;The best of both worlds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You get the point? Each technology was created with one main objective in mind. And that gives that particular tool a comparative advantage over other tools for that specific task no matter what other shortcomings it may have.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Analogy: Joe is 6‚Äô4 and Ryan is 5‚Äô4. Joe‚Äôs height makes him a slow runner but it also means he can play basketball well. Conversely, Ryan is faster at running but terrible at playing basketball. Someone who loves watching basketball would say ‚ÄúRyan sucks‚Äù while watching Ryan play basketball. On the other hand, someone who loves watching races would be amused while watching a slow Joe run.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You may complain and argue all you want but if you want to build a simple website and not have to worry too much about scaffolding and using other libraries, &lt;strong&gt;jQuery&lt;/strong&gt; is still awesome for that.&lt;/p&gt;

&lt;p&gt;If you don‚Äôt know how to code yet want to build a website in record time, &lt;strong&gt;WordPress&lt;/strong&gt; is still the best for that and that remains.&lt;/p&gt;

&lt;p&gt;If you want to learn something simple, go for &lt;strong&gt;Vue&lt;/strong&gt;. Vue makes it very easy to build user interfaces (my opinion)&lt;/p&gt;

&lt;p&gt;If you want to learn something popular with lots of job prospects, learn &lt;strong&gt;React&lt;/strong&gt;.  Here‚Äôs why:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äò‚ÄôAn estimated number of 8787 industry leaders currently use React. js; among some of the most powerful are Airbnb, Uber, Netflix, Instagram, WhatsApp, BBC, Twitter, and Reddit. Since its release in 2013, the React community has increased to 56162, whereas 25698 developers claim they prefer Angular. js and 19480 use Vue.‚Äù  &lt;a href="https://www.thinslices.com/blog/infographic-react.js-statistics#:~:text=An%20estimated%20number%20of%208787,js%20and%2019480%20use%20Vue."&gt;Thinslices.com&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Svelte&lt;/strong&gt; is great for whatever it was created for, which I sadly don‚Äôt know much about yet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We need to shift our thinking towards the task in question.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Do you want to participate in a race, use Ryan. Do you want to participate in a basketball tournament? Include Joe in your team instead.&lt;/p&gt;

&lt;p&gt;Your choice of tool should depend on what your project demands. There are so many factors you should consider and it is based on those factors that you narrow down and ultimately pick the best candidate for the job.&lt;/p&gt;

&lt;p&gt;To be exact, here are things you should consider before choosing a framework for building your website:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Main idea of your project&lt;/li&gt;
&lt;li&gt;Popularity of the tool
&lt;/li&gt;
&lt;li&gt;Sustainability &amp;amp; Scalability&lt;/li&gt;
&lt;li&gt;Support and timeliness of Updates &lt;/li&gt;
&lt;li&gt;Security
&lt;/li&gt;
&lt;li&gt;Documentation &lt;/li&gt;
&lt;li&gt;Resources&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Analyse all tools available at your disposal and find out which one is most suitable for your task or current situation. Maybe you‚Äôre a freelancer and a client wants an ecommerce site ready in a couple of days, you would definitely be better off with Wordpress, Wix, Shopify or some other no-code frameworks available.&lt;/p&gt;

&lt;p&gt;This is my honest take on the whole issue.  Some may not agree with me on this and that is perfectly fine. Disagreements and constructive criticism is highly welcome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finally, if you benefitted from this post and would like to support my work, you can buy me my favourite fruit:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for taking time out to read and see you soon. If you‚Äôre new, be sure to follow this blog for future posts.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P/S:  If you‚Äôre a web developer and would love a resources rich in JavaScript, you can get  &lt;a href="https://gumroad.com/a/834147443"&gt;HTML To React by Sleepless Yogi (aff)&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>react</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Understanding Network things: part 3 ‚Äì DNS</title>
      <author>Aur√©lie Vache</author>
      <pubDate>Wed, 23 Jun 2021 12:54:10 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-network-things-part-3-dns-976</link>
      <guid>https://dev.to/aurelievache/understanding-network-things-part-3-dns-976</guid>
      <description>&lt;p&gt;Hi,&lt;br&gt;
I've got a secret for you, since several years. I'm a developer and I'm a mess in undestanding network things! :'(&lt;/p&gt;

&lt;p&gt;It's hard to not understanding things that anyone seems to understand and understanding network concepts can be difficult or time-consuming, specially for developers. That the reason I started to create sketchnotes about Network concepts. I think it could be a good way, more visual, to explain it.&lt;/p&gt;

&lt;p&gt;In this third article, we will see DNS concepts.&lt;br&gt;
Is it always a DNS problem? ^^&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i6_bucnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7j46kpsdlh9a6cwtz0s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i6_bucnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7j46kpsdlh9a6cwtz0s.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nCFUT8Ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhosd1sfkrqnnuucle8u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nCFUT8Ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhosd1sfkrqnnuucle8u.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TP8lGHkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrmb5npqj9e7sipymltc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TP8lGHkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrmb5npqj9e7sipymltc.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As usual, if you like theses sketchnotes, you can follow me, and tell me what do you think. I will publish others sketchs shortly :-).&lt;/p&gt;

&lt;p&gt;If you are interested, I already published sketchnotes about &lt;a href="https://gumroad.com/aurelievache"&gt;Kubernetes, Docker and Istio&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>network</category>
      <category>http</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>10 JavaScript features that will help you adopt React faster</title>
      <author>Amel Haliloviƒá</author>
      <pubDate>Wed, 23 Jun 2021 12:52:56 +0000</pubDate>
      <link>https://dev.to/infobipdev/10-javascript-features-that-will-help-you-adopt-react-faster-5ggb</link>
      <guid>https://dev.to/infobipdev/10-javascript-features-that-will-help-you-adopt-react-faster-5ggb</guid>
      <description>&lt;p&gt;Is there a better way to start a blog post than with plain and simple facts? Of course, there is but let‚Äôs do the Captain-Obvious routine anyway!&lt;/p&gt;

&lt;p&gt;We can all agree that JavaScript is the most popular programming language in the world. We could also agree on the fact that libraries and frameworks are indispensable elements of any efficient JS programming task.&lt;/p&gt;

&lt;p&gt;According to State of JS survey, the most popular JavaScript library for building frontend applications is React. And it has been for 5 consecutive years.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-is-react-so-popular-with-frontend-developers"&gt;
  &lt;/a&gt;
  WHY IS REACT SO POPULAR WITH FRONTEND DEVELOPERS?
&lt;/h4&gt;

&lt;p&gt;Since its initial release in May 2013, React has seen a steady incline, followed by an ever-growing number of job opportunities. A part of its appeal and user adoption is due to its non-complicated architecture, based on a lot of native JavaScript features.&lt;/p&gt;

&lt;p&gt;Given the fact that many companies are moving towards re-writing their frontend using it, React is likely to stay at the top of the UI library pyramid.&lt;/p&gt;

&lt;p&gt;If you are new to frontend development or you want to make a transition from another frontend technology, we‚Äôve compiled a list of 10 JavaScript features to help you jumpstart your React basics!&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1-ecmascript-modules"&gt;
  &lt;/a&gt;
  1. ECMAScript modules
&lt;/h5&gt;

&lt;p&gt;React application is organized into multiple small files ‚Äî modules which all together form a graph of dependencies. The connection between them is created by using different ways of importing the right code.&lt;/p&gt;

&lt;p&gt;ECMAScript modules (or ES modules) provide an easy way to export and import parts of the code like constants, functions, components, etc. This way we can specify exactly which part of the module should be loaded.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#2-the-document-object-model-dom"&gt;
  &lt;/a&gt;
  2. The Document Object Model ‚Äî DOM
&lt;/h5&gt;

&lt;p&gt;Efficient DOM manipulation is one of the main challenges for the frontend technologies such as React. It is an expensive operation and tools are competing to develop a better solution for it and dominate the sphere of UI libraries.&lt;/p&gt;

&lt;p&gt;React is top of the game in this regard. It uses VirtualDOM, which is a ‚Äúvirtual‚Äù representation of a ‚Äúreal‚Äù DOM state. It is saved in memory and synced with the real DOM by a library such as ReactDOM. To fully understand how VirtualDOM works, one must know what is and how does the real DOM work.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#3-class"&gt;
  &lt;/a&gt;
  3. Class
&lt;/h5&gt;

&lt;p&gt;One of the most popular features introduced in the ES6 version was JavaScript classes. Classes represent templates for creating objects ‚Äî they define which properties and methods will the object have.&lt;/p&gt;

&lt;p&gt;In React, classes are primarily used to create stateful components. In fact, it was the only way to do it until hooks were introduced.. Since there are many developers who still prefer to use class components and many projects that haven‚Äôt migrated class components to functional, it will be useful to know how classes work.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#4-array-methods"&gt;
  &lt;/a&gt;
  4. Array methods
&lt;/h5&gt;

&lt;p&gt;Standard array methods like forEach, map, push, filter, some, etc., are widely used in React to manipulate data, so it is a good thing to be familiar with them before starting to learn and work with React. For example, map is used when we want to render multiple elements based on a collection of objects.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#5-spread-operator"&gt;
  &lt;/a&gt;
  5. Spread operator
&lt;/h5&gt;

&lt;p&gt;Spread operator takes in an iterable (e.g an array or object) and expands it into individual elements. In React it is widely used to create shallow copies of objects or to concatenate data from multiple objects or arrays. It provides a concise and readable code that enhances its use.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#6-destructuring-assignment"&gt;
  &lt;/a&gt;
  6. Destructuring assignment
&lt;/h5&gt;

&lt;p&gt;Destructuring assignment (often called just destructuring) is a JavaScript expression used for unpacking values from arrays or properties from objects into separate variables.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#7-fetch-api-promises"&gt;
  &lt;/a&gt;
  7. Fetch API /Promises
&lt;/h5&gt;

&lt;p&gt;Usually, our React applications require some data that we prepared on our backend services and exposed on RESTful APIs. To deliver that data to frontend applications we need Fetch API. Fetch API allows web-browser to make HTTP requests to web servers and fetch resources and data.&lt;/p&gt;

&lt;p&gt;Calling fetch returns a promise that resolves to a Response object holding information about the server‚Äôs response, such as its status code and its headers.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#8-bindings-and-scopes"&gt;
  &lt;/a&gt;
  8. Bindings and scopes
&lt;/h5&gt;

&lt;p&gt;When building class components, beginners usually encounter a problem ‚Äî the context of the class methods is not the expected one( from the component). We need to manually bind the component‚Äôs context to the method. This is expected behavior because of JavaScript and how this is treated.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#9-arrow-functions"&gt;
  &lt;/a&gt;
  9. Arrow functions
&lt;/h5&gt;

&lt;p&gt;Arrow functions are an ES2015 feature for a simpler way of writing functions. They have some limitations so they shouldn‚Äôt be used in every situation. Despite that, they are commonly used in React to solve the problem with methods binding or to create functional components.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#10-higherorder-functions"&gt;
  &lt;/a&gt;
  10. Higher-order functions
&lt;/h5&gt;

&lt;p&gt;A function that accepts and/or returns another function is called a higher-order function. Some of the examples of higher-order functions are already mentioned array methods forEach, map, reduce, filter.&lt;/p&gt;

&lt;p&gt;Inspired by this concept, React has higher-order components (HOCs), an advanced technique for reusing component‚Äôs logic. HOCs are part of many famous libraries like react-redux, react-router, material-ui, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-shortcuts-get-to-know-javascript"&gt;
  &lt;/a&gt;
  NO SHORTCUTS ‚Äî GET TO KNOW JAVASCRIPT
&lt;/h3&gt;

&lt;p&gt;These 10 features can help you fast-track your React learning curve.&lt;/p&gt;

&lt;p&gt;However, if you want to do more complex tasks, eliminate errors, and gain a better understanding of how the code works, there are no shortcuts. You‚Äôre going to have to put in the work and learn how JavaScript works, especially those tricky illogical parts.&lt;/p&gt;

&lt;p&gt;Overall, React is a friendly UI library that can help you create extensive, complex and demanding graphical interfaces. It‚Äôs backed by Facebook, has a strong developer community gathered around it and there‚Äôs no shortage of learning materials. In fact, there‚Äôs a ton of reasons for you to learn React.&lt;/p&gt;

&lt;p&gt;It‚Äôs up to you to start.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on &lt;a href="https://www.bitsbyamel.com"&gt;https://www.bitsbyamel.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Build a chrome extension with modern code setup</title>
      <author>Lakshmanan Arumugam</author>
      <pubDate>Wed, 23 Jun 2021 12:38:54 +0000</pubDate>
      <link>https://dev.to/lakshmananarumugam/build-a-chrome-extension-with-modern-code-setup-1ka1</link>
      <guid>https://dev.to/lakshmananarumugam/build-a-chrome-extension-with-modern-code-setup-1ka1</guid>
      <description>&lt;p&gt;In the previous article, I covered &lt;code&gt;How to set a chrome extension base code setup&lt;/code&gt;. In this article, I am going to cover &lt;code&gt;how to use test it and publish to chrome extension marketplace app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you completed the all previous article step. you will have the below folder structure in your code directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="kr"&gt;public&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Require&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt; &lt;span class="nx"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Extension&lt;/span&gt; &lt;span class="nx"&gt;home&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;manifest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Detect&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt; &lt;span class="nx"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;assets&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="nx"&gt;UI&lt;/span&gt; &lt;span class="nx"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îÇ&lt;/span&gt;   &lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;JS&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;dist&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Build&lt;/span&gt; &lt;span class="nx"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;node_modules&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;README&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;md&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="kr"&gt;package&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ&lt;/span&gt; &lt;span class="nx"&gt;babel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;span class="err"&gt;‚îî‚îÄ‚îÄ&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gitignore&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above the folder, you don't find any &lt;code&gt;dist&lt;/code&gt; folder. please use the below command in your code main directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you find the &lt;code&gt;dist&lt;/code&gt; folder. dist folder will be the major part of the chrome extension. because we will test the app in the local port. but, we compress(.zip) and sent the dist inside code only. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTeuQ2Fr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbxwzo1o5yvthved37ko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTeuQ2Fr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbxwzo1o5yvthved37ko.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the above screen steps and target the &lt;code&gt;dist&lt;/code&gt; to the target directory. Once you opened the chrome extension directory. &lt;/p&gt;

&lt;p&gt;you will find the chrome extension name called &lt;code&gt;Cool chrome theme&lt;/code&gt;. Then, test all features which you did in the Vue app. once done the dev testing. it's time to publish the app.&lt;/p&gt;

&lt;p&gt;Chrome already has some articles about how to publish the app. please check it out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/webstore/update/"&gt;Publish chrome extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FYI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why I used VUE for the chrome extension?&lt;/strong&gt;&lt;br&gt;
  Even though we able to develop a UI screen using plain HTML, JS, and CSS. when we build a complex screen I HTML and JS. it will take more time and complexity in development. &lt;/p&gt;

&lt;p&gt;Thanks for reading the post üòÄ. &lt;/p&gt;




&lt;p&gt;&lt;a href="https://github.com/lakshmanan-arumugam/cool-chrome-theme"&gt;Code URL&lt;/a&gt;&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/cool-chrome-theme/hnjfgakjgenceanlamddolhjgnmackfg"&gt;Demo extension&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to make dynamic pages for your website firebase tutorial.</title>
      <author>Techy Programmers</author>
      <pubDate>Wed, 23 Jun 2021 12:22:28 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-dynamic-pages-for-your-website-firebase-tutorial-4i20</link>
      <guid>https://dev.to/kunaal438/how-to-make-dynamic-pages-for-your-website-firebase-tutorial-4i20</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make dynamic pages for your website.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iP9F7usZF3M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A quick and simple color palette generator for your next project.</title>
      <author>Jash Gopani</author>
      <pubDate>Wed, 23 Jun 2021 11:38:56 +0000</pubDate>
      <link>https://dev.to/jashgopani/a-quick-and-simple-color-palette-generator-for-your-next-project-40ap</link>
      <guid>https://dev.to/jashgopani/a-quick-and-simple-color-palette-generator-for-your-next-project-40ap</guid>
      <description>&lt;p&gt;Hello guys,üôã‚Äç‚ôÇÔ∏è&lt;br&gt;
this short article is about my recent side project called&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#colorinator"&gt;
  &lt;/a&gt;
  COLORINATOR
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wm3W2wgE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za0kxc5pbe4gtnqe1v75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wm3W2wgE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za0kxc5pbe4gtnqe1v75.png" alt="doofenshmirtz"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a quick color palette generator based on the &lt;strong&gt;60-30-10&lt;/strong&gt; rule of UI design. You can use the color palettes generated by &lt;a href="http://jashgopani.me/colorinator"&gt;this website&lt;/a&gt; for any kind of project; apps, website, ppts and almost everywhere.&lt;/p&gt;

&lt;p&gt;One of the main highlight is that you can see the real time preview of the theme colors! This will help you to get an idea of which color combination works best for your project.&lt;/p&gt;

&lt;p&gt;Because this website is responsive, you will have no trouble using it from any device.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5II9lia9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nny9whbx7jjert45w19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5II9lia9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nny9whbx7jjert45w19.png" alt="Responsive"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;I used to get confused about what color scheme should I use for my projects. There are numerous colour palette generators available, but the problem is that most of those provide too many possibilities, and many of them just produce random colours that may or may not work well together.&lt;/p&gt;

&lt;p&gt;To minimize this ambiguity, I developed this simple solution, which selects a primary color based on user input or at random, and then derives secondary and accent colors depending on the contrast ratio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#603010-rule"&gt;
  &lt;/a&gt;
  60-30-10 rule
&lt;/h2&gt;

&lt;p&gt;To explain you in short, use a main/primary color on 60% of your elements as a theme color. Out of remaining 40%, you can use a secondary color on 30% elements which need user attention or provide valuable information to user. The rest 10% will be action elements which can be colored with Accent color to give them a distinct look from the rest of the elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-where-do-you-get-these-colors-from-"&gt;
  &lt;/a&gt;
  So where do you get these colors from ?
&lt;/h2&gt;

&lt;p&gt;The user can provide a main color which is intended to be used as a primary color for the project or the user can go for a random color as primary color using the random button. &lt;br&gt;
On getting the primary color, the app calculates the font color for the website and the secondary and accent colors that go with the primary color.&lt;br&gt;
How does it calculate secondary and accent colors ? The answer lies in &lt;a href="https://digitalsynopsis.com/design/how-to-apply-color-to-user-interface/"&gt;this article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from this, the accent color is either calculated based on the logic mentioned in the article or the color opposite to the primary color is picked from the color wheel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-this-"&gt;
  &lt;/a&gt;
  How to use this ?
&lt;/h2&gt;

&lt;p&gt;I have very well documented everything on in my &lt;a href="https://github.com/jashgopani/colorinator"&gt;github readme&lt;/a&gt;. If still you have any doubts/ suggestions you can comment them below and I'll get back to youüòâ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-to-be-added"&gt;
  &lt;/a&gt;
  Features to be added
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Copy button on saved theme palettes, to individually copy the hex code to clipboard&lt;/li&gt;
&lt;li&gt;Import and export themes&lt;/li&gt;
&lt;li&gt;You suggest&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do use this app for your upcoming projects and let me know what better can be done. Thank you!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Why you should create a tech community</title>
      <author>Ben Amor Aymen</author>
      <pubDate>Wed, 23 Jun 2021 11:37:56 +0000</pubDate>
      <link>https://dev.to/aymenbenamor/why-you-should-create-a-tech-community-1jl9</link>
      <guid>https://dev.to/aymenbenamor/why-you-should-create-a-tech-community-1jl9</guid>
      <description>&lt;p&gt;You should probably get involved in your local dev community, or even better: CREATE ONE! Here is why...&lt;/p&gt;

&lt;p&gt;The year is 2019! I am in one of the best conferences in Europe: &lt;a href="https://2019.jsconf.eu/"&gt;JSCONF.EU&lt;/a&gt;. I mean, the opening was something to remember: The screen was almost bigger than some of the cinema screens. (&lt;a href="https://youtu.be/o1rzsna263c?t=1215"&gt;watch opening.&lt;/a&gt;) I traveled from Brussels to Berlin to enjoy the conference and apart from the TC39 panel discussion, the talk that motivated me the most to attend was a talk by: &lt;a href="https://twitter.com/roshangautam0"&gt;Roshan Gautam&lt;/a&gt; titled: &lt;a href="https://2019.jsconf.eu/roshan-gautam/you-should-start-a-tech-community-too.html"&gt;You should start a tech community too&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, to be honest, Building a tech community was an idea that I was thinking about for quite some time already... But I could not find the courage to do it. I mean when you think of it, there is so much stuff to manage if you want to create a community. How are you going to get speakers? How are you going to motivate people to come to your meetups? Who's going to pay for drinks? How to manage the big difference in people's expertise? and knowledge? so many questions and I did not know where to start but hey let's start with why you should create a community? and we will talk about the obstacles and how you can overcome them later!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-get-involved-in-your-local-tech-community"&gt;
  &lt;/a&gt;
  Why get involved in your local tech community?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-community-helps-you-grow-and-improve-yourself"&gt;
  &lt;/a&gt;
  A community helps you grow and improve yourself
&lt;/h3&gt;

&lt;p&gt;When you like coding, it is very easy to stick to your IDE and spend your entire time writing code. The problem is that if you want to progress quickly in your career, you have to know that only 25% of what companies look for in senior developers is technical skills, 75% is about soft skills and your impact on the business. Public speaking, Management skills, Leadership skills, and many more are skills that you will need if you want to grow as a developer!&lt;/p&gt;

&lt;p&gt;Being involved in a community helps your progress in these soft skills. You learn a lot from organizing events:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marketing skills:&lt;/strong&gt; When you start a community, you need to look for ways to attract people, so you learn marketing techniques. You start using different social media and platforms to bring people to your events. You experiment, try a lot of different tactics to finally find the right one for your community.&lt;br&gt;
&lt;strong&gt;Presentation and communication skills:&lt;/strong&gt; Talking at a meetup, even for presenting the speaker is quite a challenge... You have to make people excited about what's going to happen. If there are delays, you need to find a way to entertain people while they are waiting. This is all valuable for you as a person (not only as a developer). Also, reaching out to speakers helps improve your communication skills.&lt;br&gt;
&lt;strong&gt;Negotiations skills:&lt;/strong&gt; Fortunately for us, the IT sector is booming. People make a lot of money just by finding developers to hire. Companies are always looking for great developers. So when you start a tech community there are big chances that you will be contacted by few companies to collaborate. You will have to use your negotiation skills, and find ways of making the community profit from these partnerships without your community becoming a marketplace for devs and your members being harassed.&lt;br&gt;
Leadership and management skills: When organizing events you will have to work with contractors, sponsors, volunteers, other members of the community, and so on. This can improve your skills in people management and make you a better leader.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#networking"&gt;
  &lt;/a&gt;
  Networking
&lt;/h3&gt;

&lt;p&gt;I cannot stress how important it is to have a good network in your life. When you get involved in a community you get access to hundreds, sometimes thousands of people that work in the same sector as you. This is an amazing opportunity: You get to know the market in your local area, what technologies, methodologies are used? What are the current rates, salaries for developers? What technologies you should invest time in? You get to know all of this information. Having a network like this can also help you meet friends (I've personally met amazing people in BeJS meetups and some of them became friends!). You can meet business partners, investors, companies, mentors, speakers, and so on... A network like this is an outstanding resource!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-great-motivation-for-learning"&gt;
  &lt;/a&gt;
  A great motivation for learning
&lt;/h3&gt;

&lt;p&gt;When being involved in a community, there is a lot of work to do! This means that there is room for tool creation: Websites, scripts, apps, and other kinds of projects which can help you manage the community. All of these are opportunities for you to show off your skills, to learn new technologies. (I learned Gatsby, NextJS, GraphQL because I created tools for BeJS using these technologies). You get to learn to use different tools for marketing and managing campaigns on social networks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fighting-your-shyness"&gt;
  &lt;/a&gt;
  Fighting your shyness
&lt;/h3&gt;

&lt;p&gt;It might not look like it, but I am a very shy person. I am the kind of person that rarely talks to someone he does not know. I mean: Calling for a doctor's appointment on the phone used to be quite difficult to do for me. I always had a feeling of annoying people when talking to them. By starting BeJS, I had to contact sponsors, speakers, partners, contractors, and other members and it helped me a lot to overcome my shyness. I, now, don't think twice before sending a message to a speaker, or to a company asking for sponsorship. It does not mean that I get a reply every time, but I usually do and if I don't get a reply, so be it! At least I've done my part.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-challenges"&gt;
  &lt;/a&gt;
  The challenges
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#finding-a-sponsor"&gt;
  &lt;/a&gt;
  Finding a sponsor
&lt;/h3&gt;

&lt;p&gt;As you might think, finding a sponsor for your events might be quite a challenge. You need at least a venue for your events! You need food and drinks to attract people. Trust me, I cannot stress how important food is for attracting people to your events! Start with your network! If you're working within a company, ask your manager or your HR team, They might be interested. If you're a freelancer or contractor, ask your clients, or the consulting companies you work with. If they already have a place, it is not a big deal for them to let you use it once per month! It is an opportunity for them as well as it gives them visibility and they can use these events for hire. Just be sure to be clear on the collaboration so that they don't start harassing your members.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-speakers"&gt;
  &lt;/a&gt;
  Finding speakers
&lt;/h3&gt;

&lt;p&gt;This is the most important part of the meetup: I mean why would people go to a meetup if there is no interesting subject. There is no magic trick here: Ask people! For your first events, do not hesitate to contact anyone you know and ask if they will be interested in speaking. Motivate them, push them and help them if needed. Again it is your right to contact any person you want, however, you're not entitled to an answer! So if they don't respond just move on. The popular speakers out there receive hundreds or thousands of DMs so they can't answer to everyone.&lt;/p&gt;

&lt;p&gt;Publish a Call For Paper on your website. Even if someone contacts you for a talk and you're full for the next few months, It's always good to have a plan B or you can always contact them later when no one is scheduled&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#attracting-attendees"&gt;
  &lt;/a&gt;
  Attracting attendees
&lt;/h3&gt;

&lt;p&gt;Well, I'm going to be completely honest on this one: Food and drinks are your best shot at attracting more attendees! It is nice to go to meetups to listen to a talk, but it is nicer if you can listen to the talk with a beer in your hand and your stomach full, right? Ads on social networks can also help significantly to spread the word! The best social networks to use may be different from one country to another, but for us: LinkedIn and meetup are the most promising! Last but not least: believe in your community! I remember when I asked for the venue from our sponsor for the first event. I said: We're going to be 5 or so people, so all we need is a table!Two days later, I created the event on meetup and 50 people subscribed in less than 48 hours!!! I was lucky my sponsors had a big room that could fit everyone but I learned to always define a maximum amount of people.&lt;/p&gt;

&lt;p&gt;Managing the difference in knowledge and experience!&lt;br&gt;
In your community, you will get people that have been working in their field for 10 years, but you will also get students or even people that are just thinking about a career change. Therefore, it might be difficult to find subjects that are interesting to everyone. My advice for this is to try to diversify the talks you accept! Different technologies, different kinds of talks (soft skills talks, technical talks, workshops, coding competitions, Talks about personal experiences) By diversifying your talks, you attract more attendees, and make your meetups interesting for everyone!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-time"&gt;
  &lt;/a&gt;
  Finding time
&lt;/h3&gt;

&lt;p&gt;Being involved in the community is very time-consuming. Meetup which is the go-to tool for creating groups is not really a great tool (In my opinion). You lose a lot of time, sending messages, creating posts, announcing your event, reminding people about the event so that they show up, asking for feedback to improve your events, contacting speakers, managing partners, and sponsors, Creating websites, and tools, creating marketing content, etc. You add a 40h/week job next to that and people start asking if you have time to sleep between all of that. The solution:&lt;br&gt;
&lt;strong&gt;Create tools and frameworks:&lt;/strong&gt; To help you automate all of the repetitive tasks, create tools and put processes in place so that it becomes a habit. For example, I created a script to update our website when I publish a new event on meetup. I asked a friend to create a graphic I can reuse for every event announcement&lt;br&gt;
&lt;strong&gt;Delegate:&lt;/strong&gt; Find people that can help you! If you don't have volunteers to help? Fiverr is an amazing platform to get stuff done for a good price!&lt;br&gt;
&lt;strong&gt;Learn to say no:&lt;/strong&gt; If something is not going to benefit your community, say no directly. Don't do something just because you're afraid of saying no! It is a waste of time for you and the other person as well!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I created the BeJS community almost 2 years ago, and I think it's one of the biggest achievements I ever made. I learned so much... It made me happy (when an event was a success!), it made me angry (when meetup was down at the exact moment our event was scheduled and almost no one could get the link to the zoom meeting! or when some spammers joined the zoom meeting and started doing crazy shit in the chat and in the videos), it made me sad (when 45 people subscribed but only 8 showed up!). I met amazing people, Companies contact me every now and then for partnerships and sponsorships. I got to know the projects of the developers based in Belgium.&lt;/p&gt;

&lt;p&gt;So? convinced? When are you starting your own community? Are you going to get involved in an existing community? You have questions? Ideas? May be you want to get involved in the BeJS events? Feel free to talk to me on &lt;a href="https://twitter.com/intent/tweet?screen_name=Aymen_Ben_Amor&amp;amp;ref_src=twsrc%5Etfw"&gt;twitter&lt;/a&gt; or contact me &lt;a href="//mailto:contact@bejs.io"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>community</category>
      <category>belgium</category>
      <category>tech</category>
    </item>
    <item>
      <title>7 Awesome  Portfolio websites</title>
      <author>gourav majee</author>
      <pubDate>Wed, 23 Jun 2021 11:34:50 +0000</pubDate>
      <link>https://dev.to/varuogm/7-awesome-portfolio-websites-4pf7</link>
      <guid>https://dev.to/varuogm/7-awesome-portfolio-websites-4pf7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-im-gourav"&gt;
  &lt;/a&gt;
  Hello, üëãI'm Gourav,
&lt;/h2&gt;



&lt;p&gt;&lt;em&gt;Building a developer portfolio can be a cumbersome task, we have to think of a good design, best projects, blogs, and other details.&lt;/em&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#so-here-are-7-web-developer-portfolios-that-i-found-while-making-my-portfolio-website-and-also-they-will-give-you-all-the-inspiration-you-need-to-create-your-own-first-portfolio"&gt;
  &lt;/a&gt;
  &lt;em&gt;So, here are 7 web developer portfolios ü§© that I found while making my portfolio website, and also they will give you all the inspiration you need to create your own first portfolioüëå.&lt;/em&gt;
&lt;/h3&gt;



&lt;h2&gt;
  &lt;a href="#1-josh-w-comeau"&gt;
  &lt;/a&gt;
  1. Josh W Comeau
&lt;/h2&gt;

&lt;p&gt;A cool and awesome portfolio from josh . Also, Don't forget to hover around for cool effects. &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Link üëâ - &lt;a href="https://www.joshwcomeau.com/"&gt;here    &lt;/a&gt;   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ChEZZw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624444116236/6Vq79DqCn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ChEZZw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624444116236/6Vq79DqCn.png" alt="josh.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-art"&gt;
  &lt;/a&gt;
  2. ART
&lt;/h2&gt;

&lt;p&gt;A cool and awesome portfolio from Patricia Aas .this type of PF can be usful for artists for showcasing their art.&lt;/p&gt;

&lt;p&gt;Link üëâ - &lt;a href="https://patricia.no/"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hW4KY2tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624301988107/_GTnwItff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hW4KY2tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624301988107/_GTnwItff.png" alt="art.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-cow"&gt;
  &lt;/a&gt;
  3. COW
&lt;/h2&gt;

&lt;p&gt;Every small minimalistic detail in it has its own uniqueness.Go check it out on your own. &lt;/p&gt;

&lt;p&gt;Link üëâ- &lt;a href="https://seeyouspacecow.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4lNHd_xA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302097601/RAe5ULSUt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4lNHd_xA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302097601/RAe5ULSUt.png" alt="cow.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-hack"&gt;
  &lt;/a&gt;
  4. HACK
&lt;/h2&gt;

&lt;p&gt;This is by far the most hacker-style website I've seen. you can change channels and every effect has its own unique effects. A  &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Link üëâ- &lt;a href="https://kaisermann.me/websites/"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6nNXfelJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307041182/pSYllnFaE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6nNXfelJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307041182/pSYllnFaE.png" alt="distirt.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-flower"&gt;
  &lt;/a&gt;
  5. FLOWER
&lt;/h2&gt;

&lt;p&gt;Again a very awesome website. minimalistic and cool hover flower effects steal everyone's Hearts. &lt;code&gt;must visit&lt;/code&gt;&lt;br&gt;
Link - &lt;a href="https://jolienhoop.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtyKzjA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302271695/c81nAwSgH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtyKzjA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302271695/c81nAwSgH.png" alt="flower.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-pixel"&gt;
  &lt;/a&gt;
  6. PIXEL
&lt;/h2&gt;

&lt;p&gt;A cool indie pixelated sword game portfolio. Every game details are present.  &lt;code&gt;must visit&lt;/code&gt;&lt;br&gt;
Link üëâ - &lt;a href="https://nachocaiafa.com.ar/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B2LOi5sv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307101807/wc_mb4MXO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B2LOi5sv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307101807/wc_mb4MXO.png" alt="picel.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-pop-shake"&gt;
  &lt;/a&gt;
  7. POP SHAKE
&lt;/h2&gt;

&lt;p&gt;As a beginner, this website could be useful as it contains many small hover things which I thought could be useful for beginners.&lt;br&gt;
Link üëâ- &lt;a href="https://villivald.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sYSlkoAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302436328/hQGI1Tp4X.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sYSlkoAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302436328/hQGI1Tp4X.png" alt="pop shake.png"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#everyone-like-a-little-extra"&gt;
  &lt;/a&gt;
  üíØ&lt;em&gt;(everyone like a little extra)üíØüòÑ&lt;/em&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;7+2 websites&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#8-swag"&gt;
  &lt;/a&gt;
  8. SWAG
&lt;/h2&gt;

&lt;p&gt;Another cool single-page portfolio. Also, Don't forget to hover on the Get Started and Social icons for cool effects.&lt;/p&gt;

&lt;p&gt;Link üëâ- &lt;a href="https://nicovanzyl.com/"&gt;here&lt;/a&gt; &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bnpvj06W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302380590/NXBLOEkFH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bnpvj06W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302380590/NXBLOEkFH.png" alt="swag.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-my-first-portfolio-"&gt;
  &lt;/a&gt;
  9. My first portfolio :
&lt;/h2&gt;

&lt;p&gt;Also, I made my simple portfolio from all the learnings I got from different creators.&lt;/p&gt;

&lt;p&gt;Link üëâ- &lt;a href="//http:gouravmajee.me"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E9SJBuot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307201451/7Sf3aUrMV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E9SJBuot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307201451/7Sf3aUrMV.png" alt="gourav.png"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion üéÄ
&lt;/h1&gt;

&lt;p&gt;If you found this article useful or gave you the inspiration you need to build your portfolio. Do like and share with your network.&lt;/p&gt;

&lt;p&gt;If you've enjoyed this article  &lt;code&gt;‚âß‚ó†‚Äø‚ó†‚â¶‚úå&lt;/code&gt; or You have any questions then contact me  &lt;a href="https://twitter.com/Varougm"&gt;@Varougm&lt;/a&gt;  where I'd be more than happy to answer you  üíñ  . I'm new to this. if you find any mistake please let me know ‚úå.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDdHoi2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624447964425/MBXCmRLEa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDdHoi2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624447964425/MBXCmRLEa.png" alt="Thank you so much for reading.png"&gt;&lt;/a&gt;&lt;br&gt;
Buy me my first coffee  &lt;a href="https://www.buymeacoffee.com/Gouravmajee"&gt;ü•§here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PART 2  coming soon.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#portfolio-inspiration-mustread-website"&gt;
  &lt;/a&gt;
  portfolio #inspiration #mustread #website
&lt;/h1&gt;

</description>
      <category>portfolio</category>
      <category>development</category>
      <category>developer</category>
      <category>website</category>
    </item>
    <item>
      <title>Lets make an quote-of-the-day instagram bot!</title>
      <author>Ryan The Ghost</author>
      <pubDate>Wed, 23 Jun 2021 11:34:35 +0000</pubDate>
      <link>https://dev.to/ryandaghost/lets-make-an-quote-of-the-day-instagram-bot-3lbk</link>
      <guid>https://dev.to/ryandaghost/lets-make-an-quote-of-the-day-instagram-bot-3lbk</guid>
      <description>&lt;h1&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Lets get started
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  üéâ Demo
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/dailydouseofquotes/"&gt;https://www.instagram.com/dailydouseofquotes/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EU3sDxTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psuqu81mepelkebjpylr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EU3sDxTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psuqu81mepelkebjpylr.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make a files: &lt;br&gt;
&lt;code&gt;main.py&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#starting-the-code"&gt;
  &lt;/a&gt;
  Starting the code
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#importing-the-libaries"&gt;
  &lt;/a&gt;
  üß™ Importing the libaries
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
import urllib.request
import os
from PIL import Image, ImageDraw, ImageFont, ImageOps
import requests
from instabot import Bot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#getting-an-image-and-saving-it"&gt;
  &lt;/a&gt;
  üì∑ Getting an image and saving it
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dl_image&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;image_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://source.unsplash.com/user/eberhardgross/1080x1080/"&lt;/span&gt;
    &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlretrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing image"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;The following code will get an 1080x1080 image by the author eberhardgross from unsplash, &lt;strong&gt;Why him ?&lt;/strong&gt; I haven't seen anything 18+ from this user and have seen amazing images only!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#getting-the-daily-quote"&gt;
  &lt;/a&gt;
  üôå Getting the daily quote
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://quotes.rest/qod.json?language=en'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response_output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response_output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;This code will get a &lt;strong&gt;json daily quote of the day&lt;/strong&gt; response from quotes.rest, as you can see we will output certain results that we from FROM the dailyquote function &lt;strong&gt;later&lt;/strong&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#putting-the-quote-and-image-in-one"&gt;
  &lt;/a&gt;
  üòé Putting the quote and image in one!!
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#%E2%80%8D-fixing-the-line-order"&gt;
  &lt;/a&gt;
  üê±‚ÄçüöÄ Fixing the line order
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;We will be doing this so we can get a good word-per-line system, so we see the whole text!&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrap_by_word&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#lets-do-it-all"&gt;
  &lt;/a&gt;
  üé® Lets do it all!
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;text_overlay_ig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wrap_by_word&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;image_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="s"&gt;'image.jpg'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;im&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Fixing the quote line order and then opening our image file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Time to put on everything!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truetype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'font.ttf'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;shadowColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;thickness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"‚Äî "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;im&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#adding-a-fonttff-file"&gt;
  &lt;/a&gt;
  üåÅ Adding a font.tff file!
&lt;/h5&gt;

&lt;p&gt;i'd recommend using &lt;a href="https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot/blob/master/font.ttf"&gt;https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot/blob/master/font.ttf&lt;/a&gt; just click on download and put it in your folder ! The font is easy to read so its perfect&lt;/p&gt;

&lt;p&gt;And now lets put on the quote on the image&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;shadowColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;thickness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The x, y are the position of the text we want to put, change this but be careful this &lt;strong&gt;won't change based on the text length&lt;/strong&gt;! We could do that but lets stick with this for now&lt;/p&gt;

&lt;p&gt;Everything else is us just putting the text alongside the text shadow on the image.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Time to put the author&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"‚Äî "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 Same thing but we are changing the x, y positions &lt;strong&gt;AND&lt;/strong&gt; also adding ‚Äî to the author username&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-steps"&gt;
  &lt;/a&gt;
  üòéüôå Final steps
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quote'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;dl_image&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;text_overlay_ig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;ptag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;ptag&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;


&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"This bot was made by ryan s.(@9ebd7134 on github), Hope you enjoyed this quote, This quote was by"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Links:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;üì∑Image by: https://unsplash.com/user/eberhardgross&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Tags:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;#Ô∏è‚É£ "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ptag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"****"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"password1234"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upload_photo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caption&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 Simply change the caption/content and then bot.login username/password details for this to fully work!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fixing-up-some-issues"&gt;
  &lt;/a&gt;
  üÜò Fixing up some issues
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;I'll be updating this and updating the github page for it, i will make an issue and a pull request talking all about the changes! If you want to fix my code i'd love to see it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#link-for-the-github"&gt;
  &lt;/a&gt;
  Link for the github:
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot"&gt;https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>pythonbot</category>
      <category>automation</category>
      <category>bot</category>
    </item>
  </channel>
</rss>
