<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Divtober Day 25: Dip</title>
      <author>Alvaro Montoro</author>
      <pubDate>Mon, 25 Oct 2021 05:23:58 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/divtober-day-25-dip-3ek6</link>
      <guid>https://dev.to/alvaromontoro/divtober-day-25-dip-3ek6</guid>
      <description>&lt;p&gt;Divtober 25&lt;sup&gt;th&lt;/sup&gt; word is dip... so here's a tortilla chip chilling and drinking a margarita while (skinny?) dipping in some queso:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/ExvWxQJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>divtober</category>
      <category>css</category>
      <category>art</category>
    </item>
    <item>
      <title>Accordion on pure CSS</title>
      <author>Vadim Filimonov</author>
      <pubDate>Mon, 25 Oct 2021 05:16:59 +0000</pubDate>
      <link>https://dev.to/vadimfilimonov/accordion-on-pure-css-33ih</link>
      <guid>https://dev.to/vadimfilimonov/accordion-on-pure-css-33ih</guid>
      <description>&lt;p&gt;In this article I will try to tell you how to create an accordion using only styles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#layout"&gt;
  &lt;/a&gt;
  Layout
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"question-input"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"question"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"question-label"&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"question"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Click me?
&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"answer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque officia ipsum quam sequi! Ratione dolorem ad quam maxime a facere voluptate? Nulla dignissimos iure dolorum, a fuga excepturi sunt modi!
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of adding an additional class, we will focus on the :checked pseudo-class of the input element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styles"&gt;
  &lt;/a&gt;
  Styles
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.question-input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.answer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.question-input&lt;/span&gt;&lt;span class="nd"&gt;:checked&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nc"&gt;.question-label&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nc"&gt;.answer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#piece-by-piece"&gt;
  &lt;/a&gt;
  Piece by piece
&lt;/h2&gt;

&lt;p&gt;Hide the checkbox&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.question-input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;It's better to do it through the visually hidden pattern, but it's enough for a tutorial example.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Setting the answer styles&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.answer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; //&lt;/span&gt; &lt;span class="err"&gt;reset&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;height&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt; //&lt;/span&gt; &lt;span class="err"&gt;hide&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;block&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt; //&lt;/span&gt; &lt;span class="err"&gt;set&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;duration&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;animation&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And describe the rules for the unfolded accordion&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.question-input&lt;/span&gt;&lt;span class="nd"&gt;:checked&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nc"&gt;.question-label&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nc"&gt;.answer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A couple of words about the animation - it is crooked:&lt;/p&gt;

&lt;p&gt;This is due to the fact that &lt;code&gt;height: auto;&lt;/code&gt; can not be animated through &lt;code&gt;transition&lt;/code&gt;, you need to know the exact value. That's why, as a hack, we use &lt;code&gt;padding&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JMvOB7sb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cs10.pikabu.ru/post_img/2020/07/19/9/1595170040194557948.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JMvOB7sb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cs10.pikabu.ru/post_img/2020/07/19/9/1595170040194557948.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're happy with the animation - consider yourself lucky.&lt;/p&gt;

&lt;p&gt;See my &lt;a href="https://codepen.io/vadimfilimonov/pen/XWXPEXv"&gt;codepen&lt;/a&gt; for the current demo.&lt;/p&gt;

</description>
      <category>frontend</category>
      <category>accordion</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>Ubuntu installation</title>
      <author>purnimasharma04</author>
      <pubDate>Mon, 25 Oct 2021 05:13:04 +0000</pubDate>
      <link>https://dev.to/purnimasharma04/ubuntu-installation-29nd</link>
      <guid>https://dev.to/purnimasharma04/ubuntu-installation-29nd</guid>
      <description>&lt;p&gt;Follow the steps below to install Ubuntu in dual boot with Windows 10:&lt;/p&gt;

&lt;p&gt;Step 1: Create a live USB or disk&lt;br&gt;
Download and create a live USB or DVD. &lt;/p&gt;

&lt;p&gt;Step 2: Boot in to live USB&lt;br&gt;
Plug the live USB or disk in to the computer and restart the computer. While booting the computer press F10 or F12 function key (defers from computer to computer) to go to the boot menu. Now, choose the option to boot from USB or Removable Media.&lt;/p&gt;

&lt;p&gt;Step 3: Start the installation&lt;/p&gt;

&lt;p&gt;I prefer to install Linux in dual boot with Windows. I hardly use Windows but it gives me sort of back up if I mess up with things. Dual booting Linux with Windows is always suggestible for the beginners. In this, we see how to install Ubuntu in dual boot mode with Windows.&lt;/p&gt;

&lt;p&gt;Before we see how to dual boot Ubuntu with Windows, let me give you some important details.&lt;/p&gt;

&lt;p&gt;First, I had Windows 10 installed with 4 partitions on it. Later I installed Linux on it in dual boot mode. I changed the partition and kept around 200 GB of total 1TB for Linux installation. &lt;/p&gt;

&lt;p&gt;Step 4: Prepare the partition&lt;/p&gt;

&lt;p&gt;This is the most important part of the whole dual boot installation. Where to install Ubuntu? Windows is already installed here, so, we’ll prepare a new partition for Ubuntu. In the Installation Type window, choose Something Else.&lt;/p&gt;

&lt;p&gt;I presume that you have more than one NTFS partitions (i.e. Drives in Windows) on your hard disk, with one of them consisting of Windows installation (C:). What you need to do here is to delete a NTFS or existing ext4 partition and create some free space for linux distro . This will delete all the data in that partition and this is why I asked you to verify if you have Windows installed in a different partition.&lt;/p&gt;

&lt;p&gt;Click on the desired partition and press the – to delete the partition.&lt;/p&gt;

&lt;p&gt;Step 5: Follow the trivial instructions&lt;/p&gt;

&lt;p&gt;If you successfully created the partitions as mentioned above, you have almost won the battle. Rest is just some trivial steps to follow. You will be taken through a number of screens to select options like keyboard layout, login credentials etc. You don’t have to be a genius to figure out what to do here afterwards. I have attached screenshots for reference purpose here.&lt;/p&gt;

&lt;p&gt;Install Ubuntu Windows Dual Boot 10&lt;/p&gt;

&lt;p&gt;Once the installation is over, you will be presented with the option to keep trying live version or to restart the system.&lt;/p&gt;

&lt;p&gt;Install Ubuntu Windows Dual Boot 20&lt;br&gt;
And that’s it. Thus you can enjoy the beautiful, beginner friendly and world’s most popular Linux distribution. I hope you found this guide to dual boot Ubuntu with Windows helpful. If you need, you can change the boot order easily to make Windows your default OS. Since you have just installed Ubuntu 20.04LTS, you can check out things to do after installing Ubuntu.&lt;/p&gt;

&lt;p&gt;Errors experienced during ubuntu install:&lt;/p&gt;

&lt;p&gt;Literally, I didn't come across any of the error. But, After installation. when I had restarted my lap. Then it asked me for a digital bit locker security key to enter and I don't know what to enter then I have googled that Where can I find my BitLocker recovery key?&lt;/p&gt;

&lt;p&gt;In your Microsoft account: &lt;br&gt;
Sign in to your Microsoft account on another device to find your recovery key. &lt;br&gt;
&lt;a href="https://account.microsoft.com/account/"&gt;https://account.microsoft.com/account/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6zrk2UAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybxb5ny75unsjw04woaa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6zrk2UAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybxb5ny75unsjw04woaa.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and there you can find your bit locker key by logging into your account. Then you can enter the key and press enter then there you will see the dual boot screen&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Backend Developer Learning Path 2021</title>
      <author>John</author>
      <pubDate>Mon, 25 Oct 2021 04:40:33 +0000</pubDate>
      <link>https://dev.to/jonny/backend-developer-learning-path-2021-1c7h</link>
      <guid>https://dev.to/jonny/backend-developer-learning-path-2021-1c7h</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;Who is a Backend Web Developer ? backend developer roadmap: Unlike the frontend developer, who takes care of the visible part of a site or app, the backend developer is a computer scientist who instead builds everything that is not seen but serves to make that site or application work. If we were to use the metaphor, …&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Developers Learning Path 2021&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>30 amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project</title>
      <author>John</author>
      <pubDate>Mon, 25 Oct 2021 04:37:37 +0000</pubDate>
      <link>https://dev.to/jonny/30-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-48e9</link>
      <guid>https://dev.to/jonny/30-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-48e9</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;30 amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Ethical Hacking Learning Path 2021</title>
      <author>John</author>
      <pubDate>Mon, 25 Oct 2021 04:35:05 +0000</pubDate>
      <link>https://dev.to/jonny/ethical-hacking-learning-path-2021-47o7</link>
      <guid>https://dev.to/jonny/ethical-hacking-learning-path-2021-47o7</guid>
      <description>&lt;h2&gt;&lt;strong&gt;Who is an Ethical Hacker?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;An ethical hacker is a computer network specialist who deals with the security posture of an organization. His job involves eliciting security flaws in the organization he is working for by testing all aspects of the system and its services for any sort of vulnerabilities. The key point to notice is that all this is done with the permission of the owners of the organization and without any malicious intent. An ethical hacker is also known as a white hat hacker and is the stark opposite of a black hat hacker, a.k.a crackers who hack with the sole purpose of bringing about some sort of disruption, or chaos from the vulnerabilities they find. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/ethical-hacking-roadmap-a-beginners-guide/&amp;amp;ved=2ahUKEwjSy6-98ZvzAhXQxTgGHSS8Bu84ChAWegQIGxAB&amp;amp;usg=AOvVaw3-vFooaWUJypOS-FfvXpjK"&gt;Ethical Hacking Roadmap - A Beginners Guide&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Polygon a new privacy-oriented social network becomes open-source after being developed privately for more than a year!</title>
      <author>Michael Grigoryan</author>
      <pubDate>Mon, 25 Oct 2021 04:34:33 +0000</pubDate>
      <link>https://dev.to/michaelgrigoryan25/polygon-a-new-privacy-oriented-social-network-becomes-open-source-after-being-developed-privately-for-more-than-a-year-54lm</link>
      <guid>https://dev.to/michaelgrigoryan25/polygon-a-new-privacy-oriented-social-network-becomes-open-source-after-being-developed-privately-for-more-than-a-year-54lm</guid>
      <description>&lt;p&gt;Privacy and transparency are some of the most important requirements that most modern social networks like Facebook and Instagram do not meet. &lt;/p&gt;

&lt;p&gt;One of the best examples of privacy nightmare is TikTok is. It collects some very troubling data points such as &lt;strong&gt;the number of CPUs your device has, available disk space, your IP &amp;amp; MAC addresses, whether your phone is jailbroken&lt;/strong&gt;, and so much more, which does not have anything to do with TikTok. Imagine that there are so many more applications and websites that do essentially the same thing and sell your information to 3rd party advertisers. Internet is slowly becoming a place where one company can easily predict what type of person you are, based on all data points that they collected over time.&lt;/p&gt;

&lt;p&gt;To end this, I have open-sourced the social network that I was working on for more than a year! It is called &lt;strong&gt;Polygon&lt;/strong&gt; and the main goal for it is to be a &lt;strong&gt;&lt;em&gt;social network that is not hungry for your data&lt;/em&gt;&lt;/strong&gt;. Both the core and front-end are written in &lt;strong&gt;TypeScript&lt;/strong&gt; and are seeking support from the open-source community. We also have a hosting guide that is written in &lt;strong&gt;Python&lt;/strong&gt;.There is also some tooling written in &lt;strong&gt;Go&lt;/strong&gt;. My main goal is to make it a &lt;strong&gt;private&lt;/strong&gt;, &lt;strong&gt;easy-to-use&lt;/strong&gt;, and &lt;strong&gt;crisp&lt;/strong&gt; social network which will be adapted by privacy and open-source enthusiasts all over the world. &lt;/p&gt;

&lt;p&gt;Polygon is also open for &lt;strong&gt;Hacktoberfest&lt;/strong&gt; contributions, which means that both beginners and professionals can contribute to the project and learn something new!&lt;/p&gt;

&lt;p&gt;You can find all projects related to Polygon at: &lt;a href="https://github.com/polygon-isecure"&gt;https://github.com/polygon-isecure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>node</category>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>Javascript Methods for Working with Objects {}</title>
      <author>Tosh</author>
      <pubDate>Mon, 25 Oct 2021 04:30:34 +0000</pubDate>
      <link>https://dev.to/toshvelaga/javascript-methods-for-working-with-objects--j4j</link>
      <guid>https://dev.to/toshvelaga/javascript-methods-for-working-with-objects--j4j</guid>
      <description>&lt;p&gt;Objects are a very commonly used data type in which data is stored using key value pairs. To create an object you can do the following. In the example below we create a beer object with key value pairs for name, ABV, and price. There are multiple ways to instantiate an object as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hopadillo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;ABV&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6.6%&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$2.00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// OR &lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hopadillo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;ABV&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6.6%&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$2.00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// OR &lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alcohol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ABV&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ABV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ABV&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;alcohol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hopadillo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6.6%&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$2.00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// OR &lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Alcohol&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ABV&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;maker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Alcohol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hopadillo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6.6%&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$2.00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;1. Object.keys()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This method gets all the keys of an object and puts them in an array. Here is an example using our beer object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beerKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// console.log(beerKeys) &lt;/span&gt;
&lt;span class="c1"&gt;// ["name", "ABV", "price"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Object.values()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This method gets all the values of an object and puts them in an array. Here is an example using our beer object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beerValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// console.log(beerValues)&lt;/span&gt;
&lt;span class="c1"&gt;// ["Hopadillo", "6.6%", "$2.00"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Object.entries()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Object.entries() creates a new nested array with each key value pair being converted into an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beerEntries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// console.log(beerEntries)&lt;/span&gt;
&lt;span class="c1"&gt;// [&lt;/span&gt;
&lt;span class="c1"&gt;//   ['name', 'Hopadillo'], &lt;/span&gt;
&lt;span class="c1"&gt;//   ['ABV', '6.6%'], &lt;/span&gt;
&lt;span class="c1"&gt;//   ['price': '$2.00']&lt;/span&gt;
&lt;span class="c1"&gt;// ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Object.fromEntries()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Object.fromEntries() is used to convert an array into an object. It’s basically the opposite of Object.entries().&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hopadillo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ABV&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6.6%&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;price&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$2.00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beerFromEntries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromEntries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// console.log(beerFromEntries)&lt;/span&gt;
&lt;span class="c1"&gt;// {&lt;/span&gt;
&lt;span class="c1"&gt;//   name:"Hopadillo",&lt;/span&gt;
&lt;span class="c1"&gt;//   ABV:"6.6%",&lt;/span&gt;
&lt;span class="c1"&gt;//   price:"$2.00"&lt;/span&gt;
&lt;span class="c1"&gt;// }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5. Object.assign()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Object.assign() is used to merge multiple objects into one object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hopadillo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;ABV&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6.6%&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$2.00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beerBreweryLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Texas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;beerObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;beerBreweryLocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// console.log(beerObj)&lt;/span&gt;
&lt;span class="c1"&gt;// {&lt;/span&gt;
&lt;span class="c1"&gt;//   name:"Hopadillo",&lt;/span&gt;
&lt;span class="c1"&gt;//   ABV:"6.6%",&lt;/span&gt;
&lt;span class="c1"&gt;//   price:"$2.00",&lt;/span&gt;
&lt;span class="c1"&gt;//   state:"Texas"&lt;/span&gt;
&lt;span class="c1"&gt;// }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are of course other methods that you can use on objects, but you likely won’t run into them in the wild too often. To see a more extensive list of methods that can be used on objects check out MDN.&lt;br&gt;
If you found this article helpful check out my open source livestreaming project ohmystream.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The Art of Writing Agile User Stories</title>
      <author>Rammina</author>
      <pubDate>Mon, 25 Oct 2021 04:25:44 +0000</pubDate>
      <link>https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9</link>
      <guid>https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9</guid>
      <description>&lt;p&gt;Have you ever thought of what a user would do with your application?&lt;/p&gt;

&lt;p&gt;No matter how well-architectured the app you built is, &lt;em&gt;if it brings no value to users, chances are, no one will use it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In simple terms, &lt;strong&gt;user stories&lt;/strong&gt; are brief, informal descriptions of a software feature told from the perspective of the users. These answer the &lt;strong&gt;"who,"&lt;/strong&gt; &lt;strong&gt;"what,"&lt;/strong&gt; and &lt;strong&gt;"why"&lt;/strong&gt; of a single task/functionality in an application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-story-format"&gt;
  &lt;/a&gt;
  User Story Format
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;As a(n) &amp;lt;user type&amp;gt;, I want to &amp;lt;function&amp;gt; so I can &amp;lt;benefit&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;As a &lt;em&gt;customer&lt;/em&gt;, I want to &lt;em&gt;view the list of menu items&lt;/em&gt;, so I can &lt;em&gt;easily choose what food to order&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;user type&lt;/strong&gt; answers the "who," the &lt;strong&gt;function&lt;/strong&gt; refers to the "what," and finally, the &lt;strong&gt;benefit&lt;/strong&gt; explains the "why" in a user story.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-makes-a-great-user-story"&gt;
  &lt;/a&gt;
  What Makes a Great User Story?
&lt;/h2&gt;

&lt;p&gt;Now that you know the typical format for a user story, the next question that comes to mind is &lt;em&gt;"What makes a great user story?"&lt;/em&gt;. Your backlog should not be filled with stories that actually do not provide user value. If you do, you could waste a lot of time and effort planning for and working on tasks that don’t add much, if any, business value to your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ecJLzo1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bxa9lrt5mny0bwpy9ep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecJLzo1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bxa9lrt5mny0bwpy9ep.png" alt="INVEST criteria"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image by &lt;a href="https://www.one80agiletraining.com/author/andre/"&gt;Andre Simones&lt;/a&gt; from &lt;a href="https://www.one80agiletraining.com/user-stories/writing-good-user-stories-hint-its-not-about-writing/#prettyPhoto"&gt;one80agiletraining&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#invest"&gt;
  &lt;/a&gt;
  INVEST
&lt;/h3&gt;

&lt;p&gt;Fortunately, &lt;a href="https://twitter.com/wwake"&gt;Bill Wake&lt;/a&gt; coined the term "INVEST" which serves as a reminder of what characteristics of a high-quality user story. INVEST stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Independent&lt;/strong&gt;: User stories should not be dependent on one another.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Negotiable&lt;/strong&gt;: Should leave space for discussion.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Valuable&lt;/strong&gt;: Must deliver value to the stakeholders.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Estimable&lt;/strong&gt;: You should be able to estimate the size and scope of a user story.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Small&lt;/strong&gt;: The user story should be small enough to easily plan and prioritize it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Testable&lt;/strong&gt;: You should be able to test the results of development.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ideally, your user stories should have all of these characteristics, because they enable you to easily determine how each task fits into your project timeline. By following INVEST, it is much easier to decide which items you must fulfill first, and which ones can wait until later.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#examples-of-bad-user-stories"&gt;
  &lt;/a&gt;
  Examples of Bad User Stories
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hfEj5JfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ku7125bnixo2j95vdozm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfEj5JfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ku7125bnixo2j95vdozm.jpg" alt="Examples of Bad User Stories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image by &lt;a href="https://www.romanpichler.com/blog/author/romanpichler/"&gt;Roman Pichler&lt;/a&gt; from &lt;a href="https://www.romanpichler.com/blog/5-common-user-story-mistakes/"&gt;romanpichler&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Here are examples of bad user stories, and why they don't work:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a customer ordering fast food online, I want to find previous food order lists so that I can see all the orders that I have.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; The benefit/value is absent from this user story, because &lt;code&gt;so that I can see all the orders that I have&lt;/code&gt; is just a re-statement of &lt;code&gt;find previous food order lists&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a QA tester, I want to have access to test plans so that when the product is finished, I know how to test it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Users do not really care about test plans, they just want quality products.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a Jam’s dining customer, I want various food item categories displayed in different colors: red for meats, magenta for grains, and olive green for vegetables and fruits—so that I can easily group my food items by food type.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; The user story is way too technically specific and robotic. This not only fails to represent a user but also limits the creativity of the developers.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#examples-of-great-user-stories"&gt;
  &lt;/a&gt;
  Examples of Great User Stories
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vXnHJS0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00yv5odnwxuwvgcak8m3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vXnHJS0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00yv5odnwxuwvgcak8m3.png" alt="Examples of Good User Stories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image from &lt;a href="https://assets.justinmind.com/wp-content/uploads/2020/09/user-story-examples-backlog.png"&gt;&lt;/a&gt;justinmind.com&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;In contrast to the previous bad examples, here are the user stories that work well:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a customer ordering fast food online, I want to find my saved food order lists so that I can reuse them for future orders, allowing me to order faster and more accurately.&lt;/p&gt;

&lt;p&gt;As a Jam’s dining customer, I want items to have a custom item code so that I can quickly find an item on a screen.&lt;/p&gt;

&lt;p&gt;As a logged in user, I would like a login timeout and log off after a certain amount of time so that I can have some protection against unauthorized use when my computer is left unattended&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These user stories work well because they have the characteristics of INVEST:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;their functionality is not dependent on other stories&lt;/li&gt;
&lt;li&gt;they leave room for different implementation options&lt;/li&gt;
&lt;li&gt;they add user value to the project&lt;/li&gt;
&lt;li&gt;their scope and size can definitely be estimated by developers&lt;/li&gt;
&lt;li&gt;they are small enough to be planned around and/or reprioritized against other stories&lt;/li&gt;
&lt;li&gt;they can be tested&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#completing-a-user-story"&gt;
  &lt;/a&gt;
  Completing a User Story
&lt;/h2&gt;

&lt;p&gt;Now that you know how to make great user stories, you'd probably like to know when they are finished. A user story is completed when it meets its &lt;strong&gt;Acceptance Criteria&lt;/strong&gt; and its &lt;strong&gt;Definition of Done&lt;/strong&gt; (DoD). But what do these terms mean?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CLzqvERD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbg9t99c16dwia9qch0q.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CLzqvERD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbg9t99c16dwia9qch0q.jpeg" alt="Acceptance Criteria vs Definition of Done"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image from &lt;a href="https://agilemania.com/definition-of-done-vs-acceptance-criteria/"&gt;agilemania&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#acceptance-criteria"&gt;
  &lt;/a&gt;
  Acceptance Criteria
&lt;/h3&gt;

&lt;p&gt;The Acceptance Criteria of a user story consist of &lt;em&gt;the set of test cases that must be fulfilled&lt;/em&gt; to ensure that the software is working as intended. Like user stories, acceptance criteria should be written from the perspective of a user. They should be clear, concise, and easily utilized by the development team. Acceptance criteria should not be concerned about implementation, but only about which features should be present and included. Each user story will have different Acceptance Criteria based on its requirements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#definition-of-done-dod"&gt;
  &lt;/a&gt;
  Definition of Done (DoD)
&lt;/h3&gt;

&lt;p&gt;The Definition of Done (DoD) is a &lt;em&gt;list of requirements that a user story or Increment must adhere to&lt;/em&gt; for the team to call it complete. The DoD serves as a checklist that guides various pre-implementation activities such as discussion, estimation, and design. By ensuring that the DoD is followed, the team can minimize reworking on user stories.&lt;/p&gt;

&lt;p&gt;Its difference from Acceptance Criteria is that &lt;strong&gt;DoD is common for all the user stories&lt;/strong&gt; whereas &lt;strong&gt;Acceptance Criteria are applicable to only a specific user story&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-stories-in-agilescrum-environments"&gt;
  &lt;/a&gt;
  User Stories in Agile/Scrum Environments
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--imRQXQfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uilmretdsmg22jhr1edl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--imRQXQfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uilmretdsmg22jhr1edl.png" alt="Notion board"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image by Nate Martins from &lt;a href="https://www.notion.so/blog/kanban-vs-scrum"&gt;Notion&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;In Agile/Scrum environments, a team would utilize user stories as part of their Product Backlog. Each story represents a single unit of functionality in a project, and a backlog contains multiple user stories. Many teams nowadays use issue trackers or tickets for listing user stories, while others still use sticky notes. As PBIs become higher-ordered in the Product Backlog, they tend to be broken down into user stories with more specific tasks listed.&lt;/p&gt;

&lt;p&gt;Unlike a Product Backlog Item (PBI), a user story depicts more than just a specific requirement, change, or bug fix. Its focus is on the end-user and their experience. A user story is an increment that provides value to the overall product. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons-of-user-stories"&gt;
  &lt;/a&gt;
  Pros and Cons of User Stories
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0jK4Brk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://heavencpa.com/wp-content/uploads/2019/03/pros-vs-cons-heaven-and-alvarez-1024x683.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0jK4Brk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://heavencpa.com/wp-content/uploads/2019/03/pros-vs-cons-heaven-and-alvarez-1024x683.png" alt="Pros and Cons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image from &lt;a href="https://heavencpa.com/wp-content/uploads/2019/03/pros-vs-cons-heaven-and-alvarez-1024x683.png"&gt;heavencpa&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-user-stories"&gt;
  &lt;/a&gt;
  Advantages of User Stories:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;helps ensure that a functionality brings user value&lt;/li&gt;
&lt;li&gt;follows Agile/Scrum core principles&lt;/li&gt;
&lt;li&gt;makes it easier to organize software functionality, as it leaves out implementation details&lt;/li&gt;
&lt;li&gt;allows team members of different expertise and backgrounds to plan an application more easily&lt;/li&gt;
&lt;li&gt;encourages conversations rather than simply handing out document details&lt;/li&gt;
&lt;li&gt;simple to prioritize and reorder, especially for product backlog items&lt;/li&gt;
&lt;li&gt;easily understood by both clients and developers&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-user-stories"&gt;
  &lt;/a&gt;
  Disadvantages of User Stories:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;does not explain the "how?"&lt;/li&gt;
&lt;li&gt;does not involve non-functional requirements (e.g. fault tolerance, performance, usability, modifiability)&lt;/li&gt;
&lt;li&gt;user stories are not substitutes to business requirements&lt;/li&gt;
&lt;li&gt;the lack of implementation details means that the processes could vary a lot from team to team&lt;/li&gt;
&lt;li&gt;can be misunderstood and misused&lt;/li&gt;
&lt;li&gt;can lose its original essence/purpose (especially in companies and teams that are "Agile" only for compliance purposes)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#frequently-asked-questions-faq"&gt;
  &lt;/a&gt;
  Frequently Asked Questions (FAQ)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d9goqHr1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qm21usun2fo2ju9plffb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d9goqHr1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qm21usun2fo2ju9plffb.png" alt="Common Questions and Answers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who writes user stories?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Anyone can write user stories.&lt;/em&gt; In an Agile/Scrum environment, the Product Owner is responsible for the backlog of all user stories. However, anyone in the entire team can make them. Solo developers can also utilize user stories to help guide them when building a project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When should you write user stories?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;User stories can be written anytime.&lt;/em&gt; Typically, a team will hold a meeting at the start of the project to create user stories to identify initial project requirements. It is impossible to identify all of them at the beginning, so the team will create user stories over the course of the project timeline as they discover more user requirements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When is a user story completed or finished?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A user story is completed when it meets its Acceptance Criteria and its Definition of Done (DoD).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do user stories replace a requirements document?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;They don't, as they serve different purposes.&lt;/em&gt; A user story focuses on the experience and needs of users, while a requirements document goes into a lot of detail about features necessary for a project. User stories focus on the &lt;em&gt;who&lt;/em&gt;, &lt;em&gt;what&lt;/em&gt;, and &lt;em&gt;why&lt;/em&gt;. On the other hand, requirements documents focus on the &lt;em&gt;what&lt;/em&gt; and &lt;em&gt;how&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the differences between user stories and Product Backlog Items?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At first glance, they seem similar, but there is a key difference: User stories place an emphasis on the end-users and their experiences. On the other hand, a Product Backlog Item merely represents a specific change, requirement, or bug fix without being concerned much about the &lt;em&gt;who&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are user stories like pseudocode?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;They are used differently.&lt;/em&gt; Pseudocode is mainly concerned about implementation details and how a developer would build a solution, and user stories completely leave out the implementation details in exchange for focusing on the user experience. User stories focus on the &lt;em&gt;who&lt;/em&gt;, &lt;em&gt;what&lt;/em&gt;, and &lt;em&gt;why&lt;/em&gt;. On the other hand, pseudocode focus on the &lt;em&gt;what&lt;/em&gt; and &lt;em&gt;how&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding Remarks
&lt;/h2&gt;

&lt;p&gt;Writing user stories is not difficult, but it's also easy to get them wrong. You should be fine as long as the user stories you write fulfill the following: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;written from the perspective of a user&lt;/li&gt;
&lt;li&gt;identify the user, the feature, and the benefit (or answer the &lt;em&gt;"who, what, and why?"&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;have the characteristics of INVEST&lt;/li&gt;
&lt;li&gt;not too restrictive in terms of implementation&lt;/li&gt;
&lt;li&gt;have Acceptance Criteria and Definition of Done (DoD)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;User stories are great for identifying user needs and increasing the business value of a product.&lt;/strong&gt; However, user stories do not cover implementation details and are not substitutes for a requirements document.&lt;/p&gt;

&lt;p&gt;A user story is the smallest, functional unit in the Agile/Scrum Product Backlog. Most modern software development teams will require you to use it, so it is definitely worth learning. And even as a solo developer, writing down user stories will help you build a project that has user value and prioritize which features you should implement first. &lt;/p&gt;

&lt;p&gt;Try writing user stories before you build your next project, and see how it helps!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resourcesrecommended-reading"&gt;
  &lt;/a&gt;
  Resources/Recommended Reading:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mountaingoatsoftware.com/agile/user-stories#:~:text=User%20stories%20are%20short%2C%20simple,so%20that%20"&gt;User Story Guide by Mike Cohn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.anvileight.com/posts/how-to-create-a-perfect-user-story-step-by-step-guide/"&gt;How To Create a Perfect User Story - Step by Step Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agileforall.com/new-to-agile-invest-in-good-user-stories/"&gt;New to Agile? INVEST in good user stories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visual-paradigm.com/scrum/definition-of-done-vs-acceptance-criteria/"&gt;Definition of Done vs Acceptance Criteria&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5wNGwSz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyi1ip2bzgnxx6zfbr8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5wNGwSz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyi1ip2bzgnxx6zfbr8m.png" alt="Thank You Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is a Starter Guide meant for introducing beginners to user stories.&lt;/strong&gt; This guide only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections and discussions in the comments!&lt;/p&gt;

</description>
      <category>agile</category>
      <category>programming</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>DOST Scholarship Online Application | Apply Now!</title>
      <author>ched-scholarships</author>
      <pubDate>Mon, 25 Oct 2021 04:24:38 +0000</pubDate>
      <link>https://dev.to/ched_scholarships/dost-scholarship-online-application-apply-now-54j3</link>
      <guid>https://dev.to/ched_scholarships/dost-scholarship-online-application-apply-now-54j3</guid>
      <description>&lt;p&gt;The Department of Science and Technology invites Filipino youths to join the science body by undertaking careers in Science Technology Engineering and Mathematics. The DOST Science Education Institute has announced that the scholarship slots for 2021 DOST-SEI undergraduate students are available. This is for the incoming grade 12 students, AY 2020-2021 who have the intention of pursuing STEM courses when enrolled in college in the coming year. The aim of the scholarship is to push for knowledge-driven advancement through Sand T human resource advancement.&lt;/p&gt;

&lt;p&gt;Apply Links - &lt;a href="https://scholarshipscheme.in/dost-scholarship-online/"&gt;https://scholarshipscheme.in/dost-scholarship-online/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VALUE OF SCHOLARSHIP&lt;br&gt;
The scholarship is of great value since it allows talented Filipino youths to pursue Science Technology Engineering and Mathematics-related careers and also participate actively in research and development activities. This will enable the Philippines to have more students in this dynamic world. The windows are also open for the non-STEM strand as long as they are at the top 5 percent of their graduating class.&lt;/p&gt;

&lt;p&gt;SCHOLARSHIP PRIVILEGES&lt;br&gt;
Tuition Fee Subsidy: ₱40,000 per academic year for those who will enroll in private HEIs&lt;br&gt;
Book Allowance: ₱10,000 per academic year&lt;br&gt;
Thesis Allowance: ₱10,000&lt;br&gt;
Monthly Living Allowance: ₱7,000 per month&lt;br&gt;
Transportation Allowance&lt;br&gt;
Group Insurance: Premium&lt;br&gt;
Graduation Allowance: ₱1,000&lt;br&gt;
PE/MS Uniform Allowance&lt;br&gt;
PRIORITY PROGRAMS&lt;br&gt;
The priority programs under the DOST scholarship include but are not limited to Aeronautical engineering, Chemistry with material science, Industrial pharmacy, computer science, Civil engineering, Molecular biology and Biotechnology, Instrumentation, and control engineering, Manufacturing Engineering Management Mechatronics, and Robotics and many more. These programs can be studied at the State Universities and Colleges, Institutions that have Level III FAAP accreditation. You can also pursue the courses at Centers of Development for the priority science and technology courses.&lt;/p&gt;

&lt;p&gt;The DOST undergraduate scholarship has a number of categories which include&lt;/p&gt;

&lt;p&gt;RA 7687 S and T Scholarship&lt;br&gt;
This is for the applicants whose social-economic statuses do not exceed the cut-off values that are set of all known indicators as approved by the advisory committee on Science and Technology scholarship. There is no application fee required for RA 7687.&lt;/p&gt;

&lt;p&gt;MERIT Scholarship&lt;br&gt;
The merit scholarship is awarded to the students that have high aptitude in mathematics and science and they are willing to undertake STEM-related careers.&lt;/p&gt;

&lt;p&gt;Junior Level Science Scholarships.&lt;br&gt;
The junior-level science scholarship is awarded to third-year students who have qualified and have been enrolled in priority engineering courses. It is provided for the remaining 3 years of study. Under this scholarship, you can qualify for JLSS RA 7687 or JLSS merit.&lt;/p&gt;

&lt;p&gt;R.A. 10612 Scholarship.&lt;br&gt;
This scholarship is under the JLSS and it is awarded to the third-year students who wish to teach STEM subjects in basic education. This program supports the execution of section 8 about the Kto 12 law that aims to provide a pool of graduates who can competently teach STEM subjects.&lt;/p&gt;

&lt;p&gt;Disclaimer : Always check the official website before applying&lt;/p&gt;

&lt;p&gt;ELIGIBILITY&lt;br&gt;
For you to be eligible and qualify for the DOST scholarship you must be:&lt;/p&gt;

&lt;p&gt;Natural born Filipino citizen.&lt;br&gt;
Be in the top 5% graduating class of the non-STEM strand in senior high school.&lt;br&gt;
A member of the STEM strand graduating class in senior high school.&lt;br&gt;
Be a resident of the municipality and attested by the barangay.&lt;br&gt;
You should be of good moral character and also in good health.&lt;br&gt;
It should be the first time you are doing the DOST-SEI examination or you did the examination but you didn’t qualify for the scholarship. Another factor that eliminates you is that you qualified for the scholarship but did not avail of the award.&lt;br&gt;
You should not have any undergraduate or post-secondary units.&lt;br&gt;
You must have qualified for the science and technology scholarship examination.&lt;br&gt;
The following items should be submitted for both RA 7687 and Merit scholarships.&lt;/p&gt;

&lt;p&gt;Personal Information ( Form A)&lt;br&gt;
Household information and questionnaire.&lt;br&gt;
Certificate of good moral character.&lt;br&gt;
Certificate of good health.&lt;br&gt;
Principal’s Certification ( form E1 or E2).&lt;br&gt;
Certificate of Residency.&lt;br&gt;
Parent’s Certification.&lt;br&gt;
Applicant’s certification.&lt;br&gt;
A signed declaration by the legal guardian or parent and the applicant.&lt;br&gt;
A recent 1 by 1-inch picture.&lt;br&gt;
Photocopy of your birth certificate.&lt;br&gt;
Parents income tax return for 2019/ Employment contract for OFW/ Brgy certificate of indigency/ BIR certificate of exemption from the filing of ITR.&lt;/p&gt;

&lt;p&gt;APPLICATION PROCEDURE&lt;br&gt;
The application procedure is divided into four (4) steps:&lt;/p&gt;

&lt;p&gt;Registration through the provided link below.&lt;br&gt;
Carrying out the Eligibility Check.&lt;br&gt;
Filling out the application form and then uploading the required documents. The required documents are clearly indicated on this platform.&lt;br&gt;
Selection of the Test Center.&lt;br&gt;
If you have already registered, Sign in. You can also submit or file your application through the DOST-SEI regional offices.&lt;/p&gt;

&lt;p&gt;It is necessary for you to read the instructions carefully when filling the different forms. You are encouraged to consult your parents when completing this application procedure.&lt;/p&gt;

&lt;p&gt;Apply Link - &lt;a href="https://scholarshipscheme.in/dost-scholarship-online/"&gt;https://scholarshipscheme.in/dost-scholarship-online/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Chromium console stopped working. - What's wrong? How do I fix it?</title>
      <author>Calin Baenen</author>
      <pubDate>Mon, 25 Oct 2021 04:20:13 +0000</pubDate>
      <link>https://dev.to/baenencalin/chromium-console-stopped-working-whats-wrong-hod-do-i-fix-it-1a8e</link>
      <guid>https://dev.to/baenencalin/chromium-console-stopped-working-whats-wrong-hod-do-i-fix-it-1a8e</guid>
      <description>&lt;p&gt;Recently, after it working for a while, the console in Chromium gave-out, as in doesn't work.&lt;br&gt;
Pressing &lt;code&gt;ctrl+i&lt;/code&gt;, &lt;code&gt;ctrl+shift+j&lt;/code&gt;, or &lt;code&gt;f12&lt;/code&gt; doesn't work. I tried pressing the three-dots, then to "Developer tools"&lt;sup&gt;under "More tools"&lt;/sup&gt; manually, but pressing that option doesn't work, nor does "Inspect" in the default content menu work.&lt;br&gt;
The options aren't grayed out (at least not that I can tell), but nothing happens, and I'm not notified of any errors.&lt;/p&gt;

&lt;p&gt;I'm on Arch Linux + KDE Plasma, with x86_64 archt.&lt;br&gt;
Extra details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Chromium Version: 95.0.4638.54 (Official Build) Arch Linux (64-bit)
Chromium Revision: d31a821ec901f68d0d34ccdbaea45b4c86ce543e-refs/branch-heads/4638@{#871}
Linux Kernel Version: 5 10.75-1-lts (64-bit)
Date: October 24. 23:20, 2021.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>chromium</category>
      <category>webdev</category>
      <category>help</category>
      <category>linux</category>
    </item>
    <item>
      <title>Today I successfully completed Hacktoberfest 2021!</title>
      <author>Arti Manputra</author>
      <pubDate>Mon, 25 Oct 2021 04:16:48 +0000</pubDate>
      <link>https://dev.to/artimanputra/today-i-successfully-completed-hacktoberfest-2021-hi1</link>
      <guid>https://dev.to/artimanputra/today-i-successfully-completed-hacktoberfest-2021-hi1</guid>
      <description>&lt;p&gt;Hacktoberfest 2021 was a great kickstart for my open source journey. It was an amazing experience contributing to the projects.&lt;br&gt;
Thank you Hactoberfest and DigitalOcean for bringing this awesome opportunaty for me!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>hacktoberfest</category>
      <category>java</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
