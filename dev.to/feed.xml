<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React Native Setup on macOS!</title>
      <author>Krishna Bhamare</author>
      <pubDate>Thu, 16 Sep 2021 07:28:11 +0000</pubDate>
      <link>https://dev.to/krishna7852/react-native-setup-on-macos-5a76</link>
      <guid>https://dev.to/krishna7852/react-native-setup-on-macos-5a76</guid>
      <description>&lt;p&gt;You're interested in developing React Native on your macOS computer - yay! However, installing React Native can be kind of tricky, there are a lot of different pieces to connect for both iOS development and Android.&lt;/p&gt;

&lt;p&gt;Without further ado, let's dive in!!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#downloading-xcode"&gt;
  &lt;/a&gt;
  Downloading Xcode
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-xcode"&gt;
  &lt;/a&gt;
  Why Xcode?
&lt;/h4&gt;

&lt;p&gt;Xcode is Apple's IDE (integrated development environment) for building Mac, iOS, watchOS, and tvOS apps. It supports the Objective-C and Swift languages. We need it for React Native in order to use its build tools, which allows us to compile the native code necessary to build React Native apps.&lt;/p&gt;

&lt;p&gt;Xcode also comes with an iOS "simulator", which lets us run iOS apps on our Mac to see how they'll look and function.&lt;/p&gt;

&lt;p&gt;Lastly, while we generally recommend running our React Native app from the terminal (more information on this in the last chapter of this blog!) we can also load up our React Native app in Xcode and run it from there, which lets us use all of the powerful features that Xcode has to offer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://apps.apple.com/us/app/xcode/id497799835?mt=12"&gt;Download Xcode from the Mac App Store&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dsrro10d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mzbg6oxuarxohe8n33p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dsrro10d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mzbg6oxuarxohe8n33p.png" alt="Screenshot 2021-09-15 at 12.38.02 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#downloading-android-studio"&gt;
  &lt;/a&gt;
  Downloading Android Studio
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-android-studio"&gt;
  &lt;/a&gt;
  Why Android Studio?
&lt;/h4&gt;

&lt;p&gt;Android Studio is Google's IDE (integrated development environment) for Android app development. It'll allow us to compile Android apps, set up Android emulators, and also run our React Native project in Android Studio to take advantage of its powerful features if we want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.android.com/studio"&gt;Download Android Studio&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-homebrew"&gt;
  &lt;/a&gt;
  Installing Homebrew
&lt;/h3&gt;

&lt;p&gt;One of the most important tools on macOS is called Homebrew. Homebrew is billed as "the missing package manager" for macOS and is widely used by developers. We will need it to install some of the dependencies for React Native. Plus, it's just super handy for installing other things you may need!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can check if you already have Homebrew installed by running brew --version in your Terminal.&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-node"&gt;
  &lt;/a&gt;
  Installing Node
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-node"&gt;
  &lt;/a&gt;
  Why Node?
&lt;/h4&gt;

&lt;p&gt;Node is a JavaScript "runtime environment" that lets you run JavaScript from your Terminal (and other places outside of a browser). React Native uses Node to run JavaScript scripts on the command line for things like testing, packaging, and more.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can check if you already have Node installed by running node --version in your Terminal.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-watchman"&gt;
  &lt;/a&gt;
  Installing Watchman
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-watchman"&gt;
  &lt;/a&gt;
  Why Watchman?
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://facebook.github.io/watchman/"&gt;Watchman&lt;/a&gt; is a tool by Facebook for watching for changes to files in your project. This allows for recompiling, rebundling, and reloading every time you save changes to your source files. While React Native can work without Watchman, it's highly recommended to install it for performance and productivity reasons.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can check if you already have Watchman installed by running watchman --version in your Terminal.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-yarn"&gt;
  &lt;/a&gt;
  Installing Yarn
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-yarn"&gt;
  &lt;/a&gt;
  Why Yarn?
&lt;/h4&gt;

&lt;p&gt;[Yarn is a command-line tool created by Facebook that (mostly) replaces NPM. At Infinite Red, we use it for almost everything. It lets us install NPM dependencies and run scripts -- and it's very fast!&lt;/p&gt;

&lt;p&gt;Yarn is optional for React Native projects, but I recommend it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can check if you already have Yarn installed by running yarn --version in your Terminal.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-mac-for-ios-react-native-development"&gt;
  &lt;/a&gt;
  Setting up your Mac for iOS React Native Development
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#installing-xcode"&gt;
  &lt;/a&gt;
  Installing Xcode
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Note: even if you've already installed Xcode, you should follow the steps here to ensure it's properly configured.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This part requires some patience, but you can do it!&lt;/p&gt;

&lt;p&gt;In the first page of this section, you should have started downloading Xcode. Hopefully it's finished by now! If so, click the Open button in the App Store or launch it from your Applications folder.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QL-FzLBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz29igryfyfc0z2kdahx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QL-FzLBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz29igryfyfc0z2kdahx.png" alt="Screenshot 2021-09-16 at 12.07.50 PM"&gt;&lt;/a&gt;&lt;br&gt;
First, you'll need to agree to their Xcode and Apple SDKs Agreement. I'm sure you'll read them carefully. ;-)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--giVMB_ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrookzrowpx3et5e6hek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--giVMB_ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrookzrowpx3et5e6hek.png" alt="Screenshot 2021-09-16 at 12.08.16 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Xcode will then install some components before opening.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Ye2Mq-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5j4jl32vyb9xwpmvi4u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Ye2Mq-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5j4jl32vyb9xwpmvi4u.png" alt="Screenshot 2021-09-16 at 12.08.54 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we need to install the &lt;strong&gt;Command Line Tools&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Hit ⌘+, (command + comma) to open Xcode Preferences or open it from the Xcode menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bd88XZyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk4z0yymitip9he5ci94.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bd88XZyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk4z0yymitip9he5ci94.png" alt="Screenshot 2021-09-16 at 12.09.43 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to the &lt;strong&gt;Locations&lt;/strong&gt; tab and select the item in the Command Line Tools drop-down.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGLWIvVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro2gbxd3h0n9iqk8kh5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGLWIvVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro2gbxd3h0n9iqk8kh5a.png" alt="Screenshot 2021-09-16 at 12.10.27 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It'll ask for your password and then install the Command Line Tools.&lt;/p&gt;

&lt;p&gt;Next let's install an iOS simulator. In the same Preferences dialog, choose the &lt;strong&gt;Components&lt;/strong&gt; tab and click the down arrow next to the simulator you want to use. I chose the latest (iOS 13.2). It will ask for your password again - maybe even twice. I bet you're getting good at typing that in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDyl-oWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkqdvoo1fj2546du6ou5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDyl-oWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkqdvoo1fj2546du6ou5.png" alt="Screenshot 2021-09-16 at 12.12.03 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will take a while, so feel free to move on to the next section. When it's done, just close the Preferences dialog box. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-cocoapods"&gt;
  &lt;/a&gt;
  Installing CocoaPods
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-cocoapods"&gt;
  &lt;/a&gt;
  Why CocoaPods?
&lt;/h4&gt;

&lt;p&gt;In order to bring in native third-party packages written in Objective-C or Swift, called CocoaPods, you'll want the CocoaPods CLI. This is sort of like NPM or Yarn, but for native iOS code. It's written in Ruby and requires Ruby (which is installed by default in macOS, although new versions of macOS are reportedly going to remove it!)&lt;/p&gt;

&lt;p&gt;*You can check if you already have CocoaPods installed by running pod --version in your Terminal. *&lt;/p&gt;

&lt;p&gt;You can install CocoaPods in a variety of different ways, but I recommend using Homebrew. If you have a Ruby version manager like RVM or rbenv, you can also &lt;a href="https://guides.cocoapods.org/using/getting-started.html"&gt;install using Rubygems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's use &lt;strong&gt;Homebrew:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;brew install cocoapods&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When it's done, try pod --version to see if it installed correctly.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: it may warn you to add export LANG=en_US.UTF-8 to your .zshrc. Check the pod --version output carefully and follow the directions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once the iOS Simulator is done downloading (from the previous section), you should be ready to go! You can either move on to setting up Android now, or skip to the section Creating your first &lt;strong&gt;React Native app&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-mac-for-android-react-native-development"&gt;
  &lt;/a&gt;
  Setting up your Mac for Android React Native Development
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#installing-the-java-development-kit-jdk"&gt;
  &lt;/a&gt;
  Installing the Java Development Kit (JDK)
&lt;/h3&gt;

&lt;p&gt;You'll need the JDK (Java Development Kit) to compile Android apps. The JDK includes an interpreter for Java, the JRE (Java Runtime Environment), a compiler, and many other things critical for building Android apps (and Java apps in general).&lt;/p&gt;

&lt;p&gt;In our case, we're actually going to be using &lt;a href="https://openjdk.java.net/"&gt;OpenJDK&lt;/a&gt;, which is a free and open source version of the JDK.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-jdk"&gt;
  &lt;/a&gt;
  Installing JDK
&lt;/h3&gt;

&lt;p&gt;With Homebrew, this is pretty straightforward.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;brew tap AdoptOpenJDK/openjdk&lt;/code&gt;&lt;br&gt;
&lt;code&gt;brew install --cask adoptopenjdk8&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(Note with older versions of Homebrew, you may have to run brew cask install adoptopenjdk8 instead.)&lt;br&gt;
You may need to enter your password again.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-android-studio"&gt;
  &lt;/a&gt;
  Installing Android Studio
&lt;/h3&gt;

&lt;p&gt;Hopefully Android Studio has finished downloading! Let's install it.&lt;/p&gt;

&lt;p&gt;First, find and run the DMG file that you downloaded. Drag the icon into the Applications folder.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jzzFmIMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kk98i2ubsmmfqgrbzm6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jzzFmIMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kk98i2ubsmmfqgrbzm6g.png" alt="Screenshot 2021-09-16 at 12.24.16 PM"&gt;&lt;/a&gt;&lt;br&gt;
Now launch it from Spotlight or your Applications folder.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mv-AIZyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f43whv96d312nygh0k48.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mv-AIZyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f43whv96d312nygh0k48.png" alt="Screenshot 2021-09-16 at 12.24.49 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will open a setup wizard. Just click Next, and then choose "Custom" in the Install Type screen.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--02wagucm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlxjpptm59buyr93zkc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--02wagucm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlxjpptm59buyr93zkc2.png" alt="Screenshot 2021-09-16 at 12.25.58 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might see a screen that looks like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--96pG-rlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8k6eypfnf1bcjm0l1d0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--96pG-rlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8k6eypfnf1bcjm0l1d0h.png" alt="Screenshot 2021-09-16 at 12.26.47 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just click Next to keep the default path.&lt;/p&gt;

&lt;p&gt;Choose dark or light theme, and then in the SDK Components Setup screen, make sure Android SDK Platform, API 29, Performance, and Android Virtual Device are all checked.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5tnYplxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zgct6prgcqus3ydn73wf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tnYplxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zgct6prgcqus3ydn73wf.png" alt="Screenshot 2021-09-16 at 12.27.43 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click Next. In the next screen (Emulator Settings) leave everything at the default and click Finish to start downloading and installing the SDK components.&lt;/p&gt;

&lt;p&gt;Note that you may see a message saying System Extension Blocked, If so, click &lt;strong&gt;Open Security Preferences&lt;/strong&gt;, then click on the lock icon, enter your password, and click &lt;strong&gt;Allow&lt;/strong&gt;.     &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRW9Kti6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rycwhc3orkyuizqhe39q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRW9Kti6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rycwhc3orkyuizqhe39q.png" alt="Screenshot 2021-09-16 at 12.29.27 PM"&gt;&lt;/a&gt;&lt;br&gt;
Once it's done, we have more work to do. Let's go to Do that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-android-sdk"&gt;
  &lt;/a&gt;
  Installing Android SDK
&lt;/h3&gt;

&lt;p&gt;Not to be confused with the JDK (Java Development Kit), the Android SDK (Android Software Development Kit) contains Android-specific tools, such as Android libraries, emulators, a debugger, and more.&lt;/p&gt;

&lt;p&gt;Open up Android Studio and click the Configure button on the bottom right of the welcome screen and choose SDK Manager.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: If you don't see the welcome screen, you can also go to the Android Studio Preferences, Appearance &amp;amp; Behavior, System Settings, Android SDK, and then find SDK Manager there.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R36s-F-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg40hmettqwz30gn4sqg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R36s-F-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg40hmettqwz30gn4sqg.png" alt="Screenshot 2021-09-16 at 12.32.34 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VW-qRi0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7eyr3ctfxnxbc42vip6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VW-qRi0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7eyr3ctfxnxbc42vip6.png" alt="Screenshot 2021-09-16 at 12.35.50 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the next steps very carefully and check your work. It can cause some head-scratching problems if you don't!&lt;/p&gt;

&lt;p&gt;Click the &lt;strong&gt;Show Package Details&lt;/strong&gt; checkbox in the SDK Platforms tab (you should already be on it). &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OR1BB5BC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5x2fswgjr8ww1wadp1wt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OR1BB5BC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5x2fswgjr8ww1wadp1wt.png" alt="Screenshot 2021-09-16 at 12.38.08 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find &lt;strong&gt;Android 9 (Pie)&lt;/strong&gt; and open it up, and then check these entries:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Android SDK Platform 28&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Intel x86 Atom_64 System Image&lt;/strong&gt; (note: do NOT select the similarly named "Intel x86 Atom System Image" by mistake) &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vmtNhx2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ef5fxdwzyc0d4a2bcs12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vmtNhx2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ef5fxdwzyc0d4a2bcs12.png" alt="Screenshot 2021-09-16 at 12.40.01 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now go to the SDK Tools tab. Click "Show Package Details" in this tab too.&lt;/p&gt;

&lt;p&gt;Find "Android SDK Build-Tools" and check "28.0.3" (exactly that version). On mine, 29.0.2 is also checked, don't uncheck it (or whichever one is checked on yours) unless you intend to make your own Android Virtual Device which uses SDK 28. For the majority of you, just leave both 28.0.3 and whatever was already checked, and move along. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bWII973b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8y99ifeoowmrhu2eq2ko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWII973b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8y99ifeoowmrhu2eq2ko.png" alt="Screenshot 2021-09-16 at 12.41.43 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Apply" and "OK" on the &lt;strong&gt;Confirm Change dialog&lt;/strong&gt;. It should look something like this .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qfICtJ77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r27vmyqutiajg4ghpwt0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qfICtJ77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r27vmyqutiajg4ghpwt0.png" alt="Screenshot 2021-09-16 at 12.42.29 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Accept" on each of the items in the License Agreement dialog and then "Next". When it's done, click "Finish".&lt;/p&gt;

&lt;p&gt;Wow! Let's move on to the next step. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-the-androidhome-environment-variable"&gt;
  &lt;/a&gt;
  Configuring the ANDROID_HOME environment variable
&lt;/h3&gt;

&lt;p&gt;When you run &lt;strong&gt;npx react-native run-android&lt;/strong&gt;, React Native needs to know where all of the Android dependencies live. This environment variable (ANDROID_HOME) is where it'll look.&lt;/p&gt;

&lt;p&gt;We also need to set up our path to allow our system to know where the emulator command and other commands live.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#configuring-androidhome-and-path"&gt;
  &lt;/a&gt;
  Configuring ANDROID_HOME and PATH
&lt;/h4&gt;

&lt;p&gt;Note that you could have various shells set up, such as zsh or bash, and will need to properly choose which one to add these lines to.&lt;/p&gt;

&lt;p&gt;Run this command to figure out what shell you are in:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo $0&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If it says &lt;strong&gt;-zsh&lt;/strong&gt;, you're in zsh. If it says &lt;strong&gt;-bash&lt;/strong&gt; you're in bash. If it's something else, hopefully you know what you're doing.&lt;/p&gt;

&lt;p&gt;Some notes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;For &lt;strong&gt;bash&lt;/strong&gt;, you want to put these lines in ~/.bash_profile (probably) or &lt;strong&gt;~/.bashrc&lt;/strong&gt; (possibly).&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;zsh&lt;/strong&gt;, you want to put these lines in &lt;strong&gt;~/.zshrc&lt;/strong&gt; (probably).&lt;/li&gt;
&lt;li&gt;It's possible you may need to create one of these files if they don't already exist. Just run touch &lt;strong&gt;~/.&lt;/strong&gt; to create the proper file.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that if you customized where the Android SDK is, you'll need to change the first line. If you didn't customize anything, it's probably correct as-is.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;export ANDROID_HOME=$HOME/Library/Android/sdk&lt;br&gt;
export PATH=$PATH:$ANDROID_HOME/emulator&lt;br&gt;
export PATH=$PATH:$ANDROID_HOME/tools&lt;br&gt;
export PATH=$PATH:$ANDROID_HOME/tools/bin&lt;br&gt;
export PATH=$PATH:$ANDROID_HOME/platform-tools&lt;br&gt;
&lt;/code&gt;&lt;br&gt;
Let's say you are on zsh and want to add these to &lt;strong&gt;~/.zshrc&lt;/strong&gt;. You can append them by running this command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;echo "export ANDROID_HOME=\$HOME/Library/Android/sdk&lt;br&gt;
export PATH=\$PATH:\$ANDROID_HOME/emulator&lt;br&gt;
export PATH=\$PATH:\$ANDROID_HOME/tools&lt;br&gt;
export PATH=\$PATH:\$ANDROID_HOME/tools/bin&lt;br&gt;
export PATH=\$PATH:\$ANDROID_HOME/platform-tools" &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you're done, you can test it in a new Terminal window with this line:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo $ANDROID_HOME&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It should output something like /Users//Library/Android/sdk. You can also check your path:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo $PATH&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and see if it's correct. Note (again) that you do need to open a new terminal window (with command+N or command+T) to load the new environment variables -- editing the file won't change them for the current terminal session.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-new-react-native-project"&gt;
  &lt;/a&gt;
  Creating a new React Native project
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We're finally ready to spin up a new React Native project!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Open your Terminal back up and change directories to your code folder where you keep your projects.&lt;/p&gt;

&lt;p&gt;Now, let's run the React Native CLI via NPM's built-in "npx" command.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npx react-native init ReactNativeApp&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This will start the process of building a brand-new React Native app. (Note that it may install a bunch of dependencies and spit out a bunch of warnings -- you can mostly ignore those.)&lt;/p&gt;

&lt;p&gt;Once it's created, change directories into the new app and start it up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd ReactNativeApp&lt;br&gt;
for iOS:&lt;br&gt;
npx react-native run-ios&lt;br&gt;
for Android:&lt;br&gt;
npx react-native run-android&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If all goes well, you should see the iOS simulator or Android emulator start up with your new app!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--95koWq9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fszvjfyz1e421txdxaai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--95koWq9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fszvjfyz1e421txdxaai.png" alt="Screenshot 2021-09-16 at 12.56.06 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CONGRATULATIONS!!! You're all set up.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Use Prometheus and Grafana to Visualize ISP Packet Loss</title>
      <author>Eric Yi</author>
      <pubDate>Thu, 16 Sep 2021 07:28:06 +0000</pubDate>
      <link>https://dev.to/ericyi/use-prometheus-and-grafana-to-visualize-isp-packet-loss-2eh</link>
      <guid>https://dev.to/ericyi/use-prometheus-and-grafana-to-visualize-isp-packet-loss-2eh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;Since people started working from home, poor video/voice call connections have become a very annoying problem. &lt;/p&gt;

&lt;p&gt;However, it's hard for people to diagnose what is the root cause. People start blaming their ISPs, and I feel bad for them. In fact, there are a number of reasons that can cause poor video call connections, but if you can tell us with great confidence that my problem is not from your end.&lt;/p&gt;

&lt;p&gt;You should probably start monitoring your ISP  packet loss.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Grafana(You can register a free &lt;a href="https://grafana.com/auth/sign-in?plcmt=top-nav&amp;amp;cta=myaccount"&gt;Grafana Cloud account&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Prometheus (You can &lt;a href="https://prometheus.io/docs/prometheus/latest/installation/"&gt;install it&lt;/a&gt; on your Raspberry Pi or NAS)&lt;/li&gt;
&lt;li&gt;Open Source Router OS (OpenWRT, ClearOS, Asuswrt-Merlin etc)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#process"&gt;
  &lt;/a&gt;
  Process
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#set-up-pingexporter"&gt;
  &lt;/a&gt;
  Set Up ping_exporter
&lt;/h3&gt;

&lt;p&gt;SSH in to your router &amp;gt; Download ping_exporter&lt;/p&gt;

&lt;p&gt;You can check which version you need &lt;a href="https://github.com/czerwonk/ping_exporter/releases"&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget https://github.com/czerwonk/ping_exporter/releases#:~:text&lt;span class="o"&gt;=&lt;/span&gt;ping_exporter_0.4.7_linux_arm64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Extract the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;-xf&lt;/span&gt; ping_exporter_&lt;span class="k"&gt;*&lt;/span&gt;.tar.gz ping_exporter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move to &lt;code&gt;/usr/local/bin&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv &lt;/span&gt;ping_exporter /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Choose the way you like to get the ISP's DNS servers on your router.&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a &lt;code&gt;ping_exporter.yaml&lt;/code&gt; file under &lt;code&gt;/etc/ping_exporter/&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;targets:
  - &amp;lt;Your ISP&lt;span class="s1"&gt;'s DNS servers&amp;gt;

ping:
  interval: 2s
  timeout: 3s
  history-size: 42
  payload-size: 120
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a &lt;code&gt;ping_exporter.service&lt;/code&gt; file under &lt;code&gt;/etc/systemd/system/&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;Unit]
&lt;span class="nv"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ping_exporter

&lt;span class="o"&gt;[&lt;/span&gt;Service]
&lt;span class="nv"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root
&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/ping_exporter &lt;span class="nt"&gt;--config&lt;/span&gt;.path /etc/ping_exporter/ping_exporter.yaml
&lt;span class="nv"&gt;Restart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;always

&lt;span class="o"&gt;[&lt;/span&gt;Install]
&lt;span class="nv"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Reload the service files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start your &lt;code&gt;ping_exporter.service&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl start ping_exporter.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check the status of your &lt;code&gt;ping_exporter.service&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl status ping_exporter.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To enable your &lt;code&gt;ping_exporter.service&lt;/code&gt; on every reboot:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;ping_exporter.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get the results for testing via cURL:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://localhost:9427/metrics
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-a-target-to-prometheus"&gt;
  &lt;/a&gt;
  Add a target to Prometheus
&lt;/h3&gt;

&lt;p&gt;In your Prometheus configuration file, add the target in the &lt;code&gt;static_config&lt;/code&gt; section :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;- targets: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;Your router's ip/dns address&amp;gt;:9427"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reload your Prometheus’ configuration.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-grafana-panel"&gt;
  &lt;/a&gt;
  Create a Grafana Panel
&lt;/h3&gt;

&lt;p&gt;Add a new Panel in your home network's dashboard, we are going to use the &lt;code&gt;ping_loss_percent&lt;/code&gt; metric.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ping_loss_percent&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;Your router's ip/dns address&amp;gt;:9427"&lt;/span&gt;,target&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;Your ISP's DNS servers&amp;gt;"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epqFwpjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y7h6c4o2lgt3mjmkzwd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epqFwpjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y7h6c4o2lgt3mjmkzwd.png" alt="Packet Loss Pannel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⚠️  Please note for voice and video calls, any packet loss below 0.05 could be considered acceptable.&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>If you run a Github organisation you must do this now! </title>
      <author>Aniket Pal</author>
      <pubDate>Thu, 16 Sep 2021 06:48:09 +0000</pubDate>
      <link>https://dev.to/aniket762/if-you-run-a-github-organisation-you-must-do-this-now-3nc1</link>
      <guid>https://dev.to/aniket762/if-you-run-a-github-organisation-you-must-do-this-now-3nc1</guid>
      <description>&lt;p&gt;Looking to have your Github organisation standout? Wanting it to match all the beautiful and intricate design work that your organisation has developed? Don't want to add contributing guidelines and code of conduct to every project? Don't worry this blog got you covered! &lt;/p&gt;

&lt;p&gt;In this blog, I will walk you through how to update your GitHub organisation, add more personalisation, and help your organisation stand out from the crowd. Incase you don't know markdown refer &lt;a href="https://www.markdownguide.org/cheat-sheet/"&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-special-repository"&gt;
  &lt;/a&gt;
  Creating the special repository 😎
&lt;/h2&gt;

&lt;p&gt;In order to customize your Github organisation first let's initialise repo in which we will work! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---HNbrNdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jutx0luot24fhs0l669.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---HNbrNdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jutx0luot24fhs0l669.png" alt="Github organisation readme repository name"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a new repository with the name &lt;strong&gt;.github&lt;/strong&gt; and make sure to keep the repo public and initialise with a readme.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--teijr7tf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3b807j2hg91m2902fxdy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--teijr7tf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3b807j2hg91m2902fxdy.png" alt="Github organisation readme public init"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-profile"&gt;
  &lt;/a&gt;
  Creating the profile 🔥
&lt;/h2&gt;

&lt;p&gt;Create a directory with the name profile and initialise with a markdown file named README.md or click on the green button in the repo which says &lt;strong&gt;Add profile README&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c4hIRfX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stqtb3od44i8w4h4dyho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c4hIRfX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stqtb3od44i8w4h4dyho.png" alt="Github organisation readme profile init"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the file has been created, you will see that GitHub knows you have accessed this special repo and presents you with the option to edit the file. Go ahead and click on this. You will get directed over to the file editor that is built into GitHub. Incase you have never created a readme make sure to visit &lt;a href="https://www.makeareadme.com/"&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dpep0FhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ct0puz3ro1rny3dti40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dpep0FhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ct0puz3ro1rny3dti40.png" alt="Github organisation profile readme init"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-add-coc-and-cg"&gt;
  &lt;/a&gt;
  Let's add COC and CG 🚀
&lt;/h2&gt;

&lt;p&gt;In general all the projects in a particular organisation follows the same code of conduct, contributing guidelines and security rules and it becomes difficult to add it in every project. Now you can add it in the &lt;strong&gt;.github&lt;/strong&gt; repo and make sure every contributor reads before sending a pull request! Incase you are confused on how it should look finally refer to &lt;a href="https://github.com/github/.github"&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vGkWPc-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdl7rbssytjk47qdbzb6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vGkWPc-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdl7rbssytjk47qdbzb6.png" alt="Screenshot 2021-09-16 at 11.57.13 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion 🥷🏻
&lt;/h2&gt;

&lt;p&gt;Making sure that your org stand out from the rest is crucial. Take advantage of the ability to personalise your organisation to showcase your community guidelines.&lt;/p&gt;

&lt;p&gt;Have you already added the readme? I’d love to take a look at it! Feel free to share it with &lt;a href="https://www.linkedin.com/in/aniket-pal/"&gt;me&lt;/a&gt;. Would also love to collaborate on &lt;a href="https://github.com/Aniket762"&gt;github&lt;/a&gt; &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>portfolio</category>
      <category>github</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Hello World! in 5 Different Programming languages</title>
      <author>Nibodh Daware</author>
      <pubDate>Thu, 16 Sep 2021 06:46:32 +0000</pubDate>
      <link>https://dev.to/nibodhdaware/hello-world-in-5-different-programming-languages-46ip</link>
      <guid>https://dev.to/nibodhdaware/hello-world-in-5-different-programming-languages-46ip</guid>
      <description>&lt;p&gt;Greetings!! from this blog post, I am starting a new series called the "Basics of Code 5 Different Languages" in this series as the title says we are going to study all the beginner concepts that are necessary to start with code ex. &lt;strong&gt;variables, functions, loops, conditionals&lt;/strong&gt; in 5 different programming languages namely: Python 🐍, Java ☕️, C/C++ (Both are basically the same), C# and Javascript (yes, Java and Javascript are different)&lt;/p&gt;

&lt;p&gt;In this post, we will be learning the cliché "printing the Hello World to the console" in the above-mentioned programming languages&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python 🐍
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Python, O Python Near and Dear to my Heart ❤️ - Nibodh Daware&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Python was actually the first programming language that introduced me to this amazing world of programming&lt;br&gt;
Python among all is the most understandable and easy syntax&lt;br&gt;
Create a hello.py file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print("Hello World!")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it no semicolons no weird things like importing a print statement from classes inside of classes just plain simple print Hello World. This is the simplicity that python really is famous for.&lt;/p&gt;

&lt;p&gt;Now let's move on to the weird parts,&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#java-%EF%B8%8F"&gt;
  &lt;/a&gt;
  Java ☕️
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;BEAN LANGUAGE IS NEXT...🥔🥔🥔&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I haven't programmed in Java for a while last time I did I remember I was trying to make Minecraft mods but never got into my head&lt;br&gt;
I have heard a lot of praise from people who choose Java as their first language that it has basically changed their lives so I don't know.&lt;br&gt;
Create a hello.java file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!"); 
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Even though it has a long syntax but I love the fact that it was made with Object-Oriented Programming concepts in mind, and I think it is so good for so many people like the fact that it has so many better features as compared to the previous generation la#nguages like C++.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C#\
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Took me a long time to learn how to escape the # in markdown.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you may have guessed I have tried C#\ too as I am way too &lt;em&gt;predictable&lt;/em&gt; it was in theory my first language as nearly everybody wanted to get into programming because of games and what better way to make games than &lt;strong&gt;Unity and C#&lt;/strong&gt;&lt;br&gt;
Create a hello.cs file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;namespace HelloWorld
{
    class Hello {         
        static void Main(string[] args)
        {
            System.Console.WriteLine("Hello World!");
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looks really similar to Java in my opinion.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cc"&gt;
  &lt;/a&gt;
  C/C++
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Origin of all!!!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I can't much about it except I have to learn it in college and I don't think it will stop haunting my back anytime soon. I'm kidding I like C.&lt;/p&gt;

&lt;p&gt;This is Hello World in C:&lt;br&gt;
Create a hello.c file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

void main(){
      printf("Hello World");
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and this in C++&lt;br&gt;
Create a hello.cpp file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main(){
    cout &amp;lt;&amp;lt; "Hello World" &amp;lt;&amp;lt; endl;
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are also other ways but this is how I like to write it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-%EF%B8%8F"&gt;
  &lt;/a&gt;
  Javascript ☕️📄
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Best for beginners&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is also one of my favourite languages out of all the languages I touched the past year. If I start I am not going to stop talking so let's write the Hello World&lt;br&gt;
Create a hello.js file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log("Hello World");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By now you may know I like simple and easy languages. Here the console doesn't mean by the native command line but the browser inspect window.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hRJ5vrIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631761627918/TSFBhHOG9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hRJ5vrIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631761627918/TSFBhHOG9.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Choosing your first language is really important as it will predict your experience in this journey.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;All the languages that I have introduced you in this post you can't go wrong with them. I may recommend you to find out more about what these languages can do and then choose one of them.&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
      <category>cpp</category>
      <category>csharp</category>
    </item>
    <item>
      <title>My journey to ACM-ICPC Regionals ASIA! What did I learn?</title>
      <author>Rahul raikwar</author>
      <pubDate>Thu, 16 Sep 2021 06:45:50 +0000</pubDate>
      <link>https://dev.to/rahulraikwar00/my-journey-to-acm-icpc-regionals-asia-what-did-i-learn-1p5g</link>
      <guid>https://dev.to/rahulraikwar00/my-journey-to-acm-icpc-regionals-asia-what-did-i-learn-1p5g</guid>
      <description>&lt;h1&gt;
  &lt;a href="#icpc"&gt;
  &lt;/a&gt;
  ICPC:
&lt;/h1&gt;

&lt;p&gt;The International Collegiate Programming Contest is a global competition designed to draw attention to a skill which has a profound effect on the modern world: programming. Teams of students representing their respective universities, compete by using teamwork and problem solving abilities to solve as many computer-related problems as possible within a given time limit. The most noteworthy teams from regional competitions come together every year for this contest to determine once and for all which school is the best at coding! It's really just another big programming competition. Except it's not, because ICPC is more than that. It's the World Cup of Algorithmic Programming Contests&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#about-regionals"&gt;
  &lt;/a&gt;
  About Regionals
&lt;/h1&gt;

&lt;p&gt;The ICPC regionals are organized by the local universities of different regions spread across the globe. The winners of these regional rounds of the contest get to represent the country in the ICPC World Finals. The Asia Regionals in India will be held at 4 sites viz. Amritapuri, Kolkata, Gwalior, and Kharagpu.&lt;br&gt;
last year for the first time a team from our college(SISTEC) qualified for ICPC regionals. before that there was an online qualifying round in which only 700 teams are selected in INDIA and we were fortunate to make to the top 700 teams. then&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#end-of-our-journey"&gt;
  &lt;/a&gt;
  End of our Journey
&lt;/h1&gt;

&lt;p&gt;Although we didn't manage to take the prize from the very topmost institutions, we beat plenty of other great IITs and NITs. Some of these are…IIT allahabaad, IIT guwahati, IIT jodhpur, IIT ranchi and many more,&lt;br&gt;
We hope you enjoyed our article about the ICPC.&lt;br&gt;
Thank you for reading, we are always excited when one of our posts is able to provide useful information on a topic like this!&lt;/p&gt;

</description>
      <category>icpc</category>
      <category>cp</category>
      <category>programming</category>
    </item>
    <item>
      <title>Playing videos in React Native</title>
      <author>Chirag Bhaiji</author>
      <pubDate>Thu, 16 Sep 2021 06:42:32 +0000</pubDate>
      <link>https://dev.to/chirag0966/playing-videos-in-react-native-2g72</link>
      <guid>https://dev.to/chirag0966/playing-videos-in-react-native-2g72</guid>
      <description>&lt;p&gt;Here is my first blog and I really had a delightful experience writing it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bigbinary.com/blog/playing-videos-in-react-native-using-cloudinary"&gt;https://www.bigbinary.com/blog/playing-videos-in-react-native-using-cloudinary&lt;/a&gt;&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>cloudinary</category>
      <category>videos</category>
    </item>
    <item>
      <title>Compress Images with Python(16 lines) and TinyPNG API</title>
      <author>Koji (he/him)</author>
      <pubDate>Thu, 16 Sep 2021 06:42:11 +0000</pubDate>
      <link>https://dev.to/kojikanao/compress-images-with-python-16-lines-and-tinypng-api-3l69</link>
      <guid>https://dev.to/kojikanao/compress-images-with-python-16-lines-and-tinypng-api-3l69</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-tinypng"&gt;
  &lt;/a&gt;
  What is TinyPNG?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tinypng.com/"&gt;https://tinypng.com/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TinyPNG uses smart lossy compression techniques to reduce the file size of your WEBP, JPEG and PNG files. By selectively decreasing the number of colors in the image, fewer bytes are required to store the data. The effect is nearly invisible but it makes a very large difference in file size!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;TinyPNG has web app that allows us to compress images(up to 20 images &amp;amp; max 5MB each). That is useful but we sometimes need to compress more than 20 images.&lt;/p&gt;

&lt;p&gt;The great thing is that TinyPNG has API and packages for multiple languages.&lt;/p&gt;

&lt;p&gt;TinyPNG Developer API&lt;br&gt;
&lt;a href="https://tinypng.com/developers"&gt;https://tinypng.com/developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post, I will show you how to use the API with python.&lt;/p&gt;

&lt;p&gt;Step1. GET API Key&lt;br&gt;
Step2. Install pip package&lt;br&gt;
Step3. Write a script (less 20 lines)&lt;br&gt;
Step4. Run the script&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step1-get-api-key"&gt;
  &lt;/a&gt;
  Step1. GET API Key
&lt;/h3&gt;

&lt;p&gt;Go to &lt;a href="https://tinypng.com/developers"&gt;https://tinypng.com/developers&lt;/a&gt; and type your name and email address. You will get the API key easily.&lt;/p&gt;

&lt;p&gt;API is free up to 500 requests.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K12WoUVK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/59v3zkbkmfa5jt274kej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K12WoUVK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/59v3zkbkmfa5jt274kej.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step2-install-pip-package"&gt;
  &lt;/a&gt;
  Step2. Install pip package
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;tinify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#step3-write-a-script"&gt;
  &lt;/a&gt;
  Step3. Write a script
&lt;/h3&gt;

&lt;p&gt;Adding try except is good 😜&lt;/p&gt;

&lt;p&gt;ref &lt;a href="https://tinypng.com/developers/reference/python"&gt;https://tinypng.com/developers/reference/python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The script is super simple. create a &lt;code&gt;src&lt;/code&gt; for source images and &lt;code&gt;dist&lt;/code&gt; for optimized images.&lt;br&gt;
Get file names by &lt;code&gt;glob&lt;/code&gt; and pass image files to TinyPng API with &lt;code&gt;tinify.from_file&lt;/code&gt; method.&lt;br&gt;
You can pass an image file as buffer or image url instead of an image file path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unoptimized.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'rb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;source_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;result_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tinify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source_data&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;to_buffer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tinify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://tinypng.com/images/panda-happy.png"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"optimized.png"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;app.py&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tinify&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;
&lt;span class="n"&gt;tinify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"your_api_key"&lt;/span&gt;
&lt;span class="n"&gt;source_dir_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'src'&lt;/span&gt;
&lt;span class="n"&gt;destination_dir_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'dist'&lt;/span&gt;
&lt;span class="c1"&gt;# get all files names in directory
&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source_dir_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'/*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# compress all files
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'compressing '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tinify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source_dir_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;destination_dir_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;".png"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'compressed all images'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#step4-run-the-script"&gt;
  &lt;/a&gt;
  Step4. Run the script
&lt;/h3&gt;

&lt;p&gt;Before running the script, we need 2 small things.&lt;br&gt;
First, create two directories(src and dist). If you don't like these dir names, you can change whatever you like.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;src dist
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, moving image files you want to compress to &lt;code&gt;src&lt;/code&gt; dir.&lt;/p&gt;

&lt;p&gt;Almost there!&lt;/p&gt;

&lt;p&gt;Finally, run the script!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python app.py
compressing src/MoreToggles.css.png
compressing src/CSSscrolshadows.jpg
compressing src/CSStoTailwindCSS.png
compressing src/broider.png
compressing src/Tailblocks.jpg
compressing src/calcolor.jpg
compressing src/screenshot-rocks.png
compressing src/SmoothShadow.png
compressing src/Neumorphism.io.png
compressed all images
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;repo&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/koji"&gt;
        koji
      &lt;/a&gt; / &lt;a href="https://github.com/koji/tinypng_image_compress"&gt;
        tinypng_image_compress
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      image compress script with tinypng api
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
tinypng_image_compress&lt;/h1&gt;
&lt;p&gt;image compress script with tinypng api&lt;/p&gt;
&lt;h4&gt;
how to use&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://dev.to/kojikanao/compress-images-with-python-16-lines-and-tinypng-api-3l69" rel="nofollow"&gt;https://dev.to/kojikanao/compress-images-with-python-16-lines-and-tinypng-api-3l69&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ git clone https://github.com/koji/tinypng_image_compress.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; tinypng_image_compress

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; move images to `src` folder&lt;/span&gt;

$ python app.py&lt;/pre&gt;

&lt;/div&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
 image compress&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 image resize&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/koji/tinypng_image_compress"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Generally, you can reduce 20-50% of an image file size.&lt;/p&gt;

&lt;p&gt;If you like to use more functionality easily, I recommend you to check this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/acronis-design/how-to-optimize-images-by-using-macos-terminal-tinypng-cli-dd0bb8e67708"&gt;https://medium.com/acronis-design/how-to-optimize-images-by-using-macos-terminal-tinypng-cli-dd0bb8e67708&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>image</category>
      <category>api</category>
    </item>
    <item>
      <title>10+ Projects You Can Do to Become a Frontend Master</title>
      <author>Suhail Kakar</author>
      <pubDate>Thu, 16 Sep 2021 06:41:49 +0000</pubDate>
      <link>https://dev.to/suhailkakar/10-projects-you-can-do-to-become-a-frontend-master-58gb</link>
      <guid>https://dev.to/suhailkakar/10-projects-you-can-do-to-become-a-frontend-master-58gb</guid>
      <description>&lt;p&gt;Learning to code can be challenging and perplexing, especially if you don't know where to begin. The greatest approach to improve your programming abilities is to use them to create coding projects.&lt;/p&gt;

&lt;p&gt;Here are the finest programming projects to boost your confidence and make you a better developer, whether you're a novice or returning to coding. I've also mentioned the technologies that can be used in each project, but feel free to use any of your favorite programming languages or frameworks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calculator-app"&gt;
  &lt;/a&gt;
  Calculator app
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xp2dsN68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631766409611/zDDhlwDmB.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xp2dsN68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631766409611/zDDhlwDmB.jpeg" alt="9b5739e81a03a43ec8a66e32330e7418.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The program that we all use on a daily basis is the calculator. The calculator is a project that is both simple and practical.  As a reference, you can  &lt;a href="https://calc-vue.netlify.app/"&gt;view&lt;/a&gt;  Adeola Adeoti's calculator app, the source code of his app can be found  &lt;a href="https://github.com/adeolaadeoti/vue-calculator"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;Creating a calculator app can help you learn, how to build reusable components, how to use props, and how to handle states.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Vue JS&lt;/li&gt;
&lt;li&gt;Tailwind CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Beautiful UI&lt;/li&gt;
&lt;li&gt;Dark mode / Light mode&lt;/li&gt;
&lt;li&gt;Responsive&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#blog-website"&gt;
  &lt;/a&gt;
  Blog Website
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eck1ZTia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631767024505/xnscZY4N1.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eck1ZTia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631767024505/xnscZY4N1.webp" alt="94c69057ddafcb65b9dd2ebe20432fcc.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building your own blog doesn't only improve your coding skill, but your online presence too. If you have a blog and share content regularly, you can get a lot of visitors which can increase your online presence.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;After creating a blog from scratch, you will learn about styled-components, routing in Next JS, implementing MDX, and using dynamic routes&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Next.js&lt;/li&gt;
&lt;li&gt;React.js&lt;/li&gt;
&lt;li&gt;Styled Components&lt;/li&gt;
&lt;li&gt;MDX&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Dark mode / Light mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weather-app"&gt;
  &lt;/a&gt;
  Weather App
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3iTltyZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631767905150/7h_89EbiO.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3iTltyZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631767905150/7h_89EbiO.webp" alt="7a9e37c5a0ef32046c9b77ae15a7c26a.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Having a fully-featured weather app in your portfolio can help you a lot to get clients. And if you deploy this app, not only you but many people may get benefit from it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;After creating a weather app, you will learn about fetching data from API, posting data to API, mapping data, and creating dynamic pages. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;React.js&lt;/li&gt;
&lt;li&gt;Tailwind CSS&lt;/li&gt;
&lt;li&gt;Axios&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;4 days Forecast&lt;/li&gt;
&lt;li&gt;Beautiful UI&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#spotify-20"&gt;
  &lt;/a&gt;
  Spotify 2.0
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XRaokHb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631768275203/y5kU1PDHD.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRaokHb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631768275203/y5kU1PDHD.webp" alt="70a6f1884a2b60e14c97abfcb1e63c79.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can create Spotify 2.0, your own Spotify version. You can add as many features as you can and after completing, you can deploy it online :)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;Creating your own Spotify version can help you learn, how to fetch data from API, how to handle dynamic routes, how to handle authentication and etc.&lt;/p&gt;

&lt;p&gt;#### Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next JS&lt;/li&gt;
&lt;li&gt;Tailwind CSS&lt;/li&gt;
&lt;li&gt;Axios&lt;/li&gt;
&lt;li&gt;Auth0&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Light mode / Dark mode&lt;/li&gt;
&lt;li&gt;Beautiful UI&lt;/li&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;Use profile &lt;/li&gt;
&lt;li&gt;Showing lyrics of a song&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#movies-app"&gt;
  &lt;/a&gt;
  Movies App
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jVJmuxaE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631768567058/3vg66ckXl.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jVJmuxaE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631768567058/3vg66ckXl.webp" alt="258c6e7561df582a8d8a530c15d71484.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can create a movies app from scratch where you need to show movie details, posters, trailers, and cast. I believe that you will enjoy building this project. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;Creating a movie app can help you learn, how to create a reusable component, how to fetch data from api, how to create dynamic pages. &lt;/p&gt;

&lt;p&gt;#### Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vue JS&lt;/li&gt;
&lt;li&gt;Styled Component&lt;/li&gt;
&lt;li&gt;Axios&lt;/li&gt;
&lt;li&gt;TMDB API&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Light mode / Dark mode&lt;/li&gt;
&lt;li&gt;Beautiful UI&lt;/li&gt;
&lt;li&gt;Show movie ratings&lt;/li&gt;
&lt;li&gt;Show movie casts/trailer&lt;/li&gt;
&lt;li&gt;Show movies based on genre&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#youtube-ui-clone"&gt;
  &lt;/a&gt;
  Youtube UI Clone
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1kWaSAwh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631769189095/9fWtBeFaJ.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1kWaSAwh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631769189095/9fWtBeFaJ.webp" alt="b3cf7b44134b5655b564c3479fdc097a.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn about grids, flexbox, and handling states then it would be better if you clone the YouTube UI. You don't need to 100% do the same as youtube, you have the freedom to redesign and create your own version of YouTube.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;Creating a YouTube UI clone can help you learn about grids, flexbox, handling states, and responsiveness.  &lt;/p&gt;

&lt;p&gt;#### Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Svelte&lt;/li&gt;
&lt;li&gt;SMUI (Svelte Material UI)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Beautiful UI&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chat-app"&gt;
  &lt;/a&gt;
  Chat App
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--655JTMF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631769728482/sQkTZ2QeB.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--655JTMF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631769728482/sQkTZ2QeB.webp" alt="4cce7108c717d7aa1a20ce1b066de91c.webp"&gt;&lt;/a&gt;&lt;br&gt;
If you want to learn about Firebase, Firestore, Real-time database and etc. This project is for you, having this project in your portfolio can make your portfolio strong. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;Creating a Chat app can help you learn about firebase, authentication,  firebase real-time DB and etc.&lt;/p&gt;

&lt;p&gt;#### Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React.js&lt;/li&gt;
&lt;li&gt;Firebase&lt;/li&gt;
&lt;li&gt;Material UI&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Real time chat&lt;/li&gt;
&lt;li&gt;Dark mode / Light mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#saas-landing-page"&gt;
  &lt;/a&gt;
  SaaS landing page
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wGgK4MES--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631769866005/ymBVVbo02.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wGgK4MES--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631769866005/ymBVVbo02.webp" alt="7d856a8f801c6e83dd49cfc0e2cb940c.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creating a landing page can help you a lot in order to improve your frontend skills. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;Developing a landing page for Saas can help you improve your skills in grids, flexboxes, and responsiveness. &lt;/p&gt;

&lt;p&gt;#### Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vue&lt;/li&gt;
&lt;li&gt;Styled Component&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Beautiful UI&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#task-management-app"&gt;
  &lt;/a&gt;
  Task management app
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I6BHAxWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631770315665/aSHXwycJk.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I6BHAxWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631770315665/aSHXwycJk.webp" alt="8f5bd0078206801ffbf185d841d23e7c.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This project could take some time, but it is worth it. You can create a task management website that contains just todos, calendar, and some docs&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;Creating a task management app can help you learn about states, markdown, local storage, and authentication. &lt;/p&gt;

&lt;p&gt;#### Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next.js&lt;/li&gt;
&lt;li&gt;Tailwind CSS&lt;/li&gt;
&lt;li&gt;Auth0&lt;/li&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Adding Todos&lt;/li&gt;
&lt;li&gt;Creating Wikis ( using markdown )&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ecommerce-website-ui"&gt;
  &lt;/a&gt;
  eCommerce website UI
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bv0SVu4_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631770786483/dSXuomgU_.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bv0SVu4_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631770786483/dSXuomgU_.webp" alt="626d69985676cb9ecc04f7eb90ff12dd.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another awesome project that you can do to improve your frontend skill is developing the UI of an Ecommerce website. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;After developing the UI of an eCommerce website you will learn about, reuseable components, managing states, and using props&lt;/p&gt;

&lt;p&gt;#### Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Svelte&lt;/li&gt;
&lt;li&gt;Sveltestrap&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Beautiful UI&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#admin-dashboard"&gt;
  &lt;/a&gt;
  Admin Dashboard
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vwpz5IVa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631773063000/ne_cQ70yr.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vwpz5IVa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631773063000/ne_cQ70yr.webp" alt="89cac265146947d63bb5c18c5e1dfaed.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last one on our list is the admin dashboard. Admin dashboard or Admin panel is a place where the admin/owner of the website manages his/her website. Creating the UI of an Admin Panel can help you to improve your frontend skills&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What you will learn
&lt;/h4&gt;

&lt;p&gt;After developing an admin dashboard, you will learn about creating many types of components, reuse them in the proper place and making a page responsive. &lt;/p&gt;

&lt;p&gt;#### Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React.js&lt;/li&gt;
&lt;li&gt;SCSS&lt;/li&gt;
&lt;li&gt;React Bootstrap&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Responsive &lt;/li&gt;
&lt;li&gt;Beautiful UI&lt;/li&gt;
&lt;li&gt;Light mode / Dark mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you found this article useful, if you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Would you like to buy me a coffee, You can do it &lt;a href="https://www.buymeacoffee.com/suhailkakar"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>vue</category>
      <category>programming</category>
    </item>
    <item>
      <title>Membuat Penjadwalan Otomatis (Cron Job Scheduler) menggunakan Golang</title>
      <author>Benita Clarissa</author>
      <pubDate>Thu, 16 Sep 2021 06:02:06 +0000</pubDate>
      <link>https://dev.to/benitaclarissa/membuat-penjadwalan-otomatis-cron-job-scheduler-menggunakan-golang-obg</link>
      <guid>https://dev.to/benitaclarissa/membuat-penjadwalan-otomatis-cron-job-scheduler-menggunakan-golang-obg</guid>
      <description>&lt;p&gt;Terkadang dalam sebuah aplikasi, ada tugas-tugas yang perlu dijalankan otomatis sesuai jadwal yang telah ditentukan. Contohnya, ketika kita menerima email otomatis yang berisi ucapan tahun baru, notifikasi agenda setiap hari kerja jam 8 pagi, tagihan setiap bulan tanggal 10 jam 9 pagi, cek pesanan baru setiap 10 menit, dan lainnya. Artikel ini akan membahas bagaimana cara membuat penjadwalan otomatis menggunakan golang.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bagaimana-penjadwalan-otomatis-dilakukan-pada-server"&gt;
  &lt;/a&gt;
  Bagaimana penjadwalan otomatis dilakukan pada server?
&lt;/h2&gt;

&lt;p&gt;Pada artikel ini, penjadwalan otomatis akan dilakukan pada server berbasis Linux dengan menggunakan &lt;strong&gt;cron&lt;/strong&gt;. Cron adalah sebuah command Linux untuk menjalankan script secara terjadwal. &lt;/p&gt;

&lt;p&gt;Di bawah ini adalah cara mengatur penjadwalan pada crontab.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* * * * * perintah yang akan dieksekusi
– – – – –
| | | | |
| | | | +—– day of week (0 – 7) (Sunday=0)
| | | +——- month (1 – 12)
| | +——— day of month (1 – 31)
| +———– hour (0 – 23)
+————- min (0 – 59)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Contoh:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Email otomatis untuk ucapan tahun baru jam 12 malam&lt;br&gt;
&lt;code&gt;0 0 1 1 * /home/user/automail-new-year.sh&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Email otomatis tagihan setiap bulan tanggal 10 jam 7 pagi&lt;br&gt;
&lt;code&gt;0 07 10 * * /home/user/automail-billing.sh&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Notifikasi agenda setiap hari kerja (Senin-Jumat) jam 9 pagi&lt;br&gt;
&lt;code&gt;0 09 * * 1-5 /home/user/notification-daily-agenda.sh&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Notifikasi pesanan baru setiap 10 menit sekali&lt;br&gt;
&lt;code&gt;*/10 * * * * /home/user/notification-new-order.sh&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#ya-saya-sudah-memahami-cron-bagaimana-cara-implementasi-pada-go"&gt;
  &lt;/a&gt;
  Ya, saya sudah memahami cron. Bagaimana cara implementasi pada Go?
&lt;/h2&gt;

&lt;p&gt;Setelah melakukan pencarian terhadap beberapa package go terkait scheduler, saya memilih package &lt;a href="https://github.com/robfig/cron"&gt;&lt;code&gt;robfig/cron&lt;/code&gt;&lt;/a&gt; v3. Cara implementasinya cukup sederhana. Mari kita lihat bersama.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
   "fmt"
   "os"
   "os/signal"
   "syscall"
   "time"

   cron "github.com/robfig/cron/v3"
)

func main() {
   // set scheduler berdasarkan zona waktu sesuai kebutuhan
   jakartaTime, _ := time.LoadLocation("Asia/Jakarta") 
   scheduler := cron.New(cron.WithLocation(jakartaTime))

   // stop scheduler tepat sebelum fungsi berakhir
   defer scheduler.Stop()

   // set task yang akan dijalankan scheduler
   // gunakan crontab string untuk mengatur jadwal
   scheduler.AddFunc("0 0 1 1 *", func() { SendAutomail("New Year") })
   scheduler.AddFunc("0 07 10 * *", SendMonthlyBillingAutomail)
   scheduler.AddFunc("0 09 * * 1-5", NotifyDailyAgenda)
   scheduler.AddFunc("*/10 * * * *", NotifyNewOrder)

   // start scheduler
   go scheduler.Start()

   // trap SIGINT untuk trigger shutdown.
   sig := make(chan os.Signal, 1)
   signal.Notify(sig, syscall.SIGINT, syscall.SIGTERM)
   &amp;lt;-sig
}

func SendAutomail(automailType string) {
    // ... instruksi untuk mengirim automail berdasarkan automailType
    fmt.Printf(time.Now().Format("2006-01-02 15:04:05") + " SendAutomail " + automailType + " telah dijalankan.\n")
}

func SendMonthlyBillingAutomail(){
    // ... instruksi untuk mengirim automail berisi tagihan
    fmt.Printf(time.Now().Format("2006-01-02 15:04:05") + " SendMonthlyBillingAutomail telah dijalankan.\n")
}

func NotifyDailyAgenda(){
    // ... instruksi untuk mengirim notifikasi agenda harian
    fmt.Printf(time.Now().Format("2006-01-02 15:04:05") + " NotifyDailyAgenda telah dijalankan.\n")
}

func NotifyNewOrder(){
    // ... instruksi untuk mengecek pesanan baru, lalu mengirimkan notifikasi
    fmt.Printf(time.Now().Format("2006-01-02 15:04:05") + " NotifyNewOrder telah dijalankan.\n")
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setelah itu, kita jalankan function Main.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lalu, amati hasilnya.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2021-09-16 09:00:00 NotifyDailyAgenda telah dijalankan.
2021-09-16 12:30:00 NotifyNewOrder telah dijalankan.
2021-09-16 12:40:00 NotifyNewOrder telah dijalankan.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Penjadwalan otomatis dengan golang sudah berhasil dibuat.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selanjutnya"&gt;
  &lt;/a&gt;
  Selanjutnya
&lt;/h2&gt;

&lt;p&gt;Berikut beberapa link yang dapat dijadikan referensi.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dokumentasi lengkap package &lt;a href="https://github.com/robfig/cron"&gt;robfig/cron&lt;/a&gt; dapat dilihat dari link tersebut.&lt;/li&gt;
&lt;li&gt;Gunakan &lt;a href="https://crontab.guru/"&gt;crontab.guru&lt;/a&gt; untuk mengatur crontab dan memastikan waktu penjadwalan sudah sesuai dengan kebutuhan.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>cron</category>
    </item>
    <item>
      <title>5 Most Unused and Ununderstood HTML Tags🚀</title>
      <author>Shubham Jadhav</author>
      <pubDate>Thu, 16 Sep 2021 05:48:52 +0000</pubDate>
      <link>https://dev.to/dev_shubham/5-most-unused-and-ununderstood-html-tags-3lj3</link>
      <guid>https://dev.to/dev_shubham/5-most-unused-and-ununderstood-html-tags-3lj3</guid>
      <description>&lt;p&gt;Here are 5 most rare used html tags which we learn today. While they might familiar but still quite useful in some situations. &lt;br&gt;
   So let's start learning most 5 html unused tags... &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;abbr tag&lt;/p&gt;

&lt;p&gt;abbr tag only used for define abbreviated words. You need to define a title inside a tag and when a user is hover on it the full definition appears below. &lt;br&gt;
 abbr tag is rarely used, but the benefits are many for screen readers, search engine and spellchecker. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rW8KByXG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3jrmwd62ie73iafrp97.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rW8KByXG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3jrmwd62ie73iafrp97.jpg" alt="abbr tag"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2.fieldset tag&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; Fieldset is a nifty little attribute that you can add to your forms to logically group form elements. Once applied the fieldset tag draws a box around the elements within the fieldset. 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--heq9JGWV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0jdlfk1e47z584jz450.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--heq9JGWV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0jdlfk1e47z584jz450.jpg" alt="fieldset tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.ins tag&lt;/p&gt;

&lt;p&gt;If you want underline without using css, then use ins tag. This tag add underline of the text which is inside the ins tag. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ywJMI5nu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vgl2dbc7j20sfasiy66.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ywJMI5nu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vgl2dbc7j20sfasiy66.jpg" alt="ins tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.del tag&lt;/p&gt;

&lt;p&gt;This tag is as similar to ins tag but the difference is ins tag used to underline words and del tag is shown what's been taken out with a strikthrough.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kOUR7mxY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osz1sa50evjcl8qott56.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOUR7mxY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osz1sa50evjcl8qott56.jpg" alt="del tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.cite tag &lt;/p&gt;

&lt;p&gt;cite tag is used to define text inside other elements for a reference. Typically the browser will render the text inside of the cite tag in italics. The cite tag is really useful for citing bibliographic and other site references.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xpnctzfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vvxx14ewvjgk1hzs1dch.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xpnctzfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vvxx14ewvjgk1hzs1dch.jpg" alt="cite tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🙏 Thanks for reading... &lt;br&gt;
👉 Stay tuned with us for more &lt;br&gt;
   interesting article.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Learn how to come up with article ideas and stay consistent</title>
      <author>Chris Bongers</author>
      <pubDate>Thu, 16 Sep 2021 05:47:18 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/learn-how-to-come-up-with-article-ideas-and-stay-consistent-47h9</link>
      <guid>https://dev.to/dailydevtips1/learn-how-to-come-up-with-article-ideas-and-stay-consistent-47h9</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;consistent&lt;br&gt;
/kənˈsɪst(ə)nt/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Acting or done in the same way over time, especially to be fair or accurate.&lt;/p&gt;

&lt;p&gt;This will be a personal, opinionated article, as this will be my vision on consistency and coming up with ideas.&lt;/p&gt;

&lt;p&gt;But let's sketch the picture first about what it means to be consistent as it's sometimes misunderstood.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-being-consistent-mean"&gt;
  &lt;/a&gt;
  What does being consistent mean
&lt;/h2&gt;

&lt;p&gt;Being consistent is about two main pillars for me.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;li&gt;Effort&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6cMgyxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631368428102/0vmbc0zZ-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6cMgyxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631368428102/0vmbc0zZ-.png" alt="Pillars of consistency"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With these main pillars, we also get some side support as in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tooling&lt;/li&gt;
&lt;li&gt;Planning&lt;/li&gt;
&lt;li&gt;Goals&lt;/li&gt;
&lt;li&gt;Celebrating&lt;/li&gt;
&lt;li&gt;Inspiration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's set two golden standards:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Writing every {time} period = consistent&lt;/li&gt;
&lt;li&gt;Putting in the same effort in every article = consistent&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you get to uphold these two standards, it means you are consistent.&lt;/p&gt;

&lt;p&gt;However, many people will fail for various reasons, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Life gets in the way&lt;/li&gt;
&lt;li&gt;The schedule is not working and stressing you out&lt;/li&gt;
&lt;li&gt;Content doesn't get traction&lt;/li&gt;
&lt;li&gt;Effort drops over time&lt;/li&gt;
&lt;li&gt;Writer's block&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are some reasons why people have problems being consistent in writing.&lt;br&gt;
And with this article, I hope to guide you to becoming consistent bloggers because everyone can be one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-consistency-is-so-important"&gt;
  &lt;/a&gt;
  Why consistency is so important
&lt;/h2&gt;

&lt;p&gt;Before we dive into how you can become that consistent blogger, it's important to look at why we should care about being consistent.&lt;/p&gt;

&lt;p&gt;And there are various reasons why it's essential to be consistent as a blogger.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Readers love fresh content&lt;/li&gt;
&lt;li&gt;Readers love to know when to expect content&lt;/li&gt;
&lt;li&gt;You build an authority&lt;/li&gt;
&lt;li&gt;More keywords over time&lt;/li&gt;
&lt;li&gt;It's a good habit to build&lt;/li&gt;
&lt;li&gt;Consistent blogging can de-stress you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are more reasons we can think of, but these are the most important ones to me.&lt;/p&gt;

&lt;p&gt;Especially looking at how consistency can de-stress one is the primary win for me.&lt;br&gt;
It can get very stressed out, and having a fixed schedule works wonders.&lt;br&gt;
You might think having the stress of a time frame is limiting and stressful, but it's the other way around for me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#becoming-the-consistent-writer"&gt;
  &lt;/a&gt;
  Becoming the consistent writer
&lt;/h2&gt;

&lt;p&gt;For you to become a consistent writer, we need to work on various aspects of blogging:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set a realistic time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Setting a realistic time is super hard. As you can tell, my time is "every day". That is quite a crazy commitment for most people, and it doesn't need to be just that.&lt;/p&gt;

&lt;p&gt;Then what might be a good time? It all depends on what time frame you can truly commit to. It might be one of the examples below:&lt;/p&gt;

&lt;p&gt;Every Monday&lt;br&gt;
Every first Friday of the month&lt;br&gt;
Once every two weeks&lt;br&gt;
On the 12th of each month&lt;/p&gt;

&lt;p&gt;As you can see, I would strongly suggest picking a max of a month. This is not a hard standard, as if you want to do it every three months, it's also fine.&lt;br&gt;
However, under a month is a time frame readers can relate to and get used to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lg3_d7ET--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631367707006/JryhOrGQC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lg3_d7ET--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631367707006/JryhOrGQC.png" alt="Motivate yourself"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Motivate your effort&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it comes to sticking to the committed time frame, motivation plays a huge role. Motivation is not always there, and that is when discipline may have to take over.&lt;br&gt;
There will be times where you might think the previous blog didn't get many views. Better stop now.&lt;br&gt;
And that is precisely the time to go on! You might be on the verge of a hit article.&lt;/p&gt;

&lt;p&gt;Discipline is all about mentally putting yourself over the no-feeling, and it works towards creating a habit, resulting in consistency.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plan ahead&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After we determine the time you are sticking to, but these days in your calendar. You can even go ahead and set reminders so you know when to work on them.&lt;br&gt;
You can also plan the titles of these articles, as this will de-stress you once they come closer.&lt;/p&gt;

&lt;p&gt;Planning gives you a good overview and feeling of being in control, which you are!&lt;/p&gt;

&lt;p&gt;An excellent way to go about this is to plan 6/7 articles, so if you set every month as a goal, plan six months.&lt;br&gt;
If you set every week, pick six weeks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set realistic goals&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With everything in life, setting goals is an excellent way to overcome obstacles. Goals can help motivate you and give you a reason to celebrate.&lt;/p&gt;

&lt;p&gt;Goals also hold you accountable and reminds you of what you are working towards.&lt;/p&gt;

&lt;p&gt;The important thing with goals is that you need to write them down! It's not optional. Write down your goals.&lt;br&gt;
This truly works in visualizing them and helping you achieve them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hs0BuVUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631367924542/ummYMO9T-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hs0BuVUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631367924542/ummYMO9T-.png" alt="Celebrate all the wins"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Celebrate every win&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Celebrating is fun! And you deserve to celebrate.&lt;br&gt;
Wondering why? You have put in a lot of work to be the consistent writer you are now.&lt;br&gt;
Ss a win, you can celebrate even the most minor wins&lt;/p&gt;

&lt;p&gt;Of course, we'll celebrate all our goals, but even small wins must be celebrated!&lt;/p&gt;

&lt;p&gt;Think about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;100 readers&lt;/li&gt;
&lt;li&gt;25 newsletters subscribers&lt;/li&gt;
&lt;li&gt;Article got reposted or shared&lt;/li&gt;
&lt;li&gt;And so on&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Celebrating them can be a variety of events. Perhaps you want to post about it on social media, your writer group, or on your blog itself! And if your anything like me, you surprise yourself with a sweet cupcake 🧁.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inspire yourself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I find that being an inspiration to myself is one of the most powerful things to unlock.&lt;/p&gt;

&lt;p&gt;Bear with me, as this might sound a bit hippie-dippy at first.&lt;/p&gt;

&lt;p&gt;To inspire others, one has to inspire themselves. And you do this more often than you think.&lt;/p&gt;

&lt;p&gt;As developers, we write fantastic code and often are surprised by the cool thing we just created by typing code on a computer! That right there is an inspiration. You can take that feeling and write about your achievement.&lt;/p&gt;

&lt;p&gt;Another way to go about this is to distance yourself from all distractions and just read some articles or listen to music.&lt;br&gt;
My brain goes wild in sessions like that, sparking inspiration after inspiration on what would make a superb article.&lt;/p&gt;

&lt;p&gt;And that brings me to the last point:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4xGQ3MX6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631367893225/Ea33wCBTW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4xGQ3MX6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631367893225/Ea33wCBTW.png" alt="Notion blog tooling"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use tooling!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yes, tooling. I'm a big fan of Notion. I keep a massive list with article ideas.&lt;br&gt;
Sure, some might never actually be written, but it sometimes inspires me to write something related to the idea.&lt;/p&gt;

&lt;p&gt;When you use tooling to help you note down ideas, you might even get sparked with other ideas, and don't hold on to write them as they come!&lt;/p&gt;

&lt;p&gt;But tooling is bigger than that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Join a writers group&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bloggingfordevs.com/"&gt;Join a blogging community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Join a writing discord group&lt;/li&gt;
&lt;li&gt;AI writing helpers&lt;/li&gt;
&lt;li&gt;Mindmap tools&lt;/li&gt;
&lt;li&gt;Attending events&lt;/li&gt;
&lt;li&gt;Mixing in discussion on social media&lt;/li&gt;
&lt;li&gt;And many more!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main key being, don't limit yourself to all the tooling and help you can get.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coming-up-with-content-ideas"&gt;
  &lt;/a&gt;
  Coming up with content ideas
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MY3AtWue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631367999554/Ir-h_PAYy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MY3AtWue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631367999554/Ir-h_PAYy.png" alt="Coming up with ideas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You are probably thinking, well, good story Chris, just come up with a content idea every day...&lt;/p&gt;

&lt;p&gt;And you're right, it's not easy, but once you unlock the skill of inspiring yourself, you'll see it's easy to come up with an immersive list of ideas!&lt;/p&gt;

&lt;p&gt;If you are, however, struggling with unlocking that. (And no shame in that! It took me about six months to get in the flow) you might want to try some of these techniques and ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write about your struggles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What did you struggle with in your last project? How did you solve that? Perfect points to write an article about as I'm 100% sure someone else has the same problem.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write about your knowledge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You finally mastered {X}, superb, and congrats! Now take that knowledge and write it down in your words so others can learn from you.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write about experiences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Did you have an interview recently?&lt;br&gt;
Or perhaps you had a fabulous PR experience. It's well worth writing about these experiences as they are super valuable content.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What's the last thing you googled?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use this a lot because if I need to google something, I don't know the answer from the top of my head.&lt;br&gt;
It might even be super simple, but writing an article is a good way of remembering it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Something keeps you up at night?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You have these issues at work that keep you awake, your brain is doing overtime, and even if you didn't solve it, it might be a good idea to write about the struggles you have.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What tools do you use?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Writing about tooling is opinionated but can be a lifesaver for others as they might not even be aware of particular tooling!&lt;br&gt;
I, for one, got many of the tools I use through opinionated articles of other bloggers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The last event you attended&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It might be difficult with the current event state, but writing about events and what you learned, liked, or disliked is always a good topic!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Books you have read&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What's the last book you read? Why not summarize what you thought about it and why people should or shouldn't also read it?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Advice for you, but five years ago&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a cool one. Pick a topic, and think about what you would tell your five years younger self about that.&lt;br&gt;
It might be about how to use Git or how to manage something.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inspirational thoughts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This might be for a specific type of person, as it can be hard to write down inspirational thoughts, but this article might have inspired you to change something in your blogging routine.&lt;br&gt;
Well, why not share that so others can learn from it?&lt;/p&gt;

&lt;p&gt;With this article, I hope I gave you some insights on being consistent and how you can generate an endless supply of article ideas!&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://drive.google.com/file/d/1JGHRxSPpOFzuNYE4v5geCTk1v8Sv4mGN/view?usp=sharing"&gt;find the presentation here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Tired of agonizing errors caused by typos? Let's fix that!</title>
      <author>Siddharth</author>
      <pubDate>Thu, 16 Sep 2021 05:45:10 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/tired-of-agonizing-errors-caused-by-typos-let-s-fix-that-2dd4</link>
      <guid>https://dev.to/siddharthshyniben/tired-of-agonizing-errors-caused-by-typos-let-s-fix-that-2dd4</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Please don't use this in real-world code!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How many times has this happened?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;kes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; ReferenceError&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I just &lt;strong&gt;hate&lt;/strong&gt; it when my code is perfect except for one single typo in the middle of nowhere!&lt;/p&gt;

&lt;p&gt;Don't you just wish the code just &lt;strong&gt;&lt;em&gt;guessed&lt;/em&gt;&lt;/strong&gt; what the correct reference was and &lt;strong&gt;&lt;em&gt;just worked&lt;/em&gt;&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Well, fear not! &lt;strong&gt;I have made that possible, using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"&gt;Proxies&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And since you don't wanna know how it works, and just wanna &lt;strong&gt;&lt;em&gt;make it work&lt;/em&gt;&lt;/strong&gt;, here's the source:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;levenshtein&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;indicator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// deletion&lt;/span&gt;
                &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// insertion&lt;/span&gt;
                &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;indicator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// substitution&lt;/span&gt;
            &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;closestProp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lowest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;Infinity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;previous&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;levenshtein&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;distance&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;lowest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;lowest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;previous&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;autofix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;closestProp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOwnPropertyNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;That's it!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;autofix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; ['foo']&lt;/span&gt;
&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;kys&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; ['foo']&lt;/span&gt;
&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; ['foo']&lt;/span&gt;
&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="nb"&gt;Math&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;autofix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 3.141592653589793&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PIE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 3.141592653589793&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Don't believe me? Open the DevTools and try it out!&lt;/p&gt;

&lt;p&gt;Or here's a REPL:&lt;/p&gt;


&lt;div class="runkit-element"&gt;
  &lt;code&gt;
    
  &lt;/code&gt;
  &lt;code&gt;
    
const levenshtein = (str1 = '', str2 = '') =&amp;gt; {
    const track = Array(str2.length + 1).fill(null).map(() =&amp;gt; Array(str1.length + 1).fill(null));
for (let i = 0; i &amp;lt;= str1.length; i += 1) track[0][i] = i;
for (let j = 0; j &amp;lt;= str2.length; j += 1) track[j][0] = j;

for (let j = 1; j &amp;lt;= str2.length; j += 1) {
    for (let i = 1; i &amp;lt;= str1.length; i += 1) {
        const indicator = str1[i - 1] === str2[j - 1] ? 0 : 1;
            track[j][i] = Math.min(
            track[j][i - 1] + 1, // deletion
            track[j - 1][i] + 1, // insertion
            track[j - 1][i - 1] + indicator, // substitution
        );
    }
}
return track[str2.length][str1.length];

};

const closestProp = (choices, name) =&amp;gt; {
    let lowest = Infinity;
return choices.reduce((previous, current) =&amp;gt; {
    const distance = levenshtein(current, name);

    if (distance &amp;lt; lowest) {
        lowest = distance;
        return current;
    }

    return previous;
}, '');

};

const autofix = obj =&amp;gt; new Proxy(obj, {
    get(obj, prop) {
        if (!(prop in obj)) prop = closestProp(Object.getOwnPropertyNames(obj), prop);
        return obj[prop];
    },
});

Math = autofix(Math);
Math.PIE;


  &lt;/code&gt;
&lt;/div&gt;
The formatting &lt;em&gt;may&lt;/em&gt; look weird





&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;This auto fixer is really simple. It does two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;We listen to property references&lt;/strong&gt; using a &lt;code&gt;Proxy&lt;/code&gt; and &lt;strong&gt;send them to a function.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;When we get a reference, and the property does not exist on the object,&lt;/strong&gt; we try to &lt;strong&gt;find the closest matching property&lt;/strong&gt; and return that.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Step #1 is easy, we can use a &lt;code&gt;Proxy&lt;/code&gt; to do so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;autofix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;closestProp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOwnPropertyNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to define the &lt;code&gt;closestProp&lt;/code&gt; function, which is also pretty simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;closestProp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lowest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;Infinity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;previous&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="c1"&gt;// find difference between words?&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;distance&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;lowest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;lowest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;previous&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last part of the puzzle is to find the distance between the numbers. One way of finding the difference is by finding the &lt;a href="https://en.wikipedia.org/wiki/Levenshtein_distance"&gt;Levenshtein distance&lt;/a&gt;, which is the number of single-character edits we need to make to change one word to another. &lt;/p&gt;

&lt;p&gt;This is an implementation of the Levenshtein distance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;levenshtein&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;indicator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// deletion&lt;/span&gt;
                &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// insertion&lt;/span&gt;
                &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;indicator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// substitution&lt;/span&gt;
            &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can add this to the &lt;code&gt;closestProp&lt;/code&gt; function and we're done!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-a-library"&gt;
  &lt;/a&gt;
  It's a library!
&lt;/h2&gt;

&lt;p&gt;I polished up the script and uploaded it to The Deno registry &lt;a href="https://deno.land/x/typosquatter"&gt;here&lt;/a&gt;. It's called &lt;code&gt;typosquatter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now we can do stuff like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;typosquatter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://deno.land/x/typosquatter/mod.ts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;typosquatter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lol&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}}});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ba&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substrng&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 'ol'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's &lt;strong&gt;recursive&lt;/strong&gt; and also &lt;strong&gt;works for primitives!!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;Once again, please don't use this in real life. Actually, &lt;em&gt;maybe you can&lt;/em&gt; because it's very little overhead for solving millions of problems.&lt;/p&gt;

&lt;p&gt;Do you think you would use this IRL? If you do, leave a comment!&lt;/p&gt;

&lt;p&gt;And if you like the post, give this a ❤️ or a 🦄, or &lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fdev.to%2Fsiddharthshyniben%2Ftired-of-agonizing-errors-caused-by-typos-let-s-fix-that-2dd4&amp;amp;text=Are%20you%20tired%20of%20typos%20destroying%20your%20perfect%20code%3F%20Now%20you%20can%20fix%20that%2C%20with%20just%201%20function!%20Learn%20more%20in%20this%20post%20by%20%40SiddharthShyn"&gt;share this on Twitter and spread the love!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
