<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Next.Js Series #7 - Deploying the Web Page to Vercel for FREE (from Github repo)</title>
      <author>Dylan Oh</author>
      <pubDate>Sat, 30 Oct 2021 14:46:06 +0000</pubDate>
      <link>https://dev.to/ohdylan/nextjs-series-7-deploying-the-web-page-to-vercel-for-free-from-github-repo-1mob</link>
      <guid>https://dev.to/ohdylan/nextjs-series-7-deploying-the-web-page-to-vercel-for-free-from-github-repo-1mob</guid>
      <description>&lt;p&gt;We are going to demonstrate how easy it is to deploy your static web app to Vercel for free in the last article of the series. &lt;/p&gt;

&lt;p&gt;First, commit and push the project to a Github repo if you haven't. Go to &lt;a href="https://vercel.com/login"&gt;https://vercel.com/login&lt;/a&gt;, create a Vercel account with Github account authorization. You will now see an empty dashboard (if you have not deployed anything to Vercel before).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fwcelj-X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nz8wm81quw8p2iesqvl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fwcelj-X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nz8wm81quw8p2iesqvl.png" alt="Image description" width="880" height="523"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Create a New Project".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-V6azqL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ftbfdi93em917wcw4v5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-V6azqL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ftbfdi93em917wcw4v5.png" alt="Image description" width="880" height="619"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose a Github account, and Github window will pop up for you to select the project that you want to deploy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6RZPdOay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecp3zsvjzruelwggyu0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6RZPdOay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecp3zsvjzruelwggyu0w.png" alt="Image description" width="880" height="649"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Type and select the repo that you commited your project to install Vercel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qubHIz8z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1yg7ro7vykd8dhfoyi8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qubHIz8z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1yg7ro7vykd8dhfoyi8.png" alt="Image description" width="880" height="618"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will now see that the Github repo is ready to be imported. Click on "Import".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_hyPtAXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df20guu5hbl3pphzn0ni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_hyPtAXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df20guu5hbl3pphzn0ni.png" alt="Image description" width="880" height="605"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can skip all the customisable configurations for our demo project. Click on "Deploy".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U42wpRda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iri6q1b6gseyfuze1e9s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U42wpRda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iri6q1b6gseyfuze1e9s.png" alt="Image description" width="880" height="636"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may see that the app is being deployed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CWyA5T0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fddh7dirrlsnx6xl3ix2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CWyA5T0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fddh7dirrlsnx6xl3ix2.png" alt="Image description" width="880" height="530"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you see this page, it means the deployment has been successful. Click on "Go to Dashboard".&lt;/p&gt;

&lt;p&gt;Select the app that we have deployed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UnD-eJA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erxtj6b1wjbpxyqsnvpc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UnD-eJA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erxtj6b1wjbpxyqsnvpc.png" alt="Image description" width="880" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that now the app is live and running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3WsMXdB0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xtyohx7rweab81marzh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3WsMXdB0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xtyohx7rweab81marzh.png" alt="Image description" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may test on different routes to see if they are working properly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I1DEf2cX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2koyt8lgu30q82a4jd9e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I1DEf2cX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2koyt8lgu30q82a4jd9e.png" alt="Image description" width="880" height="561"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I might consider to add one more article on the topic for Next.Js Analytics by Vercel to this series. It has a great dashboard and tracking some metrics that we mentioned in series #6.&lt;/p&gt;

&lt;p&gt;Thanks for following through this short series of brief introduction to Next.Js. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I shall continue to post more Web Dev, UIUX related articles (and more non-technical articles) in the future. Stay tune!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>deployment</category>
      <category>vercel</category>
      <category>webdev</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>7 Nice API for your projects !</title>
      <author>CodeOz</author>
      <pubDate>Sat, 30 Oct 2021 14:41:31 +0000</pubDate>
      <link>https://dev.to/codeoz/7-nice-api-for-your-projects--3ap</link>
      <guid>https://dev.to/codeoz/7-nice-api-for-your-projects--3ap</guid>
      <description>&lt;p&gt;&lt;strong&gt;API&lt;/strong&gt; is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other!&lt;/p&gt;

&lt;p&gt;Today I will share with you some nice API to use for your projects!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#movie-database-imdb"&gt;
  &lt;/a&gt;
  üçø Movie database (IMDB)
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://developers.themoviedb.org/3/getting-started/introduction"&gt;https://developers.themoviedb.org/3/getting-started/introduction&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you need informations about movies, series, etc... You can use IMDB API that is very easy to use!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#food-recipes-spoonacular"&gt;
  &lt;/a&gt;
  ü•Ñ Food Recipes (spoonacular)
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://spoonacular.com/food-api/docs"&gt;https://spoonacular.com/food-api/docs&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Are you looking for recipes? Soonacular is a great api that will provide you some recipes for your next project!! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rick-amp-morty-database"&gt;
  &lt;/a&gt;
  üëΩ Rick &amp;amp; Morty database
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://rickandmortyapi.com/documentation/"&gt;https://rickandmortyapi.com/documentation/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Rick and Morty API is based on the television show Rick and Morty. You will have access to about hundreds of characters, images, locations and episodes !!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#random-advice"&gt;
  &lt;/a&gt;
  ü©≤ Random Advice
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://api.adviceslip.com/#top"&gt;https://api.adviceslip.com/#top&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Very fast api to use! It will provide you some random advice!&lt;/p&gt;

&lt;p&gt;You can test it right now from this url &lt;em&gt;&lt;a href="https://api.adviceslip.com/advice"&gt;https://api.adviceslip.com/advice&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fake-user"&gt;
  &lt;/a&gt;
  ü•∏ Fake User
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://randomuser.me/?ref=undesign"&gt;https://randomuser.me/?ref=undesign&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Do you need fake user for your website? This API will give you a list of fake user!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-icons-dicebear"&gt;
  &lt;/a&gt;
  ü§° User icons (DiceBear)
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://avatars.dicebear.com/docs/http-api#options"&gt;https://avatars.dicebear.com/docs/http-api#options&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;DiceBear is an avatar library for designers and developers. You can test it fastly at this url for example: &lt;em&gt;&lt;a href="https://avatars.dicebear.com/api/male/john.svg?background=%230000ff"&gt;https://avatars.dicebear.com/api/male/john.svg?background=%230000ff&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cats-fact"&gt;
  &lt;/a&gt;
  üê± Cats fact
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://alexwohlbruck.github.io/cat-facts/"&gt;https://alexwohlbruck.github.io/cat-facts/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This app will combine APIs and Services from the web to do just one thing‚Ä¶ send cat facts.&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;üéÅ You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me üòÅ&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üéÅ &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚òïÔ∏è You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; üôè&lt;/p&gt;

&lt;p&gt;üèÉ‚Äç‚ôÇÔ∏è You can follow me on üëá&lt;/p&gt;

&lt;p&gt;üïä Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üë®‚Äçüíª Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark üîñ this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>CSS Positions</title>
      <author>Avinash Gupta</author>
      <pubDate>Sat, 30 Oct 2021 14:22:53 +0000</pubDate>
      <link>https://dev.to/tier3guy/css-positions-2p0l</link>
      <guid>https://dev.to/tier3guy/css-positions-2p0l</guid>
      <description>&lt;p&gt;I am as a beginner faced a lot of difficulty in understanding the &lt;code&gt;Position&lt;/code&gt; property in CSS. Today in this doc I will be explaining Positions in a very friendly and easy manner. So, lets begin.&lt;/p&gt;

&lt;p&gt;What is &lt;code&gt;position&lt;/code&gt; property?&lt;br&gt;
As the name suggest Position is a property in CSS to set the position of an element.&lt;br&gt;
It has 5 values and they are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;relative&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fixed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sticky&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;now again a question arises that is why should we use this is position property?&lt;/p&gt;

&lt;p&gt;And the answer is that, after specifying the position property you can use four more properties i.e &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;, which will again help you better to shape your elements to enhance your frontend.&lt;/p&gt;

&lt;p&gt;Note: you cannot use these four properties (top, bottom, left, right) directly before specifying the position property. Using them directly without specifying position will be of no use.&lt;/p&gt;

&lt;p&gt;Now, we know that what is position property and why should we use it. Now lets quickly jump to those five values and try to better understand them.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;static&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;position: static;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;now, static is the default position property, it positions your element according to regular flow of the dom.&lt;br&gt;
(Note: top, bottom, left, and right won't work with static)&lt;/p&gt;

&lt;p&gt;Now you know why without defining position property you cannot use top, bottom, left and right. (As if you have not defined the position, the browser will set it to static (default behavior) and top, bottom, left, right won't work with static)&lt;/p&gt;

&lt;p&gt;Gist: static is the default behavior of the browser.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;relative&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;position: relative;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;relative works relative to the normal position of the element.&lt;br&gt;
I know you didn't understand. Lets take up an example.&lt;br&gt;
Suppose you created a div and set its width and height. Now,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;position: relative;
left: 50px;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after applying these two lines in the css of your div, you will find that your div is shifted by 50px from its left. Now this is what means relative to the normal position. Once again, if you apply&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;top: 100px;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you will see that your div shifted by 100px from its top.&lt;br&gt;
I hope now you get the clear idea.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;fixed&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;position: fixed;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Fixed and relative and totally similar, but the only difference is that the relative position the elements from its normal position while fixed sets the position in relative to the browser window.&lt;br&gt;
Eg.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;position: fixed;
left: 5px;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after applying this css your div will move to a distance of 5px from the left of your browser window.&lt;br&gt;
and the important thing is that it won't scroll with your webpage. It will get fixed to that position. &lt;/p&gt;

&lt;p&gt;But suppose you want to fix the position with respective to browser window but at same time you want your div to get scroll with your page. How do you do this, as if you will apply position fixed property it won't allow your div to get scroll.&lt;/p&gt;

&lt;p&gt;Now, here comes the concept of position: absolute.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;absolute&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;position: absolute;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are two difference between absolute and fixed.&lt;br&gt;
a. The first one is fixed doesn't allow scroll but absolute does.&lt;br&gt;
b. And the second one is absolute works with the nearest &lt;strong&gt;positioned&lt;/strong&gt; ancestor. Means that fixed sets your element with the respect to the dom window, while absolute sets your div to the nearest ancestor(parent) element who has its position set. But what if there is not parent element with position property, then it will set your according to dom as like fixed but it will still allow scroll.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;sticky&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;position: sticky;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;sticky is same is fixed the only difference is it sets the property when ever the element gets out of the window on scrolling.&lt;/p&gt;

&lt;p&gt;So, this was all about the position property. Hope you get some knowledge after reading this doc. Thank you.&lt;/p&gt;

</description>
      <category>css</category>
      <category>positions</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Remote Desktop Experience (Part 1: Planning)</title>
      <author>James Turner</author>
      <pubDate>Sat, 30 Oct 2021 14:09:46 +0000</pubDate>
      <link>https://dev.to/turnerj/remote-desktop-experience-part-1-planning-2fim</link>
      <guid>https://dev.to/turnerj/remote-desktop-experience-part-1-planning-2fim</guid>
      <description>&lt;p&gt;I've had both a laptop and a desktop for several years. My desktop was my primary machine for work and play where my laptop was rarely used. Since &lt;a href="https://turnerj.com/blog/i-left-my-job-today-after-seven-years"&gt;leaving my previous job&lt;/a&gt;, I have been nearly entirely using my laptop to do work, leaving my desktop only for gaming. While I had a multi-monitor setup, I've found that I don't miss that but I do miss the performance. The work I do isn't usually too taxing for my laptop but the performance is thermally limited.&lt;/p&gt;

&lt;p&gt;Both machines though are a few years old, both running Skylake processors so neither meet the &lt;a href="https://docs.microsoft.com/en-us/windows-hardware/design/minimum/supported/windows-11-supported-intel-processors"&gt;minimum Windows 11 CPU requirements&lt;/a&gt;. I know there are still a few years of support for Windows 10 so that isn't a big issue, just something that I'm factoring into my planning. Anyway, neither machine is a slouch for what I do but thinking for the future and how I want to work, I need to plan the upgrade path for these machines.&lt;/p&gt;

&lt;p&gt;I also have a small HP ProLiant MicroServer Gen8 that I got from working overtime at my old job, acting as a NAS for my home network. It holds my documents, photos, backup of my Steam library, runs a Plex server, a VM for Pi-hole, a VM for a local build server, a VM for Minecraft and a VM for Factorio. While I don't run all the VMs at once, it still isn't the most powerful machine even with an upgraded CPU and maxed out at 16 GB of RAM. In its 4 drive bays, I have one SSD for the host OS and 3 HDDs that split the rest of the data (no RAID). It has worked hard for many years but I'm starting to outgrow it so I want to plan its upgrade path too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#current-machine-specs"&gt;
  &lt;/a&gt;
  Current Machine Specs
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Desktop&lt;/th&gt;
&lt;th&gt;Laptop&lt;/th&gt;
&lt;th&gt;Server&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;i5-6600K (4C/4T)&lt;/td&gt;
&lt;td&gt;i7-6700HQ (4C/8T)&lt;/td&gt;
&lt;td&gt;Xeon E3-1230 V2 (4C/8T)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;RAM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;16 GB&lt;/td&gt;
&lt;td&gt;16 GB&lt;/td&gt;
&lt;td&gt;16 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GTX 970 4 GB&lt;/td&gt;
&lt;td&gt;GTX 960M 4 GB&lt;/td&gt;
&lt;td&gt;Matrox MGA-G200eH&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;These are the types of things I need to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I don't have the budget to upgrade 3 machines - really only the budget to upgrade 1 really well, or maybe 2 pretty well.&lt;/li&gt;
&lt;li&gt;While gaming is primarily on my desktop, I do play some games (FPS, RTS, Turn-based strategy) on my laptop when not at home.&lt;/li&gt;
&lt;li&gt;For the NAS, I'd like more drive bays so I can have SSDs for the VMs and a HDD RAID for the personal files.&lt;/li&gt;
&lt;li&gt;Depending how high-end I want to go, I may be able to re-use the desktop's GPU.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#potential-3in1-solution"&gt;
  &lt;/a&gt;
  Potential 3-in-1 Solution
&lt;/h2&gt;

&lt;p&gt;I've chatted with a friend of mine about upgrading my server and he was talking about his ideal setup. Instead of having a desktop and a server, he was going to run his desktop on his server which is a pretty clever idea. I was thinking how I could extend that to my setup and also improve working on my laptop and it hit me - why don't I also run my laptop's "desktop" on the server?&lt;/p&gt;

&lt;p&gt;How would I do this though? Well, I was thinking about using &lt;a href="https://parsec.app/"&gt;Parsec&lt;/a&gt;. Effectively, I'd be remote connecting to a local server running my desktop for my laptop. My laptop and desktop machines would be thin clients for the powerful server.&lt;/p&gt;

&lt;p&gt;Here are some of the benefits for doing this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Would only need to upgrade one machine (the server) so I can save money and/or afford more powerful parts.&lt;/li&gt;
&lt;li&gt;Laptop wouldn't need to worry about thermal constraints for work.&lt;/li&gt;
&lt;li&gt;I could expand the storage space, greatly improve the CPU and massively increase the RAM.&lt;/li&gt;
&lt;li&gt;If anything happened to my laptop (it dies or is stolen), all my important files are securely stored.&lt;/li&gt;
&lt;li&gt;I could effectively &lt;a href="https://ghuntley.com/anywhere/"&gt;work from anywhere&lt;/a&gt; while having potentially better battery life too.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are some problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gaming on my desktop will have more lag than current - maybe not noticeable but still more lag than none.&lt;/li&gt;
&lt;li&gt;Gaming on my laptop gets more complicated as some games connect via LAN so having a remote desktop doesn't help - the laptop still needs to be fast enough to play games.&lt;/li&gt;
&lt;li&gt;If I am working from anywhere, I'd still need a pretty good internet connection as it would be a streaming-heavy setup with Parsec.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other concerns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I run my server 24/7 so power usage is a concern - the existing server is quite power efficient.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At some point in the future, I will still need to upgrade the desktop and laptop machines. If the gaming side for the desktop machine through the server is fine, I might be able to get away with something as simple as a Raspberry Pi. For a future laptop, while I still want some gaming performance, I'd mainly be looking for a lightweight laptop with great battery life and probably USB-C power.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rentingvsbuying"&gt;
  &lt;/a&gt;
  Renting-vs-Buying
&lt;/h3&gt;

&lt;p&gt;Now there is another option that is possible - I could just rent a dedicated server somewhere and run everything there. That definitely is possible and would be lower the upfront cost, potentially help with backups and likely have faster internet. However, I don't like the idea that everything important to me would be hosted by someone else. Not to mention that buying the equipment means I can potentially flip the parts later if I need to upgrade down the road.&lt;/p&gt;

&lt;p&gt;Also if I'm doing a lot of work still at home via my laptop, it seems a little redundant going outside my local network to connect to my remote desktop where instead I could just run it at home.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#secondary-goals"&gt;
  &lt;/a&gt;
  Secondary Goals
&lt;/h2&gt;

&lt;p&gt;While the primary goals are to have a remote desktop, I do have a few secondary goals I'd like to achieve too...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scriptable-os-install-and-configuration"&gt;
  &lt;/a&gt;
  Scriptable OS Install and Configuration
&lt;/h3&gt;

&lt;p&gt;I like the idea of scripting an OS install/configuration. I've wanted to do this for a while and I know it may not seem necessary when I have a remote desktop setup but I still see some utility in it. The idea is using something like Chocolatey and a Powershell script to install all the software I want and configure it up just how I like it.&lt;/p&gt;

&lt;p&gt;I see this still being useful because my laptop will still need an OS of some sort and some basic programs. Plus it allows me to tear down the VM that powers my remote desktop and rebuild it far easier - great if I screw something up.&lt;/p&gt;

&lt;p&gt;Ultimately even if a remote desktop experience for my work isn't right, having an auto-setup script would help with clean re-installs and device upgrades. Other people have got basic scripts that do things like this for Windows already but often are limited to installing programs rather than configuring the OS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#better-backups"&gt;
  &lt;/a&gt;
  Better Backups
&lt;/h3&gt;

&lt;p&gt;Currently I backup my files onto a separate external drive but I am wanting to have a low-cost method for remote backup. I've looked at Backblaze but am also considering other options like storing my current/existing server at a friend's house and using it as a remote backup. If not the whole server, maybe we put space aside on eachother's servers to just run a backup VM for the other.&lt;/p&gt;

&lt;p&gt;Either way, I'd like to improve my current system to make sure my data is more secure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-and-next-steps"&gt;
  &lt;/a&gt;
  Testing and Next Steps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#stage-1a"&gt;
  &lt;/a&gt;
  Stage 1A
&lt;/h3&gt;

&lt;p&gt;Without splashing money on any new hardware straight away, I figure I should try and test this with what I've got currently.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setup my current/old desktop machine with all the typical tools I use on my laptop.&lt;/li&gt;
&lt;li&gt;Install Parsec on my desktop and laptop, treating my desktop machine as my remote desktop for my laptop.&lt;/li&gt;
&lt;li&gt;Try working via Parsec for a week and note down any new pros/cons I find.&lt;/li&gt;
&lt;li&gt;Additionally try some basic gaming via Parsec from my desktop machine to my laptop.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stage-1b"&gt;
  &lt;/a&gt;
  Stage 1B
&lt;/h3&gt;

&lt;p&gt;Simultaneously I can also look at my secondary goals...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identifying what programs and configuration I want to script.&lt;/li&gt;
&lt;li&gt;Test out the script in a VM that I can easily reset and try again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stage-2"&gt;
  &lt;/a&gt;
  Stage 2
&lt;/h3&gt;

&lt;p&gt;Assuming no major issues with testing Parsec for my work (Stage 1A)...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Put together a parts list for my ideal server - I'm thinking something with a lot of cores.&lt;/li&gt;
&lt;li&gt;Cut that parts list down to something actually realistic. üò¢&lt;/li&gt;
&lt;li&gt;Save up money to buy &lt;em&gt;any&lt;/em&gt; of those parts (something something supply chain issues).&lt;/li&gt;
&lt;li&gt;Buy the parts, build the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stage-3"&gt;
  &lt;/a&gt;
  Stage 3
&lt;/h3&gt;

&lt;p&gt;Once I have the new server built (Stage 2) and my auto-setup script ready (Stage 1B)...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setup a new VM on the new server for my remote desktop.&lt;/li&gt;
&lt;li&gt;Run my new auto-setup script for configuring the OS.&lt;/li&gt;
&lt;li&gt;Connect to it via Parsec and start giving my remote desktop experience a real try on the final hardware.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stage-4"&gt;
  &lt;/a&gt;
  Stage 4
&lt;/h3&gt;

&lt;p&gt;Assuming I'm happy with everything with Stage 3...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do a clean install of Windows on my laptop to get rid of the tools I no longer use - at this point I'm fully committing to the change for work.&lt;/li&gt;
&lt;li&gt;Try gaming from my desktop machine to my remote desktop, testing the performance/lag and see how happy I am with it.&lt;/li&gt;
&lt;li&gt;If I'm happy with how gaming works, wipe my desktop and commit to the same change like my laptop.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-do-this-thing"&gt;
  &lt;/a&gt;
  Let's do this thing!
&lt;/h2&gt;

&lt;p&gt;There is a lot to do between now and having my ideal setup. Those stages also hide a lot of complexity so it won't be a fast process to go from where I am now to a fully remote desktop experience. Ultimately though, I'm pretty excited to get started with this and looking forward to a powerful desktop experience wherever I am.&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Looking for contributors (pentest project)</title>
      <author>Paulo Medeiros</author>
      <pubDate>Sat, 30 Oct 2021 13:59:21 +0000</pubDate>
      <link>https://dev.to/medpaf/looking-for-contributors-pentest-project-3igd</link>
      <guid>https://dev.to/medpaf/looking-for-contributors-pentest-project-3igd</guid>
      <description>&lt;p&gt;Hawk is a network and pentest utility that I developed so that I could perform different kinds of task using the same suite, instead of jumping from one tool to another.&lt;br&gt;
Currently, this script can perform a good variety of tasks such as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ifconfig, &lt;/li&gt;
&lt;li&gt;ping, &lt;/li&gt;
&lt;li&gt;traceroute, &lt;/li&gt;
&lt;li&gt;port scans (including SYN, TCP, UDP, ACK, comprehensive scan), 
host discovery (scan for up devices on a local network), &lt;/li&gt;
&lt;li&gt;MAC address detection (get MAC address of a host IP on a local network), &lt;/li&gt;
&lt;li&gt;banner grabbing, &lt;/li&gt;
&lt;li&gt;DNS checks (with geolocation information), &lt;/li&gt;
&lt;li&gt;WHOIS, &lt;/li&gt;
&lt;li&gt;subdomain enumeration, &lt;/li&gt;
&lt;li&gt;vulnerability reconnaissance, - &lt;/li&gt;
&lt;li&gt;packet sniffing, &lt;/li&gt;
&lt;li&gt;MAC spoofing, &lt;/li&gt;
&lt;li&gt;IP spoofing, &lt;/li&gt;
&lt;li&gt;SYN flooding, &lt;/li&gt;
&lt;li&gt;deauth attack, &lt;/li&gt;
&lt;li&gt;brute-force attack (beta).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other features are still being implemented. Future implementations may include WAF detection, DNS enumeration, traffic analysis, XSS vulnerability scanner, ARP cache poisoning, DNS cache poisoning, MAC flooding, ping of death, network disassociation attack (not deauth attack), OSINT, exploits, some automated tasks and others.&lt;br&gt;
If you want to become a contributor, make a pull request or issue.&lt;br&gt;
Waiting for your feedback. Kudos&lt;br&gt;
Link to the repository:¬†&lt;br&gt;
&lt;a href="https://github.com/medpaf/hawk"&gt;https://github.com/medpaf/hawk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>showdev</category>
      <category>cybersecurity</category>
    </item>
    <item>
      <title>Workspace Management With Nix Flakes: Jupyter Notebook Example</title>
      <author>Ben Lovy</author>
      <pubDate>Sat, 30 Oct 2021 13:58:52 +0000</pubDate>
      <link>https://dev.to/deciduously/workspace-management-with-nix-flakes-jupyter-notebook-example-2kke</link>
      <guid>https://dev.to/deciduously/workspace-management-with-nix-flakes-jupyter-notebook-example-2kke</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what"&gt;
  &lt;/a&gt;
  What?
&lt;/h2&gt;

&lt;p&gt;If you're reading DEV, your computer is probably your primary productivity tool.  Whether it's a job, a hobby, or just a point of interest, your ability to install and use different types of software with ease is integral to your ability to keep learning and working.&lt;/p&gt;

&lt;p&gt;This means that many of us end up with &lt;em&gt;complicated&lt;/em&gt; workstation needs, with an interconnected web of dependency interactions.  If you need to wipe your hard drive and start over, it would likely take a non-trivial amount of work to set everything back up &lt;em&gt;exactly&lt;/em&gt; the same way, and each piece needs to be managed separately.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nixos.org/"&gt;Nix&lt;/a&gt; is a tool designed to take the pain out of workspace management.  Nix is &lt;a href="https://en.wikipedia.org/wiki/Declarative_programming"&gt;declarative&lt;/a&gt;.  You're not telling the computer how to build your environment step-by-step; you're simply describing the end state you need.  Nix learns how to make it and then stores everything you need in a reproducible way so that subsequent invocations are near-instant.  It is also unified.  Every tool you use can be managed this way, with lots of built-in functionality for quickly setting up complex environments with minimal effort on your part.&lt;/p&gt;

&lt;p&gt;This post will show you how I'm using Nix to manage my &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; environment and dependencies for using &lt;a href="https://jupyter.org/"&gt;Jupyter Notebooks&lt;/a&gt; for school assignments.  However, this same strategy can be used to build environments for whatever tool you need.&lt;/p&gt;

&lt;p&gt;If you just want to see the config file, jump down to &lt;a href="#the-flake"&gt;The Flake&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who"&gt;
  &lt;/a&gt;
  Who?
&lt;/h2&gt;

&lt;p&gt;While Nix can control your entire operating system, you don't need to go all-in to reap the benefits.  You can install the Nix package manager on Linux (i686, x86_64, or aarch64) or macOS (currently just x86_64, but ARM support will show up eventually).  See the &lt;a href="https://nixos.org/manual/nix/stable/#chap-quick-start"&gt;Quick Start&lt;/a&gt; guide to get up and running.&lt;/p&gt;

&lt;p&gt;This post uses a new feature of Nix called Nix Flakes, which you need to enable after you install.  See the &lt;a href="https://nixos.wiki/wiki/Flakes"&gt;Flakes wiki page&lt;/a&gt; and look for the "Non-NixOS" section.  I promise it's not too hard.&lt;/p&gt;

&lt;p&gt;However, if you end up liking what you see, I think NixOS is the best way to use Nix.  Just recently, I ended up wiping my hard drive.  I re-partitioned and then ran &lt;em&gt;one single command&lt;/em&gt;.  After letting it build, I could boot into an operating system identical to how I had left it, with all my tools installed and configuration settings set.  That's pretty hard to beat.  You can see &lt;a href="https://github.com/deciduously/nixos-config"&gt;my personal config on Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h2&gt;

&lt;p&gt;Python is a great programming language.  It has both a low barrier of entry for people learning the craft and a bustling ecosystem for scientific/numerical computing and web development (and much, much more).&lt;/p&gt;

&lt;p&gt;However, one sticking point for me has always been dependency management.  For most Python uses, you will need to install some packages, and keeping this organized is not always straightforward.&lt;/p&gt;

&lt;p&gt;I'm using this example specifically because I recently started taking a class that uses Jupyter Notebooks for assignments and labs.  I love Jupyter. It's an excellent tool for this sort of thing and is pretty widely used.  However, when I opened up my first assignment, the first interactive cell contained these lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While this is super standard and to be expected, I still felt myself thinking, "Oh boy, here we go again."&lt;/p&gt;

&lt;p&gt;There is a tool for installing dependencies. It's not like you're just manually downloading Python files, putting them in a sensible place yourself, and somehow telling your Python interpreter where to find them (looking at you, C and C++).  We have &lt;code&gt;pip&lt;/code&gt;!  With a properly configured Python installation, you can just type &lt;code&gt;pip install numpy&lt;/code&gt;, and the tool will automatically take care of the details.&lt;/p&gt;

&lt;p&gt;However, this installs to a &lt;em&gt;global&lt;/em&gt; location.  Every Python program in any project on your computer will refer to the same place.  No good - what if you want to run some code that depends on a different version of some package?&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;numpy&lt;/code&gt; dependency isn't a global dependency of your python installation. The need is local to whatever you're currently doing.  There's an answer for that as well, of course.  It involves, well, a &lt;code&gt;virtualenv&lt;/code&gt;, a requirements file, and a substantial local folder with a full copy of your environment.  This environment is pretty specific to exactly how it was installed too.  If anything happens to it, or you change computers, you have to start over.&lt;/p&gt;

&lt;p&gt;It, you know, works, but it doesn't exactly "spark joy" for me.  With each new Python project, the tangled mess that comprises "my workstation" grows, and I don't need that kind of background anxiety in my life.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How?
&lt;/h2&gt;

&lt;p&gt;With Nix, we have a &lt;em&gt;declarative&lt;/em&gt; solution.  We can create one text file and describe what we need, and Nix will get it done.  This file will work the same way anywhere we want to use it and doesn't leave brittle artifacts littered in our project codebase.  As long as this single text file is present in your project, you can produce the environment you need the same exact way every time and pretty much just forget about the whole thing.  It will even work if we drop it into a different computer running on a different platform and OS, as long as it's supported by Nix.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-flake"&gt;
  &lt;/a&gt;
  The Flake
&lt;/h3&gt;

&lt;p&gt;I'll start by showing you the whole file, and we'll dig through it in pieces below.  This gets saved as &lt;code&gt;flake.nix&lt;/code&gt; in the top level of your project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nix"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;nixpkgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"github:nixos/nixpkgs/nixos-unstable"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nv"&gt;flake-utils&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"github:numtide/flake-utils"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nv"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;nixpkgs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;flake-utils&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nv"&gt;flake-utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;eachDefaultSystem&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;system&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt;
      &lt;span class="nv"&gt;pkgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nv"&gt;nixpkgs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;inherit&lt;/span&gt; &lt;span class="nv"&gt;system&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kn"&gt;in&lt;/span&gt; &lt;span class="kr"&gt;rec&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;devShell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;mkShell&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;buildInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;pkgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;python3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;withPackages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="nv"&gt;ipython&lt;/span&gt;
            &lt;span class="nv"&gt;jupyter&lt;/span&gt;
            &lt;span class="nv"&gt;numpy&lt;/span&gt;
            &lt;span class="nv"&gt;pandas&lt;/span&gt;
          &lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nv"&gt;shellHook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"jupyter notebook"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not so bad, right?  Let's take a closer look from the outside in.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-walkthrough"&gt;
  &lt;/a&gt;
  The Walkthrough
&lt;/h3&gt;

&lt;p&gt;A Nix Flake is just an object - check out those surrounding curly braces.  This object has two keys, &lt;code&gt;inputs&lt;/code&gt; and &lt;code&gt;outputs&lt;/code&gt;.  The inputs are where we define the flake's dependencies and where to find all the tools we use.  This one has two, &lt;a href="https://github.com/NixOS/nixpkgs"&gt;&lt;code&gt;nixpkgs&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/numtide/flake-utils"&gt;&lt;code&gt;flake-utils&lt;/code&gt;&lt;/a&gt;.  Each of these just points to a GitHub URL, and if you follow those links, you'll see each repo provides its own &lt;code&gt;flake.nix&lt;/code&gt;.  The &lt;code&gt;outputs&lt;/code&gt; of each remote flake get piped into the &lt;code&gt;inputs&lt;/code&gt; of my flake, so we can use what they provide.&lt;/p&gt;

&lt;p&gt;Next, we define our own output object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nix"&gt;&lt;code&gt;&lt;span class="nv"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;nixpkgs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;flake-utils&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nv"&gt;flake-utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;eachDefaultSystem&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;system&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c"&gt;# ...&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We specifically bring each name we need from the inputs with &lt;code&gt;{{ nixpkgs, flake-utils, ... }}&lt;/code&gt; so we can refer to them inside, then use a tool from &lt;code&gt;flakeUtils&lt;/code&gt; called &lt;code&gt;eachDefaultSystem&lt;/code&gt;.  This is a convenience helper.  It provides a special variable called &lt;code&gt;system&lt;/code&gt; (see, right at the end: &lt;code&gt;(system:&lt;/code&gt;) which refers to the specific platform you're on.  On my computer, this resolves to &lt;code&gt;x86_64-linux&lt;/code&gt;.  This means we can use the exact same flake on any supported system, and Nix will know how to find the correct versions of anything inside.&lt;/p&gt;

&lt;p&gt;First, we create a special &lt;code&gt;pkgs&lt;/code&gt; variable to refer to the Nix package repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nix"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt;
  &lt;span class="nv"&gt;pkgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nv"&gt;nixpkgs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;inherit&lt;/span&gt; &lt;span class="nv"&gt;system&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kn"&gt;in&lt;/span&gt; &lt;span class="kr"&gt;rec&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;#...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're a functional programmer, you might recognize the &lt;code&gt;let...in&lt;/code&gt; pattern.  We're just defining variables to be used below.  This flake just needs the one, and using &lt;code&gt;inherit system&lt;/code&gt; - the &lt;code&gt;system&lt;/code&gt; from just above - we can expressly point to the subset of &lt;code&gt;nixpkgs&lt;/code&gt; that applies to our platform.  We add &lt;code&gt;rec&lt;/code&gt; to allow Nix to fully resolve any Nix variables in the following object recursively until thoroughly evaluated.&lt;/p&gt;

&lt;p&gt;To discover what's available, you can use the &lt;a href="https://search.nixos.org/packages"&gt;NixOS Search&lt;/a&gt; page - yes, this applies to Nix users on other operating systems as well.&lt;/p&gt;

&lt;p&gt;Finally, we're ready to tell Nix what we need.  This flake doesn't build a package; it just defines a development shell.  We can activate it by using the command &lt;code&gt;nix develop&lt;/code&gt; from anywhere in this folder.  This is called a &lt;code&gt;devShell&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nix"&gt;&lt;code&gt;&lt;span class="nv"&gt;devShell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;mkShell&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;#...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To build it, we can use the built-in &lt;a href="https://nixos.wiki/wiki/Development_environment_with_nix-shell"&gt;&lt;code&gt;mkShell&lt;/code&gt;&lt;/a&gt; feature.  This is contained in &lt;code&gt;pkgs&lt;/code&gt;, which we've already appropriately configured above.&lt;/p&gt;

&lt;p&gt;We want this shell to have stuff available for use, using the &lt;code&gt;buildInputs&lt;/code&gt; key of &lt;code&gt;mkShell&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nix"&gt;&lt;code&gt;&lt;span class="nv"&gt;buildInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;pkgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;python3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;withPackages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="nv"&gt;ipython&lt;/span&gt;
            &lt;span class="nv"&gt;jupyter&lt;/span&gt;
            &lt;span class="nv"&gt;numpy&lt;/span&gt;
            &lt;span class="nv"&gt;pandas&lt;/span&gt;
          &lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use &lt;code&gt;with pkgs;&lt;/code&gt; first, so that we don't have to fully qualify &lt;code&gt;pkgs.python3&lt;/code&gt; for each package inside, but that's what we mean for each item in this array.&lt;/p&gt;

&lt;p&gt;This array only contains one input, &lt;code&gt;python3&lt;/code&gt;.  However, we don't want just a plain Python environment. We know some packages we'll need access to already.  This is the part that replaces the &lt;code&gt;virtualenv&lt;/code&gt; setup entirely.  We can use the &lt;code&gt;withPackages&lt;/code&gt; option to define the list: this environment will grab &lt;code&gt;ipython&lt;/code&gt;, &lt;code&gt;jupyter&lt;/code&gt;, &lt;code&gt;numpy&lt;/code&gt;, and &lt;code&gt;pandas&lt;/code&gt; for us.  This will install Jupyter for us and the packages used inside, so the import statements from above will just work without any further action on your part.  If you need a new package at any point, you can just add it to this list and re-run &lt;code&gt;nix develop&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Additionally, you can pin to a minor version of Python by simply replacing &lt;code&gt;python3&lt;/code&gt; in the snippet with, for example, &lt;code&gt;python39&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, to make this as easy as possible to use for this purpose, we can have it immediately launch Jupyter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nix"&gt;&lt;code&gt;&lt;span class="nv"&gt;shellHook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"jupyter notebook"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can run any arbitrary code here. This will execute immediately once the environment is ready.  You can use multiple lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nix"&gt;&lt;code&gt;&lt;span class="nv"&gt;shellHook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;''&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;  mkdir cool_dir&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;  echo "cool file contents" &amp;gt; cool_dir/cool_file.txt&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;  jupyter notebook&lt;/span&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I don't go anywhere without my &lt;code&gt;cool_file.txt&lt;/code&gt;, and Nix definitely can deliver.&lt;/p&gt;

&lt;p&gt;With my particular &lt;code&gt;shellHook&lt;/code&gt; in place, running &lt;code&gt;nix develop&lt;/code&gt; in this folder will automatically launch the Jupyter server and open the landing page in my browser.  I just store all my &lt;code&gt;.ipynb&lt;/code&gt; files in the same directory, and they're all ready to use.  I am &lt;em&gt;thrilled&lt;/em&gt; that I could use Nix to escape all the Python package management problems I've experienced in the past with under 30 lines of config.  This solution is portable, reproducible, and once you understand the building blocks, easy to use and adapt.&lt;/p&gt;

&lt;p&gt;The first time you run &lt;code&gt;nix develop&lt;/code&gt; will be the slowest because Nix needs to download everything from scratch.  However, once it's in your nix store, subsequent runs will be rapid.  If nothing has changed, it will be instant, and if you tweak something, it will only recalculate the difference.&lt;/p&gt;

&lt;p&gt;The inputs are hashed, so you always use the same revision upstream.  You can run &lt;code&gt;nix flake update&lt;/code&gt; to grab updated hashes if you want to pull in new changes.  This will update the &lt;code&gt;flake.lock&lt;/code&gt; file that Nix creates and manages.&lt;/p&gt;

&lt;p&gt;Your Nix store will grow over time because it will keep fully specified and hashed versions of whatever you use.  To clean up unneeded files, you can periodically run &lt;code&gt;nix-collect-garbage&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okay-and"&gt;
  &lt;/a&gt;
  Okay, And?
&lt;/h2&gt;

&lt;p&gt;This example is just a taste.  You can use Nix to completely manage your entire workstation from the ground up, as well as declaratively package any type of application you would like to distribute to others.&lt;/p&gt;

&lt;p&gt;In future posts, we'll look at how to package your code for others to use, how to use Nix Flakes to define your entire operating system, and take a deeper look at what Nix is doing under the hood to turn these files into development environments.&lt;/p&gt;

&lt;p&gt;Nix is a vast topic, but it can significantly streamline how you manage your computer and the tools you need every day.  If there's something specific you'd like to see in this series, please let me know!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@chuttersnap?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;CHUTTERSNAP&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/boxes?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>productivity</category>
      <category>devops</category>
      <category>nix</category>
    </item>
    <item>
      <title>Learning FRONT-END DEVELOPMENT as a beginner!üë®üèª‚Äçüíª</title>
      <author>Paul Dunz</author>
      <pubDate>Sat, 30 Oct 2021 13:41:26 +0000</pubDate>
      <link>https://dev.to/pauld103/learning-front-end-development-as-a-beginner-2bhb</link>
      <guid>https://dev.to/pauld103/learning-front-end-development-as-a-beginner-2bhb</guid>
      <description>&lt;p&gt;As a beginner it's always hard to start and follow a new passion. You don't know where to start, what resources to use or what language to learn first. Especially in the coding section/area it's extremely hard to find a way how to start. That's the reason, why I created this post on my Instagram account &lt;a href="https://www.instagram.com/javascript_coding/"&gt;@javascript_coding&lt;/a&gt;. At the end of the post I gave a free guide I had written on my own, to all my followers. If you are interested in, too, make sure to read the whole article and stay tuned till the end!&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-start-learning-html"&gt;
  &lt;/a&gt;
  1. Start learning HTML
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ATYMXBPZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k8gh3hq2pmjxtfdnisa5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ATYMXBPZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k8gh3hq2pmjxtfdnisa5.png" alt="HTML - Part of Instagram Post" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML (Hypertext Markup Language) creates the whole structure of a website. Any text or headline is created/written in HTML. &lt;br&gt;
&lt;br&gt;&lt;br&gt;
Without any style your website looks extremely empty and boring, like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2H4dFEXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8b5waq6nuz1hizxibv6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2H4dFEXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8b5waq6nuz1hizxibv6.png" alt="website example without CSS" width="880" height="535"&gt;&lt;/a&gt;&lt;br&gt;
That's the reason why any website needs CSS...&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-continue-learning-css"&gt;
  &lt;/a&gt;
  2. Continue learning CSS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Afu_gdgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcgtr5ixx2q7hbl3d8wd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Afu_gdgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcgtr5ixx2q7hbl3d8wd.png" alt="CSS - Part of Instagram Post" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS (Cascading Style Sheets) gives you the possibility to style the HTML elements, like headlines or normal text fields. With CSS you can create animations and way more!&lt;br&gt;
&lt;br&gt;&lt;br&gt;
With CSS, the example you've seen above the CSS section, looks way more interesting.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9cMjf2Wx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcivmufx7xp79j8f3lt2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9cMjf2Wx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcivmufx7xp79j8f3lt2.png" alt="Styled example from my website" width="880" height="261"&gt;&lt;/a&gt;&lt;br&gt;
This example is a part of my website &lt;a href="https://javascriptcoding.org"&gt;javascriptcoding.org&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-keep-going-with-javascript"&gt;
  &lt;/a&gt;
  3. Keep going with JavaScript
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_yrO0Gz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4430bwle46873ee3yhe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_yrO0Gz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4430bwle46873ee3yhe.png" alt="JavaScript - Part of Instagram Post" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JavaScript is the biggest part of all sections! To become a master in JavaScript, it takes years. In comparison to HTML and CSS it's way more complex, but it takes only a few weeks to understand the basics. To learn these basics it takes only a few good YouTube tutorials on JavaScript. The main functionality can be done by only an experience of less than one month. Functionalities like clicking on a button or changing the content on your page. Change the style of HTML elements with JavaScript and a lot more!&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-creating-apps-on-the-internet-with-reactjs"&gt;
  &lt;/a&gt;
  4. Creating apps on the internet with ReactJS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AnDqqf3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhtivyiud83xnqv76mbu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnDqqf3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhtivyiud83xnqv76mbu.jpeg" alt="ReactJS - Part of Instagram Post" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One HTML file for a whole website? That's true in some way. In ReactJS, the HTML part is written in JavaScript classes. These classes are taken and "send" all content to the single HTML file.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-free-web-development-guide"&gt;
  &lt;/a&gt;
  5. FREE Web Development GUIDE!
&lt;/h2&gt;

&lt;p&gt;Go to my Instagram Account and click on the link in my bio. On this page you'll see the link to my free PDF guide. In this guide, there are several tips and links to YouTube videos. This guide gives you the possibility to start learning web development as a whole beginner!&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Make sure to like and save this article and don't forget to download your guide ;)&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Django Website Template - Material Kit (Bootstrap 5)</title>
      <author>Sm0ke</author>
      <pubDate>Sat, 30 Oct 2021 13:20:50 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-website-template-material-kit-bootstrap-5-10o4</link>
      <guid>https://dev.to/sm0ke/django-website-template-material-kit-bootstrap-5-10o4</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;a href="https://blog.appseed.us/django-website-templates-free-download/"&gt;Django Website Template&lt;/a&gt; crafted on top of Material Kit, a modern &lt;code&gt;Bootstrap 5&lt;/code&gt; design. Product can be used to code with less effort a web project with a modern design and also might be used by beginners for eLearning activities. &lt;strong&gt;Django Material Kit&lt;/strong&gt; can be downloaded directly from Github under the MIT license and used for unlimited hobby &amp;amp; commercial products.   &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;‚ú® &lt;a href="https://appseed.us/django/django-material-kit"&gt;Django Material Kit&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://django-material-kit.appseed-srv1.com/"&gt;Django Material Kit&lt;/a&gt; - LIVE App&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lnAO01N5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mbqair263e01k0ka4xb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lnAO01N5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mbqair263e01k0ka4xb.gif" alt="Django Website Template - Material Kit Design." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The product can be started and executed locally by executing the Docker scripts shipped with the source code. Of course, to do that, we need to have Docker properly installed and accessible in the terminal. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#docker-set-up"&gt;
  &lt;/a&gt;
  Docker Set Up
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone/Download source code&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-material-kit.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-material-kit 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull   &lt;span class="c"&gt;# download packages&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build  &lt;span class="c"&gt;# local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up     &lt;span class="c"&gt;# start the app &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all the above commands are executed, we should be able to visit &lt;strong&gt;Django Material Kit&lt;/strong&gt; in the browser &lt;code&gt;http://localhost:85&lt;/code&gt;:&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ez-nPQjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yadj9zdvlxe8ayq6uvz2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ez-nPQjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yadj9zdvlxe8ayq6uvz2.jpg" alt="Django Website Template - Material Kit, login page." width="880" height="549"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The product can be also compiled and started by following the steps provided in the README file (saved on Github). In order to have a successful build, make sure Python3 and Git is installed in the workstation. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#compile-from-sources"&gt;
  &lt;/a&gt;
  Compile from Sources
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone/Download source code&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-material-kit.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-material-kit 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install Modules&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install modules - SQLite Storage&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Set up the database&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py makemigrations
&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #4&lt;/strong&gt; - Set up the database&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py runserver
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Access the web app in browser: http://127.0.0.1:8000/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point we can access the app in the browser, create users and interact with this modern design: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Material Kit&lt;/strong&gt; - About Us Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yCc8_5Cf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6i19ejafn4xq0q2wrtv4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yCc8_5Cf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6i19ejafn4xq0q2wrtv4.jpg" alt="Django Website Template - Material Kit, about page." width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Material Kit&lt;/strong&gt; - UI Elements &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M9pj5i-6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c20vyz3ryotl8eqnqer8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M9pj5i-6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c20vyz3ryotl8eqnqer8.jpg" alt="Django Website Template - Material Kit, UI Elements." width="880" height="487"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Material Kit&lt;/strong&gt; - Contact Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8OMfjQWd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eywviblfvpk6cr5a6gjk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8OMfjQWd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eywviblfvpk6cr5a6gjk.jpg" alt="Django Website Template - Material Kit, Contact Page." width="880" height="488"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;üëâ More &lt;a href="https://appseed.us/django"&gt;Django Apps&lt;/a&gt; - provided by AppSeed&lt;/li&gt;
&lt;li&gt;üëâ Free &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Admin Dashboards&lt;/a&gt; crafted in Flask, Django and &lt;a href="https://appseed.us/apps/react"&gt;React&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>django</category>
      <category>templates</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Netflix UI Clone [SCSS]</title>
      <author>Krutik Raut</author>
      <pubDate>Sat, 30 Oct 2021 13:12:09 +0000</pubDate>
      <link>https://dev.to/reboot13_dev/netflix-ui-clone-hbi</link>
      <guid>https://dev.to/reboot13_dev/netflix-ui-clone-hbi</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/reboot13/embed/qBmNebL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Checkout:&lt;br&gt;
&lt;a href="https://github.com/reboot13-git"&gt;https://github.com/reboot13-git&lt;/a&gt;&lt;/p&gt;

</description>
      <category>netflix</category>
      <category>scss</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>How to built your own Map | HTML , CSS , JavaScript &amp; Leaflet.js in just 10 min</title>
      <author>adwait12345</author>
      <pubDate>Sat, 30 Oct 2021 12:22:59 +0000</pubDate>
      <link>https://dev.to/adwait12345/how-to-built-your-own-map-html-css-javascript-leafletjs-57eg</link>
      <guid>https://dev.to/adwait12345/how-to-built-your-own-map-html-css-javascript-leafletjs-57eg</guid>
      <description>&lt;p&gt;Hi folks ,&lt;br&gt;
 In this todays video you will get to learn how to built your own &lt;br&gt;
Dynamic map with HTML , CSS , JavaScript &amp;amp; Leaflet.js . It is going to be to to much interesting with only little amount of code . In this video you will also come across through usage of API and its implementation. &lt;br&gt;
This is going to be completely responsive design and map is going to be completely dynamic &amp;amp; you can search anything by search indexing used in map and this is one of best project for junior developers !&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VFjCGfwB3Qs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Source code :&lt;br&gt;
&lt;strong&gt;1)index.html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Toggle Menu&amp;lt;/title&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
    &amp;lt;link rel="stylesheet" media="screen and (max-width:1080px)" href="phone.css" &amp;gt;
     &amp;lt;!--map  --&amp;gt;
    &amp;lt;link rel="stylesheet" media="screen and (max-width:875px)" href="small.css" &amp;gt; 
    &amp;lt;link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
   integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
   crossorigin=""/&amp;gt;
   &amp;lt;script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
   integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
   crossorigin=""&amp;gt;&amp;lt;/script&amp;gt;

 &amp;lt;link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" /&amp;gt;
&amp;lt;script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"&amp;gt;&amp;lt;/script&amp;gt; 

&amp;lt;/head&amp;gt;
&amp;lt;body id="buddy"&amp;gt;
    &amp;lt;section&amp;gt;
    &amp;lt;nav class="nav-main"&amp;gt;
        &amp;lt;div class="logo"&amp;gt;&amp;lt;img src="./Bocadmium-logos_black2.png" alt=""&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;ul&amp;gt;
           &amp;lt;li&amp;gt; &amp;lt;a href="#"&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
           &amp;lt;li&amp;gt; &amp;lt;a href="#"&amp;gt;Portfolio&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
           &amp;lt;li&amp;gt; &amp;lt;a href="#"&amp;gt;About Us&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
           &amp;lt;li&amp;gt; &amp;lt;a href="#"&amp;gt;Gallery&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
           &amp;lt;li&amp;gt; &amp;lt;a href="#"&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/nav&amp;gt;

&amp;lt;div class="toggle"&amp;gt;
    &amp;lt;button id="hit"&amp;gt;
        &amp;lt;svg  viewBox="0 -2 100 80" width="40" height="30"style="
        overflow: visible; 
    "&amp;gt; &amp;gt;
            &amp;lt;rect id="change0"width="75" height="10" fill="#2666C1"&amp;gt;&amp;lt;/rect&amp;gt;
            &amp;lt;rect id="change" y="30" width="75" height="10"fill="#2666C1"&amp;gt;&amp;lt;/rect&amp;gt;
            &amp;lt;rect id="change1" y="60" width="75" height="10"fill="#2666C1"&amp;gt;&amp;lt;/rect&amp;gt;
&amp;lt;/svg&amp;gt;  
    &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;&amp;lt;/section&amp;gt;
&amp;lt;section&amp;gt;
    &amp;lt;div id="mapid"&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;/section&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;script src="main.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2)style.css&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body{
    background-color: #f1f1f1;
}

.nav-main{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height:14vh;
    background-color: #fff;
    display: flex;
    flex-wrap: wrap;
    z-index: 1;
    justify-content: center;
    align-items: center;
}
.logo img {
    width: 349px;
    height: 110px;
    position: relative;
    left: -1px;
    top: -5px;
}


.nav-main ul{
    position: relative;
    display: flex;
    flex-wrap: wrap;
    padding: 15px;
    top: -5px;
}
.nav-main ul li{
list-style: none;
line-height: 0px;
padding: 10px 55px 0 0;
}

.nav-main ul li a{
    display: block;
    height: 200%;
    padding: 0 10px;
    text-transform: uppercase;
    text-decoration: none;
    color: #111;
    font-family: arial;
    font-size: 16px;
}

/* map */

#mapid{
    position: fixed;
    height:650px;
    width: 100%;
    border-radius: 10px;
    top: 105px;
    left: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3)phone.css&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body{
    background-color: #f1f1f1;
}

.logo img {
    width: 289px;
    height: 96px;
    position: relative;
    top: -16px;
    left: -129px;



 }.logo  {
    width: 100px;
    height: 100px;
    position: absolute;


 }
 .nav-main ul {
    display: flex;
    position: absolute;
    flex-wrap: wrap;
    padding: 15px;
   justify-content: center;
   align-items: baseline;
   top: 62px;
}
.nav-main{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height:20vh;
    background-color: #fff;
    display: flex;
    flex-wrap: wrap;
    z-index: 1;
    justify-content: center;
    align-items: center;
}
/* map */
#mapid{
    position: fixed;
    height:600px;
    width: 100%;
    border-radius: 10px;
    top: 150px;
    left: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4)small.css&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.logo  {
    width: 100%;
    height: 70px;
    position: absolute;

    display: flex;
    justify-content: start;
    align-self: center;

 }

 .logo img {
    display: block;
    width: 223px;
    height: 65px;
    position: absolute;
    left: -9px;
    top: 2px;

 }

 .nav-main ul {
     height: 40vh;
     width: 200px;
     position: fixed;
     top: -1px;
   right: 10px;
     background-color: whitesmoke;
     border-radius: 10px;
     visibility: hidden;

     box-shadow: none;
 }
 .nav-main ul li {

     position: relative;
     left: 30px;
     top: 10px;

 }
 .nav-main{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height:8vh;
    background-color: #fff;
    display: flex;
    flex-wrap: wrap;
    z-index: 1;
    justify-content: center;
    align-items: center;

}
.toggle button {
    position: absolute;
    right: 10px;
    z-index: 1;
   top: 17px;
    background: transparent;
    border: none;
}
#mapid{
    position: fixed;
    height:90vh;
    width: 100%;
    /* border-radius: 0px; */
    top: 8vh;
    left: 0px;
    z-index: -1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5)main.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log("hi there");
let togglestatus = false;
let toggle = document.getElementById('hit');
let element =  document.querySelector('.nav-main ul')
toggle.addEventListener('click',()=&amp;gt;{

 if(togglestatus === false) { document.getElementById('change').setAttribute('transform','rotate(45),translate(0)')
   document.getElementById('change').setAttribute('y','0')
    document.getElementById('change1').setAttribute('transform','rotate(-45),translate(-45)')
   document.getElementById('change1').setAttribute('y','30')
     document.getElementById('change0').setAttribute('transform','rotate(-45),translate(-40)')
   document.getElementById('change0').setAttribute('y','30')
    }
    else if (togglestatus === true){
        document.getElementById('change').setAttribute('transform','rotate(0),translate(0)')
   document.getElementById('change').setAttribute('y','30')
    document.getElementById('change1').setAttribute('transform','rotate(0),translate(0)')
   document.getElementById('change1').setAttribute('y','60')
     document.getElementById('change0').setAttribute('transform','rotate(0),translate(0)')
   document.getElementById('change0').setAttribute('y','0')
    }
   if(togglestatus === false)
{ 
    element.style.visibility="visible";
    element.style.boxShadow= "0 10px 25px rgba(92, 99, 105, .2)";
    togglestatus = true;
    }
  else if(togglestatus === true){

    element.style.visibility="hidden";
    togglestatus = false;
  }
});


// API

var mymap = L.map('mapid').fitWorld();



L.tileLayer('https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=add your own key', {
    attribution: '&amp;lt;a href="https://www.maptiler.com/copyright/" target="_blank"&amp;gt;&amp;amp;copy; MapTiler&amp;lt;/a&amp;gt; &amp;lt;a href="https://www.openstreetmap.org/copyright" target="_blank"&amp;gt;&amp;amp;copy; OpenStreetMap contributors&amp;lt;/a&amp;gt;',
    maxZoom: 20,

    tileSize: 512,
    zoomOffset: -1,

}).addTo(mymap);
  // search
L.Control.geocoder().addTo(mymap);








&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build a Web app using Next.js and Appwrite</title>
      <author>HarisaranG</author>
      <pubDate>Sat, 30 Oct 2021 12:08:04 +0000</pubDate>
      <link>https://dev.to/harisarang/build-a-web-app-using-nextjs-and-appwrite-4a0l</link>
      <guid>https://dev.to/harisarang/build-a-web-app-using-nextjs-and-appwrite-4a0l</guid>
      <description>&lt;p&gt;In this blog tutorial, we are going to build a web app Next.js and Appwrite from complete scratch.&lt;/p&gt;

&lt;p&gt;Live Demo - &lt;a href="https://madewithappwrite.vercel.app/"&gt;Made with Appwrite üíô&lt;/a&gt;&lt;br&gt;
Github - &lt;a href="https://github.com/harisarang/madewithappwrite"&gt;harisarang/madewithappwrite&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-1-initialize-appwrite-and-create-a-nextjs-project"&gt;
  &lt;/a&gt;
  Step 1: ‚ñ∂Ô∏è Initialize Appwrite and Create a Next.js project
&lt;/h2&gt;

&lt;p&gt;I have used Digital ocean to host my Appwrite instance.(Feel free to explore other hosting options)&lt;/p&gt;

&lt;p&gt;First create a droplet in digital ocean (min. 2GB RAM / 2vCPU),&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MX4KR555--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ma98obtapo5j2anz170.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MX4KR555--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ma98obtapo5j2anz170.png" alt="Digital Ocean" width="880" height="504"&gt;&lt;/a&gt;&lt;br&gt;
To install appwrite execute the following command (make sure you have docker installed in the instance),&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--volume&lt;/span&gt; /var/run/docker.sock:/var/run/docker.sock &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--volume&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;/appwrite:/usr/src/code/appwrite:rw &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--entrypoint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"install"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    appwrite/appwrite:0.11.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use you IP address of your VM in browser to access your Appwrite console or you can add DNS "A record" pointing to your Droplet IP address and access the console using that domain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OoI4ZZza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvawbo48tupjrhl8ctvz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OoI4ZZza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvawbo48tupjrhl8ctvz.png" alt="Appwrite Console" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, create you Next.js project using &lt;code&gt;create-next-app&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-next-app &lt;span class="nt"&gt;-e&lt;/span&gt; with-tailwindcss madewithappwrite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then install &lt;code&gt;appwrite&lt;/code&gt; js package to your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;appwrite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-connect-you-next-app-with-appwrite"&gt;
  &lt;/a&gt;
  Step 2: üîó Connect you Next App with Appwrite
&lt;/h2&gt;

&lt;p&gt;Create a new project in Appwrite console named &lt;code&gt;madewithappwrite&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, register a new web platform in Appwrite. For development purpose add &lt;code&gt;localhost&lt;/code&gt; and for production register a new web platform with the domain name.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUBqeAXa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1dracp19ua8o20sl3mq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUBqeAXa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1dracp19ua8o20sl3mq.png" alt="Platform 1" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--prGPXN5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tiynu0j47otyo3qe69n8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--prGPXN5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tiynu0j47otyo3qe69n8.png" alt="Platform 2" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this project, I am going to use anonymous users instead of OAuth and email and password.&lt;/p&gt;

&lt;p&gt;Now, use the api wrapper below üëá to perform various operations with appwrite server. (You can also extend by adding various functions to it)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a new file under lib/appwrite.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;appwrite&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_APPWRITE_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_APPWRITE_PROJECT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;getAccount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;createSession&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAnonymousSession&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;deleteCurrentSession&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;current&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;createDocument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;getDocument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;documentId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;documentId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;updateDocument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;documentId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;documentId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;deleteDocument&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;documentId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;documentId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;createFile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;getFileView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFileView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new file named &lt;code&gt;.env.local&lt;/code&gt;,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEXT_PUBLIC_APPWRITE_URL=http://&amp;lt;your-ip-address&amp;gt;/v1
NEXT_PUBLIC_APPWRITE_PROJECT=&amp;lt;your-project-id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find you &lt;code&gt;project-id&lt;/code&gt; in appwrite console under settings in your project&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5APcF_vU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53ea38aaq2ucu5cmrwch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5APcF_vU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53ea38aaq2ucu5cmrwch.png" alt="Project ID" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yay ü•≥ ! You have successfully connected you Next App with Appwrite.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-user-session-management"&gt;
  &lt;/a&gt;
  Step 3: üë©‚Äçüíª User Session management
&lt;/h2&gt;

&lt;p&gt;For this project, I am going to use anonymous users (Feel free to explore other options too !)&lt;br&gt;
You can explore other options &lt;a href="https://appwrite.io/docs/server/users"&gt;here&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;Now, create a anonymous user session when they land on your web app i.e. create new user under &lt;code&gt;pages/_app.js&lt;/code&gt; using &lt;code&gt;useEffect&lt;/code&gt; react hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tailwindcss/tailwind.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../styles/global.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Navbar&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../components/Navbar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../components/Footer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;api&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSession&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Navbar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4-create-and-view-posts-from-appwrite"&gt;
  &lt;/a&gt;
  Step 4: üîÅ Create and View posts from Appwrite
&lt;/h2&gt;

&lt;p&gt;To create a post, first create a appwrite collection in the database.&lt;/p&gt;

&lt;p&gt;Under &lt;code&gt;settings&lt;/code&gt; in the collection add the following üëá rules (columns in the database). Find out the collection details in &lt;a href="https://gist.github.com/harisarang/bec50d062a4616e8cec9b062660f2df2"&gt;JSON here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RMLf4MMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0em67t7frq1m5tnkzgk2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RMLf4MMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0em67t7frq1m5tnkzgk2.png" alt="Collection rules" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a form in you Next App and in the &lt;code&gt;onSumbit&lt;/code&gt; part of the form call the &lt;code&gt;api.createDocument()&lt;/code&gt; function&lt;/p&gt;

&lt;p&gt;I have used &lt;a href="//npmjs.com/package/react-hook-form"&gt;&lt;code&gt;react-hook-form&lt;/code&gt;&lt;/a&gt; to manage my form state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// pages/submit.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;example_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;github-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tags&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;url-to-project&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite-tags&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatePost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;api&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_APPWRITE_PROJECT_COLLECTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sumbitted project successfully&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Unable to submit project to server.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To retrieve the list projects from the collection use the &lt;code&gt;api.listDocuments()&lt;/code&gt; from the wrapper. Now, under &lt;code&gt;pages/index.js&lt;/code&gt; retrieve all the projects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// pages/index.js&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setProjects&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   
   &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;collection-id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setProjects&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()]);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="c1"&gt;// Render a card component for the card here ...&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's a wrap !‚úä. Now, you have successfully üèÜ create web app using Next.js and Appwrite üéâ.&lt;/p&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>appwrite</category>
    </item>
    <item>
      <title>NodeJS + Express partie 4 : Cr√©er un CRUD API</title>
      <author> Eric Le Codeur</author>
      <pubDate>Sat, 30 Oct 2021 11:43:51 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/nodejs-express-partie-4-creer-un-crud-api-4mn5</link>
      <guid>https://dev.to/ericlecodeur/nodejs-express-partie-4-creer-un-crud-api-4mn5</guid>
      <description>&lt;p&gt;Voici une s√©rie d'articles qui vous permettra cr√©er des applications backend avec NodeJS + Express.&lt;/p&gt;

&lt;p&gt;Cette s√©rie est la suite de ma s√©rie sur les bases de NodeJS. Si vous n'avez pas les connaissances de bases en NodeJS lisez cette s√©rie d'abord : &lt;a href="https://dev.to/ericlecodeur/creer-un-backend-en-javascript-introduction-a-node-js-3014"&gt;Introduction √† NodeJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Node.js est aujourd'hui un incontournable, il est donc essentiel pour un d√©veloppeur de le maitriser.&lt;/p&gt;

&lt;p&gt;Je vais donc publier un nouvel article environ au deux jours et petit √† petit vous apprendrez tout ce qu'il y a √† savoir sur Node.js + Espress&lt;/p&gt;

&lt;p&gt;Pour ne rien manquer suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#crud-api"&gt;
  &lt;/a&gt;
  CRUD API
&lt;/h3&gt;

&lt;p&gt;Maintenant que nous connaissons les concepts de base, il est temps de construire une v√©ritable API CRUD (cr√©er, lire, mettre √† jour, supprimer)&lt;/p&gt;

&lt;p&gt;Nous allons construire toutes ces routes CRUD¬†:&lt;/p&gt;

&lt;p&gt;Create: POST¬†/api/products&lt;/p&gt;

&lt;p&gt;Read all: GET /api/products&lt;/p&gt;

&lt;p&gt;Read: GET¬†/api/product/1&lt;/p&gt;

&lt;p&gt;Update: PUT /api/products/1&lt;/p&gt;

&lt;p&gt;Delete: DELETE¬†/api/products/1&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#return-response-status"&gt;
  &lt;/a&gt;
  Return response status
&lt;/h3&gt;

&lt;p&gt;Avec une API CRUD vous pouvez retourner des donn√©es mais aussi un code statut.&lt;/p&gt;

&lt;p&gt;Voici une liste de certains codes status et leur signification&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Ok&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Created&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;204&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// No content&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Bad request&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Unauthorized&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Forbidden&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Not found&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Server error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cr%C3%A9ez-le-fichier-datajs-et-copiezcollez-ce-code"&gt;
  &lt;/a&gt;
  Cr√©ez le fichier "data.js" et copiez/collez ce code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;650&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iWatch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;750&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#charger-les-donn%C3%A9es-et-d%C3%A9marrer-le-serveur"&gt;
  &lt;/a&gt;
  Charger les donn√©es et d√©marrer le serveur
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./data.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server is listening on port 5000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-post%C2%A0apiproducts"&gt;
  &lt;/a&gt;
  Create: POST¬†/api/products
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// parse json body content&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newProduct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newProduct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;app.use(express.json) est un middleware qui prend le contenu JSON et cr√©e les propri√©t√©s req.body associ√©es. (ex. req.body.name et req.body.price)&lt;/p&gt;

&lt;p&gt;Le res.status(201).json(newProduct) d√©finit le status de la r√©ponse de retour sur 201 (cr√©√©) et renvoie √©galement les donn√©es newProduct en format JSON.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#read-all-get-apiproducts"&gt;
  &lt;/a&gt;
  Read all: GET /api/products
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#read-get%C2%A0apiproduct1"&gt;
  &lt;/a&gt;
  Read: GET¬†/api/product/1
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product not found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comme vu dans la partie 2, nous avons d'abord r√©cup√©r√© le productID du router parameter.&lt;/p&gt;

&lt;p&gt;Ensuite, nous v√©rifions si ce produit existe et envoyons une r√©ponse en cons√©quence.&lt;/p&gt;

&lt;p&gt;res.json(product) envoie le produit au format JSON avec un code d'√©tat 200 ok.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#update-put-apiproducts1"&gt;
  &lt;/a&gt;
  Update: PUT /api/products/1
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// parse json body content&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product not found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;updatedProduct&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product updated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#delete-delete%C2%A0apiproducts1"&gt;
  &lt;/a&gt;
  Delete: DELETE¬†/api/products/1
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// parse json body content&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product not found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product deleted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;C'est tout pour aujourd'hui, suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt; afin d'√™tre avis√© de la parution du prochain article (d'ici deux jours).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
