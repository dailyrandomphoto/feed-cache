<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Every Web Application is the same, the SELID Website</title>
      <author>Michael Landry</author>
      <pubDate>Fri, 18 Jun 2021 01:13:03 +0000</pubDate>
      <link>https://dev.to/milandry/every-web-application-is-the-same-the-selid-website-1pea</link>
      <guid>https://dev.to/milandry/every-web-application-is-the-same-the-selid-website-1pea</guid>
      <description>&lt;p&gt;What does &lt;a rel="noreferrer noopener" href="https://www.google.com/"&gt;google,&lt;/a&gt; &lt;a rel="noreferrer noopener" href="https://www.apartments.com/"&gt;apartments.com,&lt;/a&gt; and &lt;a href="https://www.amazon.com/"&gt;amazon.com&lt;/a&gt;, have in common?  They are all websites, obviously, but not just that; they all follow the same pattern:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The visitor is presented with a search field&lt;/li&gt;
&lt;li&gt;After querying for something, the visitor is then whisked away to a search results page&lt;/li&gt;
&lt;li&gt;Upon clicking on a result, a details page is then presented, usually featuring information and buttons that run off to CRUD something in a database or call some APIs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yup, thats it. This sums up pretty much every web application ever made, even the fancy proprietary expensive application your employer is probably building right now.  I like to refer to these as SeLiD websites ( Search, List, Drill down or Details)&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Now the next question. What are the acceptable and approved tools and solutions available to software engineers seeking to build a customized web application? Sure, React is pretty amazing, and everyone has heard of AWS, but if every website emerges into the same template every time, then where is the tool that maps to these problems? Businesses want solutions to business problems. Retailers want customers to search, view, and buy merchandise. Property owners want renters to search, view, and rent properties. Software engineers are tasked to build these solutions, and as software engineers, we want to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build a search field that combs through and returns matches from a list of records&lt;/li&gt;
&lt;li&gt;Shove each returned record into a template, then shove those into another list&lt;/li&gt;
&lt;li&gt;Wire up each record into a detail page that will easily interface into some sort of CRUD SDK and extendable callback middleware.&lt;/li&gt;
&lt;li&gt;Slap some make up on it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As far as 'customization' goes, it should be a simple matter of asking which records are being queried, how should the data be presented, what widgets are going on to the screen, what are these widgets going to do to the data, and how is this thing going to look?&lt;/p&gt;

&lt;p&gt;Surveying the current landscape of software engineering, I don't see this tool, and I observe the following issues.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The popular 'front end libraries' only solve technical issues, such as synchronizing behavior and state for the web app, which would normally be fine, except that businesses need to have their business solutions solved and not just their technical issues&lt;/li&gt;
&lt;li&gt;Engineers have to solve and resolve the same problems over and over again for every web application. The same problems common to every app that the usual libraries don't address. These include authentication, authorization, theming, linting, building, containerization deploying, and on and on... &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many projects that try to be the 'batteries included' unicorn, but all come up short in some form or fashion. Either they neglect to solve a critical concern, bring too much opinion to bear, too calcified to be extensible, too complicated, too broad, too difficult, and simply not aware of the absurdly common use-cases I have outlined above. &lt;/p&gt;

&lt;p&gt;In response to this, the Rondo Platform was born. As an engineer, I have come to find certain platforms, libraries, and technologies as being very easy, robust, and extendable, and by combining these with other open source technologies and best practices, we are able to build the Rondo Platform to be as robust, and efficient, and as simple as possible. Simply put, it takes care of all the toil that goes into custom website construction, and allows the engineer to focus on what matters, solving the business need, while leaving extensibility to customize as much as required.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>webdev</category>
      <category>platform</category>
      <category>pattern</category>
    </item>
    <item>
      <title>Protected Routes (Next js &amp; CRA) simple but efficient</title>
      <author>Ata Parvin Ghods</author>
      <pubDate>Fri, 18 Jun 2021 00:47:15 +0000</pubDate>
      <link>https://dev.to/atapg/protected-routes-next-js-cra-simple-but-efficient-2f7o</link>
      <guid>https://dev.to/atapg/protected-routes-next-js-cra-simple-but-efficient-2f7o</guid>
      <description>&lt;p&gt;Sometimes we need to hide pages/routes from the user and disabling their accessibility to those pages. &lt;br&gt;
In this post I want to show you the easiest way(which I think it is) to do this.&lt;/p&gt;

&lt;p&gt;1.&lt;strong&gt;I will start with create-react-app&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a new app&lt;/span&gt;
&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt;

&lt;span class="c1"&gt;// Run the created app&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;
&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;

&lt;span class="c1"&gt;// http://localhost:3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.&lt;strong&gt;In our main component(App.js) we will define our routes&lt;/strong&gt;&lt;br&gt;
(src/App.js)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ProtectedRoute&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./ProtectedRoute&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ProtectedRoute&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;          &lt;span class="c1"&gt;//this is 404 page btw - no "exact" prop&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/BrowserRouter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we will create our route with a custom route component, So let's build that.&lt;/p&gt;

&lt;p&gt;3.&lt;strong&gt;Our ProtectedRoute component&lt;/strong&gt;&lt;br&gt;
(src/ProtectedRoute.js)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Redirect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ProtectedRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userIsLoggedIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;//our user logged in&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; 
            &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;userIsLoggedIn&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Redirect&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="p"&gt;}}}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If our user is not logged in then show the Component(which is loggin page in this case because we don't want logged in user see the login in page), If not &lt;em&gt;Redirect&lt;/em&gt; the user to home page.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is how we protect route with react-router-dom&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In Next Js we use HOC(high-order-component)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1.&lt;strong&gt;Create next app&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a new app&lt;/span&gt;
&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;

&lt;span class="c1"&gt;// Run the created app&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;
&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;dev&lt;/span&gt;

&lt;span class="c1"&gt;// http://localhost:3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.&lt;strong&gt;First We create HOC&lt;/strong&gt;&lt;br&gt;
(src/HOC/ProtectedRoute)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ProtectedRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ProtectedComponent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

         &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userIsLoggedIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userIsLoggedIn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ProtectedComponent&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;         &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ProtectedRoute&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case we say if the user is logged in then redirect to home page else return the component&lt;/p&gt;

&lt;p&gt;3.&lt;strong&gt;Make our page protected&lt;/strong&gt;&lt;br&gt;
(src/pages/login.js)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ProtectedRoute&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../HOC/ProtectedRoute&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="nx"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ProtectedRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//wrap our component in hoc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;That's all you need! Thank you&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>nextjs</category>
      <category>security</category>
    </item>
    <item>
      <title>How to Disable a Repository in Azure DevOps (Azure Repos)</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Fri, 18 Jun 2021 00:39:05 +0000</pubDate>
      <link>https://dev.to/n3wt0n/how-to-disable-a-repository-in-azure-devops-azure-repos-3i65</link>
      <guid>https://dev.to/n3wt0n/how-to-disable-a-repository-in-azure-devops-azure-repos-3i65</guid>
      <description>&lt;p&gt;In this post I'm going to show you how to disable a repository in Azure DevOps and prevent users from accessing its contents.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video with the whole explanation and demo&lt;/strong&gt;, which to be fair is much &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G_um1mm7LiM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/G_um1mm7LiM"&gt;Link to the video: https://youtu.be/G_um1mm7LiM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-disabling-repos"&gt;
  &lt;/a&gt;
  Why Disabling Repos?
&lt;/h3&gt;

&lt;p&gt;Before we talk about how to disable a repo, why would you want to do it?&lt;/p&gt;

&lt;p&gt;Well, for example you may want to disable a repository because you found a secret in it. Or a third-party scanning tool found the repository to be out of compliance.&lt;/p&gt;

&lt;p&gt;In such cases, you may want to temporarily disable the repository while you work to resolve the issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-disable-a-repo-in-azure-devops"&gt;
  &lt;/a&gt;
  How to Disable a Repo in Azure DevOps
&lt;/h3&gt;

&lt;p&gt;Let's see now how to disable a repo. It is very easy.&lt;/p&gt;

&lt;p&gt;Just go to the &lt;code&gt;Project Settings&lt;/code&gt;, scroll down to the &lt;code&gt;Repositories&lt;/code&gt; section and enter it, then click on the specific repo you want to Disable. In the settings, you have the &lt;code&gt;Disable Repo&lt;/code&gt; switch&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RSY7CPB2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6jn7q4mtcrydlfl29z0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RSY7CPB2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6jn7q4mtcrydlfl29z0.png" alt="Disable a Repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When a repo is disabled, it still shows up in the list of repos, however no one can access or update its content.&lt;/p&gt;

&lt;p&gt;And you would also see a message saying that the repo has been disabled when they try to access it in the Azure Repos UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m04TQ9En--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8kwc99oklp2828z7090.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m04TQ9En--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8kwc99oklp2828z7090.png" alt="Disabled Message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And of course after the necessary mitigation steps have been taken, disabled repositories can be re-enabled using the same setting.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Final note: you can disable a repository only if you are either admin or owner, or you have the Delete repository permissions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;Let me know in the comment section below if you think this is useful and if you've ever been in a situation in which you could have disabled a repo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G_um1mm7LiM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>azuredevops</category>
      <category>git</category>
      <category>devops</category>
      <category>repo</category>
    </item>
    <item>
      <title>Pandas Concepts: Introduction</title>
      <author>Kathan Vakharia</author>
      <pubDate>Thu, 17 Jun 2021 23:56:39 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/pandas-concepts-introduction-4n64</link>
      <guid>https://dev.to/kathanvakharia/pandas-concepts-introduction-4n64</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-assumptions-before-you-continue"&gt;
  &lt;/a&gt;
  My Assumptions before you continue...
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You know basic data structures(&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;) in python.&lt;/li&gt;
&lt;li&gt;You are familiar with NumPy Basics. If not, check out my &lt;a href="https://colab.research.google.com/drive/1LfnZfuwNhFqiNBNDhUdAtVjAc44eyduG?usp=sharing"&gt;colab&lt;/a&gt; notebook where I have explained it from the ground up :)&lt;/li&gt;
&lt;li&gt;You have already setup your Data Science environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-pandas-if-we-already-have-numpy"&gt;
  &lt;/a&gt;
  Why Pandas if we already have NumPy?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Numpy has the following limitations:

&lt;ul&gt;
&lt;li&gt;No support for column names.&lt;/li&gt;
&lt;li&gt;datatype of all elements must be the same.&lt;/li&gt;
&lt;li&gt;No pre-built methods for common analysis tasks.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Pandas can handle a large amount of data at ease!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pandas&lt;/strong&gt; library overcomes the limitations of &lt;strong&gt;NumPy&lt;/strong&gt;, and sometimes it is also referred to as a &lt;strong&gt;swis army knife&lt;/strong&gt; of Data Analysis!&lt;/p&gt;

&lt;p&gt;And don't you worry about losing the &lt;strong&gt;vectorization&lt;/strong&gt; power, &lt;strong&gt;Pandas&lt;/strong&gt; is built upon &lt;strong&gt;NumPy&lt;/strong&gt; so internally, it makes use of &lt;strong&gt;NumPy&lt;/strong&gt; code extensively!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wuX8_G-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/as7q7yglo9df9lty0a9a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wuX8_G-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/as7q7yglo9df9lty0a9a.png" alt="image"&gt;&lt;/a&gt;By the way, the above image is &lt;strong&gt;not&lt;/strong&gt; an over-exaggeration of pandas' capabilities!&lt;/p&gt;

&lt;p&gt;Enough of the theory, let me show you some code otherwise you might leave this blog 😛 So fire up your Jupyter notebook/lab or whatever IDE you use for Data Science and let's start!&lt;/p&gt;

&lt;p&gt;Lastly, we are going to use a dataset on &lt;em&gt;pokemon&lt;/em&gt; to keep things fun and interesting 🐬 You can find it on &lt;a href="https://www.kaggle.com/mariotormo/complete-pokemon-dataset-updated-090420"&gt;kaggle&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#introducing-the-pandas-dataframe"&gt;
  &lt;/a&gt;
  Introducing the Pandas Dataframe
&lt;/h2&gt;

&lt;p&gt;It is the primary data structure provided by &lt;code&gt;pandas&lt;/code&gt;. Formally, a &lt;code&gt;Dataframe&lt;/code&gt; is a 2-Dimensional labeled tabular data structure. It is a &lt;strong&gt;2D&lt;/strong&gt; NumPy array on steroids 💪🏻 in a way. &lt;/p&gt;

&lt;p&gt;Here's how you read a CSV file as a pandas &lt;code&gt;Dataframe&lt;/code&gt; by passing the file path to the &lt;code&gt;read_csv()&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#it's a convention to import pandas as 'pd'
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;

&lt;span class="c1"&gt;#read a dataset on pokemon stats
&lt;/span&gt;&lt;span class="n"&gt;pokemon_stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pokemon_stats.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pokemon_stats&lt;/span&gt; &lt;span class="c1"&gt;#since it's jupyternotebook, no need of print
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZC1RQk8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isknhe6cvirdnvhf6tla.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZC1RQk8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isknhe6cvirdnvhf6tla.png" alt="image"&gt;&lt;/a&gt;💡 The file path can be &lt;strong&gt;relative&lt;/strong&gt; or &lt;strong&gt;absolute&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You will see a table of this sort in your jupyter notebook. (Not all the rows(1028) and columns(51) so that your entire screen is not occupied!)&lt;/p&gt;

&lt;p&gt;There's also a &lt;code&gt;read_excel()&lt;/code&gt; function if your dataset is in excel spreadsheet form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#read excel file as a dataframe
&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"path/to/my_dataset.xlsx"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🗒️ whenever I say &lt;code&gt;df&lt;/code&gt;, I am referring to &lt;code&gt;Dataframe&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#displaying-first-and-last-few-rows"&gt;
  &lt;/a&gt;
  Displaying first and last few rows
&lt;/h2&gt;

&lt;p&gt;It is a common practice to have a quick glance at some rows from beginning or end. &lt;br&gt;
For this, we have &lt;code&gt;df.head(n=5)&lt;/code&gt; and &lt;code&gt;df.tail(n=5)&lt;/code&gt; methods where &lt;code&gt;n&lt;/code&gt; is &lt;em&gt;number of rows&lt;/em&gt; to display and its default value is 5.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#display first four rows
&lt;/span&gt;&lt;span class="n"&gt;pokemon_stats&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bx5BJLcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/naigxvvolmoml5cr7hf9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bx5BJLcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/naigxvvolmoml5cr7hf9.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#display last four rows
&lt;/span&gt;&lt;span class="n"&gt;pokemon_stats&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iX50dXdv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw3zyx37mga0515v2ejb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iX50dXdv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw3zyx37mga0515v2ejb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We'll go into the anatomy of &lt;code&gt;Dataframe&lt;/code&gt; in the next post. You will get to know that it's more than just a table. Until then, enjoy data science!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus-where-pandas-shine"&gt;
  &lt;/a&gt;
  Bonus: Where Pandas shine 🌟
&lt;/h3&gt;

&lt;p&gt;It is useful whenever the data is &lt;strong&gt;structured&lt;/strong&gt; - data stored in CSV files, excel files, database tables, or simply whenever there is a notion of &lt;em&gt;rows&lt;/em&gt; and &lt;em&gt;columns&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;⚠️ There was a bit of jargon involved in the explanations but don't worry we are going to visit these concepts again and again in forthcoming posts :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>codenewbie</category>
      <category>pandas</category>
    </item>
    <item>
      <title>How does Virtual DOM work? (Build your own)</title>
      <author>Aiden Bai</author>
      <pubDate>Thu, 17 Jun 2021 23:09:44 +0000</pubDate>
      <link>https://dev.to/aidenybai/how-does-virtual-dom-work-b74</link>
      <guid>https://dev.to/aidenybai/how-does-virtual-dom-work-b74</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Plug: I help develop &lt;a href="https://github.com/millionjs/million"&gt;&lt;code&gt;million&lt;/code&gt;&lt;/a&gt;: &amp;lt;1kb virtual DOM - it's fast!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The virtual DOM is a tree of virtual nodes that represents what the DOM looks like. virtual nodes are light, stateless, and are JavaScript objects that only contain necessary fields. virtual nodes can be assembled into trees, and "diffed" to make pinpoint changes to the DOM.&lt;/p&gt;

&lt;p&gt;The reasoning behind this is because modification and access of DOM nodes is computationally expensive. A diff between virtual nodes, accessing the DOM only for modification, is the premise of virtual DOM. It avoids the DOM as much as possible, favoring plain JavaScript objects instead, making reading and writing much cheaper.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h2&gt;

&lt;p&gt;The Million virtual DOM contains three main functions: &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;createElement&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;. To completely understand how virtual DOM works, let's try and create our own rudimentary virtual DOM based off of these functions (&lt;strong&gt;~7 minutes read time&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Before we start, we need to define what a virtual node is. A virtual node can either be a JavaScript object (virtual element) or a string (text).&lt;/p&gt;




&lt;p&gt;The &lt;code&gt;m&lt;/code&gt; function is a helper function that creates virtual elements. A virtual element contains three properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;tag&lt;/code&gt;: which stores the tag name of the element as a string.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;props&lt;/code&gt;: which stores the properties/attributes of the element as an object.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;children&lt;/code&gt;: which stores virtual node children of the element as an array.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example implementation of the &lt;code&gt;m&lt;/code&gt; helper function is below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, we can construct virtual nodes easily:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="c1"&gt;// Is the same as:&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;The &lt;code&gt;createElement&lt;/code&gt; function turns a virtual node into a real DOM element. This is important because we'll be using this in our &lt;code&gt;patch&lt;/code&gt; function and the user may also use it to initialize their application.&lt;/p&gt;

&lt;p&gt;We'll need to programmatically create a new detached DOM element, then iterate over the virtual element props while adding them to the DOM element, and finally iterating over the children, initialling them as well. An example implementation of the &lt;code&gt;createElement&lt;/code&gt; helper function is below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;vnode&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;vnode&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTextNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vnode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Catch if vnode is just text&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vnode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vnode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vnode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vnode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;vnode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, we can convert virtual nodes to DOM elements easily:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;
&lt;span class="c1"&gt;// Is the same as: &amp;lt;div id="app"&amp;gt;Hello World&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;The &lt;code&gt;patch&lt;/code&gt; function takes an existing DOM element, old virtual node, and new virtual node. This won't necessarily be the most performant implementation, but this is just for demonstration purposes.&lt;/p&gt;

&lt;p&gt;We'll need to diff the two virtual nodes, then replace out the element when needed. We do this by first determining whether one of the virtual nodes is a text, or a string, and replacing it if the old and new virtual nodes do not equate each other. Otherwise, we can safely assume both are virtual elements. After that, we diff the tag and props, and replace the element if the tag has changed. We then iterate over the children and recursively patch if a child is a virtual element. An example implementation of the &lt;code&gt;patch&lt;/code&gt; helper function is below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;patch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oldVNode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;replace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;oldVNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="c1"&gt;// Handle text case&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;oldVNode&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;newVNode&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldVNode&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Diff tag&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldVNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;// Diff props&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;oldVNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;oldVNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;// Diff children&lt;/span&gt;
    &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;childNodes&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oldVNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;?[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;?[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, we can patch DOM elements based on virtual nodes easily:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;oldVNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newVNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Goodbye World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldVNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oldVNode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newVNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// el will become: &amp;lt;div id="app"&amp;gt;Goodbye World&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The old virtual node must always model the DOM element until after it is patched.&lt;/li&gt;
&lt;li&gt;Generally speaking, applications aren't directly written with these methods, rather they should be abstracted out into components and JSX for simplicity.&lt;/li&gt;
&lt;li&gt;This is not the same as Million's implementation, rather it is a demonstration to better allow you to understand how the virtual DOM works.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-unique-about-million-then"&gt;
  &lt;/a&gt;
  So... What's unique about Million then?
&lt;/h2&gt;

&lt;p&gt;Million provides five major improvements: granular patching, fewer iterative passes, fast text interpolation, keyed virtual nodes, compiler flags.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Granular patching:&lt;/strong&gt; Instead of just replacing the entire element when there is a difference in props or children, only the necessary props are changed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fewer iterative passes:&lt;/strong&gt; Million attempts to reduce the amount of passes during diffing, allowing for better time and space complexity.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fast text interpolation:&lt;/strong&gt; Instead of replacing text nodes with DOM methods, Million uses compiler flags to set the &lt;code&gt;textContent&lt;/code&gt; of elements to boost performance.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Keyed virtual elements:&lt;/strong&gt; This allows for the patching algorithm to skip nodes if the new virtual element key is the same as the old one, minimizing the amount of unnecessary work.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Compiler Flags:&lt;/strong&gt; This allows for the patching algorithm to skip condition branches, meaning less work is done.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>react</category>
    </item>
    <item>
      <title>Data Structures in Typescript - Stack</title>
      <author>Ricardo Borges</author>
      <pubDate>Thu, 17 Jun 2021 22:58:26 +0000</pubDate>
      <link>https://dev.to/ricardo93borges/data-structures-in-typescript-stack-1h35</link>
      <guid>https://dev.to/ricardo93borges/data-structures-in-typescript-stack-1h35</guid>
      <description>&lt;p&gt;A stack uses LIFO (last-in-first-out) ordering, the most recent item added is the first item to be removed, just like a real stack.&lt;br&gt;
Some uses of this data structure are expressions evaluations and conversion (prefix, postfix, and infix), backtracking, and memory management.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BKCHctW---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1622906576/data%2520structures/stack_rccvuz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BKCHctW---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1622906576/data%2520structures/stack_rccvuz.png" alt="stack"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#representation"&gt;
  &lt;/a&gt;
  Representation
&lt;/h3&gt;

&lt;p&gt;A stack can be implemented using an array or a linked list, can be either fixed or dynamic size.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#basic-operations"&gt;
  &lt;/a&gt;
  Basic operations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Push&lt;/strong&gt; - Add an item to the top of the stack&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pop&lt;/strong&gt; - Remove the top item from the stack&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Peek&lt;/strong&gt; - Return the top of the stack, without removing it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;isEmpty&lt;/strong&gt; - Return true if the stack is empty.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;isFull&lt;/strong&gt; - Return true if the stack is full, used when the stack is fixed size.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an implementation of a stack using an array, in Typescript an array doesn't have a fixed length, so the operation &lt;strong&gt;isFull&lt;/strong&gt; is not required, however you can implement a stack with a fixed length and use that operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="na"&gt;array&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EmptyStackException&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;peek&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EmptyStackException&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>datastructures</category>
      <category>typescript</category>
      <category>stack</category>
    </item>
    <item>
      <title>How a Single Mathematical question lead to the Invention of Modern Computers? </title>
      <author>Danyson</author>
      <pubDate>Thu, 17 Jun 2021 22:38:49 +0000</pubDate>
      <link>https://dev.to/danyson/how-a-single-mathematical-question-lead-to-the-invention-of-modern-computers-2087</link>
      <guid>https://dev.to/danyson/how-a-single-mathematical-question-lead-to-the-invention-of-modern-computers-2087</guid>
      <description>&lt;p&gt;In early 1900s German Mathematician David Hilbert put forward a question : &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-mathematics-decidable"&gt;
  &lt;/a&gt;
  is Mathematics "Decidable"?
&lt;/h3&gt;

&lt;p&gt;Which means "is there an Algorithm that can always determine whether a statement follows the axioms?"&lt;/p&gt;

&lt;p&gt;In 1936 Alan Turing answered this question by inventing the Modern Computer, the Turing Machine. &lt;/p&gt;

&lt;p&gt;He ran his famous "Halting problem" on his Turing Machine to check whether a program will halt or not on a particular input. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#turing-found-out-his-halting-problem-and-hilberts-decidablity-problem-are-similar"&gt;
  &lt;/a&gt;
  Turing found out his Halting Problem and Hilbert's Decidablity Problem are similar.
&lt;/h3&gt;

&lt;p&gt;But results came to Turing such that there is no way to tell in general, if a Turing machine will halt or not on a given input. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-experiment-by-turing-answered-that-mathematics-is-undecidable"&gt;
  &lt;/a&gt;
  This experiment by Turing answered that "Mathematics is Undecidable".
&lt;/h3&gt;

&lt;p&gt;The beauty here is that a visionary question from a Mathematician gave an idea to Turing to Invent the Modern Computer that we use today. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#because-you-know-all-the-computers-are-turing-machines-and-all-the-programming-languages-are-in-fact-turing-complete"&gt;
  &lt;/a&gt;
  Because you know all the computers are Turing Machines and all the  programming languages are in fact Turing complete.
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#before-the-invention-of-modern-computers-computers-were-actually-humans"&gt;
  &lt;/a&gt;
  Before the invention of Modern Computers, Computers were actually Humans.
&lt;/h3&gt;

&lt;p&gt;What? Humans? Yes. To say precisely, they are Women. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yes-women-mathematical-geniuses-tend-to-do-all-the-computation-works-and-calculations-manually"&gt;
  &lt;/a&gt;
  Yes, Women Mathematical geniuses tend to do all the computation works and calculations manually.
&lt;/h3&gt;

&lt;p&gt;And it was Turing who replaced them with Machines.&lt;/p&gt;

&lt;p&gt;Personal blog @ &lt;a href="https://danyson.github.io"&gt;danyson.github.io&lt;/a&gt; &lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>programming</category>
    </item>
    <item>
      <title>5 things to do when NOT writing code...</title>
      <author>Carl Wills</author>
      <pubDate>Thu, 17 Jun 2021 21:38:24 +0000</pubDate>
      <link>https://dev.to/carlmobiledev/5-things-to-do-when-not-writing-code-5fmp</link>
      <guid>https://dev.to/carlmobiledev/5-things-to-do-when-not-writing-code-5fmp</guid>
      <description>&lt;p&gt;As programmers, we love to code! That's what we do, and it's a big part of our lives. But it's not all that we do, and it's not all that we &lt;em&gt;should&lt;/em&gt; do as coders. Here are five things that I think everybody that writes code should do when they are not coding to keep themselves sharp and to continue learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-talk-about-code"&gt;
  &lt;/a&gt;
  1. Talk about code
&lt;/h3&gt;

&lt;p&gt;Yes! Talk about code, frameworks, libraries, algorithms, anything that helps you learn more about what you are working on. I think as programmers we often get caught up in the typing of code and lose our skills in other ways to communicate about it. One of the most important skills in our toolset is being able to communicate and explain technology, code, or high level strategy that we are using when solving complex problems. Talking about code helps enforce these skills and even helps us figure out which topics we need to brush up on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-look-at-code-other-people-wrote"&gt;
  &lt;/a&gt;
  2. Look at code other people wrote
&lt;/h3&gt;

&lt;p&gt;There's soooo many benefits to reading other people's code. Everybody has small little intricate differences when they write code that can be fun to explore and enhance your understanding of how the language works. You might notice some cool new functions you've never noticed before. You may stumble on a pattern that they use that you could easily implement into your project to make it cleaner or more simple. You may even find some mistakes! Reading code other people wrote is a great exercise in checking your level of understanding. It's not easy to jump into a new repository and start understanding what's going on, but by taking some time to explore unknown territory, you'll pick up on a lot!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-read"&gt;
  &lt;/a&gt;
  3. Read
&lt;/h3&gt;

&lt;p&gt;Read a book, I dare you! You might even enjoy it! Many programmers enjoy doing what they do because it is a very focused, heavy brain-power job. If that's you, &lt;em&gt;or if you simply like a good story&lt;/em&gt; pick up a book and give it a read. You'll find that doing a quiet solitary task can be really refreshing, especially with all the video calls we are all on &lt;strong&gt;constantly&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-pick-up-a-hobby"&gt;
  &lt;/a&gt;
  4. Pick up a hobby
&lt;/h3&gt;

&lt;p&gt;Programmers are, in general, great problem solvers. That means that they are naturally clever, creative people. Pick up a hobby that helps get that creativity out! This can be anything from learning a musical instrument, to going out and geocaching. Finding a hobby that you love can be a great way to redirect your focus away from your code and simply let your brain rest. I've met a number of people that then take those hobbies and combine them. Some examples could be writing an app that records music, making a website for your biking club, or even creating a database to keep track of your board game win/loss record with your friends!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-take-a-break"&gt;
  &lt;/a&gt;
  5. Take a break
&lt;/h3&gt;

&lt;p&gt;Simply taking a break can often be the best thing you can do to keep your energy levels up, stay focused and avoid short term burnout. Personally for me, I love going on walks throughout the day. It get's my body moving and physically away from my desk creating some separation from my work. Maybe for you, reading a chapter in a book might be the best way to relax. Other's might even rather sit back and watch an episode of their favorite show. Breaks are great for hitting the "Brain Reset" button and often times when you get back to coding you can approach it from a different prospective, which can be especially useful when tracking down pesky bugs!&lt;/p&gt;

&lt;p&gt;What do you do to stay sharp and focused when you aren't coding? Let me know in the comments!&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br&gt;
Carl&lt;/p&gt;

</description>
      <category>healthydebate</category>
      <category>career</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 5 DEV Comments from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 17 Jun 2021 21:36:00 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-from-the-past-week-2cle</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-from-the-past-week-2cle</guid>
      <description>&lt;p&gt;This is a weekly roundup of awesome DEV comments that you may have missed.  You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/p&gt;

&lt;p&gt;This comment on "&lt;a href="https://dev.to/wadecodez/16-eternal-hells-of-programming-5h5g"&gt;The Hells Every Developer Experiences&lt;/a&gt;" should resonate with all you "computer people". Hilarious addition, &lt;a class="mentioned-user" href="https://dev.to/faranaiki"&gt;@faranaiki&lt;/a&gt;
 !&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/faranaiki"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uy_Hdv10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5XG2LeBV--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/648230/725405e9-79ac-4d2a-9ff4-272d1e977e50.jpg" alt="faranaiki profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/faranaiki"&gt;
        &lt;span class="comment-username"&gt;Muhammad Faran Aiki&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/faranaiki/comment/1fb50" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 12
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;"Please, can you fix my printer?"&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you check out "&lt;a href="https://dev.to/siddharthshyniben/i-m-switching-to-vim-867"&gt;Switching to vim&lt;/a&gt;", you'll see some great dialogue from VSCode user &lt;a class="mentioned-user" href="https://dev.to/turutupa"&gt;@turutupa&lt;/a&gt;
 who has questions for the author about vim. Thanks for continuing the convo!&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/turutupa"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQkNvFSY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ObOPnnwS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/449682/2f9535db-988b-4f57-8d14-ec6fedac79f5.jpeg" alt="turutupa profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/turutupa"&gt;
        &lt;span class="comment-username"&gt;Turutupa&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/turutupa/comment/1fcoi" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 15
  &lt;/time&gt;

    • Edited
    &lt;span class="hidden m:inline-block"&gt;
      on &lt;time&gt;
      Jun 15&lt;/time&gt;
    &lt;/span&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;It's great that you changed to vim, seems very exciting! It would be cool if you could explain the process on how you changed to vim. Personally I use VSCode with vim extension for keyboard shortcuts. And I think it would be really cool to move fully to vim, but it's hard... first problem is file navigation. VSCode makes it so easy to open up files using ctrl/command + p. There might be some other stuff that I'd miss from VSCode when moving to vim but file navigation is my road blocker I guess. &lt;/p&gt;

&lt;p&gt;How did you overcome that?&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Some of you may have stumbled across "&lt;a href="https://dev.to/valeriavg/master-binary-in-five-minutes-2lj5"&gt;Master Binary in Five Minutes&lt;/a&gt;", where &lt;a class="mentioned-user" href="https://dev.to/eljayadobe"&gt;@eljayadobe&lt;/a&gt;
 aptly dropped this clever response to the title 😃&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/eljayadobe"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dyh0m08q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--J6Pjmr4x--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/16481/7c9b8fa1-9004-4b63-94e9-c282f821bf24.png" alt="eljayadobe profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/eljayadobe"&gt;
        &lt;span class="comment-username"&gt;Eljay-Adobe&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/eljayadobe/comment/1fcf8" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 14
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Master Binary in 101 Minutes.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;We must point out this comment by &lt;a class="mentioned-user" href="https://dev.to/valeriavg"&gt;@valeriavg&lt;/a&gt;
 taken from this post on some "&lt;a href="https://dev.to/johnbwoodruff/my-completely-biased-reasons-for-choosing-angular-1hbg"&gt;Biased Reasons for Angular&lt;/a&gt;". Always nice to see open, respectful discussion. &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/valeriavg"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--z3PT5xl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2fSvzvbJ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/473770/aad0a38a-ce60-457f-942d-1699421a16ef.jpeg" alt="valeriavg profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/valeriavg"&gt;
        &lt;span class="comment-username"&gt;Valeria&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/valeriavg/comment/1fapb" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 12
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I respect opinions that are diametrically opposed to mine. In fact I believe that diversity is a very good thing and not only in tech. With that said, it hurts me to see how the option to not use any framework at all simply became not an option. A framework, architecture or any sort of abstraction layer can and should be chosen or (blasphemy!) created for a particular project. After all, every programming language has it's own ways of doing things, limiting opinions and providing easy solutions for common problems. &lt;br&gt;
But the higher the level of abstraction the less understanding you have of what actually is going on. This makes things harder to debug, fix and optimise.&lt;br&gt;
Having said that, I agree that choosing a framework based on what you know best is wise. But by &lt;em&gt;knowing&lt;/em&gt; I mean a deep understanding of how it works, what it can and cannot do and why. Which is always easier with your own code or a third-party code with the smallest possible scope.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Non dev-related, but this &lt;a href="https://dev.to/devteam/what-was-your-win-this-week-4oa2"&gt;Weekly Win&lt;/a&gt; is definitely note-worthy. Glad to hear you're doing well &lt;a class="mentioned-user" href="https://dev.to/ibrahimcesar"&gt;@ibrahimcesar&lt;/a&gt;
 !&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/ibrahimcesar"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8S7NI2h---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1q2JtRUH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/189167/695f3dd9-b865-4c57-a097-5cfe07cca488.jpg" alt="ibrahimcesar profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/ibrahimcesar"&gt;
        &lt;span class="comment-username"&gt;Ibrahim Cesar&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/ibrahimcesar/comment/1faib" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 11
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Tested negative to COVID-19 – I live in Brazil and was sick all week. Never felt my life in so much danger.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ✌&lt;/p&gt;

</description>
      <category>bestofdev</category>
    </item>
    <item>
      <title>Tinker with your local/remote PHP (Laravel, Magento) Code</title>
      <author>Raj KB</author>
      <pubDate>Thu, 17 Jun 2021 21:08:46 +0000</pubDate>
      <link>https://dev.to/magepsycho/tinker-with-your-local-remote-php-laravel-magento-code-3g2j</link>
      <guid>https://dev.to/magepsycho/tinker-with-your-local-remote-php-laravel-magento-code-3g2j</guid>
      <description>&lt;p&gt;I was always looking for a &lt;a href="https://blog.magepsycho.com/sandbox-script-quick-testing-magento2/"&gt;quick playground for testing/debugging&lt;/a&gt; any PHP application esp. for Magento 2.&lt;/p&gt;

&lt;p&gt;Luckily, I got to know about Tinkerwell App in some twitter feed and thought of giving a try.&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cvJ4HM4B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/ESHFe04W4AE6UDA.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--9JcreN2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1143596522417922048/N9RDUIty_normal.png" alt="Michiel Gerritsen profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Michiel Gerritsen
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mbdgerritsen"&gt;@mbdgerritsen&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      .@tinkerwellapp + Magento 2 is a great combo. It allows me to SSH into the server and execute code on the real order object for example. In this case, i was debugging why a credit memo couldn't get created for this order. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:28 PM - 02 Mar 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1234485852463603712" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1234485852463603712" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1234485852463603712" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;If you don’t know about Tinerwell app&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tinkerwell is the magical code editor that runs your code within local and remote PHP applications. In other words, it’s a RELP(read-eval-print loop) for PHP.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Though there are some tools like:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PHP’s interactive mode in CLI (&lt;code&gt;php -a&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;&lt;a href="https://psysh.org/"&gt;psysh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;n98-magerun’s &lt;a href="https://n98-magerun.readthedocs.io/en/latest/commands/dev.html#dev-console"&gt;dev:console&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But the main advantage of the Tinkerwell app over others is that it can tinker locally and also remotely(via SSH). &lt;br&gt;
Also, it has official IDE plugins so that you can run code directly from your favorite code editor(VSCode, Sublime Text 3 and PhpStorm).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Tinkerwell is a commercial app that only costs around 15 USD and really worth it.&lt;/p&gt;

&lt;p&gt;After purchasing, you will get an email with a link to download the app along with the license key.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WMJJnEE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd7fpx0ued40npsrbh6t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WMJJnEE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd7fpx0ued40npsrbh6t.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After downloading you can simply install the installer file and configure the License Key, so nothing fancy about it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#configuring-for-magento-2"&gt;
  &lt;/a&gt;
  Configuring for Magento 2
&lt;/h2&gt;

&lt;p&gt;Currently(as the time of writing), the major PHP applications supported by Tinkerwell app are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Magento 2&lt;/li&gt;
&lt;li&gt;Laravel&lt;/li&gt;
&lt;li&gt;Symfony&lt;/li&gt;
&lt;li&gt;WordPress&lt;/li&gt;
&lt;li&gt;Drupal&lt;/li&gt;
&lt;li&gt;Typo3&lt;/li&gt;
&lt;li&gt;Prestashop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The full list can be found at – &lt;a href="https://github.com/tinkerwellapp/drivers"&gt;https://github.com/tinkerwellapp/drivers&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Tinkerwell “drivers” determine how the application should be bootstrapped – and can even provide variables that should be available automatically.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since Magento 2 is supported by default, you just need to set the working directory in local or remote.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#tinkering-with-magento-2-locally"&gt;
  &lt;/a&gt;
  Tinkering with Magento 2 Locally
&lt;/h3&gt;

&lt;p&gt;Open the app and click on the folder icon (1) and set your local Magento 2 working directory(2). That’s it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nokam_Mc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2ml930vv6s2mu1qq6oh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nokam_Mc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2ml930vv6s2mu1qq6oh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you can run/debug any Magento 2 code (core &amp;amp; custom) with the realtime preview on the right pane. For example, it may look like&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IU9WunMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vsfpf1rzq2axmhat41s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IU9WunMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vsfpf1rzq2axmhat41s.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
Running code with Tinkerwell

  

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2o2MR4sw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtjw3bb1x9z02755so6z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2o2MR4sw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtjw3bb1x9z02755so6z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
Running selected code in PHPStorm with Tinkerwell



&lt;p&gt;&lt;em&gt;&lt;code&gt;$objectManager&lt;/code&gt; variable is available by default (via Magento 2 driver)&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#troubleshooting"&gt;
  &lt;/a&gt;
  Troubleshooting
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; If you are getting an error&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Zend_Db_Adapter_Exception with message ‘SQLSTATE[HY000] [2002] No such file or directory’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Just replace ‘localhost’ by the IP address(127.0.0.1) for DB host in the file &lt;code&gt;app/etc/env.php&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#tinkering-with-magento-2-remotely-via-ssh"&gt;
  &lt;/a&gt;
  Tinkering with Magento 2 Remotely (via SSH)
&lt;/h3&gt;

&lt;p&gt;For remote interactive debugging, you can connect via Action (1) &amp;gt; Connect Via SSH. You will see a similar popup as below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BJIVu_mS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jglei5iuak5txscz1z2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BJIVu_mS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jglei5iuak5txscz1z2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Just fill-up the SSH login details and connect(2). Now you are able to able to run the code in remote. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Though there are some alternatives, Tinkerwell works quite well locally and remotely for testing out any PHP code (not only limited to Laravel, Magento 2 or other PHP frameworks).&lt;br&gt;
It’s really quite helpful in quick testing/debugging any PHP code and saves a lot of time.&lt;/p&gt;

&lt;p&gt;You might be interested in following Twitter discussion:&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SHR5eLc4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1225749538960531457/CRecYzGx_normal.jpg" alt="🛒 Magento 2 Extensions 🚀 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        🛒 Magento 2 Extensions 🚀
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/magepsycho"&gt;@magepsycho&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Question: How do you debug smartly in M2 production server?&lt;br&gt;&lt;br&gt;Please share your views!&lt;br&gt;&lt;br&gt;@magento &lt;a href="https://twitter.com/MageOverflow"&gt;@MageOverflow&lt;/a&gt; &lt;a href="https://twitter.com/Magento"&gt;@Magento&lt;/a&gt;MP &lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/max_pronko"&gt;@max_pronko&lt;/a&gt; &lt;a class="mentioned-user" href="https://dev.to/markshust"&gt;@markshust&lt;/a&gt;
 &lt;a href="https://twitter.com/mrloo"&gt;@mrloo&lt;/a&gt; &lt;a href="https://twitter.com/VinaiKopp"&gt;@VinaiKopp&lt;/a&gt; &lt;a href="https://twitter.com/LBajsarowicz"&gt;@LBajsarowicz&lt;/a&gt; &lt;a href="https://twitter.com/PeterJaap"&gt;@PeterJaap&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:42 AM - 14 Apr 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1249921026063872001" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1249921026063872001" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1249921026063872001" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>php</category>
      <category>magento</category>
      <category>laravel</category>
      <category>tinkerwell</category>
    </item>
    <item>
      <title>Linear Search Algorithm</title>
      <author>Aya Bouchiha</author>
      <pubDate>Thu, 17 Jun 2021 21:05:59 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/linear-search-algorithm-31dn</link>
      <guid>https://dev.to/ayabouchiha/linear-search-algorithm-31dn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#linear-search-definition"&gt;
  &lt;/a&gt;
  Linear Search Definition
&lt;/h1&gt;

&lt;p&gt;Linear search also called &lt;strong&gt;&lt;em&gt;sequential search&lt;/em&gt;&lt;/strong&gt; is a type of search algorithms, that traverse an array and compare each item with the wanted item, if the item is found the algorithm returns his index otherwise, It returns a false value (false, null, None,0...)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#space-and-time-complexity-of-linear-search"&gt;
  &lt;/a&gt;
  Space and Time complexity of linear search
&lt;/h1&gt;

&lt;p&gt;The &lt;strong&gt;time complexity&lt;/strong&gt; of &lt;strong&gt;linear search&lt;/strong&gt; is &lt;strong&gt;O(n)&lt;/strong&gt; and his &lt;strong&gt;Space complexity&lt;/strong&gt; is &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ubl8U54i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b07zcs5rofsa4jbtrq8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ubl8U54i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b07zcs5rofsa4jbtrq8.png" alt="line-graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#implementaion-of-linear-search-in-python"&gt;
  &lt;/a&gt;
  Implementaion of linear search in python
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;LinearSearchAlgorithm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wantedItem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;"""
        Linear seach algorithm
        input: 
            [wantedItem]
            [items] {list}
        output:
            =&amp;gt; returns index if the item is found
            =&amp;gt; returns False if the item is not found
    """&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;wantedItem&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#implementaion-of-linear-search-in-javascript"&gt;
  &lt;/a&gt;
  Implementaion of linear search in javascript
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Linear Search ALgoritm
 * @param  wantedItem 
 * @param {Array} items 
 * @returns {(Number|Boolean)} returns index if the item is found else returns false.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LinearSearchAlgorithm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wantedItem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wantedItem&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#exercise"&gt;
  &lt;/a&gt;
  Exercise
&lt;/h2&gt;

&lt;p&gt;Write a program that returns True if user's child can enter primary school if not returns False&lt;br&gt;
Permited Ages to enter primary school: 5,6,7,8 (Array | list).&lt;br&gt;
input : child's age (integer).&lt;br&gt;
&lt;strong&gt;example 1&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;input&lt;/em&gt; : 7&lt;br&gt;
&lt;em&gt;output&lt;/em&gt; =&amp;gt; True&lt;br&gt;
&lt;strong&gt;example 2&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;input&lt;/em&gt; : 3&lt;br&gt;
&lt;em&gt;output&lt;/em&gt; =&amp;gt; False&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bbc.co.uk/bitesize/guides/z7kkw6f/revision/7#:~:text=A%20linear%20search%20is%20the,algorithm%20must%20deal%20with%20this."&gt;https://www.bbc.co.uk/bitesize/guides/z7kkw6f/revision/7#:~:text=A%20linear%20search%20is%20the,algorithm%20must%20deal%20with%20this.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/linear-search/"&gt;https://www.geeksforgeeks.org/linear-search/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Linear_search"&gt;https://en.wikipedia.org/wiki/Linear_search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/data_structures_algorithms/linear_search_algorithm.htm"&gt;https://www.tutorialspoint.com/data_structures_algorithms/linear_search_algorithm.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/linear-search/"&gt;https://www.geeksforgeeks.org/linear-search/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/linear-search-in-python-program"&gt;https://www.tutorialspoint.com/linear-search-in-python-program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iwo5WAldDks"&gt;https://www.youtube.com/watch?v=iwo5WAldDks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4GPdGsB3OSc"&gt;https://www.youtube.com/watch?v=4GPdGsB3OSc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#day_5&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>python</category>
    </item>
    <item>
      <title>Reasons to Write as a Developer</title>
      <author>Krowser Web Services </author>
      <pubDate>Thu, 17 Jun 2021 21:01:12 +0000</pubDate>
      <link>https://dev.to/krowser/reasons-to-write-as-a-developer-5f5m</link>
      <guid>https://dev.to/krowser/reasons-to-write-as-a-developer-5f5m</guid>
      <description>&lt;p&gt;I get asked frequently by fellow programmers why I started writing online and if they should do the same. Let me tell you one thing right from the start: Yes, you should!&lt;/p&gt;

&lt;p&gt;Writing as a programmer has a lot of benefits like additional income, personal development, increased reputation, and more. You don’t need to write 10,000 words every month. You don’t even have to write every day. And you definitely don’t need a background in writing or some hidden talent! You just need a reason for writing, and that’s what this article is about.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reputation&lt;/strong&gt;&lt;br&gt;
A good reason for a lot of programmers to start writing is to build up some kind of reputation. Let’s say you are a programmer who is able to write JavaScript code and turn it into functioning applications, but nobody else knows you can do that.&lt;br&gt;
By starting to write online about what you do, you give other people the chance to get to know you and what skills you possess. It’s an excellent way of self-marketing and constantly leads to new opportunities — especially job-wise.&lt;br&gt;
You don’t even need your own blog for this. You can use social media like Twitter or LinkedIn or one of the awesome platforms like Dev.to to share your work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Education&lt;/strong&gt;&lt;br&gt;
Another great reason to start writing as a programmer is with the intention of helping others. The demand for skilled developers is still high around the world, but access to learning material and money to buy it are definitely not.&lt;br&gt;
By creating content in the form of blog posts, tutorials, or ebooks, you can help other people discover and learn new things and improve their skills.&lt;br&gt;
It is totally up to you whether you want to charge for it or not, but especially in the beginning, I would recommend creating something for free. Not only is it going to help you become a better writer, but it’s a good way to build up a reputation, it’s fun, and helping others is always a great form of motivation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Yourself&lt;/strong&gt;&lt;br&gt;
This is actually the reason why I started writing online. I wanted to do it for myself — to share my thoughts and get feedback on them. But oftentimes, writing has some sort of therapeutic effect on me. My mind is always full of ideas and thoughts, and writing them down really helps me in many situations.&lt;br&gt;
Don’t be afraid to share failure and things you regret but learned from. Life is not always sunny and there will always be people trying to drag others down. Even more so online, but don’t let them discourage you because when you write, you write for yourself!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Publicity&lt;/strong&gt;&lt;br&gt;
Another valid reason for writing online is to gain public attention — whether for yourself, your product, or your company. A lot of people certainly write in the hope of becoming famous. And platforms like Twitter, Instagram, etc. support this with their clap and like systems. These small rewards can really be addictive and also dangerous.&lt;br&gt;
I think it’s OK to write for the rush, but there are definitely better reasons for writing. I believe that if you start writing without looking at those likes too much, it will not only be less stressful to write, but it will pay off in the long term even more.&lt;br&gt;
You also shouldn’t try to copy others too much. It’s fine to get inspiration, but in the end, you should find your own way of writing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Money&lt;/strong&gt;&lt;br&gt;
Your writing can generate a substantial amount of (side) income. I’ve managed to generate several thousand dollars each month writing on Medium about programming and tech:&lt;br&gt;
But writing for money is an art in itself, in my opinion. It needs a special focus. The focus on making money. If you want to maximize your ROI, you need to align everything you write towards that goal. Things like reputation or education are just side effects — not the main purpose.&lt;br&gt;
When writing for money, you need to make sure that your articles are constantly read by a lot of people. And I mean lots and lots of them. At least on Medium, you need high exposure of your articles but also interesting content because the time each person spends reading your articles is an important factor for the algorithm that determines your payouts. Medium publications are a great way to increase the reach of your articles, so you should try to get accepted as an author for at least one major publication!&lt;br&gt;
Another option to get paid as a writer is applying for paid writer programs offered by internet businesses. Those are going to pay you a fixed amount, often between $100-$500 for one article. &lt;br&gt;
Focusing on money and ROI is not so important if you choose a paid writer program. Your focus should rather be on meeting the criteria of the program in question.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Final Thoughts&lt;/strong&gt;&lt;br&gt;
There are many good reasons to start writing online. Some require a special focus for you to be successful and almost all of them benefit from each other.&lt;/p&gt;

&lt;p&gt;But the best advice I can give you is to just start writing. Just do it, for whatever reason. Not tomorrow but today!&lt;/p&gt;

</description>
      <category>career</category>
      <category>writing</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
