<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10 Programs for Video Editing on Smartphones and PCs</title>
      <author>Explain Ninja</author>
      <pubDate>Wed, 10 Nov 2021 10:21:05 +0000</pubDate>
      <link>https://dev.to/explain_ninja/10-programs-for-video-editing-on-smartphones-and-pcs-3nl4</link>
      <guid>https://dev.to/explain_ninja/10-programs-for-video-editing-on-smartphones-and-pcs-3nl4</guid>
      <description>&lt;p&gt;When the video is shot, an exciting production stage to begin next is editing. Choosing an ideal editor is the first problem you will have to face if you do it on your favorite smartphone or your pc. We have collected ten editing programs for videos that will come in handy in processing &lt;a title="https://explain.ninja/blog/promotional-video-production-cost/" href="https://explain.ninja/blog/promotional-video-production-cost/" rel="noreferrer noopener"&gt;your videos&lt;/a&gt; asap. Check them out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kp8h6SvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/image_processing20200508-12292-d36i9w.gif" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 1" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kp8h6SvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/image_processing20200508-12292-d36i9w.gif" alt="10 Programs for Video Editing on Smartphones and PCs 1" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;
Incredible motion design by &lt;a title="https://explain.ninja/contact-us/" href="https://explain.ninja/contact-us/" rel="noreferrer noopener"&gt;Explain Ninja&lt;/a&gt;



&lt;h2&gt;How to choose some useful edit programs for videos?&lt;/h2&gt;

&lt;p&gt;For cool videos for TikTok or Instagram, it may be enough to use smartphone apps designed for editing on Android or iOS. Their functionality will be enough for basic editing and even simple work sound processing.&lt;/p&gt;

&lt;p&gt;And if you plan to shoot &amp;amp; edit &lt;a href="https://explain.ninja/video-for-business/" rel="noreferrer noopener"&gt;professional video explainers&lt;/a&gt;, advertisements, or other hour-long videos and want to work with video on a wide computer monitor, go to check some solid programs for PC.&lt;/p&gt;

&lt;h2&gt;Choose your top program for video edit&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;span&gt;Here are some ideas for mobile video lovers:&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;1) InShot&lt;/h3&gt;

&lt;p&gt;InShot today is one of the most famous and popular mobile video apps. It has every function you may need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cutting clips.&lt;/li&gt;
&lt;li&gt;Cropping a picture for different formats.&lt;/li&gt;
&lt;li&gt;Adding music and the ability to cut it into pieces to adjust the volume at the right moments, and so much more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also record voice directly in the application – for example, for &lt;a title="https://explain.ninja/process/" href="https://explain.ninja/process/" rel="noreferrer noopener"&gt;voiceover&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FgDkqJst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/inshot.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 2" src="https://res.cloudinary.com/practicaldev/image/fetch/s--FgDkqJst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/inshot.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 2" width="770" height="530"&gt;&lt;/a&gt;&lt;/p&gt;
Source: InShot



&lt;h3&gt;2) KineMaster&lt;/h3&gt;

&lt;p&gt;Try one of the most powerful mobile video editors out there. It is instead an advanced but, at the same time, quite easy-to-use video editor. You may work with several video tracks simultaneously, superimposing them on top of each other. You may also add handwritten text and record voice-overs in real-time. And, of course, all the basic set of options for a good video processing program: color settings, handy tools for cropping and scaling, as well as a variety of effects, stickers, and transitions are out there. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zefz9OVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/kinemaster.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 3" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zefz9OVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/kinemaster.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 3" width="770" height="530"&gt;&lt;/a&gt;&lt;/p&gt;
Source: KineMaster



&lt;h3&gt;3) Magisto&lt;/h3&gt;

&lt;p&gt;You don’t have to bother. Immediately create a video with a given theme in three easy steps. It’s easy to use, you simply import videos and photos, choose an editing style, add music from the app’s library, etc. Though some experienced users may not have enough editing control, this app will be a godsend for those new to video editing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--abZRUQwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/magisto.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 4" src="https://res.cloudinary.com/practicaldev/image/fetch/s--abZRUQwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/magisto.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 4" width="789" height="527"&gt;&lt;/a&gt;&lt;/p&gt;
Source: Magisto



&lt;h3&gt;4) FilmoraGo&lt;/h3&gt;

&lt;p&gt;FilmoraGo is an excellent editor for quick editing on the go. This app provides everything you may need. In addition to cutting videos or gluing pictures, you may apply filters, add music and change the speed. The video will be saved with a 1280 × 720 resolution. FilmoraGo is a great choice for editing videos for social media or home archives.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DwJiBYgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/fimora.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 5" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwJiBYgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/fimora.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 5" width="775" height="521"&gt;&lt;/a&gt;&lt;/p&gt;
Source: FilmoraGo



&lt;h3&gt;5) Adobe Premiere Rush&lt;/h3&gt;

&lt;p&gt;Adobe Premiere Rush is a complete editing studio on your smartphone. If you’ve ever worked with Adobe Creative Suite programs, you know what it is.&lt;/p&gt;

&lt;p&gt;Adobe Premiere Rush is available for both smartphones and PCs for editing on multiple devices. All the essential professional tools for video editing, color adjustments, and audio work are included.&lt;/p&gt;

&lt;p&gt;And for an additional fee, you may download a variety of effects and titles from Adobe Stock.&lt;/p&gt;

&lt;p&gt;It will also be ideal for advanced video editor users and those already working with Adobe products. It is suitable for creating almost any content, except for stories and photo collages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GHe7Mnn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/rush.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 6" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GHe7Mnn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/rush.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 6" width="880" height="522"&gt;&lt;/a&gt;&lt;/p&gt;
Source: Adobe



&lt;p&gt;&lt;em&gt;&lt;span&gt;Here are also some ideas for those who need professional programs for PC in addition to effective mobile video editing apps:&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;6) PowerDirector&lt;/h3&gt;

&lt;p&gt;PowerDirector is a powerful video editor for working with videos and photos integrated with Google Disk cloud storage. In addition to standard tools, PowerDirector allows you to use chroma key and export video in 4K format. You can access an entire library of filters, titles, and effects for extra money, but the free selection is impressive.&lt;/p&gt;

&lt;p&gt;It will be an ideal tool for advanced editing software users and those working with professional video material.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UU0V_VeP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/director.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 7" src="https://res.cloudinary.com/practicaldev/image/fetch/s--UU0V_VeP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/director.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 7" width="695" height="320"&gt;&lt;/a&gt;&lt;/p&gt;
Source: PowerDirector



&lt;h3&gt;7) Splice&lt;/h3&gt;

&lt;p&gt;Here you may use multiple audio tracks, add music from the built-in collection, and select the appropriate quality when exporting. The app is an excellent functional and intuitive video editor for all the rest. In the app, you may crop videos, overlay text, add transitions, and add professional touches.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIh9nqF3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/splice.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 8" src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIh9nqF3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/splice.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 8" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;
Source: Splice



&lt;h3&gt;8) DaVinci Resolve&lt;/h3&gt;

&lt;p&gt;The interface looks complicated for a beginner, but you can get used to it. Originally it was developed for color correction. Today it offers many tools for adjusting the picture and sound. If you need to progress video editing, DaVinci Resolve is a great starting point.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2t870nxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/davinci.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 9" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2t870nxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/davinci.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 9" width="880" height="545"&gt;&lt;/a&gt;&lt;/p&gt;
Source: DaVinci Resolve



&lt;h3&gt;9) Final Cut Pro&lt;/h3&gt;

&lt;p&gt;Final Cut Pro is a powerful professional video editor created by Apple. The program has a simple, high-speed, and very smooth interface. Naturally, it is only available for Mac owners; there are no versions for Windows and Linux. Final Cut Pro may also offer you the most advanced organizing tools of any professional video editing application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRVOhjW1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/pro.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 10" src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRVOhjW1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/pro.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 10" width="880" height="552"&gt;&lt;/a&gt;&lt;/p&gt;
Source: Final Cut Pro



&lt;h3&gt;10) Adobe Premiere Pro&lt;/h3&gt;

&lt;p&gt;Adobe Premiere Pro is known as one of the top video editing software. If you are familiar with any other Adobe products, you may quickly master the interface. Almost all operations can be performed using hot keyboard commands. If you are new to the program, immediately set them up for those installation operations that you use most often – over time this will save a lot of time working. Good luck!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hlKRgQxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/adobe-1.jpg" class="article-body-image-wrapper"&gt;&lt;img title="10 Programs for Video Editing on Smartphones and PCs 11" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hlKRgQxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://explain.ninja/wp-content/uploads/2021/11/adobe-1.jpg" alt="10 Programs for Video Editing on Smartphones and PCs 11" width="773" height="514"&gt;&lt;/a&gt;&lt;/p&gt;
Source: Adobe



&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you still don’t like editing videos on your phone, you just haven’t tried an ideal app for this yet. You may process your incredible videos on your smartphone – including making films, doing professional editing, and producing expensive advertising content. Or you may edit your video material on your favorite machine.&lt;/p&gt;

&lt;p&gt;With a selection of the best programs for video editing for smartphones based on Android and iOs or PCs running on Windows or Linux, or Apple devices, it will be easier for you to test, experiment, and choose what you like the most.&lt;/p&gt;

&lt;p&gt;Anyway, you are always welcome to hire us for &lt;a href="https://explain.ninja/contact-us/"&gt;professional business video editing&lt;/a&gt;.&lt;/p&gt;



&lt;br&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Training BERT Text Classifier on a Tensor Processing Unit</title>
      <author>Abid</author>
      <pubDate>Wed, 10 Nov 2021 09:44:12 +0000</pubDate>
      <link>https://dev.to/kingabzpro/training-bert-text-classifier-on-a-tensor-processing-unit-3pg</link>
      <guid>https://dev.to/kingabzpro/training-bert-text-classifier-on-a-tensor-processing-unit-3pg</guid>
      <description>&lt;p&gt;Training Hugging Face's most famous model on TPU for Tunisian Arabizi Social Media Sentiment Analysis. 🚀&lt;br&gt;
Link: &lt;a href="https://zindi.africa/learn/training-bert-text-classifier-on-a-tensor-processing-unit"&gt;https://zindi.africa/learn/training-bert-text-classifier-on-a-tensor-processing-unit&lt;/a&gt;&lt;/p&gt;

</description>
      <category>zindi</category>
      <category>machinelearning</category>
      <category>huggingface</category>
      <category>nlp</category>
    </item>
    <item>
      <title>Top 7 React Developer Tools to Use in 2021 (With Bonus!)</title>
      <author>Sunil Joshi</author>
      <pubDate>Wed, 10 Nov 2021 09:39:37 +0000</pubDate>
      <link>https://dev.to/suniljoshi19/top-7-react-developer-tools-to-use-in-2021-with-bonus-58i4</link>
      <guid>https://dev.to/suniljoshi19/top-7-react-developer-tools-to-use-in-2021-with-bonus-58i4</guid>
      <description>&lt;p&gt;Whether you are just starting to learn React or you’re already full-time working professionally in it, there are many tools (both free and paid) that you can use in your personal or professional projects. They are always beneficial as they help speed up the workflow or get things done quickly.&lt;/p&gt;

&lt;p&gt;For React developers to take full advantage of the library so that coding becomes easier and faster, here are 7 of the best tools out there that you as a React dev should bookmark and use as a reference whenever needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-reactide"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://reactide.io/"&gt;Reactide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;What is it?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Reactide is a dedicated IDE for React web application development.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you ever wanted to have a separate IDE (not just an editor) just to fulfill all of your React development needs then Reactide is the tool you need right now. It is the first IDE ever built and released just for React web application development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Extensible: it runs an integrated Node server and custom browser simulator eliminating the need to configure any servers or build tools.&lt;/p&gt;

&lt;p&gt;Easy configuration: you can run a single command to streamline universal configuration.&lt;/p&gt;

&lt;p&gt;Components visualization: you can navigate through a live representation of your app’s architecture.&lt;/p&gt;

&lt;p&gt;Open-sourced: the code for this powerful tool is hosted on its GitHub repo so you can not only download it for Mac, Windows, and Linux platforms but also contribute to it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-bit"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://bit.dev/"&gt;Bit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;What is it?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Bit is a standard infrastructure for components for autonomous micro-frontend/web app development.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bit is a collection of almost everything you and your team may need to have fast releases, great consistency, and collaboration at a high scale to build components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Split app development: with Bit, there is no need to do monolithic development. Instead, you work on modular apps composed of features built by teams working simultaneously.&lt;/p&gt;

&lt;p&gt;Hosting and resuing: you and your team can build together a reusable component for your organization and then collaborate on new builds in the cloud.&lt;/p&gt;

&lt;p&gt;Continuous release and component upgrades: you can deliver updates to app components with decoupled versions and release pipelines.&lt;br&gt;
Great at managing docs: Bit makes sure every component is documented, organized, and discoverable by anyone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-storybook"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;What is it?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Storybook is an open-source tool for building UI components and pages in isolation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It helps very much in streamlining UI development along with testing components and documenting them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Durable interfaces: it comes with a sandbox environment to build the UIs you need in isolation so that more of the edge cases and states of an element is covered.&lt;/p&gt;

&lt;p&gt;Testing UI easily: every time you write a story, you get a test case along with it. Along with this, you can reuse stories in your unit tests.&lt;/p&gt;

&lt;p&gt;Document and share UI: everything in Storybook is searchable with an option to share each story with your teammates for a single source of truth.&lt;/p&gt;

&lt;p&gt;Available for multiple tech stacks: along with React, Storybook is also available for Vue, Angular, Web Components, Ember, HTML, and more!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-react-developer-tools"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en"&gt;React Developer Tools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;What is it?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;React Developer Tools adds React debugging tools to the Chrome Developer Tools.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This extension is so popular and useful that it’s recommended to install and use by everyone starting out to learn React. With extensive debugging with this tool, you can expect better bug busting throughout the app development process!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;br&gt;
Inspection: you can inspect the individual React component hierarchies in the Chrome Developer Tools.&lt;/p&gt;

&lt;p&gt;The components tab: shows you all of the root components that were rendered on the page along with the sub-components if available.&lt;/p&gt;

&lt;p&gt;The profiler tab: this tab allows you to record performance information.&lt;/p&gt;

&lt;p&gt;Deeper inspection: you can inspect and edit the selected component’s current props and state them in the panel right from this extension.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-react-cosmos"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://reactcosmos.org/"&gt;React Cosmos&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;What is it?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;React Cosmos is a sandbox for developing and testing UI components in isolation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With React Cosmos you don’t need to settle for the boring localhost:3000 dev environment and you can instead test and develop all components in isolation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Visual TDD: with Test Driven Development in React Cosmos you can develop one component at a time, isolate the UI and then iterate on it quickly. No need to reload the app on every change.&lt;/p&gt;

&lt;p&gt;Component library: it doesn’t matter if it’s a blank state or an edge case, you can bookmark each component state. The component library includes will organise everything you do.&lt;/p&gt;

&lt;p&gt;Open platform: it’s not used just for developing and testing UI components but it can also be used for snapshot and visual regression testing, as well as custom integrations.&lt;/p&gt;

&lt;p&gt;Maintainability: with reusable components, you can not only create awesome interfaces but also maintain the quality at scale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-belle"&gt;
  &lt;/a&gt;
  6. &lt;a href="http://nikgraf.github.io/belle/#/"&gt;Belle&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;What is it?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Belle uses a set of configurable React components with great UX.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With Belle, you can never be in doubt of the overall experience of your components. It provides you a set of commonly used React components like Toggle, ComboBox, Rating, TextInput, Button, Card, Select, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;br&gt;
Versatile and customisable: every component is optimised efficiently to work on both mobile and desktop devices.&lt;/p&gt;

&lt;p&gt;Component library: it doesn’t matter if it’s a blank state or an edge case, you can bookmark each component state. The component library includes will organise everything you do.&lt;/p&gt;

&lt;p&gt;Open platform: it’s not used just for developing and testing UI components but it can also be used for snapshot and visual regression testing, as well as custom integrations.&lt;/p&gt;

&lt;p&gt;Maintainability: with reusable components, you can not only create awesome interfaces but also maintain the quality at scale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-react-360"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/facebook/react-360"&gt;React 360&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;What is it?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;React 360 is a framework for the creation of interactive 360 experiences that run in your web browser.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And yes, the same company that builds React is responsible for its VR version i.e Facebook. It uses three.js to facilitate lower-level WebVR and WebGL APIs to create a VR experience on the browser.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cross-platform development: you can create VR experiences to run on desktops, mobiles, and the web without much change in different platforms.&lt;/p&gt;

&lt;p&gt;3D media: it has environment features that handle all the immersive media assets and configurations. That means you as a 360 developer will have precise control.&lt;/p&gt;

&lt;p&gt;Enhanced performance: the overall architecture is designed.&lt;br&gt;
Surfaces by React 360: this allows you to integrate UI panels into your apps by creating 2D interfaces that embed on 3D spaces.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-tools"&gt;
  &lt;/a&gt;
  Bonus Tools!
&lt;/h2&gt;

&lt;p&gt;Apart from the above 7 tools, we also got you three more! Let’s take a very quick look at them:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rekit.js.org/"&gt;&lt;strong&gt;Rekit:&lt;/strong&gt;&lt;/a&gt;  it’s a toolkit to build scalable web applications with React, &lt;a href="https://redux.js.org/"&gt;Redux&lt;/a&gt;, and &lt;a href="https://reactrouter.com/"&gt;React-router&lt;/a&gt;. It’s an all-in-one solution for creating modern React apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://testing-library.com/docs/react-testing-library/intro"&gt;&lt;strong&gt;React Testing Library:&lt;/strong&gt;&lt;/a&gt; it is a lightweight solution for testing React components. It provides utility functions on top of react-dom and react-dom/&lt;a href="https://reactjs.org/docs/test-utils.html"&gt;test-utils&lt;/a&gt;, in a way that encourages better testing practices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.plasmic.app/"&gt;&lt;strong&gt;Plasmic:&lt;/strong&gt;&lt;/a&gt; it’s an all-in-one tool to visually build pages and components, integrate them to your React code and then set/push them to production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wrappixel.com/"&gt;&lt;strong&gt;Wrappixel:&lt;/strong&gt;&lt;/a&gt; it’s a one-stop solution for your &lt;a href="https://www.wrappixel.com/templates/category/react-templates/"&gt;react template&lt;/a&gt; needs. It provides both free and premium versions for backend interfaces.&lt;/p&gt;

&lt;p&gt;And that was it! We hope these tools will help you in your upcoming React projects. Keep on exploring the vast ecosystem React provides by keeping a tab on their &lt;a href="http://reactjs.org/"&gt;official website.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Elon Musk News Api</title>
      <author>ROHAN KADAM</author>
      <pubDate>Wed, 10 Nov 2021 09:39:18 +0000</pubDate>
      <link>https://dev.to/rohan2596/elon-musk-news-api-113e</link>
      <guid>https://dev.to/rohan2596/elon-musk-news-api-113e</guid>
      <description>&lt;p&gt;Hello 👋 DevCommuinty,Checkout my news api on Elon Musk via &lt;a class="mentioned-user" href="https://dev.to/rapid_api"&gt;@rapid_api&lt;/a&gt;
 &lt;br&gt;
&lt;a href="https://rapidapi.com/rohankadam965@gmail.com/api/elon-musk-news"&gt;https://rapidapi.com/rohankadam965@gmail.com/api/elon-musk-news&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please Like💕, Share and Follow for more such amazing products&lt;/p&gt;

</description>
      <category>api</category>
      <category>programming</category>
      <category>beginners</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What is Github Copilot? Will it take your jobs !?</title>
      <author>Nomadev💻🔱</author>
      <pubDate>Wed, 10 Nov 2021 09:27:42 +0000</pubDate>
      <link>https://dev.to/thenomadevel/what-is-github-copilot-will-it-take-your-jobs--33p5</link>
      <guid>https://dev.to/thenomadevel/what-is-github-copilot-will-it-take-your-jobs--33p5</guid>
      <description>&lt;p&gt;Hello, everyone  &lt;a href="https://twitter.com/thenomadevel"&gt;Nomadev&lt;/a&gt;  here, back with another blog on tech. Today we will be discussing in brief about the most fancy term around, nowadays - &lt;a href="https://copilot.github.com/"&gt;&lt;strong&gt;Github Copilot&lt;/strong&gt;&lt;/a&gt;. So if you have been paying attention to the latest tech updates, you have probably seen  &lt;a href="https://github.com/"&gt;Github&lt;/a&gt;  to ship the new feature and it's a VS code extension Github Copilot.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLj0WKq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636527668307/gz_iGt6da.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLj0WKq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636527668307/gz_iGt6da.gif" alt="start.gif" width="400" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;How it works&lt;/li&gt;
&lt;li&gt;Does GitHub Copilot write perfect code?&lt;/li&gt;
&lt;li&gt;Will it take dev jobs??&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-introduction"&gt;
  &lt;/a&gt;
  1. Introduction
&lt;/h2&gt;

&lt;p&gt;In simple it is a vs code extension by which you can convert your comments into code. GitHub Copilot understands significantly more context than most code assistants. So, whether it’s in a docstring, comment, function name, or the code itself, GitHub Copilot uses the context you’ve provided and synthesizes code to match. A tool powered by gpt3 capable of writing code automatically all you have to do is write a descriptive function name or some comments and it will automatically fill in the implementation details for you and it's not just inserting a snippet this is actual novel code that has never been seen before.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OL6Sbt3W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636533211218/cUlxmjG_1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OL6Sbt3W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636533211218/cUlxmjG_1.gif" alt="copilot.gif" width="640" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-how-it-works"&gt;
  &lt;/a&gt;
  2. How it works?
&lt;/h2&gt;

&lt;p&gt;GitHub Copilot can assemble code from user comments and predicts your code by just reading the function name you have declared.  It looks at the code you've already written in your project as context and attempts to generate new code to match it perfectly. &lt;/p&gt;

&lt;p&gt;The GitHub Copilot editor extension sends your comments and code to the GitHub Copilot service, which then uses OpenAI Codex to synthesize and suggest code. With Copilot, all I have to do is write a function name and it implements the function body for me automatically if I'm not perfectly happy with the implementation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HJGbN2eS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636533077691/rw9QcMLIy.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HJGbN2eS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636533077691/rw9QcMLIy.webp" alt="copilot.webp" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It actually works by reading through all the open-source code on the GitHub repos worldwide and then collecting the data and trying to find the best possible code related to it! It is said to work great with repetitive code patterns so users can let it generate the rest of the code. The AI assistant can also help you learn a new programming language. The deep learning model behind the data is gpt-3 or generative pre-trained transformer 3 which is easily one of the most impressive ai products ever developed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-does-github-copilot-write-perfect-code"&gt;
  &lt;/a&gt;
  3. Does GitHub Copilot write perfect code?
&lt;/h2&gt;

&lt;p&gt;We can't say that as GitHub Copilot tries to understand your intent and to generate the best code it can, but the code it suggests may not always work or even make sense. While devs are working hard to make GitHub Copilot better, code suggested by GitHub Copilot should be carefully tested, reviewed, and vetted, like any other code. &lt;/p&gt;

&lt;p&gt;It works best when you divide your code into small functions, use meaningful names for functions parameters, and write good docstrings and comments as you go. It also seems to do best when it’s helping you navigate unfamiliar libraries or frameworks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sgdYu5EI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636535492372/ouZWn6Bxn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sgdYu5EI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636535492372/ouZWn6Bxn.jpeg" alt="perfect.jpg" width="430" height="253"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-will-it-take-dev-jobs-"&gt;
  &lt;/a&gt;
  4. Will it take dev jobs ??
&lt;/h2&gt;

&lt;p&gt;So if you're wondering, will this take over our jobs in the future It may be a ways off from that, but it is improving, and I think what this does is it makes us Faster coders.&lt;br&gt;
It's like, I always have a senior, but I always have stack overflow right next to me saying, Hey, maybe this is what you want, Maybe this is what you want!,  So it's more of a Smart Suggester. And that's why they call it a copilot, right? It's not the pilot.&lt;br&gt;
It's a copilot. So when we talk about this, there's probably responsibility.&lt;br&gt;
Copilot autocompletes code snippets, suggests new lines of code, and can even write whole functions based on the description provided. It will make things easy for developers, that's it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VzD-Z75a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636535609049/ihek4b5x2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VzD-Z75a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636535609049/ihek4b5x2.jpeg" alt="jobs.jpg" width="800" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also follow me on  &lt;a href="https://twitter.com/thenomadevel"&gt;Twitter&lt;/a&gt; where I post daily threads on Programming, Open Source, and on Getting better remote job opportunities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ds3CGr4S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636535713041/l_l_GhFZU.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ds3CGr4S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636535713041/l_l_GhFZU.gif" alt="twitter.gif" width="400" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-a-few"&gt;
  &lt;/a&gt;
  Here are a few
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://twitter.com/thenomadevel/status/1448187696367636483"&gt;Top 10 Websites where you can master programming for Free&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/thenomadevel/status/1453810075445841920"&gt;TOP 7 digit seven VS Code Extension for Developers&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://twitter.com/thenomadevel/status/1451082698500362244"&gt;The Best VS Code Extensions to Supercharge Your Git&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/thenomadevel/status/1450355811268448261"&gt;Top 5 Sites To Find Remote Developer Jobs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://twitter.com/thenomadevel/status/1449253111235629057"&gt;MOST USED GIT COMMANDS YOU MUST LEARN &lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to like, comment, and follow so that you don't miss the amazing content.&lt;br&gt;
Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UpsRUSQv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636535784823/qFdQIg54G.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UpsRUSQv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636535784823/qFdQIg54G.gif" alt="follow.gif" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>opensource</category>
      <category>github</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to track changes in ngDoCheck with KeyValueDiffer</title>
      <author>Dharmen Shah</author>
      <pubDate>Wed, 10 Nov 2021 09:25:03 +0000</pubDate>
      <link>https://dev.to/shhdharmen/how-to-track-changes-in-ngdocheck-with-keyvaluediffer-1la7</link>
      <guid>https://dev.to/shhdharmen/how-to-track-changes-in-ngdocheck-with-keyvaluediffer-1la7</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;When we use &lt;code&gt;ngDoCheck&lt;/code&gt; to detect changes, we need to make sure that our implementation is extremely lightweight and fast, so it doesn’t affect user-experience. In this tutorial, we will learn how to efficiently track and process those changes using &lt;code&gt;KeyValueDiffer&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#-raw-ngdocheck-endraw-lifecycle-hook"&gt;
  &lt;/a&gt;
  &lt;code&gt;ngDoCheck&lt;/code&gt; life-cycle hook
&lt;/h2&gt;

&lt;p&gt;The official definition of this life-cycle hook goes like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"Detect and act upon changes that Angular can't or won't detect on its own. Called immediately after ngOnChanges() on every change detection run, and immediately after ngOnInit() on the first run."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Simply put, Angular tracks binding inputs by object reference. It means that if an object reference hasn’t changed, the binding change is not detected and change detection is not executed. This is where we need &lt;a href="https://angular.io/api/core/DoCheck"&gt;&lt;code&gt;ngDoCheck&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#practical-usage"&gt;
  &lt;/a&gt;
  Practical usage
&lt;/h3&gt;

&lt;p&gt;It is very important to understand when to use &lt;code&gt;ngDoCheck&lt;/code&gt; life-cycle hook when working with the code and how it’s different from &lt;code&gt;ngOnChanges&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, we are going to consider two components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;my-app&lt;/code&gt; - Has the basic layout and &lt;code&gt;rates&lt;/code&gt; property, which represents the rates of INR for 1 USD over time.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app-rates&lt;/code&gt; - Accepts single &lt;code&gt;@Input&lt;/code&gt; for &lt;code&gt;rates&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Our goal is to track changes of &lt;code&gt;rates.inr&lt;/code&gt; and display the same in &lt;code&gt;app-rates&lt;/code&gt;. Let’s start with coding:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// app.component.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`
  &amp;lt;button (click)="updateRates()"&amp;gt;Update rates&amp;lt;/button&amp;gt;
  &amp;lt;div&amp;gt;
      &amp;lt;h4&amp;gt;{{ 1 | currency }} = {{ rates.inr | currency: 'INR' }}&amp;lt;/h4&amp;gt;
      &amp;lt;app-rates [rates]="rates"&amp;gt;&amp;lt;/app-rates&amp;gt;
  &amp;lt;/div&amp;gt;
  `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;updateRates&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;my-app&lt;/code&gt;’s code is basic. It just displays the &lt;code&gt;rates&lt;/code&gt; and we have also given a &lt;code&gt;button&lt;/code&gt; which will update the &lt;code&gt;rates&lt;/code&gt; by calling &lt;code&gt;updateRates&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s look at &lt;code&gt;app-rates&lt;/code&gt;’s code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// rates.component.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;DoCheck&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;OnChanges&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-rates&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`
  &amp;lt;span
    *ngIf="diff !== undefined; else noDiff"
    class="badge"
    [class.bg-success]="diff &amp;gt; 0"
    [class.bg-danger]="diff &amp;lt; 0"
  &amp;gt;
    {{ diff | number: '1.0-2' }}
  &amp;lt;/span&amp;gt;
  &amp;lt;ng-template #noDiff&amp;gt;
    &amp;lt;span class="badge bg-secondary"&amp;gt;
      No difference
    &amp;lt;/span&amp;gt;
  &amp;lt;/ng-template&amp;gt;
  `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;RatesComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;app-rates&lt;/code&gt;’s template only displays &lt;code&gt;diff&lt;/code&gt;, which represents how much &lt;code&gt;rates.inr&lt;/code&gt; has changed since last time. And if there is no change, it will show “No difference” text.&lt;/p&gt;

&lt;p&gt;Now, to simply get &lt;code&gt;diff&lt;/code&gt;, we will need to calculate the difference between new value and old value.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-not-raw-ngonchanges-endraw-"&gt;
  &lt;/a&gt;
  Why not &lt;code&gt;ngOnChanges&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;We may think to do this with &lt;code&gt;ngOnChanges&lt;/code&gt;. Let’s first see what changes we are getting in &lt;code&gt;ngOnChanges&lt;/code&gt; life-cycle hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;RatesComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnChanges&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Is first change?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstChange&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let’s keep an eye on the console and click on the “Update rates” button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VrzL1jhk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/hn7bVJt.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VrzL1jhk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/hn7bVJt.gif" alt="console output on click of Update Rates button" title="console output on click of Update Rates button" width="600" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that &lt;code&gt;ngOnChanges&lt;/code&gt; is getting called only when the &lt;code&gt;rates&lt;/code&gt; is assigned for the first time. This is happening because we are not changing the &lt;code&gt;rates&lt;/code&gt; object by reference from &lt;code&gt;my-app&lt;/code&gt;. If we write something like below in &lt;code&gt;my-app&lt;/code&gt;, then &lt;code&gt;ngOnChanges&lt;/code&gt; will capture the changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;updateRatesByReference&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#usage-of-raw-ngdocheck-endraw-"&gt;
  &lt;/a&gt;
  Usage of &lt;code&gt;ngDoCheck&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Unlike &lt;code&gt;ngOnChanges&lt;/code&gt;, &lt;code&gt;ngDoCheck&lt;/code&gt; tracks all the changes, whether they are by reference or not and even more. Let’s utilise it in our example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;RatesComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;DoCheck&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;oldRate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;ngDoCheck&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inr&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oldRate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inr&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oldRate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oldRate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we introduced a new property called &lt;code&gt;oldRate&lt;/code&gt;. And in &lt;code&gt;ngDoCheck&lt;/code&gt; we are checking if the new &lt;code&gt;rates.inr&lt;/code&gt; is not same as &lt;code&gt;oldRate&lt;/code&gt;, then it should update the &lt;code&gt;diff&lt;/code&gt;. Let’s look at the output now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bCjS2r67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/OgQkfa5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bCjS2r67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/OgQkfa5.gif" alt="output after ngDoCheck" title="output after ngDoCheck" width="600" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For more on &lt;code&gt;ngDoCheck&lt;/code&gt;, I would recommend you to read the article: &lt;a href="https://indepth.dev/posts/1131/if-you-think-ngdocheck-means-your-component-is-being-checked-read-this-article"&gt;If you think &lt;code&gt;ngDoCheck&lt;/code&gt; means your component is being checked — read this article - Angular inDepth&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This example is available on &lt;a href="https://stackblitz.com/edit/angular-ivy-tcrchs?file=src/app/rates/rates.component.ts"&gt;stackblitz&lt;/a&gt;. This code gives the result as expected. But Angular provides few utilities to efficiently track changes made to an object over time. Let’s look into those.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keyvaluediffer-and-utilities"&gt;
  &lt;/a&gt;
  KeyValueDiffer and utilities
&lt;/h2&gt;

&lt;p&gt;There are a few interfaces and a service involved when we want to use &lt;code&gt;KeyValueDiffer&lt;/code&gt;. Below is the illustration which covers them all:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RT408IDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/e7BjYGp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RT408IDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/e7BjYGp.jpg" alt="KeyValueDiffer flow" title="KeyValueDiffer flow" width="528" height="922"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below is the summary:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We will inject the service &lt;a href="https://angular.io/api/core/KeyValueDiffers"&gt;&lt;code&gt;KeyValueDiffers&lt;/code&gt;&lt;/a&gt; and use its &lt;a href="https://angular.io/api/core/KeyValueDiffers#find"&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method to get a &lt;code&gt;KeyValueDifferFactory&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Next, we will use  &lt;a href="https://angular.io/api/core/KeyValueDifferFactory"&gt;&lt;code&gt;KeyValueDifferFactory&lt;/code&gt;&lt;/a&gt;’s &lt;a href="https://angular.io/api/core/KeyValueDifferFactory#create"&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt; method to create &lt;a href="https://angular.io/api/core/KeyValueDiffer"&gt;&lt;code&gt;KeyValueDiffer&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;We will track the changes through the &lt;code&gt;KeyValueDiffer&lt;/code&gt;’s &lt;a href="https://angular.io/api/core/KeyValueDiffer#diff"&gt;&lt;code&gt;diff()&lt;/code&gt;&lt;/a&gt; method. It returns &lt;code&gt;KeyValueChanges&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;And at last, we will analyse the changes from &lt;a href="https://angular.io/api/core/KeyValueChanges"&gt;&lt;code&gt;KeyValueChanges&lt;/code&gt;&lt;/a&gt; using one of its &lt;a href="https://angular.io/api/core/KeyValueChanges#methods"&gt;methods&lt;/a&gt;, for example &lt;a href="https://angular.io/api/core/KeyValueChanges#foreachchangeditem"&gt;&lt;code&gt;forEachChangedItem&lt;/code&gt;&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;All methods provide access to change-record &lt;code&gt;KeyValueChangeRecord&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://angular.io/api/core/KeyValueChangeRecord"&gt;&lt;code&gt;KeyValueChangeRecord&lt;/code&gt;&lt;/a&gt; interface is a record representing the item change information&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#practical-usage"&gt;
  &lt;/a&gt;
  Practical usage
&lt;/h3&gt;

&lt;p&gt;We will use the above utilities in the &lt;code&gt;app-rates&lt;/code&gt; which we created previously. We will start with blank &lt;code&gt;ngDoCheck&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;RatesComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;DoCheck&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;ngDoCheck&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our goal here is to track the changes made to &lt;code&gt;rates&lt;/code&gt; property with &lt;code&gt;KeyValueDiffer&lt;/code&gt; utilities. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#property-of-type-raw-keyvaluediffer-endraw-"&gt;
  &lt;/a&gt;
  Property of type &lt;code&gt;KeyValueDiffer&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Let’s first create a &lt;code&gt;differ&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;differ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;KeyValueDiffer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As the &lt;code&gt;rates&lt;/code&gt; object has the key of type &lt;code&gt;string&lt;/code&gt; and value of type &lt;code&gt;number&lt;/code&gt;, we are passing two types, &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt; respectively with &lt;code&gt;KeyValueDiffer&lt;/code&gt;. You can change this as per your need.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#inject-raw-keyvaluediffers-endraw-service"&gt;
  &lt;/a&gt;
  Inject &lt;code&gt;KeyValueDiffers&lt;/code&gt; service
&lt;/h4&gt;

&lt;p&gt;Next, let’s inject the &lt;code&gt;KeyValueDiffers&lt;/code&gt; service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;_differsService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;KeyValueDiffers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#initialize-raw-keyvaluediffer-endraw-"&gt;
  &lt;/a&gt;
  Initialize &lt;code&gt;KeyValueDiffer&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;It’s time to initialize the &lt;code&gt;differ&lt;/code&gt; from service. We will do it in &lt;code&gt;ngOnInit&lt;/code&gt; life-cycle hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;differ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_differsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, first we are calling the &lt;code&gt;find()&lt;/code&gt; method. This method internally first checks if the object passed as argument is either a &lt;code&gt;Map&lt;/code&gt; or JSON and if the check is successful then it returns &lt;code&gt;KeyValueDiffersFactory&lt;/code&gt;. You can checkout it’s source-code on &lt;a href="https://github.com/angular/angular/blob/b1c028677f45e704342e81d7957d024c137340ce/packages/core/src/change_detection/differs/keyvalue_differs.ts#L179"&gt;GitHub&lt;/a&gt;, but overall, below is how it looks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;KeyValueDifferFactory&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;factories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;supports&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kv&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Cannot find a differ supporting object '&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;kv&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After &lt;code&gt;find()&lt;/code&gt;, we are calling the &lt;code&gt;create()&lt;/code&gt; method of &lt;code&gt;KeyValueDiffersFactory&lt;/code&gt;, which creates a &lt;code&gt;KeyValueDiffer&lt;/code&gt; object.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#track-changes-in-raw-ngdocheck-endraw-"&gt;
  &lt;/a&gt;
  Track changes in &lt;code&gt;ngDoCheck&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Next, we will use the &lt;code&gt;differ&lt;/code&gt; and call it’s &lt;code&gt;diff()&lt;/code&gt; method inside &lt;code&gt;ngDoCheck&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ngDoCheck&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;differ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;differ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;diff()&lt;/code&gt; method returns &lt;code&gt;KeyValueChanges&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;. As mentioned earlier &lt;code&gt;KeyValueChanges&lt;/code&gt; provides methods to track all the changes, additions, and removals.&lt;/p&gt;

&lt;p&gt;In our case, we need to track changes made to &lt;code&gt;rates&lt;/code&gt;, so we will use &lt;code&gt;forEachChangedItem()&lt;/code&gt; and calculate the &lt;code&gt;diff&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ngDoCheck&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;differ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;differ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEachChangedItem&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final code of &lt;code&gt;app-rates&lt;/code&gt; looks like below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-rates&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`
  &amp;lt;span
    *ngIf="diff !== undefined; else noDiff"
    class="badge"
    [class.bg-success]="diff &amp;gt; 0"
    [class.bg-danger]="diff &amp;lt; 0"
  &amp;gt;
    {{ diff | number: '1.0-2' }}
  &amp;lt;/span&amp;gt;
  &amp;lt;ng-template #noDiff&amp;gt;
    &amp;lt;span class="badge bg-secondary"&amp;gt;
      No difference
    &amp;lt;/span&amp;gt;
    &amp;lt;/ng-template&amp;gt;
  `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;RatesComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;DoCheck&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;inr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;oldRate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;differ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;KeyValueDiffer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;_differsService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;KeyValueDiffers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;differ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_differsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;ngDoCheck&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;differ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;differ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEachChangedItem&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This example is also available on &lt;a href="https://stackblitz.com/edit/angular-ivy-nwzydo?file=src/app/rates/rates.component.ts"&gt;stackblitz&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We first started with a brief intro to &lt;a href="https://angular.io/api/core/DoCheck"&gt;&lt;code&gt;ngDoCheck&lt;/code&gt;&lt;/a&gt;. Then we learned the utilities needed to track the changes, i.e. interfaces &lt;a href="https://angular.io/api/core/KeyValueDiffer"&gt;&lt;code&gt;KeyValueDiffer&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://angular.io/api/core/KeyValueChanges"&gt;&lt;code&gt;KeyValueChanges&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://angular.io/api/core/KeyValueChangeRecord"&gt;&lt;code&gt;KeyValueChangeRecord&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://angular.io/api/core/KeyValueDifferFactory"&gt;&lt;code&gt;KeyValueDifferFactory&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://angular.io/api/core/KeyValueDiffers"&gt;&lt;code&gt;KeyValueDiffers&lt;/code&gt;&lt;/a&gt; service.&lt;/p&gt;

&lt;p&gt;Finally, we implemented it all in the code and tracked the changes made to the &lt;code&gt;rates&lt;/code&gt; object over time using &lt;a href="https://angular.io/api/core/KeyValueChanges#forEachChangedItem"&gt;&lt;code&gt;KeyValueChanges.forEachChangedItem&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This strategy is also used by Angular’s built-in directive &lt;a href="https://angular.io/api/common/NgStyle"&gt;&lt;code&gt;ngStyle&lt;/code&gt;&lt;/a&gt;, you can check it’s code on &lt;a href="https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_style.ts"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this tutorial, we learned about tracking changes made to an object. It is also possible to track changes made to an array. For that, you will need to use &lt;a href="https://angular.io/api/core/IterableDiffers"&gt;&lt;code&gt;IterableDiffers&lt;/code&gt;&lt;/a&gt; service and related interfaces in the same manner. For more on it, checkout &lt;a href="https://angular.io/api/common/NgClass"&gt;&lt;code&gt;ngClass&lt;/code&gt;&lt;/a&gt;’s code on &lt;a href="https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_class.ts"&gt;GitHub&lt;/a&gt;, where the Angular team have used &lt;code&gt;IterableDiffers&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>ReactJS Tips &amp; Tricks: Avoid Nested Render Functions</title>
      <author>Helder Burato Berto</author>
      <pubDate>Wed, 10 Nov 2021 09:22:45 +0000</pubDate>
      <link>https://dev.to/helderburato/reactjs-tips-tricks-avoid-nested-render-functions-324</link>
      <guid>https://dev.to/helderburato/reactjs-tips-tricks-avoid-nested-render-functions-324</guid>
      <description>&lt;p&gt;A common thing I noticed in a lot of projects I worked on is the &lt;code&gt;Nested Render Functions&lt;/code&gt; approach to render UI elements.&lt;/p&gt;

&lt;p&gt;Let's dive into this approach and how to change in a better way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-nested-render-functions"&gt;
  &lt;/a&gt;
  What are Nested Render Functions?
&lt;/h2&gt;

&lt;p&gt;Basically, it is when you declare a part of UI render in a function inside of a component, such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;renderSection&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/section&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;renderSection&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since components are just functions, it is the same as declaring new components inside the current &lt;code&gt;Component&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#extracting-to-a-new-component"&gt;
  &lt;/a&gt;
  Extracting to a New Component
&lt;/h2&gt;

&lt;p&gt;It is much better to extract to a new component, it will help you to create unit tests more easily and isolated to the component.&lt;/p&gt;

&lt;p&gt;Let's re-create the example I mentioned before, like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Section&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/section&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Section&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of using closures, now you have a pure function for &lt;code&gt;Section&lt;/code&gt; component, that's more readable and easy to give their props.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;With this approach, you will create more deterministic components taking the benefit of React pure component.&lt;/p&gt;

&lt;p&gt;It will help you to test the component and create isolated behaviour for every component.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Yet another JS framework(HYDROGEN)</title>
      <author>Shuvo</author>
      <pubDate>Wed, 10 Nov 2021 09:13:43 +0000</pubDate>
      <link>https://dev.to/0shuvo0/yet-another-js-frameworkhydrogen-169k</link>
      <guid>https://dev.to/0shuvo0/yet-another-js-frameworkhydrogen-169k</guid>
      <description>&lt;p&gt;&lt;a href="https://www.shopify.com/"&gt;Shopify&lt;/a&gt; have recently released a &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; based JavaScript framework called &lt;a href="https://hydrogen.shopify.dev/"&gt;HYDROGEN&lt;/a&gt;. Just like &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; its focused on &lt;strong&gt;SSR&lt;/strong&gt;(Server Sider Rendering) components. But if we already have Next.JS why do we need another framework similar to it?&lt;br&gt;
&lt;strong&gt;HYDROGEN&lt;/strong&gt; is made to create fully customizable shopify based E-Commerce web apps. Since its based on Nex.JS we have features of nextjs available to us and it also comes with many predefined components and hooks to ease your development.&lt;br&gt;
It also comes with built-in cache defaults support for non-blocking data-fetching, ensuring a fast shopping experience.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LBpUrZnv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29ntbp4p8dxbna1v501m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LBpUrZnv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29ntbp4p8dxbna1v501m.png" alt="Hydrogen perfomance" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
And it uses &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt; for bundling instead of &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qBVGMM3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjpciq26g4z5ax9advd0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qBVGMM3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjpciq26g4z5ax9advd0.png" alt="Vite logo" width="410" height="404"&gt;&lt;/a&gt;&lt;br&gt;
Hydrogen also uses shopify's GraphQL api to steam data easy and efficiently.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XEOpcf6i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jctg8hknooltbj0irg57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XEOpcf6i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jctg8hknooltbj0irg57.png" alt="Shopify hydrogen graphql" width="880" height="370"&gt;&lt;/a&gt;&lt;br&gt;
Shopify is also going to launch a hosting service for Hydrogen APPs called Oxygen.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FFiBWlmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phn5yaxkiays7j8jikbk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FFiBWlmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phn5yaxkiays7j8jikbk.png" alt="Oxygen hosting for hydrogen" width="880" height="303"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Hydrogen is react(next.js) based framework, so if you already know react and you develop custom storefronts it might be a great idea to leverage the extra powers that Hydrogen gives you on top of Next.JS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#make-sure-to-checkout-my-other-articles-and-youtube-channel"&gt;
  &lt;/a&gt;
  Make sure to checkout my other articles and YouTube channel.
&lt;/h3&gt;


&lt;div class="ltag__user ltag__user__id__728097"&gt;
  
    .ltag__user__id__728097 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/0shuvo0" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/0shuvo0"&gt;Shuvo&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/0shuvo0"&gt;Frontend Developer and YouTuber.
Channel link: https://www.youtube.com/c/AngleBrace&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>discuss</category>
      <category>opensource</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Connecting Hodloo With  a 3Commas Bot (API Version)</title>
      <author>Nobbi's Crypto</author>
      <pubDate>Wed, 10 Nov 2021 08:55:20 +0000</pubDate>
      <link>https://dev.to/nobbi/connecting-hodloo-with-a-3commas-bot-api-version-4od0</link>
      <guid>https://dev.to/nobbi/connecting-hodloo-with-a-3commas-bot-api-version-4od0</guid>
      <description>&lt;p&gt;This is a follow up to my &lt;a href="https://dev.to/nobbi/filtering-hodloo-alerts-api-version-5deo"&gt;last article on Hodloo&lt;/a&gt;. While last time I explained how to receive Hodloo alerts for USDT pairs, this time I'm showing you how to send the signals to 3Commas and trade hands-free - so you can get rich relaxing on the beach (see the cover image). Just joking, we all know it doesn't work that way, but it is a step in the direction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;Let's recap what we have when following the other article. We have a Python script running 24/7 on a &lt;a href="https://hetzner.cloud/?ref=ZiLEIYGoKB0X"&gt;VPS&lt;/a&gt; that parses messages from the official Hodloo API and sends USDT pairs to a Discord channel.&lt;/p&gt;

&lt;p&gt;Now, instead of sending alerts to a Discord channel, we want to send them to a bot which does the buying/selling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#faq"&gt;
  &lt;/a&gt;
  FAQ
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Why combining Hodloo with a bot? Why not trade manually?&lt;/strong&gt;&lt;br&gt;
I'm not doing this full-time. I have a day to day job. Also, the crypto market is running 24/7 and it happened too often in the past that a drop occured while I was asleep or not in front of my computer. By using a bot, I'm participating in the drop immidiatly.&lt;/p&gt;

&lt;p&gt;In addition, I suck at trading. I'm FOMOing in all the time with too much size and then carry red bags for months. The bot keeps me away from the trading terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why 3Commas?&lt;/strong&gt;&lt;br&gt;
I find it intuitive and easy to work with. I'm using the bot mainly to get in a trade and then taking care of the rest manually. That means I often switch the bot's deal to a smart trade to get out when I want and not at a fixed percentage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why do you not use the built-in QFL algos in 3Commas&lt;/strong&gt;&lt;br&gt;
Because they suck - period. Hodloo bases are way better respected. And I need well-respected bases. I just can't take losses mentally and because of silly tax rules in my country.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can I run this on my Windows/macOS machine?&lt;/strong&gt;&lt;br&gt;
Yes. Python is cross-platform. Remember that you need to let the machine running all the time. I don't want that hence I'm using a Linux VPS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why is this so complex and why can't I use a public service for this?&lt;/strong&gt;&lt;br&gt;
It's not available, unfortunately.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#preparing-the-qfl-bots"&gt;
  &lt;/a&gt;
  Preparing The QFL Bots
&lt;/h2&gt;

&lt;p&gt;Head over to 3Commas and create two multi-pair bots. One for the 5% alerts and one for the 10% alerts. You choose the pairs you want to trade in the bot settings. While the script will send all Hodloo alerts to 3Commas, 3Commas will only create deals for the pairs you've selected in the bots.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GtglnQU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nq4sd87gumrfps1ndc2x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GtglnQU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nq4sd87gumrfps1ndc2x.png" alt="Pairs" width="880" height="741"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that I've chosen six pairs for the bot but max deals is set to four. The bot will start a deal for the first Hodloo alert it receives to a maximum of four deals. Hence not all pairs you've configured will get a deal. First-come first-serve so to say.&lt;/p&gt;

&lt;p&gt;You can also choose &lt;strong&gt;USDT_ALL&lt;/strong&gt;. Note that this will include leveraged tokens and stablecoin pairs. Typically, you don't want to trade these and put them on the 3Commas blacklist. But that is cumbersome, instead you may want to use my script to do filter out leveraged tokens and stablecoin pairs. Just read on, it will be explained later.&lt;/p&gt;

&lt;p&gt;Your safety order should be double the size of your base order.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JNEGgsEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mylir1lbr03pkzznzbar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JNEGgsEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mylir1lbr03pkzznzbar.png" alt="Deal start condition" width="880" height="180"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the deal start condition to manually as the bot receives the signal through the Python script.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a8OFyH2T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jm73c4ffqc73y4w1117.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a8OFyH2T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jm73c4ffqc73y4w1117.png" alt="Take profit" width="880" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wrote above that I like to get out of a trade manually. But, you have to set the take profit value to something and if it bounces to a 30% profit while I'm asleep - I'm okay with that ;-)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EeRpZtu9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyqfxt9df60ud7gq70j9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EeRpZtu9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyqfxt9df60ud7gq70j9.png" alt="Layers" width="880" height="292"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the juicy part - the buy layers. The above settings make sure that you get in with a small size and double-down when it goes south. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For the 5% bot the deepest layer is around 45% under the base.&lt;/li&gt;
&lt;li&gt;For the 10% bot the deepest layer is around 50% under the base.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save and start the bot. On the following page scroll down to the bottom and write down the bot ID. You need that later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nzNv1NQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ht3znewc0kyf1vxjx4r8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nzNv1NQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ht3znewc0kyf1vxjx4r8.png" alt="Bot ID" width="815" height="189"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#preparing-the-panic-sell-bot"&gt;
  &lt;/a&gt;
  Preparing The Panic Sell Bot
&lt;/h2&gt;

&lt;p&gt;Panic sells are a new Hodloo signal which is not availalbe via the Telegram alerts, but only with the new API. It detects a higher than normal sell off which is often where it bounces. If you have access to the new API, the panic sells are the green arrows in the charts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eXIO_3gJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sds3h73ybup5qh6dm1jd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eXIO_3gJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sds3h73ybup5qh6dm1jd.png" alt="Panic sells" width="759" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm currently testing these myself and do not have a best-practice bot setting for you, you have to find it out yourself. So, create a bot and write down the bot ID.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#script-requirements"&gt;
  &lt;/a&gt;
  Script Requirements
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Copy everything from my &lt;a href="https://github.com/NobbisCrypto/Crypto/tree/main/Hodloo_to_3commas"&gt;GitHub repository&lt;/a&gt; to a local folder. I'm using &lt;code&gt;/opt/nobbi/hodloo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Install required Python libraries: &lt;code&gt;pip install -r /opt/nobbi/hodloo/requirements.txt&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Rename &lt;code&gt;config.py.example&lt;/code&gt; to &lt;code&gt;config.py&lt;/code&gt; and change the variables. The variables are very well documented in the file itself hence I won't cover this here. For your reference the variables below:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# 3c
TC_API_KEY = ''
TC_API_SECRET = ''
BOT_ID_5 = '' # Bot to start deal for pair 5% under the base. Leave empty if not desired.
BOT_ID_10 = '' # Bot to start deal for pair 10% under the base. Leave empty if not desired.
BOT_ID_PANIC = '' # Bot to start a deal for a panic sell. Leave empty if not desired.
MODE = 'paper' # 'real' or 'paper'
TC_EXCLUDE_LEVERAGED_TOKENS = True # Set to false to trade leveraged tokens. Currently supports excluding Binance and Kucoin leveraged tokens.
TC_DENYLIST = ["USDN/USDT","USDC/USDT","USDJ/USDT","CEUR/USDT","SUSD/USDT"] # Pairs on this list will not be traded.

# Discord
DISCORD_NOTIFICATIONS = '' # Discord Webhook of channel for trade notifications. Leave empty if not desired.
DISCORD_ERRORS = '' # Discord Webhook of channel for script errors. Mandatory.

# Hodloo
HODLOO_URI = '' # Hodloo Websocket API. Request the info from Pete in the Hodloo Discussions Telegram channel as it is private.
HODLOO_EXCHANGES = ["Binance"] # Multiple exchanges -&amp;gt; ["Binance","Kucoin"] Note that only Binance and Kucoin are fully supported at the moment.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Saw the variables &lt;code&gt;TC_EXCLUDE_LEVERAGED_TOKENS&lt;/code&gt; and &lt;code&gt;TC_DENYLIST&lt;/code&gt;? By using these you don't need to click 1,000 times in 3Commas to build a blacklist. I prefer the term &lt;em&gt;denylist&lt;/em&gt; btw, it's 2021 after all...&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#running-the-script"&gt;
  &lt;/a&gt;
  Running The Script
&lt;/h2&gt;

&lt;p&gt;Run the script to see if everything is running as expected: &lt;code&gt;python3 /opt/nobbi/hodloo/hodloo-to-3commas.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Running the script like above will work but is not very handy because as soon as you close the terminal or the session, the script stops. So we need a way to run the script in the background and also after a server reboot. Check the next chapter on how to achieve this.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#running-the-script-in-background"&gt;
  &lt;/a&gt;
  Running the Script in Background
&lt;/h3&gt;

&lt;p&gt;We need a way to run the script in the background and also after a server reboot. There are multiple ways to achieve that and the easiest method for Ubuntu I found is using the tool supervisor.&lt;/p&gt;

&lt;p&gt;Installing supervisor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install supervisor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Checking the status of supervisor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service supervisor status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Starting supervisor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service supervisor start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Stopping and restarting supervisor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service supervisor stop
sudo service supervisor restart
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create an entry for the &lt;code&gt;hodloo-to-3commas.py&lt;/code&gt; script. The following example uses vi.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo vi /etc/supervisor/conf.d/hodloo-to-3commas.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Contents of the file (change the paths accordingly):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[program:hodloo-to-3commas]
command=python3 -u hodloo-to-3commas.py
directory=/opt/nobbi/hodloo
stdout_logfile=/opt/nobbi/hodloo/hodloo-to-3commas.log
redirect_stderr=true
autorestart=true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Configure supervisor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo supervisorctl
reread
add hodloo-alerts-api
status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check whether your python script is running use the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo ps -axs | grep python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations! You've automated QFL-style trading with Hodloo bases, Python, and 3Commas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yeLMwF----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5qtd337n2l1wb8ha4iu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yeLMwF----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5qtd337n2l1wb8ha4iu.png" alt="Discord example" width="537" height="273"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Hodlooing!&lt;/p&gt;

</description>
      <category>hodloo</category>
      <category>3commas</category>
      <category>python</category>
      <category>crypto</category>
    </item>
    <item>
      <title>Setting up Anonymous User to Embed Kibana Dashboard to Your Application</title>
      <author>Nasrul Hazim Bin Mohamad</author>
      <pubDate>Wed, 10 Nov 2021 08:48:29 +0000</pubDate>
      <link>https://dev.to/nasrulhazim/setting-up-anonymous-user-to-embed-kibana-dashboard-to-your-application-p7b</link>
      <guid>https://dev.to/nasrulhazim/setting-up-anonymous-user-to-embed-kibana-dashboard-to-your-application-p7b</guid>
      <description>&lt;p&gt;Recent works let introduce me some challenges in putting Kibana Dashboard into applications, in secured manner. Hence writing up a quick post for setting it up securely.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elasticsearch"&gt;
  &lt;/a&gt;
  Elasticsearch
&lt;/h3&gt;

&lt;p&gt;Enable X-pack Security&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xpack.security.enabled: true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create credentials for internal communication of Elastic stack:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/usr/share/elasticsearch/bin/elasticsearch-setup-password auto
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Random passwords will be created for you:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Changed password for user apm_system
PASSWORD apm_system = some-random-password

Changed password for user kibana_system
PASSWORD kibana_system = some-random-password

Changed password for user kibana
PASSWORD kibana = some-random-password

Changed password for user logstash_system
PASSWORD logstash_system = some-random-password

Changed password for user beats_system
PASSWORD beats_system = some-random-password

Changed password for user remote_monitoring_user
PASSWORD remote_monitoring_user = some-random-password

Changed password for user elastic
PASSWORD elastic = some-random-password
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#kibana"&gt;
  &lt;/a&gt;
  Kibana
&lt;/h3&gt;

&lt;p&gt;Configure your &lt;code&gt;kibana.yml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;elasticsearch.username: "kibana"
elasticsearch.password: "&amp;lt;password-generated&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create encryption keys for your Kibana:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/usr/share/kibana/bin/kibana-encryption-keys generate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then update your &lt;code&gt;kibana.yml&lt;/code&gt; using the keys given in previous step:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xpack.encryptedSavedObjects.encryptionKey: some-random-key
xpack.reporting.encryptionKey: some-random-key
xpack.security.encryptionKey: some-random-key
xpack.reporting.capture.browser.chromium.disableSandbox: true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then start your Kibana.&lt;/p&gt;

&lt;p&gt;Now, you will prompt to enter username and password - use the &lt;code&gt;elastic&lt;/code&gt; user in above steps.&lt;/p&gt;

&lt;p&gt;Once you are logged in, go to Stack Management. &lt;/p&gt;

&lt;p&gt;Create a new role named as &lt;code&gt;embed_dashboard&lt;/code&gt;. Then:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Give privileges to indices you want to expose to public. &lt;/li&gt;
&lt;li&gt;Create a kibana privilege as well, by Add a new one. Choose targeted space - i used Default. Then in feature privilege, grant access to read only for Dashboard and Visualise Library.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now save.&lt;/p&gt;

&lt;p&gt;Once you are done, go create a new user, assign the role as &lt;code&gt;embed_dashboard&lt;/code&gt; role.&lt;/p&gt;

&lt;p&gt;Then, back to &lt;code&gt;kibana.yml&lt;/code&gt;, append the config as following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xpack.security.authc.providers:
  anonymous.anonymous1:
    order: 0
    session:
      idleTimeout: 1Y
    credentials:
       username: "anon"
       password: "SomeStrongPasswordIGuess"
  basic.basic1:
    order: 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then restart your Kibana.&lt;/p&gt;

&lt;p&gt;By now, you should be able to have a Public URL for your dashboard and be able to embed the dashboard in any of your applications.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@chrisliverani?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Chris Liverani&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/dashboard?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kibana</category>
      <category>dashboard</category>
      <category>anonymous</category>
    </item>
    <item>
      <title>Blockchain technology in logistics: how can you gain a competitive advantage?</title>
      <author>Arateg</author>
      <pubDate>Wed, 10 Nov 2021 08:42:02 +0000</pubDate>
      <link>https://dev.to/arateg/blockchain-technology-in-logistics-how-can-you-gain-a-competitive-advantage-1hab</link>
      <guid>https://dev.to/arateg/blockchain-technology-in-logistics-how-can-you-gain-a-competitive-advantage-1hab</guid>
      <description>&lt;p&gt;Blockchain is poised to disrupt the logistics and transportation industry. Providing supply chain traceability, decentralized data storage, and removing intermediaries from operations, this innovative technology allows companies to protect from counterfeit, prevent data corruption, and significantly reduce costs.&lt;/p&gt;

&lt;p&gt;The worldwide blockchain market size is anticipated to rise from $11.8 billion in 2020 to $70.5 billion in 2026, progressing at a compound annual growth rate (CAGR) of 58.7% during the forecast period. The increasing need for optimized workflows, reduced theft, and an automated supply chain management system is among the key market drivers.&lt;/p&gt;

&lt;p&gt;In this article, our software experts consider the main advantages of blockchain for logistics. But first, let’s take a look at what blockchain is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-blockchain-technology"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is blockchain technology?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Blockchain is the distributed ledger technology (DLT) that maintains a continuously growing number of records, called blocks. Each block contains a cryptographic hash, linking it with the previous block. The ledger is used for carrying out transactions, storing and sharing sensitive information, as well as enabling an immutable data record.&lt;/p&gt;

&lt;p&gt;Blockchain is:&lt;/p&gt;

&lt;p&gt;Decentralized — The network doesn’t provide central authority or intermediaries to approve transactions or verify data.&lt;/p&gt;

&lt;p&gt;Trusted — Blockchain is often used to ensure trust between parties. To perform a transaction or share data, computer servers have to come to a consensus.&lt;/p&gt;

&lt;p&gt;Inconvertible — Once something is uploaded to the decentralized distributed ledger, it cannot be altered or deleted, which makes data incorruptible. Thanks to a single version of the truth, organizations avoid any possible disputes.&lt;/p&gt;

&lt;p&gt;Based on cryptographic algorithms — Besides hashed transactions, the DLT technology employs public-key cryptography.&lt;/p&gt;

&lt;p&gt;Secure — Blockchain is more secure in comparison with other technological solutions. In order to move or change anything on the ledger, the network of nodes—not a single authority—must confirm that a transaction is valid. In addition, blockchain uses cryptography. As a consequence, it is much more difficult to hack it than other systems.&lt;/p&gt;

&lt;p&gt;To hack it, you wouldn't just have to hack one system like in a bank..., you'd have to hack every single computer on that network, which is fighting against you doing that. So again, it’s not unhackable, but significantly better than anything we've come up with today.&lt;/p&gt;

&lt;p&gt;Alex Tapscott, CEO and founder of Northwest Passage Ventures, a venture capital firm that invests in blockchain technology companies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blockchain-in-the-logistics-industry"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Blockchain in the logistics industry&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The global blockchain market in the logistics and transportation sector is poised to increase by nearly $889 million between 2021–2025, at a CAGR of 49.93% during the indicated period, according to the report by Research and Markets.&lt;/p&gt;

&lt;p&gt;Blockchain software solutions can address various challenges in the logistics industry, from counterfeit protection to documentation maintenance. Logistics companies employ distributed ledger technology to track shipments in real-time, provide stakeholders with shared data access, and establish trust.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#statistics-on-blockchain-technology-in-logistics"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Statistics on blockchain technology in logistics:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Tracking of products/services and enabling traceability—one of the top priorities during COVID-19—have the largest economic potential of $962 billion (PwC).&lt;/p&gt;

&lt;p&gt;As of 2020, blockchain software solutions were employed the most in logistics (58%), procurement (31%), and supply chain planning (29%), as found by APQC and Supply Chain Management Review based on the information provided by supply chain experts.&lt;/p&gt;

&lt;p&gt;78% of the survey participants said that enhanced real-time tracking of product movement is the main advantage of the distributed ledger technology (QC and Supply Chain Management Review).&lt;/p&gt;

&lt;p&gt;With blockchain-based systems, 69% of organizations ensure supply chain visibility, which allows them to minimize counterfeit goods and improve product integrity. 62% of companies use blockchain to establish trust between parties, store sensitive information, and enable data/process integrity (QC and Supply Chain Management Review).&lt;/p&gt;

&lt;p&gt;Eradicating the COVID-19 disease could require the distribution of 7–19 billion vaccine doses across the globe, and blockchain technology is critical for making it possible (the World Economic Forum).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-key-benefits-of-blockchain-for-logistics"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The key benefits of blockchain for logistics&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Ensuring supply chain traceability — According to PwC, over 50% of leading logistics companies that have already adopted advanced technologies, state that supply chain visibility is a top or high priority. With blockchain, each product is given a digital ID, so that organizations can easily track its way from origin to the hands of customers. The owner history, location, and other data will be available in an application.&lt;/p&gt;

&lt;p&gt;Protecting from the counterfeit of goods and illegal trading — It is impossible to forge or delete data stored on the ledger. All activities such as login and information changes are logged. Therefore, the DLT technology can be used as evidence in court.&lt;/p&gt;

&lt;p&gt;Enabling fast data access and ensuring transparency — You and your supply chain partners (e.g., manufacturers, retailers, carriers) can record and view supply chain data such as the product price, current location, manufacturing date, delivery date, storage temperature, quality assurance certification, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://arateg.com/blog/blockchain-technology-in-logistics?utm_source=blogpost&amp;amp;utm_medium=free&amp;amp;utm_campaign=devto"&gt;Continue reading...&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Timeline with CSS</title>
      <author>Jatin Sharma</author>
      <pubDate>Wed, 10 Nov 2021 07:59:46 +0000</pubDate>
      <link>https://dev.to/j471n/timeline-with-css-4g2a</link>
      <guid>https://dev.to/j471n/timeline-with-css-4g2a</guid>
      <description>&lt;p&gt;In this article, we are gonna build a timeline for your website which you can use later on in your portfolio to display your work history or maybe something else you want. Let's first look at what are we building -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-t4yAba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/BLrZCnJ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-t4yAba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/BLrZCnJ.gif" alt="preview" width="500" height="257"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have seen what we are up to so let's get hands in the code -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"timeline"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"outer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- .... card before this --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Title&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
          minim veniam, quis nostrud exercitation ullamco laboris nisi ut
          aliquip ex ea commodo consequat.
        &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- ..... you can add more div with "card" class --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the HTML code, the &lt;code&gt;timeline&lt;/code&gt; class is the main container and the &lt;code&gt;outer&lt;/code&gt; class is the wrapper for all the cards. and then we have a &lt;code&gt;card&lt;/code&gt; in which we add data.&lt;/p&gt;

&lt;p&gt;Now let's look at the CSS -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Timeline Container */&lt;/span&gt;
&lt;span class="nc"&gt;.timeline&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Outer Layer with the timeline border */&lt;/span&gt;
&lt;span class="nc"&gt;.outer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Card container */&lt;/span&gt;
&lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Information about the timeline */&lt;/span&gt;
&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Title of the card */&lt;/span&gt;
&lt;span class="nc"&gt;.title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;orangered&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Timeline dot  */&lt;/span&gt;
&lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;999px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-39px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;orangered&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#codepen-is-here"&gt;
  &lt;/a&gt;
  Codepen is Here
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/j471n/embed/wvqXRjm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;See the Pen &lt;a href="https://codepen.io/j471n/pen/wvqXRjm"&gt; css-timeline&lt;/a&gt; by Jatin (&lt;a href="https://codepen.io/j471n"&gt;@j471n&lt;/a&gt;) on &lt;a href="https://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;This is just the beginning, you can customize it to the next level, and maybe I'll do in the future article to stay tuned for that if you have any suggestions then comment below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can now extend your support by buying me a Coffee.😊👇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/j471n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/10-css-resources-that-you-should-bookmark-46l6"&gt;10 CSS Resources that you should bookmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/fully-functional-google-clone-with-nextjs-223o"&gt;Fully functional google search with next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/how-to-share-anything-from-your-website-by-web-share-api-1h5g"&gt;How to share anything from your website by Web Share API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
