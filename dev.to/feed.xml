<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Bootstrap 5 Typography</title>
      <author>MD Bootstrap</author>
      <pubDate>Mon, 29 Mar 2021 14:37:48 +0000</pubDate>
      <link>https://dev.to/mdbootstrap/bootstrap-5-typography-2f36</link>
      <guid>https://dev.to/mdbootstrap/bootstrap-5-typography-2f36</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-bootstrap-typography" class="anchor"&gt;
  &lt;/a&gt;
  What is Bootstrap Typography?
&lt;/h2&gt;

&lt;p&gt;Bootstrap Typography is a content element that helps you with text on your website including global settings, headings, body text, lists, and more.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#installation" class="anchor"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#manual-installation-zip-package" class="anchor"&gt;
  &lt;/a&gt;
  Manual installation (zip package)
&lt;/h4&gt;

&lt;p&gt;To use the component, you first need to install the &lt;a href="https://mdbootstrap.com/docs/standard/getting-started/installation/#section-manual-installation"&gt;MDB 5 Free package&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#mdb-cli" class="anchor"&gt;
  &lt;/a&gt;
  MDB CLI
&lt;/h4&gt;

&lt;p&gt;Watch our &lt;a href="https://mdbootstrap.com/docs/standard/getting-started/quick-start/"&gt;&lt;strong&gt;Quick Start Tutorial&lt;/strong&gt;&lt;/a&gt; to discover and use the full potential of MDB 5 and MDB CLI&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#npm" class="anchor"&gt;
  &lt;/a&gt;
  NPM
&lt;/h4&gt;

&lt;h6&gt;
  &lt;a href="#prerequisites" class="anchor"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h6&gt;

&lt;p&gt;Before starting the project make sure to install &lt;a href="https://nodejs.org/en/"&gt;Node LTS (12.x.x recommended)&lt;/a&gt;.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#installation" class="anchor"&gt;
  &lt;/a&gt;
  Installation
&lt;/h6&gt;

&lt;p&gt;To install MDB UI KIT in your project easily type the following command in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm i mdb-ui-kit&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#importing-js-modules" class="anchor"&gt;
  &lt;/a&gt;
  Importing JS modules
&lt;/h6&gt;

&lt;p&gt;You can import the entire library or just individual modules:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import * as mdb from 'mdb-ui-kit'; // lib&lt;br&gt;
import { Input } from 'mdb-ui-kit'; // module&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#importing-css-file" class="anchor"&gt;
  &lt;/a&gt;
  Importing CSS file
&lt;/h6&gt;

&lt;p&gt;To import MDB stylesheet please use the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@import '~mdb-ui-kit/css/mdb.min.css';&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#importing-scss-modules" class="anchor"&gt;
  &lt;/a&gt;
  Importing SCSS modules
&lt;/h6&gt;

&lt;p&gt;You can also import individual SCSS modules. To do it properly, we recommend to copy them from the node_modules/mdb-ui-kit/src/scss location directly to your project and import in the same way as CSS files.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#webpack-integration" class="anchor"&gt;
  &lt;/a&gt;
  Webpack integration
&lt;/h6&gt;

&lt;p&gt;You can significantly speed up the process of creating a new project based on Webpack using our &lt;a href="https://github.com/mdbootstrap/mdb-webpack-starter"&gt;Starter&lt;/a&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#cdn" class="anchor"&gt;
  &lt;/a&gt;
  CDN
&lt;/h4&gt;

&lt;p&gt;Installation via CDN is one of the easiest methods of integrating MDB UI KIT with your project. Just copy the latest compiled JS script tag and CSS link tag from &lt;a href="https://cdnjs.com/libraries/mdb-ui-kit"&gt;cdnjs&lt;/a&gt; to the application.&lt;/p&gt;

&lt;p&gt;Don't forget to add also Font Awesome and Roboto font if you need. Here's an example code:&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#css" class="anchor"&gt;
  &lt;/a&gt;
  CSS
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;Font&lt;/span&gt; &lt;span class="nt"&gt;Awesome&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;Google&lt;/span&gt; &lt;span class="nt"&gt;Fonts&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;amp;display=swap"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;MDB&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.3.0/mdb.min.css"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#js" class="anchor"&gt;
  &lt;/a&gt;
  JS
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;MDB&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.3.0/mdb.min.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#getting-started" class="anchor"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#global-settings" class="anchor"&gt;
  &lt;/a&gt;
  Global settings:
&lt;/h4&gt;

&lt;p&gt;MDB sets basic global display, typography, and link styles. When more control is needed, check out the textual utility classes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For a more inclusive and accessible type scale, we assume the browser default root &lt;code&gt;font-size&lt;/code&gt; (typically 16px) so visitors can customize their browser defaults as needed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the &lt;code&gt;$font-family-base, $font-size-base&lt;/code&gt;, and &lt;code&gt;$line-height-base&lt;/code&gt; attributes as our typographic base applied to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set the global link color via &lt;code&gt;$link-color&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;$body-bg&lt;/code&gt; to set a background-color on the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; (&lt;code&gt;#fff&lt;/code&gt; by default).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These styles can be found within &lt;code&gt;_reboot.scss&lt;/code&gt;, and the global variables are defined in &lt;code&gt;_variables.scss&lt;/code&gt;. Make sure to set &lt;code&gt;$font-size-base&lt;/code&gt; in rem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customization" class="anchor"&gt;
  &lt;/a&gt;
  Customization
&lt;/h2&gt;

&lt;h6&gt;
  &lt;a href="#lead" class="anchor"&gt;
  &lt;/a&gt;
  Lead
&lt;/h6&gt;

&lt;p&gt;Make a paragraph stand out by adding &lt;code&gt;.lead&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lead"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est
  non commodo luctus.
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#styled-headings" class="anchor"&gt;
  &lt;/a&gt;
  Styled headings
&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;.h1&lt;/code&gt; through &lt;code&gt;.h6&lt;/code&gt; classes are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;h1. MDB heading&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;h2. MDB heading&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;h3. MDB heading&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;h4. MDB heading&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;h5. MDB heading&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;h6. MDB heading&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#you-can-see-more-customization-examples-on-the-typography-documentation-page" class="anchor"&gt;
  &lt;/a&gt;
  You can see more customization examples on the &lt;a href="https://mdbootstrap.com/docs/standard/content-styles/typography/"&gt;📄 Typography documentation page&lt;/a&gt;
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#crucial-resources" class="anchor"&gt;
  &lt;/a&gt;
  Crucial Resources
&lt;/h2&gt;

&lt;p&gt;Here are the resources that we have prepared to help you work with this component:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Read &lt;a href="https://mdbootstrap.com/docs/standard/content-styles/typography/"&gt;📄 Typography tutorial &amp;amp; documentation&lt;/a&gt; &amp;lt;-- start here&lt;/li&gt;
&lt;li&gt;In to get the most out of your project, you should also get acquainted with other Content &amp;amp; style options related to Typography. See the section below to find the list of them.&lt;/li&gt;
&lt;li&gt;You can use predesigned Content &amp;amp; style elements in &lt;a href="https://mdbootstrap.com/freebies/"&gt;📥 Starter Bootstrap 5 templates&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Templates are a part of &lt;a href="https://mdbootstrap.com/docs/standard/"&gt;📦 Free UI Kit for Bootstrap 5&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;After finishing the project you can publish it with CLI in order to receive &lt;a href="https://mdbootstrap.com/docs/standard/cli/"&gt;💽 Free hosting (beta)&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#related-content-and-styles-options-amp-features" class="anchor"&gt;
  &lt;/a&gt;
  Related Content and Styles options &amp;amp; features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/theme/"&gt;Theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/animations/"&gt;Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/background-image/"&gt;Background Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/colors/"&gt;Colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/figures/"&gt;Figures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/flags/"&gt;Flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/hover-effects/"&gt;Hover effects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/icons/"&gt;Icons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/images/"&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/masks/"&gt;Masks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/shadows/"&gt;Shadows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#learn-bootstrap-5-in-15h" class="anchor"&gt;
  &lt;/a&gt;
  Learn Bootstrap 5 in 1.5H
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/c9B4TPnak1A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#additional-resources" class="anchor"&gt;
  &lt;/a&gt;
  Additional resources
&lt;/h2&gt;

&lt;p&gt;Learn web development with our &lt;strong&gt;learning roadmap&lt;/strong&gt;:&lt;br&gt;
&lt;strong&gt;&lt;a href="https://mdbootstrap.com/docs/standard/getting-started/"&gt;🎓 Start Learning&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join our mailing list &amp;amp; receive &lt;strong&gt;exclusive resources&lt;/strong&gt; for developers&lt;br&gt;
&lt;strong&gt;&lt;a href="https://mdbootstrap.com/newsletter/"&gt;🎁 Get gifts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join our private FB group for &lt;strong&gt;inspiration &amp;amp; community experience&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.facebook.com/groups/682245759188413"&gt;👨‍👩‍👧‍👦 Ask to join&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support creation of open-source packages&lt;/strong&gt; with a STAR on GitHub&lt;br&gt;
&lt;a href="https://github.com/mdbootstrap/mdb-ui-kit/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KKY5TtAR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/stars/mdbootstrap/mdb-ui-kit%3Flabel%3DStar%2520now%26style%3Dsocial" alt="GitHub Stars"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Bootstrap 5 Images</title>
      <author>MD Bootstrap</author>
      <pubDate>Mon, 29 Mar 2021 14:28:44 +0000</pubDate>
      <link>https://dev.to/mdbootstrap/bootstrap-5-images-1lp7</link>
      <guid>https://dev.to/mdbootstrap/bootstrap-5-images-1lp7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-bootstrap-images" class="anchor"&gt;
  &lt;/a&gt;
  What are Bootstrap Images?
&lt;/h2&gt;

&lt;p&gt;Bootstrap Images are the content element that allows you to opt images into responsive behavior (so they never become larger than their parent elements) and add lightweight styles to them—all via classes.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#installation" class="anchor"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#manual-installation-zip-package" class="anchor"&gt;
  &lt;/a&gt;
  Manual installation (zip package)
&lt;/h4&gt;

&lt;p&gt;To take advantage of  our Bootstrap images component and use them in your project, you first need to install the &lt;a href="https://mdbootstrap.com/docs/standard/getting-started/installation/#section-manual-installation"&gt;MDB 5 Free package&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#mdb-cli" class="anchor"&gt;
  &lt;/a&gt;
  MDB CLI
&lt;/h4&gt;

&lt;p&gt;Watch our &lt;a href="https://mdbootstrap.com/docs/standard/getting-started/quick-start/"&gt;&lt;strong&gt;Quick Start Tutorial&lt;/strong&gt;&lt;/a&gt; to discover and use the full potential of MDB 5 and MDB CLI&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#npm" class="anchor"&gt;
  &lt;/a&gt;
  NPM
&lt;/h4&gt;

&lt;h6&gt;
  &lt;a href="#prerequisites" class="anchor"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h6&gt;

&lt;p&gt;Before starting the project make sure to install &lt;a href="https://nodejs.org/en/"&gt;Node LTS (12.x.x recommended)&lt;/a&gt;.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#installation" class="anchor"&gt;
  &lt;/a&gt;
  Installation
&lt;/h6&gt;

&lt;p&gt;To install MDB UI KIT in your project easily type the following command in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm i mdb-ui-kit&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#importing-js-modules" class="anchor"&gt;
  &lt;/a&gt;
  Importing JS modules
&lt;/h6&gt;

&lt;p&gt;You can import the entire library or just individual modules:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import * as mdb from 'mdb-ui-kit'; // lib&lt;br&gt;
import { Input } from 'mdb-ui-kit'; // module&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#importing-css-file" class="anchor"&gt;
  &lt;/a&gt;
  Importing CSS file
&lt;/h6&gt;

&lt;p&gt;To import MDB stylesheet please use the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@import '~mdb-ui-kit/css/mdb.min.css';&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#importing-scss-modules" class="anchor"&gt;
  &lt;/a&gt;
  Importing SCSS modules
&lt;/h6&gt;

&lt;p&gt;You can also import individual SCSS modules. To do it properly, we recommend to copy them from the node_modules/mdb-ui-kit/src/scss location directly to your project and import in the same way as CSS files.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#webpack-integration" class="anchor"&gt;
  &lt;/a&gt;
  Webpack integration
&lt;/h6&gt;

&lt;p&gt;You can significantly speed up the process of creating a new project based on Webpack using our &lt;a href="https://github.com/mdbootstrap/mdb-webpack-starter"&gt;Starter&lt;/a&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#cdn" class="anchor"&gt;
  &lt;/a&gt;
  CDN
&lt;/h4&gt;

&lt;p&gt;Installation via CDN is one of the easiest methods of integrating MDB UI KIT with your project. Just copy the latest compiled JS script tag and CSS link tag from &lt;a href="https://cdnjs.com/libraries/mdb-ui-kit"&gt;cdnjs&lt;/a&gt; to the application.&lt;/p&gt;

&lt;p&gt;Don't forget to add also Font Awesome and Roboto font if you need. Here's an example code:&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#css" class="anchor"&gt;
  &lt;/a&gt;
  CSS
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;Font&lt;/span&gt; &lt;span class="nt"&gt;Awesome&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;Google&lt;/span&gt; &lt;span class="nt"&gt;Fonts&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;amp;display=swap"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;MDB&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.3.0/mdb.min.css"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#js" class="anchor"&gt;
  &lt;/a&gt;
  JS
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;MDB&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.3.0/mdb.min.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#customization" class="anchor"&gt;
  &lt;/a&gt;
  Customization
&lt;/h2&gt;

&lt;h6&gt;
  &lt;a href="#responsive-images" class="anchor"&gt;
  &lt;/a&gt;
  Responsive images
&lt;/h6&gt;

&lt;p&gt;Images in MDB are made responsive with &lt;code&gt;.img-fluid.&lt;/code&gt; This applies &lt;code&gt;max-width: 100%;&lt;/code&gt; and &lt;code&gt;height: auto;&lt;/code&gt; to the image so that it scales with the parent element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/new/slides/041.jpg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"img-fluid"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#thumbnails" class="anchor"&gt;
  &lt;/a&gt;
  Thumbnails
&lt;/h6&gt;

&lt;p&gt;In addition to our &lt;a href="https://mdbootstrap.com/docs/standard/utilities/borders/"&gt;border-radius utilities&lt;/a&gt;, you can use &lt;code&gt;.img-thumbnail&lt;/code&gt; to give an image a rounded 1px border appearance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
  &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/new/standard/city/041.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"img-thumbnail"&lt;/span&gt;
  &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#masks" class="anchor"&gt;
  &lt;/a&gt;
  Masks
&lt;/h6&gt;

&lt;p&gt;You can cover the image with &lt;a href="https://mdbootstrap.com/docs/standard/content-styles/masks/"&gt;mask&lt;/a&gt; to achieve the desired contrast and for example, place text on it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
    &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/new/standard/city/053.jpg"&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"img-fluid"&lt;/span&gt;
    &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Sample"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mask"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"background-color: rgba(0, 0, 0, 0.6)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"d-flex justify-content-center align-items-center h-100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-white mb-0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Can you see me?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#you-can-see-more-customization-examples-on-the-images-documentation-page" class="anchor"&gt;
  &lt;/a&gt;
  You can see more customization examples on the &lt;a href="https://mdbootstrap.com/docs/standard/content-styles/images/"&gt;📄 Images documentation page&lt;/a&gt;
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#crucial-resources" class="anchor"&gt;
  &lt;/a&gt;
  Crucial Resources
&lt;/h2&gt;

&lt;p&gt;Here are the resources that we have prepared to help you work with this component:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Read &lt;a href="https://mdbootstrap.com/docs/standard/content-styles/images/"&gt;📄 Images tutorial &amp;amp; documentation&lt;/a&gt; &amp;lt;-- start here&lt;/li&gt;
&lt;li&gt;In to get the most out of your project, you should also get acquainted with other Content &amp;amp; style options related to Images. See the section below to find the list of them.&lt;/li&gt;
&lt;li&gt;You can use predesigned Content &amp;amp; style elements in &lt;a href="https://mdbootstrap.com/freebies/"&gt;📥 Starter Bootstrap 5 templates&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Templates are a part of &lt;a href="https://mdbootstrap.com/docs/standard/"&gt;📦 Free UI Kit for Bootstrap 5&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;After finishing the project you can publish it with CLI in order to receive &lt;a href="https://mdbootstrap.com/docs/standard/cli/"&gt;💽 Free hosting (beta)&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#related-content-and-styles-options-amp-features" class="anchor"&gt;
  &lt;/a&gt;
  Related Content and Styles options &amp;amp; features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/theme/"&gt;Theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/animations/"&gt;Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/background-image/"&gt;Background Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/colors/"&gt;Colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/figures/"&gt;Figures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/flags/"&gt;Flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/hover-effects/"&gt;Hover effects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/icons/"&gt;Icons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/masks/"&gt;Masks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/shadows/"&gt;Shadows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/content-styles/typography/"&gt;Typography&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#learn-bootstrap-5-in-15h" class="anchor"&gt;
  &lt;/a&gt;
  Learn Bootstrap 5 in 1.5H
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/c9B4TPnak1A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#additional-resources" class="anchor"&gt;
  &lt;/a&gt;
  Additional resources
&lt;/h2&gt;

&lt;p&gt;Learn web development with our &lt;strong&gt;learning roadmap&lt;/strong&gt;:&lt;br&gt;
&lt;strong&gt;&lt;a href="https://mdbootstrap.com/docs/standard/getting-started/"&gt;🎓 Start Learning&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join our mailing list &amp;amp; receive &lt;strong&gt;exclusive resources&lt;/strong&gt; for developers&lt;br&gt;
&lt;strong&gt;&lt;a href="https://mdbootstrap.com/newsletter/"&gt;🎁 Get gifts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join our private FB group for &lt;strong&gt;inspiration &amp;amp; community experience&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.facebook.com/groups/682245759188413"&gt;👨‍👩‍👧‍👦 Ask to join&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support creation of open-source packages&lt;/strong&gt; with a STAR on GitHub&lt;br&gt;
&lt;a href="https://github.com/mdbootstrap/mdb-ui-kit/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KKY5TtAR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/stars/mdbootstrap/mdb-ui-kit%3Flabel%3DStar%2520now%26style%3Dsocial" alt="GitHub Stars"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Send mails with Mailjet from your NestJS backend in 10 min</title>
      <author>Leonidas</author>
      <pubDate>Mon, 29 Mar 2021 14:05:38 +0000</pubDate>
      <link>https://dev.to/fastmodularproject/send-mails-with-mailjet-from-your-nestjs-backend-in-10-min-2p6c</link>
      <guid>https://dev.to/fastmodularproject/send-mails-with-mailjet-from-your-nestjs-backend-in-10-min-2p6c</guid>
      <description>&lt;p&gt;In this article I will share with you a module that sends mail to customers using MailJet. On my side, I used this module on top of the React/Node/MySQL starter. This starter has been presented to you last week in &lt;a href="https://dev.to/fastmodularproject/web-starter-react-nestjs-mysql-3o9i"&gt;this article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Maybe you are wondering... why using Mailjet ? Because it's free until 6000 mails/months and no credit card is required :D&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisite" class="anchor"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h1&gt;

&lt;p&gt;By getting the web starter I was mentioning above, you'll be able to plug this mail system module directly on top of it and have a functional project with an authentication and a mail system in less than 10 minutes.&lt;/p&gt;

&lt;p&gt;Note that using the starter is not mandatory, you can also use the module as standalone. The integration won't be as easy as with the starter, but it should still be simple to integrate it in your already created project :)&lt;/p&gt;

&lt;p&gt;The starter is available &lt;a href="https://fast-modular-project.com"&gt;here&lt;/a&gt;.&lt;br&gt;
The module is available &lt;a href="https://fast-modular-project.com/modules/mailjet-mailing"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-it-work" class="anchor"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h1&gt;

&lt;p&gt;In this module, we'll use Mailjet service. We can configure mail templates on their website which will be identified by a unique &lt;code&gt;ID&lt;/code&gt;. Those templates can be filled with static content and dynamic content that will change for every mails (pretty usefull to set usernames or callback url on a button). &lt;/p&gt;

&lt;p&gt;The backend will call Mailjet API to sends mails giving :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;receiver&lt;/li&gt;
&lt;li&gt;template ID&lt;/li&gt;
&lt;li&gt;variables (dynamic data)&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#setup-the-mailing-system" class="anchor"&gt;
  &lt;/a&gt;
  Setup the mailing system
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Mailjet configuration&lt;br&gt;
Create a MailJet account. &lt;br&gt;
Create your mail transactional template and publish it. &lt;br&gt;
Keep the &lt;code&gt;ID&lt;/code&gt; of your template in a safe place, we'll need it after.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mailjet dependency&lt;br&gt;
Install the &lt;code&gt;node-mailjet&lt;/code&gt; dependency in your backend : &lt;code&gt;npm install node-mailjet@3.3.1&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mailjet API credentials&lt;br&gt;
Set your mailjet API credentials you get from first step into your environments files located here : &lt;code&gt;./backend/src/environments&lt;/code&gt;. If you already forgot your API credentials, you can find them back using &lt;a href="https://app.mailjet.com/account/api_keys"&gt;this link&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Backend service&lt;br&gt;
Copy the &lt;code&gt;mailer&lt;/code&gt; folder of this module in your backend. You can know setup the template &lt;code&gt;ID&lt;/code&gt; from your published template into &lt;code&gt;templates.enum.ts&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it ! You are now enable to send mail to a specific user, using your pre-defined template a the &lt;code&gt;MailerService&lt;/code&gt; available in your backend :)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope this module will help you saving some time while trying to implement a mailing system in your project.&lt;/p&gt;

&lt;p&gt;Note that all modules currently available on the React/NestJS/MySQL web starter are listed &lt;a href="https://fast-modular-project.com/modules"&gt;here&lt;/a&gt;. Do not hesitate to ask for a tutorial on another module on this starter in the comment section !&lt;/p&gt;

&lt;p&gt;Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The platform sharing the starter and it's modules : &lt;a href="https://fast-modular-project.com"&gt;Fast Modular Project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"Send mails with MailJet" module GitHub repository &lt;a href="https://github.com/DDeredec/fmp_mailjet_module"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>node</category>
      <category>typescript</category>
      <category>saas</category>
    </item>
    <item>
      <title>If Your Tech Interview is Three Tech Interviews in a Trench Coat and I Do Five is It Additive or Exponential</title>
      <author>Laurie</author>
      <pubDate>Mon, 29 Mar 2021 13:10:47 +0000</pubDate>
      <link>https://dev.to/laurieontech/if-your-tech-interview-is-three-tech-interviews-in-a-trench-coat-and-i-do-five-is-it-additive-or-exponential-244g</link>
      <guid>https://dev.to/laurieontech/if-your-tech-interview-is-three-tech-interviews-in-a-trench-coat-and-i-do-five-is-it-additive-or-exponential-244g</guid>
      <description>&lt;p&gt;I want to warn you all ahead of time. This is going to be a lengthy post. So feel free to take it in chunks. I also want to add that this post is filled with privilege. At no point during this process did I fear losing my job, my basic needs were always more than met, and I'm a white cis woman. This is a narrative of my experience and the lessons I learned along the way. It is not meant as universal tips for the job search process. That's deeply personal.&lt;/p&gt;

&lt;p&gt;There are a large number of people in tech who subscribe to the "you should always be interviewing" mentality. To be honest, I've never been one of them. If you've been around me much, you know that I'm not fond of how we interview in this industry. So it makes sense that I wouldn't choose to subject myself to that process for no reason.&lt;/p&gt;

&lt;p&gt;That being said, I opted to begin a job search around six months ago. What did that mean for me? It meant I told some friends privately that I was willing to entertain opportunities. And if I saw something appealing, I'd apply.&lt;/p&gt;

&lt;p&gt;That's where our story starts. This post will include lessons I learned as a job seeker. As well as &lt;a href="#the-patterns"&gt;patterns&lt;/a&gt; I hope companies will address.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quick note. I receive a LOT of recruiter inbound. Of the companies I mention in this post, only a few of them were places I considered because of unsolicited outreach. I'm far more likely to rely on the recommendations of friends.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-network-has-grown" class="anchor"&gt;
  &lt;/a&gt;
  My Network has grown
&lt;/h2&gt;

&lt;p&gt;I've not "searched" for jobs in some time. The last time was my first full-time coding job where I interviewed at nine different companies. From there, I fell into another opportunity. And when I joined Gatsby I had only applied to that specific role.&lt;/p&gt;

&lt;p&gt;The last few years have been a lot of fun as I've gotten to broaden my reach in the JavaScript ecosystem and meet a lot of incredible people. To be honest, I hadn't realized what that would mean should I ever look for a new role.&lt;/p&gt;

&lt;p&gt;My search quickly became overwhelming. My friends, who are awesome and I thank them, sent me so many leads and connected me with even more people. I wound up with five or so concrete interview opportunities within a week. And in the end, I went through two distinct periods of interviewing with a break in between. Let's talk about how that played out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-part-i" class="anchor"&gt;
  &lt;/a&gt;
  Search Part I
&lt;/h2&gt;

&lt;p&gt;We'll start with the first "phase" of interviews, the initial five companies. For two companies, the process ended after the first conversation. One was on my side--I couldn't go through five processes at once. I was working a full-time job. The second was on their side. They liked me, but they'd just closed the role with someone else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #1&lt;/strong&gt;&lt;br&gt;
The first qualified candidate through the process will get hired. If there is a difference of under a week they may hold off, but not always. Find out if you're part of a search for a single seat and what their timeline is.&lt;/p&gt;

&lt;p&gt;Now for the other three opportunities! I'll start by saying I made it to final rounds for all of them. And I didn't get offers from any of them. Demoralizing? Yes. Exhausting? Without a doubt. I'm not going to name specific companies, but I will talk about each of those experiences individually.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-a" class="anchor"&gt;
  &lt;/a&gt;
  Company A
&lt;/h3&gt;

&lt;p&gt;This was my first technical interview process in quite some time. I coded in front of them in at least three interviews. One went well, one I thought went well (we'll get to that in a second), one went poorly.&lt;/p&gt;

&lt;p&gt;They had a two-part final round and called me the night after part one to cancel the following day. I genuinely appreciate them not wasting more of my time.&lt;/p&gt;

&lt;p&gt;But let's talk about how we got there in the first place. Their interviews were very tool-user specific. This was for a tech lead role that would need to help guide the team to solve problems, use more scalable practices, and yes, code.&lt;/p&gt;

&lt;p&gt;Their interviews focused on whether I put curly braces in the right place on the first try (and yes, that was actually part of the feedback). I had told them prior to the interview that I was working in the frontend ecosystem in a very niche area! That some of my generic frontend skills were rusty. But sometimes, even when you set expectations, there is a clear disconnect.&lt;/p&gt;

&lt;p&gt;You won't be surprised to hear that this experience inspired my &lt;a href="https://laurieontech.com/posts/senior-interviews/"&gt;senior interviews post&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-b" class="anchor"&gt;
  &lt;/a&gt;
  Company B
&lt;/h3&gt;

&lt;p&gt;Fun fact, this would not be the only time I interviewed with this company in the six-month period, but this was the first.&lt;/p&gt;

&lt;p&gt;The full interview process involved eleven conversations when all was said and done. To be honest, I made some mistakes here and I think they're important to talk about.&lt;/p&gt;

&lt;p&gt;The job seemed perfect at first! But as the process went on I realized it was very systems architecture heavy. And I ignored that. Choosing to move forward because they were moving me forward. It wasn't the right job for me, we both knew it, but neither party wanted to admit it.&lt;/p&gt;

&lt;p&gt;Was that a bad thing? Well, yes. Because I didn't have the right kind of experience for what they were indexing on (there were other parts of the job I could do well), they added extra interviews on that subject. They wanted to be super sure I couldn't do the job! Because they liked me! And that sucked.&lt;/p&gt;

&lt;p&gt;It seemed like everyone was being nice and giving me my fair shot. But in reality, we all knew I didn't have that skill at the level they wanted. So it wasn't super fair to keep putting me through those extra interviews.&lt;/p&gt;

&lt;p&gt;I also froze in one of the early interviews on that subject. I can normally BS and talk through most situations, even when I'm terrified. I couldn't in this scenario. I suspect this is a big reason they opted to add additional interviews--in case it really was just nerves.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #2&lt;/strong&gt; The company may be awesome. You may want it to work. But if the interviews are focused on things you don't like/aren't good at AND you've confirmed that matches the tasks of the role, drop out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-c" class="anchor"&gt;
  &lt;/a&gt;
  Company C
&lt;/h3&gt;

&lt;p&gt;I'll state up front that this was my most frustrating interview experience. And I'm still not pleased with how it went. I applied for a staff-level position, had an initial call, and was fast-tracked to their final interview process. Awesome!&lt;/p&gt;

&lt;p&gt;This company does generic interviews for candidates at that level (they're not alone, I'll touch on this later). The problem was how this played out. I was applying for a somewhat specialist position. As I moved through conversations and they didn't seem to match the role at all, I'd ask "is this type of work part of what I'll be doing in this position"? 3/4 interviewers didn't know what I was interviewing for. 2/4 looked it up and hadn't heard of the team.&lt;/p&gt;

&lt;p&gt;I would never recommend a company do this for so many reasons. I knew as soon as I left the final conversation I hadn't met the bar. Because the bar didn't even make sense. Plus, I was exhausted (we'll hit on that in a moment too).&lt;/p&gt;

&lt;p&gt;When the recruiter emailed me she mentioned how amazing I clearly was and that she was sure I'd land somewhere great. I had a sense she was stunned I could tank their interview so badly when it was clear I had experience. Tech is big! People can't know everything. So don't interview them for things you aren't hiring them for.&lt;/p&gt;

&lt;p&gt;Now to the exhausted point. I was exhausted. This was the last of my processes. I was doing interviews almost exclusively in west coast time because I had a day job. If I recall correctly, that final round started at 6 pm on a Friday night for me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #3&lt;/strong&gt;&lt;br&gt;
Interviews when you're tired put you at a disadvantage. Schedule them as best you can to prevent that eventuality. And if there are jobs you don't want? Drop out and save your energy for the ones you do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-where-does-that-leave-us" class="anchor"&gt;
  &lt;/a&gt;
  So where does that leave us?
&lt;/h2&gt;

&lt;p&gt;And that was the first stretch of interview processes I went through! By this point it was Fall. I was moving. The holidays were coming up. I was exhausted. I'd followed through on the initial leads and nothing had panned out. So I stopped.&lt;/p&gt;

&lt;p&gt;This is the absolute best thing I could have done for myself. I had barely made it through some of the end rounds with my mental health. It was a pandemic still. Work had been really busy, and a bunch of my friends had left.&lt;/p&gt;

&lt;p&gt;As I was about to take two weeks off for the holidays, something shifted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-part-ii" class="anchor"&gt;
  &lt;/a&gt;
  Search Part II
&lt;/h2&gt;

&lt;p&gt;I still hadn't told any additional people I was looking beyond the original handful. But apparently, the end of 2020 meant a lot of roles were about to open up.&lt;/p&gt;

&lt;p&gt;All of a sudden I was contacted for, referred to, and otherwise told about over a dozen roles. I won't go through each of these individually, but I'll capture the highlights.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-d" class="anchor"&gt;
  &lt;/a&gt;
  Company D
&lt;/h3&gt;

&lt;p&gt;I was so so excited about this role. I didn't start an official interview process, it was all conversations about me, my background, what the role entailed, if I was interested in it.&lt;/p&gt;

&lt;p&gt;But part of the reason I didn't interview was because they didn't want to put me through that until they were sure they could hire me. In the end, they couldn't. They didn't have the right headcount in the right places. But the company treated me as a human and an individual. Timing didn't line up but if they came back in the future I certainly might consider working there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #4&lt;/strong&gt;&lt;br&gt;
Timing is everything. A company may contact you to interview just as you're about to accept an offer. You may find an amazing role that would be perfect for past you, or future you, but not current you. It's frustrating, but it's good to recognize that a lot of job searching is out of your control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-startups" class="anchor"&gt;
  &lt;/a&gt;
  The Start-Ups
&lt;/h3&gt;

&lt;p&gt;This is not an entirely fair grouping, but there were three companies in my space that had various roles they were interested in me for. I took those conversations, sometimes going a bit further into the process.&lt;/p&gt;

&lt;p&gt;The problem was I sort of knew that wasn't what I wanted for my next step. But it took me a while to feel confident in that and walk away from those processes. And I had too much going on at the time too, so that forced my hand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #5&lt;/strong&gt;&lt;br&gt;
It's really hard to say no. Like, really hard. Especially when the company is small and you don't feel like just another number. But it's best for everyone that you do. Even if you were referred to the role. Be respectful and fair.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-repeats" class="anchor"&gt;
  &lt;/a&gt;
  The repeats
&lt;/h3&gt;

&lt;p&gt;This may seem surprising, but there were a lot of companies I talked to more than once, for different roles. Some didn't move quickly enough before I had another offer I wanted to take. In other cases the role wasn't right the second time around, so I dropped out.&lt;/p&gt;

&lt;p&gt;Talking to places twice was great because they tried to limit the conversations I'd already had. And they were keyed into the type of work I wanted to do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #6&lt;/strong&gt;&lt;br&gt;
There will always be another role open at a company eventually. Don't burn bridges if things don't work out the first time around. And don't be afraid to apply to a new listing even if it's at a company you just completed a process with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-title-cuts" class="anchor"&gt;
  &lt;/a&gt;
  The title "cuts"
&lt;/h3&gt;

&lt;p&gt;This one is interesting and was a part of the conversation at a lot of different companies, but two in particular. These companies had openings for roles with a specific level in mind, rather than a sliding scale that they'd peg to the candidate in question.&lt;/p&gt;

&lt;p&gt;That was great information to have upfront! I decided not to pursue either role in the end, though the level misalignment was not ultimately a factor in those decisions. One was a timing thing. The other had a bad reputation for women when I asked around.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #7&lt;/strong&gt;&lt;br&gt;
Make sure to use your network and ask around about companies you're considering. Typically you'll do this research before applying, but recruiter inbound is different. This is especially important as a minoritized individual; be sure to get a clear picture of the company culture before investing too much time in the process.&lt;/p&gt;

&lt;p&gt;But let's get back to the title cut conversations. Knowing the company had a specific level in mind ahead of time was a perfectly reasonable explanation. Unfortunately, there was more than one place I spoke with where the recruiter opened with "you may have to take a title cut" and no further explanation. They were projecting what they thought my experience would count as before interviewing me in any capacity. That was a red flag.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #8&lt;/strong&gt;&lt;br&gt;
There can be a lot of reasons for titles, compensation, etc. Make sure you know why. Context does matter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-offers" class="anchor"&gt;
  &lt;/a&gt;
  The offers
&lt;/h2&gt;

&lt;p&gt;Now we're getting to the final two. The places where I chose to go through all the interviews and ultimately received offers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-e" class="anchor"&gt;
  &lt;/a&gt;
  Company E
&lt;/h3&gt;

&lt;p&gt;Another generic interview! I told you we'd come back to this. But this one was done really well! All the rounds were applicable to my skills, everyone knew what types of signals they were looking for, etc.&lt;/p&gt;

&lt;p&gt;But I still don't like generic interviews. While this experience was far better, it left the team match until the end. It was essentially, "if we like you, we'll find where you fit when we're done". That meant a lot of time was put into a process for a job I didn't know anything about.&lt;/p&gt;

&lt;p&gt;And in the end, I really liked the company. But finding the right team and the right manager felt like a burden I was putting on them, dragging out the process. That wasn't a great way to feel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #9&lt;/strong&gt;&lt;br&gt;
Always take your time and do your research after you're given an offer. If the company tries to rush you, be wary. However, see my note about privilege at the beginning. You may not be able to do this, and that's perfectly ok.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-f" class="anchor"&gt;
  &lt;/a&gt;
  Company F
&lt;/h3&gt;

&lt;p&gt;This was a repeat process so they nixed a few interviews. But the role was in such a different technical area than the first process that it was hard to do more than that. What's interesting about this process was that I was in touch with the hiring manager throughout. I spoke to him early on and checked back in for ~15-minute calls between almost every set of rounds. This was unique among the places I interviewed. In most cases, I'd meet the hiring manager once. And in at least one process they planned to hire me without having met them at all!&lt;/p&gt;

&lt;p&gt;Another interesting part of this process was they were clearly aware of the possibility that I may not choose to work there. This is always true, but rarely is it acknowledged in a scenario where companies hold a lot more power than candidates. This meant that they asked me a lot of questions about what I wanted to do, raised concerns they saw about where the role may not match my needs, etc. I felt confident by the end that I knew what to expect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #10&lt;/strong&gt;&lt;br&gt;
You will almost always have more questions than they give you the time to ask. If you don't feel like you have a good sense of the role, or the team, or the company, or anything else you want to know, make sure you have someone you can follow up with asynchronously.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-patterns" class="anchor"&gt;
  &lt;/a&gt;
  The Patterns
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Every final process included multiple interviews. And each time they'd talk about how each of those interviews was focused on different skills/questions. Yet they consistently repeated questions and I repeated examples/anecdotes. This is a frustrating waste of time that we should address as an industry.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interviewers need to know the skills they're looking for in a candidate or they shouldn't be interviewing them. One size fits all makes zero sense for a company of a certain size, regardless of the level targeted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The tool user problem I talk about in my senior engineers post is absolutely real. The best interviews I had included only one hands-on coding task and you passed based on your approach to the problem, rather than familiarity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There were some red flags I witnessed that I think are worth writing down. They may not be flags to everyone, but they were to me.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Using the term "famous" or "superstar" as a way to appeal to me as a hire. It made me worry about what criteria they were using for the team/company.&lt;/li&gt;
&lt;li&gt;Mentioning that I would help them break the mold of a homogenous team based on friends of friends. I had no interest in being a guinea pig.&lt;/li&gt;
&lt;li&gt;Managers who made it clear they'd rather be ICs and used their time accordingly. Not someone I want helping me navigate the next stages of my career.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There were others, but those three stick in my brain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-next" class="anchor"&gt;
  &lt;/a&gt;
  So what's next?
&lt;/h2&gt;

&lt;p&gt;I'm starting a new job next week! I'll probably mention where in the next few days. But I wanted to focus on the process first. I truly hope it's useful to see this all written down.&lt;/p&gt;

&lt;p&gt;It took a considerable amount of time to find a company I wanted to work for, with a role I was interested in, where the timing aligned. There were times it existed and I didn't pass muster. It was a hard and tiring process but I'll leave you with one final lesson.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LESSON #11&lt;/strong&gt;&lt;br&gt;
People tell you to always be interviewing because the tech industry has turned interviewing into its own skill that you can get rusty at. If you don't want to do that--I didn't--make sure the company you’re most interested in isn’t the one you interview with first. Give yourself a true trial run, with real stakes, to stretch those interviewing muscles. By the time I got to the second phase of companies, I was seeing exercises I'd already seen and solved.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lessons-summary" class="anchor"&gt;
  &lt;/a&gt;
  Lessons Summary
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The first qualified candidate through the process will get hired. If there is a difference of under a week they may hold off, but not always. Find out if you're part of a search for a single seat and what their timeline is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The company may be awesome. You may want it to work. But if the interviews are focused on things you don't like/aren't good at AND you've confirmed that matches the tasks of the role, drop out.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interviews when you're tired put you at a disadvantage. Schedule them as best you can to prevent that eventuality. And if there are jobs you don't want? Drop out and save your energy for the ones you do.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Timing is everything. A company may contact you to interview just as you're about to accept an offer. You may find an amazing role that would be perfect for past you, or future you, but not current you. It's frustrating, but it's good to recognize that a lot of job searching is out of your control.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's really hard to say no. Like, really hard. Especially when the company is small and you don't feel like just another number. But it's best for everyone that you do. Even if you were referred to the role. Be respectful and fair.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There will always be another role open at a company eventually. Don't burn bridges if things don't work out the first time around. And don't be afraid to apply to a new listing even if it's at a company you just completed a process with.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make sure to use your network and ask around about companies you're considering. Typically you'll do this research before applying, but recruiter inbound is different. This is especially important as a minoritized individual; be sure to get a clear picture of the company culture before investing too much time in the process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There can be a lot of reasons for titles, compensation, etc. Make sure you know why. Context does matter.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always take your time and do your research after you're given an offer. If the company tries to rush you, be wary. However, see my note about privilege at the beginning. You may not be able to do this, and that's perfectly ok.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will almost always have more questions than they give you the time to ask. If you don't feel like you have a good sense of the role, or the team, or the company, or anything else you want to know, make sure you have someone you can follow up with asynchronously.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;People tell you to always be interviewing because the tech industry has turned interviewing into its own skill that you can get rusty at. If you don't want to do that--I didn't--make sure the company you’re most interested in isn’t the one you interview with first. Give yourself a true trial run, with real stakes, to stretch those interviewing muscles. By the time I got to the second phase of companies, I was seeing exercises I'd already seen and solved.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>career</category>
      <category>interviewing</category>
      <category>webdev</category>
    </item>
    <item>
      <title>15+ Useful Web Development Tools That You Might Not Know</title>
      <author>Syakir Rahman</author>
      <pubDate>Mon, 29 Mar 2021 13:08:50 +0000</pubDate>
      <link>https://dev.to/syakirurahman/15-useful-web-development-tools-that-you-might-not-know-462f</link>
      <guid>https://dev.to/syakirurahman/15-useful-web-development-tools-that-you-might-not-know-462f</guid>
      <description>&lt;p&gt;Web development tools help developers to build a website or an application easier and faster. It simplifies the development process from design to coding and anything in between.&lt;/p&gt;

&lt;p&gt;As you might have noticed, web technologies are changing rapidly, especially in the front-end. Every year, there will always be a new web technology released. This is also the case with web development tools.&lt;/p&gt;

&lt;p&gt;With so many new tools out there the web development workflow is also changing. It's getting easier and faster. We, developers, should take advantage of these tools to work more efficiently.&lt;/p&gt;

&lt;h2&gt;TL;DR;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="http://quarkly.io/" rel="noreferrer noopener"&gt;Quarkly (design tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.budibase.com/" rel="noreferrer noopener nofollow"&gt;Budibase (low code platform)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://undesign.learn.uno/" rel="noreferrer noopener nofollow"&gt;Undesign (design tools &amp;amp; resources)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/tools/chrome-devtools" rel="noreferrer noopener"&gt;Chrome Dev Tool (debugging tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codekitapp.com/" rel="noreferrer noopener nofollow"&gt;Codekit (compiler configuration)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://zeplin.io" rel="noreferrer noopener nofollow"&gt;Zeplin (collaboration tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/tools/lighthouse" rel="noreferrer noopener"&gt;Lighthouse (testing tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.selenium.dev/" rel="noreferrer noopener nofollow"&gt;Selenium (testing tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docker.com/" rel="noreferrer noopener nofollow"&gt;Docker (deployment tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.gitlab.com/ee/ci/" rel="noreferrer noopener nofollow"&gt;GitLab CI/CD (deployment tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devdocs.io/" rel="noreferrer noopener nofollow"&gt;Devdocs (documentation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caniuse.com/" rel="noreferrer noopener nofollow"&gt;Can I use (documentation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcetreeapp.com/" rel="noreferrer noopener nofollow"&gt;Sourcetree (Git client)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.postman.com/" rel="noreferrer noopener nofollow"&gt;Postman (API client)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webcode.tools/" rel="noreferrer noopener nofollow"&gt;Webcode.tools (code generator)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Useful Web Development Tools That You Need to Try&lt;/h2&gt;

&lt;p&gt;In this post, I'm &lt;strong&gt;not going&lt;/strong&gt; to show you the essential web development tools that you already know such as code editor, git, and popular frameworks. Instead, I will list some useful and unique tools that &lt;strong&gt;you might not know yet&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Most of these tools (if not all) are free to use. You can try them all and decide if they are fit your projects or not. So, let's check them out!&lt;/p&gt;

&lt;h3&gt;1. &lt;a href="http://quarkly.io/" rel="noreferrer noopener"&gt;Quarkly (design tool)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/q-og-1200.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yTodHmpc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/q-og-1200-1024x555.png" alt="Quarkly - design tool for creating websites and web apps" class="wp-image-2873"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At a glance, Quarkly is just like another no-code website builder that helps designers build a website. Well, in fact, it’s more than that.&lt;/p&gt;

&lt;p&gt;Quarkly is a &lt;strong&gt;free&lt;/strong&gt; tool created both for web developers and web designers. It helps not only designers but also developers to build websites and web applications. The workflow speed is faster at that, all the way from design to deployment.&lt;/p&gt;

&lt;p&gt;You’re not only able to design dragging and dropping elements, but also edit, customize, and manage the generated codes with the built-in code editor.&lt;/p&gt;

&lt;p&gt;You can add logic, connect external APIs and add any codes that can’t be generated by the visual builder. Not only that, but you can even add npm packages to your project.&lt;/p&gt;

&lt;p&gt;This way, you have full control over the generated code and can maintain the code quality. It’s not something you can do in regular website builders.&lt;/p&gt;

&lt;p&gt;The code generated by Quarkly is based on &lt;a href="https://www.devaradise.com/category/front-end-development/react-tutorials"&gt;React&lt;/a&gt;, a popular javascript library. So, if you already know React,  you’re going to feel at home in Quarkly.&lt;/p&gt;

&lt;p&gt;To learn more about Quarkly, check out this article: &lt;a href="https://www.devaradise.com/speed-up-web-development-process-using-quarkly"&gt;How to Speed Up Web Development Process Using Quarkly&lt;/a&gt;, or &lt;a href="http://quarkly.io/" rel="noreferrer noopener nofollow"&gt;try Quarkly directly here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;2. &lt;a href="https://www.budibase.com/" rel="noreferrer noopener nofollow"&gt;Budibase (low code platform)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/budibase.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LB31gwoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/budibase.jpg" alt="Budibase" class="wp-image-2925"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Budibase is an open-source low code platform that helps you to build internal apps on your own infrastructure. It claims to be able to build internal tools 50x faster than building internal apps from scratch.&lt;/p&gt;

&lt;p&gt;Budibase builder comes in a desktop platform that allows you to build your web app and preview it.&lt;/p&gt;

&lt;p&gt;With Budibase, you can create a web application using drag’n’drop technology, integrate it with your own database, create automation tasks, and more.&lt;/p&gt;

&lt;p&gt;Here is the summary of Budibase features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Build and ship real software.&lt;/strong&gt; Unlike other platforms, Budibase lets you build and ship single-page applications.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Open source and extensible.&lt;/strong&gt; Budibase is open-source. The builder is licensed AGPL v3, the server is GPL v3, and the client is MPL.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Load data or start from scratch.&lt;/strong&gt; Budibase imports data from multiple sources such as MongoDB, CouchDB, PostgreSQL, mySQL, Airtable, Google Sheets, S3, DyanmoDB, or REST API.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Design and build apps with powerful pre-made components.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Automate processes, integrate with other tools, and connect to webhooks.&lt;/strong&gt; Save time by automating manual processes and workflows.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cloud hosting and self-hosting.&lt;/strong&gt; Users can self-host, or host their apps with Budibase cloud.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;3. &lt;a href="https://undesign.learn.uno/" rel="noreferrer noopener nofollow"&gt;Undesign (design tools &amp;amp; resources)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/undesign-1024x475.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NvixUn-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/undesign-1024x475.jpg" alt="Undesign" class="wp-image-2936"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As web developers, we will always need design resources such as stock photos, illustrations, icons, animations, fonts, and so on which are sometimes quite difficult to find.&lt;/p&gt;

&lt;p&gt;Now, thanks to Undesign, we don’t need to search the Net manually to find the design resources. Undesign collects free design tools and resources and sorts them by categories.&lt;/p&gt;

&lt;p&gt;Need illustrations for your website? Select the illustration category and you will find the list of the best free illustration websites.&lt;/p&gt;

&lt;p&gt;Looking for animations for your site? Go to the animations category and you will find the free animation websites there.&lt;/p&gt;

&lt;p&gt;Other Undesign design resource categories are design inspirations, templates, color palettes, css generators, icons, design utility tools, stock photos, videos, audios, and so on.&lt;/p&gt;

&lt;p&gt;Just check it out to see more.&lt;/p&gt;

&lt;h3&gt;4. &lt;a href="https://developers.google.com/web/tools/chrome-devtools" rel="noreferrer noopener"&gt;Chrome Dev Tool (debugging tool)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/chrome-dev-tools-1024x545.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6V6P-J_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/chrome-dev-tools-1024x545.jpg" alt="Chrome dev tool" class="wp-image-2927"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may be aware of this tool but do you make the most of it? &lt;/p&gt;

&lt;p&gt;Chrome dev tool not only logs bugs in the console tab or inspects elements but also allows you to check website performance, its responsiveness, security, memory usage, local storage, and so on.&lt;/p&gt;

&lt;p&gt;Learn more details about the Chrome dev tool in &lt;a href="https://developers.google.com/web/tools/chrome-devtools" rel="noreferrer noopener nofollow"&gt;official docs here&lt;/a&gt;, or read the following articles: &lt;a href="https://medium.com/frontmen/art-of-debugging-with-chrome-devtools-ab7b5fd8e0b4" rel="noreferrer noopener nofollow"&gt;“Art of debugging with Chrome DevTools”&lt;/a&gt; and &lt;a href="https://usefyi.com/chrome-developer-tools/" rel="noreferrer noopener nofollow"&gt;“The Beginner’s Guide to Chrome Developer Tools”&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Alternatives&lt;/h4&gt;

&lt;p&gt;Other debugging tools that worth mentioning and that you can use as alternatives or along with Chrome dev tool are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://www.mozilla.org/en-US/firefox/developer/" rel="noreferrer noopener"&gt;Firefox developer edition&lt;/a&gt;&lt;/strong&gt;. A browser made specifically for developers with a lot of useful and advanced functionality. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://getcssscan.com/" rel="noreferrer noopener nofollow"&gt;CSS Scan&lt;/a&gt;&lt;/strong&gt;. A browser extension to inspect and edit CSS styles (not free)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://responsively.app/" rel="noreferrer noopener nofollow"&gt;Responsively&lt;/a&gt;&lt;/strong&gt;. An open-source tool to test web responsiveness easier and faster. Responsively can test different devices at once.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;5. &lt;a href="https://codekitapp.com/" rel="noreferrer noopener nofollow"&gt;Codekit (compiler configuration)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/codekit-1024x469.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6Q-DGnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/codekit-1024x469.jpg" alt="Codekit" class="wp-image-2928"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’re a front-end developer, you might use (or at least heard of) CSS preprocessors such as LESS and SASS, or task runners such as Gulp and Grunt.&lt;/p&gt;

&lt;p&gt;They are all great tools to make styling faster and automate some front-end tasks. But you should write the configuration code for them. Sometimes, it got complicated when you develop quite a big project.&lt;/p&gt;

&lt;p&gt;Codekit can solve this problem. Their slogan is “Build websites, not config files”, so Codekit automates the configuration for CSS preprocessors, task runners, and other scripting languages. It can also be used to optimize images and CSS.&lt;/p&gt;

&lt;p&gt;Codekit is available only for Mac users for $38/license for lifetime usage. If you are a windows user or just don’t want to pay for it, you can always choose the alternatives.&lt;/p&gt;

&lt;h4&gt;Alternatives&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://prepros.io/" rel="noreferrer noopener"&gt;&lt;strong&gt;Prepros&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://koala-app.com/" rel="noreferrer noopener nofollow"&gt;&lt;strong&gt;Koala&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;6. &lt;a href="http://zeplin.io" rel="noreferrer noopener nofollow"&gt;Zeplin (collaboration tool)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/zeplin-1024x536.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f2r4xMsK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/zeplin-1024x536.jpg" alt="Zeplin" class="wp-image-2938"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back then when we developed a website based on a design, we should have manually sliced or extracted the assets from the design file. We should have also manually picked the colors using the color picker tool. And if we wanted to create a pixel-perfect website, we had to manually measure the element width, paddings, and margins.&lt;/p&gt;

&lt;p&gt;With Zeplin, those manual things can be automated now. Designers just need to upload the design file (from Figma, Photoshop, Adobe XD, Sketch), select the exportable assets, and publish it.&lt;/p&gt;

&lt;p&gt;Only invited developers can access the Zeplin project. They can export the assets and inspect elements from the project that provides color code, font style, paddings, margins, width, height, and even generated CSS styles.&lt;/p&gt;

&lt;p&gt;Zeplin generates all of them so developers can focus more on coding.&lt;/p&gt;

&lt;p&gt;To use Zeplin, create an account and download the desktop app version if you want to create a project (upload design).&lt;/p&gt;

&lt;p&gt;A free account is limited: you can create only 1 project. But as a developer, you can access all projects you are invited to collaborate on.&lt;/p&gt;

&lt;h4&gt;Alternative &lt;/h4&gt;

&lt;ul&gt;&lt;li&gt;&lt;a href="https://avocode.com/" rel="noreferrer noopener nofollow"&gt;&lt;strong&gt;Avocode&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;7. &lt;a href="https://developers.google.com/web/tools/lighthouse" rel="noreferrer noopener"&gt;Lighthouse (testing tool)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/lighthouse.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hi2fQIDw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/lighthouse.jpg" alt="Lighthouse" class="wp-image-2932"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse is an open-source, automated tool for testing and improving the quality of a web page. It audits at least 4 aspects of the web: performance, accessibility, SEO, and progressive web app.&lt;/p&gt;

&lt;p&gt;It checks page speed, responsiveness, browser cache optimization, assets optimization, etc. if we talk about performance. As for SEO, it checks general on-page SEO parameters.&lt;/p&gt;

&lt;p&gt;Lighthouse is developed by Google and used in some google products &lt;a href="https://developers.google.com/speed/pagespeed/insights" rel="noreferrer noopener"&gt;Google pagespeed insight&lt;/a&gt; and &lt;a href="https://web.dev/measure/" rel="noreferrer noopener nofollow"&gt;https://web.dev/measure/&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;It's also available on Chrome dev tools and on &lt;a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk?hl=en" rel="noreferrer noopener"&gt;Chrome extension&lt;/a&gt;, so you can use it to scan open websites directly, both locally and online.&lt;/p&gt;

&lt;h4&gt;Alternative&lt;/h4&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;a href="https://gtmetrix.com/" rel="noreferrer noopener nofollow"&gt;GTmetrix&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;8. &lt;a href="https://www.selenium.dev/" rel="noreferrer noopener nofollow"&gt;Selenium (testing tool)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/selenium-1024x460.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ScGlamr6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/selenium-1024x460.jpg" alt="Selenium" class="wp-image-2934"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For medium-scale web applications, an organized and automated test is necessary to make sure your applications are bug-free. You can’t rely on manual work to test all features of your web app, so you will need a tool to replace the manual test.&lt;/p&gt;

&lt;p&gt;Selenium is an open-source framework for testing web applications. It’s a tool for automating web application testing on web browsers. It acts like a human who uses your app and tests its features.&lt;/p&gt;

&lt;p&gt;With Selenium, you can create functional tests without learning a test language (Selenium IDE). You can write your tests in Ruby, Java, C#, Python, and Javascript.&lt;/p&gt;

&lt;p&gt;To learn more about Selenium, go to their official website, or &lt;a href="https://www.browserstack.com/selenium" rel="noreferrer noopener nofollow"&gt;read this article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;9. &lt;a href="https://docker.com/" rel="noreferrer noopener nofollow"&gt;Docker (deployment tool)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/docker-1024x387.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sszgZPT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/docker-1024x387.png" alt="Docker" class="wp-image-2930"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker is a platform for developing, shipping, and running applications. It allows you to separate your applications from your infrastructure to deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your apps.&lt;/p&gt;

&lt;p&gt;Docker helps package and run an application in a loosely isolated environment called a container. The isolation and security allow you to run many containers simultaneously on a given host.&lt;/p&gt;

&lt;p&gt;Docker can package an application and its dependencies in a virtual container that can run on any Linux, Windows, or macOS computer. This enables the application to run in a variety of locations, such as on-premises, in a public cloud, and/or in a private cloud.&lt;/p&gt;

&lt;h3&gt;10. &lt;a href="https://docs.gitlab.com/ee/ci/" rel="noreferrer noopener nofollow"&gt;GitLab CI/CD (deployment tool)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/gitlab-cd-ci-1024x477.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n89fM1HH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/gitlab-cd-ci-1024x477.png" alt="Gitlab CD/CI" class="wp-image-2931"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitLab CI/CD is a tool built into GitLab for software development using Continuous Integration, Continuous Delivery, and Continuous Deployment.&lt;/p&gt;

&lt;p&gt;Continuous Integration works by pushing small code chunks to your application’s codebase hosted in a Git repository, and to every push, run a pipeline of scripts to build, test, and validate the code changes before merging them into the main branch.&lt;/p&gt;

&lt;p&gt;Continuous Delivery and Deployment consist of a step further CI, deploying your application to production at every push to the default branch of the repository.&lt;/p&gt;

&lt;p&gt;These methodologies allow you to catch bugs and errors early in the development cycle, ensuring that all the code deployed to production complies with the code standards you established for your app.&lt;/p&gt;

&lt;p&gt;GitLab can also automatically detect, build, test, deploy, and monitor your applications by using &lt;a href="https://docs.gitlab.com/ee/topics/autodevops/index.html" rel="noreferrer noopener nofollow"&gt;Auto DevOps&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Alternatives&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/features/actions" rel="noreferrer noopener nofollow"&gt;&lt;strong&gt;Github actions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/product/features/pipelines" rel="noreferrer noopener nofollow"&gt;&lt;strong&gt;Bitbucket pipelines&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;11. &lt;a href="https://devdocs.io/" rel="noreferrer noopener nofollow"&gt;Devdocs (documentation)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/devdocs-1024x488.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QZ6eHxf8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/devdocs-1024x488.jpg" alt="Devdocs" class="wp-image-2929"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Devdocs.io is a collection of API documentation from various web technologies. It combines nearly 500 API documentations in a fast, organized, and searchable interface, from Angular to Yii framework.&lt;/p&gt;

&lt;p&gt;Devdocs can be used as your web development handbook. It can also work offline, on mobile, and as a Chrome extension.&lt;/p&gt;

&lt;h4&gt;Alternatives&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/" rel="noreferrer noopener nofollow"&gt;&lt;strong&gt;MDN Web Docs&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://w3schools.com/" rel="noreferrer noopener nofollow"&gt;&lt;strong&gt;W3Schools&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;12. &lt;a href="https://caniuse.com/" rel="noreferrer noopener nofollow"&gt;Can I use (documentation)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/caniuse-1024x569.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qOf2twbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/caniuse-1024x569.jpg" alt="Caniuse" class="wp-image-2926"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"Can I use" is an open-source tool that provides up-to-date browser support &amp;amp; compatibility tables of front-end web technologies on desktop and mobile web browsers.&lt;/p&gt;

&lt;p&gt;It checks browser support of CSS properties, DOM APIs, and HTML tags for 17 different browsers in different versions. &lt;/p&gt;

&lt;h3&gt;13. &lt;a href="https://www.sourcetreeapp.com/" rel="noreferrer noopener nofollow"&gt;Sourcetree (Git client)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/source-tree.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_cI8N-sD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/source-tree.jpg" alt="Source tree" class="wp-image-2935"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you know, Git is an essential tool for web development. It helps developers collaborate with each other and manage project changes and versions. &lt;/p&gt;

&lt;p&gt;However, Git is originally a command-line tool as it doesn’t have GUI. So beginners should learn a set of git commands before they can use it. Thanks to Sourcetree, they don’t need to learn all of these commands.&lt;/p&gt;

&lt;p&gt;Sourcetree is a free desktop app that simplifies your interaction with your Git repositories so you can focus on coding. It’s available both for Windows and macOS.&lt;/p&gt;

&lt;p&gt;Sourcetree visualizes and manages your repositories through a simple Git GUI. You can run git commands with just a few clicks.&lt;/p&gt;

&lt;h4&gt;Alternatives&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gitkraken.com/" rel="noreferrer noopener nofollow"&gt;&lt;strong&gt;GitKraken&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://desktop.github.com/" rel="noreferrer noopener nofollow"&gt;&lt;strong&gt;Github Desktop&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;14. &lt;a href="https://www.postman.com/" rel="noreferrer noopener nofollow"&gt;Postman (API client)&lt;/a&gt; &lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/postman-1024x545.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ce4Vsb8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/postman-1024x545.jpg" alt="Postman" class="wp-image-2933"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Postman is an API Client tool that used to test and document APIs created by backend developers. It's packed with features that make it a powerful tool for API exploration and development. It also used as a collaboration tool between &lt;a href="https://www.devaradise.com/how-to-become-front-end-developer"&gt;frontend&lt;/a&gt; and backend developer.&lt;/p&gt;

&lt;p&gt;If you’re a backend developer, you can publish API documentation quickly and easily. Postman can automatically pull your sample requests, headers, code snippets, etc. to populate your documentation page with dynamic examples and machine-readable instruction.&lt;/p&gt;

&lt;p&gt;If you’re a frontend developer, you can test API samples provided by a backend developer before you use them in your web app.&lt;/p&gt;

&lt;h4&gt;Alternative&lt;/h4&gt;

&lt;ul&gt;&lt;li&gt;
&lt;strong&gt;&lt;a href="https://insomnia.rest/" rel="noreferrer noopener nofollow"&gt;Insomnia&lt;/a&gt;&lt;/strong&gt; (A simpler, more lightweight than Postman. But less features.) &lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;15. &lt;a href="https://webcode.tools/" rel="noreferrer noopener nofollow"&gt;Webcode.tools (code generator)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.devaradise.com/wp-content/uploads/2021/03/webcode.tools_-1024x455.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QphtOGSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.devaradise.com/wp-content/uploads/2021/03/webcode.tools_-1024x455.jpg" alt="Webcode tools" class="wp-image-2937"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web Code Tools is a web code generator that let you generate HTML5, CSS3, JSON-LD, Twitter cards, Open graph, and other code snippets.&lt;/p&gt;

&lt;p&gt;It’s a great app for beginner developers, and yet experts can also find something to use in it.&lt;/p&gt;

&lt;p&gt;Web Code Tools available online as a website and as Chrome extension.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;These 15 web development tools are great to help you with the web development workflow. Personally, I use some of them and find them really useful.&lt;/p&gt;

&lt;p&gt;Of course, there are still a lot of web development tools out there that are just as good as them. If you know other tools that are worth to be mentioned here, feel free to add them in the comments below.&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tooling</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Explain API in Plain English</title>
      <author>Somnath Singh</author>
      <pubDate>Mon, 29 Mar 2021 13:01:36 +0000</pubDate>
      <link>https://dev.to/polymathsomnath/explain-api-in-plain-english-54h</link>
      <guid>https://dev.to/polymathsomnath/explain-api-in-plain-english-54h</guid>
      <description>&lt;p&gt;Have you ever heard the word “&lt;strong&gt;API&lt;/strong&gt;,” and wondered exactly what it is? Do you have a vague idea of what it does or what it is used for?&lt;/p&gt;

&lt;p&gt;This is something that you will encounter when you first start programming with any sort of web technology. Many newcomers struggle with this concept, and many get some vague ideas about it and assume that they know what it is.&lt;/p&gt;

&lt;p&gt;Now APIs &lt;a href="https://en.wikipedia.org/wiki/API#Usage"&gt;aren’t exclusive&lt;/a&gt; to web programming but it’s something that you use a lot when you are programming for the web or mobile. In the past, APIs were largely associated with computer operating systems and desktop applications. In recent years though, we have seen the emergence of &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction"&gt;Web APIs&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-an-api" class="anchor"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h1&gt;

&lt;p&gt;It stands for Application Programming Interface. This sounds scary and fancy at the same time! What does that mean? What exactly is an API?&lt;br&gt;
Like most places, I won’t give you a vague definition, full of technical jargon.&lt;/p&gt;

&lt;p&gt;So, here it is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;In a nutshell,&lt;/strong&gt; API is some code that you didn’t write yourself, and that code has some methods that you are allowed to call. It could be something that you download and run from your computer or it could be something that’s someplace else on the web.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;That’s all an API is, in its essence.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Don’t think anything else, when we say an API just stick with the definition mentioned above!&lt;/p&gt;

&lt;p&gt;Is that’s all it is? In its essence, Yes.&lt;/p&gt;

&lt;p&gt;Then why such a fancy name?&lt;/p&gt;

&lt;p&gt;Lets find out!&lt;br&gt;
Let us build an API in JavaScript that will enable us to cook our dinner 🍜(virtually ofc).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r3AY_63H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2020/1%2A6e79uPJ9c-88kgyY-C5wtA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3AY_63H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2020/1%2A6e79uPJ9c-88kgyY-C5wtA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our API Code that is stored in the computer&lt;/p&gt;

&lt;p&gt;As I said, we can have APIs that are local on our computer or saved in a &lt;a href="https://en.wikipedia.org/wiki/Web_API"&gt;remote server,&lt;/a&gt; or it could be something that you can download. We have made one locally and named it API, but it can be named anything.&lt;/p&gt;

&lt;p&gt;It is a JavaScript file that I’ve downloaded and saved into a local folder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oJrExtuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1442/1%2A3ItTKyN0anbcRkbogyLmsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oJrExtuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1442/1%2A3ItTKyN0anbcRkbogyLmsg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I run my webpages, I’m able to use this piece of code:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-GrixdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1348/1%2A7k0y7yFKvViPCSKFWuhYcQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-GrixdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1348/1%2A7k0y7yFKvViPCSKFWuhYcQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is an immediately invoked function expression(IIFE) that is going to run itself.&lt;/p&gt;

&lt;p&gt;At the very bottom, it’s going to return an object, and the object that it’s returning has three properties.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IsS_UpqY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1336/1%2A8H_kVIHNhQPGCn3ZUayJ4Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IsS_UpqY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1336/1%2A8H_kVIHNhQPGCn3ZUayJ4Q.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can call these methods using a dot operator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--232m3D1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1506/1%2AyXQh9L_Kqu8XSRYL0RXKhA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--232m3D1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1506/1%2AyXQh9L_Kqu8XSRYL0RXKhA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Calling methods described in our API.&lt;/p&gt;

&lt;p&gt;When will call these methods in a row, we get an output like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRzcV6ME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2002/1%2AeYW0SSF89HBjB7kMhd1KeQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRzcV6ME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2002/1%2AeYW0SSF89HBjB7kMhd1KeQ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have function &lt;code&gt;steamVeggies()&lt;/code&gt; that calls other function &lt;code&gt;addSpices()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hig7ewhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2398/1%2AIdCfU1H1rGetoazetECDVQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hig7ewhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2398/1%2AIdCfU1H1rGetoazetECDVQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;code&gt;addSpices()&lt;/code&gt; can’t be called directly but I can call &lt;code&gt;steamVeggies()&lt;/code&gt; which will then run the function &lt;code&gt;addSpices()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now what this is doing is just &lt;strong&gt;&lt;em&gt;console logging&lt;/em&gt;&lt;/strong&gt; out some messages, it’s not important what’s being done, what is important is that I have an &lt;strong&gt;object&lt;/strong&gt; with a &lt;strong&gt;name&lt;/strong&gt;. This would be one file that I can download and use, or it could be saved on a remote server, or it could be something that I download and keep with my files, then in my script file, I can use that.&lt;/p&gt;

&lt;p&gt;So, I could say API then dot, and here are the things that were returned from this function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qQHYlsM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1342/1%2AlHPNRX6Ajar52NMeOzzGbw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qQHYlsM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1342/1%2AlHPNRX6Ajar52NMeOzzGbw.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#these-are-the-methods-that-we-can-call" class="anchor"&gt;
  &lt;/a&gt;
  These are the methods that we can call:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pMVQdwJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1348/1%2AKKmW90WlJIutHsXQUG7egA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pMVQdwJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1348/1%2AKKmW90WlJIutHsXQUG7egA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We could say, alright I’m going to call the function &lt;code&gt;step1()&lt;/code&gt; and then I need to call the function &lt;code&gt;step2()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There are other ones in the API like &lt;code&gt;addSpices()&lt;/code&gt; that we can’t call one directly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cPz5pWSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/872/1%2A9tdmkIDtfAzIgZFoXvi-gQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cPz5pWSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/872/1%2A9tdmkIDtfAzIgZFoXvi-gQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;calling this one would give us an error&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TYOvcro4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1264/1%2AXiieM9DlGYbZG1lsiwjzXg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TYOvcro4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1264/1%2AXiieM9DlGYbZG1lsiwjzXg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So there’s code inside there that’s &lt;em&gt;hidden away from us&lt;/em&gt;. We don’t know what it is doing, but some things are &lt;strong&gt;exposed&lt;/strong&gt; to us, which are &lt;strong&gt;&lt;em&gt;public&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;.&lt;/em&gt; We can access those in our code. I can use a &lt;code&gt;step1()&lt;/code&gt;, &lt;code&gt;step2()&lt;/code&gt; and &lt;code&gt;step3()&lt;/code&gt;. These are the things that are available to us from the API.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;P&lt;/strong&gt;rogramming &lt;strong&gt;I&lt;/strong&gt;nterface, the &lt;strong&gt;Interface&lt;/strong&gt; part of it is these three methods:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--232m3D1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1506/1%2AyXQh9L_Kqu8XSRYL0RXKhA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--232m3D1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1506/1%2AyXQh9L_Kqu8XSRYL0RXKhA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the &lt;strong&gt;Interface&lt;/strong&gt; part of the code&lt;/p&gt;

&lt;p&gt;Those methods are the interface for me, to interact with this &lt;strong&gt;API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-GrixdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1348/1%2A7k0y7yFKvViPCSKFWuhYcQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-GrixdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1348/1%2A7k0y7yFKvViPCSKFWuhYcQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is our &lt;strong&gt;Application Programming&lt;/strong&gt; part of the code&lt;/p&gt;

&lt;p&gt;Now, does it make sense why it is called &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;P&lt;/strong&gt;rogramming &lt;strong&gt;I&lt;/strong&gt;nterface?&lt;/p&gt;

&lt;p&gt;Now, above we have used the name API, but it doesn’t have to be called &lt;strong&gt;API.&lt;/strong&gt; It could be called anything. You can call it &lt;a href="https://www.twitter.com/tweetsbysoma"&gt;&lt;strong&gt;&lt;em&gt;Som&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; if we want.&lt;/p&gt;

&lt;p&gt;What you need to understand is that there is this &lt;a href="https://en.wikipedia.org/wiki/Black_box"&gt;&lt;strong&gt;black box&lt;/strong&gt;&lt;/a&gt; hidden away from us. What we know is from the &lt;a href="https://en.wikipedia.org/wiki/API#Documentation"&gt;&lt;em&gt;documentation&lt;/em&gt;&lt;/a&gt;. It says these are the things that we could use and we use those in our program.&lt;/p&gt;

&lt;p&gt;That’s all an &lt;strong&gt;API&lt;/strong&gt; is. Code that somebody else has written, that I have access to, that I can use in my code to accomplish some sort of task.&lt;/p&gt;

&lt;p&gt;It can be sitting on a &lt;a href="https://en.wikipedia.org/wiki/Web_API"&gt;remote server&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;It can be sitting on my own computer,&lt;/p&gt;

&lt;p&gt;It could be something that I have to use &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;&lt;strong&gt;HTTP&lt;/strong&gt;&lt;/a&gt; to talk to, I have to make an &lt;a href="https://developers.google.com/web/updates/2015/03/introduction-to-fetch#:~:text=fetch()%20allows%20you%20to,the%20complex%20API%20of%20XMLHttpRequest."&gt;AJAX requests to the API&lt;/a&gt; to get information back.&lt;/p&gt;

&lt;p&gt;You may encounter the term &lt;strong&gt;RESTful API&lt;/strong&gt; while doing web development. Don’t get confused, It is also a code but it follows a certain &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_properties"&gt;architectural style&lt;/a&gt; and uses &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods"&gt;HTTP requests&lt;/a&gt; to access and use data. That data can be used to GET, PUT, POST and DELETE data types, which refers to the reading, updating, creating and deleting of operations concerning resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But in a nutshell, It is just code that&lt;/strong&gt; &lt;a href="https://en.wikipedia.org/wiki/API_writer#:~:text=An%20API%20writer%20is%20a,system%20architects%2C%20and%20system%20designers."&gt;&lt;strong&gt;&lt;em&gt;somebody else&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;has written to make our life a little bit easier!&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#apis-in-the-context-of-web" class="anchor"&gt;
  &lt;/a&gt;
  APIs in the context of Web
&lt;/h1&gt;

&lt;p&gt;APIs are to the Internet what switchboard operators were to early telecommunications!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--imEvYCIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2240/1%2AAtPMYpX3JcVwjErZ_L9PNw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--imEvYCIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2240/1%2AAtPMYpX3JcVwjErZ_L9PNw.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like how switchboard operators used to connect calls, APIs enables &lt;em&gt;communication between applications or software&lt;/em&gt;. An API or application programming interface is a part of a remote server that &lt;strong&gt;&lt;em&gt;receives requests&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;sends responses&lt;/em&gt;&lt;/strong&gt; when you navigate to a website in your browser.&lt;/p&gt;

&lt;p&gt;Take &lt;a href="https://polymathsomnath.medium.com"&gt;medium.com&lt;/a&gt; for example, A request for data goes out to Medium’s remote server. Once your browser receives the data and processes the code response, the browser displays Medium Page. In this case, Medium’s server is the API that enabled communication and allowed you to access the webpage.&lt;/p&gt;

&lt;p&gt;What is happening here is that your request goes to a code that someone else wrote and stored on the server. It provided you access to the current page that is stored somewhere in the remote server.&lt;/p&gt;

&lt;p&gt;Your request doesn’t go to the server directly! It goes to an API, and that API decides what to do with it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wL1Hzt3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2002/1%2AWVOuLdAW42IcUNUZJ9MxBA.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wL1Hzt3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2002/1%2AWVOuLdAW42IcUNUZJ9MxBA.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Client(left), API (Blue bolt), and Server(right)&lt;/p&gt;

&lt;p&gt;API are also enables &lt;strong&gt;interaction&lt;/strong&gt; and &lt;strong&gt;data alteration&lt;/strong&gt; between two sites like when a webpage has a share to Twitter button, clicking this button triggers communication with your Twitter account, and alters your account by adding a new Tweet.&lt;/p&gt;

&lt;p&gt;Now, this code or API can take many forms depending upon where it is being used. It will get a name respective to that area. To name a few, we have&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Open APIs&lt;/strong&gt; or &lt;strong&gt;Public APIs:&lt;/strong&gt; These are  publicly available to developers and other users with minimal restriction.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Partner APIs:&lt;/strong&gt; These  APIs exposed by/to the strategic business partners. They are not available publicly and need specific entitlement to access them.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Internal APIs or Private APIs:&lt;/strong&gt; These are  hidden from external users and only exposed by internal systems. It is not meant for consumption outside of the company but rather for use across different internal development teams for better productivity and reuse of services.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T5VTtDc_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2272/1%2AB7VbTJM2DzKiUgBjfc8JCw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T5VTtDc_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2272/1%2AB7VbTJM2DzKiUgBjfc8JCw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bird’s eye view 🦅&lt;/p&gt;

&lt;p&gt;Beyond the difference between internal, partner, open APIs, we should mention another approach to categorize APIs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Data APIs&lt;/strong&gt; provide CRUD access to underlying data sets for various databases or SaaS cloud providers.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Internal service APIs&lt;/strong&gt; consist of exposing internal services, reflecting parts of internal processes, or some complex actions.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;External service APIs&lt;/strong&gt; are third-party services that can be embedded into the existing services of the company to bring additional value.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;User experience APIs&lt;/strong&gt; leverage composite APIs to help app developers provide the right experience for each specific device (desktop, mobile, tablet, VPA, IoT).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;APIs may be further classified as local, web, or program APIs:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Local APIs&lt;/strong&gt; is the original form, from which the name came. They offer OS or &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Middleware"&gt;middleware&lt;/a&gt; services to application programs. Microsoft’s &lt;a href="https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet"&gt;.NET&lt;/a&gt; APIs, the &lt;a href="https://en.wikipedia.org/wiki/Telephony_Application_Programming_Interface"&gt;TAPI (Telephony API)&lt;/a&gt; for voice applications, and database access APIs are examples of the local API form.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web APIs&lt;/strong&gt; are designed to represent widely used resources like &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML"&gt;HTML&lt;/a&gt; pages and are accessed using a simple &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP"&gt;HTTP&lt;/a&gt; protocol. Any web &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/URL"&gt;URL&lt;/a&gt; activates a web API. Web APIs are often called &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/REST"&gt;REST (representational state transfer)&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Overview_of_RESTful_API_Description_Languages"&gt;RESTful&lt;/a&gt;.(We discussed it above)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Program APIs&lt;/strong&gt; are based on &lt;a href="https://en.wikipedia.org/wiki/Remote_procedure_call"&gt;remote procedure call (RPC)&lt;/a&gt; technology that makes a remote program component appear to be local to the rest of the software. &lt;a href="https://en.wikipedia.org/wiki/Service-oriented_architecture"&gt;Service oriented architecture (SOA)&lt;/a&gt; APIs, such as Microsoft*&lt;em&gt;’&lt;/em&gt;*s WS-series of APIs, are program APIs.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#api-examples-in-the-developer-community" class="anchor"&gt;
  &lt;/a&gt;
  API examples in the developer community
&lt;/h1&gt;

&lt;p&gt;Companies like Facebook, Google, and Yahoo publish APIs to encourage developers to build on their capabilities. These APIs have given us everything from new internet features that browse the sites of other services, to mobile device apps that offer easy access to web resources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--45dSwjl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/3504/1%2Aw-OMMg4t1kcBfLi3u4Zb5g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--45dSwjl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/3504/1%2Aw-OMMg4t1kcBfLi3u4Zb5g.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;New features, such as &lt;a href="https://en.wikipedia.org/wiki/Content_delivery_network"&gt;&lt;strong&gt;content delivery&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://developers.google.com/web/updates/2018/06/ar-for-the-web"&gt;&lt;strong&gt;augmented reality&lt;/strong&gt;&lt;/a&gt;, and novel applications of wearable technology, are created in large part through these APIs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u4Iq-xT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/3504/1%2AXwvN78h97P5jF9cmSqDo3g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4Iq-xT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/3504/1%2AXwvN78h97P5jF9cmSqDo3g.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next time, Whenever you hear of the word API, Think of it as a code that allows two software programs to communicate with each other by running back and forth between &lt;em&gt;applications&lt;/em&gt;, &lt;em&gt;databases&lt;/em&gt;, and &lt;em&gt;devices&lt;/em&gt; to deliver data and create connectivity.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-we-have-learned" class="anchor"&gt;
  &lt;/a&gt;
  What we have learned
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;  API is some code that you didn’t write yourself, and that code has some methods that you are allowed to use.&lt;/li&gt;
&lt;li&gt;  In context of web, an API is a part of a remote server that &lt;strong&gt;&lt;em&gt;receives requests&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;sends responses&lt;/em&gt;&lt;/strong&gt; when you navigate to a website in your browser.&lt;/li&gt;
&lt;li&gt;  API can take many forms depending upon where it is being used for example &lt;strong&gt;Open APIs&lt;/strong&gt; or &lt;strong&gt;Public APIs, Partner API, Internal Or Private API.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  It can further be classified into &lt;strong&gt;Local API, Web API, Program API.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  In short API is code that allows two software programs to communicate with each other.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, I hope you have a clear understanding of what an API is and its various nuances. I have seen people struggling with this term. Looking at it from a broader perspective will put an end to the struggle, that people have while learning this fancy term, which they call an &lt;strong&gt;API&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you still have any questions, you can ask them in comments or reach out to me on my&lt;/strong&gt; &lt;a href="https://twitter.com/TweetsbySoma"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;. 🙏&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you found this article helpful in someway then consider sharing it with others. Let me know your views on it, because to me &lt;strong&gt;it matters!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Take Care! See you in &lt;a href="https://dev.to/polymathsomnath"&gt;my other post&lt;/a&gt;!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Complete Responsive Personal Portfolio website only using HTML, CSS &amp; Bootstrap</title>
      <author>Monalisha Mondol</author>
      <pubDate>Mon, 29 Mar 2021 12:32:39 +0000</pubDate>
      <link>https://dev.to/monalishamondol/complete-responsive-personal-portfolio-website-only-using-html-css-bootstrap-p5b</link>
      <guid>https://dev.to/monalishamondol/complete-responsive-personal-portfolio-website-only-using-html-css-bootstrap-p5b</guid>
      <description>&lt;p&gt;Here you can learn how to create a responsive personal portfolio website using HTML, CSS, javascript, and bootstrap.&lt;br&gt;
Hello friends, in this article I am going to show you how to create a &lt;strong&gt;responsive personal portfolio website&lt;/strong&gt;. I have already designed many types of websites. I have made this new design for you to get a lot of responses from you in those tutorials. This is a fully responsive personal portfolio website for which I have used Bootstrap 4 code. In addition, common HTML and CSS programming codes have been used. It is designed in a completely modern way. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#watch-the-video-tutorial-to-create-a-responsive-personal-portfolio-website" class="anchor"&gt;
  &lt;/a&gt;
  Watch the video tutorial to create a responsive personal portfolio website
&lt;/h1&gt;

&lt;p&gt;If you want to learn how to make it completely, you can watch the video tutorial below. Here I have shown how I made this design step by step completely beautifully. So you can learn how to make this website beautiful. This is a youtube video. If you can learn something from the video or if the video seems helpful to you, you must like and subscribe to the video. As a result, I get motivated to create other new designs.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8YQ07IUybmo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/8YQ07IUybmo"&gt;Demo and Download Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully, the above video tutorial has helped you to create this personal portfolio website. I have made many more designs before. You can try those designs using the links below and download the required source codes for free.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#some-information-about-this-personal-portfolio-website" class="anchor"&gt;
  &lt;/a&gt;
  Some information about this personal portfolio website
&lt;/h1&gt;

&lt;p&gt;When creating a personal portfolio website, you need to look at a few special things, the most important of which is that you need to design the website in such a way that you can put all your experience and talent in front of your users. A portfolio website is a website where you will showcase your educational qualifications and your experience to the users. They will then hire you for their project according to their needs. So in this case you need to use the website in a modern way, using bright colors and animations to beautifully showcase all your qualities and experiences in front of the users. With this in mind, I have designed this website in a completely modern and professional way. &lt;/p&gt;

&lt;p&gt;This website, which uses beautiful colors and modern programming code, has gained the best of beauty. Here I have used animations in different places like text animation, Snow animation, etc. In the banner section, I used text and snow animation. Here I have used a beautiful large size banner picture and I have shown the snow falling from the top around that banner picture. As a result, the homepage of the website has become especially interesting. Also below is the About R section where you can give all the information about you neatly. There is also a way to show how much knowledge you have about any programming code. Below is the project section. You will be able to showcase your pre-created project or experience in front of your users. As a result, they will understand if you are capable of doing his project. In this case, you can arrange all the projects you have done before. &lt;br&gt;
The Contacts section and the Feedback section of your users have been created to contact you. Of course, a footer section has been made below here. Where there are some footer menus and logos. It has a copyright section. It is of course fully responsive and mobile-friendly. Any user can access this website using any device. I used Bootstrap 4 and CSS programming code to make it responsive.&lt;/p&gt;

&lt;p&gt;I basically used HTML, CSS, and bootstrap programming code to make it. You can download all its code and necessary images for free by clicking on the download button below.&lt;/p&gt;

&lt;p&gt;If you use this design for any other purpose or for any other tutorial, be sure to give proper credit.&lt;/p&gt;

&lt;p&gt;If you like the video tutorial, be sure to &lt;strong&gt;like the video and comment on it so I can encourage you to create new designs&lt;/strong&gt;. You can comment on what kind of design you want. Special thanks to you for reading to the end of the article.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>GitHub Actions Trigger Via Webhooks</title>
      <author>Maina Wycliffe</author>
      <pubDate>Mon, 29 Mar 2021 12:01:29 +0000</pubDate>
      <link>https://dev.to/this-is-learning/github-actions-trigger-via-webhooks-28dg</link>
      <guid>https://dev.to/this-is-learning/github-actions-trigger-via-webhooks-28dg</guid>
      <description>&lt;p&gt;In this article, we are going to look at how we can build a webhook to trigger a GitHub action workflow manually. This can be especially useful when you want to run a workflow where the triggers are external to the repository.&lt;/p&gt;

&lt;p&gt;For instance, in a blogging platform, you might want to run a workflow to rebuild your statically generated website when the content is updated in a headless CMS. Most headless CMSs will request webhooks which they will send requests to when various events take place. For instance, when a new article is published or an old one is updated, you might want to just trigger a rebuild of your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite" class="anchor"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Personal Access Token (PAT) - follow instructions &lt;a href="https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;NB: Please ensure you have selected the &lt;code&gt;workflow&lt;/code&gt; on the scope of the GitHub Personal Access Token (&lt;code&gt;PAT)&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#basics-first" class="anchor"&gt;
  &lt;/a&gt;
  Basics First
&lt;/h2&gt;

&lt;p&gt;GitHub actions provides a &lt;code&gt;repository_dispatch&lt;/code&gt; event to allow us to manually trigger a GitHub action workflow. To use this, we are going to configure our GitHub action workflow to run on &lt;code&gt;repository_dispatch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And then, we will specify the types of event upon which they will be triggered by. These event types are user defined and can be anything you wish them to be.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can learn more about &lt;code&gt;repository_dispatch&lt;/code&gt; &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#repository_dispatch"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For instance, here is an example of a GitHub action workflow config which runs when a new blog post is published:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# publish blog using webhook&lt;/span&gt;
  &lt;span class="na"&gt;repository_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;publish_blog&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

 &lt;span class="c1"&gt;# steps&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the case above, we will make a post request to create repository dispatch action endpoint with &lt;code&gt;event_type&lt;/code&gt; of &lt;code&gt;publish_blog&lt;/code&gt; and that's when the GitHub Action will get triggered and not by any other event type. The &lt;code&gt;event_type&lt;/code&gt; allows you to trigger a specific GitHub action workflow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#triggering-the-action" class="anchor"&gt;
  &lt;/a&gt;
  Triggering the Action
&lt;/h3&gt;

&lt;p&gt;In order to trigger the action above, we are going to send a POST request to the GitHub API endpoint for &lt;a href="https://docs.github.com/en/rest/reference/repos#create-a-repository-dispatch-event"&gt;creating a repository dispatch event&lt;/a&gt;. The URL follows the following format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.github.com/repos/[USERNAME]/[REPOSITORY]/dispatches
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Replace the &lt;code&gt;[USERNAME]&lt;/code&gt; with your GitHub owner i.e. your username or organization and &lt;code&gt;[REPOSITORY]&lt;/code&gt; with the name of the repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To specify the GitHub Workflow to trigger, you need to provide &lt;code&gt;event_type&lt;/code&gt; in the body. The &lt;code&gt;event_type&lt;/code&gt; specified must be listed in the types array section of the &lt;code&gt;repository_dispatch&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodejs-example" class="anchor"&gt;
  &lt;/a&gt;
  NodeJS Example
&lt;/h3&gt;

&lt;p&gt;For this example, we are going to use &lt;a href="https://www.npmjs.com/package/got"&gt;Got&lt;/a&gt;, a Node JS library for sending HTTP requests.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.github.com/repos/[USERNAME]/[REPOSITORY]/dispatches&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;githubPAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GITHUB_PAT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// keep this secret&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;got&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;json&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;event_type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;publish_blog&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;githubPAT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; Remember to substitute &lt;code&gt;[USERNAME]&lt;/code&gt;, &lt;code&gt;[REPOSITORY]&lt;/code&gt; and &lt;code&gt;GITHUB_PAT&lt;/code&gt; with the appropriate values.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The above request is going to trigger all GitHub Actions workflows which are listening to event type &lt;code&gt;publish_blog&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-a-webhook" class="anchor"&gt;
  &lt;/a&gt;
  Building a Webhook
&lt;/h2&gt;

&lt;p&gt;Now that we have the basics out, we are going to build a Webhook which we can use to trigger our workflow. While the GitHub dispatch event does qualify to be a webhook, you might want to simplify the API being exposed. This is because some systems where you might want to use the webhook in, will not be that configurable. Some will just give you the option of entering a URL and nothing more, which makes it difficult to use the GitHub Dispatches API directly.&lt;/p&gt;

&lt;p&gt;For the purpose of this article, we will be using &lt;a href="https://firebase.google.com/docs/functions"&gt;Firebase Cloud Functions,&lt;/a&gt; but any rest endpoint will do. This will expose a public &lt;code&gt;GET&lt;/code&gt; endpoint that we can pass an &lt;code&gt;action&lt;/code&gt; query param, which will be the type of event we want to trigger and will default to &lt;code&gt;publish_blog&lt;/code&gt;. We will use &lt;a href="https://firebase.google.com/docs/functions/config-env"&gt;Firebase Functions Config&lt;/a&gt; to pass the GitHub PAT to the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;triggerGithubActionWorkflow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatchAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;publish_blog&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.github.com/repos/[USERNAME]/[REPOSITORY]/dispatches&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;githubPAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;got&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;json&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;event_type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;dispatchAction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;githubPAT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Dispatch Github action event emitted successfully!`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; The above Firebase function is public and might wise to add some security measures to prevent anyone from triggering your GitHub Action workflow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we looked at how we can trigger GitHub Action workflows Webhooks. We used the &lt;a href="https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#repository_dispatch"&gt;create repository dispatch&lt;/a&gt; GitHub API endpoint to trigger our GitHub Action Workflow and created our own REST Endpoint to act as a Webhook to integrate with third party APIs.&lt;/p&gt;

&lt;p&gt;Like I pointed out above, our example could use more security measures to ensure that not just anyone with the REST Endpoint can trigger the GitHub Action Workflow. This will most depend on how the web hook is called, if it's part of a dashboard, you could ensure the user in question has permission to perform the action in question or it could be as simple as using passphrase.&lt;/p&gt;

</description>
      <category>github</category>
      <category>devops</category>
      <category>action</category>
    </item>
    <item>
      <title>Mastering Python Lists</title>
      <author>Eric Chapman</author>
      <pubDate>Mon, 29 Mar 2021 11:45:41 +0000</pubDate>
      <link>https://dev.to/ericchapman/python-list-414e</link>
      <guid>https://dev.to/ericchapman/python-list-414e</guid>
      <description>&lt;p&gt;Hi, here are common Pyton List Manipulation methods.&lt;/p&gt;

&lt;p&gt;If you like this post and want more follow me on Twitter: &lt;a href="https://twitter.com/justericchapman?ref_src=twsrc%5Etfw" class="twitter-follow-button"&gt;Follow @justericchapman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Python, List are a collection of items is particular order. You can put anything you want into a List.&lt;/p&gt;

&lt;p&gt;By convention normally you will make the name your List plural. For example a list of person can be name people.&lt;/p&gt;

&lt;p&gt;Python use square bracket [] to indicate a List, and individual elements are separated by commas.&lt;/p&gt;

&lt;p&gt;List is zero base. That mean the first position is 0 and the second position is 1, etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create a list
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'orange'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'melon'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Accessing a List element
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# first item
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# last item
&lt;/span&gt;
&lt;span class="c1"&gt;# Append to List
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Insert to List at position x
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# will be insert second in the List
&lt;/span&gt;
&lt;span class="c1"&gt;# List length
&lt;/span&gt;&lt;span class="n"&gt;nb_items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 4
&lt;/span&gt;
&lt;span class="c1"&gt;# Remove from list
&lt;/span&gt;&lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="c1"&gt;# remove apple
&lt;/span&gt;
&lt;span class="c1"&gt;# Remove and return last element
&lt;/span&gt;&lt;span class="n"&gt;lastFruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   &lt;span class="c1"&gt;# remove last and return it's value into lastFruit
&lt;/span&gt;
&lt;span class="c1"&gt;# Slice my_list[start:finish:step] ([::-1] reverse list) 
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# first 3
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;  &lt;span class="c1"&gt;# last 2
&lt;/span&gt;&lt;span class="n"&gt;copy_fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[:]&lt;/span&gt; &lt;span class="c1"&gt;# copy 
&lt;/span&gt;
&lt;span class="c1"&gt;#Create list from string
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'red, green, blue'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Reverse a List
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Array concact
&lt;/span&gt;&lt;span class="n"&gt;color1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;color2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;color3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;color2&lt;/span&gt;

&lt;span class="c1"&gt;# Concat by unpacking
&lt;/span&gt;&lt;span class="n"&gt;color3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;color1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;color2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Multiple assignment
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'iPhone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;599&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#Create a Tuple (kind of read only list)
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Sort
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# ['blue', 'green', 'red']
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['red', 'green', 'blue']
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# ['red', 'blue', 'green']
&lt;/span&gt;
&lt;span class="c1"&gt;# Looping in a List
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Generate a List of numbers
&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 1 2 3 4 5 6 7 8 9
&lt;/span&gt;
&lt;span class="c1"&gt;# List comprehension offers a shorter syntax when you want 
# to create a new list based on the values of an existing list.
&lt;/span&gt;
&lt;span class="c1"&gt;# Example of long version
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"banana"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"cherry"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"kiwi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"mango"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;newFruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;newFruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newFruits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Same example with List Comprehension 
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"banana"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"cherry"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"kiwi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"mango"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;newFruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# Syntax:   [expression for item in iterable if condition == True]
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newFruits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>You ain't gonna need it</title>
      <author>Lina Jelinčić</author>
      <pubDate>Mon, 29 Mar 2021 11:42:06 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/you-ain-t-gonna-need-it-517j</link>
      <guid>https://dev.to/bornfightcompany/you-ain-t-gonna-need-it-517j</guid>
      <description>&lt;p&gt;I love coming back to a feature that was developed a couple of months ago and seeing that extending it is just a walk in a park. When thinking about a solution, I always ask myself the same question: If I were to change this in a month, how hard would it be?&lt;/p&gt;

&lt;p&gt;I find it a great way to catch flaws in my solutions very early, but it can also lead to something called &lt;strong&gt;overengineering&lt;/strong&gt;. To put it simple, overengineering is the act of solving a problem that doesn’t exist anywhere besides your mind. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overengineering-leads-to-bad-code" class="anchor"&gt;
  &lt;/a&gt;
  Overengineering leads to bad code
&lt;/h3&gt;

&lt;p&gt;It took me a long time to realize that even though my code is nice, clean and easy to extend, it is still a &lt;strong&gt;bad&lt;/strong&gt; code. It often introduces unnecessary complexity, being harder to maintain and harder to understand by other devs, while taking a longer time to build.&lt;/p&gt;

&lt;p&gt;None of it is a bad thing by itself. If you were to code just to get it done, you can get by, but in a month all you would get is messy, spaghetti code that nobody wants to work with in the future. It becomes a bad thing when that price is paid for a feature that you really don’t need.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-you-actually-need-it" class="anchor"&gt;
  &lt;/a&gt;
  Do you actually need it?
&lt;/h3&gt;

&lt;p&gt;I’m still fighting this battle myself and the thing that is helping me is a principle of extreme programming (XP) called &lt;strong&gt;“You ain’t gonna need it”&lt;/strong&gt; (or simply, YAGNI). XP co-founder Ron Jeffries has written: "Always implement things when you actually need them, never when you just foresee that you need them.”&lt;/p&gt;

&lt;p&gt;Now, whenever I start overthinking and catch myself wondering “But what if X happens” I just stop and write down my what ifs. Also, I think about &lt;strong&gt;what would happen if that feature is not implemented&lt;/strong&gt;. Is the added complexity the price I’m willing to pay just now?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-that-call-is-not-easy" class="anchor"&gt;
  &lt;/a&gt;
  Making that call is not easy
&lt;/h3&gt;

&lt;p&gt;It is important to differ what is needed and what is not, even though it is difficult to do that. If that is a decision you are having problems with, ask your teammates. A fresh look at the problem is something that always helps. If for whatever reason that is not possible, go with a simpler solution. &lt;strong&gt;Keep the list of what ifs and if they actually happen, choose the more complex solution.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;This approach helped me with decision making paralysis and I believe it also made me a better developer.&lt;/p&gt;

&lt;p&gt;How about you? Do you also sometimes overengineer? What are your tips and tricks for deciding what is needed and what is not?&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>yagni</category>
      <category>codequality</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Back to Basics: Understanding and Conquering "this" in Javascript</title>
      <author>Zack Sheppard</author>
      <pubDate>Mon, 29 Mar 2021 11:36:43 +0000</pubDate>
      <link>https://dev.to/zackdotcomputer/back-to-basics-understanding-and-conquering-this-in-javascript-4pbd</link>
      <guid>https://dev.to/zackdotcomputer/back-to-basics-understanding-and-conquering-this-in-javascript-4pbd</guid>
      <description>&lt;p&gt;I've been thinking about &lt;code&gt;this&lt;/code&gt; a lot recently because I've been messing around with a lot of chained callback functions in my web code. This is a good opportunity to go back to basics and recap how &lt;code&gt;this&lt;/code&gt; works in Javascript and what tools exist to tame its quirks.&lt;/p&gt;

&lt;p&gt;For new developers coming from a more typically object-oriented language like Java or Swift, Javascript's weird use of the &lt;code&gt;this&lt;/code&gt; keyword is a trap waiting to crash your code at any moment. This is especially dangerous if you're using React's class components, where you're often defining methods on your class to act as a callback handler. If you blindly assume that &lt;code&gt;this&lt;/code&gt; is going to behave the way you've come to expect, you're gonna have a bad time. So, let's understand &lt;code&gt;this&lt;/code&gt; enemy so we can learn how to fight it:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-raw-this-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;this&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ZpNEeC9UmJw9AOGoSb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ZpNEeC9UmJw9AOGoSb/giphy.gif" alt="What's This"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start with the basics of how we expect &lt;code&gt;this&lt;/code&gt; to work under the best circumstances:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theirName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;theirName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;introduce&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello I'm &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;william&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bill&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;william&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;introduce&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Prints out "Hello I'm Bill"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is pretty straightforward: there is a class of object called &lt;code&gt;Person&lt;/code&gt;. Each &lt;code&gt;Person&lt;/code&gt; remembers a variable called &lt;code&gt;name&lt;/code&gt; and has a method called &lt;code&gt;introduce&lt;/code&gt;. When you call &lt;code&gt;introduce&lt;/code&gt; on a person it looks at that person's &lt;code&gt;name&lt;/code&gt; and prints an introduction. &lt;strong&gt;So, &lt;code&gt;this&lt;/code&gt; is a reference to the object whose instance of &lt;code&gt;introduce&lt;/code&gt; we're looking at, right?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well, not quite. Take a look at this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Continued from above&lt;/span&gt;

&lt;span class="c1"&gt;// This doesn't RUN william's introduce function,&lt;/span&gt;
&lt;span class="c1"&gt;// it makes a REFERENCE to it&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;introduceWilliam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;william&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;introduce&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Because it's a reference to a method that worked,&lt;/span&gt;
&lt;span class="c1"&gt;// we might assume the reference will also work but...&lt;/span&gt;
&lt;span class="nx"&gt;introduceWilliam&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Uncaught TypeError! Cannot read property 'name' of undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we've delved below the calm surface into the dark depths of a functional programming language written in the 90's.&lt;/p&gt;

&lt;p&gt;You have to remember that as far as Javascript is concerned &lt;strong&gt;functions are just another kind of object&lt;/strong&gt;. They can be stored, passed around, and executed anywhere.&lt;/p&gt;

&lt;p&gt;When you call &lt;code&gt;someThing.someFunc()&lt;/code&gt;, Javascript parses that you want to &lt;strong&gt;execute the instructions in &lt;code&gt;someFunc&lt;/code&gt; in the context of &lt;code&gt;someThing&lt;/code&gt;&lt;/strong&gt;. That is to say, set &lt;code&gt;this&lt;/code&gt; to &lt;code&gt;someThing&lt;/code&gt; and then execute the instructions.&lt;/p&gt;

&lt;p&gt;But if you make a reference to &lt;code&gt;someFunc&lt;/code&gt;, you could execute it anywhere. Above, we called it in the global context, which leaves &lt;code&gt;this&lt;/code&gt; as &lt;code&gt;undefined&lt;/code&gt; when you're in strict mode. You can even use the function's &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt; methods (functions on a function!) to provide any context and args you desire.&lt;/p&gt;

&lt;p&gt;Let's write some mildly horrifying code to demonstrate this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Still using william from above&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;william&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bill&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Make a reference to william's introduce method&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;introduce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;william&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;introduce&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Make an unrelated object - Bagel the Beagle&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bagel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;breed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Beagle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="c1"&gt;// Run function with manual `this` - Dogs can talk now&lt;/span&gt;
&lt;span class="nx"&gt;introduce&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;puppy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Prints "Hello I'm Bagel"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#taming-raw-this-endraw-beast" class="anchor"&gt;
  &lt;/a&gt;
  Taming &lt;code&gt;this&lt;/code&gt; Beast
&lt;/h2&gt;

&lt;p&gt;This &lt;code&gt;this&lt;/code&gt; is incredibly, and often unnecessarily, powerful. Like many incredibly powerful things, it is also incredibly dangerous. Because of how often we pass around references to functions - to use as callbacks for &lt;code&gt;button&lt;/code&gt;s or &lt;code&gt;form&lt;/code&gt;s, for example - the unbound nature of &lt;code&gt;this&lt;/code&gt; is just lying in wait to trip you up.&lt;/p&gt;

&lt;p&gt;So how do we tame &lt;code&gt;this&lt;/code&gt;? I could shake my cane at you and croak &lt;em&gt;"Well, back in **my&lt;/em&gt;* day..."* but the truth is that the ES5 and ES2015 revisions to Javascript gave us everything we need to clamp down wandering &lt;code&gt;this&lt;/code&gt; values:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#functionprototypebind" class="anchor"&gt;
  &lt;/a&gt;
  Function.prototype.bind()
&lt;/h3&gt;

&lt;p&gt;Added in ES5, the first tool we got was the  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind"&gt;&lt;code&gt;bind()&lt;/code&gt;&lt;/a&gt; function, a standardization of &lt;code&gt;this&lt;/code&gt; hacks that the various utility libraries of the 2000's had innovated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Bind this reference to introduce so this is ALWAYS william.&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;alwaysIntroduceWilliam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;william&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;introduce&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;william&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;alwaysIntroduceWilliam&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Prints "Hello I'm Bill"&lt;/span&gt;
&lt;span class="nx"&gt;alwaysIntroduceWilliam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;puppy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Prints "Hello I'm Bill"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;bind&lt;/code&gt; does what it says on the tin. It binds the function to a chosen &lt;code&gt;this&lt;/code&gt; - ensuring that the instructions inside are &lt;strong&gt;always&lt;/strong&gt; run in the context we choose. Here you can see that even if we try to use &lt;code&gt;call&lt;/code&gt; to set a different &lt;code&gt;this&lt;/code&gt;, the &lt;code&gt;bind&lt;/code&gt; overpowers and we're always introducing &lt;code&gt;william&lt;/code&gt;. This was a great first step towards fixing &lt;code&gt;this&lt;/code&gt;, but these days is less commonly used because of...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arrowd-gt" class="anchor"&gt;
  &lt;/a&gt;
  Arrow'd =&amp;gt;
&lt;/h3&gt;

&lt;p&gt;Added in ES2015, arrow functions gave us (almost accidentally) the most common way of fixing &lt;code&gt;this&lt;/code&gt; to the value that we expect. This is because an arrow function &lt;strong&gt;creates a closure over the context in which it was defined.&lt;/strong&gt; What that means is that all the variables referenced inside the arrow will always reference the same references in memory as when the arrow was first parsed.&lt;/p&gt;

&lt;p&gt;This is incredibly useful for capturing local variables so that they can be used later, but it has the added benefit of capturing the value of &lt;code&gt;this&lt;/code&gt; that was set when the arrow was defined. And, since &lt;code&gt;this&lt;/code&gt; is (basically) always going to be the object being created during construction, we can use arrow functions to make methods where &lt;code&gt;this&lt;/code&gt; will behave exactly like we expect:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Rewriting Person with arrows&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ArrowPerson&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theirName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;theirName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;introduce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// The arrow captures `this` so it is actually a&lt;/span&gt;
    &lt;span class="c1"&gt;// reference to THIS Person.&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello I'm &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrowBill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ArrowPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Arrow Bill&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;arrowBill&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;introduce&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// "Hello I'm Arrow Bill"&lt;/span&gt;

&lt;span class="c1"&gt;// Now `this` is fixed even as we pass the function around:&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;introduceRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arrowBill&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;introduce&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;introduceRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// "Hello I'm Arrow Bill"&lt;/span&gt;
&lt;span class="nx"&gt;introduceRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;puppy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "Hello I'm Arrow Bill"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#-raw-this-endraw-all-makes-more-sense-now" class="anchor"&gt;
  &lt;/a&gt;
  &lt;code&gt;this&lt;/code&gt; all makes more sense now
&lt;/h2&gt;

&lt;p&gt;I hope you understand &lt;code&gt;this&lt;/code&gt; a little bit better now. To be honest, I think I understand it better just from &lt;em&gt;writing&lt;/em&gt; this all out. And, because the Javascript &lt;code&gt;this&lt;/code&gt; can affect all your code that transpiles into Javascript, hopefully this will also help you understand the twists and turns of function context in other languages like Typescript.&lt;/p&gt;

&lt;p&gt;If you have any questions about &lt;code&gt;this&lt;/code&gt;, drop them in the comments below. Even after years writing for the web, I'm still learning so I'm sure there are terrible dangers and cool facts about &lt;code&gt;this&lt;/code&gt; I forgot or don't yet know.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>DOM Methods append() vs appendChild()</title>
      <author>Steve Griffith</author>
      <pubDate>Mon, 29 Mar 2021 11:28:07 +0000</pubDate>
      <link>https://dev.to/prof3ssorst3v3/dom-methods-append-vs-appendchild-1lf3</link>
      <guid>https://dev.to/prof3ssorst3v3/dom-methods-append-vs-appendchild-1lf3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#back-in-the-day" class="anchor"&gt;
  &lt;/a&gt;
  Back in the Day
&lt;/h2&gt;

&lt;p&gt;Starting back with the earliest versions of the DOM we had the ability to inject new content into our web pages by using the &lt;code&gt;innerHTML&lt;/code&gt; property or the &lt;code&gt;parentNode.appendChild()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;If you had a &lt;code&gt;DOMString&lt;/code&gt;, which is a &lt;code&gt;String&lt;/code&gt; that represents some new HTML content for your page, then it made sense to use &lt;code&gt;innerHTML&lt;/code&gt;. We could even concatenate our content on to the old version of the HTML like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p class="recent"&amp;gt;This is &amp;lt;em&amp;gt;NEW&amp;lt;/em&amp;gt; content.&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These were the days when the DOM methods and properties you could use, &lt;strong&gt;really&lt;/strong&gt; depended on which Browser you were using. 😬 You frequently had to test for script capabilities and figure out which browser was being used.&lt;/p&gt;

&lt;p&gt;There have actually been different versions of the DOM. Version 0, 1, and 2. These disparities led to the rise of libraries like &lt;code&gt;prototype&lt;/code&gt;, &lt;code&gt;mootools&lt;/code&gt;, &lt;code&gt;scriptaculous&lt;/code&gt;, and &lt;code&gt;jQuery&lt;/code&gt;. 15 years ago you were grateful to have a library 📚 that let you skip all the testing and call one method which would work in all browsers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#appendchild-usage" class="anchor"&gt;
  &lt;/a&gt;
  AppendChild Usage
&lt;/h2&gt;

&lt;p&gt;If you were generating content and elements dynamically then developers tended to use &lt;code&gt;appendChild&lt;/code&gt;. It has been around since those early DOM days.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is &amp;lt;em&amp;gt;NEW&amp;lt;/em&amp;gt; content.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would even mix and match, creating top level elements with &lt;code&gt;createElement&lt;/code&gt; and then using &lt;code&gt;innerHTML&lt;/code&gt; for the text inside the element, just in case it included inline elements like &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For nearly 20 years this was what we did in vanilla JS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-new-methods-arrive" class="anchor"&gt;
  &lt;/a&gt;
  The New Methods Arrive
&lt;/h2&gt;

&lt;p&gt;Between 2016 and 2018 all the standard browsers added support for a number of new DOM methods, including &lt;code&gt;parentNode.append()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On the surface, no big deal. I can now save myself typing the letters &lt;code&gt;C-h-i-l-d&lt;/code&gt;. Right? &lt;/p&gt;

&lt;p&gt;True. &lt;strong&gt;BUT&lt;/strong&gt;. It comes with some cool new capabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SvlF720A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5x211vhskq3pzf8mqt3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SvlF720A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5x211vhskq3pzf8mqt3.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-the-way" class="anchor"&gt;
  &lt;/a&gt;
  This is the Way
&lt;/h2&gt;

&lt;p&gt;These new capabilities are what sets &lt;code&gt;append&lt;/code&gt; apart from &lt;code&gt;appendChild&lt;/code&gt; and are the reason you should switch today! 🗓️&lt;/p&gt;

&lt;p&gt;First, the new &lt;code&gt;parentNode.append()&lt;/code&gt; method is happy to accept &lt;code&gt;DOMStrings&lt;/code&gt;, not &lt;strong&gt;just&lt;/strong&gt; DOM Elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p class="recent"&amp;gt;This is &amp;lt;em&amp;gt;NEW&amp;lt;/em&amp;gt; content.&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It still accepts DOM Element Objects but it can handle the DOMStrings too.&lt;/p&gt;

&lt;p&gt;Second, the new &lt;code&gt;parentNode.append()&lt;/code&gt; method lets you pass in multiple elements. That means I can add a series of new Elements and/or DOMStrings with one single call to &lt;code&gt;append&lt;/code&gt; and they will be added in order!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//create a heading Element Node with text&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Section Heading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//create a paragraph DOMString&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;p1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p class="recent"&amp;gt;This is &amp;lt;em&amp;gt;NEW&amp;lt;/em&amp;gt; content.&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//create a paragraph Element Node with an Img Element Node&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;p2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://www.example.com/image.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//put all three into &amp;lt;div id="main"&amp;gt;, in order&lt;/span&gt;
&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#whats-the-catch" class="anchor"&gt;
  &lt;/a&gt;
  What's the Catch
&lt;/h2&gt;

&lt;p&gt;There is always a catch. What does it not do that &lt;code&gt;appendChild&lt;/code&gt; could?&lt;/p&gt;

&lt;p&gt;Only one thing. The older &lt;code&gt;appendChild&lt;/code&gt; method returned a reference to the node that was appended. The newer &lt;code&gt;append&lt;/code&gt; method returns undefined.&lt;/p&gt;

&lt;p&gt;Is that bad? Not really. As you can see in my example above, much of the time you already have variables that refer to the elements you are appending.&lt;/p&gt;

&lt;p&gt;And honestly, in the 20+ years of client-side scripting where I have been using &lt;code&gt;appendChild&lt;/code&gt;, I have never used the return value from the method.&lt;/p&gt;

&lt;p&gt;So, start today. If you were using &lt;code&gt;appendChild&lt;/code&gt; change the habit and use &lt;code&gt;append&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;If you want to learn more about the DOM, Javascript or practically any web development topic: please check out my &lt;a href="https://www.youtube.com/c/SteveGriffith-Prof3ssorSt3v3/videos"&gt;YouTube channel&lt;/a&gt; for hundreds of video tutorials.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>dom</category>
    </item>
  </channel>
</rss>
