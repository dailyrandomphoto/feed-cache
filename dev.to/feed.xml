<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Making Friendly CSS With Tailwind CSS</title>
      <author>Mihaela</author>
      <pubDate>Tue, 15 Jun 2021 09:37:24 +0000</pubDate>
      <link>https://dev.to/workshub/making-friendly-css-with-tailwind-css-3me2</link>
      <guid>https://dev.to/workshub/making-friendly-css-with-tailwind-css-3me2</guid>
      <description>&lt;p&gt;Writing CSS can aggravate developers, but with tailwind, CSS becomes more friendly to use.&lt;br&gt;
In this article, I will be taking you on a journey into the utility first framework, “Tailwind.”&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-tailwind-css"&gt;
  &lt;/a&gt;
  What is Tailwind CSS?
&lt;/h2&gt;

&lt;p&gt;According to the &lt;a href="https://tailwindcss.com/"&gt;official documentation&lt;/a&gt;, Tailwind CSS is a utility-first CSS framework for rapidly building custom user interfaces. Tailwind enables you to write inline styling and achieve a fantastic user interface without leaving your HTML code and writing a single line of CSS.&lt;/p&gt;

&lt;p&gt;In contrast to other CSS frameworks like Bootstrap or Materialize CSS, Tailwind CSS doesn’t come with predefined or built-in components. Instead, Tailwind CSS provides you with a set of CSS helper classes that enables you to create a custom design with ease.&lt;/p&gt;

&lt;p&gt;In my opinion, most sites built with Bootstrap always look alike and have the same feel. But Tailwind CSS is not opinionated, and it allows you to create your unique design.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-a-project-with-tailwind-css"&gt;
  &lt;/a&gt;
  Setting up a project with Tailwind CSS.
&lt;/h2&gt;

&lt;p&gt;Learn how to get Tailwind CSS up and run your project.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#using-tailwind-via-cdn"&gt;
  &lt;/a&gt;
  Using Tailwind via CDN
&lt;/h3&gt;

&lt;p&gt;Using tailwind via CDN is excellent if you want to set up a simple project or quick demo quickly. But note that many great tailwind features are not available via CDN.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#here-is-the-latest-default-configuration-via-cdn"&gt;
  &lt;/a&gt;
  Here is the latest default configuration via CDN:
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#html-starter-template"&gt;
  &lt;/a&gt;
  HTML starter template
&lt;/h3&gt;

&lt;p&gt;This is what your HTML5 doctype looks like when you include tailwind CDN.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
 &amp;lt;meta charset="UTF-8" /&amp;gt;
 &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&amp;gt;
 &amp;lt;link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet"&amp;gt;

&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;Welcome to Tailwind CDN&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-tailwind-via-npm"&gt;
  &lt;/a&gt;
  Install Tailwind via npm
&lt;/h3&gt;

&lt;p&gt;Installing tailwind via npm or yarn gives you access to  tailwind awesome features, unlike using tailwind via CDN.&lt;/p&gt;

&lt;p&gt;Before you install tailwind via npm,  create a new package.json file by using the npm command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then Install tailwind  via npm&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install tailwindcss
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#include-tailwind-in-your-css"&gt;
  &lt;/a&gt;
  Include Tailwind in your CSS
&lt;/h3&gt;

&lt;p&gt;The next step is to include Tailwind in your CSS. You can do that by creating a new CSS folder. If you don’t have one, then you create a CSS file. You can name it whatever you like, but I would be naming it &lt;code&gt;style.css&lt;/code&gt; for the sake of the project.&lt;/p&gt;

&lt;p&gt;Add the following to the  &lt;code&gt;style.css&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; /* ./css/style.css */
@tailwind base;
@tailwind components;
@tailwind utilities;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-postcss-plugins"&gt;
  &lt;/a&gt;
  Add postcss plugins
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install postcss-cli autoprefixer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-your-configuration-file"&gt;
  &lt;/a&gt;
  Create your configuration file
&lt;/h3&gt;

&lt;p&gt;To complete the tailwind setup, we will create a configuration file that enables you to customize your tailwind project.&lt;/p&gt;

&lt;p&gt;use this command to create a configuration file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx tailwindcss init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a &lt;code&gt;tailwind.config.js&lt;/code&gt; file at the root of your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// tailwind.config.js
module.exports = {
  purge: [],
  darkMode: false, // or 'media' or 'class'
  theme: {
    extend: {},
  },
  variants: {},
  plugins: [],
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#processing-css-with-tailwind"&gt;
  &lt;/a&gt;
  Processing CSS with Tailwind
&lt;/h3&gt;

&lt;p&gt;You can add tailwind and autoprefixer to your PostCSS configuration by creating a  &lt;code&gt;postcss.config.js&lt;/code&gt; file at the root of your project.&lt;/p&gt;

&lt;p&gt;add this to your postcss.config.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  //postcss.config.js
  module.exports = {
     plugins: [
        require('tailwindcss'),
        require('autoprefixer'),
       ]
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In package.json, insert the following build script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "build": "postcss css/style.css -o build/style.css"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To execute this script, type in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run build`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-an-indexhtml-file"&gt;
  &lt;/a&gt;
  Create an index.html File
&lt;/h3&gt;

&lt;p&gt;Let’s create a new file index.html in the build folder and insert the following HTML code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang="en"&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset="UTF-8"&amp;gt;
        &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
        &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
        &amp;lt;title&amp;gt;Tailwind CSS Demo&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class="h-64"&amp;gt;
            &amp;lt;div class="p-4 m-4 bg-purple-600"&amp;gt;
                &amp;lt;h1 class="text-2xl font-bold text-white"&amp;gt;Tailwind CSS Demo&amp;lt;/h1&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class="p-4 m-4 bg-purple-300 h-full"&amp;gt;
                &amp;lt;h2 class="text-purple-900"&amp;gt;Have much fun using Tailwind CSS&amp;lt;/h2&amp;gt;
            &amp;lt;/div&amp;gt;  
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#set-up-live-server"&gt;
  &lt;/a&gt;
  Set Up live server
&lt;/h3&gt;

&lt;p&gt;To set up a web server for our server, we are going to use a live server. To use a live server, install it via npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g live-server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, you start up the live server by typing this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;live-server build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should then be able to open the website by pointing the browser to URL 127.0.0.1:8080. &lt;/p&gt;

&lt;p&gt;The result can be seen below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3pyyQ78_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/c89d19a87dcb57b00601021c5ca44ce3" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3pyyQ78_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/c89d19a87dcb57b00601021c5ca44ce3" alt="tailwind demo.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#components-with-tailwind-css"&gt;
  &lt;/a&gt;
  Components With Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;Unlike other CSS frameworks like bootstrap, materialize CSS, etc., tailwind doesn’t come with predefined built-in components for different components like buttons, cards, navbar, etc. In this section, you will learn how to style your components with Tailwind CSS utility classes.&lt;br&gt;
we are also going to see how we can make friendly CSS with tailwind by building components and compare how it is written in tailwind and Vanilla CSS&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#component-1-button"&gt;
  &lt;/a&gt;
  Component 1: Button
&lt;/h3&gt;

&lt;p&gt;Let’s style a button.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#here-you-are-going-to-create-a-submit-button-and-also-style-it"&gt;
  &lt;/a&gt;
  Here, you are going to create a Submit button and also style it
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; //tailwind.css
 &amp;lt;button class="bg-blue-700 w-60 text-white border-2 border-blue-700 rounded py-3 
    hover:bg-red-500 hover:border-transparent"&amp;gt;
       Submit
 &amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The following utility classes are applied:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bg-blue-700&lt;/code&gt;: This class sets a blue background to the button. The value 700 is just a shade number that ranges from (50-900) .&lt;/p&gt;

&lt;p&gt;&lt;code&gt;w-60&lt;/code&gt; : This class represents the width of the button. The value 60 is equivalent to &lt;code&gt;15rem&lt;/code&gt;, which is also  &lt;code&gt;240px&lt;/code&gt; when converted.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;text-white&lt;/code&gt;: This class set the text to white. It is equivalent to &lt;code&gt;color:white&lt;/code&gt; in vanilla CSS&lt;/p&gt;

&lt;p&gt;&lt;code&gt;border-2&lt;/code&gt;: This class set the border width to 2px&lt;/p&gt;

&lt;p&gt;&lt;code&gt;border-blue-700&lt;/code&gt;: This class sets the &lt;code&gt;border-color&lt;/code&gt; to blue. The value 700 is just a shade number, as earlier stated.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rounded&lt;/code&gt;: This class sets the &lt;code&gt;border-radius&lt;/code&gt; to  &lt;code&gt;0.25rem&lt;/code&gt;, which is also &lt;code&gt;4px&lt;/code&gt; when converted.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;py-3&lt;/code&gt;: This class sets the &lt;code&gt;padding-top&lt;/code&gt; and &lt;code&gt;padding-bottom&lt;/code&gt;  to &lt;code&gt;0.75rem&lt;/code&gt; which is also &lt;code&gt;12px&lt;/code&gt; each when converted.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hover:bg-red-500&lt;/code&gt;: This class turns the blue background red when it is hovered on.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hover:border-transparent&lt;/code&gt;: This class makes the borders to be transparent when hovered on.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-result-should-look-like-this-in-tailwind-css"&gt;
  &lt;/a&gt;
  The result should  look like this in tailwind CSS:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kejg24fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/7043a21771b8e49433804d54630edbfb" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kejg24fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/7043a21771b8e49433804d54630edbfb" alt="submit btn .png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-result-should-look-like-this-on-hover"&gt;
  &lt;/a&gt;
  The result should  look like this on hover:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xEREYzvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/18486d56d9f8235768b62b902bc1fe2b" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xEREYzvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/18486d56d9f8235768b62b902bc1fe2b" alt="submit on hover.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#styling-with-vanilla-css"&gt;
  &lt;/a&gt;
  Styling With  Vanilla CSS
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //index.html
    &amp;lt;button class="button "&amp;gt;Submit&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //style.css

    .button{
      background-color: blue;
      width: 240px;
      color: white;
      border: 2px solid blue;
      border-radius:4px;
      padding-top: 12px;
      padding-bottom: 12px;
    }

    .button:hover{
       background-color: red;
      border: transparent
    }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The result should then look like this in vanilla CSS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uBPHUHKq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/0335cef41f5da046a835cef8f9ea3d6f" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uBPHUHKq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/0335cef41f5da046a835cef8f9ea3d6f" alt="Screenshot 2021-05-21 at 5.36.59 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The result should  look like this on hover&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ygSEi2_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/49e0f74374e444322a633de07f04265d" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ygSEi2_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/49e0f74374e444322a633de07f04265d" alt="Screenshot 2021-05-21 at 5.37.07 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see how you created a button and styled it within tailwind CSS. you could also see how you wrote lesser code, and also it made inline styling more cleaner and readable&lt;br&gt;
Compare to regular CSS. We could see all the styling we had to do. Even if you try to style regular CSS inline, it will become cumbersome, and it won't be easy to read.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#component-2-a-card"&gt;
  &lt;/a&gt;
  Component 2 : A Card
&lt;/h4&gt;

&lt;p&gt;Finally, let’s take a look at how to style a card component with Tailwind’s utility classes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //index.html
    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang="en"&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset="UTF-8"&amp;gt;
        &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
        &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
        &amp;lt;title&amp;gt;Tailwind CSS Demo&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body class="bg-gray-300"&amp;gt;
        &amp;lt;div class="bg-white mx-auto my-40 shadow-2xl  w-3/5 h-96 rounded flex "&amp;gt;
            &amp;lt;img src="https://i.pravatar.cc/200" alt="random avatar"&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;h1 class="font-bold text-2xl p-5 mt-20"&amp;gt;Hello! My Name is kaylie&amp;lt;/h1&amp;gt;
                &amp;lt;p class=" text-xl p-5 mt-2"&amp;gt;I am a lover of good things&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following utility classes are applied:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bg-gray-300&lt;/code&gt;: This class is set to the body to change the default white background to gray.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mx-auto&lt;/code&gt;: This class is set to move the div to the center. &lt;code&gt;mx&lt;/code&gt; represents &lt;code&gt;margin-right&lt;/code&gt; and &lt;code&gt;margin-left&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;my-40&lt;/code&gt;: This class is set to move the div from top and bottom &lt;code&gt;10rem&lt;/code&gt; each.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;shadow-2xl&lt;/code&gt;: This class represents the box shadow of the card. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;w-3/5&lt;/code&gt;: This class sets the &lt;code&gt;width&lt;/code&gt; of the card to &lt;code&gt;60%&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rounded&lt;/code&gt;: This class sets the &lt;code&gt;border-radius&lt;/code&gt; to  &lt;code&gt;0.25rem&lt;/code&gt; which is also &lt;code&gt;4px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;h-96&lt;/code&gt;: This class sets the height of the card to &lt;code&gt;384px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;font-bold&lt;/code&gt;: This class sets the &lt;code&gt;font-weight&lt;/code&gt; to &lt;code&gt;bold&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;text-2xl&lt;/code&gt;: This class sets the  &lt;code&gt;font-size&lt;/code&gt; to &lt;code&gt;24px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;p-5&lt;/code&gt;: This class sets the &lt;code&gt;padding&lt;/code&gt; to &lt;code&gt;20px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mt-20&lt;/code&gt;: This class sets the &lt;code&gt;margin-top&lt;/code&gt; to &lt;code&gt;80px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;text-xl&lt;/code&gt;: This class sets the  &lt;code&gt;font-size&lt;/code&gt; to &lt;code&gt;20px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mt-2&lt;/code&gt;: This class sets the &lt;code&gt;margin-top&lt;/code&gt; to &lt;code&gt;8px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The result should then look like this in tailwind CSS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XVKlgL-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/a7bd6344c9a24700ed1ab161e1a4f6c7" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XVKlgL-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/a7bd6344c9a24700ed1ab161e1a4f6c7" alt="Screenshot 2021-05-19 at 5.02.54 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#vanilla-css"&gt;
  &lt;/a&gt;
  Vanilla CSS
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //index.html
    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang="en"&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset="UTF-8"&amp;gt;
        &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
        &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
        &amp;lt;title&amp;gt;Tailwind CSS Demo&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
      &amp;lt;div class="card"&amp;gt;
        &amp;lt;img src="https://i.pravatar.cc/200" alt="random avatar"&amp;gt;

        &amp;lt;div&amp;gt;
            &amp;lt;h1 class="card-h1"&amp;gt;Hello! My Name is kaylie&amp;lt;/h1&amp;gt;
            &amp;lt;p class="card-p"&amp;gt;I am a lover of good things&amp;lt;/p&amp;gt;
           &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#styling-with-vanilla-css"&gt;
  &lt;/a&gt;
  Styling With Vanilla CSS
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //style.css
    body{
      background: lightgray
    }
    .card{
      background-color: white;
      margin:40px auto;
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
      width: 60%;
      height: 384px;
      border-radius: 4px;
      display:flex;
    }
    .card-h1{
      font-weight:bold;
      font-size: 24px;
      padding: 20px;
      margin-top: 80px;
    }
    .card-p{
      font-size:20px;
      padding: 20px;
      margin-top: 8px;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The result should look like this in Vanilla CSS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ctkkFQa0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/b242a70c875582dc4a9d511efd5b76e6" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ctkkFQa0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/b242a70c875582dc4a9d511efd5b76e6" alt="Screenshot 2021-05-19 at 5.47.23 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that you achieved the same result in the example above, though with a different method.&lt;br&gt;
This component example shows you the basics of how tailwind works in relation to Vanilla CSS. Now let me go further to explain why you should use Tailwind CSS in your next project.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-use-tailwind-css"&gt;
  &lt;/a&gt;
  Why Use Tailwind CSS
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#responsiveness-to-the-core"&gt;
  &lt;/a&gt;
  Responsiveness to the core
&lt;/h3&gt;

&lt;p&gt;Gone are the days where you needed to write lots of media queries to build a responsive application. With Tailwind CSS, you can create a responsive design with ease in the class attribute. Tailwind CSS also uses a mobile-first approach in creating responsive applications. &lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#there-are-five-breakpoints-by-default-inspired-by-common-device-resolutions"&gt;
  &lt;/a&gt;
  There are five breakpoints by default, inspired by common device resolutions:
&lt;/h5&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Breakpoint prefix&lt;/th&gt;
&lt;th&gt;Minimum width&lt;/th&gt;
&lt;th&gt;CSS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;640px&lt;/td&gt;
&lt;td&gt;&lt;code&gt;@media (min-width: 640px) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;md&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;td&gt;&lt;code&gt;@media (min-width: 768px) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;td&gt;&lt;code&gt;@media (min-width: 1024px) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;xl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1280px&lt;/td&gt;
&lt;td&gt;&lt;code&gt;@media (min-width: 1280px) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2xl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1536px&lt;/td&gt;
&lt;td&gt;&lt;code&gt;@media (min-width: 1536px) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Let’s look at an example below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang="en"&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset="UTF-8"&amp;gt;
        &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
        &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
        &amp;lt;title&amp;gt;Tailwind CSS Demo&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class="lg:text-9xl md:text-5xl lg:font-extrabold md:font-bold text-center 
            mt-40"&amp;gt;Hello World&amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above changes the text size based on the screen size. To see the responsiveness in action, check out this &lt;a href="https://codepen.io/amycruz/pen/dyvNdrw"&gt;codepen demo&lt;/a&gt; and try to adjust the screen size to see the responsiveness.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inline-pseudoclasses"&gt;
  &lt;/a&gt;
  Inline Pseudo-Classes
&lt;/h3&gt;

&lt;p&gt;One thing vanilla CSS inline styling can’t do is handling pseudo-classes such as &lt;code&gt;hover&lt;/code&gt;, &lt;code&gt;focus&lt;/code&gt;, and &lt;code&gt;active&lt;/code&gt; states. But with Tailwind CSS, you can apply pseudo-classes to an element in the class attribute itself.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#for-example"&gt;
  &lt;/a&gt;
  For example
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;div class="bg-red-900 hover:bg-blue-900 mt-10 text-center"&amp;gt;
         &amp;lt;span class="text-5xl text-white hover:text-yellow-300 "&amp;gt;Hello world!&amp;lt;/span&amp;gt;
   &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  The result
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YrwTbaDc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/cf0b3869641f039d535c57585477a98f" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YrwTbaDc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/cf0b3869641f039d535c57585477a98f" alt="Screenshot 2021-05-21 at 1.47.32 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#on-hover"&gt;
  &lt;/a&gt;
  On hover
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vcyTNl8P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/c48fea2557fd75c7f2b89d8affc2031e" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vcyTNl8P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://functionalworks-backend--prod.s3.amazonaws.com/logos/c48fea2557fd75c7f2b89d8affc2031e" alt="Screenshot 2021-05-21 at 1.47.47 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We could see the &lt;code&gt;background-color&lt;/code&gt; at &lt;code&gt;red&lt;/code&gt; and &lt;code&gt;text-color&lt;/code&gt; at &lt;code&gt;white&lt;/code&gt; from the example above. On hover, the &lt;code&gt;background-color&lt;/code&gt; will change to &lt;code&gt;blue&lt;/code&gt; while the &lt;code&gt;text-color&lt;/code&gt; changes to &lt;code&gt;yellow&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customization"&gt;
  &lt;/a&gt;
  Customization
&lt;/h3&gt;

&lt;p&gt;Tailwind CSS has many advantages over other frameworks, and one of them is the customization options. Tailwind allows you to configure your utilities within a single &lt;code&gt;tailwind.config.js&lt;/code&gt; file.&lt;br&gt;
The customization file enables you to easily customize utilities such as colors, spacing, themes, etc. You can read more about customization &lt;a href="https://tailwindcss.com/docs/configuration"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For example, let’s override the tailwind default blue color already present in the default theme, so our custom values will override the default value. &lt;/p&gt;

&lt;p&gt;Here we will use the same numbered notation for the color shades to override the default blue color.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-raw-tailwindconfigjs-endraw-file-should-now-look-like-this"&gt;
  &lt;/a&gt;
  The &lt;code&gt;tailwind.config.js&lt;/code&gt; file should now look like this:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    module.exports = {
      purge: [],
      theme: {
        extend: {
          colors: {
            blue: {
              '100': '#72c1df',
              '200': '#5bb7d9',
              '300': '#43add4',
              '400': '#2ca2ce',
              '500': '#1498c9',
              '600': '#1289b5',
              '700': '#107aa1',
              '800': '#0e6a8d',
              '900': '#0c5b79'
            },
          },
        },
      },
      variants: {},
      plugins: [],
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#tighten-up-long-class-lists-with-apply"&gt;
  &lt;/a&gt;
  Tighten up long class lists with @apply
&lt;/h3&gt;

&lt;p&gt;Tailwind CSS inline styling can become messy when the styling gets long. That is when @apply comes in. The @apply directives can also use to curb the repetition of classes that may occur in styling.  For example, if you were to give 2  HTML elements similar styling, the @apply can help you avoid repetition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //index.html
    &amp;lt;div class="btn"&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //style.css
    .btn {
       @apply my-2 px-4 py-2 border-2 border-blue-500 rounded-md bg-gradient-to-b 
         from-blue-600 to-blue-400 hover:from-blue-500 hover:to-blue-300 text-white shadow-l
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#ease-of-use"&gt;
  &lt;/a&gt;
  Ease Of Use
&lt;/h3&gt;

&lt;p&gt;Tailwind CSS is extremely easy to use. At first, learning all the naming schemes might take a long time to grasp. But once you grasp it, you will know exactly how to configure the entire library to your satisfaction. The naming scheme is also one of the most important parts of tailwind. For example, &lt;code&gt;p-{n}&lt;/code&gt; for padding, the &lt;code&gt;-{n}&lt;/code&gt; for using a certain value for the utility. &lt;code&gt;md:&lt;/code&gt;for handling breakpoints, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-more-naming-problems"&gt;
  &lt;/a&gt;
  No More Naming Problems
&lt;/h3&gt;

&lt;p&gt;One thing I don’t fancy about vanilla CSS is the fact that I have to come up with unique class names for styling purposes. But with Tailwind CSS, you can do your styling right inside the HTML tag, and each inline styling is scoped to that specific tag.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Before picking up tailwind CSS, you have to be good with your vanilla CSS because you might end up using classes without knowing how they work.&lt;br&gt;
If you are good with Vanilla CSS and want a faster styling process, and you are also willing to invest time in learning utility classes, then tailwind CSS is an excellent choice.&lt;/p&gt;

&lt;p&gt;Tailwind CSS introduces a different approach of how other CSS framework works. It provides you with a set of utility classes that can be used to create a unique design with ease. &lt;br&gt;
Tailwind CSS is also not opinionated, so you are free to design your application the way you want.&lt;/p&gt;

&lt;p&gt;In this article, you have learned how to set up Tailwind CSS in your project. You have also seen how utility classes can be used in building components like buttons and cards. I also went further to give you practical reasons why you should use Tailwind CSS. To learn more about Tailwind CSS.&lt;br&gt;
The &lt;a href="https://tailwindcss.com/docs"&gt;official documentation&lt;/a&gt; has several additional resources, including examples, screencasts, and tutorials.&lt;br&gt;
Thanks for reading. I hope that I helped you learn something new today!&lt;/p&gt;

&lt;p&gt;Originally written by &lt;a href="https://blockchain.works-hub.com/users/4107661d-0fbf-412b-8341-ec9f76e4208e?utm_source=dev_to&amp;amp;utm_medium=blog_xpost"&gt;AMAECHI AMARACHI&lt;/a&gt; for &lt;a href="https://blockchain.works-hub.com/learn/making-friendly-css-with-tailwind-css-66334?utm_source=dev_to&amp;amp;utm_medium=blog_xpost"&gt;Blockchain Works&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css3</category>
      <category>frontenddevelopment</category>
      <category>webdev</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Still 100 CSS loaders for your next project</title>
      <author>Temani Afif</author>
      <pubDate>Tue, 15 Jun 2021 09:22:13 +0000</pubDate>
      <link>https://dev.to/afif/still-100-css-loaders-for-your-next-project-57hp</link>
      <guid>https://dev.to/afif/still-100-css-loaders-for-your-next-project-57hp</guid>
      <description>&lt;p&gt;The fun continue with another collection of 100 CSS loaders!&lt;/p&gt;

&lt;p&gt;Always the same rule: &lt;strong&gt;one&lt;/strong&gt; div = &lt;strong&gt;one&lt;/strong&gt; loader.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-classic-iv"&gt;The Classic IV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-colorful"&gt;The Colorful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-dots-iv"&gt;The Dots IV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-dancers"&gt;The Dancers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-bars-iii"&gt;The Bars III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-line"&gt;The Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-dots-vs-the-bars-ii"&gt;The Dots vs The Bars II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-clones"&gt;The Clones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-nature-ii"&gt;The Nature II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-flipping-ii"&gt;The Flipping II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-famous"&gt;The Famous&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#the-classic-iv"&gt;
  &lt;/a&gt;
  The Classic IV
&lt;/h3&gt;

&lt;p&gt;We have lost the control. I repeat, we have lost the control!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/JjWwWMO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-colorful"&gt;
  &lt;/a&gt;
  The Colorful
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/YzZdZej?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-dots-iv"&gt;
  &lt;/a&gt;
  The Dots IV
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/qBrLrox?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-dancers"&gt;
  &lt;/a&gt;
  The Dancers
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/VwpqpxB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-bars-iii"&gt;
  &lt;/a&gt;
  The Bars III
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/vYxvxrV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-line"&gt;
  &lt;/a&gt;
  The Line
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/mdWaWjv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-dots-vs-the-bars-ii"&gt;
  &lt;/a&gt;
  The Dots vs The Bars II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/qBrLrMo?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-clones"&gt;
  &lt;/a&gt;
  The Clones
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/JjWwWmp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-nature-ii"&gt;
  &lt;/a&gt;
  The Nature II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/yLMGMQa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-flipping-ii"&gt;
  &lt;/a&gt;
  The Flipping II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/PopXpXr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-famous"&gt;
  &lt;/a&gt;
  The Famous
&lt;/h3&gt;

&lt;p&gt;You all liked The Ben loader so I have made another casting. It wasn't an easy task but some of them accepted to become loader (or maybe not...)&lt;/p&gt;

&lt;p&gt;Please no spoils on the comment section.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/VwpVaVa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/vYxQVYq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/poeQNRp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/YzZRGqj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h3&gt;

&lt;p&gt;oof, I reached 400! Now it starts to get a bit challenging to create another collection of 100 CSS loaders but you can help with some ❤🦄 and also &lt;a href="https://www.buymeacoffee.com/afif"&gt;some coffees&lt;/a&gt;. I have read an article saying that virtual coffees can increase the productivity up to 50%. worth trying, no? 😜&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/still-100-underline-overlay-animations-the-advanced-css-collection-4mol" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Still 100 underline/overlay animations | The advanced CSS collection 🚀&lt;/h2&gt;
      &lt;h3&gt;Temani Afif ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>Start an instance on AWS EC2 - Hands on</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 15 Jun 2021 09:10:32 +0000</pubDate>
      <link>https://dev.to/this-is-learning/start-an-instance-on-aws-ec2-hands-on-2hb3</link>
      <guid>https://dev.to/this-is-learning/start-an-instance-on-aws-ec2-hands-on-2hb3</guid>
      <description>&lt;p&gt;In this exercise we will start a basic ec2 server and host a small server on it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Type AWS EC2 in the search console and go to the EC2 dashboard.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8OtEg2P---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecmlp89jqnblcecl7v9i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8OtEg2P---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecmlp89jqnblcecl7v9i.png" alt="Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This will land you on EC2 dashboard from where you can see how many EC2 instances are running your keys etc.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--by56whPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13p79es45ii6lgkxkhm9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--by56whPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13p79es45ii6lgkxkhm9.png" alt="Ec2 dashboard"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select Instances from the side bar it shows all EC2 instances you are running and click on launch instance.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EZOVyY6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqdnx3erdpyh73gs56y8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EZOVyY6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqdnx3erdpyh73gs56y8.png" alt="EC2 instances dashborad"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This will take you to a list of available AWS instances there are four options&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My AMI: My AMI has AMI instances created by you and saved, Right now we have nothing saved here so this will be empty &lt;/li&gt;
&lt;li&gt;AWS Marketplace: In AWS you can buy AWS instance with pre configured software's so that you don't have to set themselves like Wordpress, SQL, Ghost etc some of them are available free too
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YdA0fETG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxv35l9verfmhyasph4f.png" alt="SQl"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SiI0PFSj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xu5dm9ec9aazgssgjxc.png" alt="Wordpress AMI"&gt;
&lt;/li&gt;
&lt;li&gt;Community AMI: These are all the instances given by the community for free
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I-QcM4J3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4kllt018cxxmqqp5lpdr.png" alt="Community AMI"&gt;
&lt;/li&gt;
&lt;li&gt;Quick start: This is what we use these are minimal AWS instances which can be started very fast with basic OS. Select the one highlighted in the below image
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LitWDA6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckuzl2406d34knugafhm.png" alt="Quick Start"&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After that select the instance type like how may CPU, RAM, Storage, bandwidth we want for the purpose of this tutorial we select t2.micro because its available in the free tier as evident by the the Free tier available badge&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o-xz0HRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xu7p74udo1jm5iqgmuw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o-xz0HRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xu7p74udo1jm5iqgmuw.png" alt="Instance types"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For the purpose of this tutorial we don't change anything in configure instance move to the bottom and in advances details paste the following script in it. These are the startup scripts which will run when we start our EC2 instance.&lt;br&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# Use this for your user data (script from top to bottom)&lt;/span&gt;
&lt;span class="c"&gt;# install httpd (Linux 2 version)&lt;/span&gt;
yum update &lt;span class="nt"&gt;-y&lt;/span&gt;
yum &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; httpd
systemctl start httpd
systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;httpd
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;h1&amp;gt;Hello World from &lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;hostname&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/h1&amp;gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /var/www/html/index.html

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OCcqyoZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3zdx52f3dbsqqewdwue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCcqyoZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3zdx52f3dbsqqewdwue.png" alt="Configure instance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now we configure storage all the default settings work just fine. In future we will have an additional series on storage so don't worry about it now.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KI48SxYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/st7o5m0j8okmtuboamjs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KI48SxYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/st7o5m0j8okmtuboamjs.png" alt="Ec2 Storage"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will add tags so that it is easier to identify and manage our instances like name, department, maintenance etc&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---4tUvy39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b65l3ckra5tezfad32rq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---4tUvy39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b65l3ckra5tezfad32rq.png" alt="Ec2 tags"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure Security group in here we define how our EC2 instance can be accessed. In this tutorial add a new rule select HTTP from  the type dropdown it will automatically allow everything via HTTP protocol its good here bit e can limit who can access our instance via HTTP and its not generally a good practice to give access to everyone via HTTP.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eihO1wzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nftufsi0bdzp2qu9oz4z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eihO1wzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nftufsi0bdzp2qu9oz4z.png" alt="onfigure security group"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now to the final step we review if everything is alright. Just have a quick glace that all settings are done correctly.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7IpdiCfc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rq9l3znup1nkrab9td6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7IpdiCfc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rq9l3znup1nkrab9td6f.png" alt="Review"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lets launch now but before launch AWS asks for a key which you download and use to access via SSH Download and keep the key safe as it only can be downloaded once. You can also select a previous key if you have a key generated already.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DJHihwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bczci97ai3st7gm3fz9k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJHihwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bczci97ai3st7gm3fz9k.png" alt="Launch"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Launch status page here you see a status of launched instance and some helpful resources to get you started. Click on view instances to go to the instances dahboard.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uv2r7bnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewdy456b5m6aunccv5cu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uv2r7bnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewdy456b5m6aunccv5cu.png" alt="Launch status"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you can see your instance running. Select the instance you will see details at the bottom. On the right side of public IPv4 address there is open address button click on it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uv2r7bnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewdy456b5m6aunccv5cu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uv2r7bnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewdy456b5m6aunccv5cu.png" alt="Create instance dashboard"&gt;&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For now the link won't work because the link has https remove https form the link and there will be a screen like below image. This http server was setup in our startup bash script above there we start a http apache server and return  &lt;code&gt;echo "&amp;lt;h1&amp;gt;Hello World from $(hostname -f)&amp;lt;/h1&amp;gt;" &amp;gt;&lt;/code&gt; with hostname that is what is displayed&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VjygZkHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3j2byphfud2yppt7c8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VjygZkHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3j2byphfud2yppt7c8b.png" alt="Website page"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally if you want to follow along with this series you are done. For others running an EC2 instance costs money so you can terminate the instance by selecting the instance and form the instance state dropdown select terminate instance.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L46Zs8p7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbf0a0ne0ndnnyjl3zch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L46Zs8p7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbf0a0ne0ndnnyjl3zch.png" alt="Terminate instance"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the next part of the series we will SSH into out instance and see our files and learn how to access remote PC.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>cloudskills</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>SpectaQL - generate static docs for a GraphQL schema</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Tue, 15 Jun 2021 08:46:50 +0000</pubDate>
      <link>https://dev.to/graphqleditor/spectaql-generate-static-docs-for-a-graphql-schema-i53</link>
      <guid>https://dev.to/graphqleditor/spectaql-generate-static-docs-for-a-graphql-schema-i53</guid>
      <description>&lt;p&gt;It's finally time to take a look at another useful library, this time we’ll check out SpectaQL, a Node.js library for generating static GraphQL API documentation. On GitHub its described as&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;A nice enhancement of DociQL&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;so before we get to SpectaQL and its features let’s take a look at what DociQL is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-foundation"&gt;
  &lt;/a&gt;
  The foundation
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;DociQL&lt;/strong&gt; as the name suggests also deals with documentation. To be precise it fetches the schema from a GraphQL endpoint by using the introspection query and generates static documentation from it. It's supposed to help you save time and look good and it does just that, by using a well-known layout. It's also very flexible so you can easily customize it and create your own layout that looks exactly like you want.&lt;/p&gt;

&lt;p&gt;Looking at SpectaQL it's easy to see they wanted to take that approach and build on it. The first &lt;strong&gt;noticeable difference&lt;/strong&gt; is that it has more options to generate documentation from:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a live GraphQL endpoint via the introspection query (so just like DociQL)&lt;/li&gt;
&lt;li&gt;a file containing an introspection query result&lt;/li&gt;
&lt;li&gt;a file with the schema definition in SDL&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;That’s not all and &lt;strong&gt;SpectaQL provides you with a bunch of features&lt;/strong&gt;. Out of the box it gives you the same three column layout mentioned previously and it's also easily customizable. There’s quite a few more customization options though, DociQL only has some basic CLI configuration options, SpectaQL also lets you modify the CSS. Additionally you’re not limited to just what's in the introspection query or the schema, via examples you can include static metadata about your schema or you can use the custom generator plugin to dynamically generate examples for fields and arguments. &lt;/p&gt;

&lt;p&gt;For a clearer picture let’s sum up the features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it's completely free (MIT license)&lt;/li&gt;
&lt;li&gt;can generate documentation from three types of sources (endpoint, file with a introspection query result or file with a schema definition)&lt;/li&gt;
&lt;li&gt;additional support for examples from static metadata or the dynamic example generator&lt;/li&gt;
&lt;li&gt;blacklisting for areas or single elements (for example you can tell it to hide all mutations)&lt;/li&gt;
&lt;li&gt;customizable styles by modifying the CSS&lt;/li&gt;
&lt;li&gt;markdown support&lt;/li&gt;
&lt;li&gt;live preview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WOFGXphq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlocwu8n7m9u7vfd8v6o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WOFGXphq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlocwu8n7m9u7vfd8v6o.png" alt="SpectaQL"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-githubcomanvilcospectaql"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://github.com/anvilco/spectaql"&gt;github.com/anvilco/spectaql&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#you-can-have-it-both-ways"&gt;
  &lt;/a&gt;
  You can have it both ways
&lt;/h2&gt;

&lt;p&gt;In short SpectaQL has quite a few additional features while still giving you the neat looking one-page three-column documentation out of the box and without any hassle. It's easily customizable by design and the devs openly advocate forking it if you have some additional ideas on how to improve it or make it do something differently. So if you’re looking for a basic solution for getting documentation for your GraphQL API or if you want to get creative in terms of how you want it to look, SpectaQL has got you covered.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Michał Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" alt="New features of GraphQL Editor gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Sorting Algorithms Visualization: QuickSort, MergeSort, HeapSort, BubbleSort, InsertionSort</title>
      <author>Vladimir Nikitin</author>
      <pubDate>Tue, 15 Jun 2021 07:58:39 +0000</pubDate>
      <link>https://dev.to/loonywizard/sorting-algorithms-visualization-quicksort-mergesort-heapsort-bubblesort-insertionsort-25ha</link>
      <guid>https://dev.to/loonywizard/sorting-algorithms-visualization-quicksort-mergesort-heapsort-bubblesort-insertionsort-25ha</guid>
      <description>&lt;p&gt;Hi everyone! 👋🏻&lt;/p&gt;

&lt;p&gt;I'd like to share my new project about visualization of sorting algorithms&lt;/p&gt;

&lt;p&gt;Currently, there're five algorithms visualized: QuickSort, MergeSort, HeapSort, BubbleSort and InsertionSort&lt;/p&gt;

&lt;p&gt;This project helped me to understand how different sorting algorithms work and I will be happy if it this would be helpful for anybody&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/loonywizard/sorting-algos-visualizer"&gt;https://github.com/loonywizard/sorting-algos-visualizer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Live demo: &lt;a href="https://loonywizard.github.io/sorting-algos-visualizer"&gt;https://loonywizard.github.io/sorting-algos-visualizer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>React 18 - What's New! </title>
      <author>Eftykhar Rahman</author>
      <pubDate>Tue, 15 Jun 2021 07:31:42 +0000</pubDate>
      <link>https://dev.to/iamraufu/react-18-what-s-new-2jam</link>
      <guid>https://dev.to/iamraufu/react-18-what-s-new-2jam</guid>
      <description>&lt;p&gt;React 17 was a bit of a bore for developers. There really wasn't a lot added but it's definitely not the case with react 18. In this article I am going to tell you some of the top updates and I'll show you how to get started using react 18 alpha today. Links to everything mentioned will be in the below.&lt;/p&gt;

&lt;p&gt;With React 18 there's a new Root API. Here's what you're used to seeing. We pass react &lt;em&gt;dom.render&lt;/em&gt; our app component and then &lt;em&gt;document.getElementById&lt;/em&gt; and our root element. So we're rendering our app component into our root element on the page. Pretty Simple!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QDr1g8fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osjw14odqtt942mh4a4r.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QDr1g8fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osjw14odqtt942mh4a4r.PNG" alt="Image 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's the new way. We have a root variable which is equal to a new method called create root. This is being passed our root element and then we call &lt;em&gt;root.render&lt;/em&gt; and pass our app component. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u1nvyjkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj7ox115ivzoqohk5zom.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u1nvyjkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj7ox115ivzoqohk5zom.PNG" alt="Image 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's accomplishing the same thing but in a different way. The old way is now called the Legacy Root API and It's still going to work in React 18 but will be deprecated at some point by using the new Root API. You're going to get access to all of the React 18 improvements including the concurrent features that we're going to talk about in this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suspense"&gt;
  &lt;/a&gt;
  Suspense
&lt;/h2&gt;

&lt;p&gt;The suspense is finally over in this update we're going to get full support for suspense. Now what is suspense? As the name implies it suspends something until it's ready to be rendered. &lt;/p&gt;

&lt;p&gt;In this example, we have a component that needs time to fetch data before it's ready to be rendered. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tb1hq7yu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1ktrwt6luc2mz1li4n2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tb1hq7yu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1ktrwt6luc2mz1li4n2.PNG" alt="Image 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Suspense will use the fallback until the data is returned and the components are rendered. It's important to note here that the random component here is not waiting on data but it's still going to be suspended until everything inside the suspense is ready to be rendered. And now suspense is going to be extremely useful with SSR or Server Side Rendering. Currently, with SSR you're going to get fully rendered HTML but your browser still has to load the JavaScript and hydrate the entire page before it can become interactive. Suspense could speed up this load time dramatically. &lt;/p&gt;

&lt;p&gt;Using the example from the React 18 working group repo here we have a page loading a navbar, a sidebar, a post and a comment. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---1Z7y8IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0g2lttu9cdf1mx44lch.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1Z7y8IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0g2lttu9cdf1mx44lch.PNG" alt="Image 4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we really don't need the comments to load before the site becomes interactive. So we're going to suspend the comments. So that the viewer can start reading the article&lt;br&gt;
and then we'll load the comments in the background. &lt;/p&gt;

&lt;p&gt;Another cool thing about suspense is selective hydration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q0tFFUKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d7sqjzrc7sl9xzglrpz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q0tFFUKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d7sqjzrc7sl9xzglrpz.PNG" alt="Image 5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example., we're suspending the sidebar and the comments. Hydration will begin on the first suspended component in the tree. So the sidebar will hydrate first but if the user tries to interact with the comments section, React will prioritize hydrating the comments instead of the sidebar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatic-batching"&gt;
  &lt;/a&gt;
  Automatic Batching
&lt;/h2&gt;

&lt;p&gt;In React 17 and earlier react with batch re-render updates during a browser event like a click. Here's an example from the docs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--beMfmqHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7px6m1ir5qhbdzwhbl27.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--beMfmqHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7px6m1ir5qhbdzwhbl27.PNG" alt="Image 6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So in this handle click react will batch these two state updates into one single re-render.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hfFwzcwb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec0oi7k06ejr5pgpuoxj.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfFwzcwb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec0oi7k06ejr5pgpuoxj.PNG" alt="Image 7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you need to fetch data and then update the state these re-renders will not be batched.&lt;/p&gt;

&lt;p&gt;With react 18, If you're using the new Create Root API, all state updates will automatically be batched no matter when they happen. If you do have a critical component that you don't want to be batched. You can opt out of this by using &lt;em&gt;reactdom.flushsync&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concurrent-features"&gt;
  &lt;/a&gt;
  Concurrent Features
&lt;/h2&gt;

&lt;p&gt;There's some other concurrent features that are interesting but I haven't fully dug into them yet. One is &lt;em&gt;startTransition&lt;/em&gt;. This will tell React which updates are urgent and which can wait this will help the UI remain responsive. &lt;/p&gt;

&lt;p&gt;Then there's &lt;em&gt;useDeferredValue&lt;/em&gt;. This allows you to defer updates that are less important.&lt;/p&gt;

&lt;p&gt;And then &lt;strong&gt;&lt;/strong&gt; This coordinates the order of loading indicators.&lt;/p&gt;

&lt;p&gt;Obviously don't use React 18 in production yet. It's just an alpha status but start learning about these new features now. React 18 will go into public beta in a few months and then several weeks after that so get ready. It's really exciting.&lt;/p&gt;

&lt;p&gt;React 18 Resources Mentioned:&lt;br&gt;
The Plan for React 18 - &lt;a href="https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html"&gt;https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html&lt;/a&gt;&lt;br&gt;
React 18 Working Group - &lt;a href="https://github.com/reactwg/react-18"&gt;https://github.com/reactwg/react-18&lt;/a&gt;&lt;br&gt;
React 18 Discussions - &lt;a href="https://github.com/reactwg/react-18/discussions"&gt;https://github.com/reactwg/react-18/discussions&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Make decisions as a team. Debate, then commit. (100 Bytes Of Wisdom: Day 57)</title>
      <author>Sam Jarman 👨🏼‍💻</author>
      <pubDate>Tue, 15 Jun 2021 07:30:35 +0000</pubDate>
      <link>https://dev.to/samjarman/make-decisions-as-a-team-debate-then-commit-100-bytes-of-wisdom-day-57-fec</link>
      <guid>https://dev.to/samjarman/make-decisions-as-a-team-debate-then-commit-100-bytes-of-wisdom-day-57-fec</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aGD1dg58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s6mvlt3oor37n327ptp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aGD1dg58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s6mvlt3oor37n327ptp.png" alt="Make decisions as a team. Debate, then commit."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Team cohesion during a project comes from healthy debate and then healthy commitment to the decision. I'm not gonna lie - it does suck to be the minority when it comes to a final decision, and they can grate on you over time. However, keeping your emotions and professionalism in check will mean a more cohesive team.  &lt;/p&gt;

&lt;p&gt;If you find yourself in the minority a lot, something to do would be to really think hard and work on trying to get a shared knowledge set with the others in your team. What do they know you don't? Or, perhaps, what do you know that they don't?&lt;/p&gt;

&lt;p&gt;Heads up: As with any terse bit of advice, there will be exceptions of course, and subtleties and nuance that can't possibly be captured in a Byte of Wisdom. This has been what I've experienced, I'd love to hear yours in the comments too!&lt;/p&gt;

&lt;p&gt;You can catch up with all the other bytes at &lt;a href="http://bytesofwisdom.com/"&gt;http://bytesofwisdom.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>journey</category>
      <category>advice</category>
    </item>
    <item>
      <title>How to Balance Chemical Equations in Python using Constraint Optimization (PuLP)</title>
      <author>Rahul Banerjee</author>
      <pubDate>Tue, 15 Jun 2021 07:11:36 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/how-to-balance-chemical-equations-in-python-using-constraint-optimization-pulp-54hp</link>
      <guid>https://dev.to/rahulbanerjee99/how-to-balance-chemical-equations-in-python-using-constraint-optimization-pulp-54hp</guid>
      <description>

&lt;p&gt;Originally posted on &lt;a href="https://www.realpythonproject.com/how-to-balance-chemical-equations-in-python-using-constraint-optimization-pulp/"&gt;realpythonproject.com&lt;/a&gt;&lt;/p&gt;








&lt;h4&gt;We will be using PuLP and the chemparse libraries to balance chemical equations&lt;/h4&gt;





&lt;p&gt;You can find the source code&lt;a href="https://github.com/rahulbanerjee26/Chemical-Equation-Balancer" rel="noreferrer noopener"&gt; here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Pre-Requisites&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Familiarity with Constraint Optimization. Check out my previous article for an introduction to &lt;a href="https://www.realpythonproject.com/basic-linear-programming-in-python-with-pulp/" rel="noreferrer noopener"&gt;Constraint Optimization and PuLp&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Some Familiarity with Balancing Chemical Equations. &lt;/li&gt;
&lt;li&gt;It is good to have some familiarity with Streamlit. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;How can we balance Chemical Equations using Constraint Optimization?&lt;/h3&gt;

&lt;p&gt;Balancing a chemical equation essentially means respecting the conservation of mass and ensuring the same number of atoms of an element are present on the left-hand side (Reactants) and the right-hand side (Products). Basically if you X grams of an element as a reactant, the product will also have X grams of that element in the Products (ideal conditions). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5GeCminu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A7oIbJWMsmLzKx7rjWm0Hsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5GeCminu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A7oIbJWMsmLzKx7rjWm0Hsg.png" alt=""&gt;&lt;/a&gt;Picture by Author&lt;/p&gt;

&lt;p&gt;In the above picture, you can notice the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the unbalanced equations, there are 2 atoms of H and Cl in the Products. However, there is only a single atom of H and Cl in the Reactants. This does not respect the law of conservation of mass&lt;/li&gt;
&lt;li&gt;In the balanced equation, we are using 2 atoms of H and Cl in the reactants. The number of atoms in the Products remains unchanged. As a result, the equation is balanced and it no longer violates the law of conservation of mass.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above equation was easy to solve and can be done manually. However, things get complicated as the number of elements increases and the number of reactants/products increases. Eg: The below equation although doable manually will require quite a bit of trial and error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zcoX8f_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AFTDONbGgFIMpbiZu12VoiQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zcoX8f_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AFTDONbGgFIMpbiZu12VoiQ.png" alt=""&gt;&lt;/a&gt;Example of an unbalanced equation&lt;/p&gt;

&lt;p&gt;So how can we use Constraint Optimization? &lt;/p&gt;

&lt;p&gt;Let’s consider the first equation we had looked at&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MylsKPgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AR0Z_txrViqpEwjFHZXBrrA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MylsKPgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AR0Z_txrViqpEwjFHZXBrrA.png" alt=""&gt;&lt;/a&gt;Example of an Unbalanced Equation&lt;/p&gt;

&lt;p&gt;The coefficient of each reactant/product can be thought of as a variable. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AaTHqVsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AQgdJMR8Fm88JdNN17l4U6Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AaTHqVsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AQgdJMR8Fm88JdNN17l4U6Q.png" alt=""&gt;&lt;/a&gt;Equation with Variable Coefficients&lt;/p&gt;

&lt;p&gt;X1, X2, X3, and X4 are the variable coefficients. Each variable must be an integer greater than or equal to 1.&lt;/p&gt;

&lt;p&gt;Each element adds a constraint,i.e&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;For Zn: The number of Zinc Atoms in Reactant must equal to the number of Zinc Atoms in Products&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z8CMOuCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AElBM_4GTwrZ1c_APtPQmvA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z8CMOuCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AElBM_4GTwrZ1c_APtPQmvA.png" alt=""&gt;&lt;/a&gt;Constraint due to Zn&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;For Cl: The number of Chlorine Atoms in Reactant must equal to the number of Chlorine Atoms in Products&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--avJ6LMYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A49EaN487z2pyl7jaVA6JLQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--avJ6LMYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A49EaN487z2pyl7jaVA6JLQ.png" alt=""&gt;&lt;/a&gt;Constraint due to Cl&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;For H: The number of Hydrogen Atoms in Reactant must equal to the number of Hydrogen Atoms in Products&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9QMIPUks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AV97td_GXzTuqrlm_LgdIHQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9QMIPUks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AV97td_GXzTuqrlm_LgdIHQ.png" alt=""&gt;&lt;/a&gt;Constraint due to H&lt;/p&gt;

&lt;p&gt;The Problem can be considered as a Minimizing Problem since we need to find the smallest coefficients that can balance the equation.&lt;/p&gt;

&lt;p&gt;The problem has no objective other than minimizing the coefficients, which means the objective is basically 0 (None).&lt;/p&gt;

&lt;p&gt;To summarize this is how our problem is setup&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgCOE-sK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Aqftt_wyaEhTvFXP2_bslKg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgCOE-sK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Aqftt_wyaEhTvFXP2_bslKg.png" alt=""&gt;&lt;/a&gt;Problem Setup&lt;/p&gt;

&lt;p&gt;This problem can be set up using PuLP and solver using PuLP’s default solver.&lt;/p&gt;

&lt;p&gt;Now, we can move on to generalizing this to support other equations as well.&lt;/p&gt;

&lt;h3&gt;Parsing the Chemical Equation&lt;/h3&gt;

&lt;p&gt;We will use the chemparse library to parse the reactants and products.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip3 install chemparse&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Below are a few examples of what chemparse returns. They are taken from the library’s documentation&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;“CH4” returns {“C”:1.0, “H”:4.0}

“C1.5O3” returns {“C”:1.5, “O”:3.0}

"(CH3)2(CH2)4" returns {"C":6.0, "H":14.0}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let's create a function to parse the equations. The function will expect an input similar to the one below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Zn + HCL -&amp;gt; ZnCl2 + H2&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can split by ‘-&amp;gt;’ to get the Left Hand Side and the Right Hande Side]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Igp-6Ja8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AcqnrVo8LDw3iVVx9mz-buA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Igp-6Ja8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AcqnrVo8LDw3iVVx9mz-buA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get the compounds we can split by “+” and remove the trailing spaces. &lt;/p&gt;

&lt;p&gt;We need to store the unique elements so we can form constraints for each and convert each reactant and product into a dictionary produced by chemparse.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHuuarpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2ApGz9Yydc6ZvcrC4kXtXv5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHuuarpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2ApGz9Yydc6ZvcrC4kXtXv5g.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, we iterate over the lhsCompounds and store the result from chemparse as well as the unique elements.&lt;/p&gt;

&lt;p&gt;After that we iterate over rhsCompounds, we do not need to store the unique elements again. However, we store the coefficients as a negative number since this will make it easier when setting up our constraints.&lt;/p&gt;

&lt;h3&gt;Function to set up and solve Constraint Optimization Problem&lt;/h3&gt;

&lt;p&gt;Now, we can move on to the problem-solving stuff.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nf3SLDCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Ayg6uMBP_0E18iTyqQF9KwA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nf3SLDCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Ayg6uMBP_0E18iTyqQF9KwA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will call the parse function we had written earlier and store the returned values.&lt;/p&gt;

&lt;p&gt;Every reactant/product will have a co-efficient, therefore we can simply loop over the variable allCompounds (this contains the output from chemparse for each reactant/product) and create a variable during each iteration.&lt;/p&gt;

&lt;p&gt;The variables will have a category of Integer and a lower bound value of 0&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iVnX30-O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AcGfh0HzW1zTWF3yi8V7aAg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVnX30-O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AcGfh0HzW1zTWF3yi8V7aAg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As discussed earlier, the problem is a Minimization problem with no Objective.&lt;/p&gt;

&lt;p&gt;Now, let’s set up our constraints&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QsEv5ZzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A_3WRmR8VNelQYiUMe8R49Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QsEv5ZzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A_3WRmR8VNelQYiUMe8R49Q.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As discussed earlier, each element will add a constraint associated with it. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we loop over the uniqueElements&lt;/li&gt;
&lt;li&gt;get the number of atoms of the element in each reactant/product&lt;/li&gt;
&lt;li&gt;sum up the coefficients (Remember all the Product coefficients are stored as negative values)&lt;/li&gt;
&lt;li&gt;Add a constraint that the sum should be 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, we are ready to solve the problem and create the balanced equation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pYBlI1Vt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AXrh18t0Xs-9oGQ9BvITOwQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYBlI1Vt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AXrh18t0Xs-9oGQ9BvITOwQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Streamlit WebApp&lt;/h3&gt;

&lt;p&gt;Install Streamlit&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install streamlit&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will be a pretty minimalistic app. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDF0B-8l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2APkyDf07wmLJXBPA-Pfg7RA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDF0B-8l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2APkyDf07wmLJXBPA-Pfg7RA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We create a text_input component and set the default value to an unbalanced equation. The balance() function is imported and we pass the text_input’s value as an argument.&lt;/p&gt;

&lt;p&gt;Additionally, we can also display the problem before we solve it. This should be inside the balance() function&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;st.text(prob)&lt;/code&gt;&lt;/pre&gt;





&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Connect with me on &lt;/em&gt;&lt;a href="https://www.linkedin.com/in/rahulbanerjee2699/" rel="noreferrer noopener"&gt;&lt;em&gt;LinkedIn&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;a href="https://twitter.com/rahulbanerjee99" rel="noreferrer noopener"&gt;&lt;em&gt;Twitter&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to read Member-only Medium Stories for free without being a member?</title>
      <author>Cybear Tron</author>
      <pubDate>Tue, 15 Jun 2021 07:02:56 +0000</pubDate>
      <link>https://dev.to/cybeartron/how-to-read-member-only-medium-stories-for-free-without-being-a-member-16m7</link>
      <guid>https://dev.to/cybeartron/how-to-read-member-only-medium-stories-for-free-without-being-a-member-16m7</guid>
      <description>&lt;p&gt;So You are here to know how can you damn read member-only medium stories for free without being a member??&lt;br&gt;
If ur like me i.e. a minor who is not allowed to spend money online or ur broke or dont wanna pay medium... This is for u!!!!!&lt;/p&gt;

&lt;p&gt;Lets start!!!!&lt;br&gt;
STEP 1: First find yourself a medium story you want to read. For this tutorial, I will use Manpreet Singh's post &lt;a href="https://preettheman.medium.com/best-python-projects-to-finish-in-a-weekend-a032e5c11c1"&gt;https://preettheman.medium.com/best-python-projects-to-finish-in-a-weekend-a032e5c11c1&lt;/a&gt;&lt;br&gt;
STEP 2: Now that you have a story, now go to your browser. &lt;strong&gt;NOTE: TESTED ON CHROME AND EDGE. I WISH THIS WORKS ON OTHERS TOO&lt;/strong&gt; Press ctrl+shift+n or cmd+shift+n in mac for opening incognito or inprivate mode (Or jus use the way to open the alternative on your browser of incognito mode).&lt;br&gt;
STEP 3: Now u are in the incognito-esque mode, now paste the link of the medium article. Now ur good to go.&lt;br&gt;
You can read it!!!&lt;br&gt;
HAPPY CODING AND READING!!!!&lt;/p&gt;

</description>
      <category>medium</category>
      <category>incognito</category>
      <category>free</category>
      <category>member</category>
    </item>
    <item>
      <title>9 Responsive Website Tutorials With Html CSS JavaScript Bootstrap Step By Step</title>
      <author>fahim kabir</author>
      <pubDate>Tue, 15 Jun 2021 06:31:30 +0000</pubDate>
      <link>https://dev.to/fahimkabir/9-responsive-website-tutorials-with-html-css-javascript-bootstrap-step-by-step-56ng</link>
      <guid>https://dev.to/fahimkabir/9-responsive-website-tutorials-with-html-css-javascript-bootstrap-step-by-step-56ng</guid>
      <description>&lt;p&gt;&lt;strong&gt;Responsive web design&lt;/strong&gt; is a method of creating and &lt;strong&gt;developing websites&lt;/strong&gt; so that they are more accessible and give an ideal viewing experience for users on a variety of devices.&lt;/p&gt;

&lt;p&gt;With the rise of smart phones and tablets, it's practically impossible to ignore the need to &lt;strong&gt;optimize websites&lt;/strong&gt; for mobile devices. Responsive web design is a better option and a more effective technique to target a wide range of devices with fewer resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Responsive layouts&lt;/strong&gt; alter and adapt to any device screen size, whether it's a desktop, laptop, tablet, or smartphone.&lt;/p&gt;

&lt;p&gt;That's why I have selected &lt;strong&gt;10 beginner friendly responsive website tutorials&lt;/strong&gt; for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-ultra-responsive-portfolio-website-using-bootstrap-html-css-from-scratch"&gt;
  &lt;/a&gt;
  1. Ultra Responsive Portfolio Website Using Bootstrap Html Css From Scratch
&lt;/h2&gt;

&lt;p&gt;Your First Website Should Be Your Portfolio. Lets &lt;strong&gt;create a  Responsive Portfolio Website Using Bootstrap, Html, CSS &amp;amp; JavaScript from scratch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Because, creating responsive and mobile-friendly websites and applications has gotten considerably easier, thanks to Bootstrap 4's robust mobile-first flexbox grid framework.&lt;br&gt;
If you are a beginner, don't worry. This tutorial is mainly made for beginners.&lt;/p&gt;

&lt;p&gt;You will learn about,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Bootstrap&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How to use bootstrap&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Structure of a &lt;strong&gt;static website&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Section - Home. About, Service, Newsletter, Contact us, Footer.&lt;/li&gt;
&lt;li&gt;Ideas for your portfolio.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How to make a website Responsive&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kltvOVOEmM0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-complete-bootstrap-website-with-bootstrap-4-html5-css3"&gt;
  &lt;/a&gt;
  2. Complete Bootstrap Website With Bootstrap 4 HTML5 CSS3
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap 4&lt;/strong&gt; is built from the ground up to be &lt;strong&gt;responsive and mobile friendly&lt;/strong&gt;. Its five-tier grid classes provide you more control over the layout and how it looks on different platforms, such as mobile phones, tablets, laptops and desktops, large-screen devices, and so on.&lt;/p&gt;

&lt;p&gt;And here we are creating a &lt;strong&gt;responsive agency website using bootstrap html css &amp;amp; js&lt;/strong&gt;. We will create,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Responsive Nav Bar&lt;/li&gt;
&lt;li&gt;Beautiful video background&lt;/li&gt;
&lt;li&gt;About section&lt;/li&gt;
&lt;li&gt;Service section&lt;/li&gt;
&lt;li&gt;Pricing section&lt;/li&gt;
&lt;li&gt;Sign up section &lt;/li&gt;
&lt;li&gt;Footer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BSUjh4ebmzE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-how-to-make-bootstrap-website-step-by-step-with-html5-css3"&gt;
  &lt;/a&gt;
  3. How To Make Bootstrap Website Step By Step With HTML5 CSS3
&lt;/h2&gt;

&lt;p&gt;In this tutorial we will create another &lt;strong&gt;responsive agency website using html css js &amp;amp; bootstrap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We will create,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Navigation Bar &lt;/li&gt;
&lt;li&gt;Hero Section
&lt;/li&gt;
&lt;li&gt;Featured Section &lt;/li&gt;
&lt;li&gt;About Section &lt;/li&gt;
&lt;li&gt;Customer review Section &lt;/li&gt;
&lt;li&gt;Call to action&lt;/li&gt;
&lt;li&gt;Footer &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BtdESApM0a4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-bootstrap-responsive-website-design-tutorial-using-bootstrap-html-css"&gt;
  &lt;/a&gt;
  4. Bootstrap Responsive Website Design Tutorial Using Bootstrap HTML CSS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Using Bootstrap, Html, CSS &amp;amp; JavaScript we will create a beautiful Responsive blogging website&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Because the use of mobile devices to surf the web continues to grow at an astronomical pace, and these devices are often constrained by display size and require a different approach to how content is laid out on the screen.&lt;/p&gt;

&lt;p&gt;Web pages can be viewed using many different devices. Our web page should look good, and be easy to use, regardless of the device. Web pages should not leave out information to fit smaller devices, but rather adapt its content to fit any device.&lt;/p&gt;

&lt;p&gt;We will create,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Responsive Navigation Bar &lt;/li&gt;
&lt;li&gt;Hero Section
&lt;/li&gt;
&lt;li&gt;Featured Section &lt;/li&gt;
&lt;li&gt;Subscription Letter&lt;/li&gt;
&lt;li&gt;Blog Section &lt;/li&gt;
&lt;li&gt;Side Bar &lt;/li&gt;
&lt;li&gt;Responsive Footer &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QdavXfltTeY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-how-to-create-complete-responsive-website-using-bootstrap-html-css"&gt;
  &lt;/a&gt;
  5. How To Create Complete Responsive Website Using Bootstrap HTML CSS
&lt;/h2&gt;

&lt;p&gt;For creating this project we are using Bootstrap, Html, CSS &amp;amp; JavaScript.&lt;/p&gt;

&lt;p&gt;Today we will learn how to,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Setup Bootstrap&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Create Navigation Bar&lt;/li&gt;
&lt;li&gt;Create Hero Section&lt;/li&gt;
&lt;li&gt;Create About Section&lt;/li&gt;
&lt;li&gt;Create Project Section&lt;/li&gt;
&lt;li&gt;Create Team Slider&lt;/li&gt;
&lt;li&gt;Create Contact Section&lt;/li&gt;
&lt;li&gt;Create Footer Section&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SbukKlDWM3c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now, Lets make something more creative &amp;amp; reliable. That's why now we will &lt;strong&gt;create a responsive animated gym website&lt;/strong&gt;. And we will only &lt;strong&gt;using HTML, CSS &amp;amp; JavaScript&lt;/strong&gt;. No Bootstrap.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-responsive-animated-website-tutorial-using-html5-and-css3"&gt;
  &lt;/a&gt;
  6. Responsive Animated Website Tutorial Using HTML5 and CSS3
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we will &lt;strong&gt;learn how to create Fully Professional Responsive Animated Website Using HTML, CSS &amp;amp; JavaScript&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;If you are a beginner, don't worry. We will go through every process step by step, even the animation part also.&lt;/p&gt;

&lt;p&gt;You will learn about -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;How to make an Animated website&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;How to create &lt;strong&gt;pure CSS smooth scrolling effect&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Structure of a static website.&lt;/li&gt;
&lt;li&gt;Section - Home. About, Service, Contact us, Footer.&lt;/li&gt;
&lt;li&gt;Ideas for your website.&lt;/li&gt;
&lt;li&gt;How to make a website Responsive.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more simplicity, I have divided this tutorial into 2 different parts, so that I can explain you every single details.&lt;/p&gt;

&lt;p&gt;Part 1:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aF1sv6AsDFE"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 2:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8_h4LCRpqkc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-html-css-javascript-responsive-website-tutorial"&gt;
  &lt;/a&gt;
  7. HTML CSS JavaScript Responsive Website Tutorial
&lt;/h2&gt;

&lt;p&gt;We will &lt;strong&gt;Build A Responsive Website With HTML CSS &amp;amp; JavaScript Step By Step&lt;/strong&gt;. This a organization website. That's why we have to give some extra effort for making this website.&lt;/p&gt;

&lt;p&gt;We are adding some eye catching CSS styling for graving users attention towards this company.&lt;/p&gt;

&lt;p&gt;Here we are creating,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Navigation Bar &lt;/li&gt;
&lt;li&gt;Home Section &lt;/li&gt;
&lt;li&gt;Service Section &lt;/li&gt;
&lt;li&gt;Pricing Cards &lt;/li&gt;
&lt;li&gt;Newsletter Email Section&lt;/li&gt;
&lt;li&gt;Contact Page&lt;/li&gt;
&lt;li&gt;Footer&lt;/li&gt;
&lt;li&gt;Responsive Design With Media Query&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more clear explanation, I have divided this tutorial into 2 different parts.&lt;/p&gt;

&lt;p&gt;Part 1:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1FoQOProoeI"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 2:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G6JGc9MC96s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ok, Its time to do some advance stuffs. After creating our previous websites, I think you have got an idea of HTML, CSS, JavaScript &amp;amp; Bootstrap. Now we will implement them all to &lt;strong&gt;create a functional Responsive Ecommerce website With HTML, CSS, JavaScript &amp;amp; Bootstrap&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-how-to-make-ecommerce-website-using-html-and-css-step-by-step"&gt;
  &lt;/a&gt;
  8. How To Make Ecommerce Website Using HTML And CSS Step By Step
&lt;/h2&gt;

&lt;p&gt;In the previous tutorials, you looked at the many aspects and functionalities of &lt;strong&gt;Bootstrap HTML CSS &amp;amp; JavaScript&lt;/strong&gt;. However, simply studying the principles is insufficient; you must also have the abilities to put them into practice. In this tutorial, we'll &lt;strong&gt;build an e-commerce website&lt;/strong&gt; to assist you learn &lt;strong&gt;how to use Bootstrap HTML CSS &amp;amp; JavaScript for web design&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We'll start by building the pieces one by one, gradually increasing the level of complexity so you don't become overwhelmed with knowledge.&lt;/p&gt;

&lt;p&gt;We'll start with the ecommerce.html page, then go on to the products.html, productDetails.html pages and so on to develop a responsive website.&lt;/p&gt;

&lt;p&gt;You will learn to,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Adding Bootstrap &lt;/li&gt;
&lt;li&gt;Adding Font awesome icon&lt;/li&gt;
&lt;li&gt;Creating Navigation Bar&lt;/li&gt;
&lt;li&gt;Creating Home Section&lt;/li&gt;
&lt;li&gt;Creating Responsive navigation&lt;/li&gt;
&lt;li&gt;Creating Brand Section&lt;/li&gt;
&lt;li&gt;Creating New section&lt;/li&gt;
&lt;li&gt;Creating Featured Products&lt;/li&gt;
&lt;li&gt;Creating Banner section&lt;/li&gt;
&lt;li&gt;Creating Dress section&lt;/li&gt;
&lt;li&gt;Creating Watches section&lt;/li&gt;
&lt;li&gt;Creating shoes section&lt;/li&gt;
&lt;li&gt;Creating website Footer&lt;/li&gt;
&lt;li&gt;Responsive Footer&lt;/li&gt;
&lt;li&gt;Products Page Design&lt;/li&gt;
&lt;li&gt;Products details page design&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For better understanding, I have divided this website into several parts.&lt;/p&gt;

&lt;p&gt;Part 1:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/37KohMnlP7Q"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 2:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Mr7eWzGyq3E"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 3:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gW-q6G9KYTg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-what-should-i-make-next-please-let-me-know-in-the-comment"&gt;
  &lt;/a&gt;
  9. What Should I Make Next? Please Let Me Know In The Comment.
&lt;/h2&gt;

&lt;p&gt;You can use this projects to learn, improve your skills or for your portfolio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Previous Posts:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/fahimkabir" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKX2P2LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8_Vu5jyt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642043/5a98e096-84fd-4f50-a9f6-10caf87d9fa2.png" alt="fahimkabir image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fahimkabir/7-javascript-projects-for-beginners-d3m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 JavaScript Projects For Beginners&lt;/h2&gt;
      &lt;h3&gt;fahim kabir ・ Jun 11 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/fahimkabir" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKX2P2LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8_Vu5jyt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642043/5a98e096-84fd-4f50-a9f6-10caf87d9fa2.png" alt="fahimkabir image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fahimkabir/15-python-projects-for-beginners-4j4f" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;15 Python Projects For Beginners&lt;/h2&gt;
      &lt;h3&gt;fahim kabir ・ Jun 12 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#graphql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#resume&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Feel free to visit my YouTube channel:&lt;br&gt;
&lt;a href="//www.youtube.com/tech2etc"&gt;@Tech2etc&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me on Instagram where I'm sharing lot's of useful resources!&lt;br&gt;
&lt;a href="https://www.instagram.com/fahimkabir.hamim"&gt;@fahimkabir.hamim&lt;/a&gt; 😉&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Productive, Easy steps to make a website for business</title>
      <author>prajwalbisht</author>
      <pubDate>Tue, 15 Jun 2021 06:12:27 +0000</pubDate>
      <link>https://dev.to/prajwalbisht/productive-easy-steps-to-make-a-website-for-business-2447</link>
      <guid>https://dev.to/prajwalbisht/productive-easy-steps-to-make-a-website-for-business-2447</guid>
      <description>&lt;p&gt;Building a small business website is necessary to inform your audience about your brand and value proposition, which will help you boost your brand recognition and drive sales.&lt;/p&gt;

&lt;p&gt;However, to build a business website, you first need to choose a domain name and a secured web hosting. After this, you need to optimize your website to improve your search engine rankings (SERPs) and drive more traffic.&lt;/p&gt;

&lt;p&gt;Everyone is aware of the fact, how people are more indulgent with their mobile phones that is why you should always keep your website updated and optimized for mobile devices too. Also, ensure that your site speed is requisite to improve your search engine rankings (SERPs).&lt;/p&gt;

&lt;p&gt;This article is for small business owners who are seeking help to build a website or improve upon their existing website.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Why is it important to have a website for your business?&lt;/b&gt;&lt;br&gt;
There are multiple reasons to have a website for your business such as:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Helps you in communicating your brand value -&lt;/b&gt; Having a website for small businesses helps you communicate your brand’s value to potential customers easily. It includes various style elements, target market, and many other important factors that can help visitors decide whether they should choose your business for purchase or not.&lt;br&gt;
Easy communications with your clients help you connect with new clients.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Helps you in capturing more leads -&lt;/b&gt; Owning a website should ideally capture more leads from the web visitors. This is why having a website is so important for your small business. Using strategic CTA should be placed on your landing page. Structuring your site properly and placing a strong CTA in the right place.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Enhance trust among your customers -&lt;/b&gt; Most people in today’s technological world would not trust your business if it does not have an online presence. No matter what your business or your revenue is; having a website is incredibly necessary and there is no excuse to not have one.&lt;br&gt;
It is because without having a website you lose the opportunity to be in front of your potential customers. Additionally, most people might think your business doesn't exist unless you own a website.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Enhance your business online presence -&lt;/b&gt; Your website should enhance the online presence of your business, which is acute to continue to see business growth. Having a website for your business is incredibly important to hold the top position in the market.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;24/7 advertising -&lt;/b&gt; Your website is a 24-hour billboard for your business. Now, let’s assume your business is closed 24 hours a day, 7 days a week. How can you advertise your business when your store is closed or unavailable to take a call? Then having a website will be beneficial for your business, of course.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Increase brand credibility -&lt;/b&gt; Your website will give you rapid brand credibility, which will lead to more sales and more customers. This is one of the very important reasons you need a website.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;How to make a small business website?&lt;/b&gt;&lt;br&gt;
Once you have a clear understanding of what you want to accomplish, you can initiate digging into the website building process by following the key steps that will help you launch your business successfully online :&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Select a platform -&lt;/b&gt; Usually, you should go for a mobile-friendly website solution that will help you create a website easily even if you are not a technical person. Here are some platform options that are highly recommended for your website:&lt;br&gt;
&lt;b&gt;- WordPress -&lt;/b&gt; You can choose WordPress for your website as it has two versions i.e. WordPress.com and WordPress.org. Among both, WordPress.org is preferred by all the beginners as it allows access to the best features and provides you full control over your website.&lt;/p&gt;

&lt;p&gt;&lt;b&gt; - Hosted website builders -&lt;/b&gt; In case you want to have an all-in-one solution for your website, then you might consider Wix or Squarespace. These platforms offer a complete website design which is out-of-the-box as you get an easy drag and drop feature with them.&lt;/p&gt;

&lt;p&gt;Moreover, the cost plans related to the hosted website builders depend on the services you choose for your website. After comparing, WordPress is a bit cheaper than other platforms. Some of the reasons why most people recommend WordPress for building their website are:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is not necessary to be a developer or have knowledge of technical skills to build a website for business. However, you might need some technical expertise when you desire to customise the website themes as per your requirements.&lt;br&gt;
The WordPress software is available FREE (Majority of them).&lt;br&gt;
WordPress is super flexible and you can easily change how your site looks or even add new features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over 37% of the business websites on the internet prefer WordPress, so your business website will effortlessly be under the top websites in the market.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Choose a domain name -&lt;/b&gt; To build a small business website, you are required to choose a suitable domain name, that is simply your website's unique online address. A domain name is created with the combination of your website’s name and the extension.&lt;br&gt;
Having a domain name for your website will help you improve your website’s visibility, credibility, and make your brand trustworthy for the customers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Find the best hosting provider -&lt;/b&gt; You can skip this step if you desire to have an all-in-one website builder. However, if you want to have a WordPress website, then there are various excellent beginner-friendly hosting companies that you should consider.&lt;br&gt;
One of the best considered hosting picks among all is Bluehost. It is usually recommended by WordPress.org: Bluehost is known to offer the cheapest hosting plan. This package is generally suitable for all small business websites, but you can easily upgrade it as your business grows.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Choose a theme or template for your website -&lt;/b&gt; Owning a &lt;a href="https://www.janbaskdigitaldesign.com/website-design-services"&gt;Mobile-friendly website design&lt;/a&gt; for your business will be favorable, as it can smoothly fit into the visitor's screen despite its size and shape.&lt;br&gt;
While building a small business website, you should consider few things such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;61% of visitors consider mobile-friendly websites.&lt;/li&gt;
&lt;li&gt;Responsive website designs help you with more traffic.&lt;/li&gt;
&lt;li&gt;Over 50% of online traffic comes from a responsive website.&lt;/li&gt;
&lt;li&gt;95% of people create your brand image after going through your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Publish High-Quality Content -&lt;/b&gt; Everybody knows the power of content to grab visitors' attention. Informative content offers details related to your brand as well as your service(s)/ product(s).&lt;br&gt;
With the use of informative and creative content, you get the opportunity to perform internal linking, which in turn helps you increase the ROI of your business.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Search engine Optimization -&lt;/b&gt; Now that you've created a website, and know what to do with it, you should start planning - “How to drive traffic to your website”.&lt;br&gt;
Online Marketing helps you spread awareness about your website's product(s) or service(s) with the use of multiple web-based channels. Moreover, you should register your website on Google Analytics, after you &lt;a href="https://www.janbaskdigitaldesign.com/blogs/how-to-make-website-for-business/"&gt;build a website from scratch&lt;/a&gt;. This will help you keep a track of visitor's numbers and statistics.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion:&lt;/b&gt;&lt;br&gt;
Hope this article helped you in learning “how to make a website for business?” Now by following the above-mentioned steps even a non-technical person can build his/her business website.&lt;/p&gt;

&lt;p&gt;Initially, everyone struggles in building a website for small businesses. And if that is the case with you, you can even consider hiring some professionals to build a successful website.&lt;/p&gt;

</description>
      <category>waystomakewebsite</category>
      <category>websitebuildingsteps</category>
    </item>
    <item>
      <title>Today I learned about Hidden Search</title>
      <author>Ahtsham Ajus</author>
      <pubDate>Tue, 15 Jun 2021 05:45:26 +0000</pubDate>
      <link>https://dev.to/ahtshamajus/today-i-learned-about-hidden-search-4364</link>
      <guid>https://dev.to/ahtshamajus/today-i-learned-about-hidden-search-4364</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ahtshamajus4772/embed/GRWPNoK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>laravel</category>
    </item>
  </channel>
</rss>
