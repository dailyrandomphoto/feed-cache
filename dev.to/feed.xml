<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introducing Teaming in LitmusChaos to ease your Chaos Engineering experience</title>
      <author>Saranya-jena</author>
      <pubDate>Thu, 20 May 2021 10:27:34 +0000</pubDate>
      <link>https://dev.to/saranyajena/introducing-teaming-in-litmuschaos-to-ease-your-chaos-engineering-experience-5alo</link>
      <guid>https://dev.to/saranyajena/introducing-teaming-in-litmuschaos-to-ease-your-chaos-engineering-experience-5alo</guid>
      <description>&lt;p&gt;This blog covers everything you need to know about the teaming feature provided by LitmusChaos for your Chaos Engineering needs.&lt;/p&gt;

&lt;p&gt;Litmus is a Cross-Cloud Chaos Orchestration framework for practicing chaos engineering in cloud-native environments. Litmus provides a chaos operator, a large set of chaos experiments on its &lt;a href="https://hub.litmuschaos.io/"&gt;hub&lt;/a&gt;, detailed &lt;a href="https://litmusdocs-beta.netlify.app/docs/introduction/"&gt;documentation&lt;/a&gt;, and a friendly community. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-teaming"&gt;
  &lt;/a&gt;
  Why teaming?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"Teamwork is the ability to work together towards a common vision. The ability to direct individual accomplishments towards organizational objectives. It is the fuel that allows common people to attain uncommon results."&lt;br&gt;&lt;br&gt;
-Andrew Carnegie&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The quote from Andrew Carnegie probably answers the questions.&lt;/p&gt;

&lt;p&gt;You might be wondering how this feature alters your Chaos Engineering experience? Why does LitmusChaos emphasize teaming?&lt;br&gt;
Imagine being a firefighter and dealing with the fire alone. You don’t want to be alone in the chaos you created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/137TKgM3d2XQjK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/137TKgM3d2XQjK/giphy.gif" alt="fire alarm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are working on a chaos engineering project and want to share the details/analytics with someone, you don’t have to export the data every time and share it with everyone individually, instead, Litmus provides users with a teaming feature that allows users to invite other members to their project and participate in it so that they can get the real-time update about the project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#litmus-chaos-20-advanced-beta-out-now"&gt;
  &lt;/a&gt;
  Litmus Chaos 2.0 Advanced Beta Out Now!🚀
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://litmuschaos.io/"&gt;LitmusChaos&lt;/a&gt; 2.0 Advanced Beta provides a whole new way to perform chaos engineering, apprehending some high-level features. It comes with a lot of new and enhanced features such as GitOps, for Chaos Engineering, Workflow Sequence Editing, Visualization of workflows, Chaos Interleaved dashboards, and many more. You can find a detailed list on the &lt;a href="https://github.com/litmuschaos/litmus/releases"&gt;release&lt;/a&gt; page. It also includes a brand new UI for teaming along with some additional features. We’ll be exploring all of its features including the different kinds of roles and their access levels. A member of a project can schedule, modify workflows and view the analytics based on the member’s role in the project. &lt;br&gt;
We’ll start with explaining the different roles of a user in a team briefly. There are three project roles in Litmus:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Owner:&lt;/strong&gt; One who created the project and owns it. Only the owner has permission to manage(invite or remove) the members in his/her project. The owner can schedule workflows, update workflows, delete workflows and view the analytics.&lt;br&gt;
&lt;strong&gt;Editor:&lt;/strong&gt; Members invited with editor role can do everything an owner can except for managing the members in the project&lt;br&gt;
&lt;strong&gt;Viewer:&lt;/strong&gt; Members having a viewer role can only view the analytics related to the workflows.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#highlights"&gt;
  &lt;/a&gt;
  Highlights
&lt;/h2&gt;

&lt;p&gt;Now let's take a deeper dive into the features, what all we can achieve with teaming. It comes with the following features:&lt;br&gt;
&lt;strong&gt;Choose role and send the invitation:&lt;/strong&gt; With this, you can select as many users you want, choose their roles individually and send the invitation at once! Once it is done successfully you can see the status of your invitation ( whether it is pending/accepted/declined or exited) along with all other necessary details in the &lt;code&gt;Invited&lt;/code&gt; tab. &lt;br&gt;
&lt;strong&gt;Edit invitation:&lt;/strong&gt; Now if you had a change of mind and you wanted to change the role, we got you! Just go to the &lt;code&gt;invited&lt;/code&gt; tab, change the role, and hit the &lt;code&gt;Resend&lt;/code&gt; button. You can also cancel the invitation by just clicking on the &lt;code&gt;Bin&lt;/code&gt; icon.&lt;br&gt;
&lt;strong&gt;Respond to the invitation:&lt;/strong&gt; Once the invitation is received, the user can take a look at details including the sender's name, role, and project name, then decide whether to accept or decline the invitation. &lt;br&gt;
&lt;strong&gt;Leave or View Project:&lt;/strong&gt; Once you are done with the project and don’t want to be a part of it anymore, you can go to the &lt;code&gt;Active&lt;/code&gt; tab, here you can either switch to a project you want to view or can leave it by just clicking on the &lt;code&gt;Leave Project&lt;/code&gt; button! &lt;br&gt;
&lt;strong&gt;Remove a Member:&lt;/strong&gt; If you are the project owner, you can also remove any member!&lt;/p&gt;

&lt;p&gt;Once you respond to the invitation or leave it afterwards, the status will automatically get updated in the sender's account. Here's a short GIF explaining all the basic features of teaming.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eADSTa8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t269ktqjs5oc2bx3rln1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eADSTa8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t269ktqjs5oc2bx3rln1.gif" alt="ezgif.com-gif-maker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all folks! Thank you for sticking around. We hope you had a productive time reading about Litmus and its teaming feature. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;This blog is also contributed by &lt;a href="https://www.linkedin.com/in/sarthak-jain-64896a167"&gt;Sarthak Jain&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Are you an &lt;a href="https://en.wikipedia.org/wiki/Site_reliability_engineering"&gt;SRE&lt;/a&gt; or a &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; enthusiast? Does &lt;a href="https://en.wikipedia.org/wiki/Chaos_engineering"&gt;Chaos Engineering&lt;/a&gt; excite you? Want to chat with us, we are available in &lt;a href="https://app.slack.com/client/T09NY5SBT/CNXNB0ZTN"&gt;Kubernetes slack&lt;/a&gt; (#litmus channel on the Kubernetes workspace). &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/litmuschaos"&gt;
        litmuschaos
      &lt;/a&gt; / &lt;a href="https://github.com/litmuschaos/litmus"&gt;
        litmus
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Litmus helps Kubernetes SREs and developers practice chaos engineering in a Kubernetes native way. Chaos experiments are published at the ChaosHub  (https://hub.litmuschaos.io). Community notes is at https://hackmd.io/a4Zu_sH4TZGeih-xCimi3Q
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/05101bf070f7cf00caa0241e188ff270df6d8d166f2e82ad008d99086f12f5cd/68747470733a2f2f6c616e6473636170652e636e63662e696f2f6c6f676f732f6c69746d75732e737667"&gt;&lt;img alt="LitmusChaos" src="https://camo.githubusercontent.com/05101bf070f7cf00caa0241e188ff270df6d8d166f2e82ad008d99086f12f5cd/68747470733a2f2f6c616e6473636170652e636e63662e696f2f6c6f676f732f6c69746d75732e737667" width="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
Litmus&lt;/h1&gt;

&lt;h3&gt;
Cloud-Native Chaos Engineering&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://slack.litmuschaos.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b047ba96a77b6653f6c8d66341469fe42b3df6f720742b50a5b7b389822c877f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d4a6f696e2d707572706c65" alt="Slack Channel"&gt;&lt;/a&gt;
&lt;a href="https://app.circleci.com/pipelines/github/litmuschaos/litmus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cf86788733d24bc29f6fcfa7fe6bb9a32bf5e5de6d50c2587063f428be5b6f1d/68747470733a2f2f636972636c6563692e636f6d2f67682f6c69746d75736368616f732f6c69746d75732f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/litmuschaos/chaos-operator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f247ca264100c14f50ba143d04fdffaf2a0356080e246bc4d7f5cf64a10cce64/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6c69746d75736368616f732f6368616f732d6f70657261746f722e737667" alt="Docker Pulls"&gt;&lt;/a&gt;
&lt;a href="https://github.com/litmuschaos/litmus/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/66f125c1f4c85d997327d4bb8359e00d10ca4aa80fbb6541eb14c817ef2cd14e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6c69746d75736368616f732f6c69746d75733f7374796c653d736f6369616c" alt="GitHub stars"&gt;&lt;/a&gt;
&lt;a href="https://github.com/litmuschaos/litmus/issues"&gt;&lt;img src="https://camo.githubusercontent.com/ea31ad5156719209e5e2147e68f165d2627bc8f2b26ee4d43840663744061934/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6c69746d75736368616f732f6c69746d7573" alt="GitHub issues"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/LitmusChaos" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bed9fe80689ef57c302d8da8f44054aeed0d401da75d9ca9db85230a6f91e499/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6c69746d75736368616f733f7374796c653d736f6369616c" alt="Twitter Follow"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/3202" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9db8c7d1792b97cb894979f7ef425e1eaa433e34206e8cb863788ef33e4cef8a/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f333230322f6261646765" alt="CII Best Practices"&gt;&lt;/a&gt;
&lt;a href="https://bettercodehub.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a97a152858c6207b625cf455450c232e9ccd94335cc0d03d73e6e1dc16f4846/68747470733a2f2f626574746572636f64656875622e636f6d2f656467652f62616467652f6c69746d75736368616f732f6c69746d75733f6272616e63683d6d6173746572" alt="BCH compliance"&gt;&lt;/a&gt;
&lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus?ref=badge_shield" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff9b7f45294a2ef987056d9b8fd111df9adaa593e2b98281eec44a315ab09309/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d2532466c69746d75736368616f732532466c69746d75732e7376673f747970653d736869656c64" alt="FOSSA Status"&gt;&lt;/a&gt;
&lt;a href="https://www.youtube.com/channel/UCa57PMqmz_j0wnteRa9nCaw" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a6c3642de765a25715f27bbef1cbec3a3e1725ceb8d9445b74564451e0d4e368/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f596f75547562652d5375627363726962652d726564" alt="YouTube Channel"&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
&lt;em&gt;Read this in &lt;a href="https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/TRANSLATIONS.md"&gt;other languages&lt;/a&gt;.&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/README-ko.md"&gt;🇰🇷&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/README-chn.md"&gt;🇨🇳&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/README-pt-br.md"&gt;🇧🇷&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/litmuschaos/litmus/master/translations/README-hi.md"&gt;🇮🇳&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Overview&lt;/h2&gt;

&lt;p&gt;Litmus is a toolset to do cloud-native chaos engineering. Litmus provides tools to orchestrate chaos on Kubernetes to help SREs find weaknesses in their deployments. SREs use Litmus to run chaos experiments initially in the staging environment and eventually in production to find bugs, vulnerabilities. Fixing the weaknesses leads to increased resilience of the system.&lt;/p&gt;

&lt;p&gt;Litmus takes a cloud-native approach to create, manage and monitor chaos. Chaos is orchestrated using the following Kubernetes Custom Resource Definitions (&lt;strong&gt;CRDs&lt;/strong&gt;):&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;ChaosEngine&lt;/strong&gt;: A resource to link a Kubernetes application or Kubernetes node to a ChaosExperiment. ChaosEngine is watched by Litmus' Chaos-Operator which then invokes Chaos-Experiments&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ChaosExperiment&lt;/strong&gt;: A resource to group the configuration parameters of a chaos experiment. ChaosExperiment CRs are created by the operator when experiments are invoked by ChaosEngine.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ChaosResult&lt;/strong&gt;: A resource to…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/litmuschaos/litmus"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Do check out the LitmusChaos &lt;a href="https://github.com/litmuschaos/litmus"&gt;Github repo&lt;/a&gt; and share your valuable feedback. Feel free to submit a &lt;a href="https://github.com/litmuschaos/litmus/pulls"&gt;pull request&lt;/a&gt; if you notice any necessary changes.😇&lt;br&gt;&lt;br&gt;
&lt;img src="https://i.giphy.com/media/l3q2FnW3yZRJVZH2g/giphy.gif" alt="thankyou"&gt;

</description>
      <category>kubernetes</category>
      <category>chaosengineering</category>
      <category>litmuschaos</category>
      <category>sre</category>
    </item>
    <item>
      <title>Glassmorphism Side Navigation With HTML &amp; CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Thu, 20 May 2021 10:25:13 +0000</pubDate>
      <link>https://dev.to/nikhil27b/glassmorphism-side-navigation-with-html-css-4emg</link>
      <guid>https://dev.to/nikhil27b/glassmorphism-side-navigation-with-html-css-4emg</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/LYWbexW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Changing Cursor with CSS for better UX</title>
      <author>Suprabha</author>
      <pubDate>Thu, 20 May 2021 10:07:47 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/changing-cursor-with-css-for-better-ux-il6</link>
      <guid>https://dev.to/suprabhasupi/changing-cursor-with-css-for-better-ux-il6</guid>
      <description>&lt;p&gt;&lt;span&gt;T&lt;/span&gt;he cursor CSS property sets the type of mouse cursor, if any, to show when the mouse pointer is over an element.&lt;/p&gt;

&lt;p&gt;There are some cases where the default cursor behaviour from the User Agent Stylesheet doesn’t cut it. In these cases, we ought to change the cursor to something that reflects the expected user interaction on that element.&lt;/p&gt;

&lt;p&gt;Checkout all the cursors on &lt;a href="https://codepen.io/suprabhasupi/pen/PopGBRO"&gt;codepen&lt;/a&gt; 🧡&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/suprabhasupi/embed/PopGBRO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-a-custom-cursor-%E2%86%93"&gt;
  &lt;/a&gt;
  Using a Custom Cursor ↓
&lt;/h3&gt;

&lt;p&gt;The cursor property is specified as zero or more &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; values, separated by commas. The cursor property does accept SVG files in all its glory but not Gifs.&lt;/p&gt;

&lt;p&gt;Yes, you can create your own custom cursor using any images like png, jpg, etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cursors"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"heart"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Heart&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"earth"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Earth&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"smile"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Smile&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.cursors&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.heart&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("https://i.imgur.com/K10EMnr.png")&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.earth&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("https://i.imgur.com/scE50J2.png")&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.smile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("https://i.imgur.com/aPPijZC.png")&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;



&lt;p&gt;📝 NOTE: The size of the &lt;b&gt;images should not be greater than 32*32 DIP&lt;/b&gt;, else you will get the below warning and your image won't work. &lt;/p&gt;



&lt;p&gt;I have used &lt;a href="https://www.birme.net/?target_width=32&amp;amp;target_height=32"&gt;this website&lt;/a&gt; for resizing my images.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference 🧐
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Console"&gt;MDN Doc Cursor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        🌟 &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        👩🏻‍💻 &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        🌟 &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>ux</category>
    </item>
    <item>
      <title>How we resolved a memory leak on our website</title>
      <author>Craig Taub</author>
      <pubDate>Thu, 20 May 2021 09:40:58 +0000</pubDate>
      <link>https://dev.to/fiit/how-we-resolved-a-memory-leak-on-our-website-1kf0</link>
      <guid>https://dev.to/fiit/how-we-resolved-a-memory-leak-on-our-website-1kf0</guid>
      <description>&lt;p&gt;The &lt;a href="https://fiit.tv"&gt;fiit website&lt;/a&gt; is used for creating subscriptions as well as helping users log into the app on TV platforms such as Sky and Amazon. As such it is an important asset to the business, but ultimately does not change very often.&lt;/p&gt;

&lt;p&gt;For some time there has been a memory leak on the website. How can we be sure? I think the memory graphs below are pretty self explanatory. This is the memory usage over a normal week (shows min/max and average in green). &lt;br&gt;
You can see every 1-2 days it would increase up to 100% before it eventually crashes and then starts the process all over again. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C-wHAxRx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6br6mly3khgemusns6eu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-wHAxRx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6br6mly3khgemusns6eu.png" alt="Memory leak"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The stack is out of date, with some node modules being 3 years behind, and NodeJS being version 10 (which was released in October 2018). At time of writing LTS is 14.17.&lt;/p&gt;

&lt;p&gt;So we know there is a leak, it could be our code or it could be an out of date version. Where to start?&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#plan-a-local-profiling"&gt;
  &lt;/a&gt;
  Plan A - Local profiling
&lt;/h2&gt;

&lt;p&gt;We thought we would start by analysing our code. We would run the application in production mode, and take memory snapshots with Chrome dev-tools at various times. Comparing the difference between the snapshots should hopefully highlight the cause.&lt;/p&gt;

&lt;p&gt;However there were a couple of other problems to solve first...&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#problem-1-how-to-thrash-the-server-locally"&gt;
  &lt;/a&gt;
  Problem #1 - How to thrash the server locally?
&lt;/h3&gt;

&lt;p&gt;We used Apache Benchmark to do this. It is pretty great, you can set the total number of requests and number in parallel. E.g&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ab -c 50 -n 5000 -k &lt;a href="http://localhost:8080/"&gt;http://localhost:8080/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#problem-2-which-pages-to-thrash"&gt;
  &lt;/a&gt;
  Problem #2 - Which pages to thrash?
&lt;/h3&gt;

&lt;p&gt;Now we have a tool which we can use to replicate high user volume, where should we target?&lt;/p&gt;

&lt;p&gt;The website uses GA, so I grabbed the 2 most popular pages, one of which is the homepage, and planned to use both of those.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#problem-3-how-to-capture-the-memory-of-a-server-run-via-docker-containers"&gt;
  &lt;/a&gt;
  Problem #3 - How to capture the memory of a server run via docker containers?
&lt;/h3&gt;

&lt;p&gt;This has 3 steps&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;On the docker image expose the NodeJS debugger port (this is 9229). e.g &lt;code&gt;9229:7001&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;On the docker image start the application with the debugger on. E.g. &lt;code&gt;--inspect=0.0.0.0&lt;/code&gt; and garbage collection exposed  &lt;code&gt;--expose-gc&lt;/code&gt; (the reason is so we can trigger GC before we collect a snapshot, therefore isolating the parts of memory which are not being collected properly)&lt;/li&gt;
&lt;li&gt;Open Chrome inspector (&lt;code&gt;chrome://inspect/#devices&lt;/code&gt;) and add a target to &lt;code&gt;localhost:7001&lt;/code&gt; (our remote debugging port) &lt;/li&gt;
&lt;li&gt;Find the application you want to profile running in the list, click it and you will get an open Chrome dev-tools. From here we can use the "memory" tab to take heap snapshots.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we are running our server application on a docker container, and can connect to the box's memory.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#local-profiling"&gt;
  &lt;/a&gt;
  Local profiling
&lt;/h3&gt;

&lt;p&gt;We decided to start with 1000 requests, 30 at a time.&lt;br&gt;
We would take a memory heap snapshot every 2 minutes for about 8 minutes, forcing a GC (&lt;code&gt;global.gc()&lt;/code&gt;) each time.&lt;br&gt;
Then at the end compare the different snapshot, looking for items with a large footprint i.e. 1% or greater.&lt;/p&gt;

&lt;p&gt;What we immediately found was an issue with how we used Lodash, and more specifically the &lt;code&gt;memoize()&lt;/code&gt; function. &lt;br&gt;
We were handing unique keys each time and thus creating a new instance of the function every single time. So the internal Map would just keep growing. This counts as a leak. &lt;br&gt;
The 2 culprits were found in the below snapshots, note the first internal array is the “node_modules”, and removed from code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Vv7HnaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ixz18cwiyyy6fgictdn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Vv7HnaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ixz18cwiyyy6fgictdn.png" alt="Memoize 3"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5yzwYrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8k7claq6sogo0867rdu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5yzwYrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8k7claq6sogo0867rdu.png" alt="Memoize 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There was also a 3rd instance of this which was actually worse than the others, so this was also removed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SbzFevuD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i06x0a8p8hg5oscnsm0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbzFevuD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i06x0a8p8hg5oscnsm0.png" alt="Memoize 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Removing the memoize function fixed these particular problems. &lt;/p&gt;

&lt;p&gt;However the overall problem on production remained and the boxes continued to leak memory in the same way. &lt;/p&gt;

&lt;p&gt;At this point we felt it might be useful to get more insights to the leak on production.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#plan-b-more-production-visibility"&gt;
  &lt;/a&gt;
  Plan B - More production visibility
&lt;/h2&gt;

&lt;p&gt;We decided there were 2 ways to gather production box information.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-prometheus"&gt;
  &lt;/a&gt;
  1. Prometheus
&lt;/h3&gt;

&lt;p&gt;Add Prometheus to the box - it is fantastic at capturing all kinds of low level metrics and might prove insightful at helping us locate the source of the leak.&lt;br&gt;
The idea is we add a /metrics endpoint for the app which exposes certain stats, and we can gather and display them on our Grafana.&lt;/p&gt;

&lt;p&gt;This is an example of the /metrics output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QhXN1icm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1r55pkqqv5vdfd60ios.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QhXN1icm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1r55pkqqv5vdfd60ios.png" alt="Prometheus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the Koa library, the change looks something like this, using the popular library &lt;a href="https://www.npmjs.com/package/prom-client"&gt;prom-client&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Once this change was live we were able to analyse the results. &lt;br&gt;
One of the most interesting metrics is called "NodeJS heap space size used". It lets you examine the performance of different memory spaces.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;metricsRouter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;metricsRouter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/metrics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contentType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;metrics&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;metricsRouter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What we found was that the "old space" is where the leak resides.&lt;/p&gt;

&lt;p&gt;To demonstrate the difference in memory space here is the "new space" in a period of time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xxmNmgit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6la4o23gnuyaxbgedz9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xxmNmgit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6la4o23gnuyaxbgedz9.png" alt="Heap space"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here is the same period of time with the "old space". A clear leak.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u2N1OLNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ed80n64bi97dh1nqgdwj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u2N1OLNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ed80n64bi97dh1nqgdwj.png" alt="Old space"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What this suggests is that we have objects surviving being garbage collected, the top 2 reasons for this is that we have pointers to other objects still in memory or we have raw data being continually written to. Both those reasons are typically caused by bad code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-heapdump"&gt;
  &lt;/a&gt;
  2. Heapdump
&lt;/h3&gt;

&lt;p&gt;Using the &lt;a href="https://www.npmjs.com/package/heapdump"&gt;heapdump&lt;/a&gt; package we can capture and download snapshots from production, put them into the Chrome memory profiler locally and try to locate the source of the leak. &lt;br&gt;
The idea is that the real box memory would contain the real leak, whereas local attempts to replicate had mostly failed to be consistent.&lt;/p&gt;

&lt;p&gt;There were 3 problems with this, most come from the fact we use AWS ECS Fargate on production distributing requests across multiple containers.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#problem-1"&gt;
  &lt;/a&gt;
  Problem #1
&lt;/h4&gt;

&lt;p&gt;We could not connect directly to a running box via terminal (ala a "docker exec" like command) as they are not exposed this way. Any "ECS" command is run in a new container and therefore would be useless at providing a memory snapshot we can use.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#problem-2"&gt;
  &lt;/a&gt;
  Problem #2
&lt;/h4&gt;

&lt;p&gt;Given "Problem #1" we knew we had to go with exposing a URL to download the snapshot. However we could not reliably hit the URL of the same box. The load balancer would keep moving us around boxes (we have not enabled sticky sessions) so we would take memory dumps of the different boxes which would prove useless once compared.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#problem-3"&gt;
  &lt;/a&gt;
  Problem #3
&lt;/h4&gt;

&lt;p&gt;Building a memory snapshot uses a heck of a lot of CPU and memory in itself. It is a very intensive task. So we had to make sure any URL that exposed this ability was behind some sort of authentication.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;We added a url to the website and added authentication via time sensitive 1-way hash to ensure nobody could hit the page without our permission.&lt;/p&gt;

&lt;p&gt;The process to download the memory heap snapshot file was below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generate a valid hash locally, its tied to the start of the hour (I have omitted the real value)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;node -e "const moment = require('moment'); console.log(crypto.createHmac('sha256', 'secret-key').update(JSON.stringify({ date: moment.utc().startOf('hour').toISOString(), value: '[obfuscated]' })).digest('hex'));"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hit website url with &lt;code&gt;/heapdump?hash=&amp;lt;hash&amp;gt;&lt;/code&gt; to download the file&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The same hash code is run on the server and as long as they match the current memory snapshot is taken, this took care of Problem #1 and Problem #3.&lt;br&gt;
The snapshot filename is the ECS task-id (more details on how to capture that in &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/userguide/task-metadata-endpoint-v4-fargate.html"&gt;AWS docs here&lt;/a&gt;), so hitting it a couple of times should get around Problem #2 and generate profiles from the same box.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analyse-production-snapshots"&gt;
  &lt;/a&gt;
  Analyse production snapshots
&lt;/h2&gt;

&lt;p&gt;We followed the same process as with our local profiling i.e. hitting a box then waiting a couple of minutes to hit it again. Then comparing the memory allocated between them.&lt;br&gt;
The 2 tasks profiled are shown in google dev-tools below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6o9j_e9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v23q7k1p9zw7vqxth3bt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6o9j_e9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v23q7k1p9zw7vqxth3bt.png" alt="Snap 1"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---2KcY-ey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oslhzhkwou6avty2yo0u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---2KcY-ey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oslhzhkwou6avty2yo0u.png" alt="Snap 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The good news is that the snapshots highlight the clear signs of a leak. The memory always starts around 50mb, after 10-15 minutes has moved to 85mb then another 10-15 minutes later is 122mb. Generating the snapshot will incur a memory cost, but it should not be that much.&lt;br&gt;
This is not something we were able to see locally.&lt;/p&gt;

&lt;p&gt;By looking at the “objects allocated” between the snaps with the large gaps (see below)  we found that an internal array was increasing by 4-5% (note: the top item is the snapshot itself, it requires memory to generate the snapshot). &lt;br&gt;
This applies to the &lt;strong&gt;retained memory&lt;/strong&gt;, which is important as it lets us know how much memory would be freed if this object was garbage collected. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RytNlO1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8gu9k7bditeefthn112.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RytNlO1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8gu9k7bditeefthn112.png" alt="Internal array issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As each entry was from a different library we decided it was possibly a NodeJS issue, perhaps maps/arrays were not as optimised in v10 as in v14?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upgrading-nodejs"&gt;
  &lt;/a&gt;
  Upgrading NodeJS
&lt;/h2&gt;

&lt;p&gt;Upgrading the version of NodeJS that the website uses was fairly straightforward as we were not using any deprecated features from v10. We had to update the Docker image, CircleCI config and our local NVM config. All of which to the latest at the time, which was v14.16.&lt;/p&gt;

&lt;p&gt;The results were immediate..instead of a continual steep incline up, the memory remained stable, see below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vjP26CKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gffeqs9llctd4jrwhy7y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjP26CKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gffeqs9llctd4jrwhy7y.png" alt="Mem fixed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The old space in the heap, which was previously the root cause, was looking much better after the upgrade too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sgsx547H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/my734o2af9o0l9j4ht8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sgsx547H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/my734o2af9o0l9j4ht8b.png" alt="Old space fixed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So that was it 🙌🏻 ! We profiled production, found the root cause, applied a fix and since that day the website's memory usage has been stable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lessons-learned"&gt;
  &lt;/a&gt;
  Lessons learned
&lt;/h2&gt;

&lt;p&gt;We learnt a lot through this journey, here we detail a couple of points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When dealing with a leak local profiling is a good place to start, but don’t pin all your hopes on finding the cause there&lt;/li&gt;
&lt;li&gt;Use prometheus to locate the memory space of a memory leak&lt;/li&gt;
&lt;li&gt;Compare memory heap dumps in google dev-tools to locate the source of the memory leak&lt;/li&gt;
&lt;li&gt;If you are considering collecting production memory snapshot, be aware of what your infrastructure can or cannot do&lt;/li&gt;
&lt;li&gt;Keep your dependencies up to date, if you don't eventually there will be a price to pay&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you enjoyed this post. &lt;br&gt;
If you think you would be interested to work with the engineering department at Fiit check out our &lt;a href="https://fiit.tv/careers/"&gt;careers page here&lt;/a&gt; to see what's available.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>memoryleak</category>
      <category>performance</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Sites To Get Remote Developer Jobs ! 👨‍💻</title>
      <author>Saumya</author>
      <pubDate>Thu, 20 May 2021 09:20:30 +0000</pubDate>
      <link>https://dev.to/saumya66/10-sites-to-get-remote-developer-jobs-4c48</link>
      <guid>https://dev.to/saumya66/10-sites-to-get-remote-developer-jobs-4c48</guid>
      <description>&lt;p&gt;Hi, there welcome to another blog! So while searching for jobs myself I have found some great sites that I think everyone should be aware of especially at these times.  🚀&lt;/p&gt;

&lt;p&gt;I believe if someone has skills, why not build some great stuff and provide for the family, yourself be independent and make life a bit easier.&lt;/p&gt;

&lt;p&gt;So here I will be sharing some Remote Job Posting Sites which you can use to find your first of many Remote Developer Jobs. Remote jobs become very crucial especially in such time so I hope it helps. I have used some of them and they have really great and legit jobs. &lt;/p&gt;

&lt;p&gt;Let's get started ! 😀&lt;/p&gt;

&lt;p&gt;Wait if you are a video person I have made this video for you too !&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/uTmWNumMSnM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-angellist"&gt;
  &lt;/a&gt;
  1.  &lt;a href="https://angel.co/"&gt;AngelList&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Founded by Naval Ravikant, Angelist is mainly focused on Startups.  &lt;/p&gt;

&lt;p&gt;If you are looking to work at a startup this is for you. I have used this myself and its inbuild chat is great for conversations with the people hiring you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0DhiJ0R9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499294886/adiT36FPt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0DhiJ0R9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499294886/adiT36FPt.jpeg" alt="angellist-1240x720.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-stackoverflow-jobs"&gt;
  &lt;/a&gt;
  2.  &lt;a href="https://stackoverflow.com/jobs"&gt;StackOverflow Jobs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;We all use Stackoverflow for finding solutions to our errors and more.&lt;/p&gt;

&lt;p&gt;But did you know that it has a Jobs feature too ? 😀 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E83e22Kw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499403032/JRJVmAWjP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E83e22Kw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499403032/JRJVmAWjP.png" alt="sta.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-remoteok"&gt;
  &lt;/a&gt;
  3.  &lt;a href="https://remoteok.io/"&gt;RemoteOk&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;RemoteOk is totally focused on quality remote work and has great job postings. 💯  &lt;/p&gt;

&lt;p&gt;Currently it has a Coinbase Backend Engineer posting too !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T-O35SAV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499518221/Ux7AzmGGV.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T-O35SAV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499518221/Ux7AzmGGV.gif" alt="tweet2331.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-remoteleads"&gt;
  &lt;/a&gt;
  4.  &lt;a href="https://remoteleads.io/"&gt;RemoteLeads&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;RemoteLeads is very unique as compared to others. 🚀&lt;/p&gt;

&lt;p&gt;It does not show posting on its site instead :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It takes your email and your skills.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And sends you personalized emails after finding the appropriate jobs for you.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ddvk8ONT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499548570/LGunZzsQk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ddvk8ONT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499548570/LGunZzsQk.png" alt="rel.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-remotive"&gt;
  &lt;/a&gt;
  5.  &lt;a href="https://remotive.io/"&gt;Remotive&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I found Remotive recently and it is updated very frequently with new Job Postings  📮.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_MtaJp4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499649816/RNkLCfJI9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_MtaJp4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499649816/RNkLCfJI9.png" alt="remotive.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-justremote"&gt;
  &lt;/a&gt;
  6.  &lt;a href="https://justremote.co/"&gt;JustRemote&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;JustRemote has not just a developer but a variety of great jobs based on HR, Recruiting, SEO, Content Writing ✍ , and many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lzRRVnhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499678143/jCBleeO7q.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lzRRVnhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499678143/jCBleeO7q.jpeg" alt="JustRemote_homepage.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#if-you-are-looking-for-variety-of-remote-jobs-you-can-also-these-two-sites-"&gt;
  &lt;/a&gt;
  If you are looking for variety of Remote jobs you can also these two sites :
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#7-remoters"&gt;
  &lt;/a&gt;
  7.  &lt;a href="https://remoters.net/"&gt;Remoters&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbZQg5xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499796675/3ieil6SP5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbZQg5xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499796675/3ieil6SP5.jpeg" alt="remoters-head.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-remote"&gt;
  &lt;/a&gt;
  8.  &lt;a href="https://remote.co/"&gt;Remote&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2V61m2LT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499813242/veeu7fuwU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2V61m2LT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499813242/veeu7fuwU.png" alt="remote-co-400x202.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-linkedin-jobs"&gt;
  &lt;/a&gt;
  9. LinkedIn Jobs
&lt;/h3&gt;

&lt;p&gt;Last but not least LinkedIn Jobs. While using it as Social Media we often forget that it has great Job Listings. 🤦‍♂️😄&lt;/p&gt;

&lt;p&gt;Recently I found Postings from Apple, Flipkart, Hackerrank and many more great companies. &lt;/p&gt;

&lt;p&gt;You can toggle Remote options too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nXPaIlYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499938369/2Shtrd7cPT.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nXPaIlYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621499938369/2Shtrd7cPT.jpeg" alt="linkedinforjobsearch.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-twitter"&gt;
  &lt;/a&gt;
  10. Twitter
&lt;/h3&gt;

&lt;p&gt;I know this might seem weird but the tech community on Twitter is really great. And I can't recommend enough to engage with the community there as sometimes many people also casually hire through Twitter posts. &lt;/p&gt;

&lt;p&gt;I have got an internship opportunity through Twitter too! 🤷‍♂️😀&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#i-just-wanted-to-share-these-as-i-think-if-one-has-skills-getting-a-remote-job-in-these-times-can-help-a-lot"&gt;
  &lt;/a&gt;
  I just wanted to share these as I think if one has skills, getting a remote job in these times can help a lot.📌
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#do-share-so-that-many-people-can-be-aware-of-these-opportunities-and-let-me-know-your-thoughts-%E2%9D%A3"&gt;
  &lt;/a&gt;
  Do share so that many people can be aware of these opportunities and let me know your thoughts. ❣
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#i-also-create-videos-on-youtube-at-future-driven-and-also-active-on-twitter-lets-connect-"&gt;
  &lt;/a&gt;
  I also create videos on Youtube at - &lt;a href="https://www.youtube.com/channel/UCx-HdHfKu1rXgNIfNaKMsAA/videos"&gt;Future Driven&lt;/a&gt; and also active on &lt;a href="https://twitter.com/saumya4real"&gt;Twitter&lt;/a&gt; Let's Connect !
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#stay-safe-amp-have-a-great-day-"&gt;
  &lt;/a&gt;
  Stay Safe &amp;amp; Have a great day ! 👋
&lt;/h4&gt;

</description>
      <category>programming</category>
      <category>jobs</category>
      <category>remotejobs</category>
      <category>saumyaranjannayak</category>
    </item>
    <item>
      <title>One Simple Trick to Reduce Your Memory Usage in Python</title>
      <author>Connor</author>
      <pubDate>Thu, 20 May 2021 08:18:07 +0000</pubDate>
      <link>https://dev.to/connormcshane/one-simple-way-to-reduce-your-memory-usage-in-python-cdp</link>
      <guid>https://dev.to/connormcshane/one-simple-way-to-reduce-your-memory-usage-in-python-cdp</guid>
      <description>&lt;h1&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#Intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#List%20Comprehension"&gt;List Comprehension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Generator%20Comprehension"&gt;Generator Comprehension&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;Python is ultimate "getting things done" language, where you can soo easily write code and not worry too much about performance and memory. However once your program becomes large, large memory usage can significantly slow down your program. One easy way to reduce memory usage and speed up your programs is to &lt;strong&gt;switch your list comprehensions into generator comprehensions&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Lets explore this with a simple example program to sum up a range of numbers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-comprehension"&gt;
  &lt;/a&gt;
  List Comprehension
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;my_large_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_large_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"My list is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_large_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; bytes"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;4999950000
My list is 824456 bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#generator-comprehension"&gt;
  &lt;/a&gt;
  Generator Comprehension
&lt;/h3&gt;

&lt;p&gt;My code is often filled with a lot of list comprehensions, where instead we could use generators instead. Generators operate like lists, except they are evaluated "lazily", so the values are grabbed when needed.&lt;/p&gt;

&lt;p&gt;All we need to do is use curly braces on all of our list comprehensions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;my_large_generator_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_large_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"My generator is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_large_generator_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; bytes"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;4999950000
My list is 112 bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see both give the same result, however the generator only uses a fraction of the memory (112 bytes instead of 824456). When you have hundreds of lists floating in your code, switching them to generators is an easy way to save on memory and increase your program's speed :).&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Solution: Binary Tree Level Order Traversal</title>
      <author>seanpgallivan</author>
      <pubDate>Thu, 20 May 2021 07:58:22 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-binary-tree-level-order-traversal-36cg</link>
      <guid>https://dev.to/seanpgallivan/solution-binary-tree-level-order-traversal-36cg</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/binary-tree-level-order-traversal/discuss/1219328"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-102-medium-binary-tree-level-order-traversal"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/binary-tree-level-order-traversal/"&gt;Leetcode Problem #102 (&lt;em&gt;Medium&lt;/em&gt;): Binary Tree Level Order Traversal&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given the &lt;code&gt;root&lt;/code&gt; of a binary tree, return &lt;em&gt;the level order traversal of its nodes' values&lt;/em&gt;. (i.e., from left to right, level by level).&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;root = [3,9,20,null,null,15,7]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[[3],[9,20],[15,7]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7SHVWgJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;root = [1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[[1]]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;root = []&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The number of nodes in the tree is in the range &lt;code&gt;[0, 2000]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1000 &amp;lt;= Node.val &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;A binary tree level order traversal generally recommends a &lt;strong&gt;breadth first search&lt;/strong&gt; (&lt;strong&gt;BFS&lt;/strong&gt;) approach with the use of a &lt;strong&gt;queue&lt;/strong&gt; data structure. When we process a node (&lt;strong&gt;curr&lt;/strong&gt;), we'll push the node's children onto the end of the &lt;strong&gt;queue&lt;/strong&gt; in the order in which we want to traverse (in this case, left to right). In this way, we'll have finished putting the next row in the &lt;strong&gt;queue&lt;/strong&gt; at the same time we finish iterating through this row.&lt;/p&gt;

&lt;p&gt;To help us keep track of the rows, we just nest the main loop inside another loop. At the beginning of the outer loop, we capture the &lt;strong&gt;queue&lt;/strong&gt; length, which will tell us how long the row is. Then we can iterate through that many nodes, popping them off the &lt;strong&gt;queue&lt;/strong&gt;'s front one at a time, then process any end-of-row instructions. In the case of this problem, that will mean pushing the current row array (&lt;strong&gt;row&lt;/strong&gt;) onto our answer array (&lt;strong&gt;ans&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;We'll continue this process until the &lt;strong&gt;queue&lt;/strong&gt; is empty, at which point we will have reached the end of the binary tree, and can &lt;strong&gt;return ans&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the number of nodes in the binary tree&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for our answer array&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;levelOrder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;qlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;qlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;levelOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]]:&lt;/span&gt;
        &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;deque&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;[]),&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;qlen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qlen&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;popleft&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;levelOrder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;TreeNode&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;Deque&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayDeque&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isEmpty&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;qlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;qlen&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nc"&gt;TreeNode&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;poll&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;val&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;left&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;right&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;right&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;levelOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;deque&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;qlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;qlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;front&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop_front&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>AWS Services must for Front-end developers - Part 1</title>
      <author>Neha Sharma </author>
      <pubDate>Thu, 20 May 2021 07:52:07 +0000</pubDate>
      <link>https://dev.to/hellonehha/aws-services-must-for-front-end-developers-part-1-5g0d</link>
      <guid>https://dev.to/hellonehha/aws-services-must-for-front-end-developers-part-1-5g0d</guid>
      <description>&lt;p&gt;If you are a front-end developer and confuse about which service from AWS to learn and how it will help in your front-end career then this blog is for you.&lt;/p&gt;

&lt;p&gt;Before you jump into the services a few important things you need to do or should aware of how to login to AWS, Billing, console, and SDKs. If you are aware of these then please jump directly to the content.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1-aws-account"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://signin.aws.amazon.com/signin"&gt;AWS Account&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;Creating an AWS account is free of cost but you need a credit card to link to your account. There are many free-service AWS provides as well as Free-tier is also provided.&lt;/p&gt;

&lt;p&gt;1st step to start with AWS is to create your account. All it requires your email ID. &lt;/p&gt;

&lt;p&gt;When you have an account you can access the AWS services by using the console (browser-based interactive dashboard), APIs, and SDKs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5xXhZUuv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33oc3whf1bzx2barw3ly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5xXhZUuv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33oc3whf1bzx2barw3ly.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#2-billing"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://console.aws.amazon.com/billing/home"&gt;Billing&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;Once you have created your AWS account and started using the AWS service the next important step is to check the billing service. &lt;/p&gt;

&lt;p&gt;It is very common as a beginner you will end up billed for service you forgot to disable. Hence, the first task is to set the billing alert, and then the next step is to check billing to get insights into what is happening and where. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NfjSQZQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnwnqvv1xdu0di7a0i8c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NfjSQZQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnwnqvv1xdu0di7a0i8c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#3-aws-console"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://console.aws.amazon.com/"&gt;AWS Console&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;Once you logged into your account you will access the services from the AWS console. This is the browser-based console to easily access the AWS service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EK86T1EU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8cc9aw7yi3hffoq6hef.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EK86T1EU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8cc9aw7yi3hffoq6hef.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#4-aws-sdk"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://aws.amazon.com/tools/"&gt;AWS SDK&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;As a developer, it would be common to use the AWS SDKs in your UI code to connect UI to the AWS. &lt;/p&gt;

&lt;p&gt;Eg: to store user uploaded image to the S3. In such cases, we will use AWS SDKs.&lt;/p&gt;




&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;For this blog I will access the services from the AWS console.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#1-s3"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://s3.console.aws.amazon.com/s3"&gt;S3&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;S3 stands for &lt;em&gt;Simple Storage service&lt;/em&gt;. This is an ideal service to host static content (eg, images), website, snapshot (backup). It is serverless storage.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Static vs Dynamic website?&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;The difference between the static and dynamic website is in dynamic websites the code executes at the server not just at the client side. &lt;/p&gt;

&lt;p&gt;Eg: Websites made on ReactJS mostly are static websites. Whereas if we create applications by using NextJS it would be dynamic. Reason: SPA all the execution happened at the client (browser) whereas NextJS will require the server to execute the code and send the response to the client (browser).&lt;/p&gt;

&lt;p&gt;For the front-end developer, this is the first AWS service you can start easily. All you need to do is create an AWS Account to access the S3 service. &lt;/p&gt;

&lt;p&gt;You can use the S3 from AWS Console, APIs, SDKs.To host any application you need to:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/KjKoHDppKU8"&gt;S3 Demo - Create your first Bucket&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h4&gt;

&lt;p&gt;Buckets are paid service. It charges you for both storage and retrieval. However, you can get some storage FREE under the free tier. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#best-practices"&gt;
  &lt;/a&gt;
  Best Practices
&lt;/h4&gt;

&lt;p&gt;1) The Bucket name should be unique&lt;/p&gt;

&lt;p&gt;2) Control the access of the bucket by the Policy&lt;/p&gt;

&lt;p&gt;3) Keep the versioning disable unless it is required.&lt;/p&gt;

&lt;p&gt;4) Versioning is paid service&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-route53"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://console.aws.amazon.com/route53/"&gt;Route53&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The next service is Route53. Once you have uploaded your website/app on AWS (S3 or EC2) we need to map our domain to our bucket or EC2.&lt;/p&gt;

&lt;p&gt;AWS provides Route53 service which is a Domain name Service to map our domain to the AWS EC2 or S3 Bucket. This will helps in accessing our web content through the domain. &lt;/p&gt;

&lt;p&gt;I have my domain &lt;a href="https://a11ytips.dev"&gt;a11ytips.dev&lt;/a&gt; from Google and mapped it to AWS through Route53.&lt;/p&gt;

&lt;p&gt;All we need to map our Namespace from the domain vendor to Route53.&lt;/p&gt;

&lt;p&gt;PS: After uploading your website on S3 you need to set the CloudFront, ACM, and Route53. We will learn about CloudFront and ACM in the next blog&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost:
&lt;/h4&gt;

&lt;p&gt;This is a paid service but at a very nominal price. For now, I am paying USD 2.5/month (INR 183/month) for using Route 53&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-ec2"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://console.aws.amazon.com/ec2"&gt;EC2&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;For hosting static web apps or storing static content S3 is the service to use. What about dynamic websites? Eg: Where your NextJS apps will go? or NodeJS based applications? For such use cases, we have EC2. &lt;/p&gt;

&lt;p&gt;EC2 is very useful when you need servers of different OS, applications that require high availability, or running all the time.&lt;/p&gt;

&lt;p&gt;PS: EC2 is an easy way to get your billing clock running. So, if you are creating EC2 do delete it. Otherwise, you will end up paying for it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost:
&lt;/h4&gt;

&lt;p&gt;EC2 you need to pay for the idle time too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-lambda"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://console.aws.amazon.com/lambda/"&gt;Lambda&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Lambda is I would say is the best friend of every front developer. Lambda is a service where you can put your code (which needs to do some task on an event eg: sending notifications on the availability of a product to the consumers, upload pictures in S3 on submit of a form, or many such use-cases).&lt;/p&gt;

&lt;p&gt;Lambda is cost-effective, easy-to-use service for front-end developers. It is a computed service that is serverless and you will pay only when the lambda function (code) will execute. It could be in milliseconds too. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/PxlDH1zc3n4"&gt;Lambda Function Demo - Video Demo&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h4&gt;

&lt;p&gt;The cost of Lambda is lower as compare to EC2. We pay only for the time the lambda function is executing.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#bonus-lambda-vs-ec2"&gt;
  &lt;/a&gt;
  Bonus: Lambda VS EC2
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Area&lt;/th&gt;
&lt;th&gt;Lambda&lt;/th&gt;
&lt;th&gt;EC2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Server&lt;/td&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;Serverful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Time&lt;/td&gt;
&lt;td&gt;Ideal for tasks requires less time&lt;/td&gt;
&lt;td&gt;Tasks requires a lot of time &amp;gt; 15mins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Idle time&lt;/td&gt;
&lt;td&gt;Not charged for idle time&lt;/td&gt;
&lt;td&gt;Charged for the idle time too&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infra&lt;/td&gt;
&lt;td&gt;No need to think about infra&lt;/td&gt;
&lt;td&gt;Infra setup is required&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cost&lt;/td&gt;
&lt;td&gt;Less expensive compare to EC2&lt;/td&gt;
&lt;td&gt;We get charge for idle time too&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trigger&lt;/td&gt;
&lt;td&gt;Event-driven&lt;/td&gt;
&lt;td&gt;It will keep running&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HTTP response&lt;/td&gt;
&lt;td&gt;In Some cases, additional cold start time to response back to HTTP request&lt;/td&gt;
&lt;td&gt;No cold start is required&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Languages Support&lt;/td&gt;
&lt;td&gt;Only 8 languages support&lt;/td&gt;
&lt;td&gt;open for any languages&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;In the next blog, we will learn more services for the front developers. &lt;/p&gt;

&lt;p&gt;Happy Learning!! &lt;/p&gt;

&lt;p&gt;Follow me at &lt;a href="https://twitter.com/hellonehha"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/nehha/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloudskills</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Scared about moving from Redux to Recoil? Use ReduxBridge!</title>
      <author>Salvatore Ravidà</author>
      <pubDate>Thu, 20 May 2021 07:46:22 +0000</pubDate>
      <link>https://dev.to/salvoravida/scared-about-moving-from-redux-to-recoil-use-reduxbridge-1ofj</link>
      <guid>https://dev.to/salvoravida/scared-about-moving-from-redux-to-recoil-use-reduxbridge-1ofj</guid>
      <description>&lt;p&gt;Scared about moving from Redux to Recoil? With ReduxBridge, you can easily test Recoil in a small feature while continue to use Redux. It allows you to access Redux states from Recoil, thinks for example, if the user state is on redux, and you need to read it from a new Widget that uses only Recoil! &lt;a href="https://github.com/salvoravida/recoil-toolkit"&gt;https://github.com/salvoravida/recoil-toolkit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gzFkEpP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkycp97qti65v6x2af5f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gzFkEpP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkycp97qti65v6x2af5f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>recoil</category>
      <category>redux</category>
      <category>react</category>
      <category>statemanager</category>
    </item>
    <item>
      <title>Create a user in AWS IAM</title>
      <author>Ajit Singh</author>
      <pubDate>Thu, 20 May 2021 06:29:24 +0000</pubDate>
      <link>https://dev.to/ajitsinghkaler/create-a-user-in-aws-iam-al3</link>
      <guid>https://dev.to/ajitsinghkaler/create-a-user-in-aws-iam-al3</guid>
      <description>&lt;p&gt;First we studied the &lt;a href="https://dev.to/ajitsinghkaler/aws-identity-and-access-management-4jc2"&gt;basics of IAM&lt;/a&gt; now we do some hands on exercises. If you follow along most of the things we do while learning AWS will be completed in the AWS free tier. So you don't need to worry but remember always follow the clean up paragraph at the end of each hands on article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#iam-users"&gt;
  &lt;/a&gt;
  IAM Users
&lt;/h2&gt;

&lt;p&gt;Lets first create an admin user so that we don;t have to use our root user which can lead to a devastation.&lt;/p&gt;

&lt;p&gt;To create an admin user follow the steps below I've also provided images to follow along.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login as you root user in your aws account. On this window select root user and login using your root id and password
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPCGZ--b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nd4i2sc1copaa3zk3bie.png" alt="Amazon Root Login Window"&gt;
If you land on an IAM user window somehow select the option below&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aS7tPdLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/935syfvnnfr2m312axjy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aS7tPdLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/935syfvnnfr2m312axjy.png" alt="IAM user window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Search for IAM in the top search bar and select the option highlighted below&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mvv9SOHe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vig6r5dotmlg85i8qcq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mvv9SOHe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vig6r5dotmlg85i8qcq.png" alt="AWS home Page"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select users from the sidebar and select add user from the top of the opened window&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g9RGDO0r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mt33vf1rzqwhxtgqcuoa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g9RGDO0r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mt33vf1rzqwhxtgqcuoa.png" alt="AWS create user step 1"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set user details as required. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Username: This is a unique username all across aws&lt;/li&gt;
&lt;li&gt;Access type: Programmatic access using this you get access using Keys which you use while connecting with API, CLI, SDK used mostly be software developers(We will learn about this later in more detail)&lt;/li&gt;
&lt;li&gt;Console Access: This provides access to the AWS management console using a password like the way we login into it &lt;/li&gt;
&lt;li&gt;Console Password: Form there you can use an auto generated AWS password or a custom password based on needs&lt;/li&gt;
&lt;li&gt;Require password reset: This is set if you want your user to reset his password on first login. Click on next after this&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O1vdzq0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hp3xrsmsl1ic7j893fzt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O1vdzq0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hp3xrsmsl1ic7j893fzt.png" alt="Add user details"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now we set the permissions for this user. This has 3 options

&lt;ul&gt;
&lt;li&gt;Add user to group: Here we can add a user to a group. Which we have not learnt so don't worry about this&lt;/li&gt;
&lt;li&gt;Copy permissions from existing user: We don't have any existing user so we can't do anything&lt;/li&gt;
&lt;li&gt;Attach existing policies directly: AWS has a lot of existing policies form which we can select check these policies and use it according to your needs. For this exercise we are creating a shadow root user as learnt in previous &lt;a href="https://dev.to/ajitsinghkaler/aws-identity-and-access-management-4jc2"&gt;article&lt;/a&gt;. You can use filter and filter the admin policy named AdministratorAccess. Select this and move onto the next step.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iU-TeXHN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zm4k1onv6xmvlz75ltf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iU-TeXHN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zm4k1onv6xmvlz75ltf.png" alt="User permissions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now, we set the tags, imagine you are a big corporation and you want to manage your users. To data AWS provides us with tags which we can join to a user to identify it. Like Job Postion: Developer. Here you can add as many tags as you need to identify it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0e63rAwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81btlo7bs68aloka5s4j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0e63rAwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81btlo7bs68aloka5s4j.png" alt="Add taga to IAM"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We review and check if everything is set properly. If not you can go back and change that. Now click on create user.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O0ZG5sTK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nwujx98waft4ajcgvzt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O0ZG5sTK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nwujx98waft4ajcgvzt.png" alt="Review Changes"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New User is created with admin access. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UfvZb_gh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4borblifjp2qabfoxaq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UfvZb_gh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4borblifjp2qabfoxaq.png" alt="New user created"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-You can see it from the users tab in IAM.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mzy0RdKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jesl0af9zt4qna769z15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mzy0RdKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jesl0af9zt4qna769z15.png" alt="Dash Board User"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is it for today next we will create user groups.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>cloudskills</category>
      <category>cloudnewbie</category>
    </item>
    <item>
      <title>10+ Useful Tools🛠 For Web Developers👨‍💻In 2021</title>
      <author>themeselection</author>
      <pubDate>Thu, 20 May 2021 06:27:30 +0000</pubDate>
      <link>https://dev.to/theme_selection/10-useful-tools-for-web-developers-in-2021-42d1</link>
      <guid>https://dev.to/theme_selection/10-useful-tools-for-web-developers-in-2021-42d1</guid>
      <description>&lt;p&gt;Are you looking for the best tools for web development? Well, In this article, we are going to share with you some of the useful tools for web developers in 2021. These tools will make your work easier. &lt;/p&gt;

&lt;p&gt;Using web development tools always makes your work easier and more smooth. Web development is a field where you often need them and that's why we made this list so that you can bookmark this list and check any tool you are looking for.&lt;/p&gt;

&lt;p&gt;Well, there are lots of tools available, so we do not claim this list a complete one. You can share your favorite tools out from the list in the comments section below. &lt;/p&gt;

&lt;p&gt;You can also check the &lt;a href="https://dev.to/theme_selection/best-design-resources-websites-every-developer-should-bookmark-1p5d"&gt;Best design 🎨 resources websites every developer 💻 should bookmark🔖&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, without extending, let’s move on to the tools.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Szf3xbLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13r0i2h8yx4gpt89lxor.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Szf3xbLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13r0i2h8yx4gpt89lxor.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-devhintsio"&gt;
  &lt;/a&gt;
  1. &lt;a href="//Devhints.io"&gt;Devhints.io&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mA1QmNd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pram3cauq6szyb51av76.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mA1QmNd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pram3cauq6szyb51av76.png" alt="Devhints"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you will find sets of ready-made snippets with popular code snippets, configurations, and commands. Deviants can come in handy if you need to refresh your knowledge quickly or if you want to avoid googling and searching threads on Stack Overflow. &lt;/p&gt;

&lt;p&gt;If you don’t find the snippet you need, you can request the author to add it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-bootstrap-cheatsheet"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://bootstrap-cheatsheet.themeselection.com/"&gt;Bootstrap cheatsheet&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MCQccbjP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prro79jbeaq8ie9jp8f6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MCQccbjP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prro79jbeaq8ie9jp8f6.jpg" alt="Bootstrap cheatsheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bootstrap cheat sheet is an interactive list of Bootstrap 5 classes, variables, and mixins. It helps you easily find the differences between Bootstrap 4 and Bootstrap 5.&lt;/p&gt;

&lt;p&gt;Besides, it is aimed towards a large community of bootstrap users who find it difficult to search for bootstrap classes, variables, and mixins.&lt;/p&gt;

&lt;p&gt;Key Features are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Search for your  &lt;a href="https://bootstrap-cheatsheet.themeselection.com/"&gt;class&lt;/a&gt;,  &lt;a href="https://bootstrap-cheatsheet.themeselection.com/variables.html"&gt;variable&lt;/a&gt;, or  &lt;a href="https://bootstrap-cheatsheet.themeselection.com/mixins.html"&gt;mixin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Highlight Difference Between Bootstrap 4 &amp;amp; 5 Classes&lt;/li&gt;
&lt;li&gt;  Live preview of HTML &amp;amp; code snippet&lt;/li&gt;
&lt;li&gt;  Update code snippet on the go&lt;/li&gt;
&lt;li&gt;  Easily copy the code snippet and use it&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-carbon"&gt;
  &lt;/a&gt;
  3.  &lt;a href="http://carbon.now.sh/"&gt;Carbon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FxPsjBav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u537aekya3azo458pfjm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FxPsjBav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u537aekya3azo458pfjm.png" alt="Carbon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you need to create a piece of code in the form of an image, Carbon is the perfect tool for this purpose. The application has support for many languages ​​and a ready set of different themes, thanks to which we can modify our snippet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-google-lighthouse"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://developers.google.com/web/tools/lighthouse"&gt;Google Lighthouse&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pa6qo1Db--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3d64yzo3p7bwtqmdyjnr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pa6qo1Db--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3d64yzo3p7bwtqmdyjnr.png" alt="Google Lighthouse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is an open-source, automated tool for measuring the quality of web pages. It audits the performance, accessibility, and search engine optimization of web pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-meta-tags"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://metatags.io/"&gt;Meta Tags&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UtskDfna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4iajew4sylpcebtsow83.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UtskDfna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4iajew4sylpcebtsow83.png" alt="Meta tags"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://metatags.io/"&gt;Meta Tags&lt;/a&gt;  is a simple online tool that you can use to quickly check the meta tags for your website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-frontendchecklistio"&gt;
  &lt;/a&gt;
  6. &lt;a href="http://frontendchecklist.io/"&gt;frontendchecklist.io&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pEPoyfas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1b9yw7a423qq01jihag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pEPoyfas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1b9yw7a423qq01jihag.png" alt="frontendchecklist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The process of creating a website can often be long, tedious, and very complicated. The consequence of this is that we can forget some things. The Front-End Checklist is here to help.&lt;/p&gt;

&lt;p&gt;This list includes 88 points to keep in mind when creating a website — quite a lot, right? In addition, each point has a priority marked. An additional advantage is the ability to create your own checklists and generate reports.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-gitignoreio"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.gitignore.io/"&gt;Gitignore.io&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W35Wum4m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ryw9t5z16uumydkqgpr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W35Wum4m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ryw9t5z16uumydkqgpr.png" alt="Gitignore"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know that you don’t need higher math to create a .gitignore file, but a ready-made tool was created for that. The only thing you provide is information such as the operating system or development environment, and after a while, we can enjoy the finished .gitignore file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-regex101"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://regex101.com/"&gt;Regex101&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8waNTOnr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4u9gvk5855ipq1qebdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8waNTOnr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4u9gvk5855ipq1qebdl.png" alt="Regex101"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application offers both instruction for creating regular expressions and a ready environment for writing and testing expressions. Additionally, after creating an expression, we get a detailed explanation of it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9ngrok"&gt;
  &lt;/a&gt;
  9.&lt;a href="https://ngrok.com/"&gt;Ngrok&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8aa2IhON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9df46ux1ysb4c8lw0s03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8aa2IhON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9df46ux1ysb4c8lw0s03.png" alt="Ngrok"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you create a website on a local server and show off your work results to someone, you can use Ngrok. This tool allows you to “bring to the world” your local application.&lt;/p&gt;

&lt;p&gt;Installation and configuration take a while literally and is relatively simple. However, the paid variants offer much more possibilities, such as creating a whitelist with IP addresses or creating subdomains.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-nibbler"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://nibbler.silktide.com/"&gt;Nibbler&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qrol-5Lx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gytyw19wup4rdgcyjkfm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qrol-5Lx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gytyw19wup4rdgcyjkfm.png" alt="Nibbler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nibbler.silktide.com/"&gt;Nibbler&lt;/a&gt;  is a free online tool that you can use to scan your website. It will give you a report scoring the website for key areas, including accessibility, SEO, social media, and technology.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-what-the-web-can-do-today"&gt;
  &lt;/a&gt;
  11.  &lt;a href="https://whatwebcando.today/"&gt;What the web can do today&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bxXWIOQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xaokzl6az2g1p1mx3p1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bxXWIOQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xaokzl6az2g1p1mx3p1l.png" alt="What the web can do today"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This tool allows you to check what APIs are available in the browser you are currently using. In addition, after selecting a given API, you will receive a set of instructions on how to use them. In addition, you also have access to data and charts showing how the browser's support for API data looks like.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-website-vulnerability-scanner"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://pentest-tools.com/website-vulnerability-scanning/website-scanner"&gt;Website Vulnerability Scanner&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J-amQsR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfb61lomos63nkmqttwo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J-amQsR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfb61lomos63nkmqttwo.png" alt="Website Vulnerability Scanner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Website Vulnerability Scanner is a free online tool developed by Pentest-Tools. You just have to plug in your URL and it will generate a detailed Security report.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-cssreferenceio"&gt;
  &lt;/a&gt;
  13. &lt;a href="http://cssreference.io/"&gt;CSSreference.io&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8-Pho2Sj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymfgbsf89bwwp8morwva.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8-Pho2Sj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymfgbsf89bwwp8morwva.png" alt="CSSreference"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Accessible, short, and neat documentation for CSS. Personally, I prefer to use MDN, but someone will surely like it! For each CSS property, you get an image or an animation with an example.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-tinypng"&gt;
  &lt;/a&gt;
  14.  &lt;a href="https://tinypng.com/"&gt;Tinypng&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ArO4JuyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlfli28ahgbn4674tou8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ArO4JuyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlfli28ahgbn4674tou8.png" alt="Tiny PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TinyPNG uses smart lossy compression techniques to &lt;strong&gt;reduce the file size&lt;/strong&gt; of your PNG files. By selectively decreasing the number of colors in the image, fewer bytes are required to store the data. The effect is nearly invisible but it makes a very large difference in file size!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-clip-path-maker"&gt;
  &lt;/a&gt;
  15. &lt;a href="http://bennettfeely.com/clippy"&gt;Clip path maker&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e-Mxy72N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxqhktgpwyyaflkyxgkn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e-Mxy72N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxqhktgpwyyaflkyxgkn.png" alt="Clip path maker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This simple tool allows us to automatically generate CSS code using clip-path, i.e., a tool for creating custom shapes using CSS. Of course, we already get ready-made shapes, but we also get the opportunity to modify them and create our own. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;So, this was the collection of Useful tools for web developers in 2021. Here we have collected 10+ Useful Tools that will make your work smooth and easy.&lt;/p&gt;

&lt;p&gt;List down the tools you need and pick according to requirements from the list. We hope this collection helps you find the suitable one for your next project.&lt;/p&gt;

&lt;p&gt;Do tell us which one you are using from the list or out of the list in the comment section below. Also, don't forget to share this list with your colleagues as well, because sharing is caring.🤩&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#about-us"&gt;
  &lt;/a&gt;
  About Us:
&lt;/h3&gt;

&lt;p&gt;We, at  &lt;a href="https://themeselection.com/"&gt;ThemeSelection&lt;/a&gt;, provide selected high quality, modern design, professional and easy-to-use premium and  &lt;a href="https://themeselection.com/"&gt;free bootstrap admin template&lt;/a&gt;, and UI Kits. &lt;/p&gt;

&lt;p&gt;You can check some of the admin templates which have used the mentioned sources.  &lt;strong&gt;&lt;a href="https://themeselection.com/products/chameleon-admin-free-bootstrap-dashboard-template/"&gt;Chameleon Free Bootstrap Admin Template&lt;/a&gt;&lt;/strong&gt;  and  &lt;strong&gt;&lt;a href="https://themeselection.com/go/download-vuexy-vuejs/"&gt;Vuexy Vuejs, React, HTML &amp;amp; Laravel Admin Dashboard Template&lt;/a&gt;&lt;/strong&gt;  are the best example of how you can use these resources for making your project awesome.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>New Tailwind CSS blocks on Wickedblocks ( is 100% free ) a total of 72
</title>
      <author>michael-andreuzza</author>
      <pubDate>Thu, 20 May 2021 06:25:05 +0000</pubDate>
      <link>https://dev.to/michaelandreuzza/new-tailwind-css-blocks-on-wickedblocks-is-100-free-a-total-of-72-348b</link>
      <guid>https://dev.to/michaelandreuzza/new-tailwind-css-blocks-on-wickedblocks-is-100-free-a-total-of-72-348b</guid>
      <description>&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;I have been updating &lt;a href="http://www.wickedblocks.dev"&gt;www.wickedblocks.dev&lt;/a&gt; because, well it was time&lt;/p&gt;

&lt;p&gt;So, what's new?&lt;/p&gt;

&lt;p&gt;I removed classes that I was using for myself ( how dumb of to use them for the blocks, right? )&lt;/p&gt;

&lt;p&gt;I redesigned these ones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;navigation&lt;/li&gt;
&lt;li&gt;bars -&lt;/li&gt;
&lt;li&gt;footers&lt;/li&gt;
&lt;li&gt;auth&lt;/li&gt;
&lt;li&gt;forms&lt;/li&gt;
&lt;li&gt;pricing&lt;/li&gt;
&lt;li&gt;footers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;then I have added new components, sections and blocks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sidebars&lt;/li&gt;
&lt;li&gt;cards&lt;/li&gt;
&lt;li&gt;alerts&lt;/li&gt;
&lt;li&gt;stats&lt;/li&gt;
&lt;li&gt;content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will be adding more as mentioned.&lt;/p&gt;

&lt;p&gt;Have a great day everyone and if you guys have any question just ask me here or twitter @ Mike_Andreuzza&lt;/p&gt;

&lt;p&gt;/mike&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>uiweekly</category>
      <category>html</category>
      <category>css</category>
    </item>
  </channel>
</rss>
