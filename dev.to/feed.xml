<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Sass(SCSS) @mixin, @extend</title>
      <author>Dahye Ji</author>
      <pubDate>Fri, 26 Nov 2021 14:59:46 +0000</pubDate>
      <link>https://dev.to/daaahailey/sassscss-mixin-extend-220n</link>
      <guid>https://dev.to/daaahailey/sassscss-mixin-extend-220n</guid>
      <description>&lt;h1&gt;
  &lt;a href="#mixin"&gt;
  &lt;/a&gt;
  @mixin
&lt;/h1&gt;

&lt;p&gt;Mixin allows you to &lt;em&gt;&lt;strong&gt;define style that can be re-used&lt;/strong&gt;&lt;/em&gt; throughout your stylesheet.&lt;br&gt;
(They make it easy to avoid using non-semantic classes like .float-left, and to distribute collections of styles in libraries.)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-use-mixin"&gt;
  &lt;/a&gt;
  How to use @mixin
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;//create&lt;/span&gt;
&lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can make a file and import or can declare mixin in the file you are working. If you'd like to make multiple mixin and use, create _mixins.scss to manage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using @mixin&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// SCSS&lt;/span&gt;

&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;center-xy&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// You can used @mixin center-xy like below, It's done by one line because of @mixin&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;center-xy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.aside&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;center-xy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;**But putting all the code inside one @mixin isn't a good way of using it. You should add related styles in @mixin so that you can make more reusable set.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#arguments"&gt;
  &lt;/a&gt;
  Arguments
&lt;/h1&gt;

&lt;p&gt;@mixin can take arguments after its name. It allows their behavior to be customised when they are called.&lt;br&gt;
&lt;strong&gt;SCSS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;//SCSS&lt;/span&gt;
&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ul&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$repeat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$positionX&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$positionY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url($ul)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$positionX&lt;/span&gt; &lt;span class="nv"&gt;$positionY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="c1"&gt;//background related code.&lt;/span&gt;
&lt;span class="c1"&gt;//You can style element differently depending &lt;/span&gt;
 &lt;span class="nt"&gt;arguments&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;mixin&lt;/span&gt;&lt;span class="nc"&gt;.&lt;/span&gt;

&lt;span class="nc"&gt;.profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"./assets/user.jpg"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box-one&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;url("/images/poster1.svg")&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* CSS */&lt;/span&gt;
&lt;span class="nc"&gt;.profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("./assets/user.jpg")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box-one&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(url("/images/poster1.svg")&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setting-default-value"&gt;
  &lt;/a&gt;
  Setting default value
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// SCSS&lt;/span&gt;
&lt;span class="c1"&gt;// $positionX, $positionY  have default value now. If they don't receive value, it takes default value.&lt;/span&gt;
&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ul&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$repeat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$positionX&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$positionY&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url($ul)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$positionX&lt;/span&gt; &lt;span class="nv"&gt;$positionY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"./assets/user.jpg"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* CSS */&lt;/span&gt;
&lt;span class="nc"&gt;.profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("./assets/user.jpg")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;profile&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nc"&gt;.box-one&lt;/span&gt; &lt;span class="nt"&gt;are&lt;/span&gt; &lt;span class="nt"&gt;not&lt;/span&gt; &lt;span class="nt"&gt;related&lt;/span&gt; &lt;span class="nt"&gt;elements&lt;/span&gt; &lt;span class="nt"&gt;but&lt;/span&gt; &lt;span class="nt"&gt;because&lt;/span&gt; &lt;span class="nt"&gt;they&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="nt"&gt;similar&lt;/span&gt; &lt;span class="nt"&gt;styles&lt;/span&gt; &lt;span class="nt"&gt;related&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;background&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;you&lt;/span&gt; &lt;span class="nt"&gt;can&lt;/span&gt; &lt;span class="nt"&gt;make&lt;/span&gt; &lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;them&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;repeating&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>sass</category>
      <category>scss</category>
      <category>css</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 26th November 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 26 Nov 2021 14:47:36 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-26th-november-2021-4p6e</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-26th-november-2021-4p6e</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-remix-run"&gt;
  &lt;/a&gt;
  1. Remix Run
&lt;/h3&gt;

&lt;p&gt;Build Better Websites. Create modern, resilient user experiences with web fundamentals.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/remix-run"&gt;
        remix-run
      &lt;/a&gt; / &lt;a href="https://github.com/remix-run/remix"&gt;
        remix
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Build Better Websites. Create modern, resilient user experiences with web fundamentals.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Welcome to Remix!&lt;/h1&gt;
&lt;p&gt;Remix is a framework for building better websites using modern web standards and
best practices. We are happy you're here!&lt;/p&gt;
&lt;p&gt;This repository contains the Remix source code. This repo is a work in progress,
so we appreciate your patience as we figure things out.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;For documentation about Remix, please visit &lt;a href="https://remix.run/docs" rel="nofollow"&gt;our website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, please &lt;a href="https://rmx.as/discord" rel="nofollow"&gt;join our community on Discord&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The documentation is automatically generated on each release from the files in
&lt;a href="https://github.com/remix-run/remixdocs"&gt;the &lt;code&gt;docs&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;If you're interested in contributing code and/or documentation, please &lt;a href="https://github.com/remix-run/remixCONTRIBUTING.md"&gt;read
this first&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Code of Conduct&lt;/h2&gt;
&lt;p&gt;Please see our &lt;a href="https://github.com/remix-run/remixCODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt; for any questions about the
kind of community we are trying to build here and what to do if you need help
with someone who is not acting professionally.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/remix-run/remix"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#2-helpfuldecorators"&gt;
  &lt;/a&gt;
  2. helpful-decorators
&lt;/h3&gt;

&lt;p&gt;Helpful decorators for typescript projects &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/NetanelBasal"&gt;
        NetanelBasal
      &lt;/a&gt; / &lt;a href="https://github.com/NetanelBasal/helpful-decorators"&gt;
        helpful-decorators
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Helpful decorators for typescript projects
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/NetanelBasal/helpful-decorators"&gt;&lt;img src="https://camo.githubusercontent.com/f0f14918e04ce6b6a427e379bdccf74489eb089943c31c03f13b8fb4dbecb195/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f68656c7066756c2d6465636f7261746f72732e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/NetanelBasal/helpful-decorators" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6da5cbe9e26f2ac075133d643bc9b9a39472d0c360474ab5857a437889c507c0/68747470733a2f2f7472617669732d63692e6f72672f4e6574616e656c426173616c2f68656c7066756c2d6465636f7261746f72732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="http://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen friendly"&gt;&lt;/a&gt;
&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://camo.githubusercontent.com/faee7ab841e1beef8d5564944f6856d9af1d88cd8a520929bc8a10329852f171/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e7376673f7374796c653d666c61742d737175617265" alt="semantic-release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Helpful Decorators For Typescript Projects&lt;/h1&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;npm&lt;/span&gt; &lt;span class="pl-s1"&gt;install&lt;/span&gt; &lt;span class="pl-s1"&gt;helpful&lt;/span&gt;&lt;span class="pl-c1"&gt;-&lt;/span&gt;&lt;span class="pl-s1"&gt;decorators&lt;/span&gt;
&lt;span class="pl-s1"&gt;yarn&lt;/span&gt; &lt;span class="pl-s1"&gt;add&lt;/span&gt; &lt;span class="pl-s1"&gt;helpful&lt;/span&gt;&lt;span class="pl-c1"&gt;-&lt;/span&gt;&lt;span class="pl-s1"&gt;decorators&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;delay&lt;/code&gt; - Add &lt;code&gt;setTimeout&lt;/code&gt; functionality to the method&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;delay&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'helpful-decorators'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Test&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
 @&lt;span class="pl-en"&gt;delay&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
 &lt;span class="pl-en"&gt;method&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
   &lt;span class="pl-c"&gt;// ...&lt;/span&gt;
 &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;debounce&lt;/code&gt; - Add &lt;code&gt;debounce&lt;/code&gt; functionality to the method (&lt;a href="https://lodash.com/docs/4.17.4#debounce" rel="nofollow"&gt;options&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;debounce&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'helpful-decorators'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Test&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
 @&lt;span class="pl-en"&gt;debounce&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;options&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
 &lt;span class="pl-en"&gt;method&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
   &lt;span class="pl-c"&gt;// ...&lt;/span&gt;
 &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;throttle&lt;/code&gt; - Add &lt;code&gt;throttle&lt;/code&gt; functionality to the method (&lt;a href="https://lodash.com/docs/4.17.4#throttle" rel="nofollow"&gt;options&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;throttle&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'helpful-decorators'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Test&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
 @&lt;span class="pl-en"&gt;throttle&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;options&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
 &lt;span class="pl-en"&gt;method&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
   &lt;span class="pl-c"&gt;// ...&lt;/span&gt;
 &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;once&lt;/code&gt; - Add &lt;code&gt;once&lt;/code&gt; functionality to the method&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;once&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'helpful-decorators'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Test&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
 @&lt;span class="pl-s1"&gt;once&lt;/span&gt;
 &lt;span class="pl-en"&gt;method&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
   &lt;span class="pl-c"&gt;// This will run only once&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/NetanelBasal/helpful-decorators"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-microdiff"&gt;
  &lt;/a&gt;
  3. Microdiff
&lt;/h3&gt;

&lt;p&gt;A fast, zero dependency object and array comparison library. Significantly faster than most other deep comparison libraries and has full TypeScript suppor&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/AsyncBanana"&gt;
        AsyncBanana
      &lt;/a&gt; / &lt;a href="https://github.com/AsyncBanana/microdiff"&gt;
        microdiff
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A fast, zero dependency object and array comparison library. Significantly faster than most other deep comparison libraries and has full TypeScript support.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AsyncBanana/microdiff/master/Logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N8MIqJUM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/AsyncBanana/microdiff/master/Logo.svg" alt="Microdiff Logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microdiff is a tiny (currently &amp;lt;1kb), fast, zero dependency object and array comparison library. It is significantly faster than most other deep comparison libraries, and has full TypeScript support.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5f3c63607d27b60b58f843d7f3f1619dd51892963359c6b31a19d8fc6a454944/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f6d6963726f646966663f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/5f3c63607d27b60b58f843d7f3f1619dd51892963359c6b31a19d8fc6a454944/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f6d6963726f646966663f7374796c653d666c61742d737175617265" alt="Minizipped Size (from Bundlephobia)"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/04249aace96410f37864717c7e58fe374ba2d36c7b30727e04b3d62b0c17fe05/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6d6963726f646966663f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/04249aace96410f37864717c7e58fe374ba2d36c7b30727e04b3d62b0c17fe05/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6d6963726f646966663f7374796c653d666c61742d737175617265" alt="License"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a5b95e9a5f56c4ab41f06ec5eea2c80331a37384676a003ffe4cb38b9e41b3c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d302d677265656e3f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/a5b95e9a5f56c4ab41f06ec5eea2c80331a37384676a003ffe4cb38b9e41b3c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d302d677265656e3f7374796c653d666c61742d737175617265" alt="dependency Count"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1&gt;
Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
🚀 More than double the speed of other object diff libraries&lt;/li&gt;
&lt;li&gt;
📦 Extremely lightweight, &amp;lt;1kb minified&lt;/li&gt;
&lt;li&gt;
🌎 Supports Deno, Node, the web, and even service workers. Also comes with built in Typescript types&lt;/li&gt;
&lt;li&gt;
🔰 Very easy to use, having just a single &lt;code&gt;diff()&lt;/code&gt; function&lt;/li&gt;
&lt;li&gt;
📅 Full support for objects like &lt;code&gt;new Date()&lt;/code&gt; and &lt;code&gt;new RegExp()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Get started&lt;/h1&gt;
&lt;p&gt;First, install Microdiff&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npm i microdiff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are using Deno, you can import it from Deno.land with the link &lt;code&gt;https://deno.land/x/microdiff@VERSION/index.ts&lt;/code&gt; (remember to change &lt;code&gt;@VERSION&lt;/code&gt; to the version you want to use).&lt;/p&gt;
&lt;p&gt;After you install it, simply import it and run it on two objects.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;diff&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"microdiff"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;obj1&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;originalProperty&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;obj2&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/AsyncBanana/microdiff"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-thenodeway"&gt;
  &lt;/a&gt;
  4. the-node-way
&lt;/h3&gt;

&lt;p&gt;Design patterns and best practices for building scaleable, maintainable and beautiful Node.js applications. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/FredKSchott"&gt;
        FredKSchott
      &lt;/a&gt; / &lt;a href="https://github.com/FredKSchott/the-node-way"&gt;
        the-node-way
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Design patterns and best practices for building scaleable, maintainable and beautiful Node.js applications. Now with website! --&amp;gt;
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/FredKSchott/the-node-waylogo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Il2tbTNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/FredKSchott/the-node-waylogo.png" alt="icon"&gt;&lt;/a&gt; the-node-way&lt;/h1&gt;
&lt;p&gt;Design patterns and best practices for building scaleable, maintainable and beautiful Node.js applications.&lt;/p&gt;
&lt;h3&gt;
Introduction&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://thenodeway.io/introduction/" rel="nofollow"&gt;What is The Node Way?&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Master The Fundamentals&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://fredkschott.com/post/2014/03/understanding-error-first-callbacks-in-node-js/" rel="nofollow"&gt;Understanding Error-First Callbacks&lt;/a&gt;&lt;br&gt;
&lt;a href="http://fredkschott.com/post/2014/05/nodejs-testing-essentials/" rel="nofollow"&gt;Testing Essentials&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Start Building&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://fredkschott.com/post/2013/12/node-js-cookbook---designing-singletons/" rel="nofollow"&gt;Designing Singletons&lt;/a&gt;&lt;br&gt;
&lt;a href="http://fredkschott.com/post/2014/01/node-js-cookbook---constructors-and-custom-types/" rel="nofollow"&gt;Designing Custom Types&lt;/a&gt;&lt;br&gt;
&lt;a href="http://fredkschott.com/post/2015/01/the-node-way-designing-factories/" rel="nofollow"&gt;Designing Factories&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Get Fancy&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://fredkschott.com/post/2014/06/require-and-the-module-system/" rel="nofollow"&gt;How &lt;code&gt;require()&lt;/code&gt; Actually Works&lt;/a&gt;&lt;br&gt;
&lt;a href="http://fredkschott.com/post/2014/09/nodejs-dangerous-module-design-patterns/" rel="nofollow"&gt;Dangerous Module Design Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit &lt;strong&gt;&lt;a href="http://thenodeway.io" rel="nofollow"&gt;thenodeway.io&lt;/a&gt;&lt;/strong&gt; and learn the way.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;All code examples and website updates will be added to this repo. Watch for new posts, articles, and more.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2016 Copyright &lt;a href="https://twitter.com/FredKSchott" rel="nofollow"&gt;Fred K. Schott&lt;/a&gt;. All rights reserved.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/FredKSchott/the-node-way"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#5-ckeditor-5"&gt;
  &lt;/a&gt;
  5. CKEditor 5
&lt;/h3&gt;

&lt;p&gt;Powerful rich text editor framework with a modular architecture, modern integrations, and features like collaborative editing.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ckeditor"&gt;
        ckeditor
      &lt;/a&gt; / &lt;a href="https://github.com/ckeditor/ckeditor5"&gt;
        ckeditor5
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Powerful rich text editor framework with a modular architecture, modern integrations, and features like collaborative editing.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
CKEditor 5 &lt;a href="https://twitter.com/intent/tweet?text=Check%20out%20CKEditor%205%20on%20GitHub&amp;amp;url=https%3A%2F%2Fgithub.com%2Fckeditor%2Fckeditor5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/ckeditor5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33116a29fb080e689d9613044ac55f35936e6d10fefb15405f7b9ca6b255ca34/68747470733a2f2f62616467652e667572792e696f2f6a732f636b656469746f72352e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/ckeditor/ckeditor5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a371b797b41e6fd7dee441dca03aedee66795fbf0f0d0c72de42ee9bd118a51/68747470733a2f2f7472617669732d63692e636f6d2f636b656469746f722f636b656469746f72352e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/ckeditor/ckeditor5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd1bd023193cc7ebb48dd0cc1d900fbd0687fbf1f65ab112544bc84d96810afe/68747470733a2f2f696d672e736869656c64732e696f2f64617669642f636b656469746f722f636b656469746f72352e737667" alt="Dependency Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/ckeditor/ckeditor5?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0fb7d1f6496fcfe2fb536ca0b83ffdb09ffec0ac109280b1d782586932cb6e7e/68747470733a2f2f696d672e736869656c64732e696f2f64617669642f6465762f636b656469746f722f636b656469746f72352e737667" alt="devDependency Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://eepurl.com/c3zRPr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/01ff6ce05d0f19075844501a25eb14637df998b74094c49c5b67c36dfe76733e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6a6f696e2d6e6577736c65747465722d3030636339392e737667" alt="Join newsletter"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/ckeditor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2e5acc723d61e54643c7a8b4199b07b201013cb069885d5f2a59abea728279c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f666f6c6c6f772d747769747465722d3030636339392e737667" alt="Follow twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A set of ready-to-use rich text editors created with a powerful framework. Made with real-time collaborative editing in mind.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3ce0d5d1a61c5017c965206df823081364bef5a045f96b66e79ef21c2dd4521c/68747470733a2f2f632e636b736f757263652e636f6d2f612f312f696d672f6e706d2f636b656469746f72352d6275696c642d636c61737369632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/3ce0d5d1a61c5017c965206df823081364bef5a045f96b66e79ef21c2dd4521c/68747470733a2f2f632e636b736f757263652e636f6d2f612f312f696d672f6e706d2f636b656469746f72352d6275696c642d636c61737369632e706e67" alt="CKEditor 5 Classic rich text editor build screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ckeditor/ckeditor5#quick-start"&gt;Quick start&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#ckeditor-5-builds"&gt;CKEditor 5 builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#ckeditor-5-framework"&gt;CKEditor 5 Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#documentation-and-faq"&gt;Documentation and FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ckeditor/ckeditor5#contributing-and-project-organization"&gt;Contributing and project organization&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#ideas-and-discussions"&gt;Ideas and discussions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#development"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#reporting-issues-and-feature-requests"&gt;Reporting issues and feature requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#releases"&gt;Releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ckeditor/ckeditor5#packages"&gt;Packages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#core-libraries"&gt;Core libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#builds"&gt;Builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#editors"&gt;Editors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Quick start&lt;/h2&gt;
&lt;h3&gt;
CKEditor 5 builds&lt;/h3&gt;
&lt;p&gt;CKEditor 5 builds are a set of ready-to-use rich text editors. Every "build" provides a single type of editor with a set of features and a default configuration.&lt;/p&gt;
&lt;p&gt;The following CKEditor 5 builds are currently available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#classic-editor" rel="nofollow"&gt;Classic editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#inline-editor" rel="nofollow"&gt;Inline editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#balloon-editor" rel="nofollow"&gt;Balloon editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#balloon-block-editor" rel="nofollow"&gt;Balloon block editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#document-editor" rel="nofollow"&gt;Document editor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Example&lt;/h4&gt;
&lt;p&gt;Creating an editor using a CKEditor 5 build is very simple and can be described in two steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Load the desired editor via the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;li&gt;Call the static &lt;code&gt;create()&lt;/code&gt; method to create the editor.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In your HTML page add…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ckeditor/ckeditor5"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-reactintersectionobserver"&gt;
  &lt;/a&gt;
  6. react-intersection-observer
&lt;/h3&gt;

&lt;p&gt;React implementation of the Intersection Observer API to tell you when an element enters or leaves the viewport.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thebuilder"&gt;
        thebuilder
      &lt;/a&gt; / &lt;a href="https://github.com/thebuilder/react-intersection-observer"&gt;
        react-intersection-observer
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React implementation of the Intersection Observer API to tell you when an element enters or leaves the viewport.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
react-intersection-observer&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://npmjs.org/package/react-intersection-observer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bf3fce3ba4f0ef29bc81e870c941fe689e3beaa516ef4f1e9634aecd6df63b6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d696e74657273656374696f6e2d6f627365727665722e737667" alt="Version Badge"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=react-intersection-observer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f135cbbbca482ab12187294c46554317c18bd28b541c2a0e3689b74d02caead6/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f72656163742d696e74657273656374696f6e2d6f627365727665722e737667" alt="GZipped size"&gt;&lt;/a&gt;
&lt;a href="https://github.com/thebuilder/react-intersection-observer/actions?query=workflow%3ATest"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hM8JHrD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/thebuilder/react-intersection-observer/workflows/Test/badge.svg" alt="Test"&gt;&lt;/a&gt; &lt;a href="https://github.com/thebuilder/react-intersection-observerLICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/53e58a3aad46de95139597a1e591897bf7e8fecb71069b38e080ac6a012ec7d6/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f72656163742d696e74657273656374696f6e2d6f627365727665722e737667" alt="License"&gt;&lt;/a&gt;
&lt;a href="http://npm-stat.com/charts.html?package=react-intersection-observer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fab5c40bd42a7b337b1055a050b04e2495f29252dc551c9d827dcd9dd978fa99/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d696e74657273656374696f6e2d6f627365727665722e737667" alt="Downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React implementation of the
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API" rel="nofollow"&gt;Intersection Observer API&lt;/a&gt;
to tell you when an element enters or leaves the viewport. Contains both a
&lt;a href="https://github.com/thebuilder/react-intersection-observer#hooks-"&gt;Hooks&lt;/a&gt;, &lt;a href="https://github.com/thebuilder/react-intersection-observer#render-props"&gt;render props&lt;/a&gt; and
&lt;a href="https://github.com/thebuilder/react-intersection-observer#plain-children"&gt;plain children&lt;/a&gt; implementation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Storybook Demo:&lt;/strong&gt;
&lt;a href="https://react-intersection-observer.vercel.app" rel="nofollow"&gt;https://react-intersection-observer.vercel.app&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
🎣 &lt;strong&gt;Hooks or Component API&lt;/strong&gt; - With &lt;code&gt;useInView&lt;/code&gt; it's easier than ever to
monitor elements&lt;/li&gt;
&lt;li&gt;
⚡️ &lt;strong&gt;Optimized performance&lt;/strong&gt; - Reuses Intersection Observer instances where
possible&lt;/li&gt;
&lt;li&gt;
⚙️ &lt;strong&gt;Matches native API&lt;/strong&gt; - Intuitive to use&lt;/li&gt;
&lt;li&gt;
🧪 &lt;strong&gt;Ready to test&lt;/strong&gt; - Mocks the Intersection Observer for easy testing with
&lt;a href="https://jestjs.io/" rel="nofollow"&gt;Jest&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🌳 &lt;strong&gt;Tree-shakeable&lt;/strong&gt; - Only include the parts you use&lt;/li&gt;
&lt;li&gt;
💥 &lt;strong&gt;Tiny bundle&lt;/strong&gt; &lt;a href="https://bundlephobia.com/result?p=react-intersection-observer" rel="nofollow"&gt;~1.7 kB gzipped&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;Install using &lt;a href="https://yarnpkg.com" rel="nofollow"&gt;Yarn&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add react-intersection-observer&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;or NPM:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install react-intersection-observer --save&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h3&gt;
&lt;code&gt;useInView&lt;/code&gt; hook&lt;/h3&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// Use object destructing, so you don't need to remember the exact order&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; ref&lt;span class="pl-kos"&gt;,&lt;/span&gt; inView&lt;span class="pl-kos"&gt;,&lt;/span&gt; entry &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useInView&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;options&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// Or array destructing, making it easy to customize the&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thebuilder/react-intersection-observer"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-streak-counter"&gt;
  &lt;/a&gt;
  7. Streak Counter
&lt;/h3&gt;

&lt;p&gt;A streak counter to track your streak in days (similar to Duolingo)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jsjoeio"&gt;
        jsjoeio
      &lt;/a&gt; / &lt;a href="https://github.com/jsjoeio/use-streak"&gt;
        use-streak
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      a streak counter to track your streak in days (similar to Duolingo)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Streak Counter&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/dc6e2f17b109a3f564d30cc90effeb5f548f382a71f5cfe239a958ee7c3076db/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7573652d73747265616b"&gt;&lt;img src="https://camo.githubusercontent.com/dc6e2f17b109a3f564d30cc90effeb5f548f382a71f5cfe239a958ee7c3076db/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7573652d73747265616b" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a basic streak counter - inspired by Duolingo - written in TypeScript and meant for the browser (uses &lt;code&gt;localStorage&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add use-streak&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install use-streak&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;useStreak&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"use-streak"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;today&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Date&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;streak&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useStreak&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;localStorage&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;today&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// streak returns an object:&lt;/span&gt;
&lt;span class="pl-c"&gt;// {&lt;/span&gt;
&lt;span class="pl-c"&gt;//    currentCount: 1,&lt;/span&gt;
&lt;span class="pl-c"&gt;//    lastLoginDate: "11/11/2021",&lt;/span&gt;
&lt;span class="pl-c"&gt;//    startDate: "11/11/2021",&lt;/span&gt;
&lt;span class="pl-c"&gt;// }&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/jsjoeio/use-streak./streak-demo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZyEHPC73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/jsjoeio/use-streak./streak-demo.png" alt="screenshot of streak demo" width="200"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codesandbox.io/s/vigorous-wood-o8m7w?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90808661433696bc57dce8d4ad732307b5cec6270e6b846f114dcd7ee7f9458a/68747470733a2f2f636f646573616e64626f782e696f2f7374617469632f696d672f706c61792d636f646573616e64626f782e737667" alt="Edit vigorous-wood-o8m7w"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
LICENSE&lt;/h2&gt;
&lt;p&gt;MIT. Just make sure you give acknowledgements to this repo.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jsjoeio/use-streak"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#8-pivotjs"&gt;
  &lt;/a&gt;
  8. Pivot.js
&lt;/h3&gt;

&lt;p&gt;Pivot.js is a simple way for you to get to your data. It allows for the creation of highly customizable unique table views from your browser.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/rwjblue"&gt;
        rwjblue
      &lt;/a&gt; / &lt;a href="https://github.com/rwjblue/pivot.js"&gt;
        pivot.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Build Pivot Tables from CSV/JSON Data
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Welcome to Pivot.js&lt;/h1&gt;
&lt;p&gt;Pivot.js is a simple way for you to get to your data.  It allows for the
creation of highly customizable unique table views from your browser.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In data processing, a pivot table is a data summarization tool found in
data visualization programs such as spreadsheets or business intelligence
software. Among other functions, pivot-table tools can automatically sort
count, total or give the average of the data stored in one table or
spreadsheet. It displays the results in a second table (called a "pivot
table") showing the summarized data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In our case, results (or the pivot-table) will be displayed as an HTML table
pivoting from the input data (CSV or JSON). Without further ado let's get to usage.&lt;/p&gt;
&lt;h2&gt;
View an &lt;a href="http://rwjblue.github.com/pivot.js/"&gt;example&lt;/a&gt; or view the &lt;a href="http://rwjblue.github.com/pivot.js/docs/index.html#!/api/Pivot"&gt;Docs&lt;/a&gt; for more information.&lt;/h2&gt;
&lt;h1&gt;
Usage&lt;/h1&gt;
&lt;p&gt;Step one is to initialize the pivot object.  It expects the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;csv&lt;/code&gt; - which should contain a…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/rwjblue/pivot.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-mdsvex"&gt;
  &lt;/a&gt;
  9. mdsvex
&lt;/h3&gt;

&lt;p&gt;A Markdown preprocessor for Svelte. Markdown in Svelte.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pngwn"&gt;
        pngwn
      &lt;/a&gt; / &lt;a href="https://github.com/pngwn/MDsveX"&gt;
        MDsveX
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A markdown preprocessor for Svelte.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mdsvex&lt;/h1&gt;
&lt;p&gt;A Markdown preprocessor for Svelte. Markdown in Svelte.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdsvex.com" rel="nofollow"&gt;mdsvex.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Packages&lt;/h2&gt;
&lt;p&gt;This is a monorepo containing &lt;code&gt;mdsvex&lt;/code&gt; and any supporting packages. Each repo has it's own readme with more details.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/site"&gt;site&lt;/a&gt; - The documentation website.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/mdsvex"&gt;mdsvex&lt;/a&gt; - &lt;code&gt;mdsvex&lt;/code&gt; itself.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/svelte-parse"&gt;svelte-parse&lt;/a&gt; - Generate a svast AST from a Svelte components.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/svast"&gt;svast&lt;/a&gt; - An AST specification with accompanying TypeScript definitions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/svast-stringify"&gt;svast-stringify&lt;/a&gt; - Turn a svast AST into a Svelte component.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/svast-utils"&gt;svast-utils&lt;/a&gt; - Utilities for working with a svast tree.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcome. This repo uses &lt;a href="https://github.com/atlassian/changesets"&gt;changesets&lt;/a&gt; to manage changelogs and versioning. All pull requests need an accompanying changeset file (PRs to the documentation website do not need a changeset file). If you know how changesets work then feel free to add one with the appropriate packages, versions and a description of the change. If you don't know how changesets work, don't worry about it, I am happy to add one (a…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pngwn/MDsveX"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-pnpm"&gt;
  &lt;/a&gt;
  10. pnPm
&lt;/h3&gt;

&lt;p&gt;Fast, disk space efficient package manager&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pnpm"&gt;
        pnpm
      &lt;/a&gt; / &lt;a href="https://github.com/pnpm/pnpm"&gt;
        pnpm
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast, disk space efficient package manager -- 快速的，节省磁盘空间的包管理工具
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://pnpm.io/zh/" rel="nofollow"&gt;中文&lt;/a&gt; | &lt;a href="https://pnpm.io/ja/" rel="nofollow"&gt;日本語&lt;/a&gt; | &lt;a href="https://pnpm.io/it/" rel="nofollow"&gt;Italiano&lt;/a&gt; | &lt;a href="https://pnpm.io/ru/" rel="nofollow"&gt;Русский&lt;/a&gt; | &lt;a href="https://pnpm.io/tr/" rel="nofollow"&gt;Türkçe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/15249b13cd482f77ff1e9f74952f1a01892912af0c5cab22f73f26d595b2f0bf/68747470733a2f2f692e696d6775722e636f6d2f716c57316545472e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/15249b13cd482f77ff1e9f74952f1a01892912af0c5cab22f73f26d595b2f0bf/68747470733a2f2f692e696d6775722e636f6d2f716c57316545472e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fast, disk space efficient package manager:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fast.&lt;/strong&gt; Up to 2x faster than the alternatives (see &lt;a href="https://github.com/pnpm/pnpm#benchmark"&gt;benchmark&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Efficient.&lt;/strong&gt; Files inside &lt;code&gt;node_modules&lt;/code&gt; are linked from a single content-addressable storage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://pnpm.io/workspaces" rel="nofollow"&gt;Great for monorepos&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Strict.&lt;/strong&gt; A package can access only dependencies that are specified in its &lt;code&gt;package.json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deterministic.&lt;/strong&gt; Has a lockfile called &lt;code&gt;pnpm-lock.yaml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Works as a Node.js version manager.&lt;/strong&gt; See &lt;a href="https://pnpm.io/cli/env" rel="nofollow"&gt;pnpm env use&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Works everywhere.&lt;/strong&gt; Supports Windows, Linux, and macOS.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Battle-tested.&lt;/strong&gt; Used in production by teams of &lt;a href="https://pnpm.io/users" rel="nofollow"&gt;all sizes&lt;/a&gt; since 2016.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To quote the &lt;a href="https://rushjs.io/" rel="nofollow"&gt;Rush&lt;/a&gt; team:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Microsoft uses pnpm in Rush repos with hundreds of projects and hundreds of PRs per day, and we’ve found it to be very fast and reliable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/pnpm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5aa4ad0238fb29f5f94003a67748b016262eacb7f3fb9283705fd075387b315c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f706e706d2e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://r.pnpm.io/chat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffaff4673f3d7d1c95c5da9ebb293ae8151021812e802e37d8df30f35d7eaa53/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3733313539393533383636353535333937312e737667" alt="Join the chat at Discord"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pnpm/pnpm#backers"&gt;&lt;img src="https://camo.githubusercontent.com/7a169f5d11afe0ab0a741ff4211673fb39012b74b51f2a82b9d3bdaa6fa5ac94/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f706e706d2f6261636b6572732f62616467652e737667" alt="OpenCollective"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pnpm/pnpm#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/992a4d505eabe585243fc1e31946bd1525cef92270ab0d76b7048752f243d237/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f706e706d2f73706f6e736f72732f62616467652e737667" alt="OpenCollective"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/follow?screen_name=pnpmjs&amp;amp;region=follow_link" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c564e4c968e5d7340d07185d79c451abfc39b0d1a5d2a54a5a9b9648c2b4537/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f706e706d6a732e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter Follow"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Sponsors&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        &lt;a href="https://bit.dev" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--22L8Abxh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pnpm/pnpm.github.io/main/static/img/users/bit.svg" width="80"&gt;&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;a href="https://prisma.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xaVeryu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pnpm/pnpm.github.io/main/static/img/users/prisma.svg" width="180"&gt;&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;a href="https://leniolabs.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hx11L2Fy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pnpm/pnpm.github.io/main/static/img/users/leniolabs.jpg" width="80"&gt;&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Support this project by &lt;a href="https://opencollective.com/pnpm#sponsor" rel="nofollow"&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Background&lt;/h2&gt;
&lt;p&gt;pnpm uses a content-addressable filesystem to store all files from all module directories on a disk
When using…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pnpm/pnpm"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +1,604 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Dev for Beginners&lt;/a&gt; +1,134 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;ML for Beginners&lt;/a&gt; +1,076 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +907 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Budibase/budibase"&gt;Budibase&lt;/a&gt; +892 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +87%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gr2m/twitter-together"&gt;Twitter Together&lt;/a&gt; +29%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/smeijer/next-runtime"&gt;next runtime&lt;/a&gt; +25%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tannerlinsley/react-location"&gt;React Location&lt;/a&gt; +25%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/estruyf/vscode-front-matter"&gt;vsCode Front Matter&lt;/a&gt; +23%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for beginner&lt;/a&gt; +3,623 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,013 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +2,815 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;The Book of Secret Knowledge&lt;/a&gt; +2,355 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +2,256 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/teafuljs/teaful"&gt;Fragstore&lt;/a&gt; +637%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +171%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/csswizardry/ct"&gt;ct&lt;/a&gt; +112%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ebs-integrator/ebs-design"&gt;EBS Design&lt;/a&gt; +79%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/atapas/webapis-playground"&gt;Web APIs Playground&lt;/a&gt; +74%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Grab your first Internship</title>
      <author>Danish Saleem</author>
      <pubDate>Fri, 26 Nov 2021 14:43:22 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/grab-your-first-internship-4fbj</link>
      <guid>https://dev.to/mrdanishsaleem/grab-your-first-internship-4fbj</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Start Applying Early&lt;/li&gt;
&lt;li&gt;Use Your Network Effectively&lt;/li&gt;
&lt;li&gt;Connect with Real People&lt;/li&gt;
&lt;li&gt;Stand Out with your Portfolio&lt;/li&gt;
&lt;li&gt;Prepare for the Technical Interview&lt;/li&gt;
&lt;li&gt;Track Everything&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect 💜
&lt;/h3&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/mrdanishsaleem/"&gt;Instagram&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>❗ DON'T add a video background to your landing page to make it more gorgeous ❗  [TW: gratuitous swearing]</title>
      <author>InHuOfficial</author>
      <pubDate>Fri, 26 Nov 2021 14:43:21 +0000</pubDate>
      <link>https://dev.to/inhuofficial/dont-add-a-video-background-to-your-landing-page-to-make-it-more-gorgeous-tw-gratuitous-swearing-bja</link>
      <guid>https://dev.to/inhuofficial/dont-add-a-video-background-to-your-landing-page-to-make-it-more-gorgeous-tw-gratuitous-swearing-bja</guid>
      <description>&lt;p&gt;I said I wasn't going to do angry rants anymore. I really did try. But fuck me people are still creating tutorials on how to create video backgrounds? &lt;/p&gt;

&lt;p&gt;Have I gone back to 2010 when nobody gave a fuck about performance, or the environment, or conversions, or people with disabilities??&lt;/p&gt;

&lt;p&gt;Strap in ladies, gents and non-binary peeps, shit is about to get ugly as I explain why you are a fucking dipshit if you think a video background is a good idea.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#everyone-has-unlimited-data"&gt;
  &lt;/a&gt;
  Everyone has unlimited data
&lt;/h2&gt;

&lt;p&gt;Ah yes, a prime example of "the arrogant developer effect" in all of its glory! &lt;/p&gt;

&lt;p&gt;"I have 10GB of data on my plan so a 30 second looped video is nothing".&lt;/p&gt;

&lt;p&gt;How arrogant and misguided do you have to be to think that every person can afford your 20MB video as part of their data plan. &lt;/p&gt;

&lt;p&gt;Some people have less than 1GB of data a month as part of their plans. Some people have no included data at all!&lt;/p&gt;

&lt;p&gt;It is the same shit as the people who think that Chrome is the only browser and you can just use the latest CSS and JS features without looking at caniuse.com! &lt;/p&gt;

&lt;p&gt;But this isn't a rant about how people don't understand browser compatibility, I will save that for another day.&lt;/p&gt;

&lt;p&gt;No this is a rant about video backgrounds, and I will kick things off by saying your video &lt;strong&gt;costs people money&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;What if someone is from Namibia, where one GB of data costs over $20! Your 20MB video just cost that person 40 cents.&lt;/p&gt;

&lt;p&gt;When the average salary is just $13,200 a year in Namibia (compared to $65,000 in the US) that is roughly the same as $2.&lt;/p&gt;

&lt;p&gt;2 fucking dollars to watch your shitty "artistic" video. Do you actually think your 30 second looped video of swirling colours is worth $2? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-gives-a-fuck-about-the-environment"&gt;
  &lt;/a&gt;
  Who gives a fuck about the environment
&lt;/h2&gt;

&lt;p&gt;While we are talking about excessive data usage, did you even consider how much electricity it costs to transmit your shitty video?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.emergeinteractive.com/insights/detail/does-irresponsible-web-development-contribute-to-global-warming/"&gt;Transferring 1GB of data produces 3kg of CO2!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So for every 50 visitors to your site who get exposed to your 20mb video background "masterpiece" you just added 3kg of CO2 to the global warming crisis.&lt;/p&gt;

&lt;p&gt;If you get 1000 visitors a day, in a year you add 21.9 &lt;strong&gt;metric tonnes&lt;/strong&gt; of CO2 to the atmosphere (about 24 tonnes for those people in backwards Countries who don't use metric). &lt;/p&gt;

&lt;p&gt;Do you hate humanity, is that why you do this? Greta will be pissed at you. How dare you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-gives-a-fuck-about-disabled-people"&gt;
  &lt;/a&gt;
  Who gives a fuck about disabled people?
&lt;/h2&gt;

&lt;p&gt;I mean we have already established that you don't mind costing people money and destroying the environment, why would we expect you to care about disabled people?&lt;/p&gt;

&lt;p&gt;But just in case there is a shred of a soul left inside that husk you call a body, let me tell you another reason why video backgrounds are a bad idea.&lt;/p&gt;

&lt;p&gt;Some people on this planet have vestibular disorders. I say some people, &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4069154/#:~:text=The%20study%20found%20lifetime%20adult,preponderance%20%5B27%2C29%5D."&gt;around 1 in 15 people&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These people are sensitive to motion and can actually feel nauseous with unexpected movement. Your video can cause these feelings of nausea.&lt;/p&gt;

&lt;p&gt;Some people also experience paranoia and unexpected movement can be triggering and disconcerting for them. Your video could be quite disturbing for some people.&lt;/p&gt;

&lt;p&gt;And some people have attention disorders which can make your video very distracting. Your video can be so distracting that they can feel overwhelmed and leave your site.&lt;/p&gt;

&lt;p&gt;Now you could use media queries and &lt;code&gt;prefers-reduced-motion&lt;/code&gt; to decide whether to play the video and provide controls to stop the video...but nobody does that if they use a background video. &lt;/p&gt;

&lt;p&gt;I could go on about how you would then need to hide those controls and the video from screen readers, how you would need to provide an audio described version of the video if it contained anything at all of relevance to the page etc. etc. but you aren't going to listen, we have already established you don't give a fuck about other people. &lt;/p&gt;

&lt;p&gt;I am not done yet though. The biggest problem with video backgrounds is colour contrast.&lt;/p&gt;

&lt;p&gt;How can you possibly keep a 4.5:1 contrast ratio of text with a video? At some point there will be a section of the video that has text in front of it that will be too light (or too dark) to provide sufficient colour contrast to make the text legible. &lt;/p&gt;

&lt;p&gt;How annoying and inaccessible do you have to want to make your site to make text that is readable "some of the time"? Ah well, there are only 1 billion people in the world with disabilities, we can afford to ignore their needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ok-you-are-a-selfish-human-being"&gt;
  &lt;/a&gt;
  OK you are a selfish human being
&lt;/h2&gt;

&lt;p&gt;Fine you don't give a shit about other people. Let's talk about you!&lt;/p&gt;

&lt;p&gt;To be precise, let's talk about your site conversion rate.&lt;/p&gt;

&lt;p&gt;Now if you already thought having a video background was a good idea then you probably don't even know what conversions are. &lt;/p&gt;

&lt;p&gt;So let me bring you up to speed.&lt;/p&gt;

&lt;p&gt;When someone visits your site you want them to do something. &lt;/p&gt;

&lt;p&gt;Whether that is buy something or make an enquiry, right through to liking or sharing an article.&lt;/p&gt;

&lt;p&gt;At the very least you want people to stick around!&lt;/p&gt;

&lt;p&gt;Now the ratio between the number of visitors to your site and the number of people who complete your desired action is known as your conversion rate.&lt;/p&gt;

&lt;p&gt;If you can double your conversion rate it means that you get twice as much engagement / money without needing to get more visitors (which is costly and or time consuming).&lt;/p&gt;

&lt;p&gt;Now that you know why it matters you might see where this is going.&lt;/p&gt;

&lt;p&gt;A video background distracts people. &lt;/p&gt;

&lt;p&gt;The last thing you want to do is distract people. &lt;/p&gt;

&lt;p&gt;They come to your site for a reason...and I can almost guarantee that it isn't to watch your artsy fartsy video.&lt;/p&gt;

&lt;p&gt;And before you go saying something like "it adds important interest to the page"...if it was that fucking important it wouldn't be a bloody &lt;strong&gt;background&lt;/strong&gt; video. &lt;/p&gt;

&lt;p&gt;So don't feed me that bullshit.&lt;/p&gt;

&lt;p&gt;And if that is your objection then go on, run along, you are beyond help.&lt;/p&gt;

&lt;p&gt;Still here? Then listen up! &lt;/p&gt;

&lt;p&gt;Your video is distracting people from your end goal. It is even worse if you have a call to action positioned in front of the video background. Why draw attention &lt;strong&gt;away&lt;/strong&gt; from the button you want people to click?&lt;/p&gt;

&lt;p&gt;Why would you place something on your site that is damaging your conversion rates but adds nothing of value?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-the-answer"&gt;
  &lt;/a&gt;
  So what is the answer?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Don't have video backgrounds.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;It really is that simple.&lt;/p&gt;

&lt;p&gt;I am not saying don't have videos. Videos are great. But don't auto play them and don't make them a part of the background.&lt;/p&gt;

&lt;p&gt;Make them a part of your conversion process. Make them persuasive, informative and useful. Make them in line with your goals and the goals of the site.&lt;/p&gt;

&lt;p&gt;If you want some animation and movement on the page then look at canvas, SVG, CSS etc. You can add plenty of visual interest in a few KB of code (Just remember to allow people to switch animations off).&lt;/p&gt;

&lt;p&gt;Now go forth and delete those video backgrounds, watch your conversions increase and help make the world greener and more inclusive with one stroke of the delete key!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finishing-up"&gt;
  &lt;/a&gt;
  Finishing Up
&lt;/h2&gt;

&lt;p&gt;As always the anger is for fun!&lt;/p&gt;

&lt;p&gt;As for those who read the original article, this is nothing against that article, it was well written, it is just that concept itself is outdated and a bad practice.&lt;/p&gt;

&lt;p&gt;Anyway, that is enough disclaimers, have a great weekend all!&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The Financial System of The Future</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Fri, 26 Nov 2021 14:38:43 +0000</pubDate>
      <link>https://dev.to/markfusion/the-financial-system-of-the-future-2mff</link>
      <guid>https://dev.to/markfusion/the-financial-system-of-the-future-2mff</guid>
      <description>&lt;p&gt;You’ve probably heard about DeFi and DeFi tokens, but what is it really? DeFi stands for Decentralized Finance. The DeFi token system is a cryptocurrency that can be used as a means of exchange in the web3.0 world - the next level of the internet which brings blockchain to life! If you want to know more about how Defi works and why we think this will revolutionize our financial system, read on below!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-defi-is-better-the-usual-finance"&gt;
  &lt;/a&gt;
  Why DeFi Is Better The Usual Finance?
&lt;/h2&gt;

&lt;p&gt;DeFi is an analogy of the current financial system that brings with it a few killer features that will make transactions and all work with money online much easier. DeFi tokens are created based on Ethereum blockchain technology. DeFi tokenization means you can create your own currency - something like creating new coins for special purposes or events! Your DeFi tokens are held in DeFi wallets which you can find on DeFi websites. &lt;/p&gt;

&lt;p&gt;These DeFi tokens are not based on Ether so they have their own value and you should be careful, although there’s a certain level of security as DeFi runs by smart contracts - digital protocols that make sure everything is safe.&lt;/p&gt;

&lt;p&gt;It works the same way Bitcoin and other popular cryptocurrencies work, but it is a newer and improved version! These tokens are created by DeFi protocols. Protocols can be compared to websites where you put your DeFi token address in the “Deposit” field and send it from another wallet (or exchange). In return, you will get an equivalent amount of newly minted tokens on that website - this means they don’t use the existing coin supply for new coins when creating them during the DeFi protocol operation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#defi-is-getting-popularity-right-now"&gt;
  &lt;/a&gt;
  Defi Is Getting Popularity Right Now
&lt;/h2&gt;

&lt;p&gt;DeFis became much more accessible with decentralized exchanges which exist today as well. Web-based DEX solutions let users trade their own crypto assets without any intervention whatsoever from third parties like banks or platforms such as Coinbase. DeFi is a process that you can’t stop once started - it's an evolution of the financial system, making many things much easier for everyone!&lt;/p&gt;

&lt;p&gt;This DeFi protocol enables anyone to create their own token and use any Ethereum wallet they want. If you know how cryptocurrencies work or are familiar with blockchain technology, this DeFi protocol will be perfect for you! This is the future of money, so make sure to read up on DeFi protocols and DeFi-based currencies as soon as possible! Your financial life and not only will get much easier by just using it instead of usual financial systems!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples-of-defi"&gt;
  &lt;/a&gt;
  Examples of DeFi
&lt;/h2&gt;

&lt;p&gt;The greatest example of DeFi is Uniswap (UNI), Compound (COMP), Aave (AAVE), and many many other networks or tokens, call it as you want, which you see by just typing "DeFi' into your browser. As I said, there's a bunch of them, however, only ones deserve your attention. The one rule that I'll give to you, "Do Your Own Research" and it's probably one of the most important parts of investing and in life itself. So don't listen to some of your favorite Bloggers who said that you need to buy exactly this DeFi token or something else, they only think that it can grow over time and these imaginations can be absolutely wrong sometimes&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-implement-with-it-or-even-invest"&gt;
  &lt;/a&gt;
  How Can You Implement With It or Even Invest?
&lt;/h2&gt;

&lt;p&gt;There's no something difficult here. If you want to invest in this sphere and in the future become a very rich guy so you just need to buy some tokens like Uniswap and push it into a stake if you want to, so with the magic of compound interest you'll get even richer than you think you'll be!&lt;/p&gt;

&lt;p&gt;Or if you don't wanna invest but want to use the technology itself you can go up to the website of this DeFi token and see the opportunities which they are offering to everyone including you. Probably you can build your own network on it or use it as an exchange for your other cryptos. Thus there's a ton of implementation and it's specific for every token&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;By the end of this article, you need to dive more deeply into this sphere with tons of opportunities on every step that you're taking. So look at some of the examples that I gave to you like Uniswap or Compound and remember, Do Your Own Research. Thanks for reading, don't forget about like and subscription :)&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>career</category>
      <category>startup</category>
      <category>finance</category>
    </item>
    <item>
      <title>CRUD API using NestJS, MongoDB and Docker</title>
      <author>Francesco Ciulla</author>
      <pubDate>Fri, 26 Nov 2021 14:38:30 +0000</pubDate>
      <link>https://dev.to/francescoxx/crud-api-using-nestjs-mongodb-and-docker-39jm</link>
      <guid>https://dev.to/francescoxx/crud-api-using-nestjs-mongodb-and-docker-39jm</guid>
      <description>&lt;p&gt;In this article, we will set some CRUD API using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NestJS (NodeJS Framework)&lt;/li&gt;
&lt;li&gt;Mongoose (ODM that helps you to create a Schema based on the Model)&lt;/li&gt;
&lt;li&gt;MongoDB (NoSQL Database)&lt;/li&gt;
&lt;li&gt;Docker (Platform to deploy applications using containers)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Video Version: &lt;a href="https://youtu.be/2eY_iQ9iCtE"&gt;https://youtu.be/2eY_iQ9iCtE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/2eY_iQ9iCtE"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SqqZbGrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637937405008/ft4jl4QS2.png" alt="image.png" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Repository: &lt;a href="https://github.com/FrancescoXX/nest-docker"&gt;https://github.com/FrancescoXX/nest-docker&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Prerequisite: NodeJs installed, Docker (Docker desktop on windows/Mac Machines, Docker installed natively on Linux)&lt;/p&gt;

&lt;p&gt;But you can follow way better if you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Know how to run a "hello world" application using NestJS&lt;/li&gt;
&lt;li&gt;Know what MongoDB Atlas is and how it works&lt;/li&gt;
&lt;li&gt;Have an idea of what Mongoose is&lt;/li&gt;
&lt;li&gt;Know what a Dockerfile and a Dockerfile is&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#nestjs"&gt;
  &lt;/a&gt;
  NestJS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VK0B2MQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611143647173/upHLKKOgs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VK0B2MQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611143647173/upHLKKOgs.png" alt="image.png" width="782" height="304"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NestJs is a Node.js framework for building efficient and scalable applications, with full support to Typescript. It has a CLI you can use to generate projects and block easily and It uses express under the hood but has many interesting features like the building blocks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Modules&lt;/li&gt;
&lt;li&gt;Providers&lt;/li&gt;
&lt;li&gt;Controllers&lt;/li&gt;
&lt;li&gt;Services&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
  &lt;a href="#mongoose"&gt;
  &lt;/a&gt;
  Mongoose
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s7mrHDLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611144288219/UhL2jsSdK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7mrHDLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611144288219/UhL2jsSdK.png" alt="image.png" width="772" height="254"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mongoose is an ODM (Object Data Modeling) javascript library for MongoDB and Node.&lt;/p&gt;

&lt;p&gt;It is used to manage data relationships, uses Schemas and helps you to connect to a mongo db using mongo DRIVER&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mongodb"&gt;
  &lt;/a&gt;
  MongoDB
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---1ALHkRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611144597161/QGFJuh1z9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1ALHkRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611144597161/QGFJuh1z9.png" alt="image.png" width="770" height="233"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MongoDB is a NoSQL database. It stores documents and by using a Json-like object structure it's very easy to use with a Node application&lt;/p&gt;

&lt;p&gt;In this example, we will use MongoDB Atlas, which is a cloud solution and it's perfect for an example. But of course, we could use it locally, even better if inside a docker container.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  DOCKER
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--knKF1BKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1610521677853/SGKWuYsvU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--knKF1BKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1610521677853/SGKWuYsvU.png" alt="image.png" width="776" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker is a platform to build run and share application using the idea of containers. If you want a brief introduction, here is a short video&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lotuI2Ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1610522007247/lu2KkUl9j.png" alt="IMAGE ALT TEXT HERE" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/eN_O4zd4D9o"&gt;https://youtu.be/eN_O4zd4D9o&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  Project Setup
&lt;/h3&gt;

&lt;p&gt;Install NestJS CLI&lt;/p&gt;

&lt;p&gt;NestJS comes with an easy to use CLI, that you can install globally (or locally) and it helps you to get started and use NestJS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g @nestjs/cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new nest project (a new folder will be created)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nest new nest-mongo-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the project with your favorite IDE. &lt;br&gt;
If you have VS Code, you can type&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;code nest-mongo-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install dependencies&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install mongoose  @nestjs/mongoose 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check if it's running, just type&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nest start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And check localhost:3000&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SdeEfka2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611134919429/2TF1RYaJ1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SdeEfka2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611134919429/2TF1RYaJ1.png" alt="image.png" width="748" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you see something like that, you can keep going :)&lt;/p&gt;

&lt;p&gt;From the '/nest-mongo-docker' folder, using the nest CLI, we can generate files for the resource we want to create:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a controller&lt;/li&gt;
&lt;li&gt;a service&lt;/li&gt;
&lt;li&gt;a module
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nest generate controller &lt;span class="nb"&gt;users&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nest generate service &lt;span class="nb"&gt;users&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nest generate module &lt;span class="nb"&gt;users&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the &lt;code&gt;src/users&lt;/code&gt; folder and let's create a user.module.ts file. From the command line, you can type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch src/users/user.model.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our project structure should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kcHeOwZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611136117342/0Eb9sEdO_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kcHeOwZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611136117342/0Eb9sEdO_.png" alt="image.png" width="467" height="844"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#model"&gt;
  &lt;/a&gt;
  Model
&lt;/h3&gt;

&lt;p&gt;in the users.model.ts, we can create a model for the resource we want to use.&lt;br&gt;
We will use a 'user' resource, with name, surname, and points, of the type string, string, and number respectively. Please note that here we are not using Typescript types, but plain JavaScript ones.&lt;/p&gt;

&lt;p&gt;We don't need to add the "id" primary key in the schema, because it will be generated by Mongoose&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UserSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Document&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#service"&gt;
  &lt;/a&gt;
  Service
&lt;/h3&gt;

&lt;p&gt;We will use a Nest Service, which will be called by the controller functions.&lt;/p&gt;

&lt;p&gt;Using the Mongoose library, we can easily work with objects in the Mongo Database&lt;/p&gt;

&lt;p&gt;We can also import "NotFoundException" to have better error Handling in our application.&lt;/p&gt;

&lt;p&gt;users.service.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Injectable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;InjectModel&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Model&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./user.model&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UsersService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(@&lt;/span&gt;&lt;span class="nd"&gt;InjectModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;userModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * Create a new user
   * @param name
   * @param email
   * @param password
   */&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createdUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userModel&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;createdUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * Find all users
   */&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#controller"&gt;
  &lt;/a&gt;
  Controller
&lt;/h2&gt;

&lt;p&gt;Let's work on the Controller. NestJs forces us to create a solid structure for our HTTP requests, and it uses decorators for HTTP verbs.&lt;/p&gt;

&lt;p&gt;We will create 2 endpoints&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get All Users&lt;/li&gt;
&lt;li&gt;Create a new User (a Post request passing the new users value in the body)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;in the users.controller.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UsersService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./users.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UsersController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;usersService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UsersService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;createOneUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;generatedId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;usersService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createOneUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;generatedId&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;getAllUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;usersService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAllUsers&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#module"&gt;
  &lt;/a&gt;
  Module
&lt;/h2&gt;

&lt;p&gt;The UsersController and UsersService can be imported as a Module, and in this Module we can define some environment variables, to define the connection with the Mongo DB:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MONGO_ATLAS_USER&lt;/li&gt;
&lt;li&gt;MONGO_ATLAS_PASSWORD&lt;/li&gt;
&lt;li&gt;MONGO_ATLAS_DB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can change this, and they must match the user and password you have on The MongoDB ATLAS&lt;/p&gt;

&lt;p&gt;in the users.module.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Module&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MongooseModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UserSchema&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./user.model&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UsersController&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./users.controller&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UsersService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./users.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;MongooseModule&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forFeature&lt;/span&gt;&lt;span class="p"&gt;([{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UserSchema&lt;/span&gt; &lt;span class="p"&gt;}]),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;controllers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;UsersController&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;UsersService&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UsersModule&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the app.module.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Module&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppController&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.controller&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UsersModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./users/users.module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MongooseModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;UsersModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;MongooseModule&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forRoot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="c1"&gt;//Replace this line with the one Cluster &amp;gt; Connect &amp;gt; Connect your Application&lt;/span&gt;
      &lt;span class="s2"&gt;`mongodb+srv://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGO_ATLAS_USER&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGO_ATLAS_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;@cluster0.suflu.mongodb.net/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGO_ATLAS_DB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?retryWrites=true&amp;amp;w=majority`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;controllers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AppController&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AppService&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppModule&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to replace the line inside the forRoot method accordingly to your application.&lt;/p&gt;

&lt;p&gt;To check that, go to Atlas DB site, Cluster &amp;gt; Connect &amp;gt; Connect your application, and copy the line below.&lt;/p&gt;

&lt;p&gt;replace username, password and database using JavaScript Template literal. This is useful to pass the values from env variable instead of hardcoding them here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KuzpYGRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611140608819/O13JjJaq8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KuzpYGRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611140608819/O13JjJaq8.png" alt="image.png" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ATLAS DB Setup&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/cloud/atlas/lp/try2?utm_source=google&amp;amp;utm_campaign=gs_emea_italy_search_brand_atlas_desktop&amp;amp;utm_term=mongodbatlas&amp;amp;utm_medium=cpc_paid_search&amp;amp;utm_ad=e&amp;amp;utm_ad_campaign_id=1718986540&amp;amp;gclid=EAIaIQobChMI7-GGl6mq7gIVFbd3Ch2hogE3EAAYASAAEgKNVPD_BwE"&gt;https://www.mongodb.com/cloud/atlas/lp/try2?utm_source=google&amp;amp;utm_campaign=gs_emea_italy_search_brand_atlas_desktop&amp;amp;utm_term=mongodbatlas&amp;amp;utm_medium=cpc_paid_search&amp;amp;utm_ad=e&amp;amp;utm_ad_campaign_id=1718986540&amp;amp;gclid=EAIaIQobChMI7-GGl6mq7gIVFbd3Ch2hogE3EAAYASAAEgKNVPD_BwE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DOCKER&lt;/p&gt;

&lt;p&gt;let's create 3 files to containerize our nest js application&lt;/p&gt;

&lt;p&gt;Dockerfile&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;FROM node:14

RUN npm i &lt;span class="nt"&gt;-g&lt;/span&gt; @nestjs/cli

COPY package.json &lt;span class="nb"&gt;.&lt;/span&gt;

RUN npm &lt;span class="nb"&gt;install

&lt;/span&gt;COPY &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt;

EXPOSE 3000

CMD &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"nest"&lt;/span&gt;, &lt;span class="s2"&gt;"start"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note the 3rd line:&lt;/p&gt;

&lt;p&gt;This is specific to NestJs, and we need to add this one in order to operate with the Nest CLI inside the container &lt;/p&gt;

&lt;p&gt;the .dockerignore&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node_modules
dist
.git
.vscode
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The docker-compose.yml&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;#docker-compose file&lt;/span&gt;
&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;nestapp&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nestapp&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nestapp:1.0.0&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
      &lt;span class="na"&gt;dockerfile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Dockerfile&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3000:3000"&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the .env file:&lt;/p&gt;

&lt;p&gt;Replace the XXXXX with your MongoDB Atlas User and Password&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGO_ATLAS_USER=XXXX
MONGO_ATLAS_PASSWORD=XXXXXX
MONGO_ATLAS_DB=nest-mongo-docker-db
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace  with your password in MongoDB ATLAS.&lt;/p&gt;

&lt;p&gt;You can find it on Atlas Site, under "Database Access"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AF-v7UDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611140321956/blYeo9rPX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AF-v7UDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611140321956/blYeo9rPX.png" alt="image.png" width="880" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also replace the "image" value with something like:&lt;/p&gt;

&lt;p&gt;docklerhubuser/nest-mongo:0.0.1&lt;/p&gt;

&lt;p&gt;time to run our application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;--build&lt;/span&gt; nest_mongo_backend
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;check if the app is up and running using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker ps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ri7OTKAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141034363/ttkwltjTN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ri7OTKAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141034363/ttkwltjTN.png" alt="image.png" width="880" height="45"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#postman-mongodb-atlas"&gt;
  &lt;/a&gt;
  POSTMAN / MONGODB ATLAS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--snDITVPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141114083/dHcmJFXY8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--snDITVPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141114083/dHcmJFXY8.png" alt="image.png" width="880" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will use Postman, but you can use a whenever tool you want&lt;/p&gt;

&lt;p&gt;let's make a GET request like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pQf08mvB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141195953/JStPWmJPe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pQf08mvB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141195953/JStPWmJPe.png" alt="image.png" width="880" height="387"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;our users are empty.&lt;/p&gt;

&lt;p&gt;We can confirm this by checking on Mongo  Atlas&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YhEP2-kr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141258601/W1EqSzFDy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YhEP2-kr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141258601/W1EqSzFDy.png" alt="image.png" width="880" height="315"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on "Collections"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2bPf4lp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141327011/CEauJwFmb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2bPf4lp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141327011/CEauJwFmb.png" alt="image.png" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the users list is empty&lt;/p&gt;

&lt;p&gt;Let's create 3 users with a POST request, using POSTMAN.&lt;br&gt;
Here is an example of one of the 3&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QZ7XU19O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141529719/lVHr79TXJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QZ7XU19O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141529719/lVHr79TXJ.png" alt="image.png" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's check again if we have new users&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pb29GZSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141625857/D8Zc9QZQh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pb29GZSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141625857/D8Zc9QZQh.png" alt="image.png" width="880" height="625"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's check on Atlas&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--crMBRhbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141655899/tiJeumlHY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--crMBRhbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1611141655899/tiJeumlHY.png" alt="image.png" width="880" height="773"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Version: &lt;a href="https://youtu.be/2eY_iQ9iCtE"&gt;https://youtu.be/2eY_iQ9iCtE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/2eY_iQ9iCtE"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SqqZbGrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637937405008/ft4jl4QS2.png" alt="image.png" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Repository: &lt;a href="https://github.com/FrancescoXX/nest-docker"&gt;https://github.com/FrancescoXX/nest-docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If this article has been interesting, consider becoming a GitHub Sponsor: &lt;a href="https://github.com/sponsors/FrancescoXX"&gt;https://github.com/sponsors/FrancescoXX&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>mongodb</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Como criar arquivos de layout Magento 2</title>
      <author>Lucas Teixeira dos Santos Santana</author>
      <pubDate>Fri, 26 Nov 2021 14:35:41 +0000</pubDate>
      <link>https://dev.to/santanaluc94/como-criar-arquivos-de-layout-magento-2-1i69</link>
      <guid>https://dev.to/santanaluc94/como-criar-arquivos-de-layout-magento-2-1i69</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contextualizando"&gt;
  &lt;/a&gt;
  Contextualizando
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#o-que-%C3%A9-a-visualiza%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  O que é a Visualização?
&lt;/h3&gt;

&lt;p&gt;A visualização (&lt;em&gt;view&lt;/em&gt;) faz parte da camada de controle do padrão de arquitetura de software MVC (&lt;em&gt;Model&lt;/em&gt;-&lt;em&gt;Controller&lt;/em&gt;-&lt;em&gt;View&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;A camada de visualização é responsável por uma interface, onde o usuário pode interagir, e exibir os dados da camada de modelo (&lt;em&gt;Model&lt;/em&gt;). Os dados, quando alterados na camda de modelo, devem refletir os novos valores na camada de visualização.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#c%C3%B3digo"&gt;
  &lt;/a&gt;
  Código
&lt;/h2&gt;

&lt;p&gt;O &lt;strong&gt;Layout&lt;/strong&gt; é o principal caminho da camada de visão no módulo. O arquivo de &lt;em&gt;layout&lt;/em&gt; fornece a estrutura para páginas web usando um arquivo XML que identifica todos os contêineres e blocos que compõem a página, deve ser localizado como: &lt;code&gt;\{Vendor}\{Module}\view\{area}\layout\{route_id}_{controller_directory}_{controller_name}.xml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O caminho da área pode ser &lt;em&gt;frontend&lt;/em&gt; ou &lt;em&gt;adminhtml&lt;/em&gt; que define onde o &lt;em&gt;layout&lt;/em&gt; será aplicado. Para inserir blocos no painel administrativo do Magento utilizá-se a área &lt;em&gt;adminhtml&lt;/em&gt;, e para inserir blocos na parte visual da loja do site utilizá-se a área &lt;em&gt;frontend&lt;/em&gt;. Existe um arquivo de layout especial, o &lt;code&gt;default.xml&lt;/code&gt;, que é utilizado quando é necessário fazer uma alteração em todas as páginas da sua área.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;layout&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt; &lt;span class="na"&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span class="s"&gt;"urn:magento:framework:View/Layout/etc/layout_generic.xsd"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;referenceContainer&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{container_name}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;uiComponent&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{ui_component_name}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;block&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor}\{Module}\Block\{Directory}\{Class}"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{block_name}"&lt;/span&gt; &lt;span class="na"&gt;template=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor_Module}::{path}/{file_name}.phtml"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;block&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{block_name}"&lt;/span&gt; &lt;span class="na"&gt;template=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor_Module}::{path}/{file_name}.phtml"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;argument&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{view_model_name}"&lt;/span&gt; &lt;span class="na"&gt;xsi:type=&lt;/span&gt;&lt;span class="s"&gt;"object"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{Vendor}\{Module}\ViewModel\{ClassName}&lt;span class="nt"&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/block&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;referenceBlock&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{block_name}"&lt;/span&gt; &lt;span class="na"&gt;template=&lt;/span&gt;&lt;span class="s"&gt;"Vendor_Module::{path}/{file_name}.phtml"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;container&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{container_name}"&lt;/span&gt; &lt;span class="na"&gt;as=&lt;/span&gt;&lt;span class="s"&gt;"{alias_name}"&lt;/span&gt; &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;"{Label Name}"&lt;/span&gt; &lt;span class="na"&gt;htmlTag=&lt;/span&gt;&lt;span class="s"&gt;"{tag_name}"&lt;/span&gt; &lt;span class="na"&gt;htmlClass=&lt;/span&gt;&lt;span class="s"&gt;"{class-name}"&lt;/span&gt; &lt;span class="na"&gt;htmlId=&lt;/span&gt;&lt;span class="s"&gt;"{idName}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;uiComponent&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{ui_component_name}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;block&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor}\{Module}\Block\{Directory}\{Class}"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{block_name}"&lt;/span&gt; &lt;span class="na"&gt;template=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor_Module}::{path}/{file_name}.phtml"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;block&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{block_name}"&lt;/span&gt; &lt;span class="na"&gt;template=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor_Module}::{path}/{file_name}.phtml"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;argument&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{view_model_name}"&lt;/span&gt; &lt;span class="na"&gt;xsi:type=&lt;/span&gt;&lt;span class="s"&gt;"object"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{Vendor}\{Module}\ViewModel\{ClassName}&lt;span class="nt"&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/block&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;referenceBlock&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"{block_name}"&lt;/span&gt; &lt;span class="na"&gt;template=&lt;/span&gt;&lt;span class="s"&gt;"Vendor_Module::{path}/{file_name}.phtml"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/container&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/referenceContainer&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#move"&gt;
  &lt;/a&gt;
  Move
&lt;/h3&gt;

&lt;p&gt;O arquivo &lt;em&gt;layout&lt;/em&gt; fornece a estrutura para páginas web usando um arquivo XML que identifica todos os contêineres e blocos que compõem a página.&lt;/p&gt;

&lt;p&gt;O nó &lt;code&gt;&amp;lt;move&amp;gt;&lt;/code&gt; muda a ordem de um bloco ou contêiner específico já declarado como filho de outro específico elemento. Caso o elemento não for definido, este nó será ignorada na renderização. Durante a geração do &lt;em&gt;layout&lt;/em&gt;, o nó &lt;code&gt;&amp;lt;move&amp;gt;&lt;/code&gt; é processado antes do nó  &lt;code&gt;&amp;lt;remove&amp;gt;&lt;/code&gt;. Isso significa que se algum elemento for movido para outro elemento programado para ser removido, o elemento movido será removido junto.&lt;/p&gt;

&lt;p&gt;Se o atributo &lt;code&gt;as&lt;/code&gt; não for definido, o valor atual do alias do elemento será usado. Se isso não for possível, o valor do nome do atributo usado em seu lugar.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#atributos-do-n%C3%B3-move"&gt;
  &lt;/a&gt;
  Atributos do nó ‘move’
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;th&gt;Valor&lt;/th&gt;
&lt;th&gt;Obrigatório?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;element&lt;/td&gt;
&lt;td&gt;Nome do elemento que será movido.&lt;/td&gt;
&lt;td&gt;Nome do elemento.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;destination&lt;/td&gt;
&lt;td&gt;Nome do elemento pai que receberá o elemento.&lt;/td&gt;
&lt;td&gt;Nome do elemento.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;as&lt;/td&gt;
&lt;td&gt;Alias ou nome do elemento na nova localização.&lt;/td&gt;
&lt;td&gt;0-9, A-Z, a-z, sublinhado (_), ponto (.), sinal de menos (-). Deve iniciar com letras. Case-sensitive.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;after&lt;/td&gt;
&lt;td&gt;Específica a posição do elemento relativa aos seus irmãos. Use o sinal de menos (-) para posicionar o elemento depois de todos os outros elementos irmãos do mesmo nível de aninhamento. Se o atributo for omitido, o elemento será exibido depois de todos os elementos irmãos.&lt;/td&gt;
&lt;td&gt;Nome do elemento.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;before&lt;/td&gt;
&lt;td&gt;Específica a posição do elemento relativa aos seus irmãos. Use o sinal de menos (-) para posicionar o elemento antes de todos os outros elementos irmãos do mesmo nível de aninhamento. Se o atributo for omitido, o elemento será exibido depois de todos os elementos irmãos.&lt;/td&gt;
&lt;td&gt;Nome do elemento.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#remover"&gt;
  &lt;/a&gt;
  Remover
&lt;/h3&gt;

&lt;p&gt;O nó &lt;code&gt;&amp;lt;remove&amp;gt;&lt;/code&gt; é usado somente para remover os recursos estáticos vinculados a uma seção &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; da página (CSS, JS, etc). Para remover blocos ou contêineres, use o atributo &lt;code&gt;remove&lt;/code&gt; nos nós &lt;code&gt;&amp;lt;referenceBlock&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;referenceContainer&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update
&lt;/h3&gt;

&lt;p&gt;O nó &lt;code&gt;&amp;lt;update&amp;gt;&lt;/code&gt; inclui um específico arquivo de &lt;em&gt;layout&lt;/em&gt;. O atributo &lt;code&gt;handle&lt;/code&gt; específica qual layout será incluído. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cont%C3%AAiner"&gt;
  &lt;/a&gt;
  Contêiner
&lt;/h3&gt;

&lt;p&gt;Contêineres atribuem a estrutura do conteúdo para a página usando nós dentro do arquivo &lt;em&gt;layout&lt;/em&gt; XML. Um contêiner não possui conteúdo adicional, exceto o conteúdo incluído no elemento, mas que encapsula os elementos de blocos e outros contêineres.&lt;/p&gt;

&lt;p&gt;Um contêiner renderiza um elemento filho durante a geração da saída de visualização. O elemento gerado pode estar vazio ou pode conter um conjunto arbitrário de elementos &lt;code&gt;&amp;lt;block&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;container&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;referenceBlock&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;referenceContainer&amp;gt;&lt;/code&gt;. Se o contêiner estiver vazio e não houver filhos disponíveis, o contêiner não será exibido no código fonte do navegador.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#atributos-do-n%C3%B3-container"&gt;
  &lt;/a&gt;
  Atributos do nó ‘container’
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Atributo&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;th&gt;Valor&lt;/th&gt;
&lt;th&gt;Obrigatório?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Nome que poderá ser usado para endereçar o contêiner. O nome deve ser único por página gerada. Se não for especificado, será gerado automaticamente.&lt;/td&gt;
&lt;td&gt;0-9, A-Z, a-z, sublinhado (_), ponto (.), sinal de menos (-). Deve iniciar com letras. Case-sensitive.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;label&lt;/td&gt;
&lt;td&gt;Descreve a finalidade do contêiner.&lt;/td&gt;
&lt;td&gt;Qualquer um.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;before&lt;/td&gt;
&lt;td&gt;Usado para posicionar o contêiner antes de um elemento com o mesmo pai. O nome do elemento ou alias é especificado como valor. Use o sinal de menos (-) para posicionar o contêiner antes de todos os outros elementos do mesmo nível de aninhamento.&lt;/td&gt;
&lt;td&gt;Nome do elemento ou sinal de menos (-).&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;after&lt;/td&gt;
&lt;td&gt;Usado para posicionar o contêiner depois de um elemento com o mesmo pai. O nome do elemento ou alias é especificado como valor. Use o sinal de menos (-) para posicionar o contêiner depois de todos os outros elementos do mesmo nível de aninhamento.&lt;/td&gt;
&lt;td&gt;Nome do elemento ou sinal de menos (-).&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;as&lt;/td&gt;
&lt;td&gt;Um alias que serve para identificar no escopo o elemento.&lt;/td&gt;
&lt;td&gt;0-9, A-Z, a-z, sublinhado (_), ponto (.), sinal de menos (-). Deve iniciar com letras. Case-sensitive.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;Define se o elemento root deve ser gerado. Se sim, o elemento será adicionado à lista de saída (se não for especificado, o elemento pai é responsável por renderizar seus filhos).&lt;/td&gt;
&lt;td&gt;Qualquer valor, exceto toHtml obsoletos ("1" é o valor recomendado).&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;htmlTag&lt;/td&gt;
&lt;td&gt;Parâmetro de saída. Se especificado, a saída é agrupada dentro da tag HTML especificada.&lt;/td&gt;
&lt;td&gt;aside, dd, div, dl, fieldset, main, nav, header, footer, ol, p, section, table, tfoot e ul&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;htmlId&lt;/td&gt;
&lt;td&gt;Parâmetro de saída. Se especificado, a saída é agrupado. Se não houver nenhum elemento agrupado, este atributo não tem efeito.&lt;/td&gt;
&lt;td&gt;Qualquer id válido para HTML5.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;htmlClass&lt;/td&gt;
&lt;td&gt;Parâmetro de saída. Se especificado, a saída é agrupado. Se não houver nenhum elemento agrupado, este atributo não tem efeito.&lt;/td&gt;
&lt;td&gt;Qualquer id válido para HTML5.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#bloco"&gt;
  &lt;/a&gt;
  Bloco
&lt;/h3&gt;

&lt;p&gt;Blocos renderizam conteúdos dos elementos da interface dos usuários na página utilizando nós &lt;code&gt;&amp;lt;block&amp;gt;&lt;/code&gt; dentro do arquivo &lt;em&gt;layout&lt;/em&gt; XML. Blocos usam templates para gerar o HTML e serem inseridos no pai da estrutura do bloco.&lt;/p&gt;

&lt;p&gt;O nó &lt;code&gt;block&lt;/code&gt; é uma unidade de saída da página que renderiza algum conteúdo (qualquer coisa visualmente tangível para o usuário final).&lt;/p&gt;

&lt;p&gt;Blocos são uma unidade de construção fundamental para layouts no Magento. Eles são o link entre a classe de Bloco do PHP (que contém o lógica do negócio) e o &lt;em&gt;template&lt;/em&gt; (que renderiza o conteúdo). Blocos podem ter diversas ramificações (filhos, netos, etc).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;É recomendável sempre adicionar um atributo &lt;code&gt;name&lt;/code&gt; ao bloco, ou o Magento nomeará aleatoriamente.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Se não for especificado, um nome automático será atribuído no formato ANONYMOUS_{n}.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#atributos-do-n%C3%B3-block"&gt;
  &lt;/a&gt;
  Atributos do nó ‘block’
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Atributo&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;th&gt;Valor&lt;/th&gt;
&lt;th&gt;Obrigatório?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;before&lt;/td&gt;
&lt;td&gt;Usado para posicionar o bloco antes de um elemento com o mesmo pai. O nome do elemento ou alias é especificado como valor. Use o sinal de menos (-) para posicionar o bloco antes de todos os outros elementos do mesmo nível de aninhamento.&lt;/td&gt;
&lt;td&gt;Nome do elemento ou sinal de menos (-).&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;after&lt;/td&gt;
&lt;td&gt;Usado para posicionar o bloco depois de um elemento com o mesmo pai. O nome do elemento ou alias é especificado como valor. Use o sinal de menos (-) para posicionar o bloco depoi de todos os outros elementos do mesmo nível de aninhamento.&lt;/td&gt;
&lt;td&gt;Nome do elemento ou sinal de menos (-).&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;template&lt;/td&gt;
&lt;td&gt;Um template que representa a funcionalidade do bloco para o qual o atributo é atribuído. Se o atributo for omitido, o bloco não renderizará nenhuma saída, a menos que o bloco (ou pai) tenha a variável $_template definida corretamente.&lt;/td&gt;
&lt;td&gt;{Vendor}_{Module}::{pastas}/{arquivo}.phtml&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;as&lt;/td&gt;
&lt;td&gt;Um alias que serve para identificar no escopo o elemento.&lt;/td&gt;
&lt;td&gt;0-9, A-Z, a-z, sublinhado (_), ponto (.), sinal de menos (-). Deve iniciar com letras. Case-sensitive.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cacheable&lt;/td&gt;
&lt;td&gt;Define se o emento bloco é cacheavel. Isto não pode ser usado para fins de desenvolvimento e tornar dinâmicos os elementos necessários da página.&lt;/td&gt;
&lt;td&gt;true (padrão) / false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ifconfig&lt;/td&gt;
&lt;td&gt;Faz a visibilidade do bloco depender de uma configuração.&lt;/td&gt;
&lt;td&gt;Caminho da configuração.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Dados podem ser passados do arquivo &lt;em&gt;layout&lt;/em&gt; XML para o bloco usando o nó &lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt; no nó filho. Os valores dos argumentos definidos em um arquivo de layout podem ser acessados em &lt;em&gt;templates&lt;/em&gt; usando os métodos &lt;code&gt;$block-&amp;gt;getData('{argument_name}')&lt;/code&gt; e &lt;code&gt;$block-&amp;gt;hasData('{argument_name}')&lt;/code&gt; (retorna um valor boleano verificando se o valor foi definido). O &lt;code&gt;{argument_name}&lt;/code&gt; é obtido do atributo &lt;code&gt;name&lt;/code&gt; do nó &lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#argumentos-do-n%C3%B3-block"&gt;
  &lt;/a&gt;
  Argumentos do nó ‘block’
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Atributo&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;th&gt;Valor&lt;/th&gt;
&lt;th&gt;Obrigatório?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Nome do argumento.&lt;/td&gt;
&lt;td&gt;0-9, A-Z, a-z, sublinhado (_), ponto (.), sinal de menos (-). Deve iniciar com letras. Case-sensitive.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shared&lt;/td&gt;
&lt;td&gt;Se falso, cria uma nova instância do bloco.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;translate&lt;/td&gt;
&lt;td&gt;Específica se a valor (deve ser tipo string) será traduzido.&lt;/td&gt;
&lt;td&gt;true (padrão) / false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xsi:type&lt;/td&gt;
&lt;td&gt;Tipo do argumento.&lt;/td&gt;
&lt;td&gt;string, boolean, object, number, null, array, options, url, helper&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Referências
&lt;/h3&gt;

&lt;p&gt;Para atualizar contêineres e blocos são utilizados os nós &lt;code&gt;&amp;lt;referenceBlock&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;referenceContainer&amp;gt;&lt;/code&gt;. O nó &lt;code&gt;&amp;lt;referenceBlock&amp;gt;&lt;/code&gt; contém todos os atributos do nó &lt;code&gt;&amp;lt;block&amp;gt;&lt;/code&gt; e o nó &lt;code&gt;&amp;lt;referenceContainer&amp;gt;&lt;/code&gt; contém todos os atributos do nó &lt;code&gt;&amp;lt;container&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#atributos-das-refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Atributos das Referências
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Atributo&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;th&gt;Valor&lt;/th&gt;
&lt;th&gt;Obrigatório?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;remove&lt;/td&gt;
&lt;td&gt;Permite remover ou cancelar a remoção do elemento. Quando um contêiner é removido, os elementos filhos são removidos também.&lt;/td&gt;
&lt;td&gt;true / false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;display&lt;/td&gt;
&lt;td&gt;Permite desabilitar a renderização de um específico bloco ou contêiner com todos os seus filhos. Os objetos PHP do bloco, contêiner ou seus filhos ainda serão gerados e disponibilizados para manipulação.&lt;/td&gt;
&lt;td&gt;true / false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#finalizando"&gt;
  &lt;/a&gt;
  Finalizando
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Valores entre chaves (&lt;code&gt;{test}&lt;/code&gt;) devem ser alterados na implementação do código.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#habilitando-as-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Habilitando as alterações
&lt;/h3&gt;

&lt;p&gt;Execute o comando PHP para limpar todos os caches de armazenamento em cache do processos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php bin/magento cache:clean
php bin/magento flush
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#diret%C3%B3rios-e-arquivos"&gt;
  &lt;/a&gt;
  Diretórios e Arquivos
&lt;/h3&gt;

&lt;p&gt;Segue a a lista de diretórios e arquivos que devem ser criados.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- app/
  - code/
    - {Vendor}/
        - {Module}/
          - etc/
            - module.xml
          - view/
            - {area}/
              - layout/
               - {route_id}_{controller_directory}_{controller_name}.xml
          - registration.php
          - composer.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>php</category>
      <category>magento2</category>
      <category>braziliandevs</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Jamstack, a11y, Cookies and Coronavirus — a look back at Fast Forward 2021 Day 2</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Fri, 26 Nov 2021 14:35:15 +0000</pubDate>
      <link>https://dev.to/contentful/jamstack-a11y-cookies-and-coronavirus-a-look-back-at-fast-forward-2021-day-2-2l2j</link>
      <guid>https://dev.to/contentful/jamstack-a11y-cookies-and-coronavirus-a-look-back-at-fast-forward-2021-day-2-2l2j</guid>
      <description>&lt;p&gt;On Day 2 of &lt;a href="https://www.contentful.com/fast-forward/"&gt;Fast Forward 2021&lt;/a&gt; we brought you a veritable smorgasbord of delicious content from the developer community. From accessibility to blockchain, content preview time machines to cookie consent, from jQuery to the evolution of the Jamstack — sit back, relax and enjoy some fantastic technical talks from the wonderful Contentful community.&lt;/p&gt;

&lt;p&gt;I had the absolute honor and privilege to deliver the Opening Keynote and MC Day 2 of Fast Forward 2021 — LIVE from an industrial warehouse in Berlin — with my incredible colleague, &lt;a href="https://twitter.com/stefanjudis"&gt;Stefan Judis&lt;/a&gt;. If you missed it, or if you’d like to catch up on-demand, here’s a round-up of the stellar content we featured from the developer community at Fast Forward 2021.&lt;/p&gt;

&lt;p&gt;Apart from getting stranded in Zurich on my way home and almost missing my son’s fourth birthday party 😯 , Fast Forward 2021 Day 2 was a resounding success! But before we get started with the round-up of the day, I’d like to extend a huge thanks to the incredible production crew in Berlin and California — I really enjoyed having you in my ear all day! — and the Field Marketing team at Contentful who made this all possible. Last but not least — a huge thank you and “Go team!” to all the developers from the community who recorded some fantastic talks on a diverse set of topics, to help us bring you a day packed full of technical content on web development, accessibility, the Jamstack and getting the most out of Contentful.&lt;/p&gt;

&lt;p&gt;Are you ready? Let’s relive the day!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opening-keynote"&gt;
  &lt;/a&gt;
  Opening Keynote
&lt;/h2&gt;

&lt;p&gt;Stefan and I opened Day 2 of Fast Forward by taking you on a journey through time where we explored how content management and software development evolved over the last ten years. The need for flexible content started with native mobile apps in 2011 — when I was attempting to solve the problem of content management with iframes and text files uploaded over FTP! But the solution to this problem became so much more and helped shape the developer experience we know and love today. Watch the Opening Keynote to find out how Contentful’s idea of API-first JSON-based content unlocked speed, flexibility, developer satisfaction and most importantly — innovation on the web.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Jao0PFVketw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-and-running-websites-at-speed-and-scale-with-contentful"&gt;
  &lt;/a&gt;
  Building and Running Websites at Speed and Scale with Contentful
&lt;/h2&gt;

&lt;p&gt;Next up we heard from &lt;a href="https://www.linkedin.com/in/klausunterkircher/"&gt;Klaus Unterkircher&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/kaczergis/"&gt;Michał Kaczergis&lt;/a&gt; from Bright IT. Quickly launching and working with large scale websites can be challenging. As experienced Contentful builders, they created BrightSite — an app tailored specifically to Contentful that helps developers and editors alike with launching and working with websites. In this talk Klaus and  Michał show you how you can create faster and better websites at speed and scale with Contentful.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3A_3hp6j8R0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from-microsoft-word-to-contentful-what-i-learned-in-my-first-365-days"&gt;
  &lt;/a&gt;
  From Microsoft Word to Contentful: What I Learned in My First 365 Days
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/kel_196"&gt;Dr. Kelvin Wong&lt;/a&gt;, senior product manager at RMS, shared with us his journey in learning how to optimize Contentful for industry-specific workflows and internal processes. Moving away from a traditional CMS to a headless platform such as Contentful can be a daunting experience. While the benefits are clear, it’s not always obvious how to get started with this new technology and the pitfalls to avoid. Alongside implementing the new technology, internal processes and workflows need to be reimagined and redefined. Most importantly, Kelvin reminds us that no one should be left behind as technology changes the way we work. In this talk, learn about the lessons Kelvin learned in his first year working with the Contentful platform, including how the team redefined and transformed their editorial workflow, their hands-on experiences of content modeling, and most importantly, and how to create a foundation that can scale and enable future growth.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4d9u-CnvPrs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new-at-contentful"&gt;
  &lt;/a&gt;
  What's New at Contentful
&lt;/h2&gt;

&lt;p&gt;Next up, my colleague &lt;a href="https://twitter.com/musicalwebdev"&gt;Brittany Walker&lt;/a&gt;, developer advocate at Contentful, gives us the low-down on some brand new Contentful features we released at Fast Forward 2021.&lt;/p&gt;

&lt;p&gt;First up is app sharing and custom app icons. The Contentful App Framework lets you use your favorite tools and frameworks and easily connect them to Contentful to customize the editor experience in the web UI and streamline your workflows. We’ve got a huge collection of curated apps in the app marketplace ranging from Cloudinary, Google Analytics, Gatsby Cloud, Netlify, Shopify — and more — and you can also build your own custom integrations using our open-source tools. But what if you’ve built a custom app that you’d like to share with the world? Here’s where app sharing comes in! You can now share your Contentful apps across organizations using a link, or an embeddable share button. You can also add custom icons to your apps, making it easy for people to find what they’re looking for when browsing their list of apps.&lt;/p&gt;

&lt;p&gt;And finally, the Contentful Images API now supports AVIF! This means you can return your images stored in Contentful in the new AVIF format via the REST API or GraphQL API. But what is AVIF — and should you be using it right now? Brittany gives us a round-up of browser support for AVIF and how you can load responsive images using the HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Bs7Qsh5RSB0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-a-content-time-machine-the-ultimate-editor-preview-tool"&gt;
  &lt;/a&gt;
  Building a Content Time Machine: The Ultimate Editor Preview Tool
&lt;/h2&gt;

&lt;p&gt;Keeping on top of a multi-channel content schedule is one of the biggest challenges content editors face, and digital agency DEPT was tasked with solving this problem for one of the UK’s leading TV broadcasters. In this talk, &lt;a href="https://www.linkedin.com/in/jonathanwhiteside/"&gt;Jonathan Whiteside&lt;/a&gt;, global SVP for technology and engineering at DEPT demonstrates how they leveraged Contentful APIs to power a bespoke content time machine that enables editors to plan and preview content across numerous channels at different points in the future. You’ll learn the optimum API combination to build your own time machine, as well as the content model to power it.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aJ2Ez11Br_A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#increasing-access-to-your-website-with-prefersreduceddata"&gt;
  &lt;/a&gt;
  Increasing Access to Your Website with “prefers-reduced-data”
&lt;/h2&gt;

&lt;p&gt;You’ll often hear me shouting from the rooftops about accessibility, and this talk from &lt;a href="https://twitter.com/kilianvalkhof"&gt;Kilian Valkhof&lt;/a&gt;, founder at Polypane, gives us an exciting new insight in how the web is moving forward and allowing developers to make the web even more accessible. The upcoming &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-data"&gt;prefers-reduced-data&lt;/a&gt; media query will improve accessibility in the “more people can now enter the building” meaning of accessibility. In this talk, Killian teaches us how to start implementing this experimental feature now to make your website available to even more people when the feature finally lands. I can’t wait to use it!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zfmJqIphFTM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blog-final-final-final-my-journey-from-medium-to-contentful"&gt;
  &lt;/a&gt;
  Blog Final Final Final — My Journey from Medium to Contentful
&lt;/h2&gt;

&lt;p&gt;Blogging is a popular way for developers to document their learning journeys and publish their portfolios. But if you’re just starting out — the technology options for blogging can seem overwhelming! Join &lt;a href="https://twitter.com/LuceCarter1"&gt;Luce Carter&lt;/a&gt;, developer advocate at MongoDB, who shares her journey in finding the ideal technology solution for her blog — which ultimately ended at Contentful. Discover the pros and cons of hosting providers, front-end framework choices and content management, and feel empowered to start blogging! &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Dzi-K3IsodQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-blockchain-with-javascript"&gt;
  &lt;/a&gt;
  Building Blockchain with JavaScript
&lt;/h2&gt;

&lt;p&gt;Over the past few years, blockchain has gained popularity in the tech ecosystem, the financial world, and the content creation space. As software engineers specializing in the web, we may not understand its relevance. Should we learn blockchain? How does it work? Why do people use it? Why is it gaining such traction? In this futuristic talk, &lt;a href="https://twitter.com/blackgirlbytes"&gt;Rizel Scarlett&lt;/a&gt;, developer advocate at GitHub, explores these questions and shows us how to build a blockchain simulation of our own!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/daH7YEUXiEY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-be-truly-accessible"&gt;
  &lt;/a&gt;
  How to be Truly Accessible
&lt;/h2&gt;

&lt;p&gt;Why is accessibility important? Who do I need to be accessible to? What are some really simple, quick and cheap ways I can improve accessibility? Here’s another important talk on accessibility from &lt;a href="https://twitter.com/SparkleClass"&gt;Rachel Morgan-Trimmer&lt;/a&gt;. In this session, Rachel answers these questions and gives us a valuable collection of accessibility tips and insights into inclusion you can start using straight away — both in web development and in the wider world.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8AbpBfSQetk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jquery-is-not-dead-and-thats-fine"&gt;
  &lt;/a&gt;
  jQuery is Not Dead, and That’s Fine
&lt;/h2&gt;

&lt;p&gt;If you’re working on a large enterprise application on the web — you might still using jQuery — and that’s fine! At conferences, we usually show the latest and greatest tech and often downplay older technologies in the developer ecosystem. But people still use these tools and frameworks, and shaming them is harmful to the developer community. In this talk, &lt;a href="https://twitter.com/jayne_mast"&gt;Jayne Mast&lt;/a&gt;, engineering manager at Confrere shares her own personal story of how she got confronted with gatekeeping and elitism, how it affected her confidence, and what we can all do to avoid this and promote inclusion in the technology space.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3lzCUtLum9k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consent-management-thats-the-way-the-cookie-crumbles"&gt;
  &lt;/a&gt;
  Consent Management: That’s the Way the Cookie Crumbles
&lt;/h2&gt;

&lt;p&gt;How many cookie banners have you dismissed today? A clean user experience is crucial in enabling visitors to your websites to find their way around, but websites in 2021 are cluttered with distracting, annoying pop-ups in order to comply with tracking consent regulations. In this talk, &lt;a href="https://twitter.com/bencmbrook"&gt;Ben Brook&lt;/a&gt;, CEO and co-founder of Transcend explains how their engineering team discovered a way to eliminate those annoying pop-ups while maintaining regulatory compliance. Learn about the technical challenges of providing a compliant and positive user experience for website tracking consent, new ways to think about consent without popups and how to implement a technical roadmap for deploying this capability on your own websites. I can’t wait until this is the new standard on the web!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MXgl4ESBHPk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-modern-dxp-how-jamstack-will-change-the-world"&gt;
  &lt;/a&gt;
  The Modern DXP — How Jamstack will Change the World
&lt;/h2&gt;

&lt;p&gt;Circling back to the theme of our Opening Keynote, &lt;a href="https://twitter.com/timbenniks"&gt;Tim Bennicks&lt;/a&gt;, principal developer advocate at Uniform showcases the Digital Experience Platform of the future — the Jamstack. In this talk, Tim outlines the old way of building digital experiences and how they’ve been modernized with new technology. We can now build global platforms and ecommerce sites at scale with the tools we love: Contentful, Vue, React, CDNs at the edge, serverless and more. The old-school enterprise software that has historically been used to shape your online shopping experience is no more and the Jamstack is ready to take on — and out-perform — the status quo in enterprise software. The time is now for Jamstack!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5cr-IHZF3FA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#productivity-in-a-time-of-coronavirus"&gt;
  &lt;/a&gt;
  Productivity in a Time of Coronavirus
&lt;/h2&gt;

&lt;p&gt;And finally, we wrapped up the day with &lt;a href="https://twitter.com/shanselman"&gt;Scott Hanselman&lt;/a&gt;, partner program manager at Microsoft and thought leader on the culture of working. Many of us have transitioned to working remotely since 2020, and it can be hard to switch off and get away from our screens, leaving us feeling drained, fatigued and unproductive. In this closing keynote, Scott decries the dangers of “hustle culture” and shares unique, actionable tips for Productivity in a Time of Coronavirus that will leave you feeling renewed. I definitely needed this!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/hqKrhz_KmSI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-a-wrap"&gt;
  &lt;/a&gt;
  That’s a wrap!
&lt;/h2&gt;

&lt;p&gt;I can honestly say that Fast Forward 2021 was the highlight of my year. From everyone here at Contentful, we hope you enjoyed the day whether you experienced it live or on demand. And if you want to experience the day in full as it happened — including latte art, AMAs from our engineers, and all the silly bits Stefan and I had fun with, &lt;a href="https://www.contentful.com/fast-forward/"&gt;you can watch the full conference here&lt;/a&gt;. See you around, party people!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>a11y</category>
      <category>javascript</category>
      <category>jamstack</category>
    </item>
    <item>
      <title>Upgrade EC-CUBE 3.0.15 -&gt;4.1.0</title>
      <author>amit-dave</author>
      <pubDate>Fri, 26 Nov 2021 14:34:21 +0000</pubDate>
      <link>https://dev.to/amitdave/upgrade-ec-cube-3015-410-4e8c</link>
      <guid>https://dev.to/amitdave/upgrade-ec-cube-3015-410-4e8c</guid>
      <description>&lt;p&gt;Hello Everyone i want upgrade ec-cube version 3.0.15 into latest version 4.1.0 . try hard but not getting any solution can you help me to find out solution &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#eccube-eccube3-eccube4"&gt;
  &lt;/a&gt;
  ec-cube #ec-cube3 #ec-cube4
&lt;/h1&gt;

</description>
    </item>
    <item>
      <title>Mistakes To Avoid In Your HTML Code</title>
      <author>Joseph Mania</author>
      <pubDate>Fri, 26 Nov 2021 14:33:36 +0000</pubDate>
      <link>https://dev.to/techmaniacc/mistakes-to-avoid-in-your-html-code-3h4i</link>
      <guid>https://dev.to/techmaniacc/mistakes-to-avoid-in-your-html-code-3h4i</guid>
      <description>&lt;p&gt;The way you structure your HTML code will affect search engine optimization results. It’s always to use the right syntax while writing your code. HTML is not a programming language, hence you won’t get warnings about syntax errors. However, it will affect the general memory space and loading time.&lt;/p&gt;

&lt;p&gt;Don’t forget the DOCTYPE&lt;/p&gt;

&lt;p&gt;This word will give browser information on the version of HTML being employed. Your code might look invalid if the DOCTYPE is missing. The browser decides to make an assumption that will affect some tags. HTML online validator should be your tool to check the syntax loopholes.&lt;/p&gt;

&lt;p&gt;Use a list while listing things rather than line breaks.&lt;/p&gt;

&lt;p&gt;Of course, using &lt;br&gt; will output the same results, but it’s not a good practice. If you want to list items, just stick to using the ordered or unordered list.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mango&lt;/li&gt;
&lt;li&gt;Bananas&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Avoid the use of &lt;b&gt; and &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The purpose of external CSS is to style up play the role of such tags. If it’s necessary, use the &lt;strong&gt; tag. But the best practice is to use the CSS font-weight and font style. They will perform a similar task but follow the correct semantics.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;.Avoid using multiple line breaks&lt;/p&gt;

&lt;p&gt;The work of line breaks is to knock the next word to the next line, Don’t make gaps using the &lt;br&gt;. If you need more space, adjust the margin style in the CSS file. Or you can use other tags like paragraph&lt;/p&gt;
&lt;p&gt;.&lt;br&gt;
Try your best to avoid inline styling&lt;br&gt;
Kindly, if it’s not necessary, just avoid it. Create a class within the tag and style this in an external CSS. Inline CSS makes your code look bad and long. Remember, it might give the maintainer hard work while making some changes.&lt;/p&gt;

&lt;p&gt;In modern site, don’t use the  and  tag&lt;/p&gt;

&lt;p&gt;In the official latest release of HTML standard by W3C colostrum, the tags were not included, meaning they are outdated. Many users have considered them unimpressive and ugly. They also have side effects for some people with eye problems.&lt;/p&gt;

&lt;p&gt;Don’t use any deprecated elements&lt;/p&gt;

&lt;p&gt;This is where technology becomes challenging, you have to stay updated about it. Focus on the new and emphasized tags in the official latest release. After almost two years, the HTML community always releases a new version of their rules, so go through it.&lt;/p&gt;

&lt;p&gt;Don’t forget to close any tags, especially the HTML&lt;/p&gt;

&lt;p&gt;If you are using VS Code editor, it has autocompletion. But try your best to close the recommended tags. We have others like hr, br, and image which do not necessarily require closing. This can mess up your design. A clear check will help you avoid future errors that might be untraceable. You can decide to use the current indentation to align all the tags in a good manner, for visibility.&lt;/p&gt;

&lt;p&gt;Neglecting comments&lt;/p&gt;

&lt;p&gt;Please! Please! A good coder must always write his/her comments the right way. They will help in shortening your documentation. Writing a clear comment will give the maintainer a humble time while making some changes. It makes your code clean and you look professional. Also, in case of any mistake in the text, you will easily find the specific things you are searching for.&lt;/p&gt;

&lt;p&gt;Don’t forget about the Alt attribute&lt;/p&gt;

&lt;p&gt;This is one of the most common and worst mistakes designers forget. ALT attribute might look inferior, but if you understand its importance, you will never degrade it again. Have you ever loaded a page and an image fails to appear? The ALT text included in the image line will appear in that position. It tells the user what the image was all about. This will help the user to know if the image was of importance or not.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Using GitHub actions to enhance profile readmes </title>
      <author>Anurag Hazra</author>
      <pubDate>Fri, 26 Nov 2021 14:19:48 +0000</pubDate>
      <link>https://dev.to/anuraghazra/using-github-actions-to-enhance-profile-readmes-13m4</link>
      <guid>https://dev.to/anuraghazra/using-github-actions-to-enhance-profile-readmes-13m4</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;One of the coolest features of GitHub is &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;profile readmes&lt;/a&gt;, It helps developers present their work in a cohesive manner and works as a gateway to showcase skill and dedication. &lt;/p&gt;

&lt;p&gt;From the start I was always intrigued by making the profile readmes more dynamic so that's why I built &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;github-readme-stats&lt;/a&gt; It's been used by thousands of people and gives insights on their progress in open source. &lt;/p&gt;

&lt;p&gt;That's why I decided to create this github action, peerlist-profile-action. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You might ask what is peerlist?&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://peerlist.io/"&gt;Peerlist.io&lt;/a&gt; is a modern platform for developers to showcase their work, achievements and resume all at once place. It's a great platform it's currently in beta and shows great potential. &lt;/p&gt;

&lt;p&gt;peerlist-profile-action is a simple action which uses &lt;a href="https://github.com/puppeteer/puppeteer"&gt;puppeteer&lt;/a&gt; to automate and generate dynamic resumes which you can embed in your profile readme as an image. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d4fcORqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rf7v22we21ms0qbdmr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d4fcORqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rf7v22we21ms0qbdmr3.png" alt="Anurag Hazra's peerlist" width="880" height="301"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It works by simply installing the action on your github profile readme, see &lt;a href="https://github.com/anuraghazra/peerlist-profile-action#usage"&gt;usage guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the action is finished running, it will automatically upload and commit the dynamically generated profile readme png file to your repository which you can embed like so&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;![&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;./images/peerlist-profile.png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;](https://peerlist.io/your_username)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Easy to setup&lt;/li&gt;
&lt;li&gt;Multiple themes&lt;/li&gt;
&lt;li&gt;Different sizes&lt;/li&gt;
&lt;li&gt;Options to customize &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#themes"&gt;
  &lt;/a&gt;
  Themes
&lt;/h3&gt;

&lt;p&gt;Simply pass &lt;code&gt;theme_name&lt;/code&gt; option to the action inputs and you can change the theme of the card as you like. &lt;br&gt;
Here's the list of &lt;a href="https://github.com/anuraghazra/github-readme-stats/tree/master/themes"&gt;all available themes.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4dZlVUVV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hn2vgs174kzt55cb8mt5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4dZlVUVV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hn2vgs174kzt55cb8mt5.png" alt="Anurag Hazra's peerlist" width="880" height="300"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#multiple-sizes"&gt;
  &lt;/a&gt;
  Multiple Sizes
&lt;/h3&gt;

&lt;p&gt;Passing the &lt;code&gt;card_size&lt;/code&gt; argument you can change the size of the card, currently we support "sm", "md", "lg" or any number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6tx9IBu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irsbfet15028e06nn8tl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6tx9IBu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irsbfet15028e06nn8tl.png" alt="Anurag Hazra's peerlist" width="796" height="552"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#customizations"&gt;
  &lt;/a&gt;
  Customizations
&lt;/h3&gt;

&lt;p&gt;If you want to customize the colors and build your own theme you can also do so by passing these inputs: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;output_path - Output path to upload the image&lt;/li&gt;
&lt;li&gt;title_color - Card's title color (without #)&lt;/li&gt;
&lt;li&gt;text_color - Body text color (without #)&lt;/li&gt;
&lt;li&gt;bg_color - Card's background color (without #)&lt;/li&gt;
&lt;li&gt;branch - Branch which you want to upload the image, change it depending on your main branch (default: main)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Wacky Wildcards&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;

&lt;p&gt;Usage: &lt;br&gt;
Inside .github/workflows folder create a new workflow called peerlist-overview.yml and copy paste this content:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;peerlist-overview'&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# run every day at 12&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*"&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;peerlist-run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Generate peerlist overview&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;browser-actions/setup-chrome@latest&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;anuraghazra/peerlist-profile-action@master'&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;anuraghazra'&lt;/span&gt; &lt;span class="c1"&gt;# your peerlist username&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/anuraghazra"&gt;
        anuraghazra
      &lt;/a&gt; / &lt;a href="https://github.com/anuraghazra/peerlist-profile-action"&gt;
        peerlist-profile-action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
 &lt;a rel="noopener noreferrer" href="https://github.com/anuraghazra/peerlist-profile-action./images/logo.svg"&gt;&lt;img width="220px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8xAyC1Nn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/anuraghazra/peerlist-profile-action./images/logo.svg" alt="Peerlist Profile Action"&gt;&lt;/a&gt;
 &lt;/p&gt;
&lt;h2&gt;
Peerlist Profile Action&lt;/h2&gt;
 &lt;p&gt;Get dynamically generated peerlist.io profile overview on your readmes!&lt;/p&gt;
  &lt;p&gt;
    &lt;a href="https://github.com/anuraghazra/peerlist-profile-action/issues"&gt;
      &lt;img alt="Issues" src="https://camo.githubusercontent.com/1a93cb585f9e9245a8c1b78219aac28518de02bab489e115f1a59ac74495b599/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f616e7572616768617a72612f706565726c6973742d70726f66696c652d616374696f6e3f636f6c6f723d303038386666"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/anuraghazra/peerlist-profile-action/pulls"&gt;
      &lt;img alt="GitHub pull requests" src="https://camo.githubusercontent.com/1c3aaaa8c77b4ebaaf358099b3dd56e74af2ef419b86e93f751e4b160cce7a26/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f616e7572616768617a72612f706565726c6973742d70726f66696c652d616374696f6e3f636f6c6f723d303038386666"&gt;
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;a href="https://github.com/anuraghazra/peerlist-profile-action#demo"&gt;View Demo&lt;/a&gt;
    ·
    &lt;a href="https://github.com/anuraghazra/peerlist-profile-action/issues/new/choose"&gt;Report Bug&lt;/a&gt;
    ·
    &lt;a href="https://github.com/anuraghazra/peerlist-profile-action/issues/new/choose"&gt;Request Feature&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Love the project? Please consider &lt;a href="https://github.com/sponsors/anuraghazra"&gt;sponsoring&lt;/a&gt; to help it improve
&lt;/p&gt;

&lt;p&gt;A GitHub action to get &lt;a href="https://peerlist.io" rel="nofollow"&gt;peerlist.io&lt;/a&gt; profile overview on your readmes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://peerlist.io/anuraghazra" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fj353JuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/anuraghazra/peerlist-profile-action./images/peerlist-profile.png" alt="Anurag Hazra's peerlist profile"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;see &lt;a href="https://github.com/anuraghazra/peerlist-profile-action./action.yml"&gt;action.yml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inside &lt;code&gt;.github/workflows&lt;/code&gt; folder create a new workflow called &lt;code&gt;peerlist-overview.yml&lt;/code&gt; and copy paste this content:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;peerlist-overview&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-ent"&gt;on&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;schedule&lt;/span&gt;:
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run every day at 12&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;cron&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0 0 * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  
&lt;span class="pl-ent"&gt;jobs&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;peerlist-run&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Generate peerlist overview&lt;/span&gt;
    &lt;span class="pl-ent"&gt;runs-on&lt;/span&gt;: &lt;span class="pl-s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="pl-ent"&gt;steps&lt;/span&gt;:
      - &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;actions/checkout@v2&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;browser-actions/setup-chrome@latest&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;anuraghazra/peerlist-profile-action@master&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-ent"&gt;with&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;token&lt;/span&gt;: &lt;span class="pl-s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
          &lt;span class="pl-ent"&gt;username&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;anuraghazra&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; your peerlist username&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;After running the action, it will automatically create a commit and upload it to the repo. And you can import that image to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/anuraghazra/peerlist-profile-action"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Open source libraries &amp;amp; action used in this project: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Since I used puppeteer, to install chrome in github action ci, I used browser-actions/setup-chrome action from 
&lt;a href="https://github.com/browser-actions/setup-chrome"&gt;https://github.com/browser-actions/setup-chrome&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>actionshackathon21</category>
    </item>
    <item>
      <title>Build a typescript component library with Vite</title>
      <author>Josip Ivancic</author>
      <pubDate>Fri, 26 Nov 2021 14:19:11 +0000</pubDate>
      <link>https://dev.to/josip2312/build-a-typescript-component-library-with-vite-58dh</link>
      <guid>https://dev.to/josip2312/build-a-typescript-component-library-with-vite-58dh</guid>
      <description>&lt;p&gt;Example repo at: &lt;a href="https://github.com/josip2312/typescript-lib-vite"&gt;https://github.com/josip2312/typescript-lib-vite&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-vite"&gt;
  &lt;/a&gt;
  Why Vite
&lt;/h2&gt;

&lt;p&gt;Vite ships with a pre-configured build command that has many performance optimizations out of the box. It uses &lt;a href="https://rollupjs.org/guide/en/"&gt;Rollup&lt;/a&gt; under the hood and provides an abstraction over the default rollup configuration. This makes it way easier to set up the build step without knowing all the internals of rollup.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#components"&gt;
  &lt;/a&gt;
  Components
&lt;/h3&gt;

&lt;p&gt;For the sake of the example, I'm going to create a simple button component, but the build step remains the same for any number of components. In this example, I'm using the &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; syntax.&lt;/p&gt;

&lt;p&gt;Component code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;setup&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;reactive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;withDefaults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;defineProps&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;primary&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reactive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;{ primary }"&amp;gt;
    &lt;span class="nt"&gt;&amp;lt;slot&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nc"&gt;.btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.btn.primary&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;239&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;27%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, I'm going to create the entry file for the library where all the components will be exported.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.ts&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;MyButton&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./MyButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#vite-config"&gt;
  &lt;/a&gt;
  Vite config
&lt;/h3&gt;

&lt;p&gt;Vite is a fast new build tool that is intended for modern web projects. It uses native ES modules and provides a blazing-fast dev server and hot module replacement. Learn more about it on the official &lt;a href="https://vitejs.dev/guide/"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vite is framework agnostic which means you can use it with most frontend frameworks, and the build config is pretty much the same. There is a &lt;a href="https://vitejs.dev/guide/build.html#library-mode"&gt;section&lt;/a&gt; on the official website which describes different build modes, our interest is in the library mode build.&lt;/p&gt;

&lt;p&gt;So we need to add the following to our &lt;code&gt;vite.config.ts&lt;/code&gt; (or &lt;code&gt;.js&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// vite.config.ts&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineConfig&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;defineConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;lib&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/index.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MyComponentLib&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`my-component-lib.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.js`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;rollupOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// make sure to externalize deps that shouldn't be bundled&lt;/span&gt;
      &lt;span class="c1"&gt;// into your library&lt;/span&gt;
      &lt;span class="na"&gt;external&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Provide global variables to use in the UMD build&lt;/span&gt;
        &lt;span class="c1"&gt;// for externalized deps&lt;/span&gt;
        &lt;span class="na"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you now run &lt;code&gt;npm run build&lt;/code&gt; you should get the output in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're getting an error regarding &lt;code&gt;__dirname&lt;/code&gt; or &lt;code&gt;path&lt;/code&gt; you need to install node type declarations&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; @types/node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#packagejson-config"&gt;
  &lt;/a&gt;
  Package.json config
&lt;/h3&gt;

&lt;p&gt;Before testing our build output we need to configure the &lt;code&gt;package.json&lt;/code&gt; to point at correct built files. We are defining the entry point to the library.&lt;br&gt;
You can learn more about what each option does by hovering the properties in VS Code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"my-component-lib"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;should&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;field&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;package.json&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"files"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"dist"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./dist/my-component-lib.umd.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./dist/my-component-lib.es.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"exports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"import"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./dist/my-component-lib.es.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"require"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./dist/my-component-lib.umd.js"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#test-build-output"&gt;
  &lt;/a&gt;
  Test build output
&lt;/h3&gt;

&lt;p&gt;To test the library locally we can zip the dist file, before running the below change the &lt;code&gt;name&lt;/code&gt; field in your &lt;code&gt;package.json&lt;/code&gt; to your preferred library name.&lt;/p&gt;

&lt;p&gt;Run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm pack
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command provides us with a zipped file that we can map to the library dependency in the &lt;code&gt;package.json&lt;/code&gt;. After running this add the following to the &lt;code&gt;dependencies&lt;/code&gt; field:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"my-component-lib"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"my-component-lib-0.0.0.tgz"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After importing the library it should now work.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you run into dependency errors try deleting the zipped file and packing it again, or deleting the &lt;code&gt;package.lock.json&lt;/code&gt; and &lt;code&gt;node_modules&lt;/code&gt; and running&lt;code&gt;npm install&lt;/code&gt; again.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;setup&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MyButton&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;my-component-lib&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/node_modules/my-component-lib/dist/style.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, you'll notice we get an error regarding missing declaration files, we will solve this in the next step.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typescript-declarations"&gt;
  &lt;/a&gt;
  Typescript declarations
&lt;/h3&gt;

&lt;p&gt;To solve the typescript declarations error, we need to generate type declaration files for the components. We will do this using the &lt;code&gt;vue-tsc&lt;/code&gt; package.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Make sure to update &lt;code&gt;vue-tsc&lt;/code&gt; to a newer version since the &lt;code&gt;create-vue&lt;/code&gt; CLI defaults to an older version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You need to add the following to &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"outDir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dist"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"declaration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change the build script to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vite build &amp;amp;&amp;amp; vue-tsc --emitDeclarationOnly &amp;amp;&amp;amp; mv dist/src dist/types"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, set the path for the type declarations inside &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"types"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./dist/types/index.d.ts"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last command in the build script moves the types to a &lt;code&gt;types&lt;/code&gt; directory, by default they would be in a &lt;code&gt;src&lt;/code&gt; directory since that is our target inside the &lt;code&gt;tsconfig&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you now repeat the build and pack process, the type error should not be there.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If it's still there try deleting your &lt;code&gt;node_modules&lt;/code&gt; and &lt;code&gt;package.lock.json&lt;/code&gt; and installing the packages again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#publish-to-npm"&gt;
  &lt;/a&gt;
  Publish to npm
&lt;/h3&gt;

&lt;p&gt;Everything is already set up for publishing, you can just authenticate with npm and publish.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm login &lt;span class="c"&gt;# authenticate&lt;/span&gt;

npm publish &lt;span class="c"&gt;# publish&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Vite makes it incredibly easy to build a component library with a very slim config. Coupled with the amazing development experience it provides I can conclude it is the next big thing in frontend development.&lt;/p&gt;

</description>
      <category>vite</category>
      <category>typescript</category>
    </item>
  </channel>
</rss>
