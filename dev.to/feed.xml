<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Web Accessibility Cheat Sheet</title>
      <author>Carlo Gino Catapang</author>
      <pubDate>Mon, 27 Dec 2021 05:00:05 +0000</pubDate>
      <link>https://dev.to/codegino/web-accessibility-cheat-sheet-3774</link>
      <guid>https://dev.to/codegino/web-accessibility-cheat-sheet-3774</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aria"&gt;ARIA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#navigation"&gt;Navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#semantic"&gt;Semantic Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#visual"&gt;Visual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#language"&gt;Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#forms"&gt;Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alt"&gt;Alternate Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#others"&gt;Other accessibility consideration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://developers.google.com/web/tools/lighthouse"&gt;Lighthouse&lt;/a&gt; to check your website's accessibility. You will see the same exact information in the Accessibility report.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Accessibility is the practice of making your websites usable by as many people as possible. We traditionally think of this as being about people with disabilities, but the practice of making sites accessible also benefits other groups such as those using mobile devices, or those with slow network connections.&lt;/p&gt;



&lt;p&gt;You might also think of accessibility as treating everyone the same, and giving them equal opportunities, no matter what their ability or circumstances. Just as it is wrong to exclude someone from a physical building because they are in a wheelchair (modern public buildings generally have wheelchair ramps or elevators), it is also not right to exclude someone from a website because they have a visual impairment. We are all different, but we are all human, and therefore have the same human rights.&lt;/p&gt;



&lt;p&gt;To learn more, check &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/What_is_accessibility#so_what_is_accessibility"&gt;this page&lt;/a&gt; where I copy pasted the content above.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#aria-accessible-rich-internet-applications"&gt;
  &lt;/a&gt;
  ARIA (Accessible Rich Internet Applications) &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"&gt;Accessible Rich Internet Applications (ARIA)&lt;/a&gt; is a set of attributes that define ways to make web content and web applications (especially those developed with JavaScript) more accessible to people with disabilities.&lt;/p&gt;



&lt;p&gt;It supplements HTML so that interactions and widgets commonly used in applications can be passed to assistive technologies when there is not otherwise a mechanism. For example, ARIA enables accessible navigation landmarks in HTML4, JavaScript widgets, form hints and error messages, live content updates, and more.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Warning: Many of these widgets were later incorporated into HTML5, and developers should prefer using the correct semantic HTML element over using ARIA, if such an element exists. For instance, native elements have built-in &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets"&gt;keyboard accessibility&lt;/a&gt;, roles and states. However, if you choose to use ARIA, you are responsible for mimicking (the equivalent) browser behavior in script.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-accessibility-guidelines-related-to-aria"&gt;
  &lt;/a&gt;
  Here are some accessibility guidelines related to ARIA:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[aria-*]&lt;/code&gt; attributes match their roles&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each ARIA &lt;code&gt;role&lt;/code&gt; supports a specific subset of &lt;code&gt;aria-*&lt;/code&gt; attributes. Mismatching these invalidates the &lt;code&gt;aria-*&lt;/code&gt; attributes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-allowed-attr/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[aria-hidden="true"]&lt;/code&gt; is not present on the document &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assistive technologies, like screen readers, work inconsistently when &lt;code&gt;aria-hidden="true"&lt;/code&gt; is set on the document &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-hidden-body/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;button&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, and &lt;code&gt;input&lt;/code&gt; elements have accessible names&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When an element doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-name/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;meter&lt;/code&gt;, &lt;code&gt;progressbar&lt;/code&gt;, &lt;code&gt;tooltip&lt;/code&gt;, &lt;code&gt;treeitem&lt;/code&gt;, and &lt;code&gt;menuitem&lt;/code&gt; elements have accessible names&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When an element doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-name/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[aria-hidden="true"]&lt;/code&gt; elements do not contain focusable descendents&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Focusable descendents within an &lt;code&gt;[aria-hidden="true"]&lt;/code&gt; element prevent those interactive elements from being available to users of assistive technologies like screen readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-hidden-focus/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[role]&lt;/code&gt;s have all required &lt;code&gt;[aria-*]&lt;/code&gt; attributes&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some ARIA roles have required attributes that describe the state of the element to screen readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-required-attr/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[role]&lt;/code&gt; values are valid&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ARIA roles must have valid values in order to perform their intended accessibility functions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-roles/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[aria-*]&lt;/code&gt; attributes have valid values&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assistive technologies, like screen readers, can't interpret ARIA attributes with invalid values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-valid-attr-value/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[aria-*]&lt;/code&gt; attributes are valid and not misspelled&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assistive technologies, like screen readers, can't interpret ARIA attributes with invalid names.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-valid-attr/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Elements with an ARIA &lt;code&gt;[role]&lt;/code&gt; that require children to contain a specific &lt;code&gt;[role]&lt;/code&gt; have all required children.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some ARIA parent roles must contain specific child roles to perform their intended accessibility functions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-required-children/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[role]&lt;/code&gt;s are contained by their required parent element&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some ARIA child roles must be contained by specific parent roles to properly perform their intended accessibility functions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-required-parent/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARIA toggle fields have accessible names&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When a toggle field doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/aria-name/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Custom controls have ARIA roles&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Custom interactive controls have appropriate ARIA roles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/custom-control-roles/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARIA IDs are unique&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The value of an ARIA ID must be unique to prevent other instances from being overlooked by assistive technologies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/duplicate-id-aria/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Custom controls have associated labels&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Custom interactive controls have associated labels, provided by aria-label or aria-labelledby.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/custom-controls-labels/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#navigation"&gt;
  &lt;/a&gt;
  Navigation  &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Navigation is the way users find and traverse the different pages available on your site. For this reason, it is imperative that navigation is accessible. By their nature, links are tab-able and all keyboard users and screen readers will read them–so, if your navigation is coded with links, a screen reader should find them.&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#here-are-some-accessibility-guidelines-related-to-navigation"&gt;
  &lt;/a&gt;
  Here are some accessibility guidelines related to navigation:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTML5 landmark elements are used to improve navigation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Landmark elements (&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, etc.) are used to improve the keyboard navigation of the page for assistive technology.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/use-landmarks/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The page contains a heading, skip link, or landmark region&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Adding ways to bypass repetitive content lets keyboard users navigate the page more efficiently.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/bypass/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[accesskey]&lt;/code&gt; values are unique&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Access keys let users quickly focus a part of the page. For proper navigation, each access key must be unique.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/accesskeys/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Visual order on the page follows DOM order&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DOM order matches the visual order, improving navigation for assistive technology.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/visual-order-follows-dom/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The page has a logical tab order&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tabbing through the page follows the visual layout. Users cannot focus elements that are offscreen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/logical-tab-order/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;No element has a &lt;code&gt;[tabindex]&lt;/code&gt; value greater than 0&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A value greater than &lt;code&gt;0&lt;/code&gt; implies an explicit navigation ordering. Although technically valid, this often creates frustrating experiences for users who rely on assistive technologies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/tabindex/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Interactive controls are keyboard focusable&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Custom interactive controls are keyboard focusable and display a focus indicator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/focusable-controls/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The user's focus is directed to new content added to the page&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If new content, such as a dialog, is added to the page, the user's focus is directed to it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/managed-focus/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User focus is not accidentally trapped in a region&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A user can tab into and out of any control or region without accidentally trapping their focus.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/focus-traps/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Buttons have an accessible name&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When a button doesn't have an accessible name, screen readers announce it as "button", making it unusable for users who rely on screen readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/button-name/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#semantic-structure"&gt;
  &lt;/a&gt;
  Semantic structure  &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Structural, semantic HTML is the key starting point toward good accessibility practices. When a screen reader, or any sort of assistive device scans a web page, it gets information about the Document Object Model (DOM), or the HTML structure of the page. No styles or JavaScript will be read by a screen reader.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-accessibility-guidelines-related-to-semantic-structure"&gt;
  &lt;/a&gt;
  Here are some accessibility guidelines related to semantic structure:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Heading elements appear in a sequentially-descending order&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Properly ordered headings that do not skip levels convey the semantic structure of the page, making it easier to navigate and understand when using assistive technologies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/heading-order/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lists contain only &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements and script supporting elements &lt;code&gt;(&amp;lt;script&amp;gt; and &amp;lt;template&amp;gt;)&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Screen readers have a specific way of announcing lists. Ensuring proper list structure aids screen reader output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/list/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;List items &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; are contained within &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; parent elements&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Screen readers require list items (&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;) to be contained within a parent &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; to be announced properly. Learn more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/listitem/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt;'s contain only properly-ordered &lt;code&gt;&amp;lt;dt&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;dd&amp;gt;&lt;/code&gt; groups, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When definition lists are not properly marked up, screen readers may produce confusing or inaccurate output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/definition-list/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Definition list items are wrapped in &lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt; elements&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Definition list items (&lt;code&gt;&amp;lt;dt&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;dd&amp;gt;&lt;/code&gt;) must be wrapped in a parent &lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt; element to ensure that screen readers can properly announce them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/dlitem/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cells in a &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; element that use the &lt;code&gt;[headers]&lt;/code&gt; attribute refer to table cells within the same table.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Screen readers have features to make navigating tables easier. Ensuring &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; cells using the &lt;code&gt;[headers]&lt;/code&gt; attribute only refer to other cells in the same table may improve the experience for screen reader users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/td-headers-attr/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; elements and elements with &lt;code&gt;[role="columnheader"/"rowheader"]&lt;/code&gt; have data cells they describe.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Screen readers have features to make navigating tables easier. Ensuring table headers always refer to some set of cells may improve the experience for screen reader users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/th-has-data-cells/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#visual"&gt;
  &lt;/a&gt;
  Visual  &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-accessibility-guidelines-related-to-visual-consideration"&gt;
  &lt;/a&gt;
  Here are some accessibility guidelines related to visual consideration:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Background and foreground colors have a sufficient contrast ratio&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Low-contrast text is difficult or impossible for many users to read.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/color-contrast/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[user-scalable="no"]&lt;/code&gt; is not used in the &lt;code&gt;&amp;lt;meta name="viewport"&amp;gt;&lt;/code&gt; element and the &lt;code&gt;[maximum-scale]&lt;/code&gt; attribute is not less than 5.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Disabling zooming is problematic for users with low vision who rely on screen magnification to properly see the contents of a web page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/meta-viewport/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#language"&gt;
  &lt;/a&gt;
  Language  &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-accessibility-guidelines-related-to-language"&gt;
  &lt;/a&gt;
  Here are some accessibility guidelines related to language:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element has a valid value for its &lt;code&gt;[lang]&lt;/code&gt; attribute&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Specifying a valid &lt;a href="https://www.w3.org/International/questions/qa-choosing-language-tags#question"&gt;BCP 47 language&lt;/a&gt; helps screen readers announce text properly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/html-lang-valid/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element has a &lt;code&gt;[lang]&lt;/code&gt; attribute&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a page doesn't specify a lang attribute, a screen reader assumes that the page is in the default language that the user chose when setting up the screen reader. If the page isn't actually in the default language, then the screen reader might not announce the page's text correctly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/html-has-lang/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[lang]&lt;/code&gt; attributes have a valid value&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Specifying a valid &lt;a href="https://www.w3.org/International/questions/qa-choosing-language-tags#question"&gt;BCP 47 language&lt;/a&gt; on elements helps ensure that text is pronounced correctly by a screen reader.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/valid-lang/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#forms"&gt;
  &lt;/a&gt;
  Forms  &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Forms are constantly being used to collect information from users: signing up for something, buying something, asking a question, or contacting someone. Since forms are so commonly used, it is imperative to make forms accessible for all users.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-accessibility-guidelines-related-to-forms"&gt;
  &lt;/a&gt;
  Here are some accessibility guidelines related to forms:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;No form fields have multiple labels&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Form fields with multiple labels can be confusingly announced by assistive technologies like screen readers which use either the first, the last, or all of the labels.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/form-field-multiple-labels/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Form elements have associated labels&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Labels ensure that form controls are announced properly by assistive technologies, like screen readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/label/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#alternate-text"&gt;
  &lt;/a&gt;
  Alternate Text  &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Alternative text is a textual substitute for non-text content in web pages.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#alternative-text-serves-several-functions"&gt;
  &lt;/a&gt;
  Alternative text serves several functions:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Screen readers announce alternative text in place of images, helping users with visual or certain cognitive disabilities perceive the content and function of the images.&lt;/li&gt;
&lt;li&gt;If an image fails to load or the user has blocked images, the browser will present the alternative text visually in place of the image.&lt;/li&gt;
&lt;li&gt;Search engines use alternative text and factor it into their assessment of the page purpose and content.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-accessibility-guidelines-related-to-alternate-text"&gt;
  &lt;/a&gt;
  Here are some accessibility guidelines related to alternate text:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Image elements have &lt;code&gt;[alt]&lt;/code&gt; attributes&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Informative elements should aim for short, descriptive alternate text. Decorative elements can be ignored with an empty alt attribute.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/image-alt/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;input type="image"&amp;gt;&lt;/code&gt; elements have &lt;code&gt;[alt]&lt;/code&gt; text&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When an image is being used as an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; button, providing alternative text can help screen reader users understand the purpose of the button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/input-image-alt/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; elements have &lt;code&gt;[alt]&lt;/code&gt; text&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Screen readers cannot translate non-text content. Adding alt text to &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; elements helps screen readers convey meaning to users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/object-alt/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Links have a discernible name&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Link text (and alternate text for images, when used as links) that is discernible, unique, and focusable improves the navigation experience for screen reader users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/link-name/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-accessibility-considerations"&gt;
  &lt;/a&gt;
  Other accessibility considerations  &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Document has a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; element&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The title gives screen reader users an overview of the page, and search engine users rely on it heavily to determine if a page is relevant to their search.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/document-title/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The document does not use &lt;code&gt;&amp;lt;meta http-equiv="refresh"&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Users do not expect a page to refresh automatically, and doing so will move focus back to the top of the page. This may create a frustrating or confusing experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/meta-refresh/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[id]&lt;/code&gt; attributes on active, focusable elements are unique&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All focusable elements must have a unique &lt;code&gt;id&lt;/code&gt; to ensure that they're visible to assistive technologies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/duplicate-id-active/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; elements have a title&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Screen reader users rely on frame titles to describe the contents of frames.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/frame-title/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; elements contain a &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; element with &lt;code&gt;[kind="captions"]&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When a video provides a caption it is easier for deaf and hearing impaired users to access its information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/video-caption/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Interactive elements indicate their purpose and state&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Interactive elements, such as links and buttons, should indicate their state and be distinguishable from non-interactive elements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/interactive-element-affordance/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Offscreen content is hidden from assistive technology&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Offscreen content is hidden with display: none or aria-hidden=true.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/offscreen-content-hidden/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Learn more&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#whats-next-more-copypasting"&gt;
  &lt;/a&gt;
  What's next (&lt;em&gt;More copy-pasting&lt;/em&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;[Performance]&lt;a href="https://dev.to/codegino/how-to-improve-the-performance-of-your-website-1637"&gt;https://dev.to/codegino/how-to-improve-the-performance-of-your-website-1637&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Best practices&lt;/li&gt;
&lt;li&gt;SEO&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Control Arduino using Python</title>
      <author>pritudev</author>
      <pubDate>Mon, 27 Dec 2021 02:03:13 +0000</pubDate>
      <link>https://dev.to/pritudev/control-arduino-using-python-4c5g</link>
      <guid>https://dev.to/pritudev/control-arduino-using-python-4c5g</guid>
      <description>&lt;p&gt;Arduino is the most popular thing in those days and you can do so many things using arduino, but using arduino with combination of python gonna blow up i mean you can almost do anything you want using arduino with python and in this blog we are gonna control our led using Arduino UNO, Python and pyfirmata package for arduino.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dr_QHfn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xldw1re0qtsohf6uu2ea.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dr_QHfn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xldw1re0qtsohf6uu2ea.png" alt="Arduino UNO Image" width="677" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is arduino uno make sure to connect arduino uno with your computer via arduino cable. i guess you mught might have some basic knowledge of arduino and python!&lt;/p&gt;

&lt;p&gt;After connecting arduino with python open main arduino software.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GjcknUel--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvpzsvl090m4z72mm04b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjcknUel--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvpzsvl090m4z72mm04b.png" alt="Tools" width="435" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then select COM port where you have connect your arduino mine is COM4 you should check yours!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h-Lcd_my--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3me4irchlxktedsrkkd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h-Lcd_my--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3me4irchlxktedsrkkd.png" alt="Select COM PORT" width="540" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then you gotta click on Tools and then Manage Libraries, or press &lt;code&gt;ctrl + shift + i&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R6wvmQIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wokidthuah9chkyk3yr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6wvmQIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wokidthuah9chkyk3yr.png" alt="Manage Libraries" width="439" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will open tab something like this,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zaRzNDMV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bb1acsq3lf128udt7k5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zaRzNDMV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bb1acsq3lf128udt7k5.png" alt="Manage Libraries tab" width="783" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click on search bar and search for &lt;code&gt;firmata&lt;/code&gt;, select the latest version and press &lt;code&gt;enter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yc0SUD6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndt1jynaiuryjotyb7br.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yc0SUD6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndt1jynaiuryjotyb7br.png" alt="Install firmata" width="748" height="132"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;nice now close that tab and go to file tab, then goto examples then firmata then standardFirmata.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0IIpdA-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l1usb9734352ii5it5wy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0IIpdA-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l1usb9734352ii5it5wy.png" alt="Image description" width="573" height="717"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will get some code in your arduino IDE&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_lW8FAMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s08vflqgk6jyukcbjnb3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_lW8FAMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s08vflqgk6jyukcbjnb3.png" alt="Arduino Code" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;just hit Upload but make sure that your arduino is connected to your computer perfectly and main COM port is selected!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kr5LMw13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa8pg00vur17xxkx6n3z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kr5LMw13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa8pg00vur17xxkx6n3z.png" alt="HIT Enter" width="210" height="36"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;work of arduino ide is done now open your favourite code editor!&lt;/p&gt;

&lt;p&gt;and create a new python file &lt;code&gt;automation.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;now get an LED yourself and put small rode of led inside gnd port in arduino and pur bigger rode inside digital pin 5.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B-Fg0KrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qc8gmy6ucjdwm824tfhe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B-Fg0KrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qc8gmy6ucjdwm824tfhe.png" alt="Image description" width="475" height="474"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;here resistor is optional!&lt;/p&gt;

&lt;p&gt;now it's time to code in our &lt;code&gt;automation.py&lt;/code&gt; file!&lt;/p&gt;

&lt;p&gt;here is the code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# import modules
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyfirmata&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Arduino&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pyfirmata&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'COM4'&lt;/span&gt; &lt;span class="c1"&gt;#define COM port which you choose in Arduino IDE
&lt;/span&gt;&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="c1"&gt;# Put the number of digital pin where black wire is connected in circuit
&lt;/span&gt;&lt;span class="n"&gt;board&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Arduino&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# define board
&lt;/span&gt;
&lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;digital&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyfirmata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUTPUT&lt;/span&gt; &lt;span class="c1"&gt;# define output mode
&lt;/span&gt;
&lt;span class="c1"&gt;# create function to turn on and off led
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;turn_on_led&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;digital&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 1 means power on
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;turn_off_led&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;digital&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 0 means power off
&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;turn_on_led&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# call the function
&lt;/span&gt;    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# wait for 2 seconds and turn off led! 
&lt;/span&gt;    &lt;span class="n"&gt;turn_off_led&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# call the function
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So yeah that was the whole code and procedure to control LED light using python and arduino make sure to follow!&lt;/p&gt;

</description>
      <category>python</category>
      <category>arduino</category>
    </item>
    <item>
      <title>Scrum terms you should be familiar with as a Software Developer</title>
      <author>Rahul Banerjee</author>
      <pubDate>Mon, 27 Dec 2021 01:29:26 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/scrum-terms-you-should-be-familiar-with-as-a-software-developer-5e69</link>
      <guid>https://dev.to/rahulbanerjee99/scrum-terms-you-should-be-familiar-with-as-a-software-developer-5e69</guid>
      <description>&lt;h2&gt;Who is a Scrum Master and Why do we have Scrum Ceremonies? This is what I asked myself when I first heard those terms&lt;/h2&gt;

&lt;p&gt;I was first introduced to Scrum during my internship. It felt intimidating at first. Terms like Scrum ceremonies, story points, sprints, etc were foreign to me and it took me like a few weeks to understand what they meant and why they were needed. I legit thought scrum ceremonies were for giving awards such as best team member and stuff but it is not. &lt;/p&gt;

&lt;p&gt;Although the best way to learn about these terms is on the job, this article will serve as a gentle introduction on what to expect and hopefully give you some familiarity with some commonly used SCRUM jargon. I am not a project manager nor have I taken any formal training related to Scrum. The content of this article is based on my experience so some of the terms might be overly simplified although they are not. Again, the best way to learn more about Scrum is on the job or from a project manager.&lt;/p&gt;

&lt;h2&gt;What is Scrum and Why is it needed&lt;/h2&gt;

&lt;p&gt;Scrum is a way to organize work. Teams work together and they can change what they are doing if it becomes hard. This is an Agile Methodology, which means the people who make things decide how to make them. They also do not try to make it too big or difficult for themselves. It is an iterative and incremental methodology that allows teams to produce high-quality software products in a short amount of time. The key benefits of using the Scrum framework are that it helps to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Maximize team productivity&lt;/li&gt;
&lt;li&gt;Accelerate project delivery&lt;/li&gt;
&lt;li&gt;Improve product quality&lt;/li&gt;
&lt;li&gt;Facilitate communication and collaboration among team members&lt;/li&gt;
&lt;li&gt;Reduce project risk&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Understand the various roles in a Scrum team&lt;/h2&gt;

&lt;p&gt;There are three key roles in a Scrum team: the product owner, the scrum master, and the development team.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The product owner&lt;/strong&gt;: Responsible for understanding the business goals of the project and ensuring that the team has everything they need to be successful.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The scrum master&lt;/strong&gt;: The person who ensures that everyone on the team is following the rules of Scrum. They also prioritize and organize which tasks each development team member should complete next in order to successfully meet deadlines. They also ensure the team is productive.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The development team&lt;/strong&gt;: The people who are responsible for developing the product, i.e you and me.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Understand how Scrum is used to manage projects&lt;/h2&gt;

&lt;p&gt;In order to understand how Scrum is used to manage projects, it's important to first understand what Scrum actually is.&lt;/p&gt;

&lt;p&gt;Scrum is a framework for managing software development projects. It's an agile methodology, which means that it's designed to be flexible and adaptable to change.&lt;/p&gt;

&lt;p&gt;The basic idea behind Scrum is that the project is divided into a series of short, time-boxed iterations called &lt;strong&gt;sprints&lt;/strong&gt;. At the beginning of each sprint, the team meets and agrees on a set of goals that they want to achieve during that sprint. They then break those goals down into individual tasks, which are assigned to specific team members. The team works together to complete those tasks during the sprint, and at the end of the sprint, they meet again to review what was completed and determine whether or not the goals were achieved. If they are, great! The goal has been accomplished. If it wasn't, then the team discusses why that happened and comes up with a new set of tasks for the next sprint. When each iteration is finished, you have an increment of the product.&lt;/p&gt;

&lt;h2&gt;Some Scrum terms you might hear&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Sprint:&lt;/strong&gt; A sprint is a period of time in Scrum during which the team works on completing their goals for the project. They are usually 2-4 weeks long.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Daily Scrum meeting&lt;/strong&gt;: Also known as the &lt;strong&gt;Daily Standup&lt;/strong&gt;. This is a daily 15-minute meeting, where everyone on the team answers three questions: What did you do yesterday? What are you going to do today? Are there any impediments in your way that prevent you from accomplishing your goals?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Retrospective Meeting&lt;/strong&gt;: This is a meeting at the end of each sprint where everyone on the team discusses what went well during that sprint, what didn't go well, and comes up with ideas for how to improve.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;strong&gt;Scrum Board&lt;/strong&gt;: &lt;/strong&gt;A scrum board is a tool that helps the team track their progress and visually see how they are doing. Typically it at least has three columns: To Do, In Progress, and Done. The team updates the scrum board every day at their Daily Scrum meeting. It might have additional columns as well such as Pull Request Made, Pull Request Approved, etc. This is often automated, i.e whenever you make a PR, you have to tag a task and that task will move from In Progress to Pull Request Made. When someone approves your PR, the task will move to Pull Request Approved, and finally, the task will move to Done when the stakeholders are happy. Some popular services used for Scrum Boards are Jira, GitHub Projects, Azure DevOps, etc. Below is a sample Scrum Board on Jira&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--to2-KZks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.realpythonproject.com/wp-content/uploads/2021/12/JSW-tour-board-1.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--to2-KZks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.realpythonproject.com/wp-content/uploads/2021/12/JSW-tour-board-1.webp" alt="" width="880" height="490"&gt;&lt;/a&gt;Source: &lt;a href="https://www.atlassian.com/software/jira"&gt;https://www.atlassian.com/software/jira&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Time-boxing&lt;/strong&gt;: Time-boxing is the idea that all tasks on the scrum board should have an assigned time for when they should be completed. They can either be broken down into smaller tasks or estimated as a whole. Once the sprint starts, it's important that team members don't spend more than their allotted time on a task. This helps to ensure that tasks stay on track and flow smoothly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Product Backlog&lt;/strong&gt;: This is a list of all items in your project that need to be completed. These can include new features, bugs, or anything else that needs to get done. The Product Owner prioritizes the items in the product backlog, and it is the role of the Team to complete them at their designated priority level. Items that are not completed move up to higher priority levels as they become available.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sprint Backlog&lt;/strong&gt;: This is a list of what needs to be done by the team during the next Sprint, i.e., the week or two weeks that the sprint cycle lasts for. Items at the top of this list are considered to be most important and it is their turn to get completed first. Each item in this list is called a User Story and must be completed during the sprint.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;User Story&lt;/strong&gt;: A description of features or changes that need to be made. These are written by the Product Owner, then taken by the Team who will decide what needs to get done first in order to deliver these requirements (in priority order). The team is responsible for writing their own User Stories to fully understand what they are expected to do. In the picture of scrum board above, each box inside the column is a User Story.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Story Points: &lt;/strong&gt;A measure of how much effort a task takes relative to other tasks. For example, one story point can be equivalent to half a day's work. It is up to the Team members themselves to determine the size and complexity of what needs to get done in order to estimate it properly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Continuous Integration&lt;/strong&gt;: A set of software development practices intended to improve the quality of software releases. It aims at building, testing, and releasing high-quality code in very frequent cycles (such as each check-in resulting in a build) so that when new features are added they add value quickly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Backlog Grooming&lt;/strong&gt;: This is the process in which the Product Owner and Team go through and refine the product backlog in preparation for a Sprint. The Product Owner prioritizes items, while the team makes sure that they fully understand each item. This step helps to ensure that everything that is supposed to be done in the Sprint is clear and understandable.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Velocity&lt;/strong&gt;: A measure of how much work a team can complete in a given period. This is also used to determine how much work can be taken on for a sprint. As this number increases, velocity becomes an increasingly accurate indicator of how much work gets done over time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sprint Burndown&lt;/strong&gt;: This is a graphical representation of how much work the team has completed and how much they still have left to do. It provides visibility into progress, enables realistic forecasting, and also helps the Product Owner plan for future sprints. This also compares how much should be done in order to achieve the sprint goal vs how much is actually done.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;The 3 main Scrum Ceremonies&lt;/h2&gt;

&lt;p&gt;There are 3 key ceremonies that a Scrum Team must conduct as part of the development process. They are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The Daily Standup Meeting or Scrum Standup&lt;/strong&gt; is held at the start of every workday during which each team member must answer three questions: What did I accomplish since yesterday's standup? What will I accomplish before tomorrow's standup? Are there any obstacles in my way? This was discussed in the above section as well.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The Sprint Planning Meeting&lt;/strong&gt; is where the team comes together to review the tasks required for the sprint ahead. This is done by breaking down work items, estimating them with Story Points (see above), then adding them to the Sprint Backlog.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The Sprint Review &lt;/strong&gt;is where the Team demos what they have accomplished for stakeholders of the project. This meeting is not for discussing issues or problems, but rather it's a chance for stakeholders to provide feedback on what's been done so far and give direction on future work that needs to be completed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below is a sample Scrum calendar template. You start off with a Sprint Planning Session and then have daily standups till the end of your sprint. At the end of your sprint, you will have a Sprint Review Meeting. Following which you will have another Sprint Planning Session for the next sprint. Additionally, you might also have a few backlog grooming or backlog refinement sessions in your sprint and a Retrospective meeting at the end of your sprint.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Z0r6iRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.realpythonproject.com/wp-content/uploads/2021/12/3week_sprint1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Z0r6iRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.realpythonproject.com/wp-content/uploads/2021/12/3week_sprint1.png" alt="" width="800" height="519"&gt;&lt;/a&gt;Source: &lt;a href="https://www.agileuprising.com/2017/01/01/sprint-schedule-template/"&gt;https://www.agileuprising.com/2017/01/01/sprint-schedule-template/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Know your goals as a developer for using SCRUM successfully&lt;/h2&gt;

&lt;p&gt;When using SCRUM, it's important for developers to have a clear understanding of their goals. This way, they can use the SCRUM methodology to its fullest potential and ensure that they are constantly making progress on their project. Some goals that developers may want to keep in mind include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Completing tasks in a timely manner&lt;/li&gt;
&lt;li&gt;Ensuring that tasks are properly prioritized&lt;/li&gt;
&lt;li&gt;Continuously integrating new code into the project&lt;/li&gt;
&lt;li&gt;Make sure that all stakeholders are kept up to date on project progress&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many developers have success using the SCRUM methodology by following these simple guidelines. It is important to note that this methodology is not a silver bullet for every project, but rather a useful tool that can help keep projects running smoothly. As long as you use it correctly and follow its principles, then there's no reason why you should not see positive results.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;It is worth noting that this article only provides the basics of Scrum. If you want to learn more about how it can be used for software development, or if you are new to the process and need help getting started with your project management methodology, please reach out to your project manager! I hope this article provides an introduction to SCRUM terms so they don't seem as intimidating next time someone mentions them during a meeting.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codenewbie</category>
      <category>computerscience</category>
      <category>agile</category>
    </item>
    <item>
      <title>2021/2022 Mac -Quick Setup</title>
      <author>Kitty code</author>
      <pubDate>Mon, 27 Dec 2021 00:30:43 +0000</pubDate>
      <link>https://dev.to/kat_coding/new-macbook-quick-setup-2b48</link>
      <guid>https://dev.to/kat_coding/new-macbook-quick-setup-2b48</guid>
      <description>&lt;p&gt;Did anyone else get a new laptop this holiday season? 👀&lt;br&gt;
Here are the steps I follow to get setup quickly!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-show-hidden-folders"&gt;
  &lt;/a&gt;
  1. Show hidden folders
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;chflags nohidden ~/Library&lt;br&gt;
defaults write com.apple.finder AppleShowAllFiles YES&lt;br&gt;
defaults write com.apple.finder ShowPathbar -bool true&lt;br&gt;
defaults write com.apple.finder ShowStatusBar -bool true&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-install-brew"&gt;
  &lt;/a&gt;
  2. Install brew
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check your path and make sure path includes your brew location.

&lt;ul&gt;
&lt;li&gt;Check path: &lt;code&gt;echo $PATH | tr ":" "\n"\n&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Brew location: &lt;code&gt;which brew&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;(Probably something like &lt;code&gt;/opt/homebrew/bin&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;If the location is missing, then add it to your &lt;code&gt;~/.zshrc&lt;/code&gt;, like this: &lt;code&gt;export PATH=/opt/homebrew/bin:$PATH&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-iterm-amp-ohmyzsh-amp-starship"&gt;
  &lt;/a&gt;
  3. iTerm &amp;amp; OhMyZsh &amp;amp; Starship
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;iTerm: &lt;code&gt;brew install --cask iterm2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;OhMyZsh: &lt;code&gt;$ sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Starship: &lt;code&gt;brew install starship&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo 'eval "$(starship init zsh)"' &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(Install font &amp;amp; then change font in iTerm settings)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew tap homebrew/cask-fonts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew install --cask font-hack-nerd-font&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-node-amp-aws-cli-for-aws-development"&gt;
  &lt;/a&gt;
  4. Node &amp;amp; AWS CLI (for AWS development)
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;brew install node@16&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo installer -pkg AWSCLIV2.pkg -target /&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;aws configure&lt;/code&gt; (assuming you already have credentials)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install -g aws-cdk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;auto-complete:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;autoload bashcompinit &amp;amp;&amp;amp; bashcompinit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autoload -Uz compinit &amp;amp;&amp;amp; compinit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;complete -C '/usr/local/bin/aws_completer' aws&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-other-apps"&gt;
  &lt;/a&gt;
  5. Other Apps
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Rectangle (window management): &lt;a href="https://rectangleapp.com/"&gt;https://rectangleapp.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;VSCode: &lt;a href="https://code.visualstudio.com/download"&gt;https://code.visualstudio.com/download&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me know if you have other tips/questions! 😊&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>codenewbie</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 10 Programming Languages You Must Know In 2022🔥</title>
      <author>Ashish Yadav</author>
      <pubDate>Mon, 27 Dec 2021 00:19:41 +0000</pubDate>
      <link>https://dev.to/expoashish/top-10-programming-languages-you-must-know-in-2022-2ig4</link>
      <guid>https://dev.to/expoashish/top-10-programming-languages-you-must-know-in-2022-2ig4</guid>
      <description>&lt;p&gt;In this blog we are going to see top 10 best programming languages for 2022. We will see which programming language is best and their features and application. If you like my post then follow me. Lets Start:-👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-programming-languages-you-must.html"&gt;Top 10 Programming Languages You Must Know In 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/10-best-free-blogging-sites-in-2022.html"&gt;Best Websites for Blogging&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#complete-roadmap-2022"&gt;
  &lt;/a&gt;
  Complete Roadmap 2022:-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-python-programming.html"&gt;Python Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-c-programming.html"&gt;C++ Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/java-complete-roadmap-2022.html"&gt;Java Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-data-structure.html"&gt;Data Structure Complete Roadmap 2022&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-laravel-tutorial-for-developer"&gt;
  &lt;/a&gt;
  Some Laravel Tutorial for developer:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #1)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and_22.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #2)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/advance-laravel-8-interview-questions.html"&gt;Advance Laravel 8 Interview Questions and Answers 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/everything-about-laravel-8-composer.html"&gt;Everything About Laravel 8 Composer 2022 | Composer in Laravel 8&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-jetstream-vs-laravel-ui-vs.html"&gt;Laravel Jetstream vs Laravel ui  vs Breeze&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-concept-and-projects"&gt;
  &lt;/a&gt;
  Python Concept and Projects:-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/10-best-python-libraries-for-machine.html"&gt;10 Best Python Libraries For Machine Learning&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/07/alarm-clock-in-python-with-gui.html"&gt;Alarm Clock in Python with GUI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/06/tic-tac-toe-game-using-pygame-in-python.html"&gt;Tic Tac Toe Game Using Pygame in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thankyou for reading my blogs.&lt;/strong&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#my-website"&gt;
  &lt;/a&gt;
  My Website:
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/"&gt;CodexAshish&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>javascript</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>How to Support Early-Career Developers  </title>
      <author>Rizèl Scarlett</author>
      <pubDate>Mon, 27 Dec 2021 00:03:14 +0000</pubDate>
      <link>https://dev.to/blackgirlbytes/how-to-support-early-career-developers-3897</link>
      <guid>https://dev.to/blackgirlbytes/how-to-support-early-career-developers-3897</guid>
      <description>&lt;p&gt;Because tech changed my life financially, I've invested time into helping people like me join the tech industry. For example: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I teach women of color and non-binary people of color HTML, CSS, and JavaScript; then, I connect them with apprenticeships or programs that help new developers get job-ready. &lt;/li&gt;
&lt;li&gt;I'm also that annoying person that tells all my friends and Lyft drivers to do a coding boot camp and switch careers into tech.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, I recently lost my motivation to continue helping people get into tech. I've debated with myself if I'm even doing a good thing. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;You probably think that the answer is obviously yes; it is good to help people gain more money and potential for career advancement, but I've realized that it's not that simple.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After my friends or mentees land jobs, they report back to me that they're struggling with impostor syndrome. As they recount their stories to me in detail, I realize they're dealing with emotional abuse, isolation, ageism, racism, sexism, and gaslighting in the workplace. Corporate culture often masks bullying with the label "impostor syndrome." It's not impostor syndrome when your coworker tells you that you don't belong.&lt;/p&gt;

&lt;p&gt;Their experiences were similar to those in this&lt;a href="https://twitter.com/geekgalgroks/status/1473320237760225280?s=20"&gt; thread&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AYqBRU8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpge1hsr2g7fccosn7rs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AYqBRU8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpge1hsr2g7fccosn7rs.png" alt="Image description" width="880" height="1338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After listening to my friends' and mentees' experiences, I felt (and sometimes continue to feel) an overwhelming sense of guilt because they traded money for happiness and self-esteem. I felt like I set them up to endure work trauma.&lt;/p&gt;

&lt;p&gt;I had to remind myself that it was not my fault. The root of the issue is that engineering teams do not understand how to support early-career developers, especially those from underrepresented backgrounds. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-junior-engineering-experience"&gt;
  &lt;/a&gt;
  My Junior Engineering Experience
&lt;/h2&gt;

&lt;p&gt;I empathize strongly with their work trauma because, during my first two years as a software engineer, I constantly felt:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Embarrassed&lt;/li&gt;
&lt;li&gt;Anxious&lt;/li&gt;
&lt;li&gt;Incompetent&lt;/li&gt;
&lt;li&gt;Like I didn't belong&lt;/li&gt;
&lt;li&gt;Like I should quit tech altogether&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Initially, I blamed myself, so I tried hard to change the situation and prove my worth by staying up late completing work to keep up with my coworkers and enrolling in college for Computer Science, but to no avail. Eventually, I realized I needed a new team and a new company to foster my technical growth and confidence. Unfortunately, by the time I moved to a new company, I only had a few months of energy left in me. I started strong, but after a couple of months working there, the burnout and disenchantment returned. Even though they treated me kindly, I didn't want to code anymore. I couldn't even open a new instance of Visual Studio Code. &lt;/p&gt;

&lt;p&gt;To truly recover from burnout, I took some time off from work. During my funemployment, I assessed the experiences of my friends and my experiences, to determine how teams can better nurture junior engineers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-nurture-new-engineers"&gt;
  &lt;/a&gt;
  How to nurture new engineers
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step-1-recognize-that-your-responsibility-is-to-teach"&gt;
  &lt;/a&gt;
  Step 1: Recognize that your responsibility is to teach
&lt;/h3&gt;

&lt;p&gt;Each developer is also a teacher, whether they want to admit it or not. &lt;/p&gt;

&lt;p&gt;Perhaps you are a(n):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;boot camp instructor,  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;developer advocate, &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;engineering manager &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mid-level developer &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will eventually have to teach a less experienced developer. Software engineering is a team sport. Your teammates' wins are your wins too, but we often forget that. We want to complete our tickets (or issues) without any distraction. We view helping our coworkers as a distraction rather than progress because helping coworkers is not prioritized or measured. Peer mentoring and teaching are vital components of a well-oiled software engineering team. As developers, we should place a higher value on good teaching, mentoring, and empowering.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-create-room-for-growth"&gt;
  &lt;/a&gt;
  Step 2: Create Room for Growth
&lt;/h3&gt;

&lt;p&gt;My husband and I learned to code at the same coding bootcamp at the same time, but he seemed so much happier at work, and I couldn’t identify why._ Was he a million times smarter than me? Possibly, yes. (don’t tell him I said that)_. Working from home allowed me to &lt;del&gt;eavesdrop&lt;/del&gt; observe the dynamic between him and his coworkers. They made space for him to grow. They were nice to him. They didn’t dismiss him while he spoke. They encouraged him. They were direct with him. He knew what steps he needed to take to get promoted. By watching their interactions,  I learned that you could create room for junior developers to grow by:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listening as much as you speak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a mentor, you may feel tempted to share all your knowledge. That can be overwhelming, and you may be ignoring the junior dev's needs. Listen to figure out what they want and need because their growth is not about you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Making support accessible and available&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Assign designated mentors who genuinely want to answer questions and prioritize helping junior devs. Hold office hours, so the early career developer can feel safe asking questions at a designated time. This way, they're reassured that they're not taking your focus away from engineers' primary tasks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting clear goals and expectations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most junior developers don't want to be junior forever. They want to know what milestones they can reach to grow. Express clear expectations so they know what to strive for.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-lose-the-ego"&gt;
  &lt;/a&gt;
  Step 3: Lose the ego
&lt;/h3&gt;

&lt;p&gt;I'm the Director of Programs at G{Code}, a free program designed to give young women and non-binary people of color first exposure to coding to uncover interest and aptitude in tech in a supportive, inclusive, and safe environment. Over the past three cohorts, I've had to unlearn past teaching methods and bad habits I picked up from the industry. While I had previously learned to "fake it until I make it," I now realized that:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vulnerability is a catalyst for growth&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tech is rooted in elitism and academia. We pretend to know it all but be honest -- you don't know everything. By saying the words, "I don't know. Let's look it up together", you reduce the pressure from new developers that feel they HAVE to know it all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I shouldn’t ask if they’ve Googled it&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Everyone loves to ask that question. Of course, they've Googled it. Because asking for help requires swallowing your pride, it's often the last resort. Instead, I empower them to solve problems independently by asking the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What's your goal?&lt;/li&gt;
&lt;li&gt;What have you tried?&lt;/li&gt;
&lt;li&gt;What did the result look like?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This approach is less condescending and more effective.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My teaching style is not always compatible with their learning style&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The way I want to teach is not always the way they learn best. I have to learn to adapt to their learning preferences and provide various mediums and resources for them to absorb the information. I learned this after I tried to teach people the way I learned things, and I was met with blank faces. Remember that there are visual learners, hands-on learners, auditory learners, and more. Communicate with your mentee and ask them how they would best like to learn a concept.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-exercise-patience-and-kindness"&gt;
  &lt;/a&gt;
  Step 4: Exercise patience and kindness
&lt;/h3&gt;

&lt;p&gt;When I started working at Botany, my manager Andy Cunningham indirectly taught me to support early-career developers. Through the following practices, Andy helped me to slowly regain my confidence (which is still a work in progress):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Allow developers to reflect between tasks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After completing tickets, it's great for developers of all levels to write notes or blog about what they learned from the tasks. We often move on to the next assignment and completely forget how we solved the previous task. Blogging between engineering tickets sounds like a time-sink, but it's an investment. When people write things down, they retain the information. And if developers forget, at least they can look back at their notes for the solution. By recording the steps taken to resolve a problem, developers can engineer solutions more quickly in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Give empathetic code reviews&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Slack's Engineering team has an excellent &lt;a href="https://slack.engineering/how-about-code-reviews/"&gt;blog post&lt;/a&gt; on giving good code reviews. The authors state, "If you see a problem with the code, try to put yourself in their shoes and try to help them see the problem without making them feel like a screw-up."&lt;/p&gt;

&lt;p&gt;Take your time to read the code and provide thoughtful advice. Let them know when your suggestions are blockers or nitpicks. Remember, you and the person you are reviewing are smart individuals who can learn from each other, which is why you work at the same company. Don't write feedback that implies you're more intelligent than them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t place blame&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the summer of 2021, an HBO intern made the mistake of sending test emails to customers. HBO Max wittily admitted that it was the intern. Although they tweeted that they were helping the intern, the tweet didn’t make me feel good. It made me wonder how the intern felt. Perhaps, the intern laughed it off, but deep down, they felt embarrassed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5-5-sxcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ucmonh01etps9lcuiy4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5-5-sxcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ucmonh01etps9lcuiy4.png" alt="Image description" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If an early career developer makes a mistake, avoid blaming them even as a joke. When a new dev makes a mistake, it means there aren't enough guard rails in place for the new dev to avoid making this mistake. Therefore, the leaders of the team are responsible. Instead, try to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Set up guard rails&lt;/li&gt;
&lt;li&gt;Let them know it's not their fault, &lt;/li&gt;
&lt;li&gt;Tell them about a time you made a similar (or worse) mistake in the past to help them feel better&lt;/li&gt;
&lt;li&gt;Offer to help fix the issue&lt;/li&gt;
&lt;li&gt;Fix the issue with them without acting like you're their savior&lt;/li&gt;
&lt;li&gt;Provide advice on how to avoid the mistake in the future (when the time is right)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-companies-can-create-a-nurturing-environment"&gt;
  &lt;/a&gt;
  How Companies Can Create a Nurturing Environment
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#embed-kindness-into-your-culture"&gt;
  &lt;/a&gt;
  Embed kindness into your culture
&lt;/h3&gt;

&lt;p&gt;Give positive reinforcement to all employees, especially junior employees and junior developers. Genuinely highlight their achievements even if it's small to you. People are more likely to perform better if they are clear on what tasks they're doing well. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hire-kind-engineering-leaders"&gt;
  &lt;/a&gt;
  Hire kind engineering leaders
&lt;/h3&gt;

&lt;p&gt;There is a tendency to ignore arrogance if an engineer is brilliant and productive. Unfortunately, those engineers are more harmful than helpful to the company's culture because they often try to elevate themselves rather than their coworkers. Hire developers who advocate for each other.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implement-better-processes"&gt;
  &lt;/a&gt;
  Implement better processes
&lt;/h3&gt;

&lt;p&gt;SCRUM and Kanban encourage devs to focus more on completing tickets than helping each other. It's up to us as an industry to devise processes that prioritize helping coworkers grow as much as the product. Before revolutionizing an engineering team's entire workflow, companies can help early-career developers work confidently by writing clear, detailed tickets and documentation. &lt;/p&gt;

&lt;p&gt;Fortunately, I see our industry improving little by little, and at GitHub, I've experienced compassion and encouragement.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In your opinion, how can we be better champions for new developers?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oWa9Vfk7aGY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>programming</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Accessing S3 Buckets from CloudShell</title>
      <author>teresafds</author>
      <pubDate>Sun, 26 Dec 2021 23:24:09 +0000</pubDate>
      <link>https://dev.to/teresafds/accessing-s3-buckets-from-cloudshell-4ojh</link>
      <guid>https://dev.to/teresafds/accessing-s3-buckets-from-cloudshell-4ojh</guid>
      <description>&lt;p&gt;After one year since &lt;a href="https://aws.amazon.com/about-aws/whats-new/2020/12/introducing-aws-cloudshell/"&gt;AWS CloudShell was released&lt;/a&gt;, it worth to comment about a connection issue between this technology and S3 Buckets.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue
&lt;/h3&gt;

&lt;p&gt;We have a S3 bucket (in this case, named &lt;code&gt;mytestbucket0123&lt;/code&gt;) that we need to access through AWS CloudShell. &lt;br&gt;
But when trying to list all objects on a bucket from CloudShell, executing &lt;code&gt;aws s3 ls s3://mytestbucket0123&lt;/code&gt; we’re getting the following error &lt;/p&gt;

&lt;p&gt;"An error occurred (AccessDenied) when calling the ListObjectsV2 operation: Access Denied"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0UdMLjKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4sydzmpnrx8ei9ckyci.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0UdMLjKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4sydzmpnrx8ei9ckyci.png" alt="AWS CloudShell error when listing s3 objects" width="880" height="67"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#verification-steps"&gt;
  &lt;/a&gt;
  Verification steps
&lt;/h3&gt;

&lt;p&gt;As a starting point of this situation, we’ll need to analyze the scene and do the following verification questions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Has the user got the required permissions to list objects of our S3 Bucket?&lt;/strong&gt;  To answer this we have several ways: first check on IAM that the user has assigned those permissions. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1iwGSYo6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nipykprbokmwskp95i81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1iwGSYo6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nipykprbokmwskp95i81.png" alt="User on IAM with required S3 Permissions" width="867" height="534"&gt;&lt;/a&gt;&lt;br&gt;
The user has attached the &lt;code&gt;AmazonS3ReadOnlyAccess&lt;/code&gt; Policy, so it has  ListObjects required permission. So let’s verify that the user can already list the s3 bucket objects (from the AWS console for example). Listing objects on the bucket seems to work fine from the AWS Console with the same user (from server machine) as per screenshot below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EzIwjNuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkuudfzkwwl5hon3n6fi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EzIwjNuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkuudfzkwwl5hon3n6fi.png" alt="User can list S3 Objects from AWS Console correctly" width="766" height="592"&gt;&lt;/a&gt;&lt;br&gt;
So, it doesn’t seem to be user IAM permissions at least. Which leads us to the following step.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Has the S3 Bucket got any Bucket policy enabled?&lt;/strong&gt; We need to search, on the AWS console, the S3 bucket and look the “Bucket policy” section in the “Permissions” tab. &lt;br&gt;
In this case, the S3 Bucket has the following Bucket Policy&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "Statement1",
            "Effect": "Deny",
            "Principal": "*",
            "Action": "s3:*",
            "Resource": "arn:aws:s3:::mytestbucket0123",
            "Condition": {
                "NotIpAddress": {
                    "aws:SourceIp": "&amp;lt;Public IP Address&amp;gt;"
                },
                "StringEqualsIfExists": {
                    "aws:SourceVpc": "&amp;lt;VPC-Id&amp;gt;"
                }
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;This bucket policy denies access to all users (no matter they have the required IAM permissions), except they access from a specific IP Address or connect from our VPC (which, in this case is the AWS Account’s default VPC). That means the CloudShell is not accessing to the S3 Bucket from the VPC… So let’s ask the next question.&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Does CloudShell terminal connect to the S3 Bucket through a public IP Address?&lt;/strong&gt; To answer this, we need to execute the following command into the CloudShell terminal: &lt;code&gt;curl ifconfig.me&lt;/code&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cy-3284u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycs8gjesegoplzoizvlg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cy-3284u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycs8gjesegoplzoizvlg.png" alt="The result of executing  curl ifconfig.me is 18.224.171.123, which means Public IP Address" width="804" height="72"&gt;&lt;/a&gt; It seems that CloudShell is trying to access to the S3 Bucket from a non whitelisted Public Address (which belongs to AWS Reserved IP Addresses).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#cause-explanation"&gt;
  &lt;/a&gt;
  Cause explanation
&lt;/h3&gt;

&lt;p&gt;After the verification steps, we can realize this is a CloudShell’s current limitation: it cannot connect to AWS Resources using VPC Endpoints or with VPC restricted access. Besides, the IP Address allocated per each CloudShell terminal may change over the time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;To solve this issue we need to whitelist the Cloudshell’s user agent. Although this may not be a 100% secure resolution, it can be a temporary fix until AWS CloudShell can improve (or no CloudShell access is required). At the time of this writing, the user agent is "[aws-cli/2.4.5 Python/3.8.8 Linux/4.14.248-189.473.amzn2.x86_64 exec-env/CloudShell exe/x86_64.amzn.2 prompt/off command/s3.ls]”. Then edit the S3 Bucket Policy to the following (excluding also the CloudShell user agent).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "Statement1",
            "Effect": "Deny",
            "Principal": "*",
            "Action": "s3:*",
            "Resource": "arn:aws:s3:::mytestbucket0123",
            "Condition": {
                "StringEquals": {
                    "aws:UserAgent": "[aws-cli/2.4.5 Python/3.8.8 Linux/4.14.248-189.473.amzn2.x86_64 exec-env/CloudShell exe/x86_64.amzn.2 prompt/off command/s3.ls]"
                },
                "NotIpAddress": {
                    "aws:SourceIp": "&amp;lt;Public IP Address&amp;gt;"
                },
                "StringEqualsIfExists": {
                    "aws:SourceVpc": "&amp;lt;VPC-Id&amp;gt;"
                }
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, when trying to perform on the terminal the command  &lt;code&gt;aws s3 ls s3://mytestbucket0123&lt;/code&gt;  finally works!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V9FeZ8pP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eylou7y1pq6kr50ckd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V9FeZ8pP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eylou7y1pq6kr50ckd7.png" alt="aws s3 ls working correctly from CloudShell after S3 Bucket Policy update" width="880" height="89"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cloudshell</category>
      <category>aws</category>
      <category>s3</category>
      <category>troubleshooting</category>
    </item>
    <item>
      <title>How to split time to learn web app development </title>
      <author>Tom Smykowski</author>
      <pubDate>Sun, 26 Dec 2021 23:13:09 +0000</pubDate>
      <link>https://dev.to/tomaszs2/how-to-split-time-to-learn-web-app-development-33j</link>
      <guid>https://dev.to/tomaszs2/how-to-split-time-to-learn-web-app-development-33j</guid>
      <description>&lt;p&gt;The proportion I find to be good is as follows:&lt;/p&gt;

&lt;p&gt;Programming concepts 20%&lt;br&gt;
Object Oriented programming 20%&lt;br&gt;
CSS 15%&lt;br&gt;
JQuery, Angular, Ember, Vue, Svelte, or React 10%&lt;/p&gt;

&lt;p&gt;HTML 5%&lt;br&gt;
Javascript 5%&lt;br&gt;
Typescript 5%&lt;br&gt;
Functional programming 5%&lt;br&gt;
State management 5%&lt;/p&gt;

&lt;p&gt;JS DOM interaction 2%&lt;br&gt;
SCSS 2%&lt;br&gt;
BEM 2%&lt;br&gt;
Git 2%&lt;br&gt;
Jira 2%&lt;/p&gt;

&lt;p&gt;You can notice that most of the time should be spent on core programming concepts. CSS is underestimated while it is very powerful. It is worth to spend substantial time to learn it in and out.&lt;/p&gt;

&lt;p&gt;There is also a merit to spend some time to learn a framework / library.&lt;/p&gt;

&lt;p&gt;There is little time allocated to JavaScript and Typescript and comparably everything else. Compared to previous ones, these don’t need so much time to learn.&lt;/p&gt;

&lt;p&gt;You can also notice I didn’t include CSS frameworks because I don’t find too much value in learning them. It is nice to use them, but with limited time to learn everything it is the least important thing.&lt;/p&gt;

&lt;p&gt;And yeah, BEM is listed because eventually I find it useful. 2% of time is a little bit too much.&lt;/p&gt;

&lt;p&gt;If you have questions post them below.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>tailwindcss</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Make the Disney.com Landing Page in 90 minutes</title>
      <author>Sebastian</author>
      <pubDate>Sun, 26 Dec 2021 23:03:58 +0000</pubDate>
      <link>https://dev.to/sebcodestheweb/make-the-disneycom-landing-page-in-90-minutes-c92</link>
      <guid>https://dev.to/sebcodestheweb/make-the-disneycom-landing-page-in-90-minutes-c92</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-make-the-disneycom-landing-page-in-under-90-minutes-part-1"&gt;
  &lt;/a&gt;
  How to make the disney.com landing page in under 90 minutes - part 1
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Hello, and welcome to my awesome blog! 😊&lt;/em&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--96mJvoeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/d8SMqAtm3D9bYfOtcs/200.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--96mJvoeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/d8SMqAtm3D9bYfOtcs/200.gif" alt="Disney" width="356" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This blog is part 1, of my under 90 min YouTube tutorial where I am going to show you how you can copy the disney.com landing page only using vanilla html and css. This project also focuses heavily on flexbox, so if you want to get some practice with that then this is the perfect tutorial!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#watch-the-tutorial-on-youtube"&gt;
  &lt;/a&gt;
  Watch the tutorial on YouTube:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=6SUBhdvK31A"&gt;https://www.youtube.com/watch?v=6SUBhdvK31A&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In this first part, I'm showing you how to set up the html, and the styling for the mobile version of the website. In the second part I am going to show you how to make the page fully responsive and look good on desktop.&lt;/p&gt;

&lt;p&gt;I have made a git repository that you can clone to follow along the tutorial (which I recommend)&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/SebCodesTheWeb/disneyclone"&gt;https://github.com/SebCodesTheWeb/disneyclone&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  --About me--
&lt;/h2&gt;

&lt;p&gt;Hello! My name is Sebastian, and I'm a high-school student from Sweden. I have dabbled with some front-end development for the past few months. And since christmas brake finally arrived, I've decided to start a challenge for myself! I'm going to code for the coming 20 days.&lt;/p&gt;

&lt;p&gt;I'm following the front-end career path at Scrimba and I'm currently at module 8 (Flexbox, Grid and Fetch). I started this project to get some practice with css flexbox.&lt;/p&gt;

&lt;p&gt;By the end of the 20 days I'm hoping to have finished the front-end career path and have started with some backend Node.js development. I will be documenting my progress for the coming days, and filming myself and making tutorials on my &lt;br&gt;
 &lt;a href="https://www.youtube.com/channel/UCikWIcChAOSwoc2qpbZ6iIA"&gt;YouTube-channel&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;It would be awesome if you would follow along me on my journey and learn with me. You can follow my  &lt;a href="https://sebcodestheweb.hashnode.dev"&gt;blog &lt;/a&gt; and subscribe to my  &lt;a href="https://www.youtube.com/channel/UCikWIcChAOSwoc2qpbZ6iIA"&gt;YouTube channel&lt;/a&gt;. And if you liked the YouTube video then it would really make my day if you left a comment or liked this post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aQJF5Xze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/hdvxjTbUuzsAAAAC/thumbs-up-friends.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQJF5Xze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/hdvxjTbUuzsAAAAC/thumbs-up-friends.gif" alt="Friends-gif" width="498" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep Coding.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>html</category>
    </item>
    <item>
      <title>How Valtio Proxy State Works (React Part)</title>
      <author>Daishi Kato</author>
      <pubDate>Sun, 26 Dec 2021 23:01:48 +0000</pubDate>
      <link>https://dev.to/dai_shi/how-valtio-proxy-state-works-react-part-56j1</link>
      <guid>https://dev.to/dai_shi/how-valtio-proxy-state-works-react-part-56j1</guid>
      <description>&lt;h5&gt;
  &lt;a href="#usesyncexternalstore-and-proxycompare"&gt;
  &lt;/a&gt;
  useSyncExternalStore and proxy-compare
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In &lt;a href="https://blog.axlight.com/posts/how-valtio-proxy-state-works-vanilla-part/"&gt;the previous article&lt;/a&gt;, we explained how &lt;a href="http://github.com/pmndrs/valtio"&gt;Valtio&lt;/a&gt; proxy state works. It tracks mutations of state and create immutable snapshot.&lt;/p&gt;

&lt;p&gt;Let's recap the API in vanilla part of Valtio.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a new proxy state to detect mutations&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// You can mutate it&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Create a snapshot&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;snap1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; { count: 1 }&lt;/span&gt;

&lt;span class="c1"&gt;// Mutate it again&lt;/span&gt;
&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Create a snapshot again&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;snap2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; { count: 10 }&lt;/span&gt;

&lt;span class="c1"&gt;// The previous snapshot is not changed&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snap1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; { count: 1 }&lt;/span&gt;

&lt;span class="c1"&gt;// You can subscribe to it&lt;/span&gt;
&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;State changed to&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Then, mutate it again&lt;/span&gt;
&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; "State changed to { count: 10, text: 'hello' }"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's see how we can use the state in React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-usesyncexternalstore"&gt;
  &lt;/a&gt;
  Introducing useSyncExternalStore
&lt;/h2&gt;

&lt;p&gt;React 18 provides a new hook called &lt;code&gt;useSyncExternalStore&lt;/code&gt;. It's designed to safely use an external store in React. Our proxy object in Valtio is exactly an external store.&lt;/p&gt;

&lt;p&gt;As we have &lt;code&gt;snapshot&lt;/code&gt; function to create immutable state, it should be pretty straightforward.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a state&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stateFoo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Define subscribe function for stateFoo&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;subscribeFoo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stateFoo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Define snapshot function for stateFoo&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;snapshotFoo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stateFoo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Our hook to use stateFoo&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useStateFoo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;useSyncExternalStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;subscribeFoo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;snapshotFoo&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How simple! We could build a custom hook to handle any proxy state. We just need not to forget to use &lt;code&gt;useCallback&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But, Valtio has a more advanced feature, automatic render optimization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-automatic-render-optimization"&gt;
  &lt;/a&gt;
  What is automatic render optimization
&lt;/h2&gt;

&lt;p&gt;Render optimization is to avoid extra re-renders, which produce the results that makes no difference to users. In the case of &lt;code&gt;stateFoo&lt;/code&gt;, suppose we have a component that shows the &lt;code&gt;text&lt;/code&gt; value in &lt;code&gt;stateFoo&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TextComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStateFoo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we change the &lt;code&gt;count&lt;/code&gt; value in &lt;code&gt;stateFoo&lt;/code&gt;, like &lt;code&gt;++stateFoo.count&lt;/code&gt;, this &lt;code&gt;TextComponent&lt;/code&gt; actually re-renders, but produces the same result because it doesn't use the &lt;code&gt;count&lt;/code&gt; value, and the &lt;code&gt;text&lt;/code&gt; value isn't changed. So, this is an extra re-render.&lt;/p&gt;

&lt;p&gt;Render optimization is to avoid such extra re-renders, and one way to solve it is to manually tell the hook which properties we will be using.&lt;/p&gt;

&lt;p&gt;For example, if we assume the hook accepts a list of strings, we would be able to tell the properties like the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TextComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStateFoo&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Automatic render optimization is to do this automatically. Is this possible? It's possible with utilizing proxies. Proxies allow us to detect state property access. I have been working on this for years, and &lt;a href="https://react-tracked.js.org"&gt;react-tracked&lt;/a&gt; is one of the resulting projects that use this technique. We have an internal library called proxy-compare.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-proxycompare-works"&gt;
  &lt;/a&gt;
  How proxy-compare works
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/dai-shi/proxy-compare"&gt;proxy-compare&lt;/a&gt; is a library to enable automatic render optimization.&lt;/p&gt;

&lt;p&gt;What we would like to know is, in the previous example, the &lt;code&gt;text&lt;/code&gt; value is used in &lt;code&gt;TextComponent&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's see how it can be done with proxies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// An array to store accessed properties&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accessedProperties&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="c1"&gt;// Wrap stateFoo with Proxy&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stateFoo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;accessedProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Use it&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// We know what are accessed.&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accessedProperties&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; ['text']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's the basic idea. To extend it, we want to support accessing nested objects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// More complex state&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;nested&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="na"&gt;others&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Use a nested property&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nested&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// As a result, `nested.count` is detected as used.&lt;/span&gt;
&lt;span class="c1"&gt;// `nested.text` and `others` are known to be unused.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is quite a bit of task, but proxy-compare handles such cases. And, it's done in a pretty efficient way. If you are curious, check out the source code of proxy-compare.&lt;/p&gt;

&lt;p&gt;Valtio provides a hook based on proxy-compare to enable automatic render optimization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#valtios-solution-usesnapshot"&gt;
  &lt;/a&gt;
  Valtio's solution: useSnapshot
&lt;/h2&gt;

&lt;p&gt;The hook provided by Valtio is called &lt;code&gt;useSnapshot&lt;/code&gt;. It returns an immutable snapshot, but it's wrapped with proxies for render optimization.&lt;/p&gt;

&lt;p&gt;It can be used like the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useSnapshot&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;valtio&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;nested&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="na"&gt;others&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TextComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;snap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSnapshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nested&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component only re-renders when the &lt;code&gt;text&lt;/code&gt; value is changed. Even if &lt;code&gt;count&lt;/code&gt; or &lt;code&gt;others&lt;/code&gt; changes, it won't re-render.&lt;/p&gt;

&lt;p&gt;The implementation of &lt;code&gt;useSnapshot&lt;/code&gt; is a little bit tricky, and we don't dive in deep. Basically, it's just a combination of &lt;code&gt;useSyncExternalStore&lt;/code&gt; and &lt;code&gt;proxy-compare&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Valtio's mutable state model matches pretty well with the mental model of &lt;code&gt;useSnapshot&lt;/code&gt;. You basically define a state object with &lt;code&gt;proxy&lt;/code&gt;, use it with &lt;code&gt;useSnapshot&lt;/code&gt; and you can mutate the state object as you like. The library takes care of everything else.&lt;/p&gt;

&lt;p&gt;To be fair, there are some limitations due to how proxies work. For example, proxies can't detect mutations on &lt;code&gt;Map&lt;/code&gt;. Another example is that proxies can't detect a use of &lt;code&gt;Object.keys&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-note"&gt;
  &lt;/a&gt;
  Closing note
&lt;/h2&gt;

&lt;p&gt;Hopefully, we explained the overall concept of Valtio with &lt;a href="https://blog.axlight.com/posts/how-valtio-proxy-state-works-vanilla-part/"&gt;the previous article&lt;/a&gt; and this one. The actually implementation has some more work to handle some edge cases and for efficiency. Having that said, we think it's fairly small and we encourage people with some interests to have a read.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/pmndrs/valtio"&gt;https://github.com/pmndrs/valtio&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Originally published at &lt;a href="https://blog.axlight.com/posts/how-valtio-proxy-state-works-react-part/"&gt;https://blog.axlight.com&lt;/a&gt; on December 26, 2021.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Why You Should Become A Data Engineer And Not A Data Scientist</title>
      <author>SeattleDataGuy</author>
      <pubDate>Sun, 26 Dec 2021 22:59:57 +0000</pubDate>
      <link>https://dev.to/seattledataguy/why-you-should-become-a-data-engineer-and-not-a-data-scientist-2kho</link>
      <guid>https://dev.to/seattledataguy/why-you-should-become-a-data-engineer-and-not-a-data-scientist-2kho</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@magnetme?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Magnet.me&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/job?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data Science is a career path that many people are currently choosing based on an essay written a decade ago. Yes, it has been almost ten years since the &lt;a href="https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century"&gt;Harvard Business Review essay&lt;/a&gt; was published, yet we are all still choosing Data Science as a professional path. However, if you read through LinkedIn recently, you will notice that many people have posted that they are recovering data scientists who have now become data engineers.&lt;/p&gt;

&lt;p&gt;Many of us are drawn into the subject of Data Science just to realize it isn't for us finally. And, while there is some gatekeeping around Data Engineering, it appears that many people who have initially been data scientists eventually switched over to Data Engineering.&lt;/p&gt;

&lt;p&gt;What may be the reason for this? In this blog post, I hope to help you avoid the whole transition from data scientist to data engineer by giving you a few fundamental reasons why you should become a data engineer rather than a data scientist.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: Some who read the title of this article might assume this is some form of:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"&lt;/em&gt;&lt;em&gt;We Don't Need Data Scientists&lt;/em&gt;&lt;em&gt;" or "&lt;/em&gt;&lt;em&gt;Data Engineering Is Better Than Data Science&lt;/em&gt;&lt;em&gt;" type article. That's not the purpose of this article. It is meant to discuss why someone may prefer being a data engineer. Of course, if you work at a small enough company you might be a little of both.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-like-building-stuff"&gt;
  &lt;/a&gt;
  You Like Building Stuff
&lt;/h2&gt;

&lt;p&gt;If you enjoy building infrastructure, programming, and writing object-oriented code rather than merely procedural code to interact with data, you may be more of a data engineer.&lt;/p&gt;

&lt;p&gt;Data engineers develop data pipelines, infrastructure, monitoring, and other aspects that aren't immediately related to models. Data engineers operationalize or &lt;em&gt;productionize&lt;/em&gt; a model, which implies taking the analysis or Jupyter notebook that a data scientist created and applying it in a sustainable and robust system, rather than simply pressing "run" on that Jupyter notebook every day.&lt;/p&gt;

&lt;p&gt;We prefer the discipline and process of constructing infrastructure instead of simply burying it in data frames that no one can access or adequately QA. &lt;a href="https://www.youtube.com/watch?v=LgSHaOvNodA"&gt;Data engineers&lt;/a&gt; enjoy having a tangible end product. We don't want just an analysis; we want a table, a &lt;a href="https://seattledataguy.substack.com/p/what-are-etls-and-why-we-use-them"&gt;pipeline&lt;/a&gt;, a d&lt;a href="https://seattledataguy.substack.com/p/snowflake-vs-bigquery-two-cloud-data"&gt;ata warehouse&lt;/a&gt;, or a Data Lake.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-like-feeling-done"&gt;
  &lt;/a&gt;
  You Like Feeling Done
&lt;/h2&gt;

&lt;p&gt;Data engineers enjoy the sense of accomplishment that comes with finishing a project. Data science has an unending capacity to generate questions after questions, making your analysis endless. I have watched my data science counterparts often finish an analysis on a single data set, only to have to dig into the data set more due to the business asking even more questions.&lt;/p&gt;

&lt;p&gt;But, as data engineers, we have a general standard to adhere to a table, a data pipeline, or something along those lines. Once we've created it, we're done. Sure, our stakeholders may say, "Oh, I wanted to add this column as well," but that's a new project or assignment, and we already know we've completed the previous project. In order to take on this new task we would need to reprioritize all of our current work.&lt;/p&gt;

&lt;p&gt;The preceding is not necessarily true in the field of Data Science. It can be an infinite complex of questions, none of which will ever lead to an answer.&lt;/p&gt;

&lt;p&gt;If having no actual end product is what you enjoy about your job, Data Science may be for you. However, if you prefer having a finished product at the end of the day, Data Engineering may be a better fit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-dont-like-being-the-center-of-attention"&gt;
  &lt;/a&gt;
  You Don't Like Being The Center of Attention
&lt;/h2&gt;

&lt;p&gt;Another advantage of being a data engineer is that we are not always the center of attention. Data Science has a lot of sexiness and glamour, whereas data engineers can hide in the background, which many of us enjoy. Instead of spending a lot of times in front of co-workers explaining the impact of your model, we can often hide behind our keyboards and build our tables for our partners.&lt;/p&gt;

&lt;p&gt;So, being a data engineer is ideal if you prefer completing your task without attracting a lot of attention and questioning. You get to do your work, and you know that once it's done, you can pass it over to the data scientist, who will analyze the data and then jump in front of a stakeholder or manager and explain what their results mean.&lt;/p&gt;

&lt;p&gt;In that way, data engineering is an excellent job for folks who prefer interacting with a keyboard over dealing with other people.&lt;/p&gt;

&lt;p&gt;Of course, I'm not implying that all data engineers are introverts or dislike interacting with others. You can get the opportunity to talk and share with others if you so desire. If you want to take it, it's there for you.&lt;/p&gt;

&lt;p&gt;And I will always be a proponent of improving your soft skills, especially in terms of communication. Strong communications can help you leap forward in your career. Why else do you think I started a Youtube channel.&lt;/p&gt;

&lt;p&gt;However, the business is more concerned with the analysts and data science findings. They are concerned with the amount of money they will save, the final model, and the influence on the business. Data engineering is critical, and data scientists cannot do their jobs without it. But few people care how the sausage is produced, they only care that it is on their plate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-prefer-sql-over-pandas"&gt;
  &lt;/a&gt;
  You Prefer SQL Over Pandas
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AfBThcjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/0%2AUkKhUyiOIIJh6Hi2" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AfBThcjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/0%2AUkKhUyiOIIJh6Hi2" alt="" width="880" height="585"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@millerthachiller?utm_source=medium&amp;amp;utm_medium=referral"&gt;Pascal Müller&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, if you prefer SQL over Pandas, you might be more of a data engineer.&lt;/p&gt;

&lt;p&gt;I've discovered that data scientists seem to prefer using Pandas, and most data engineers tend to lean towards SQL.&lt;/p&gt;

&lt;p&gt;In one way or another, both manipulate data. But if you need to execute a sophisticated, 1000-line query, I can only imagine how insane it would look in Pandas and how many calls to so many functions it would entail.&lt;/p&gt;

&lt;p&gt;What's fantastic is that we live in a world where Spark, SparkSQL and DataBricks exist, so we can all play in the same arena and use a similar engine, but SQL will continue to be the data language since it has withstood the test of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-which-data-career-is-right-for-you"&gt;
  &lt;/a&gt;
  So Which Data Career Is Right For You
&lt;/h2&gt;

&lt;p&gt;So there you have it: four reasons why you should consider becoming a data engineer rather than a data scientist. If any of these points resonated with you, you might want to seek a career as a data engineer.&lt;/p&gt;

&lt;p&gt;It's easy to be caught up in the Data Science allure, given that it's had its still a very sexy job. Still, other data-related areas, such as data engineering, need completely different day-to-day tasks and team relationships.&lt;/p&gt;

&lt;p&gt;The skills necessary for these jobs, as well as the end deliverables, vary greatly. The bottom line is, to be honest with ourselves and select our best-suited, ideal career.&lt;/p&gt;

&lt;p&gt;Of course, there are still other roles like &lt;a href="https://www.youtube.com/watch?v=uEPCxBaRf6A"&gt;analytics engineer and data analyst&lt;/a&gt;. So good luck finding the right career.&lt;/p&gt;

&lt;p&gt;If you're interested in learning more about data engineering or data science, then consider these articles and videos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=xtfuO7kGJeY"&gt;My Favorite Books For Data Engineers - From Streaming To Software Engineering&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://seattledataguy.substack.com/p/which-managed-version-of-airflow"&gt;Which Managed Version Of Airflow Should You Use?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theseattledataguy.com/what-is-trino-and-why-is-it-great-at-processing-big-data/#page-content"&gt;What Is Trino And How It Manages Big Data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=bqCXVpRqTpE"&gt;What I Learned From 100+ Data Engineering Interviews - Interview Tips&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>career</category>
      <category>beginners</category>
      <category>database</category>
    </item>
    <item>
      <title>Complete User Authentication with express and graphql....</title>
      <author>sadiul hakim</author>
      <pubDate>Sun, 26 Dec 2021 21:56:34 +0000</pubDate>
      <link>https://dev.to/suhakim/complete-user-authentication-with-express-and-graphql-opo</link>
      <guid>https://dev.to/suhakim/complete-user-authentication-with-express-and-graphql-opo</guid>
      <description>&lt;p&gt;Hey guys,Today i am going to build a complete user authentication with &lt;code&gt;express-graphql&lt;/code&gt;.So, Let's get started....&lt;/p&gt;

&lt;p&gt;This is going to be our folder structure...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eZVwC4qj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e967o0m9kyucq0ep278k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eZVwC4qj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e967o0m9kyucq0ep278k.png" alt="Folder Structure" width="329" height="708"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After initializing your project install these dependencies...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm i bcrypt dotenv express express-graphql jsonwebtoken graphql mongoose
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now use need to create some &lt;code&gt;private and public key&lt;/code&gt; to make our token secure.To generate those key visit &lt;/p&gt;

&lt;p&gt;&lt;a href="https://cryptotools.net/rsagen"&gt;generate keys&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we need to encode our key.To encode keys visits&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.base64encode.org/"&gt;encode keys&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now add these key and port in out &lt;code&gt;.env&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PORT=5000
MONGODB_URL='mongodb://localhost:27017/graphql'
PRIVATE_KEY='LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb1FJQkFBS0NBUUIySk01dDUxMmdKQytwcTM5TEN0RjZQRkVWZVIvd09LcHV4cUVxUHcvZ0lGNGtmWlFNCisyaGNiSDhQZ2Qvd3BnUHh2QUFxYXNRRmJyekNkK09EcGx5ajRYNUx5c0R0RWIyeERxTDVXK3Nua1pMMWFmV3EKTGlHMG15TFRHMjV1VmlyWTdYYzgvay9MOEE5VGlrUHdGRERsVVZucjVFem50ZkJ4aVl2aDdkK05GazFodGtkawp6VmY0K3NhdnlMUWcxdjNSMExEYXpvbW0yeHN0K0pwNFNnWUdDRXErdEdWZGovMDNmOTJUSTY1dmNYQWtDY2hECmpMUS96YzhKZUd4N29ndUFkektNM2cwc3dhUThJUGxxeVFGU0RWNnBEZGFoRFpoRGpzNUFYUzI5WWhMYTViOEoKNlRUTm0zektqekdPZEFDK1pKNmh5Z2JMbHRvZkhNZms3VkN4QWdNQkFBRUNnZ0VBQmxuV0t2eE1BU2JRMVJzZAovYWU0T1F6ekF1ZCsrd2ZneVpHdDZqcDNuUUhBYmMrK1hMQkxIT1RNTThZMGhwZzJFQkdlSkttV25nQWs3NE5JClhMUmR1SVdQcDMxZnY1Njdoc0FWckxmdlBUSkxKeHdxRTVybFB2TXovUXMxZFlMMlRMRC9QdTBnMXdLeG9Ea0gKaStsWjg0bmEvcDVJTUJDTXUxMjhna21xUWNoRk1ZUHovZ3lyOGlUaU9mNWJDcUpMOTZ2a1B1R1JXRDUybVFkego5dEI2YkhWR3ltcGgxTnBObnJla0llWDBLb2tPMkhUUTRPVTNiZzNvcG1hZzYzbW9QK1lwbndOMWpJd0xyRFRkCkFYd1B4Zkxha0FheUFXRGw0N3c2WXhlT0xDTWdHTkJ2VkdsK0ZVYUZQak9vdkdYWnBPWHhSdDlDS0pycW9yd0oKM003b3dRS0JnUURNWVFOVnYxUVY2V2czRWVyV0ZPYlByYWNZWVVPdXhMTk9jNUdBdzdMdmh5NHdtWGxKWTQ4TApRcXErM2Y0U1dYRjN6d0hNVkMxREJ2RERSRFBsbElPVlZOWGZzTkFLN1pCUU1GTnJRSVUzN1RDakJnbFRDbkV4CmRoUGdjU3M3Z00yN3puRW93bFN6akFFMUV3elhWY3Q4REVZNFhQdlNJdlZZd0xPc1YyakYyUUtCZ1FDVCsrUjIKL0xKTStWbHJTdnhpWHZoWkJDQ1hWQ0lndW42QVA1ZzVBVGhRb2VZQVRJZkExbEN5aEo1RXZydURmVkJQYTZlYgpCVHo1cXY4QWpyK1pSNU9lUGNRODV1QkM2eVg1L3RSZTFhMXNZYkVyVlFkckdFREFSOFIxRnNaUFJVY1VhejY3ClJ3TCtMMUhlSjM1Y1FIYXF0OUVTSXNKYjZHenpaL1FTc3VKaW1RS0JnRElydm4zV01mWVBEaDQycjhkTjZqc2gKRGR2V1JKOHFlam5QOU8vL0duWGlZVnhjMElGTGgxbmtTN1gvR05lNFRUcHovcVVDSlBwSFFlTXRZdkFBdlN4egpYdTFDb2srTWNkaTloRHpYNGR3UXhkZS9LNXJPL1dwKzZmSTIxYjROcUhOcUFpMVhSeU9zUXIrY3BaSlc1VlRXClRvYVhqTm5RNnhtV2RJVGlFRDVCQW9HQU50bC9aY2JsdzNnTWQ2TTBocldTc1ZQQlRMWEhiSUFUVVMvQkdTZmwKbXFWWFhiYi8vaTZ4ZkdtQlRCT3g1dHUwdjZzMFZWWU1zckY1a05oWUZkVWMxdU1uOERiVzJwYlQzYVJoVE1GQQpaVktVVzI1SnNKMHRxdGN1N3dOQS83SzYxTXVuVmJ6TlZDOXYxYnFuc0VQSWVDQm5vcVExaStGTE9MRElHNElvClBNa0NnWUFNcWx5TnMyNXlrTjBPZ0k1eDhMQ0YxN0NRcC85QlpGVk9PdzZETUUwZGtIN2RXQXRGK1ZkYW5Sc0QKc1Q4K2dJYUYweC9oM0lqNDFOWlBaaUEvTE16bEg4MGJ2ZlAvcVJmb2VLWm9kYWc0UTZSYmdlRzkrOUlJNDFqbApaYXllL01xQ09oRXQxTURiTkp0WkZTcnY3RTBwNTNwMUxpbjg5NWR6V2ltZ2gvcGdFQT09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t'
PUBLIC_KEY='LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklUQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FRNEFNSUlCQ1FLQ0FRQjJKTTV0NTEyZ0pDK3BxMzlMQ3RGNgpQRkVWZVIvd09LcHV4cUVxUHcvZ0lGNGtmWlFNKzJoY2JIOFBnZC93cGdQeHZBQXFhc1FGYnJ6Q2QrT0RwbHlqCjRYNUx5c0R0RWIyeERxTDVXK3Nua1pMMWFmV3FMaUcwbXlMVEcyNXVWaXJZN1hjOC9rL0w4QTlUaWtQd0ZERGwKVVZucjVFem50ZkJ4aVl2aDdkK05GazFodGtka3pWZjQrc2F2eUxRZzF2M1IwTERhem9tbTJ4c3QrSnA0U2dZRwpDRXErdEdWZGovMDNmOTJUSTY1dmNYQWtDY2hEakxRL3pjOEplR3g3b2d1QWR6S00zZzBzd2FROElQbHF5UUZTCkRWNnBEZGFoRFpoRGpzNUFYUzI5WWhMYTViOEo2VFRObTN6S2p6R09kQUMrWko2aHlnYkxsdG9mSE1mazdWQ3gKQWdNQkFBRT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To again decode and use then write these code in 'helper/key.js'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;private_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PRIVATE_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;base64&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ascii&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;public_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PUBLIC_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;base64&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ascii&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;write these code in &lt;code&gt;./index.js&lt;/code&gt; file...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;morgan&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;morgan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;cookieParser&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cookie-parser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;graphqlHTTP&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express-graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./graphql/schema/index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Resolver&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./graphql/resolvers/index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./db/index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;verifyToken&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./helpers/jwt.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;extended&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cookieParser&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;morgan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;verifyToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;graphqlHTTP&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;rootValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Resolver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;graphiql&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}))&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server is running on &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may notice that i am using &lt;code&gt;import&lt;/code&gt; instead of 'require'.To use this in your &lt;code&gt;package.json&lt;/code&gt; file add this line anywhere&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"module"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in &lt;code&gt;db/index.js&lt;/code&gt; file write these code..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGODB_URL&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose connected&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And import this file in './index.js'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./db/index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create a User Model write these code in &lt;code&gt;models/user.model.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bcrypt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;userSchema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;save&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;salt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;genSalt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hashedPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;salt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hashedPassword&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to create schema write these code in 'graphql/schema/index.js'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;buildSchema&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;graphql&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;buildSchema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`
    type User{
        _id:ID!
        username:String!
        email:String!
        password:String!
    }
    type Post{
        title:String
        description:String
    }
    input UserInput{
        username:String!
        email:String!
        password:String!
    }
    type LoginReturnType{
        token:String
        userId:ID
    }
    type RootMutation{
        createUser(userInput:UserInput!):User!
    }
    type RootQuery{
        users:[User!]!
        login(email:String!,password:String!):LoginReturnType!
        posts:[Post!]!
    }
    schema{
        query:RootQuery
        mutation:RootMutation
    }
`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that this schema is exported from here and used in './index.js'&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QjRMZv_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4i3cl22fnoqy0cv7ix6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QjRMZv_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4i3cl22fnoqy0cv7ix6i.png" alt="schema" width="880" height="676"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and to create some resolvers write these code in 'graphql/resolvers/userResolver.js'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../models/user.model.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jsonwebtoken&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bcrypt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;private_key&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../helpers/key.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;createUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userInput&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;login&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invalid Credentials!user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isCorrectPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isCorrectPassword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Invalid Credentials!password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;private_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;algorithm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RS256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAuth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Unauthorized&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;accident&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;accident ocurred&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Laptop&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Buy A new Laptop&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure you are using &lt;code&gt;RS256&lt;/code&gt; algorithm otherwise we will not be able to use &lt;code&gt;private and public&lt;/code&gt; two different key while generating and verifying token.&lt;/p&gt;

&lt;p&gt;now import &lt;code&gt;userResolver&lt;/code&gt; in 'graphql/resolvers/index.js' and export as an root object.Because there may remain more resolvers like &lt;code&gt;postResolver&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;userResolvers&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./userResolvers.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;userResolvers&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;May be you have notices i am checking if &lt;code&gt;req.isAuth&lt;/code&gt; exists where do i get that.To get that write these code is &lt;code&gt;helper/jwt.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jsonwebtoken&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../models/user.model.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;private_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;public_key&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./key.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;verifyToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;authToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Authorization&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;authToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;authToken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;verify&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;public_key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are almost done. Make sure you set&lt;code&gt;graphiql&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;graphqlHTTP&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IlxqQcwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aants0nniluindikv502.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IlxqQcwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aants0nniluindikv502.png" alt="graphiql" width="490" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now if you visit to '&lt;a href="http://localhost:5000/graphql"&gt;http://localhost:5000/graphql&lt;/a&gt;' you will see something like this..&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vmywnlgf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yasi56uy1rwkxzjegkhp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vmywnlgf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yasi56uy1rwkxzjegkhp.png" alt="graphiql ui" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now try to create a user,login and get some post&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5QZNR7I1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k8jib1u9hp3yujvtpcu0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5QZNR7I1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k8jib1u9hp3yujvtpcu0.png" alt="craete user" width="880" height="219"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j-TF-zuO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vr9vk1td6z4vy7il7f90.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j-TF-zuO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vr9vk1td6z4vy7il7f90.png" alt="login" width="880" height="245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now to send &lt;code&gt;Authorization&lt;/code&gt; header i am using another rest client that is &lt;code&gt;vs code extension thunder client&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc9EL34a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cpqpzxkqpduwctowldx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc9EL34a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cpqpzxkqpduwctowldx.png" alt="Authorization header" width="880" height="282"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Make sure you added &lt;code&gt;Bearer&lt;/code&gt; or any keyword before &lt;code&gt;token&lt;/code&gt; and separate then with an empty &lt;code&gt;space&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWaVi3yM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl0fi1m86qydvgfeznd1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWaVi3yM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl0fi1m86qydvgfeznd1.png" alt="posts" width="880" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So this is ours authentication api with graphql&lt;/p&gt;

&lt;p&gt;Thanks ❤.&lt;/p&gt;

</description>
      <category>node</category>
      <category>expressjs</category>
      <category>graphql</category>
      <category>authentication</category>
    </item>
  </channel>
</rss>
