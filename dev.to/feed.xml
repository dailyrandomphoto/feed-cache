<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Migrating a Vue 2 project to Vue 3</title>
      <author>Per Enström</author>
      <pubDate>Wed, 24 Nov 2021 10:36:59 +0000</pubDate>
      <link>https://dev.to/perenstrom/migrating-a-vue-2-project-to-vue-3-hdj</link>
      <guid>https://dev.to/perenstrom/migrating-a-vue-2-project-to-vue-3-hdj</guid>
      <description>&lt;p&gt;In September of 2020 Evan You announced the stable release of Vue 3. &lt;a href="https://blog.vuejs.org/posts/vue-3-one-piece.html"&gt;The official blog post&lt;/a&gt; stated that it comes with&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;improved performance, smaller bundle sizes, better TypeScript integration, new APIs for tackling large scale use cases, and a solid foundation for long-term future iterations of the framework.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But should you take the plunge immediately and migrate all your Vue 2 projects to Vue 3? Well, it depends. For many of you, the answer is probably &lt;em&gt;‘not yet’&lt;/em&gt;, for others it’s a wholehearted &lt;em&gt;‘yes’&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Vue 3 doesn’t introduce anything revolutionary that you &lt;a href="https://itnext.io/yes-vue-3-is-out-but-you-probably-dont-need-it-%EF%B8%8F-3e60634991b4"&gt;can’t already do in some fashion in Vue 2&lt;/a&gt;. But some features might be sufficiently attractive to upgrade. Let’s go through the four main features of Vue 3, and then you can make an informed decision yourself.&lt;/p&gt;

&lt;p&gt;First a disclaimer. Coming from a React background, Vue is still quite new to me, and one of the reasons for embarking on the migration journey was to learn more about the inner workings. So don’t expect any deep analysis of advanced new features, and take everything with a grain of salt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-features"&gt;
  &lt;/a&gt;
  New features
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#layered-internal-modules"&gt;
  &lt;/a&gt;
  Layered internal modules
&lt;/h3&gt;

&lt;p&gt;This is basically a fancy way of saying that they’ve &lt;strong&gt;reduced tight coupling&lt;/strong&gt; between internal parts of Vue, making them more modular and swappable. This can also result in a smaller final bundle size, since parts of the Vue runtime may be completely or partly removed during tree shaking.&lt;/p&gt;

&lt;p&gt;These new modules also expose some of their internal APIs, which makes it possible to do some advanced solutions. One example of this is to write a custom renderer (in the blog post they mention Native or integrated systems), and the normal DOM renderer is also using these APIs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance-improvements"&gt;
  &lt;/a&gt;
  Performance improvements
&lt;/h3&gt;

&lt;p&gt;According to their own blog post, Vue 3 is up to &lt;strong&gt;41% smaller&lt;/strong&gt;, renders up to &lt;strong&gt;55% faster&lt;/strong&gt;, updates up to &lt;strong&gt;133% faster&lt;/strong&gt; and uses up to &lt;strong&gt;54% less memory&lt;/strong&gt;. However, in the migration of our product we found negligible bundle size decreases, and in some cases increases. We did not perform any speed performance testing, but my general standpoint is to trust the developers. Our project is so small from the beginning, so perhaps there wasn’t room for much savings. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improved-typescript-integration"&gt;
  &lt;/a&gt;
  Improved TypeScript integration
&lt;/h3&gt;

&lt;p&gt;Vue 3 has been &lt;strong&gt;written completely in TypeScript&lt;/strong&gt;, this means that all internal methods have type definitions bundled. For us developers, this means mainly that you will get some better autocompletion in VS Code, but also that moving your project to Typescript will be easier. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#composition-api"&gt;
  &lt;/a&gt;
  Composition API
&lt;/h3&gt;

&lt;p&gt;Perhaps the largest change is the Composition API, which makes it possible to &lt;strong&gt;couple related data, methods, watches, and computations together&lt;/strong&gt; instead of splitting the concerns over multiple parts of the component. This can make for a more elegant code base, as well as interesting possibilities for reusing parts of the logic in multiple components. See &lt;a href="https://v3.vuejs.org/guide/composition-api-introduction.html"&gt;the introduction article in the Vue documentation&lt;/a&gt; for more information. But basically, it means we can go from this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GcL83K96--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d6g8jxtsxf3cy2zd2ab.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GcL83K96--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d6g8jxtsxf3cy2zd2ab.png" alt="A Vue component with mixed concerns in data, computed and methods"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7kxP3z2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b60iel0gvqo22ss0kbms.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7kxP3z2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b60iel0gvqo22ss0kbms.png" alt="A Vue component using setup, with concerns next to each other"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;and then refactored to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_rfzy0wJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yl6m3w5zca17e05jbogv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_rfzy0wJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yl6m3w5zca17e05jbogv.png" alt="The same Vue component refactored to be brief"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#migration-pattern"&gt;
  &lt;/a&gt;
  Migration pattern
&lt;/h2&gt;

&lt;p&gt;The complexity in migrating an existing Vue 2 project to Vue 3 entirely depends on what external plugins and libraries you are using, and how well they support Vue 3. Vue provides a migration build to ease the process, allowing you to migrate in steps while keeping some backwards compatibility. They also provide nice &lt;a href="https://v3.vuejs.org/guide/migration/migration-build.html"&gt;step-by-step instructions&lt;/a&gt; on how to migrate. I won’t go through it in detail here but will mention some pain points I encountered when migrating.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notable-breaking-changes"&gt;
  &lt;/a&gt;
  Notable breaking changes
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#global-api-changes"&gt;
  &lt;/a&gt;
  Global API changes
&lt;/h4&gt;

&lt;p&gt;Where you could previously access the global &lt;code&gt;Vue&lt;/code&gt; object to, for example, add some global variables to &lt;code&gt;Vue.prototype&lt;/code&gt;, you now have to do add it to the config object of the actual Vue instance you’re using, i.e. &lt;code&gt;app.config.globalProperties&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-vmodel-endraw-on-custom-components"&gt;
  &lt;/a&gt;
  &lt;code&gt;V-model&lt;/code&gt; on custom components
&lt;/h4&gt;

&lt;p&gt;When using &lt;code&gt;v-model&lt;/code&gt; on custom components, the incoming data and emitted events have been changed. They can now be accessed on &lt;code&gt;modelValue&lt;/code&gt; and &lt;code&gt;update:modelValue&lt;/code&gt;. This opens up for custom components to have multiple &lt;code&gt;v-model&lt;/code&gt; bindings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#functional-components"&gt;
  &lt;/a&gt;
  Functional components
&lt;/h4&gt;

&lt;p&gt;Functional components are now only created via a plain function and the functional attribute on single-file components have been deprecated. Where you previously used functional components to gain some performance increases, this gain is now negligible and the recommended way is to move all components to stateful components.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#render-function-changes"&gt;
  &lt;/a&gt;
  Render function changes
&lt;/h4&gt;

&lt;p&gt;If you’re using the render function in any of your components instead of normal template components. The syntax for this has now changed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#migration-steps"&gt;
  &lt;/a&gt;
  Migration steps
&lt;/h3&gt;

&lt;p&gt;The steps to complete migration can be found in the documentation, but mainly consists of:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Update Vue and add compatibility package&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix warnings exposed by the compatibility package&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update mounting of your app&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Upgrade &lt;code&gt;vuex&lt;/code&gt;, &lt;code&gt;vue-router&lt;/code&gt;, and any other Vue plugins you’re using&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When all warnings are fixed, uninstall the compatibility package&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Overall the migration is easy to follow, and all official plugins (&lt;code&gt;vuex&lt;/code&gt;, &lt;code&gt;vue-router&lt;/code&gt;, etc) have good migration guides as well. We noted that we used &lt;code&gt;node-sass&lt;/code&gt;, which has been deprecated and replaced by sass, but that was an easy swap. We couldn’t go past v10 of &lt;code&gt;sass-loader&lt;/code&gt;, since it requires Webpack 5, which is a migration for another day.&lt;/p&gt;

&lt;p&gt;One package we used for automatic formatting of input fields, &lt;code&gt;vue-mask&lt;/code&gt;, seemed abandoned when we migrated, but seems to be updated to Vue 3 now. But keep an eye out for packages that doesn’t support Vue 3.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-it-not-raw-latest-endraw-"&gt;
  &lt;/a&gt;
  Why is it not &lt;code&gt;@latest&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;If you’ve looked into Vue 3, you might have found that (at the time of writing) the &lt;code&gt;@latest&lt;/code&gt; tag on NPM still points to Vue 2, with Vue 3 being relegated to &lt;code&gt;@next&lt;/code&gt; still. Even though Vue 3 was released in 2020, they are holding up on pointing everyone to the latest version until more plugins have been migrated to support Vue 3. Since Vue 3 contains a number of breaking changes, if you rely on a plugin that hasn’t migrated, you’re still stuck on Vue 2. &lt;/p&gt;

&lt;p&gt;The communication from Vue on this subject could be more transparent, however. Their roadmaps and blogposts are at this point quite outdated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#should-you-take-the-plunge"&gt;
  &lt;/a&gt;
  Should you take the plunge?
&lt;/h3&gt;

&lt;p&gt;It depends. If you’re not using any of the deprecated features extensively, then I would absolutely recommend upgrading. Especially if you’re looking to moving to Typescript, the process will be easier if you’re on Vue 3. All official packages and dev tools support Vue 3, so if you use a fairly vanilla setup, the process will probably be smooth.&lt;/p&gt;

&lt;p&gt;If you use some packages that don’t support Vue 3, and you can’t find alternatives (as we did), you will have to stay on Vue 2. That being said, if you didn’t feel like any of the new features seem interesting to you, you’re fine being on Vue 2. &lt;/p&gt;

&lt;p&gt;But as with all projects, staying up to date has its perks. As time goes on, more and more packages will migrate to Vue 3, and eventually drop support for Vue 2, at which point you’re forced to upgrade for the same reason as you were forced to wait before.&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Google oAuth on NextJs</title>
      <author>Ekama Emmanuel </author>
      <pubDate>Wed, 24 Nov 2021 10:35:20 +0000</pubDate>
      <link>https://dev.to/ekamanelly/google-oauth-on-nextjs-3ml5</link>
      <guid>https://dev.to/ekamanelly/google-oauth-on-nextjs-3ml5</guid>
      <description>&lt;p&gt;If your search has brought you here, then I'm sure you have done some type of authentication and authorization with probably Express &lt;a href="https://www.npmjs.com/package/passport"&gt;PassportJs&lt;/a&gt; on a project, so Let's save our time by jumping to straight to bullet overview and implementation.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Add NextJs app to Google console &lt;/li&gt;
&lt;li&gt;Configure NextJs app with firebaseConfig (some few changes with firebase v9.0.0)&lt;/li&gt;
&lt;li&gt;Employ environment variable to hold secret
&lt;/li&gt;
&lt;li&gt;Build an auth-Service&lt;/li&gt;
&lt;li&gt;Protected routes with custom hooks
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Adding your Next app to Google console is pretty easy, It's like when you deploy on Varcel, with some few clicks you are done! You have a dashboard that gives a brief overview of your project when you create a project on google console. click on "Add app" button at the top and you will be taken to this page to provide a nickname for your app, mine is MetaApp. Then, follow the next few steps, it is self explanatory. Don't forget to copy firebaseConfig!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ocI3l7cL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5czqcvz2k1vxpl7t1bfp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ocI3l7cL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5czqcvz2k1vxpl7t1bfp.PNG" alt="Register app" width="768" height="520"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you're through with app registration, let's make use of the snippet you copied. Create a file with a name related to firebase, something like &lt;code&gt;fireBaseClient.js&lt;/code&gt; in a Service Folder and then import firebase app and auth.  *&lt;em&gt;side note **We import app and auth from *firebase/compact/&lt;/em&gt; not  &lt;em&gt;firebase/&lt;/em&gt; since Version 9 like so&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// service/fireBaseClient.js

import firebase from "firebase/compat/app";    firebase v9
import "firebase/compat/auth";                 firebase V9
import "firebase/compat/firestore";            firebase V9

// import firebase from "firebase/app";         firebase v8 
// import "firebase/auth";                      firebase v8 
// import "firebase/firestore";                 firebase v8 



const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,
};
if (!firebase.apps.length) {
  firebase.initializeApp(firebaseConfig);
}
export default firebase;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You noticed how we hid the secret keys with environment variable? yeah, it's possible with NextJs. All I did was add an &lt;code&gt;env.local&lt;/code&gt; file to the root directory and paste the secret. Another &lt;strong&gt;side note&lt;/strong&gt; is that each env variable should start with &lt;code&gt;NEXT_PUBLIC_&lt;/code&gt; with whatever you chose to complete the name. It's how Next.js gets to know what to load or bundle. Also, there are trailing commas &lt;code&gt;,&lt;/code&gt; that came with the code we copied, get rid of them. I lost a couple hours debugging them. Once that is done we don't have to worry about our secret getting stolen by village people, haha! Quick example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEXT_PUBLIC_SOMENAME = "MetaAppSecrete"
// don't forget the comma
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will also see a condition &lt;code&gt;!firebase.apps.length&lt;/code&gt;,  this is to make sure we don't initialize another firebase app. Now we have completed firebase setup. It's time to build a signUpWithGoogle service&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;service/firebaseAuth.service.js

import firebase from "firebase/compat/app";
import "firebase/compat/auth";

export const  AuthService = {}

AuthService.loginWithGoogle = async () =&amp;gt; {
  const provider = new firebase.auth.GoogleAuthProvider();
  try {
    const { user } = await firebase.auth().signInWithPopup(provider);
    return {
      user,
    };
  } catch (error) {
    return {
      error: error.message,
    };
  }
};


AuthService.logout = async () =&amp;gt; {
  await firebase.auth().signOut();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Honestly, I feel like there is no need explaining the code because you might shoplift it, which in my opinion, is the best technique of coding fast with &lt;a href="https://stackoverflow.com"&gt;StackOverflow&lt;/a&gt;. But let me explain, google gives us a provider when we execute this &lt;code&gt;new firebase.auth.GoogleAuthProvider()&lt;/code&gt; and we will call the type of login method we want on the provider, in our case it's &lt;code&gt;signInWithPopup&lt;/code&gt; type. There are others that redirects the user but I prefer the popup.&lt;/p&gt;

&lt;p&gt;Finally, we can tie our loginWithGoogle function to a signup button with an &lt;code&gt;onClick&lt;/code&gt; event. You don't need a snippet for this, do you?  &lt;/p&gt;

&lt;p&gt;This  post is becoming too long so I will deal with route protection in as a separate post.   &lt;/p&gt;

</description>
    </item>
    <item>
      <title>JavaScript Array length – the definitive guide</title>
      <author>Amer Sikira</author>
      <pubDate>Wed, 24 Nov 2021 10:11:08 +0000</pubDate>
      <link>https://dev.to/amersikira/javascript-array-length-the-definitive-guide-1366</link>
      <guid>https://dev.to/amersikira/javascript-array-length-the-definitive-guide-1366</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://webinuse.com/javascript-array-length-the-definitive-guide/"&gt;webinuse.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;JavaScript Array length property is something we use, almost, every time we work with an array. But, often, we forget how powerful this property can really be.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-javascript-array-length-property"&gt;
  &lt;/a&gt;
  What is JavaScript Array length property
&lt;/h3&gt;

&lt;p&gt;The length property of an object which is an instance of type Array sets or returns the number of elements in that array. The value is an unsigned, 32-bit integer that is always numerically greater than the highest index in the array, as per &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length"&gt;MDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What does this mean? This means that length property “belongs” to Array &lt;a href="https://webinuse.com/guide-to-javascript-data-types/"&gt;data type&lt;/a&gt; and that it, either, returns the number of elements or sets the number of elements. Since the Array index is zero-based, the integer that is returned by length must be greater than the highest index by 1.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dense-and-sparse-arrays"&gt;
  &lt;/a&gt;
  Dense and sparse arrays
&lt;/h3&gt;

&lt;p&gt;There are two types of Arrays in JavaScript: dense and sparse. JavaScript Array length property gives different results for these two types. That is why we said that length must be greater than the highest index by 1. This means that sometimes &lt;code&gt;.length&lt;/code&gt; property doesn’t actually return the exact number of elements, but rather the highest index plus 1. In order to explain this, we need to take a look at the difference between dense and sparse arrays.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#dense-arrays"&gt;
  &lt;/a&gt;
  Dense arrays
&lt;/h4&gt;

&lt;p&gt;Dense arrays are the type of arrays that we usually work with.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a typical example of a dense array, the type of array we are familiar with and work with.&lt;/p&gt;

&lt;p&gt;JavaScript Array length property will always return the exact number of elements when it comes to dense arrays.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;highestIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highestIndex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;//2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see, &lt;code&gt;.length&lt;/code&gt; returned &lt;code&gt;3&lt;/code&gt; which is the exact number of items in the array &lt;code&gt;arr&lt;/code&gt;. The highest index is &lt;code&gt;2&lt;/code&gt;. Let’s try to add elements to an array and empty an array, and then check an index and the length.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="cm"&gt;/**
 * We know that arr.length === 3
 * Let's add an element to array
 * */&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ferrari&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;// 4&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * In previous example highest index
 * was 2, let's check it now, after
 * we have added another element
 * */&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;//3&lt;/span&gt;

&lt;span class="c1"&gt;//Let's empty our array&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have emptied an array, it is pointless to check for index, because there is nothing inside our array.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sparse-arrays"&gt;
  &lt;/a&gt;
  Sparse arrays
&lt;/h4&gt;

&lt;p&gt;What is a “Sparse array?” It is, basically, an array with holes. This means that sparse array doesn’t, necessarily, start at 0. Also, this means that sparse arrays don’t have sequential elements, there can be cases when there is not element after element, but rather a hole. Let’s take a look at several examples.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[,,,,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the first variable &lt;code&gt;arr&lt;/code&gt;, we have 3 elements and “hole”/”empty space” on index 2. The second variable has 4 empty indexes and on the fifth we have &lt;code&gt;"JavaScript"&lt;/code&gt;. &lt;code&gt;arr3&lt;/code&gt; variable is created as an empty array. And then we assigned &lt;code&gt;"Python"&lt;/code&gt; on index 50. This means that there are 50 empty places before &lt;code&gt;"Python"&lt;/code&gt;, or 49 indexes. These were all examples of sparse arrays. Now, let’s use the JavaScript Array length property on all of those, to see what will happen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(4) ['Audi', 'BMW', empty, 'Mercedes']&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[,,,,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(5) [empty × 4, 'JavaScript']&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(51) [empty × 50, 'Python']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see in the example above &lt;code&gt;console.log()&lt;/code&gt; returned more than length. Even though we expected an integer, we got an integer plus array. This is because the browser is aware that this is a sparse array and it gave us the heads up. Also, wherever we had “hole” browser returned &lt;code&gt;empty&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#manipulate-array-with-javascript-array-length-property"&gt;
  &lt;/a&gt;
  Manipulate array with JavaScript Array length property
&lt;/h3&gt;

&lt;p&gt;JavaScript Array length property allows us to change the array’s length, by extending it, shortening it, or emptying it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#extend-array"&gt;
  &lt;/a&gt;
  Extend array
&lt;/h4&gt;

&lt;p&gt;When we use the JavaScript Array length property to extend an array what do we get? A Sparse Array. Here is an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//3&lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(5) ['Audi', 'BMW', 'Mercedes', empty × 2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above we used our standard array and then we used &lt;code&gt;.length&lt;/code&gt; which returned 3. After that, we used JavaScript Array length’s ability to mutate array and we set the array’s length to 5. When we console logged &lt;code&gt;arr&lt;/code&gt; again we saw that, now, &lt;code&gt;arr&lt;/code&gt; has a length of 5 and that two empty indexes are added at the end of it. So, basically, we got a sparse array.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#shorten-an-array"&gt;
  &lt;/a&gt;
  Shorten an array
&lt;/h4&gt;

&lt;p&gt;As we said, the JavaScript Array length property gives us the ability to shorten an array. When we use &lt;code&gt;.length&lt;/code&gt; property, it just takes the exact number of elements that we provided from the beginning of the array. The rest of the elements are discarded and the array is mutated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//3&lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//['Audi']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have shortened our array to 1 element, and only the first element is kept. The rest of them are deleted.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#empty-an-array"&gt;
  &lt;/a&gt;
  Empty an array
&lt;/h4&gt;

&lt;p&gt;We can empty an array using JavaScript Array length. Once we pass &lt;code&gt;0&lt;/code&gt; as our array’s length, our array will become empty.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//3&lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see from the code snippet when we set our length to &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;console.log()&lt;/code&gt; returned an empty array.&lt;/p&gt;

&lt;p&gt;If you have any questions or anything you can find me on my &lt;a href="https://twitter.com/AmerSikira"&gt;Twitter&lt;/a&gt;, or you can read some of my other articles like &lt;a href="https://webinuse.com/how-to-create-custom-stackable-toast/"&gt;How to create custom stackable toasts&lt;/a&gt;?&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Flutter Web x Firebase Hosting - GitHub Action</title>
      <author>Chris Boik</author>
      <pubDate>Wed, 24 Nov 2021 09:57:44 +0000</pubDate>
      <link>https://dev.to/mysticza/flutter-web-x-firebase-hosting-github-action-3fke</link>
      <guid>https://dev.to/mysticza/flutter-web-x-firebase-hosting-github-action-3fke</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;This GitHub Actions workflow assists Flutter developers specifically outputting to Web.&lt;br&gt;
Please see the additional resource below to stay up-to-date with the required tools for this workflow to work.&lt;/p&gt;

&lt;p&gt;The YAML files below are partially auto-generated by the Firebase CLI when setting up hosting but require additional DIY steps included for you to use directly after replacing the placeholders with the names of your secrets, project IDs, and preferred hosting channels.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;DIY Deployments&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#yaml-files"&gt;
  &lt;/a&gt;
  Yaml Files
&lt;/h3&gt;

&lt;p&gt;
  Deploy to Firebase Hosting on Merge
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# This file was PARTIALLY auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - master
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1 #required (unofficial as no official tool exists, yet!)
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter pub get &amp;amp;&amp;amp; flutter build web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.YOUR-FIREBASE-SERVICE-ACCOUNT-SECRET-NAME }}'
          channelId: live #Your preferred Firebase channel
          projectId: YOUR-PROJECT-ID

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;p&gt;
  Deploy to Firebase Hosting on PR
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# This file was PARTIALLY auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
'on': pull_request
jobs:
  build_and_preview:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1 #required (unofficial as no official tool exists, yet!)
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter pub get &amp;amp;&amp;amp; flutter build web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.YOUR-FIREBASE-SERVICE-ACCOUNT-SECRET-NAME }}'
          projectId: YOUR-PROJECT-ID



&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;This workflow wouldn't be possible without the brilliant:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/subosito"&gt;
        subosito
      &lt;/a&gt; / &lt;a href="https://github.com/subosito/flutter-action"&gt;
        flutter-action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flutter environment for use in actions. It works on Linux, Windows, and macOS.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>actionshackathon21</category>
      <category>flutter</category>
      <category>firebase</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Best Black Friday + Cyber Monday Deals 2021 for Programmers and Developers</title>
      <author>javinpaul</author>
      <pubDate>Wed, 24 Nov 2021 09:54:55 +0000</pubDate>
      <link>https://dev.to/javinpaul/10-best-black-friday-cyber-monday-deals-2021-for-programmers-and-developers-2hg1</link>
      <guid>https://dev.to/javinpaul/10-best-black-friday-cyber-monday-deals-2021-for-programmers-and-developers-2hg1</guid>
      <description>&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSkCwbsQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2ABQDuZHro4cBXDHctFYqZSw.png" alt="" width="667" height="263"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;image_credit- Codecademy&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you are looking for the best Black Friday and Cyber Monday 2021 deals to invest in your learning then you have come to the right place.&lt;/p&gt;

&lt;p&gt;In this article, I have selected the &lt;em&gt;best Black Friday and Cyber Monday deals&lt;/em&gt; for programmers, developers, software engineers, and IT professionals who want to invest in learning new technology and upskilling themselves in 2022.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Black Friday and Cyber Monday&lt;/strong&gt; are special occasion to buy and probably the best time to invest in your technical skills. This is the time when every company offers sweet deals on books, courses, tools, and things that matter most for programmers and developers.&lt;/p&gt;

&lt;p&gt;But, at the same time, it's not easy to find out great deals which are worth it for you. I have been receiving a lot of great offers from sites like &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy&lt;/a&gt;, &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Pluralsight&lt;/a&gt;, &lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;Educative&lt;/a&gt;, &lt;a href="https://bit.ly/codecademypro"&gt;CodeCademy&lt;/a&gt;, &lt;a href="https://datacamp.pxf.io/c/1193463/1012793/13294?u=https%3A%2F%2Fwww.datacamp.com%2Fpricing"&gt;DataCamp&lt;/a&gt;, &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;Coursera&lt;/a&gt; about their Black Friday deals and many of my readers were also asking me about that.&lt;/p&gt;

&lt;p&gt;After answering them individually on email and social networks, I thought to put together the best Black Friday deals for programmers and software developers together.&lt;/p&gt;

&lt;p&gt;This will not only help you to find great deals but also you can get them before they get expired as these offers are highly time-sensitive and over by next week or so.&lt;/p&gt;

&lt;p&gt;If you are thinking to buy &lt;a href="https://medium.com/javarevisited/10-best-udemy-online-courses-for-java-developers-4c9ab70cd01f"&gt;Udemy courses&lt;/a&gt;, you can buy more than one course because Udemy provides lifetime access so you can watch those courses when you need them. Similarly, if you are on Pluralsight or Educative annual plan this is the best time to renew them and save for your future learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-best-black-friday-and-cyber-monday-educational-deals-for-programmers-and-software-developers"&gt;
  &lt;/a&gt;
  10 Best Black Friday and Cyber Monday Educational Deals for Programmers and Software Developers.
&lt;/h2&gt;

&lt;p&gt;Without wasting any more of your time, here is a list of the best Black Friday and Cyber Monday deals for programmers and developers. I have mostly chosen deals that allow you to buy courses, books, and other technical membership at a huge discount like from 20% to 40% and up to 90% in case of Udemy sales.&lt;/p&gt;

&lt;p&gt;This is seriously the best time to buy this course and services as you can get almost double value than normal time. So, if you want to invest in your career and learning this is the perfect time to make the investment.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-udemy-black-friday-and-cyber-monday-sale-999-85-off"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy BLACK Friday and Cyber Monday Sale ($9.99)&lt;/a&gt; [85% OFF]
&lt;/h4&gt;

&lt;p&gt;Udemy is running the biggest sale of the year with courses starting from $10 to $12. You can get comprehensive courses with 20+ hours of content in just $10 which is ridiculous and true.&lt;/p&gt;

&lt;p&gt;Udemy seriously makes education affordable and that's why I love Udemy courses. and this is probably the best time to buy Udemy courses.&lt;/p&gt;

&lt;p&gt;Since Udemy provides lifetime access to their courses I usually buy a lot of courses during this time. If you need some recommendations, here are a couple of the best Udemy courses you can buy this Black Friday:&lt;/p&gt;

&lt;p&gt;1.&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fdocker-kubernetes-the-practical-guide%2F"&gt;Docker &amp;amp; Kubernetes: The Practical Guide&lt;/a&gt;&lt;br&gt;
2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-sql-databases-bootcamp-zero-to-mastery%2F"&gt;Complete SQL + Databases Bootcamp: Zero to Mastery [2022]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are the most up-to-date, engaging, and comprehensive courses you can buy on this year's Udemy Black Friday and Cyber Monday sale.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount --- up to 85% discount&lt;/strong&gt;&lt;br&gt;
Coupon Code --- No coupon required&lt;/p&gt;

&lt;p&gt;Here is the link to get your discount --- &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy BLACK Friday and Cyber Monday Sale ($9.99)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_8AWRlCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AM_Af5iBIhh4_XBRyubVKzA.png" alt="best Udemy deal for black Friday 90% discount" width="667" height="229"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-pluralsight-black-friday-and-cyber-monday-deal-40-off"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Pluralsight Black Friday and Cyber Monday Deal&lt;/a&gt; [40% OFF]
&lt;/h3&gt;

&lt;p&gt;Pluralsight is another place where I go to learn new skills. It has the best collection of online courses from reputed instructors like Jose Paumard and Richard Warburton, Java champions, and Pinal Dave, an SQL expert which I admire a lot.&lt;/p&gt;

&lt;p&gt;Pluralsight is offering a &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;strong&gt;whopping 40% discount&lt;/strong&gt;&lt;/a&gt; on their persona, annual, and premium membership, which means you can buy their annual membership in just &lt;strong&gt;$179 per year&lt;/strong&gt; instead of the usual $299 per year, and their premium membership, which has quizzes, exercise, and interactive courses are now available for $269 instead of $449 for one year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount --- up to 40% discount&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this article, you will know everything regarding Pluralsight Black Friday Deals and Coupon Codes and how to use them and also join Pluralsight free weekend to try out all of their courses for FREE for one weekend&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to grab your discount &lt;/strong&gt;---&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;strong&gt; Pluralsight 40% OFF&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6n6CGCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AGKq5JReNm1o_pg0HyHNCgQ.jpeg" alt="best Pluralsight deal for black Friday 40% discount" width="600" height="315"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like membership websites then I highly recommend getting their premium membership which is now available for &lt;strong&gt;just $269 per year&lt;/strong&gt;. If you are in doubt you can still try their &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpricing%2Ffree-trial"&gt;&lt;strong&gt;10-day-free-pass&lt;/strong&gt;&lt;/a&gt; to check the course quality and I am 100% sure that you will be delighted.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-codecademy-black-friday-amp-cyber-monday-deal-50-off"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.gopjn.com/t/TUJGR0lLR0JHRklJSkhCR0ZISk1N?url=https%3A%2F%2Fwww.codecademy.com%2Fsubscriptions%2FproAnnualV3%2Fcheckout%3FdiscountCode%3DCYBER21"&gt;Codecademy Black Friday &amp;amp; Cyber Monday Deal&lt;/a&gt; [50% OFF]
&lt;/h3&gt;

&lt;p&gt;Codecademy is one of the pioneers of interactive learning and I have learned a lot of useful skills like JavaScript from their free course. Now, they have take their portal to next level and created many learning paths where you can learn an in-demand skill in a structured way by following the learn-by-doing method.&lt;/p&gt;

&lt;p&gt;They are structured is super with a short burst of knowledge with interactive exercises and then a project to apply all the knowledge and gain confidence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount ---&lt;/strong&gt; &lt;em&gt;50% OFF on annual subscription&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;They are offering a &lt;strong&gt;50% discount&lt;/strong&gt; on all of their annual plans with code &lt;strong&gt;CYBER21&lt;/strong&gt;, which means you can buy their CodeCademy Pro annual plan for just &lt;strong&gt;$11.99 per month&lt;/strong&gt; which is the cost of an Udemy course, and you will get access to many of their courses, quizzes, and career path.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to get a discount&lt;/strong&gt; --- &lt;a href="https://www.gopjn.com/t/TUJGR0lLR0JHRklJSkhCR0ZISk1N?url=https%3A%2F%2Fwww.codecademy.com%2Fsubscriptions%2FproAnnualV3%2Fcheckout%3FdiscountCode%3DCYBER21"&gt;&lt;strong&gt;50% Off Direct Annual Subscriptions at Codecademy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gopjn.com/t/TUJGR0lLR0JHRklJSkhCR0ZISk1N?url=https%3A%2F%2Fwww.codecademy.com%2Fsubscriptions%2FproAnnualV3%2Fcheckout%3FdiscountCode%3DCYBER21"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSkCwbsQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2ABQDuZHro4cBXDHctFYqZSw.png" alt="best CodeCademy deal for black Friday 50% discount" width="667" height="263"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-datacamp-black-friday-and-cyber-monday-deal-63-off"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://datacamp.pxf.io/c/1193463/1012793/13294?u=https%3A%2F%2Fwww.datacamp.com%2Fpromo%2Fnovember-flash-sale-2021"&gt;Datacamp Black Friday and Cyber Monday Deal&lt;/a&gt; [63% OFF]
&lt;/h3&gt;

&lt;p&gt;DataCamp is one of the best websites to learn Python, SQL, Power BI, DataScience, and Machine learning. Data Science is offering a whopping &lt;strong&gt;62% discount&lt;/strong&gt; this means you can buy an annual subscription for just $149/year as opposed to $399 per year.&lt;/p&gt;

&lt;p&gt;With this subscription, you will get access to 340+ courses and 10,400+ exercises. If you want to learn essential &lt;strong&gt;Data Skills in 2021&lt;/strong&gt; then I highly recommend Datacamp and this is the perfect time to get the membership and save 62% now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount --- 63% on Annual Plans&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn data skills in 2022 then you should take advantage of the latest DataCamp sale or discount to learn data science and gain access to hundreds of interactive courses covering Python, R, SQL, machine learning, non-coding essentials, and much more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to get the discount &lt;/strong&gt;--- &lt;a href="https://datacamp.pxf.io/c/1193463/1012793/13294?u=https%3A%2F%2Fwww.datacamp.com%2Fpromo%2Fnovember-flash-sale-2021"&gt;&lt;strong&gt;&lt;em&gt;Save up to 63% on Premium plans&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://datacamp.pxf.io/c/1193463/1012793/13294?u=https%3A%2F%2Fwww.datacamp.com%2Fpromo%2Fnovember-flash-sale-2021"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xRJI9JiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2A76xrnvtC_5JniM65mgHZdQ.png" alt="best Datacamp deal for black Friday 60% discount " width="667" height="371"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-educative-black-friday-deal-70-discount"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;Educative Black Friday Deal (70% discount)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Educative is an interactive, text-based platform that allows you to run code on a browser. This means you don't need to set up your environment which is often the biggest hurdle in learning new technologies.&lt;/p&gt;

&lt;p&gt;I love Educative courses, especially their coding interview courses like &lt;a href="https://medium.com/javarevisited/10-best-system-design-courses-for-coding-interviews-949fd029ce65"&gt;Grokking the System Design&lt;/a&gt; and &lt;a href="https://medium.com/hackernoon/10-data-structure-algorithms-and-programming-courses-to-crack-any-coding-interview-e1c50b30b927"&gt;Grokking the Coding interview pattern&lt;/a&gt; courses.&lt;/p&gt;

&lt;p&gt;If you are preparing for coding interviews and love text-based interactive courses then you will love the Educative portal. They also have many useful learning paths like Java for programmers, Become A frontend developer, and scalability and System Design for Developers.&lt;/p&gt;

&lt;p&gt;They are now offering an additional 20% discount on their annual plan which gives access to their 200+ courses. This means you can buy their annual plan &lt;strong&gt;for just $14.99,&lt;/strong&gt; the usual price of $39.99 so a total discount of more than 70%. The offer ends on 30th November.&lt;/p&gt;

&lt;p&gt;Here is the link ---&lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;&lt;strong&gt; Educative Unlimited for $14.9&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6h5URJlm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AQYrghID0xG0wN0JYDpSBOQ.png" alt="" width="667" height="349"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-40-off-on-vlad-mihalceas-hibernate-books-and-courses"&gt;
  &lt;/a&gt;
  6. 40% OFF on Vlad Mihalcea's Hibernate Books and Courses
&lt;/h3&gt;

&lt;p&gt;Java champion and fellow blogger, Vlad Mihalcea is conducting a live online workshop to teach you Hibernate in depth. Yes, the &lt;a href="https://vladmihalcea.teachable.com/p/high-performance-java-persistence-online-workshop?coupon_code=JAVINPAULDISCOUNT&amp;amp;affcode=172599_kuoszt8s"&gt;&lt;strong&gt;High-Performance Java Persistence training&lt;/strong&gt; &lt;/a&gt;is open now&lt;/p&gt;

&lt;p&gt;This will be a live online zoom training and it consists of &lt;strong&gt;4 sessions&lt;/strong&gt; of &lt;strong&gt;4 hours&lt;/strong&gt; each is scheduled for the &lt;strong&gt;29th November --- 2nd of December&lt;/strong&gt;, from &lt;strong&gt;15:30&lt;/strong&gt; to &lt;strong&gt;19:30 CET.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you know, Hibernate is the most popular JPA provider and one of the most important frameworks for Java developers. Knowing its inner workings can make the difference between a high-performance enterprise application and one that barely crawls.&lt;/p&gt;

&lt;p&gt;This online workshop is based on Vlad's popular,&lt;a href="https://vladmihalcea.teachable.com/p/high-performance-java-persistence-ebook?coupon_code=BLACKFRIDAY21&amp;amp;affcode=172599_kuoszt8s"&gt; &lt;em&gt;High-Performance Java Persistence&lt;/em&gt;&lt;/a&gt;, a book that is trusted by more than 7500+ developers. This online workshop is meant to mind the gap between Java developers and database programming.&lt;/p&gt;

&lt;p&gt;Here are topics that Vlad will cover in this live Hibernate training:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Logging, Testing, Schema Management best practices&lt;/li&gt;
&lt;li&gt;  Data modeling (types, identifiers, entity mappings, inheritance)&lt;/li&gt;
&lt;li&gt;  Batch processing (Persistence Context Management, batch updates, bulk updates)&lt;/li&gt;
&lt;li&gt;  Fetching best practices&lt;/li&gt;
&lt;li&gt;  Transactions and concurrency control&lt;/li&gt;
&lt;li&gt;  Caching best practices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, Vlad is also running a Black Friday and Cyber Monday campaign where you can get his books and courses for a 40% discount.&lt;/p&gt;

&lt;p&gt;Here is the link --- &lt;a href="https://vladmihalcea.teachable.com/p/high-performance-java-persistence-mach-3-online?coupon_code=BLACKFRIDAY21&amp;amp;affcode=172599_kuoszt8s"&gt;&lt;strong&gt;40% off on the High-Performance Java Persistence course&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vladmihalcea.teachable.com/p/high-performance-java-persistence-mach-3-online?coupon_code=BLACKFRIDAY21&amp;amp;affcode=172599_kuoszt8s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WED1po0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2APWBRS8BPuCDyUsSpfwmBcA.jpeg" alt="" width="667" height="266"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-whizlabs-60-discount-on-practice-test-and-courses"&gt;
  &lt;/a&gt;
  8. Whizlabs [60% Discount on Practice Test and Courses]
&lt;/h3&gt;

&lt;p&gt;I am also excited to inform you that Whizlabs BLACK FRIDAY SALE is also LIVE from 23rd November. During this Hottest Sale of the Year, we'll be getting &lt;em&gt;60% off&lt;/em&gt; on all of their best Online Courses &amp;amp; Practice Tests, and up to &lt;a href="https://shareasale.com/r.cfm?b=1551042&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;35% off on all of their Premium Subscription plans&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don't know, Whizlabs is the best place to go if you are preparing for Certifications. I have used their practice tests to pass Java, Spring, and Cloud certifications for a long time.&lt;/p&gt;

&lt;p&gt;Here are some of the best Whizlabs Courses and Practice tests for Java developers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="http://shrsl.com/38rng"&gt;&lt;strong&gt;OCPJPD 1Z0--819 Full Test&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://shrsl.com/25qiz"&gt;&lt;strong&gt;AWS Certified Cloud Practitioner&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://shrsl.com/25qjc"&gt;&lt;strong&gt;AWS Certified Developer Associate&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://shareasale.com/m-pr.cfm?merchantid=43514&amp;amp;userid=880419&amp;amp;productid=792775328&amp;amp;afftrack="&gt;AWS Certified Solutions Architect Associate&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Nowadays, Whizlabs also have a subscription plan which provides access to all of their courses and practice test for one single price.&lt;/p&gt;

&lt;p&gt;if you are preparing for certification, consider taking Whizlabs subscription which provides full access to all of their online training courses and practice tests for different certifications like AWS, Java, Cloud, Docker, and Kubernetes with just &lt;a href="https://shareasale.com/r.cfm?b=1551042&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;$149 per annum (35% discount now)&lt;/strong&gt;&lt;/a&gt;. I highly recommend this subscription plan as Whizlabs has the best materials to prepare for IT certifications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://shareasale.com/r.cfm?b=1551042&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nsxS3UK0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AWay5xPlJ9w8cNggnIsiVoQ.png" alt="" width="667" height="402"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#9-coursera-plus-for-1"&gt;
  &lt;/a&gt;
  9. Coursera Plus for $1
&lt;/h3&gt;

&lt;p&gt;This is another biggest sale of the year and probably the best Black Friday deal for people who wants to learn on Coursera and try out Coursera courses, professional certifications, and specialization. &lt;/p&gt;

&lt;p&gt;Coursera is now offering their premium subscription plan &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus%2Fspecial%2Fcyber2021"&gt;&lt;strong&gt;Coursera Plus for $1&lt;/strong&gt;&lt;/a&gt; for 1st month. &lt;/p&gt;

&lt;p&gt;If you don't know Coursera has the best courses from top tech companies like Google, Microsoft, and AWS as well as from the best universities around the world, and Coursera plus give unlimited access to over 90% of courses, Guided Projects, Specializations, and Professional Certificates on Coursera, taught by top instructors from leading universities and companies.&lt;/p&gt;

&lt;p&gt;If you always wanted to try &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus%2F"&gt;Coursera Plus&lt;/a&gt;, this is the best time as you can try for $1 but remember that after the first month, this subscription auto-renews monthly for $59/month.&lt;/p&gt;

&lt;p&gt;By the way, this offer is only valid for new Coursera Plus subscribers only. After the first month, this subscription auto-renews monthly for $59/month. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to try Coursera Plus for $1&lt;/strong&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus%2Fspecial%2Fcyber2021"&gt;&lt;strong&gt;Coursera Plus for $1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus%2Fspecial%2Fcyber2021"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IDle8AnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AxTdz2RohrXznbhRqmgkf9g.png" alt="" width="667" height="350"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#10-udacity-buy-one-gift-one-free-nanodegree-program"&gt;
  &lt;/a&gt;
  10. Udacity [Buy One, Gift One FREE Nanodegree program]
&lt;/h3&gt;

&lt;p&gt;When everyone is running the Black Friday offer, how come Udacity, another leading online learning platform can be left behind. They are also offering a &lt;a href="https://imp.i115008.net/c/1193463/1201337/11298"&gt;&lt;strong&gt;Buy One, Gift One FREE Nanodegree program&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you will purchase multi-month access to any Nanodegree program you will receive a promotional code for multi-month access to another Nanodegree program for free!&lt;/p&gt;

&lt;p&gt;To receive the &lt;a href="https://imp.i115008.net/c/1193463/1201337/11298"&gt;Buy one Gift One promotion&lt;/a&gt;, select the "pay upfront" option for multi-month access to the Nanodegree program when enrolling, and you will receive a code via email containing your free access code.&lt;/p&gt;

&lt;p&gt;This promotional code will apply to the pay-upfront cost of another Nanodegree program. The 100% off discount will only apply to the "pay upfront" amount; users who remain enrolled beyond that access period will be charged the standard monthly amount.&lt;/p&gt;

&lt;p&gt;You can use this to enroll in &lt;a href="https://imp.i115008.net/c/1193463/786224/11298?u=https%3A%2F%2Fwww.udacity.com%2Fcourse%2Fdata-scientist-nanodegree--nd025"&gt;&lt;strong&gt;Udacity Data Science Nanodegree&lt;/strong&gt;&lt;/a&gt;. So, first, open this Nanodegree program.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://imp.i115008.net/c/1193463/786224/11298?u=https%3A%2F%2Fwww.udacity.com%2Fcourse%2Fdata-scientist-nanodegree--nd025"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JD82L5cQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2A17GQCnYRmWMLCnlkmLqJlw.png" alt="best Udacity Black Friday Deal" width="667" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about the &lt;strong&gt;best Black Friday and Cyber Monday 2021 deals for programmers and developers&lt;/strong&gt;. You can see discounts are flying around every day but they are for a very limited period so better grab them before they expire.&lt;/p&gt;

&lt;p&gt;If you love Udemy courses, I have already published the &lt;a href="https://medium.com/javarevisited/10-best-udemy-online-courses-for-java-developers-4c9ab70cd01f"&gt;&lt;strong&gt;best demy courses&lt;/strong&gt;&lt;/a&gt; you should buy in this year's Black Friday and Cyber Monday sale in 2022.&lt;/p&gt;

&lt;p&gt;And, if you are looking to buy a book, you can also check out my first book after 10 years of writing Java articles --- &lt;a href="https://gumroad.com/l/QqjGH"&gt;&lt;strong&gt;Grokking the Java interview&lt;/strong&gt;&lt;/a&gt;available at a special Black Friday price of &lt;strong&gt;$2.90&lt;/strong&gt; this week as a Black Friday and Cyber Monday deal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/dp/B08P55JZBX/?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKuWGi4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AlU-jlD8QRp5KTz6tk6RwFw.png" alt="" width="667" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Programming and Resource Articles&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-coursera-projects-to-learn-essential-programming-skills.html"&gt;Top 10 Coursera Projects for Programmers and Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-coursera-courses-specilizations-and-certifications.html"&gt;Top 10 Courses Courses for Programmers in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/udemy-vs-pluralsight-review-which-is-better-to-learn-code.html"&gt;Udemy vs Pluralsight? Which is a better learning platform?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/the-java-developer-roadmap.html#axzz6N3akNoox"&gt;The Complete Java Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/09/codecademy-vs-udemy-vs-onemonth-which-is-better-for-learning-code.html#axzz6VYKcmyZz"&gt;Udemy vs CocdeCademy vs OneMonth in 2022?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/18-coursera-courses-you-can-join-in-2020-to-learn-from-the-worlds-top-tech-companies-google-74af46967d1e"&gt;18 Coursera Courses to learn from Google and IBM&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-coursera-certifications-to-learn-Data-Science-Visualization-and-Data-Analysis.html"&gt;Top 10 Coursera Courses to learn Data Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;8 Projects You can do to learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/01/coursera-vs-udemy-which-is-better-for-programming-tech.html"&gt;Udemy vs Coursera? which is better to learn Tech and Programming&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;10 Coursera Sepcizliation and Certifications to learn Python&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/does-udemy-coursera-edx-educative-or.html"&gt;Does Coursera Certificates helps in Job and Career&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/7-best-courses-to-learn-artificial-intelligence-in-2020-26d59d62f6fe"&gt;7 Best courses to learn Artificial Intelligence in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/top-5-coursera-professional-certificates-for-programmers-IT-professionals.html"&gt;5 Best Coursera Professional Certificates for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-coursera-certificates-to-start-your-career-in-cloud-data-science-ai-mainframe-and-it-558690c83587"&gt;Top 10 Coursera Certifications to start your career&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/codecademy-or-pluralsight-which-is-a-better-platform-to-learn-coding-skills-59251a080642"&gt;Udemy vs Educative vs Codecademy? Which is better for beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2020/06/top-5-data-science-degree-you-can-earn-online-coursera-edx.html"&gt;5 Data Science degrees you can earn on Coursera Online&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-machine-learning-and-data-science-certifications-and-training-courses-for-beginners-and-a6308497b764"&gt;10 Data Science and Machine Learning Certifications form Coursera&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article. If you like these &lt;em&gt;best Black Friday and Cyber Monday deals, discount coupons for Programmers and Developers&lt;/em&gt; then please share them with your friends and colleagues. If you have another great Black Friday and Cyber Monday deal for programmers and developers then feel free to share with us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. &lt;/strong&gt;--- If you are looking for the best Udemy courses to buy in the Black Friday sale then you can also check out my list of &lt;a href="https://javarevisited.blogspot.com/2020/11/top-10-udemy-courses-you-can-buy-in.html#axzz6enw6Ycw1"&gt;&lt;strong&gt;10 Best Udemy Courses to buy on the Black Friday sale&lt;/strong&gt;&lt;/a&gt;.It contains the best Udemy courses to learn Docker, Microservice, Spring Boot, MERN stack, SQL, Python, Web Design, and other essential skills required for Software development.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>java</category>
      <category>coding</category>
      <category>python</category>
    </item>
    <item>
      <title>Easy way to write Unit Test cases of Node.Js</title>
      <author>Imran shaikh</author>
      <pubDate>Wed, 24 Nov 2021 09:43:57 +0000</pubDate>
      <link>https://dev.to/imranmind/easy-way-to-write-unit-test-cases-of-nodejs-3p6n</link>
      <guid>https://dev.to/imranmind/easy-way-to-write-unit-test-cases-of-nodejs-3p6n</guid>
      <description>&lt;p&gt;Initially, I used to think why my Architect is asking for writing test cases it's just wasting of time, But later I realised that it's important to write test cases along with the application features . Because it will give you the confidence in each iteration of new build or release.&lt;/p&gt;

&lt;p&gt;I have seen the impact of not writing proper test cases in one of my projects, As the developer is always hurrying for completing user stories or features. As I have analyzed we could have stopped at least 40% bugs if we would have written the proper unit test cases.&lt;/p&gt;

&lt;p&gt;So let's see the easy way to write Node.Js unit test cases Using &lt;strong&gt;Mocha&lt;/strong&gt; and &lt;strong&gt;Chai&lt;/strong&gt; library&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mocha&lt;/strong&gt; is a test runner environment&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chai&lt;/strong&gt; is an assertion library&lt;/p&gt;

&lt;p&gt;1.Create node.js project using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Install dependencies
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;mocha&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt; &lt;span class="nx"&gt;mocha&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;local&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create app.js file and write the below code.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/ping&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pong&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Waw Server is running : 8080&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;create a test folder and add app.test.js file and write the below code.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;request&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app rest api testing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/ping status code&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:8080/ping&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pong&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}));&lt;/span&gt;
    &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before running an application make sure you configure everything in package.json file like below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_WpvUqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsq2bd2oe8yn2uw9z5me.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_WpvUqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsq2bd2oe8yn2uw9z5me.png" alt="Image description" width="834" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;after that run your application using the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;:) Now you can see the output of test cases. like the below image.&lt;/p&gt;

&lt;p&gt;I always welcome the new approach so feel free to add a comment regarding the new approach.&lt;/p&gt;

&lt;p&gt;Thanks for reading. :)&lt;/p&gt;

&lt;p&gt;Please hit the love button if you liked it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iBhTmGEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2pf0fkcaamvst1glvi9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBhTmGEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2pf0fkcaamvst1glvi9.png" alt="Image description" width="747" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Select a Matching Tech Partner to Develop a Fashion eCommerce Website?</title>
      <author>Freita Browning</author>
      <pubDate>Wed, 24 Nov 2021 09:37:05 +0000</pubDate>
      <link>https://dev.to/freita_browning/how-to-select-a-matching-tech-partner-to-develop-a-fashion-ecommerce-website-a8c</link>
      <guid>https://dev.to/freita_browning/how-to-select-a-matching-tech-partner-to-develop-a-fashion-ecommerce-website-a8c</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBGnJlpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ggupqi35bgh8gck0v5n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBGnJlpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ggupqi35bgh8gck0v5n.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Everyone has a fashion euphoria today. So, there is a huge demand for fashion products, including apparel. If you want to sell fashion products, there is no best way than an eCommerce website. Hence, entrepreneurs are opting for eCommerce web development to build engaging fashion eCommerce stores. Choosing the right tech partner is essential to building a perfect eCommerce website. Moreover, finding a matching tech partner can be challenging because of many options.&lt;/p&gt;

&lt;p&gt;So, how can you find a &lt;a href="https://www.csschopper.com/blog/ecommerce-development-partner/"&gt;reliable tech partner to create a fashion eCommerce website?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To find a good tech partner, you need to consider a few points. These essential points can guide you to a perfect partnership. The following are the vital points in selecting the right tech partner. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Determine your requirements&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may think you know it. But having a proper understanding of what you really want is crucial for finding a good tech partner. It is essential to distinguish your website and features. E-commerce comes with many technological challenges. The tech partner you choose should have worked with intricacies in this domain. Such a company will offer a solution that will scale with your business growth. There are many other things to consider, like the eCommerce platform, hosting, etc.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check communication &amp;amp; collaboration&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Communication skills are a vital aspect of a tech partner. Your project can go haywire in case of any communication gap. Hence, you must ensure that they are using efficient communication methods. Also, make sure they collaborate efficiently. Communication &amp;amp; collaboration is crucial for a project's success. Assess their communication &amp;amp; collaboration process with the below questions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does their communication &amp;amp; collaboration process fit your work 
style? &lt;/li&gt;
&lt;li&gt;Are they reachable through multiple channels like Skype, call, email, etc.?&lt;/li&gt;
&lt;li&gt;Who will you contact in case of queries, feedback, and concerns?&lt;/li&gt;
&lt;li&gt;How much time would they take to respond to your queries?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#look-for-an-ecommerce-development-partner-with-an-effective-communication-process"&gt;
  &lt;/a&gt;
  Look for an eCommerce development partner with an effective communication process.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Get work samples and references.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Choosing an &lt;a href="https://www.csschopper.com/ecommerce-website-development.shtml"&gt;eCommerce web development partner&lt;/a&gt; is a big decision. Check reviews of their past clients who have undergone their services. You can get more clarity through the feedback provided by their previous clients. Also, check their work portfolio. The portfolio consists of the variety of projects they have finished. Reviews and portfolios give an insight into their work culture. Also, you can ask their previous clients about their service. It will provide more in-depth insights. Check out the experiences of previous clients. They can provide details on the project management, availability, deadlines, etc. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check their expertise&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assess the tech partner's skills and experience on specific skill sets. Capable developers have expertise in multiple skills. They can fulfill clients' requirements according to their needs. Also, they are well-versed in different algorithms. You must check the relevant experience of the developers. For this, check if they have already worked for a business like you. Have they handled complex or large projects before? Also, check if they have expertise in both front-end and back-end development. They should also be updated with &lt;a href="https://www.csschopper.com/blog/ecommerce-web-development-trends/"&gt;the latest eCommerce development trends&lt;/a&gt; and techniques. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check their pricing policy.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Budget is a crucial factor for selecting a technology partner. Hence, make sure that you understand their pricing policy. Also, check what is included in the development cost. Some companies have different price tiers based on clients' requirements. Look into the pricing policy before signing any contract. Also, be on the same page regarding the service terms and payment policy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up!
&lt;/h2&gt;

&lt;p&gt;The demand for fashion products is increasing. And, an eCommerce website is an excellent method to sell fashion products. Moreover, to sell your products easily, you need to build a perfect eCommerce website. You would like to select the best tech partner for your project. But finding the best tech partner can be challenging. The essential points we have discussed here can help you choose the right eCommerce web development company. With these points, you can select a reliable tech partner. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>ecommerce</category>
    </item>
    <item>
      <title>⚡️HTML is not a programming language </title>
      <author>David Lorenz</author>
      <pubDate>Wed, 24 Nov 2021 09:35:26 +0000</pubDate>
      <link>https://dev.to/activenode/html-is-not-a-programming-language-28p7</link>
      <guid>https://dev.to/activenode/html-is-not-a-programming-language-28p7</guid>
      <description>&lt;p&gt;Btw, CSS also isn't a programming language. I know what you think: &lt;strong&gt;I'm gonna put some roast on this iffy post from this arrogant guy who is trying to talk down the language&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;First and foremost: If you only code in HTML you are a programmer, no discussion needed ♥️. The definition of a language does not change your worthiness or your job title.&lt;/p&gt;

&lt;p&gt;Let me elaborate why writing this blogpost is important and essential and why it is not about "being right". My assumption is that the discussion is purely based on insecurities and fear.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#why-do-you-even-care"&gt;
  &lt;/a&gt;
  Why do you even care?
&lt;/h3&gt;

&lt;p&gt;People on twitter seem to fight for the right that HTML is a programming language. The essential question is why do people argue about it? I don't get it. The definition of what HTML is does not change anything about the fact that HTML is the crucial language to create websites and web apps - fact.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#people-confuse-programming-language-and-being-a-programmer"&gt;
  &lt;/a&gt;
  People confuse programming language and being a programmer
&lt;/h3&gt;

&lt;p&gt;Maybe that is one of the fears that people have: If neither HTML nor CSS is a programming language then am I even a programmer by just using HTML/CSS? &lt;strong&gt;Sure thing, you are!&lt;/strong&gt; Even though the word has the same origin being a programmer and programming language are still different things.&lt;/p&gt;

&lt;p&gt;Let's take the Wikipedia Definition:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A computer programmer, sometimes called a software developer, a programmer or more recently a coder (especially in more informal contexts), is a person who creates computer software.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So even if you do not code at all e.g. by designing systems architecture you are part of the programmers world.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#why-it-is-important-to-acknowledge-that-html-is-not-a-programming-language"&gt;
  &lt;/a&gt;
  Why it is important to acknowledge that HTML is not a programming language?
&lt;/h3&gt;

&lt;p&gt;In very simple words: Because if we go by the majority of scientifical definitions then it is often described as a Markup Language (HTML= Hypertext Markup Language) as opposed to programming language. We are living in a world that often confuses facts with opinions and hence create problematic discussions that wouldn't even be worth the energy simply because it does not change a single thing about the outcome.&lt;/p&gt;

&lt;p&gt;Let's face Wikipedia again:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Markup languages like XML, HTML, or troff, which define structured data, are not usually considered programming languages.&lt;br&gt;
Source: &lt;a href="https://en.wikipedia.org/wiki/Programming_language"&gt;https://en.wikipedia.org/wiki/Programming_language&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is a "trivial" and a not-so-trivial explanation. The not-so-trivial one is about language possibilities, turing completeness and so on and so forth which I do not want to elaborate in detail here because.&lt;br&gt;
A more trivial approach is: If you can build a calculator based on users input with it then it most likely can be considered a programming language. Bash can do that, JS can do that, HTML cannot. You can define input fields in HTML but HTML cannot process them and sum/multiply. CSS can partially calculate but then again it is extremely constrained to "hardcoded" values and not arbitrary input.&lt;/p&gt;

&lt;p&gt;And by the way: SQL can also only calculate things to a constrained extent. You cannot write a full program in SQL. SQL is a declarative language. But back to the actual point: Why would you care to make it a "programming language"? You are a programmer nevertheless.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;I am not trying to be "right". That is not the whole point of this post. Generically spoken I would really love to see a world where we come together and share what's available in science rather than creating an "opinion" about things that science has a clearer view on. That can be troublesome in any topic e.g. vaccination.&lt;/p&gt;

&lt;p&gt;A good start here is to ask questions: "Can you provide me some more information why HTML wouldn't be considered a programming language?" or vice versa.&lt;/p&gt;

&lt;p&gt;That is the world that I am looking for. A proper, scientifically based discussion (how they are very often found in good responses on StackOverflow).&lt;/p&gt;

&lt;p&gt;I just do not get the point why a simple word triggers so many people. &lt;/p&gt;

&lt;p&gt;Peace &amp;amp; Love&lt;br&gt;
David&lt;/p&gt;

</description>
      <category>html</category>
      <category>programming</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 cool Perl/Raku/Programming links </title>
      <author>Tib</author>
      <pubDate>Wed, 24 Nov 2021 09:30:20 +0000</pubDate>
      <link>https://dev.to/thibaultduponchelle/5-cool-perlrakuprogramming-links-50dj</link>
      <guid>https://dev.to/thibaultduponchelle/5-cool-perlrakuprogramming-links-50dj</guid>
      <description>&lt;p&gt;Today I won't be too much verbose but very direct and just share some cool links!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mind-blowing-demonstration-of-raku-grammars"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=rxaB6m_sQKk"&gt;Mind Blowing demonstration of Raku grammars&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#sanity-of-twitch-programmers-via-commits"&gt;
  &lt;/a&gt;
  &lt;a href="https://youtu.be/KjYBh7rq0-Y"&gt;Sanity of twitch programmers via commits&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#programming-pain-in-one-video"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=ePhAj8ktiEA"&gt;Programming pain in one video&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#hilarious-talk-about-fashion-and-perl"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=WquECQnnCq4"&gt;Hilarious talk about fashion and Perl&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#tail-call-optimization-the-musical"&gt;
  &lt;/a&gt;
  &lt;a href="https://youtu.be/-PX0BV9hGZY"&gt;Tail Call Optimization: The Musical!&lt;/a&gt;
&lt;/h4&gt;

</description>
      <category>perl</category>
      <category>raku</category>
      <category>programming</category>
    </item>
    <item>
      <title>10 best practices every Node.js developer must follow</title>
      <author>DhiWise</author>
      <pubDate>Wed, 24 Nov 2021 08:42:36 +0000</pubDate>
      <link>https://dev.to/dhiwise/10-best-practices-every-nodejs-developer-must-follow-362m</link>
      <guid>https://dev.to/dhiwise/10-best-practices-every-nodejs-developer-must-follow-362m</guid>
      <description>&lt;p&gt;According to the StackOverflow developers survey, Node.js is the most popular development framework among developers from the last few years. It is an open-source, cross-platform, back-end JavaScript runtime environment that runs on a V8 engine.&lt;/p&gt;

&lt;p&gt;The syntax is simple and easy to understand, also it is best for asynchronous and event-driven programming. Therefore getting started with Node.js is effortless but once you step into advanced programming, you need to deal with the code complexity and errors that can become troublesome.&lt;/p&gt;

&lt;p&gt;However, following the best Node.js practices reduces the possibilities of errors and loopholes in your code and keeps your app safe from the most common Node.js traps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e_rqeB7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2400/1%2AFPtQLT2Zk-baHficCz_mXQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e_rqeB7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2400/1%2AFPtQLT2Zk-baHficCz_mXQ.png" alt="" width="880" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Always create a new project with npm init and save the exact package version&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;NPM is a package manager for Node.js packages and is mostly used to install dependencies. Always create a project with npm init, it will help you to generate a package.json file.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir my-new-project

$ cd my-new-project

$ npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Npm uses JSON for definitive documentation on these fields and exactly what they do.&lt;/p&gt;

&lt;p&gt;Use npm install  — save afterward to install a package and save it as a dependency in the package.json file.&lt;/p&gt;

&lt;p&gt;For example, if you use the package express it will be written as&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install express — save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;It saves the package with its installed version to the package.json file like this.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;“express”: “⁴.17.1”,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Here the leading carriage “^” represents that a package with a version within “&amp;gt;=4.17.1&amp;lt;5.0.0” is accepted by the application.&lt;/p&gt;

&lt;p&gt;Consequently, when someone in your team runs &lt;strong&gt;&lt;em&gt;npm install&lt;/em&gt;&lt;/strong&gt;, it will install the latest version of that package. If the latest version is not compatible with the initial version of the package it can lead to differences in the behavior or errors.&lt;/p&gt;

&lt;p&gt;Therefore, for the development team, it is important to be on the same version. This can be achieved by using the &lt;strong&gt;.npmrc&lt;/strong&gt; file. It has useful properties that ensure npm install always updates the package.json and enforces the version to be the same.&lt;/p&gt;

&lt;p&gt;This can be simply done by running the following command in the terminal&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install express — save — save-exact

Or

npm config set save-exact=true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Once you run the above command the dependency is saved and will be locked down to the version you installed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Add Script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;NPM has a standard way to start node applications. Add the script property and object to your package.json with a start key. As shown below,&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;“scripts”: {

“start”: “node myapp.js”

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;When someone runs npm start, NPM runs node myapp.js with all the dependencies from node_modules/.bin on your $PATH. Therefore there is no need to have global installs of NPM modules.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Use Environment Variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use environment variables in Node.js to look up the values from the process.env in your app code. To figure out which environment variables you’re running on, check the NODE_ENV environment variable.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(“Running in :” + process.env.NODE_ENV);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;4. Use a style guide&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are developing a project in a team, there will inevitably be differences in the coding style of each developer. Most developers prefer the particular style guide to make code readable.&lt;/p&gt;

&lt;p&gt;Unfortunately, if you need to work on code with a different coding style, you will end up reforming the position of braces, spaces, and tabs manually for hours. So to remain productive, the best option for a team is to pick a particular style guide and follow the same for the entire project.&lt;/p&gt;

&lt;p&gt;Here are a few style guides used by popular tech companies.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/airbnb/javascript"&gt;Airbnb’s style guide on GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://google.github.io/styleguide/jsguide.html"&gt;Google’s style guide on GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/rwaldron/idiomatic.js/"&gt;Idiomatic style guide on GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/standard/standard"&gt;JavaScript Standard style guide on GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://contribute.jquery.org/style-guide/js/"&gt;jQuery style guide on their website&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, some tools can be used to ensure the rules of the selected style guide are enforced.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Prettier&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ESLint&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Automate Format and Lint on Save&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Husky&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lint-staged&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With Husky and Lint-staged Combined&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EditorConfig&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. Asynchronous Structures&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The synchronous function makes the flow of application logic easy to understand. However, it blocks any other code from running until it gets complete.&lt;/p&gt;

&lt;p&gt;You can trace the synchronous function in the code using the -trace-sync-io flag, it will display a warning when encountered with the synchronous API.&lt;/p&gt;

&lt;p&gt;On the other hand, asynchronous/await structures in ES6, provide solutions to blocking problems. Therefore as a Node developer, you must make use of async/await instead of falling to the synchronous functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Error Handling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Neglecting error handling in the code makes debugging more difficult than it should be. Having a single bug in the application can cost you billions. Therefore good exception management is important for an application.&lt;/p&gt;

&lt;p&gt;Error handling doesn’t eliminate errors in code. But, it makes your code smarter enough to deal with things that unexpectedly go wrong.&lt;/p&gt;

&lt;p&gt;The best way to deal with errors is by using the .catch() handler, which will propagate all errors to be dealt with, cleanly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Avoid Garbage collection using V8 Engine flags.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Node (V8) manages the heap memory through garbage collection. It frees up the memory used by objects that are no longer referenced from the Stack, to make space for the new object creation.&lt;/p&gt;

&lt;p&gt;However, if your memory usage is swelling unpredictably, it might not be due to memory leaks but caused by the node’s idle behavior.&lt;/p&gt;

&lt;p&gt;The problem can be overcome by regulating the app’s Garbage collector, you can raise V8 engine flags and &lt;a href="https://nodejs.org/en/docs/guides/debugging-getting-started/"&gt;chrome debugger&lt;/a&gt; to expose the garbage collector for debugging memory issues.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node — expose-gc — inspect myapp.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;8. Keep your application stateless&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you stored the data such as sessions, user data, cache in the application itself it will be scoped to that particular process. Therefore you need to store it on the external data stores.&lt;/p&gt;

&lt;p&gt;Keeping your application stateless enables the application to survive system failures without damaging its services and performance.&lt;/p&gt;

&lt;p&gt;To accomplish this, you can use serverless platforms like AWS Lambda that impose stateless behavior by default.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Use logging tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Console.log is a great tool but has its limitations in a production application therefore you can not use it for every logging purpose. It does not provide enough configuration options, for example, there is no filter option to filter loggings.&lt;/p&gt;

&lt;p&gt;Node has several logging frameworks that can be used in your application. The choice of logging depends on your business requirement and resource constraints.&lt;/p&gt;

&lt;p&gt;Some good examples of logging frameworks are Bunyan, Winston, and Pino. It makes Node.js logging simpler and more efficient. It is a better approach for logging than using agents, as agents increase resource consumption and latency.&lt;/p&gt;

&lt;p&gt;Log libraries help in structuring, formatting, and transmitting the log messages without adding any considerable overheads.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Test your application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is crucial to test your application before launching it in the market. No matter what stage of your application development, it is never too late to introduce testing.&lt;/p&gt;

&lt;p&gt;Testing is important to discover defects and bugs, which guarantees the quality of software making software more reliable and easy to use.&lt;/p&gt;

&lt;p&gt;Experts recommend writing a test for every bug that gets reported. Therefore you must know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How to recreate the bug (make sure your test fails first!)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to fix the bug (make sure you pass the test once the bug is fixed)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make sure that the bug will never occur again.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Following are the most popular testing Libraries for Node.js applications&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Mocha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jest&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jasmine&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AVA&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#summing-up"&gt;
  &lt;/a&gt;
  Summing Up
&lt;/h2&gt;

&lt;p&gt;In this article, we have discussed the top 10 best practices for Node.js development. Following these practices helps you to write better code for the Node.js app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;“If you are developing an application with Node.js as a back-end, try &lt;a href="https://app.dhiwise.com/"&gt;DhiWise&lt;/a&gt;, it supports clean code architecture, that enables you to build scalable app faster and simplify code maintenance”&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;DhiWise provides the best features and technology support for faster and quality app development. Want to know more about it? Visit &lt;a href="https://www.dhiwise.com/"&gt;DhiWise&lt;/a&gt; today!&lt;/p&gt;

</description>
      <category>node</category>
      <category>showdev</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>DAY 01 - 100 Days With Vue</title>
      <author>Tahsin Ahmed</author>
      <pubDate>Wed, 24 Nov 2021 08:11:57 +0000</pubDate>
      <link>https://dev.to/tahsin52225/day-01-100-days-with-vue-22fb</link>
      <guid>https://dev.to/tahsin52225/day-01-100-days-with-vue-22fb</guid>
      <description>&lt;p&gt;At last, I have started to learn Vue.js. Well, starting is the hard part of learning. Today I have learned about how to integrate Vue CDN and add Vue property to your project.&lt;br&gt;
It's simple just add Vue CDN at the end of your Html file. Vue is ready for use.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#vue-cdn"&gt;
  &lt;/a&gt;
  Vue CDN
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/vue@next"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#adding-vue-property-in-a-particular-html-section"&gt;
  &lt;/a&gt;
  Adding Vue property in a particular HTML section
&lt;/h3&gt;

&lt;p&gt;In your app.js (External JS file) file you have to create a Vue app and mount it into a particular section. Well you can use a variable to declare the Vue app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To add this Vue app into your HTML code you need to use the mount function to this object. Mount accepts a string value of a CSS selector in which this Vue code applies. Here we have a section that has an id named #user-goal&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#user-goal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Nice ! Vue is mounted on that section &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#data-property-of-vue-object"&gt;
  &lt;/a&gt;
  "data" property of Vue object
&lt;/h3&gt;

&lt;p&gt;"data" is a predefined property of the Vue object which holds all the variables of the Vue app. "data" property always returns an object which holds a collection of variable names and values in a key-value pair. the variable value can be anything String, Number &lt;br&gt;
, Boolean etc.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;variable_name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;variable_value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#user-goal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#interpolations-showing-data-property-value"&gt;
  &lt;/a&gt;
  "Interpolations" Showing data property value
&lt;/h3&gt;

&lt;p&gt;"Interpolations" is a fancy name of handlebars, if you want to show your variable value into HTML. Just use double curly braces and write the variable name which you had declared on the data property.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{ variable_name }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;"Interpolations" tells Vue to replace the variable name with the actual value of it. so you can't use "Interpolations" outside Vue mounted section.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#vbind-attribute-of-vue"&gt;
  &lt;/a&gt;
  "v-bind" attribute of Vue
&lt;/h3&gt;

&lt;p&gt;Well, sometimes we need to pass value to Html attribute. For example, let's say you want to return a link to an anchor tag 'href' attribute, but if you use "Interpolations" it won't work. You need to use the "v-bind" attribute for that.&lt;br&gt;
"v-bind" is a Vue attribute that helps to bind any Html attribute to Vue variables.  Example :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;v-bind:href=&lt;/span&gt;&lt;span class="s"&gt;"variable_name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Link &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;P.S: There are more uses of v-bind and we can use the shorter version of v-bind, But for now, let's stick with this.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#vhtml-attribute-of-vue"&gt;
  &lt;/a&gt;
  "v-html" attribute of Vue
&lt;/h3&gt;

&lt;p&gt;Now let's say you want to show an Html code using a variable. If you use only "Interpolations" it will show markup value and won't fulfill the purpose. For that, you need to use v-html attribute.&lt;br&gt;
Example:&lt;br&gt;
In app.js&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;variable_name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;h1&amp;gt; Hello this is value &amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#user-goal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In index.html&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;     &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;v-html=&lt;/span&gt;&lt;span class="s"&gt;"variable_name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#methods-property-of-vue-object"&gt;
  &lt;/a&gt;
  "methods" property of Vue object
&lt;/h3&gt;

&lt;p&gt;Till now, we have used only static data. We need to add some dynamic feel to it. To do this, we need to use the "methods" property of the Vue object. "methods" is a predefined property that accepts only  JS objects that hold the collection of functions.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;variable_name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;h1&amp;gt; Hello this is value &amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;function_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;//do something&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#user-goal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We can use direct methods in "Interpolations"&lt;br&gt;
In index.html&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;     &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; {{ function_name() }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#use-data-property-into-methods"&gt;
  &lt;/a&gt;
  Use "data" property into "methods"
&lt;/h3&gt;

&lt;p&gt;Basically we need to use variable into methods for that we just need to use "$this" keyword.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;variable_name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;h1&amp;gt; Hello this is value &amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;function_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;variable_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;new value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#user-goal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#github-practice-code"&gt;
  &lt;/a&gt;
  Github Practice Code
&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Tahsin-Ahmed52225"&gt;
        Tahsin-Ahmed52225
      &lt;/a&gt; / &lt;a href="https://github.com/Tahsin-Ahmed52225/100days-with-Vue"&gt;
        100days-with-Vue
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>vue</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>React - useEffect hook - A Quick Guide</title>
      <author>Jose</author>
      <pubDate>Wed, 24 Nov 2021 08:08:15 +0000</pubDate>
      <link>https://dev.to/josec/react-useeffect-hook-a-quick-guide-4c3p</link>
      <guid>https://dev.to/josec/react-useeffect-hook-a-quick-guide-4c3p</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-useeffect"&gt;
  &lt;/a&gt;
  What is useEffect?
&lt;/h1&gt;

&lt;p&gt;useEffect is a react built-in hook that allows us to run code on the mount, update and unmount stages of our components lifecycle. It’s the equivalent of the class based components to the &lt;code&gt;componentDidMount&lt;/code&gt;, &lt;code&gt;componenDidUpdate&lt;/code&gt; and &lt;code&gt;componentWillUnmount&lt;/code&gt; methods.&lt;/p&gt;

&lt;p&gt;The useEffect hook receives two parameters: one function to be executed and an array of dependencies. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9s6-Ij9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04cy4msejjbgfhxrsv43.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9s6-Ij9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04cy4msejjbgfhxrsv43.png" alt="hook explanation" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-see-some-examples"&gt;
  &lt;/a&gt;
  Let's see some examples
&lt;/h1&gt;

&lt;p&gt;On my &lt;code&gt;app.js&lt;/code&gt; I’ve set two input numbers and one button alongside the &lt;code&gt;Calculator&lt;/code&gt; component. We set the numbers on the inputs and when we click the button the states get updated and the component gets the number via props. Nothing fancy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Calculator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setNumbers&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;inputA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;inputB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getTotalHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setNumbers&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;inputA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;inputB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Input&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inputA&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Input&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inputB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getTotalHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Calculate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have this component called &lt;code&gt;Calculator&lt;/code&gt; that receives via props &lt;code&gt;numberA&lt;/code&gt; and &lt;code&gt;numberB&lt;/code&gt; and returns the sum.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j9hGqxaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohpikohvdk90dvoh3484.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j9hGqxaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohpikohvdk90dvoh3484.png" alt="example" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#execute-useeffect-when-the-component-gets-mounted"&gt;
  &lt;/a&gt;
  Execute useEffect when the component gets mounted
&lt;/h2&gt;

&lt;p&gt;Now I will use &lt;code&gt;useEffect&lt;/code&gt; to execute a function that logs me when the component it’s mounted. First I import the &lt;code&gt;useEffect&lt;/code&gt; hook from &lt;code&gt;react&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To implement this hook I have to set a function to be executed and an array of dependencies and then my component looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`First render`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case I left my dependency array empty as I just want this code to be executed when it’s rendered for the first time.&lt;/p&gt;

&lt;p&gt;Now when I first load my component I see it on my console:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h7M3n5_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4sczdzwltew1nxmb874.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h7M3n5_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4sczdzwltew1nxmb874.png" alt="example" width="880" height="485"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the dependency array is empty this log will be executed only when the component gets mounted. If I update the &lt;code&gt;App&lt;/code&gt; component state and update the &lt;code&gt;Calculator&lt;/code&gt; props this log function will not execute again. This is the equivalent to the &lt;code&gt;componentDidMount&lt;/code&gt; on class-based components. Let’s check:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--miaFZVMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9emjzrh2vsm025n7k9a0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--miaFZVMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9emjzrh2vsm025n7k9a0.png" alt="example" width="880" height="477"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’ve updated the &lt;code&gt;numberA&lt;/code&gt; and &lt;code&gt;numberB&lt;/code&gt; props but the function did not execute. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#execute-useeffect-each-time-the-props-gets-updated"&gt;
  &lt;/a&gt;
  Execute useEffect each time the props gets updated
&lt;/h2&gt;

&lt;p&gt;Now let’s execute a function each time the props get updated. This is useful to perform side effects based on new props for example to retrieve details from an api on the basis of a value received from props. At the end of the post there’s an example with this.&lt;/p&gt;

&lt;p&gt;First I add a second useEffect to my previous code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`First render`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`This gets executed each time the props are updated`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time I did not leave my dependencies array empty and I’ve added the numberA and numberB props on it so the useEffect hook knows that each time one of the props gets updated it has to run the function. Let’s check if it works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2SfnOG5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3y7tg1fju29rmzw3ab6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2SfnOG5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3y7tg1fju29rmzw3ab6h.png" alt="example" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes it does. Actually you will see that the first time the component gets mounted both &lt;code&gt;useEffect&lt;/code&gt; hooks get executed. This is the equivalent to the &lt;code&gt;componentDidMount&lt;/code&gt; method on class-based components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-code-when-the-component-gets-unmounted"&gt;
  &lt;/a&gt;
  Running code when the component gets unmounted
&lt;/h2&gt;

&lt;p&gt;Until now I’ve shown how to run code each time the component gets mounted or updated but what if I have some code that I just wanna run when the component gets unmounted? Luckily for us the &lt;code&gt;useEffect&lt;/code&gt; hook provides a clean up function. Inside the useEffect code we have to return a function and this function will execute before unmounting:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;useEffect&lt;/code&gt; hook combined with the clean up function it’s the equivalent to the &lt;code&gt;componentWillUnmont&lt;/code&gt; method in class-based components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-useeffect-to-get-data-from-an-api-each-time-the-props-get-updated"&gt;
  &lt;/a&gt;
  Using useEffect to get data from an API each time the props get updated
&lt;/h2&gt;

&lt;p&gt;Now I will show you how to take advantage of the &lt;code&gt;useEffect&lt;/code&gt; hook to get data from an API each time the props of our component is updated. &lt;/p&gt;

&lt;p&gt;For this example I’ve created a new component called &lt;code&gt;Rick&lt;/code&gt; that uses an id received via props to get data from the Rick and Morty public api.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Rick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCharacter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRequest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`pendent`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`pendent`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getApiResults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;characterId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://rickandmortyapi.com/api/character/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;characterId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setCharacter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`completed`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;getApiResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;``&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;`completed`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Rick&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the &lt;code&gt;app&lt;/code&gt; component I have a button that generates a random number and passes it via props to the &lt;code&gt;Rick&lt;/code&gt; component. On the first render we just have the button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lzEuWnrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwm717cnynvwlphr3ugr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lzEuWnrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwm717cnynvwlphr3ugr.png" alt="mockup" width="880" height="670"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But each time we click a random number it’s generated and passed via props. This triggers the &lt;code&gt;useEffect&lt;/code&gt; function that gets the belonging Rick and Morty character based on that id:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lviWpyEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofcwvoil4dy1o8h5rb11.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lviWpyEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofcwvoil4dy1o8h5rb11.gif" alt="gif example" width="788" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
