<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top AngularJS Project For Beginners</title>
      <author>techlivly</author>
      <pubDate>Sun, 25 Jul 2021 12:30:11 +0000</pubDate>
      <link>https://dev.to/techlivly/top-angularjs-project-for-beginners-2l64</link>
      <guid>https://dev.to/techlivly/top-angularjs-project-for-beginners-2l64</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;AngularJS Tutorial Summary&lt;/h2&gt;

&lt;p&gt;This is an AngularJS tutorial for beginners step by step guide to learn AngularJS from scratch. This Angular JS tutorials guide will help you learn AngularJS basics and components like directives, filters, expressions, etc. and explore more of its programming aspect for SPA's.&lt;/p&gt;
&lt;h2&gt;&lt;span id="what_is_angularjs"&gt;What is AngularJS?&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;AngularJS&lt;/strong&gt; is a JavaScript framework for building MVC-based web applications. It allows you to split the business logic layer, data layer, and presentation layer. It uses HTML as a template language to extend its syntax for creating various application components. It also helps to reduce the code by data binding and dependency injection features.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;b&gt;Originally Published&lt;/b&gt;: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://bit.ly/2ULWtMb"&gt;AngularJS Project For Beginners&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;


</description>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Set up a Node.js Express Server for React</title>
      <author>Pratham</author>
      <pubDate>Sun, 25 Jul 2021 12:12:49 +0000</pubDate>
      <link>https://dev.to/pratham10/how-to-set-up-a-node-js-express-server-for-react-2fja</link>
      <guid>https://dev.to/pratham10/how-to-set-up-a-node-js-express-server-for-react-2fja</guid>
      <description>&lt;p&gt;React is a JavaScript library used to build user interfaces and develop single-page applications using reusable UI components. React is used for building front-end apps that can communicate with the back-end server.&lt;/p&gt;

&lt;p&gt;A React front-end connected to a Node back-end is a rock-solid combination for any application you want to build.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This guide is designed to help you create full-stack projects with React as easily as possible.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A text editor&lt;/li&gt;
&lt;li&gt;Node.js installed on your computer&lt;/li&gt;
&lt;li&gt;Prior knowledge of React, Node, and npm&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tools-you-will-need"&gt;
  &lt;/a&gt;
  Tools You Will Need
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Make sure Node and NPM are installed on your computer. You can download both at  &lt;a href="//nodejs.org"&gt;nodejs.org&lt;/a&gt;  (NPM is included in your Node installation)&lt;/li&gt;
&lt;li&gt;Use a code editor of your choice. I am using and would personally recommend using VSCode. You can download VSCode at  &lt;a href="//code.visualstudio.com"&gt;code.visualstudio.com.&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Make sure you have Git installed on your computer. This is necessary for deploying our application with Heroku. You can get it at  &lt;a href="//git-scm.com"&gt;git-scm.com&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#step-1-backend"&gt;
  &lt;/a&gt;
  STEP 1: BACKEND
&lt;/h2&gt;

&lt;p&gt;First, create a folder of your project, name it as &lt;em&gt;react-node-app&lt;/em&gt; , open this folder in your text editor&lt;/p&gt;

&lt;p&gt;To create our Node project open your terminal and run the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By running this you will see package.json file has been created in our folder, This file will help us to manage dependencies our app needs.&lt;/p&gt;

&lt;p&gt;Now, in our terminal we will install express as a dependency&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, we will create a script in package.json that will start our web server when we run it with npm start:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
"scripts": {
  "start": "node server/index.js"
},
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our package.json file should look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "react-node-app",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1",
    "start": "node server/index.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.17.1"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create a new folder in our project and name it server.&lt;br&gt;
Inside server create index.js file.&lt;/p&gt;

&lt;p&gt;We'll use Express to create a simple web server for us which runs on port 3001&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// server/index.js

const express = require("express");

const PORT = process.env.PORT || 3001;

const app = express();

app.listen(PORT, () =&amp;gt; {
  console.log(`Server listening on ${PORT}`);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now run our app using this script &lt;em&gt;npm start&lt;/em&gt; in our terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start

&amp;gt; node server/index.js

Server listening on 3001
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-create-an-api-endpoint"&gt;
  &lt;/a&gt;
  Step 2: Create an API Endpoint
&lt;/h2&gt;

&lt;p&gt;We want to use our Node and Express server as an API, so that it can give our React app data.&lt;/p&gt;

&lt;p&gt;set a GET route that we will, later on, fetch from our client-side React App.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// server/index.js
...

app.get("/api", (req, res) =&amp;gt; {
  res.json({ message: "Hello from Express!" });
});

app.listen(PORT, () =&amp;gt; {
  console.log(`Server listening on ${PORT}`);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure you put this above app.listen&lt;/p&gt;

&lt;p&gt;Here, we are simply sending "Hello from Express" to our react app&lt;/p&gt;

&lt;p&gt;Since, we have made changes to our server we have to restart our server&lt;br&gt;
To do that, open your terminal press commmand/ctrl + c, amd then restart the server by running npm start&lt;/p&gt;

&lt;p&gt;Now we can simply visit &lt;a href="http://localhost:3001/api"&gt;http://localhost:3001/api&lt;/a&gt; in our browser and see our message:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;{"message": "Hello from Express"}&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-3-creating-react-frontend"&gt;
  &lt;/a&gt;
  Step 3: Creating React front-end
&lt;/h2&gt;

&lt;p&gt;Let's move to our front-end part now&lt;/p&gt;

&lt;p&gt;Open another terminal tab and use create-react-app to create a new React project with the name client:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setting-up-proxy"&gt;
  &lt;/a&gt;
  Setting up proxy
&lt;/h3&gt;

&lt;p&gt;In this step, the Webpack development server was auto-generated when we ran the create-react-app command.&lt;/p&gt;

&lt;p&gt;Webpack Development Server (WDS) is a tool that helps the developers make changes to the web app’s frontend and renders them to the browser with no need to refresh the browser.&lt;/p&gt;

&lt;p&gt;The only change we have to make is to add a property called proxy to our package.json file.&lt;/p&gt;

&lt;p&gt;This will allow us to make requests to our Node server without having to provide the origin it is running on (&lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;) every time we make a network request to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// client/package.json

...
"proxy": "http://localhost:3001",
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The modified package.json file will look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "client",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.14.1",
    "@testing-library/react": "^11.2.7",
    "@testing-library/user-event": "^12.8.3",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-scripts": "4.0.3",
    "web-vitals": "^1.1.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      "&amp;gt;0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "proxy": "http://localhost:3001"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can start up our React app by running its start script, which is the same as our Node server. First make sure to cd into the newly-created client folder.&lt;/p&gt;

&lt;p&gt;After that, will start up on localhost:3000:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd client
npm start

Compiled successfully!

You can now view client in the browser.

http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4-make-http-requests-from-react-to-node"&gt;
  &lt;/a&gt;
  Step 4: Make HTTP Requests from React to Node
&lt;/h2&gt;

&lt;p&gt;Now that we have a working React app, we want to use it to interact with our API.&lt;/p&gt;

&lt;p&gt;Let's see how to fetch data from the /api endpoint that we created earlier.&lt;/p&gt;

&lt;p&gt;To do so, we can head to the App.js component in our src folder and make an HTTP request using useEffect.&lt;/p&gt;

&lt;p&gt;We will make a simple GET request using the Fetch API to our backend and then have our data returned as JSON.&lt;/p&gt;

&lt;p&gt;Once we have the data returned to us, we will get the message property (to grab our greeting that we sent from the server) and then put it in a state variable called data.&lt;/p&gt;

&lt;p&gt;This will allow us to display that message in our page if we have it. We are using a conditional in our JSX to say that if our data is not there yet, show the text "Loading...".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// client/src/App.js

import React from "react";
import logo from "./logo.svg";
import "./App.css";

function App() {
  const [data, setData] = React.useState(null);

  React.useEffect(() =&amp;gt; {
    fetch("/api")
      .then((res) =&amp;gt; res.json())
      .then((data) =&amp;gt; setData(data.message));
  }, []);

  return (
    &amp;lt;div className="App"&amp;gt;
      &amp;lt;header className="App-header"&amp;gt;
        &amp;lt;img src={logo} className="App-logo" alt="logo" /&amp;gt;
        &amp;lt;p&amp;gt;{!data ? "Loading..." : data}&amp;lt;/p&amp;gt;
      &amp;lt;/header&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;A lot can be done with Express backend, like make calls to the database, but on this guide, we have concentrated on how to quickly connect to the backend Express server from client-side React App.&lt;/p&gt;

&lt;p&gt;The code snippets and files used in this guide can be accessed at the &lt;a href="https://github.com/bhagatpratham/react-node-boilerplate"&gt;GitHub repository here&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy coding!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>node</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Write Effective Markdown in Emacs (with live preview)</title>
      <author>Rushan Khan</author>
      <pubDate>Sun, 25 Jul 2021 12:00:06 +0000</pubDate>
      <link>https://dev.to/rushankhan1/write-effective-markdown-in-emacs-with-live-preview-41p9</link>
      <guid>https://dev.to/rushankhan1/write-effective-markdown-in-emacs-with-live-preview-41p9</guid>
      <description>&lt;p&gt;Do you use &lt;em&gt;Emacs&lt;/em&gt; and write a lot of markdown? Or are you interested in learning more about Emacs packages? If yes then this article is for you. &lt;br&gt;&lt;/p&gt;

&lt;p&gt;Today we are going to be talking about getting &lt;strong&gt;live preview&lt;/strong&gt; while writing markdown in emacs. This was a problem that I used to face everyday, I couldn't write markdown in emacs because there was no preview, writing blind markdown and then copying pasting it in a web editor, fixing bugs/errors and doing the whole thing over wasn't really efficient and editing text directly in the web editor without evil was painful. &lt;br&gt;&lt;/p&gt;

&lt;p&gt;So I looked around and found a great, less popular emacs package called &lt;a href="https://github.com/seagle0128/grip-mode"&gt;&lt;strong&gt;grip-mode&lt;/strong&gt;&lt;/a&gt; which is basically an emacs integration for the command-line python application called &lt;a href="https://github.com/joeyespo/grip"&gt;&lt;strong&gt;grip&lt;/strong&gt;&lt;/a&gt;. Grip starts a live server locally to render a project's README file using the &lt;a href="https://docs.github.com/en/rest/reference/markdown"&gt;GitHub Markdown API&lt;/a&gt; so you can get live preview before pushing to GitHub or using the web editor.&lt;br&gt; So enough talk let's see how we can make this work. &lt;br&gt; &lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-prerequisites"&gt;
  &lt;/a&gt;
  Installing Prerequisites
&lt;/h2&gt;

&lt;p&gt;The only prerequisites required for this are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.python.org/downloads/"&gt;Python&lt;/a&gt; ;and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/joeyespo/grip"&gt;Grip&lt;/a&gt; (just do &lt;code&gt;pip install grip&lt;/code&gt; in your home directory) &lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
  &lt;a href="#installing-gripmode"&gt;
  &lt;/a&gt;
  Installing grip-mode
&lt;/h2&gt;

&lt;p&gt;Grip is available on MELPA so installing it is as simple as doing:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;M-x package-install RET grip-mode RET&lt;/code&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#setting-up-grip-mode"&gt;
  &lt;/a&gt;
  Setting up grip mode
&lt;/h2&gt;

&lt;p&gt;Now we configure grip mode. The following customizations are supposed to go in your &lt;code&gt;.emacs&lt;/code&gt; file or your &lt;code&gt;init.el&lt;/code&gt; file, whichever you use.&lt;/p&gt;

&lt;p&gt;First we let Emacs know the exact location where the grip binary is installed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;;; Path to grip
(setq grip-binary-path "/absolute/path/to/grip")

;; in my case it is /home/rushan/.local/bin/grip

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you don't know where &lt;em&gt;grip&lt;/em&gt; is installed on your system, you can easily check using &lt;code&gt;~$ which grip&lt;/code&gt; the output will be the absoulute path to grip. &lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, we add a hook to start grip mode autmatically when &lt;code&gt;markdown-mode&lt;/code&gt; or &lt;code&gt;org-mode&lt;/code&gt; is activated:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;;; Start grip when opening a markdown/org buffer
(add-hook 'markdown-mode-hook #'grip-mode)
(add-hook 'org-mode-hook #'grip-mode)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also specify a browser for the live preview:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;;; set a browser for preview
(setq grip-url-browser "google-chrome")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default or when set to &lt;code&gt;nil&lt;/code&gt; grip mode will open up in the system's default browser.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: While specifying a name, the name should be the name of the &lt;strong&gt;executable program&lt;/strong&gt;, which means that &lt;strong&gt;if you execute the name in shell then that browser should launch.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, it is good to update the preview on save to optimize performance, you can do that by:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;;; update the preview after file saves only, instead of after every text change. 
(setq grip-update-after-change nil)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;This is the basic setup for &lt;code&gt;grip-mode&lt;/code&gt;, other customizations can be found at &lt;a href="https://github.com/seagle0128/grip-mode#customize"&gt;grip's docs&lt;/a&gt;. &lt;strong&gt;But Wait!&lt;/strong&gt; this is not all! If you tried to use grip-mode with this setup you'll notice that it works but it is &lt;strong&gt;extremely limited&lt;/strong&gt;. &lt;br&gt;&lt;/p&gt;

&lt;p&gt;By default users which haven't authenticated themselves will only get a certain amount of requests to the GitHub APIs, which is, sadly, less than usable.&lt;/p&gt;

&lt;p&gt;To &lt;strong&gt;remove this limitation&lt;/strong&gt; we need to tell grip our username and password (personal access token) for API authentication:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;;; GitHub username for API authentication
(setq grip-github-user "your_username")

;; GitHub password or auth token for API auth
(setq grip-github-password "your_personal_access_token")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you haven't generated a personal access token before, here is how you do it: &lt;a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;GitHub Docs&lt;/a&gt;. &lt;br&gt;&lt;/p&gt;

&lt;p&gt;After this is done your limitation should now be removed, you would still be under a new limit though, but that limit is very generous and should be more than enough for normal usage. &lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this article was helpful to you guys and please feel free to ask any questions in the comments. &lt;/p&gt;

&lt;p&gt;You can also connect with me on other social media platforms :) &lt;br&gt;&lt;/p&gt;

&lt;p&gt;Fork me on &lt;a href="https://github.com/RushanKhan1"&gt;GitHub&lt;/a&gt; &lt;br&gt;&lt;br&gt;
Connect with me on &lt;a href="https://www.linkedin.com/in/rushankhan/"&gt;LinkedIn&lt;/a&gt; &lt;br&gt;&lt;br&gt;
Read my other stories on &lt;a href="https://hackernoon.com/u/rushankhan"&gt;Hackernoon&lt;/a&gt; &lt;br&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding! &lt;br&gt;&lt;/p&gt;

</description>
      <category>markdown</category>
      <category>emacs</category>
      <category>productivity</category>
      <category>elisp</category>
    </item>
    <item>
      <title>Create a Netflix clone from Scratch: JavaScript PHP + MySQL</title>
      <author>Christopher Glikpo</author>
      <pubDate>Sun, 25 Jul 2021 11:56:43 +0000</pubDate>
      <link>https://dev.to/cglikpo/create-a-netflix-clone-from-scratch-javascript-php-mysql-kpl</link>
      <guid>https://dev.to/cglikpo/create-a-netflix-clone-from-scratch-javascript-php-mysql-kpl</guid>
      <description>&lt;p&gt;In the beginning of the year,we challenge ourselves to clone twitter from scratch using php,mysql and javascript.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/b5bc24w3Tos"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this month,we are going to challenge ourselves by cloning a movie streaming website just like netflix using php,mysql and javascript.&lt;/p&gt;

&lt;p&gt;Demo Video for what we are going to create:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pB-kqGBJStw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Videos used in the intro video are for demo purposes. We will be using 'free to use' content in the course - not actual licensed videos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do you want to become an expert in JavaScript, PHP and MySQL?&lt;/p&gt;

&lt;p&gt;Do you want to build a real video streaming site just like Netflix?&lt;/p&gt;

&lt;p&gt;If so, you’re in the right place! This course will guide you step by step in creating your own Netflix clone COMPLETELY from scratch.&lt;/p&gt;

&lt;p&gt;We’re talking the kind of website that will amaze anybody that sees it. The kind of website that will get you hired in no time!&lt;br&gt;
Okay so what’s the course about?&lt;/p&gt;

&lt;p&gt;I will personally guide you, step by step, in creating your own video streaming site just like Netflix complete with:&lt;/p&gt;

&lt;p&gt;User registration&lt;/p&gt;

&lt;p&gt;Movie streaming&lt;/p&gt;

&lt;p&gt;TV Show streaming&lt;/p&gt;

&lt;p&gt;Live search system&lt;/p&gt;

&lt;p&gt;Email Verification&lt;/p&gt;

&lt;p&gt;and much more!&lt;/p&gt;

&lt;p&gt;Whether you are a complete beginner* or an experienced programmer, this course will be massively beneficial to you.&lt;/p&gt;

&lt;p&gt;Demo Video for what we are going to create:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pB-kqGBJStw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you like my work, please consider&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/cglikpo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c23TxQOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jm11knj7d8zwcvo150q2.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;br&gt;
so that I can bring more projects, more articles for you&lt;/p&gt;

&lt;p&gt;If you want to learn more about Web Development, feel free to &lt;a href="https://www.youtube.com/c/ChristopherGlikpo"&gt;follow me on Youtube!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>mysql</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>My Favorite Azure Cloud Computing Courses for Beginners</title>
      <author>javinpaul</author>
      <pubDate>Sun, 25 Jul 2021 11:44:55 +0000</pubDate>
      <link>https://dev.to/javinpaul/my-favorite-azure-cloud-computing-courses-for-beginners-paf</link>
      <guid>https://dev.to/javinpaul/my-favorite-azure-cloud-computing-courses-for-beginners-paf</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello folks, Microsoft Azure is one of the leading cloud platform, while its dominating the Market like AWS does or its the preferred cloud platform for Machine Learning like Google Cloud Platform but its still growing very fast and many big and small companies are choosing Azure for their Cloud journey.&lt;/p&gt;

&lt;p&gt;This means there is a lot of demand for IT professionals who knows Azure or have worked in Azure Platform. If you want to learn about Microsoft Azure Cloud Platform then you have come to the right place. &lt;/p&gt;

&lt;p&gt;In the past, I have shared the best courses to pass &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-az-900-microsoft-azure-fundamentals-certification-exam.html"&gt;Azure Fundamentals&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2020/06/top-5-course-to-become-microsoft-azure-administrator-certification-exam.html"&gt;Azure Administrator&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-courses-to-crack-azure-architecture-technologies-certification-az-300-exam.html"&gt;Azure Architect certifications&lt;/a&gt; and today I am going to share the best online course to learn Azure platform for Beginners. &lt;/p&gt;

&lt;p&gt;These are top-quality courses from expert trainers and instructors and picked from websites like Udemy, Coursera, and edX. You can use these courses to not only learn Microsoft Azure core services but also to prepare for different Microsoft Azure certifications like &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-AZ-900-exam-Azure-Fundamentals-certification-practice-tests-and-mock-exams-to.html"&gt;AZ-900&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-solution-architect-exam-az-300.html"&gt;AZ-300&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2020/06/top-5-course-to-crack-Microsoft-Azure-Developer-Certification-Exam-AZ-203.html"&gt;AZ-20&lt;/a&gt; Azure developer associate certification.&lt;/p&gt;

&lt;p&gt;Microsoft Azure, is a cloud computing service created by Microsoft meant for building, testing, deploying, and managing applications and services through Microsoft-managed data centers.&lt;/p&gt;

&lt;p&gt;It provides software, platform, and infrastructure as a service and supports many programming languages, tools, and frameworks, including both Microsoft-specific and third-party software and systems.&lt;/p&gt;

&lt;p&gt;This makes it a very good platform because of its flexibility. You can have different projects in the same interface so you don't have to be changing or learning the peculiarities of every different platform. So if you have different projects or you work with different &lt;a href="https://www.java67.com/2017/12/10-programming-languages-to-learn-in.html"&gt;programming languages&lt;/a&gt; is a good option to optimize your time and resources.&lt;/p&gt;

&lt;p&gt;Also, demand for Azure certified &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-fundamentals-certification-az-900-exam.html"&gt;developers&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-az-103-azure-administrator-associate-exam-certification.html#axzz6LTphn9zT"&gt;administrators&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-solution-architect-exam-az-300.html"&gt;cloud architect&lt;/a&gt; is increasing exponentially as more and more companies are using Azure for their migrating their on-premise software and application. This means it's the best time to learn Azure and boost your career profile.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-best-azure-online-courses-to-learn-in-2021"&gt;
  &lt;/a&gt;
  5 Best Azure Online Courses to Learn in 2021
&lt;/h2&gt;

&lt;p&gt;Without wasting any more of your time, here you have a top 5 of the best tutorials to learn about Azure. These are the best courses from &lt;a href="https://medium.com/javarevisited/15-best-udemy-courses-programmers-can-buy-on-black-friday-and-cyber-monday-2020-a803874f41d9"&gt;Udemy&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/top-15-free-coursera-courses-and-certifications-for-it-professionals-384207d56f45"&gt;Coursera&lt;/a&gt;, and &lt;a href="https://medium.com/javarevisited/10-free-best-edx-certifications-and-courses-to-learn-online-3473d466f968"&gt;edX&lt;/a&gt; and you can use them to learn Azure and prepare for different Azure certifications like Azure Fundamentals and Azure Architecture Technology.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-azure-infrastructure-fundamentals-on-coursera-coursera"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fazure-infrastructure"&gt;Azure Infrastructure Fundamentals on Coursera&lt;/a&gt; (Coursera)
&lt;/h3&gt;

&lt;p&gt;This Coursera course focuses on the Fundamentals of Azure Infrastructure. It begins with understanding the subscription system, configuring the security, and acquiring storage. Then you'll build virtual machines and VNETS to start working.&lt;/p&gt;

&lt;p&gt;While doing the tutorial you will be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Configure and manage Azure subscriptions&lt;/li&gt;
&lt;li&gt;  Create and manage resource groups and identities&lt;/li&gt;
&lt;li&gt;  Configure and manage storage and backups&lt;/li&gt;
&lt;li&gt;  Create and manage virtual machines and virtual networks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It takes 30 hours to complete the course, and by the end, you will have a certificate. It is meant for an advanced profile, that already knows some different languages and wants to unify all his projects together ion the same platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fazure-infrastructure"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uljJAH-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-9q62WggH0mY/X1eG4H470bI/AAAAAAAAjJU/qsVFGjz6R24SIRrIylQ3BD4erceG4zyXwCLcBGAsYHQ/s400/Microsoft%252BAzure%252Bcloud%252B-%252BBeginner%252BBoot%252Bcamp%252B%252528Udemy%252529%252Bbest%252Bcourse.jpg" alt="Best Coursera course to learn Microsoft Azure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, If you are planning to join multiple Coursera courses or specialization then consider taking the &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;Coursera Plus subscription&lt;/a&gt;&lt;/strong&gt; which provides you unlimited access to their most popular courses, specialization, professional certificate, and guided projects. It cost around $399/year but its complete worth of your money as you get unlimited certificates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-az300-azure-architecture-technologies-exam-prep-2021-udemy"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F70534-azure%2F"&gt;AZ-300 Azure Architecture Technologies Exam Prep 2021&lt;/a&gt;  (Udemy)
&lt;/h3&gt;

&lt;p&gt;This is one of the best Azure cloud course from Udemy and you can use this to learn Azure in-depth as well as to prepare for the AZ-300 exam. This course is meant for someone that has knowledge in more than one language and want to be more efficient. During the course you will learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Access your services with the help of Azure Portal&lt;/li&gt;
&lt;li&gt;  Know how to work correctly with different virtual machines in Azure&lt;/li&gt;
&lt;li&gt;  Work with different storage options and policies for your cloud&lt;/li&gt;
&lt;li&gt;  Host your resources in the cloud with Operations Management Suite&lt;/li&gt;
&lt;li&gt;  Deliver high-bandwidth content with Azure CDN and Akamai&lt;/li&gt;
&lt;li&gt;  Develop databases with Azure&lt;/li&gt;
&lt;li&gt;  Leverage Azure Redis Cache as a Service for high throughput and low latency&lt;/li&gt;
&lt;li&gt;  Find and use enterprise data assets with Azure Data Catalog&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The course consists of 20 and a half hours of explanation videos that you can consult the times you want. By the end, you will master the Azure environment and you will be considerably more efficient.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F70534-azure%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dAdFAi_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-jiH--YGQmsI/X1eG3Co0egI/AAAAAAAAjJE/xP-KUsf8toYDdnb9zAvtWOnxs5bGDYS3wCLcBGAsYHQ/s400/AZ-300%252BAzure%252BArchitecture%252BTechnologies%252BExam%252BPrep%252B2020%252B-%252BUdemy%252Bbest%252Bcourse.jpg" alt="Top 5 Courses to learn Microsoft Azure Cloud Platform  in 2020 - Best of Lot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-microsoft-azure-cloud-beginner-boot-camp-udemy"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-complete-walkthrough-of-microsoft-azure-services%2F"&gt;Microsoft Azure cloud - Beginner Boot camp&lt;/a&gt; (Udemy)
&lt;/h3&gt;

&lt;p&gt;This is another best online course to learn Azure on Udemy. If you want to be an expert with Azure this is an online course you should join.&lt;/p&gt;

&lt;p&gt;This course has a total of 12 sections, during the course you will see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  An introduction to Azure storage services architecture&lt;/li&gt;
&lt;li&gt;  Creation of Virtual network, and network security groups&lt;/li&gt;
&lt;li&gt;  Introduction to computing building blocks; Virtual machine creation and storage, availability sets&lt;/li&gt;
&lt;li&gt;  Azure app services building blocks; Creating and managing web apps and mobile apps&lt;/li&gt;
&lt;li&gt;  Azure database services building blocks and creating and managing the Azure &lt;a href="https://medium.com/hackernoon/top-5-sql-and-database-courses-to-learn-online-48424533ac61"&gt;SQL database&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  Deliver &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-big-data-and-hadoop-best-of-lot-23ef8691633f"&gt;Big Data&lt;/a&gt; Solution on Azure&lt;/li&gt;
&lt;li&gt;  Deliver Application Integration on Azure&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/my-favorite-courses-to-learn-internet-of-things-iot-in-2020-best-of-lot-8517aa9fc838"&gt;Internet of things&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  An introduction to Azure security-related services&lt;/li&gt;
&lt;li&gt;  Monitoring &amp;amp; Diagnostics services&lt;/li&gt;
&lt;li&gt;  Azure infrastructure as code (ARM Templates)&lt;/li&gt;
&lt;li&gt;  Introduction to &lt;a href="https://javarevisited.blogspot.com/2018/09/10-devops-courses-for-experienced-java-developers.html"&gt;Azure DevOps&lt;/a&gt;
As you can see it comprehends a lot of subjects. All the course includes more than 30 hours of video, 6 articles, and 103 downloadable resources, which makes this is one of the most comprehensive Azure course on Udemy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-complete-walkthrough-of-microsoft-azure-services%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CvOWampE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-oFwuJq-PWnM/X1eG3G7OqyI/AAAAAAAAjJA/bmyjhg4e3iYR6bN_HhZaDEYPXwRyXclyACLcBGAsYHQ/s320/Azure%252BInfrastructure%252BFundamentals%252Bby%252BLearn%252BQuest%252B%252528Coursera%252529%252Bbest%252Bcourse.webp" alt="best course to learn Microsoft Azure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-microsoft-azure-beginners-guide-by-alan-rodrigues-udemy"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-beginners-guide%2F"&gt;Microsoft Azure - Beginner's Guide by Alan Rodrigues&lt;/a&gt; (Udemy)
&lt;/h3&gt;

&lt;p&gt;This is another best Udemy Azure course which is great to learn Microsoft Azure from scratch. As its names say this course is for beginners but to start this course you'll need some basic IT knowledge on networks, &lt;a href="https://medium.com/javarevisited/top-10-free-courses-to-learn-microsoft-sql-server-and-oracle-database-in-2020-6708afcf4ad7"&gt;databases&lt;/a&gt;, and how Web servers work.&lt;/p&gt;

&lt;p&gt;You will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The ability to understand how to start working with Azure&lt;/li&gt;
&lt;li&gt;  Spin up and working with Virtual Machines&lt;/li&gt;
&lt;li&gt;  Work with Storage options such as BLOB or &lt;a href="https://medium.com/javarevisited/5-best-courses-to-learn-microsoft-sql-server-in-depth-e9f11b73c14a"&gt;SQL Server&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Basic Understanding of services such as Azure Functions and Azure Web apps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By the end of the course, you'll be prepared for taking the &lt;a href="https://medium.com/javarevisited/5-best-azure-fundamentals-courses-to-pass-az-900-certification-exam-in-2020-9e602aea035d"&gt;AZ-900 certification exam&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The course includes 2 simulation exams for you to practice. Apart from that, it includes 10 and a half hours of video tutorials, 13 articles, and 12 resources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-beginners-guide%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OyTNj1Ml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-P2eu7jzErIE/X1eG3MOp-eI/AAAAAAAAjJI/8A2UGyEtpnsp-ONIzbXSKDI4MlvLMEPYACLcBGAsYHQ/s400/Microsoft%252BAzure%252B-%252BBeginner%252527s%252BGuide%252Bby%252BAlan%252BRodrigues%252B%252528Udemy%252529%252Bbest%252Bcourse.jpg" alt="Best udemy course to learn Microsoft Azure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-microsoft-azure-virtual-machines-by-microsoft-edx"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fcourse%2Fmicrosoft-azure-virtual-machines"&gt;Microsoft Azure Virtual Machines by Microsoft&lt;/a&gt; (edX)
&lt;/h3&gt;

&lt;p&gt;This course's focus is to use virtual machines in Azure for workloads, emphasizing basic configuration, planning, deployment, and management tasks. You'll be introduced to how to secure and make your virtual machines highly available and scalable. It is a good start for entering the Azure world but not having to see all its features.&lt;/p&gt;

&lt;p&gt;Here are the key things you will learn in this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  How IaaS uses virtual machines and the basic concepts of endpoints&lt;/li&gt;
&lt;li&gt;  Know how to determine virtual machine workloads and correctly choose the size of your virtual machines.&lt;/li&gt;
&lt;li&gt;  The process of creation, and deploy Azure Windows virtual machines.&lt;/li&gt;
&lt;li&gt;  How to configure virtual machine IP addresses, availability, scalability, and security.&lt;/li&gt;
&lt;li&gt;  How to manage, attach, import, and export virtual disks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This course can be done completely free, and then when you finish you can pay for the certificate of finalization if you desire to.&lt;/p&gt;

&lt;p&gt;That's all about the **best online courses to learn the Microsoft Azure Cloud Platform in 2021. **These online courses are also good for various Azure certifications like &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-fundamentals-certification-az-900-exam.html"&gt;Azure Fundamentals&lt;/a&gt; and &lt;a href="https://medium.com/javarevisited/how-to-prepare-for-azure-technologies-architect-certification-az-303-304-exam-5a2207c9058b"&gt;Azure Cloud Architect&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are an experienced programmer the Azure is a very good alternative to improve your workflow and make things easier for you. It is very extensive, so you have the articles explaining what they offer, so you can choose the one that adapts better to what you are looking for.&lt;/p&gt;

&lt;p&gt;Other  &lt;strong&gt;Azure&lt;/strong&gt; **Certification Resources for IT Professionals **and Java Programmers&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/06/top-5-course-to-crack-Microsoft-Azure-Developer-Certification-Exam-AZ-203.html"&gt;Top 5 Courses to crack Azure Developer Associate exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/how-to-crack-aws-certified-solution-architect-exam.html"&gt;How to Crack the AWS Solution Architect Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2020/07/5-free-courses-to-learn-microsoft-azure-cloud.html"&gt;5 Free Courses to learn Microsoft Azure Concepts&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-az-103-azure-administrator-associate-exam-certification.html"&gt;How to Crack AZ-103 Azure Administration Exam in 2021&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-solution-architect-exam-az-300.html"&gt;How to become an Azure Solution Architect Associate in 2021&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-courses-to-crack-azure-architecture-technologies-certification-az-300-exam.html"&gt;Top 5 Courses to pass Azure Cloud Architecture Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-az-900-microsoft-azure-fundamentals-certification-exam.html"&gt;Top 5 Courses to pass AZ-900 Certification in 2021&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-AZ-900-exam-Azure-Fundamentals-certification-practice-tests-and-mock-exams-to.html"&gt;Top 5 Mock Test for Microsoft Azure Fundamentals&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-courses-to-crack-azure-architecture-technologies-certification-az-300-exam.html#axzz6E6VuRMsx"&gt;Top 5 Courses to crack Azure Cloud Architect (AZ-300) Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/06/top-5-course-to-crack-Microsoft-Azure-Developer-Certification-Exam-AZ-203.html"&gt;5 Online Courses to Pass Azure Developer Associate Certification (AZ-203)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/05/top-5-courses-to-crack-aws-solutions-architect-associate-certification-exam-SAA-C01.html#axzz5rHwAwycj"&gt;Top 5 Courses to Crack AWS Solution Architect Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-AZ-900-exam-Azure-Fundamentals-certification-practice-tests-and-mock-exams-to.html"&gt;Top 5 AZ-900 Practice tests for programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-google-cloud-platform-gcp-courses-certifications-online.html"&gt;Top 5 Courses to Pass Google Associate Cloud Engineer Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/09/the-2018-devops-roadmap-your-guide-to-become-DevOps-Engineer.html"&gt;How to become a DevOps Engineer?&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you find these Microsoft Azure courses useful, then, please share it with your friends and colleagues. If you have any questions or feedback, then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are keen to learn Microsoft Azure Platform from scratch but looking for free online training courses to start your journey then you can also see &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Flinux-academy-microsoft-azure-concepts%2F"&gt;Microsoft Azure Concepts&lt;/a&gt;&lt;/strong&gt;- a free course by Linux Academy on Udemy. It's completely free and all you need is a free Udemy account to join this course online.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>azure</category>
      <category>course</category>
      <category>development</category>
    </item>
    <item>
      <title>Style console.log() like a PRO</title>
      <author>capscode</author>
      <pubDate>Sun, 25 Jul 2021 11:42:46 +0000</pubDate>
      <link>https://dev.to/capscode/style-console-log-like-a-pro-8mp</link>
      <guid>https://dev.to/capscode/style-console-log-like-a-pro-8mp</guid>
      <description>&lt;p&gt;Hello Devs,&lt;/p&gt;

&lt;p&gt;In this blog I will guide you all through "HOW WE CAN STYLE CONSOLE.LOG() USING CSS"&lt;br&gt;
I have made 12 different styles for you to make sure that you will not ended up with any confusions.&lt;/p&gt;

&lt;p&gt;So without wasting any time lets get into this tutorial.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add %c before the text you want to style.&lt;/li&gt;
&lt;li&gt;Insert one more argument in the console log function with the style you want to apply.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1.Simple Console Log Shortcut for JS Objects with the defined color i.e #007acc&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%cThis is my 1st style", "color: #007acc;", "CAPSCODE");&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Avu6_2jx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xr5icula39zkvmx787ow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Avu6_2jx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xr5icula39zkvmx787ow.png" alt="style 1 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.JSON String Output&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log('%cThis is my 2nd style', 'color: #007acc;', JSON.stringify({fname:'JOHN', lname:'DOE'}, null, "\t" ))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---kMlREA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42e1rguz86aq35w1xuat.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---kMlREA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42e1rguz86aq35w1xuat.png" alt="style 2 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Simple Console Log Shortcut for JS Objects - Green Text&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%cThis is my 4th style", "color: #26bfa5;", foo);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TciHlhFX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpsdf7dt3uhha05si4dk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TciHlhFX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpsdf7dt3uhha05si4dk.png" alt="style 3 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.Simple Console Log Shortcut for JS Objects - Blue Background&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%cThis is my 5th style", "color: white; background-color: #007acc;", foo);&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1O93Se6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mh9amcb7li32bcdmijl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1O93Se6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mh9amcb7li32bcdmijl.png" alt="style 4 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.Simple Console Log Shortcut for JS Objects - Green Background&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%cThis is my 6th style", "color: white; background-color: #26bfa5;", foo);&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ISq6qgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyo2k3d0cdx68a8c4y8g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ISq6qgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyo2k3d0cdx68a8c4y8g.png" alt="style 5 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.Console logs -&amp;gt; Hello ${TM_FILENAME} line:${TM_LINE_NUMBER} on Green Background&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%cThis is my 7th style", "background: green; color: white; display: block;");&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v9NtsVhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4kmzcime5voy0buw3rcx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v9NtsVhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4kmzcime5voy0buw3rcx.png" alt="style 6 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.Find errors with style&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%cThis is my 8th style", "color: red; display: block; width: 100%;", error);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RanhBXVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8chjzvl9iivkll6gdbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RanhBXVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8chjzvl9iivkll6gdbf.png" alt="style 7 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8.You need a Rainbow in your code&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%c CapsCode!", "font-weight: bold; font-size: 50px;color: red; text-shadow: 3px 3px 0 rgb(217,31,38) , 6px 6px 0 rgb(226,91,14) , 9px 9px 0 rgb(245,221,8) , 12px 12px 0 rgb(5,148,68) , 15px 15px 0 rgb(2,135,206) , 18px 18px 0 rgb(4,77,145) , 21px 21px 0 rgb(42,21,113); margin-bottom: 12px; padding: 5%");&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BOzHgtgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yqew40jjos0pzho5ax0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BOzHgtgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yqew40jjos0pzho5ax0.png" alt="style 8 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9.Confused?! so put a this guy in your code.&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%c ", "font-size: 1px; padding: 166.5px 250px; background-size: 500px 333px; background: no-repeat url(https://www.capscode.in/static/media/cap.0d0af8f0.png);");&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p5lcEjub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625940088104/SO18eISgt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p5lcEjub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625940088104/SO18eISgt.png" alt="style 9 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10.Simple Console Log Shorcut for JS Objects - Green Text&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%c ", "font-size: 1px; padding: 240px 123.5px; background-size: 247px 480px; background: no-repeat url(https://www.capscode.in/static/media/cap.0d0af8f0.png);");&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y30kBGDg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625940105931/mSyJwA8Do.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y30kBGDg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625940105931/mSyJwA8Do.png" alt="style 10 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11.Celebrate your code works!&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%c ", "font-size: 1px; padding: 125px 125px; background-size: 250px 250px; background: no-repeat url(https://i2.wp.com/i.giphy.com/media/12BYUePgtn7sis/giphy-downsized.gif?w=770&amp;amp;amp;ssl=1);")&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2jQCTcLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625940345145/o_EwGGj5z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2jQCTcLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625940345145/o_EwGGj5z.png" alt="style 11 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12.Coding GIF&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;console.log("%c ", "font-size: 1px; padding: 215px 385px; background-size: 770px 430px; background: no-repeat url(https://i0.wp.com/i.giphy.com/media/ZVik7pBtu9dNS/giphy-downsized.gif?w=770&amp;amp;amp;ssl=1);");&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D06QejHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pso54hm4rwq94afnmae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D06QejHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pso54hm4rwq94afnmae.png" alt="style 12 of console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That all in this article, hope you all have enjoyed it.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#capscode"&gt;
  &lt;/a&gt;
  capscode
&lt;/h1&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>design</category>
    </item>
    <item>
      <title>Créer un RESTFul API avec AdonisJS 5.0 (incluant l'authentification par token)</title>
      <author> Eric Le Codeur</author>
      <pubDate>Sun, 25 Jul 2021 11:35:22 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/creer-un-restful-api-avec-adonisjs-5-0-incluant-l-authentification-par-token-8pe</link>
      <guid>https://dev.to/ericlecodeur/creer-un-restful-api-avec-adonisjs-5-0-incluant-l-authentification-par-token-8pe</guid>
      <description>&lt;p&gt;Si vous désirez plus de contenu francophone comme celui-ci, cliquer &lt;strong&gt;Follow ou &lt;a href="https://twitter.com/EricLeCodeur"&gt;suivez-moi sur Twitter&lt;/a&gt;&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AdonisJS est à Javascript ce que Laravel est à PHP. Adonis est donc un framework backend construit avec l'idée d'apporter une expérience développeur (DX) extraordinaire. &lt;/p&gt;

&lt;p&gt;Adonis rend disponible tous les outils que vous avez besoin pour bâtir une application fullstack de A à Z&lt;/p&gt;

&lt;p&gt;Aujourd'hui vous allez découvrir comment bâtir un RESTful API avec Adonis. Vous allez même découvrir comment intégré l'authentification par token à votre API.&lt;/p&gt;

&lt;p&gt;L'API que vous allez construire est une gestion de tâches. Vous aller créer un API pour créer des tâches, lire, effacer et mettre à jour des tâches&lt;/p&gt;

&lt;p&gt;Vous allez également créer un API qui pourra créer un user et faire l'authentification. Ce dernier point peut vous sembler compliqué mais en faite Adonis à un package Auth qui s'occupe de presque tout.&lt;/p&gt;

&lt;h1&gt;Pré-requis&lt;/h1&gt;

&lt;p&gt;Avoir des connaissances de base sur les Restful API et sur les frameworks backend MVC&lt;/p&gt;

&lt;h1&gt;Partie 1 : Création du projet et de l'authentification&lt;/h1&gt;

&lt;p&gt;Créer un nouveau projet Adonis&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="nx"&gt;adonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;latest&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;

  &lt;span class="nx"&gt;choisir&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt; &lt;span class="nx"&gt;structure&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Une fois le project créé, vous pouvez lancer le serveur local :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;serve&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Installer et configurer le module de base de données&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;adonisjs&lt;/span&gt;&lt;span class="sr"&gt;/luci&lt;/span&gt;&lt;span class="err"&gt;d
&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;configure&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;adonisjs&lt;/span&gt;&lt;span class="sr"&gt;/luci&lt;/span&gt;&lt;span class="err"&gt;d
&lt;/span&gt;
  &lt;span class="nx"&gt;choisir&lt;/span&gt; &lt;span class="nx"&gt;SQLite&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ici Adonis va créer une base de donnée SQLite qui sera pré-configuré et accessible de votre application&lt;/p&gt;

&lt;p&gt;Installer and configurer le module auth&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;adonisjs&lt;/span&gt;&lt;span class="sr"&gt;/aut&lt;/span&gt;&lt;span class="err"&gt;h
&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;configure&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;adonisjs&lt;/span&gt;&lt;span class="sr"&gt;/aut&lt;/span&gt;&lt;span class="err"&gt;h
&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;choisir&lt;/span&gt; &lt;span class="nx"&gt;Lucid&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;Saisir&lt;/span&gt; &lt;span class="nx"&gt;modèle&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;choisir&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt; &lt;span class="nx"&gt;Tokens&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;choisir&lt;/span&gt; &lt;span class="nx"&gt;créer&lt;/span&gt; &lt;span class="nx"&gt;la&lt;/span&gt; &lt;span class="nx"&gt;migration&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;choisir&lt;/span&gt; &lt;span class="nx"&gt;utiliser&lt;/span&gt; &lt;span class="nx"&gt;une&lt;/span&gt; &lt;span class="nx"&gt;base&lt;/span&gt; &lt;span class="nx"&gt;de&lt;/span&gt; &lt;span class="nx"&gt;donnée&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;créer&lt;/span&gt; &lt;span class="nx"&gt;la&lt;/span&gt; &lt;span class="nx"&gt;table&lt;/span&gt; &lt;span class="nx"&gt;pour&lt;/span&gt; &lt;span class="nx"&gt;stocker&lt;/span&gt; &lt;span class="nx"&gt;les&lt;/span&gt; &lt;span class="nx"&gt;Tokens&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Le module Auth va vous permettre faire un login avec token&lt;/p&gt;

&lt;p&gt;Ajouter le champ username au modèle User&lt;br&gt;
(app/models/user.ts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;column&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Par défaut le champ username n'est pas créer, vous allez donc en créer un.&lt;/p&gt;

&lt;p&gt;Ajouter le champ username au fichier de migration User&lt;br&gt;
(database/migrations/xxxxxxxxx_users.ts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;notNullable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;notNullable&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lancer la migration (afin de créer la table users)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;migration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La migration s'occupe de créer et mettre à jour les tables et champs de votre base de données.&lt;/p&gt;

&lt;p&gt;Installer le module pour hasher le mot de passe&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;phc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;argon2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ce module vous servira à crypter le mot de passe de l'utilisateur&lt;/p&gt;

&lt;p&gt;Création de la route post pour permettre d'ajouter un User&lt;br&gt;
(start/routes.ts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AuthController.register&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Création du validator:&lt;br&gt;
(validators/Auth/StoreUserValidator.ts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;StoreUser&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Les Validator permettent d'annuler un requête si cette requête ne passe pas la validation. &lt;/p&gt;

&lt;p&gt;Les Validator retournent également un message d'erreur de validation si la validation de passe pas&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rules&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ioc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;Adonis&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Validator&lt;/span&gt;

&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;table&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Création du controller&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;controller&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Les controller contient toutes les fonctions que les routes vont exécuter&lt;/p&gt;

&lt;p&gt;Ajouter une fonction 'register' au controller&lt;br&gt;
(app/controllers/Http/AuthController.ts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;StoreUserValidator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 201 CREATED&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cette fonction permet de créer un 'user' selon les informations soumis par l'API (email, username et password)&lt;/p&gt;

&lt;p&gt;Login&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;users/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AuthController.login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Création du validator: Validators/Auth/LoginValidator.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rules&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ioc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;Adonis&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Validator&lt;/span&gt;

&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;()]),&lt;/span&gt;
    &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Création de la fonction login dans le controller Auth&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;LoginValidator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attempt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cette fonction s'occupe de faire l'authentification et retourne un token que le client pourra utiliser pour accéder aux routes protégé.&lt;/p&gt;

&lt;p&gt;Get user (start/route.ts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AuthController.me&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Auth middleware (start/kernel.ts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;registerNamed&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App/Middleware/Auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Création du middleware qui permettre de vérifier le token&lt;/p&gt;

&lt;p&gt;Création de la route put pour update User&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AuthController.update&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Création du validator: Validators/Auth/UpdateUserValidator.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;UpdateUser&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rules&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ioc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;Adonis&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Validator&lt;/span&gt;

&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
    &lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;table&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;]),&lt;/span&gt;
  &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Création de la fonction update du controller Auth&lt;br&gt;
(app/Controllers/Http/AuthController.ts)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UpdateUserValidator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 200 OK&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;Partie 2 - Création du modèle Task&lt;/h1&gt;

&lt;p&gt;Création du modèle, de la migration et du controller&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;L'option -cm va créer le fichier de la migration et le fichier du controller&lt;/p&gt;

&lt;p&gt;Ouvrir la migration et ajouter les champs voulus:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tableName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;unsigned&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;references&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;users.id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;onDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CASCADE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;notNullable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;is_done&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;defaultTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;created_at&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;useTz&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;updated_at&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;useTz&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ouvrir le modèle et ajouter les columns et la relation belongTo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DateTime&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;luxon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BaseModel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;BelongsTo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;belongsTo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hasMany&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HasMany&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@ioc:Adonis/Lucid/Orm&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./User&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;BaseModel&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;column&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;isPrimary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;column&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;autoCreate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DateTime&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;column&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;autoCreate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;autoUpdate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;updatedAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DateTime&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;column&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;column&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;is_done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;belongsTo&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;BelongsTo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ouvrir le fichier modèle User et ajouter le HasMany&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;hasMany&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HasMany&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Créer les routes pour le CRUD de Tasks&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tasks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TaskController&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;apiOnly&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// Cette ligne de code va créer 5 chemin urls pour le CRUD&lt;/span&gt;

&lt;span class="c1"&gt;// Liste des tâches: GET /tasks (tasks.index)&lt;/span&gt;
&lt;span class="c1"&gt;// Sauvegarder une tâches: POST /tasks (tasks.store)&lt;/span&gt;
&lt;span class="c1"&gt;// Lire une tâche: GET tasks/:id (tasks.show)&lt;/span&gt;
&lt;span class="c1"&gt;// Mise à jour d'une tâche: PUT tasks/:id (tasks.update)&lt;/span&gt;
&lt;span class="c1"&gt;// Effacer une tâche: DELETE tasks/:id (tasks.destroy)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dans le fichier TasksController créer les 5 actions CRUD&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@ioc:Adonis/Core/HttpContext&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App/Models/Task&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StoreTaskValidator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App/Validators/Tasks/StoreTaskValidator&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;UpdateTaskValidator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App/Validators/Tasks/UpdateTaskValidator&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;TasksController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;StoreTaskValidator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;show&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOrFail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOrFail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UpdateTaskValidator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;destroy&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;HttpContextContract&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOrFail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Créer le StoreTaskValidator&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="nx"&gt;Tasks&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;StoreTask&lt;/span&gt;

&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="na"&gt;is_done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Créer le UpdateTaskValidator&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;ace&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="nx"&gt;Tasks&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;UpdateTask&lt;/span&gt;

&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;optinal&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="na"&gt;is_done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Comme vous avez sans douter constater, la syntaxe de Adonis pour créer un Restful API est très propre. Adonis est un des premiers, sinon le premier framework javascript qui rappel le plaisir et l'efficacité pour les développeurs d'utiliser un framework comme Laravel.&lt;/p&gt;

</description>
      <category>adonis</category>
      <category>javascript</category>
      <category>french</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The Best Way to Learn Python (Beginners-Friendly)!</title>
      <author>Matthew Tam</author>
      <pubDate>Sun, 25 Jul 2021 11:25:25 +0000</pubDate>
      <link>https://dev.to/matthewtamyt/the-best-way-to-learn-python-beginners-friendly-1akn</link>
      <guid>https://dev.to/matthewtamyt/the-best-way-to-learn-python-beginners-friendly-1akn</guid>
      <description>&lt;p&gt;The best way to learn Python is finally out. This project features everything a beginner or intermediate needs to know to become an expert. It features a simple yet effective way of learning with snippets of example code to show you. It walks you through many functions and encourages you to try them yourself. In fact, updates would be steadily coming at least every day. Check it out:&lt;br&gt;
&lt;a href="https://github.com/MatthewTamYT/LearnPython"&gt;https://github.com/MatthewTamYT/LearnPython&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>React Chart js Line Graph App</title>
      <author>NasreenKhalid</author>
      <pubDate>Sun, 25 Jul 2021 11:13:21 +0000</pubDate>
      <link>https://dev.to/nasreenkhalid/react-chart-js-line-graph-app-1h1a</link>
      <guid>https://dev.to/nasreenkhalid/react-chart-js-line-graph-app-1h1a</guid>
      <description>&lt;p&gt;There are many applications where you have a particular set of data and you need to plot the values on a graph, be it a bar chart, a line graph, a doughnut or a pie chart, in any form the values plotted on a graph are far more readable and understandable then explained in the form of text.&lt;/p&gt;

&lt;p&gt;You can read more information about react chartjs &lt;a href="https://github.com/reactchartjs/react-chartjs-2"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today, we will create a simple Line Graph application in react using chartjs library and plot the weekly results of our daily calories lost.&lt;/p&gt;

&lt;p&gt;To begin with, I have created a react application using the command: npx create_react_app my_react_app&lt;br&gt;
Next, we will do the necessary clean up which includes removing the logo.svg and tests file from the src folder of our app.&lt;br&gt;
Now, we need to install two dependencies in order to make use of chartjs in react by running the following command:&lt;/p&gt;

&lt;p&gt;npm install --save react-chartjs-2 chart.js&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#or"&gt;
  &lt;/a&gt;
  or
&lt;/h1&gt;

&lt;p&gt;yarn add react-chartjs-2 chart.js&lt;/p&gt;

&lt;p&gt;After the dependencies are installed, now we will create a LineGraph.js file in src folder where we will write the code for our graph. In this file, we will need to import the Line graph from react chartjs in the following manner:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Line&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-chartjs-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we will define the x and y axis values in the Line component as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Line&lt;/span&gt;
       &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
       &lt;span class="c1"&gt;// x-axis label values&lt;/span&gt;
       &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="na"&gt;datasets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;# of Calories Lost&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="c1"&gt;// y-axis data plotting values&lt;/span&gt;
              &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;520&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;350&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="na"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;borderWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rgb(255, 99, 132)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;borderColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;responsive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below is the description of all the values corresponding in the data object:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;labels: values on x-axis&lt;/li&gt;
&lt;li&gt;data: array to be plotted over y-axis&lt;/li&gt;
&lt;li&gt;fill:false -- if you want your graph to be filled underneath the plotted points then you will set fill to true&lt;/li&gt;
&lt;li&gt;borderColor: color of the line which is plotted on the graph&lt;/li&gt;
&lt;li&gt;borderWidth: width of the line graph&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Complete look of LineGraph.js file is like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Line&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-chartjs-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;LineGraph&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Line&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
          &lt;span class="c1"&gt;// x-axis label values&lt;/span&gt;
          &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="na"&gt;datasets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;# of Calories Lost&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="c1"&gt;// y-axis data plotting values&lt;/span&gt;
              &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;520&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;350&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="na"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;borderWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rgb(255, 99, 132)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;borderColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;responsive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;LineGraph&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run this app using npm start and you will find a beautiful responsive line graph plotted across x and y axis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GAdr0LRV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0f7e0nw2tit86xjidoz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GAdr0LRV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0f7e0nw2tit86xjidoz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a very simple implementation of chartjs, however it can be used for various purposes wherever you are making use of a variety of data values. &lt;/p&gt;

&lt;p&gt;That's all folks.&lt;br&gt;
Happy coding...&lt;/p&gt;

</description>
      <category>react</category>
      <category>chartjs</category>
      <category>linegraph</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My LGMVIP experience</title>
      <author>Jatikbhardwaj</author>
      <pubDate>Sun, 25 Jul 2021 10:54:52 +0000</pubDate>
      <link>https://dev.to/jatikbhardwaj/my-lgmvip-experience-2cld</link>
      <guid>https://dev.to/jatikbhardwaj/my-lgmvip-experience-2cld</guid>
      <description>&lt;p&gt;Hey, Guys how you all are doing I hope you all are doing well. Recently I have enrolled for an intership program at Letsgrowmore.&lt;/p&gt;

&lt;p&gt;So here I would like to share my internship experience at Letsgrowmore. In this internship program, they have given us three tasks out of which we have to do two tasks to get the internship certificate. So, let's go through my tasks.&lt;/p&gt;

&lt;p&gt;Task1:- In task one we have to build a single-page application I have introduced all the features in these project like carousels, cards, newsletters, swiping video section, swiping Gallery section contact section, and at last a footer. It was a challenging task because we have to made these pages mobile responsive also and to make it responsive I have used Bootstrap. I really enjoyed making this project I have put all my efforts and skills to make this project.&lt;br&gt;
&lt;a href="https://github.com/Jatikbhardwaj/LGMVIP-WebDev-Task-1"&gt;Task-1 Code&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/posts/jatik-bhardwaj-502b30206_task1-intern-css-ugcPost-6819643775653044224-DDFe"&gt;Task-1 Video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Task-2:- In this task we have to build a landing page that contains a button (get users) when a user clicks on it, it fetch user data in the form of cards and while the API is fetching data its show loader that indicates that the data is loading.&lt;br&gt;
&lt;a href="https://github.com/Jatikbhardwaj/LGMVIP-WebDev-Task-2"&gt;Task-2 Code&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/posts/jatik-bhardwaj-502b30206_task2-letsgrowmore-intern-activity-6824928895737831424-Grfq"&gt;Task-2 Video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At last I would like to thank &lt;a href="https://letsgrowmore.in/"&gt;Letsgrowmore&lt;/a&gt; for boosting up my skills and I recommend all of you guys to visit &lt;a href="https://letsgrowmore.in/vip/"&gt;VIP-Letsgrowmore&lt;/a&gt; and take benefits from these free organization.&lt;br&gt;
Thank You,&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/jatik-bhardwaj-502b30206/"&gt;Jatik Bhardwaj&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>html</category>
    </item>
    <item>
      <title>Free TailwindCSS components to build UI faster </title>
      <author>Vikrant Bhat</author>
      <pubDate>Sun, 25 Jul 2021 10:41:06 +0000</pubDate>
      <link>https://dev.to/bhatvikrant/free-tailwindcss-components-to-build-faster-ui-l3</link>
      <guid>https://dev.to/bhatvikrant/free-tailwindcss-components-to-build-faster-ui-l3</guid>
      <description>&lt;p&gt;As a frontend developer often times we want to just spit out a decently looking UI in a short span of time. The advent of Tailwind CSS has already made our jobs easier but wouldn't it be even better if we could use pre-built good looking components and that too for FREE?&lt;/p&gt;

&lt;p&gt;That's right, this is a compiled list of free Tailwind CSS components and templates that you can use directly in your side projects or any project for that matter :)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🚨 NOTE: Please save this post as I will be updating the list as and when I stumble upon more free resources 🚀.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#1-tailkit"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.tailwind-kit.com/"&gt;Tail-kit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Tail-kit gives you access to over 250 free components and free templates, based on Tailwind CSS 2.0. It's all compatible with React, VueJS and Angular applications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tailwind-kit.com/started"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tailwind-kit.com/components"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tailwind-kit.com/templates"&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Extra: You can even make a request for a component &lt;a href="https://www.tailwind-kit.com/request"&gt;here&lt;/a&gt;. Isn't that just amazing 🥳 ?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-kimiaui"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://kimia-ui.vercel.app/"&gt;Kimia-UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Provides fully customizable UI Components compatible with Next.js, Gatsby and create-react-app.&lt;br&gt;
No installation needed, Just copy and paste a component you want to use&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kimia-ui.vercel.app/configuration"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kimia-ui.vercel.app/components/accordion"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kimia-ui.vercel.app/templates/dashboards"&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-mamba-ui"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://mambaui.com/"&gt;Mamba UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Mamba UI is a free, open-source collection of beautiful UI elements based on Tailwind CSS that make it easy for anyone to build a website in minutes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mambaui.com/docs"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mambaui.com/components"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mambaui.com/templates"&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-meraki-ui"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://merakiui.com/"&gt;Meraki UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Beautiful Tailwind CSS components that support RTL languages &amp;amp; fully responsive based on Flexbox &amp;amp; CSS Grid with elegant Dark Mode.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://merakiui.com/"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-tailblocks"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://tailblocks.cc/"&gt;Tailblocks&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Ready-to-use Tailwind CSS blocks&lt;br&gt;
60+ Blocks, Responsive, Dark Mode Support, Color Variations&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tailblocks.cc/"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-salviakit"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://www.salvia-kit.com/"&gt;Salvia-Kit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Built with Tailwind CSS, they are fully customizable and without external dependencies. Each dashboard has 4 variants. one for create-react-app, Next.js, Vue with vite and Nuxt.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.salvia-kit.com/dashboard/all"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Thankyou everyone! that is it for now, but I will be updating this list, you can also contribute to this exhaustive list by commenting below or by reaching out to me on &lt;a href="https://twitter.com/vikrantbhat1022"&gt;twitter&lt;/a&gt;🐤, and I will add them here with credits :)&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>css</category>
      <category>react</category>
      <category>components</category>
    </item>
    <item>
      <title>How to write a good README</title>
      <author>Siddharth</author>
      <pubDate>Sun, 25 Jul 2021 10:38:08 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/how-to-write-a-good-readme-cn0</link>
      <guid>https://dev.to/siddharthshyniben/how-to-write-a-good-readme-cn0</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;A README is a great way to show people what your project can do, and why it matters, and here I'll show you how to write a good README.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Check out my &lt;a href="https://github.com/siddharthShyniben/community-health/"&gt;community-health&lt;/a&gt; repo, and follow the instructions in its README to quickly get started.&lt;/p&gt;




&lt;p&gt;So, you in for the read? Great! Let's start 😄&lt;/p&gt;

&lt;p&gt;
  Table of contents
  &lt;ul&gt;
&lt;li&gt;&lt;a href="#core-concepts"&gt;Core Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#writing-guidelines"&gt;Writing guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#writing-the-readme"&gt;Writing the README&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#add-a-title"&gt;Add a title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#include-badges"&gt;Include badges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#include-a-banner-image-logo"&gt;Include a banner image/logo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#highlights"&gt;Highlights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-contribute-and-credit-to-contributors"&gt;How to contribute, and credit to contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#license"&gt;License&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;





&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#core-concepts"&gt;
  &lt;/a&gt;
  Core concepts
&lt;/h2&gt;

&lt;p&gt;Your README should be a &lt;em&gt;&lt;strong&gt;concise&lt;/strong&gt;&lt;/em&gt; gateway to all other resources. It should answer these questions as fast as possible:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;What is the project for? (A short description)&lt;/li&gt;
&lt;li&gt;Can I use it? (Prerequisites)&lt;/li&gt;
&lt;li&gt;If yes, how do I install it? (Installation, Usage examples, etc.)&lt;/li&gt;
&lt;li&gt;How can I help? (License, Contributing, etc.)&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#writing-guidelines"&gt;
  &lt;/a&gt;
  Writing guidelines
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Taken from &lt;a href="https://github.com/SiddharthShyniben/community-health/blob/main/writing-guidelines.md"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are some general writing guidelines:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Keep your writing readable as a raw file.&lt;/strong&gt;&lt;br&gt;
Sometimes, people may read your project as an unrendered, plain markdown file. It may be for editing it, or just because they have a local copy of your code. Make sure your README is still readable for them.&lt;/p&gt;

&lt;p&gt;A few tips to help make your Markdown readable even if it is raw:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- **Always break lines!** Set your editor to show a ruler at ~80 characters. This is done so that people who are reading this as a raw file don't have to scroll infinitely.

  This is not a hard and fast rule though. Also, you don't have to break a line for that one last word which overflows (except if it is "Pneumonoultramicroscopicsilicovolcanoconiosis" or something 🤣).

  ![WHOA WHOA WHOA - THAT IS A VERY LONG WORD](https://media.makeameme.org/created/whoa-whoa-whoa-5b8473.jpg)

- **Minimise HTML.** Keep your markdown file as much markdown-y as possible – you don't want people reading HTML! Only use HTML if it is really helpful to the readability of the rendered content. A good example of when to use an HTML tag is the `&amp;lt;details&amp;gt;` tag.

- **Use reference-style links** because you don't want a super long link to break the flow.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Keep a light, friendly tone&lt;/strong&gt;. Write as if the reader doesn't know too much but is really interested&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Keep it brief&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Link to other places in the files only for additional information.&lt;/strong&gt; &lt;br&gt;
&lt;strong&gt;When linking, inline the relevant information.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use as many images, snippets, commands as you can.&lt;/strong&gt; Show them, not tell them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Check out &lt;a href="https://cirosantiilli.com/markdown-style-guide"&gt;this markdown style guide&lt;/a&gt; or &lt;a href="https://github.com/google/styleguide/blob/gh-pages/docguide/style.md"&gt;this style guide&lt;/a&gt; and other available markdown style guides.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#writing-the-readme"&gt;
  &lt;/a&gt;
  Writing the README
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#add-a-title"&gt;
  &lt;/a&gt;
  Add a title
&lt;/h3&gt;

&lt;p&gt;Obviously, the first thing that should appear on the README. Consider linking it to the project's GitHub repo.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#include-badges"&gt;
  &lt;/a&gt;
  Include badges
&lt;/h3&gt;

&lt;p&gt;Badges are a great way to show tiny tidbits of info. They also attract the eye but don't overuse them.&lt;/p&gt;

&lt;p&gt;You can also make these badges link to relevant pages. For example, the stars badge could link to the stargazers page.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#include-a-banner-imagelogo"&gt;
  &lt;/a&gt;
  Include a banner image/logo
&lt;/h3&gt;

&lt;p&gt;Banner images are better, but you can choose any. Look at this &lt;a href="https://github.com/atom/atom#atom"&gt;beautiful example of a banner&lt;/a&gt; by &lt;a href="//atom.io"&gt;atom&lt;/a&gt;(Coincidentally, I based most of my studies on atom's repos). And &lt;a href="https://github.com/ai/size-limit#readme"&gt;this&lt;/a&gt; is a nice example of how to place a logo.&lt;/p&gt;

&lt;p&gt;You can also add some additional images under your banner.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;Make your project description short and to the point. This is a template you can use, borrowed from &lt;a href="https://github.com/scottydocs/README-template.md"&gt;scottydocs' README template&lt;/a&gt;: &lt;code&gt;&amp;lt;project_name&amp;gt; is a &amp;lt;utility/tool/feature&amp;gt; that allows &amp;lt;insert_target_audience&amp;gt; to do &amp;lt;action/task_it_does&amp;gt;.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can also add another line or two, but don't go overboard.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#highlights"&gt;
  &lt;/a&gt;
  Highlights
&lt;/h3&gt;

&lt;p&gt;Add a quick list of highlights. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;-&lt;/span&gt; Fast. See &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;benchmarks&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;#benchmarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; for more info
&lt;span class="p"&gt;-&lt;/span&gt; Small. Only &lt;span class="sb"&gt;`1kb`&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; etc.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;The next thing to do is list out the prerequisites. Make sure all these are included (in order of importance):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Which OSes (OSs? OS's?) are supported&lt;/li&gt;
&lt;li&gt;What dependencies and tools are needed&lt;/li&gt;
&lt;li&gt;What knowledge is required&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Show installation commands.&lt;/strong&gt; Even though programmers have magical capabilities, copy-paste is preferred (by most people).&lt;/p&gt;

&lt;p&gt;Also, if there is a CDN, show an example of how to use it.&lt;/p&gt;

&lt;p&gt;If you have nightly/beta versions, show how to install them too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Show as many usage examples as possible.&lt;/strong&gt; Show the simplest, quickest way to use the project. There is rarely a code snippet that works all the time, so make sure to provide multiple examples if there isn't.&lt;/p&gt;

&lt;p&gt;Bonus points if you link to the documentation!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-contribute-and-crediting-contributors"&gt;
  &lt;/a&gt;
  How to contribute, and crediting contributors
&lt;/h3&gt;

&lt;p&gt;For the "how to contribute" section, just quickly show how to fork, clone, and set up the repo, and link to a contributing file for details.&lt;/p&gt;

&lt;p&gt;For crediting contributors, you could do it manually, or you could use something like &lt;a href="https://allcontributors.org"&gt;All Contributors&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h3&gt;

&lt;p&gt;If people have made it all the way here, they are definitely interested in the project as a contributor (If they weren't, they should have left after the usage sample). So, mention which license is used.&lt;/p&gt;




&lt;p&gt;Now you know how to make a good README! Thanks for reading! 👋&lt;/p&gt;

&lt;p&gt;(Fun fact: I used &lt;code&gt;&amp;lt;esc&amp;gt; :wq&lt;/code&gt; to publish this post 🤣🤣)&lt;/p&gt;

</description>
      <category>writing</category>
      <category>guide</category>
      <category>tutorial</category>
      <category>github</category>
    </item>
  </channel>
</rss>
