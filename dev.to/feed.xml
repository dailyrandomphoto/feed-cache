<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>New app release called "AppDEV PPT-Creator"</title>
      <author>david050708</author>
      <pubDate>Tue, 07 Dec 2021 04:51:07 +0000</pubDate>
      <link>https://dev.to/david050708/new-app-release-4i8j</link>
      <guid>https://dev.to/david050708/new-app-release-4i8j</guid>
      <description>&lt;p&gt;Hey There Devs,&lt;br&gt;
It's me Dave again, we have created a new app called "AppDEV PPT-Creator" it can create ppts but not as you expect since it is still under development.&lt;br&gt;
Live Link: &lt;a href="https://app.codingrooms.com/w/QfGmy2bAiuK7"&gt;https://app.codingrooms.com/w/QfGmy2bAiuK7&lt;/a&gt;&lt;br&gt;
Don't forget to click the run button and it's Console based&lt;/p&gt;

&lt;p&gt;Contact: &lt;a href="mailto:davidjeremiah050708@gmail.com"&gt;davidjeremiah050708@gmail.com&lt;/a&gt;&lt;br&gt;
Discord: DJ050708#7940&lt;br&gt;
Github: david050708&lt;/p&gt;

&lt;p&gt;Thank You&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>New Website Launch</title>
      <author>david050708</author>
      <pubDate>Tue, 07 Dec 2021 04:23:44 +0000</pubDate>
      <link>https://dev.to/david050708/new-website-launch-2ndd</link>
      <guid>https://dev.to/david050708/new-website-launch-2ndd</guid>
      <description>&lt;p&gt;Hey there Devs,&lt;br&gt;
It's me Dave again, we have launched our new website so that  you can download our apps &lt;a href="https://david050708.github.io/appdevdownload.github.io/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have released a new app called NoteWritePad, it's free easy to use and user-friendly.&lt;/p&gt;

&lt;p&gt;About:&lt;br&gt;
I am a 14 year old boy from Tamil Nadu, India. First I thought programming was "ugly", but after I saw my friend creating apps, I was fascinated by the beauty of programming and from then on I started my journey as developer&lt;/p&gt;

&lt;p&gt;Contact = &lt;a href="mailto:davidjeremiah050708@gmail.com"&gt;davidjeremiah050708@gmail.com&lt;/a&gt;&lt;br&gt;
Discord = DJ050708#7940&lt;br&gt;
Github = david050708&lt;/p&gt;

&lt;p&gt;Thank You&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Fiverr is the upcoming king of freelancing platform, But Why?</title>
      <author>New Linux Helper</author>
      <pubDate>Tue, 07 Dec 2021 03:32:40 +0000</pubDate>
      <link>https://dev.to/developerbishwas/fiverr-is-the-upcoming-king-of-freelancing-platform-but-why-3611</link>
      <guid>https://dev.to/developerbishwas/fiverr-is-the-upcoming-king-of-freelancing-platform-but-why-3611</guid>
      <description>&lt;p&gt;There aren't many bigger freelance websites than Fiverr. It's been around since 2010 and claims to be used by more than three million employers, including big companies like Netflix and Facebook.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're struggling with not getting &lt;strong&gt;clicks&lt;/strong&gt;, &lt;strong&gt;impressions&lt;/strong&gt; and &lt;strong&gt;ORDERS&lt;/strong&gt; in Fiverr, you must &lt;a href="https://webmatrices.com/t/fiverr"&gt;ask some Fiverr experts&lt;/a&gt; to check it once. So, here are the experts who will help you to make your GIG rank on the top.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fiverr's sheer size means that employers can find every kind of freelancer on the site, and if you're a freelancer you'll be able to find opportunities no matter what kind of work you do. Whether you're after a long project, a small job, or anything in between, you'll be able to find it here, and at all sorts of budgets. Free listings also mean there are plenty of low-cost opportunities here too.&lt;/p&gt;

&lt;p&gt;It's free to join the site and free to list opportunities on Fiverr, and everyone can benefit from protected payments and 24/7 support. Businesses can also pay to enjoy an upgraded package that offers verified freelancers, hand-picked talent matching, and a dashboard to manage your projects.&lt;/p&gt;

&lt;p&gt;Fiverr has plenty going for it, not least its size, but its low barrier to entry means that you may have to sift through many unsuitable projects or freelancers before you find the right fit. Free listings also mean that Fiverr's eventual transaction fees are a little higher than many other sites.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-fiverr-is-the-king-of-freelancing-platform"&gt;
  &lt;/a&gt;
  Why Fiverr is the king of freelancing platform?
&lt;/h3&gt;

&lt;p&gt;Fiverr is a platform that connects freelancers with business owners looking for services in various digital projects, including website design, content writing, and voice-overs. &lt;/p&gt;

&lt;p&gt;This freelance website provides a streamlined method for both freelancers and business owners to interact with one another. Note that on the website, freelancers are called sellers, their services – gigs, and business owners – buyers. &lt;/p&gt;

&lt;p&gt;Instead of sending out bids, sellers can sign up for free, list their gigs, and set their prices. Meanwhile, buyers can simply browse through different categories to purchase. &lt;/p&gt;

&lt;p&gt;Whenever a buyer purchases a gig, the system automatically charges their account and puts the money on hold. The system will then take a commission fee and send freelancers 80% of the offered price.&lt;/p&gt;

&lt;p&gt;Depending on each freelancer’s seller level, it can take up to 14 days to withdraw their earnings. There are multiple options to withdraw the payments, such as debit card, PayPal, and wire transfer. &lt;/p&gt;

</description>
      <category>freelancing</category>
      <category>webdev</category>
      <category>programming</category>
      <category>fiverr</category>
    </item>
    <item>
      <title>Code Smell 109 - Automatic Properties</title>
      <author>Maxi Contieri</author>
      <pubDate>Tue, 07 Dec 2021 03:01:02 +0000</pubDate>
      <link>https://dev.to/mcsee/code-smell-109-automatic-properties-f40</link>
      <guid>https://dev.to/mcsee/code-smell-109-automatic-properties-f40</guid>
      <description>&lt;p&gt;&lt;em&gt;What happens if you combine 4 code smells?&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TL;DR: Avoid Getters, Avoid Setters, Avoid Metaprogramming. Think about Behavior.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#problems"&gt;
  &lt;/a&gt;
  Problems
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Information Hiding Violation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/mcsee/the-evil-powers-of-mutants-1noo"&gt;Mutability&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/mcsee/fail-fast-48dm"&gt;Fail Fast Principle&lt;/a&gt; violation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Duplicate code when setting properties&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#solutions"&gt;
  &lt;/a&gt;
  Solutions
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/mcsee/refactoring-001-remove-setters-26cg"&gt;Remove automatic setters and getters&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#context"&gt;
  &lt;/a&gt;
  Context
&lt;/h1&gt;

&lt;p&gt;Setters and getters are a bad industry practice.&lt;/p&gt;

&lt;p&gt;Many IDEs favor this code smell. &lt;/p&gt;

&lt;p&gt;Some languages provide explicit support to build anemic models and DTOs.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sample-code"&gt;
  &lt;/a&gt;
  Sample Code
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#wrong"&gt;
  &lt;/a&gt;
  Wrong
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#right"&gt;
  &lt;/a&gt;
  Right
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;  

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;personName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;personName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//imutable&lt;/span&gt;
    &lt;span class="c1"&gt;//no getters, no setters&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#detection"&gt;
  &lt;/a&gt;
  Detection
&lt;/h1&gt;

&lt;p&gt;[X] Automatic &lt;/p&gt;

&lt;p&gt;This is a language feature.&lt;/p&gt;

&lt;p&gt;We should avoid immature languages or forbid their worst practices.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#tags"&gt;
  &lt;/a&gt;
  Tags
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Encapsulation&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;We need to think carefully before exposing our properties.&lt;/p&gt;

&lt;p&gt;The first step is to stop thinking about properties and focus solely on behavior.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#relations"&gt;
  &lt;/a&gt;
  Relations
&lt;/h1&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/code-smell-28-setters-2hih" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Code Smell 28 - Setters&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Nov 19 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;




&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/code-smell-68-getters-o12" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Code Smell 68 - Getters&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Apr 29 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/code-smell-70-anemic-model-generators-1jpl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Code Smell 70 - Anemic Model Generators&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ May 18 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/code-smell-40-dtos-4426" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Code Smell 40 - DTOs&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Dec 2 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/code-smell-01-anemic-models-4dg2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Code Smell 01 - Anemic Models&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Oct 20 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#computerscience&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#more-info"&gt;
  &lt;/a&gt;
  More Info
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.w3schools.com/cs/cs_properties.php"&gt;W3 schools&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/laziness-i-meta-programming-32a9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Laziness I: Meta-programming&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Jan 30 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#metaprogramming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;

&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/laziness-ii-code-wizards-56p0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Laziness II: Code Wizards&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Feb 3 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;

&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/refactoring-001-remove-setters-26cg" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Refactoring 001 - Remove Setters&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Nov 17 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#refactoring&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cleancode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;

&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/the-evil-powers-of-mutants-1noo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The evil powers of mutants&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Dec 19 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mutation&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;

&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/fail-fast-48dm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Fail Fast&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Dec 6 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h1&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@konyxyzx"&gt;Kony&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/shoot"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Nothing is harder than working under a tight deadline and still taking the time to clean up as you go.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Kent Beck&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/software-engineering-great-quotes-26ci" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Software Engineering Great Quotes&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Dec 28 '20 ・ 13 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#quotes&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#software&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;This article is part of the CodeSmell Series.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/how-to-find-the-stinky-parts-of-your-code-1dbc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Find the Stinky parts of your Code&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ May 21 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codequality&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>oop</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Music Visualiser with Three.JS</title>
      <author>Temp-insta</author>
      <pubDate>Tue, 07 Dec 2021 02:50:35 +0000</pubDate>
      <link>https://dev.to/harryholland/music-visualiser-with-threejs-3j22</link>
      <guid>https://dev.to/harryholland/music-visualiser-with-threejs-3j22</guid>
      <description>&lt;p&gt;In an attempt to learn THREE.js — the 3D rendering WebGL framework and WebAudio API, I made something that visualises the music in a very simple way. This article documents the whole process.&lt;br&gt;
Final thing first:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/n3rkF0el0AQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;(Just use a .mp3 / .mp4 / .wav file to see it work. If you are out, you can use this)&lt;br&gt;
A Primer on WebAudio API&lt;br&gt;
The HTML5’s  tag when combined with the WebAudio API, becomes quite powerful. It’s a dynamic tool that lets you process and adds audio effects dynamically to any kind of audio.&lt;/p&gt;

&lt;p&gt;The Web Audio API involves handling audio operations inside an audio context and has been designed to allow modular routing. Basic audio operations are performed with audio nodes, which are linked together to form an audio routing graph. Several sources — with different types of channel layouts — are supported even within a single context. This modular design provides the flexibility to create complex audio functions with dynamic effects.&lt;/p&gt;

&lt;p&gt;The audio pipeline starts by creating an audio context. It should have at least a single audio source — which can be thought of as an entry point for external files, mic input, oscillators, etc. Once we have a source in place, the signal is processed and moved ahead in the pipeline using audio nodes. After processing, the signal(s) are routed to the audio destination, which can only be a single one in the whole context.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--72l_IWBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l58qub21ma7j23xtczpc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--72l_IWBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l58qub21ma7j23xtczpc.png" alt="Image description" width="422" height="310"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Modular Routing&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In an attempt to learn THREE.js — the 3D rendering WebGL framework and WebAudio API, I made something that visualises the music in a very simple way. This article documents the whole process.&lt;br&gt;
Final thing first:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(Just use a .mp3 / .mp4 / .wav file to see it work. If you are out, you can use this)&lt;/p&gt;

&lt;p&gt;A Primer on WebAudio API&lt;br&gt;
The HTML5’s  tag when combined with the WebAudio API, becomes quite powerful. It’s a dynamic tool that lets you process and adds audio effects dynamically to any kind of audio.&lt;/p&gt;

&lt;p&gt;The Web Audio API involves handling audio operations inside an audio context and has been designed to allow modular routing. Basic audio operations are performed with audio nodes, which are linked together to form an audio routing graph. Several sources — with different types of channel layouts — are supported even within a single context. This modular design provides the flexibility to create complex audio functions with dynamic effects.&lt;/p&gt;

&lt;p&gt;The audio pipeline starts by creating an audio context. It should have at least a single audio source — which can be thought of as an entry point for external files, mic input, oscillators, etc. Once we have a source in place, the signal is processed and moved ahead in the pipeline using audio nodes. After processing, the signal(s) are routed to the audio destination, which can only be a single one in the whole context.&lt;/p&gt;

&lt;p&gt;Modular Routing&lt;/p&gt;

&lt;p&gt;The simplest illustration has a single source and a destination, without any effects or processing, inside the context. Why would anyone use this? Maybe they just want to play the sound without any changes.&lt;/p&gt;

&lt;p&gt;On the left is an example of a much more complex setup, which can also be made using this API.&lt;/p&gt;

&lt;p&gt;Let’s look at the relevant code from the visualiser:&lt;/p&gt;

&lt;p&gt;With respect to the WebAudio API, our only purpose of using it in this project is to extract the attributes of the audio signal and use those to update the visuals. If you look at the code above, the &lt;code&gt;analyser node&lt;/code&gt; helps us to analyse these musical attributes in real time. Since it does not interferes with the signal and does not changes it in any way, it’s the perfect interface for our use.&lt;/p&gt;

&lt;p&gt;This interface (Analyser Node Interface) represents a node which is able to provide real-time frequency and time-domain analysis information. The audio stream will be passed un-processed from input to output.&lt;/p&gt;

&lt;p&gt;The core idea of the visualiser was about modulating a sphere’s size based on the beat signature, and deform its surface based on the vocal. To make it interesting I used some procedural noise that adds some physical texture to the ball, using audio data as an input.&lt;/p&gt;

&lt;p&gt;The default value of FFT Size is 2048, but we chose a lower resolution of 512 as it’s far easier to compute — considering the very primitive beat detection method that I utilised do not need very high resolution and in addition there will be additional computations for the real time 3D updates, so we can safely go ahead with this value for starters.&lt;/p&gt;

&lt;p&gt;The simplest illustration has a single source and a destination, without any effects or processing, inside the context. Why would anyone use this? Maybe they just want to play the sound without any changes.&lt;/p&gt;

&lt;p&gt;Refer the complete article here:- &lt;a href="https://www.epicprogrammer.com/2021/11/music-visualiser-with-threejs-web-audio.html"&gt;https://www.epicprogrammer.com/2021/11/music-visualiser-with-threejs-web-audio.html&lt;/a&gt;&lt;br&gt;
Content Inspired by Epic Programmer&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Cool Python Project 5: Car Shopping</title>
      <author>Abhi Develops - SunTech</author>
      <pubDate>Tue, 07 Dec 2021 02:18:35 +0000</pubDate>
      <link>https://dev.to/abhidevelopssuntech/cool-python-project-5-car-shopping-50f1</link>
      <guid>https://dev.to/abhidevelopssuntech/cool-python-project-5-car-shopping-50f1</guid>
      <description>&lt;p&gt;Hi Everyone! Welcome to Cool Python Projects!&lt;br&gt;
In this post I will be showing you how to make a Birthday Estimator in Python. Please remember to follow me to stay updated on any new projects.&lt;/p&gt;

&lt;p&gt;Python Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'@*@*@*@*@*@*@*@*@*@*@*@*@*@*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'CAR TIME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Welcome Shopper - Lets take you on a car shopping journey!!!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Zoooooooooooooooooooooommmmmmmmmmm!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'@*@*@*@*@*@*@*@*@*@*@*@*@*@*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;user_car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Do you want a) sports car, b) a luxury car,or a c) normal car d) Nothing? Enter a,b,c,or d - '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#just giving value to variables to start with
&lt;/span&gt;
&lt;span class="n"&gt;user_like&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'az'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_car&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'d'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Bye Bye!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;#code for sports car
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_car&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Welcome Sports Car shopper'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;user_money&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'How much money do you want to spend (in million dollars?)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;user_money_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;user_model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Choose from these cars - a) Bugatti Chiron; b) Lamborghini Huracan c) Bugatti Divo,Choose a,b or c - '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_model&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

      &lt;span class="n"&gt;number_of_cars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;

      &lt;span class="n"&gt;car_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Bugatti Chiron'&lt;/span&gt;

    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;user_model&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

      &lt;span class="n"&gt;number_of_cars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;

      &lt;span class="n"&gt;car_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Lamborghini Huracan'&lt;/span&gt;

    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;user_model&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'c'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;

        &lt;span class="n"&gt;number_of_cars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;

        &lt;span class="n"&gt;car_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Bugatti Divo'&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'***** You can buy {0} {1} '&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number_of_cars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;car_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#Chiron = 3M, Huracan = 0.3M, Divo = 6M
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;#code for luxury car
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_car&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Welcome Luxury Car shopper'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;user_money2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'How much money do you want to spend(in millions?) '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;user_money2_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;user_model2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Choose from these cars - a) Rolls Royce; b) Audi c) BMW, choose a,b,or c - '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt;  &lt;span class="n"&gt;user_model2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s"&gt;'Rolls Royce'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

       &lt;span class="n"&gt;number_of_cars2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money2_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

       &lt;span class="n"&gt;car_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Rolls Royce'&lt;/span&gt;

   &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;user_model2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;'b'&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s"&gt;'Audi'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

        &lt;span class="n"&gt;number_of_cars2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money2_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;

        &lt;span class="n"&gt;car_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Audi'&lt;/span&gt;

   &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;user_model2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;'c'&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s"&gt;'BMW'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

        &lt;span class="n"&gt;number_of_cars2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money2_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;

        &lt;span class="n"&gt;car_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'BMW'&lt;/span&gt;

   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'***** You can buy {0} {1} cars'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number_of_cars2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;car_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#Royce = 1M, Audi = 0.1M , BMW = 0.2M
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;#code for normal car
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_car&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Welcome Normal Car shopper'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;user_money3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'How much money do you want to spend(in thousand dollars)?'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;user_money3_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;user_model3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Choose from these cars - a) Toyota Corolla; b) Nissan Altima c) Honda Accord, choose a,b,or c - '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_model3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;

       &lt;span class="n"&gt;number_of_cars3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money3_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;19.6&lt;/span&gt;

       &lt;span class="n"&gt;car_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Toyota Corolla'&lt;/span&gt;

   &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;user_model3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;

       &lt;span class="n"&gt;number_of_cars3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money3_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;21.1&lt;/span&gt;

       &lt;span class="n"&gt;car_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Nissan Altima'&lt;/span&gt;

   &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;user_model3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'c'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;

       &lt;span class="n"&gt;number_of_cars3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_money3_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;

       &lt;span class="n"&gt;car_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Honda Accord'&lt;/span&gt;

   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'***** You can buy {0} {1} cars'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number_of_cars3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;car_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#Toyota = 19.6K, Nissan = 21.1K, Honda = 20K
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'***** Hope you enjoyed shopping with us *****'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_car&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;'d'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

   &lt;span class="n"&gt;user_like&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'How did you like the experience of shopping a car?   a)  GOOD OR b) BAD? '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;  &lt;span class="n"&gt;user_like&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Thanks! We are sooooooooo happy to see you happy!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'I will someday make you feel that you like this Car Shopper!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you enjoyed this Python project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sites.google.com/view/devpythonprojects/home"&gt;All the projects code in the series&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>carshoppingapp</category>
      <category>coding</category>
      <category>abhidevelopssuntech</category>
    </item>
    <item>
      <title>Help in app dev</title>
      <author>brains88</author>
      <pubDate>Tue, 07 Dec 2021 02:03:31 +0000</pubDate>
      <link>https://dev.to/brains/help-in-app-dev-2pnf</link>
      <guid>https://dev.to/brains/help-in-app-dev-2pnf</guid>
      <description>&lt;p&gt;Please which language it best to start with as a newbie in app development. &lt;/p&gt;

</description>
      <category>programming</category>
    </item>
    <item>
      <title>Marvel-ize your repo with Github actions</title>
      <author>Lucia Cerchie</author>
      <pubDate>Tue, 07 Dec 2021 01:37:48 +0000</pubDate>
      <link>https://dev.to/cerchie/marvel-ize-your-repo-with-github-actions-2923</link>
      <guid>https://dev.to/cerchie/marvel-ize-your-repo-with-github-actions-2923</guid>
      <description>&lt;p&gt;For the DEV Github Actions Hackathon 2021 I wrote a workflow to Marvel-ize your repo! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;Here's the workflow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
name: Marvel-ize
on: [pull_request]
jobs:
  giphy-generator:
    name: GIPHY Generator
    runs-on: ubuntu-latest
    steps:
      - name: GIPHY Generator
        id: giphy_generator
        uses: iamhughes/giphy-generator@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          GIPHY_TOKEN: ${{ secrets.GIPHY_TOKEN }} # This token should be created on giphy.com: https://developers.giphy.com/dashboard/?create=true
        with:
          rating: 'g'
          lang: 'en'
  update-readme:
    name: Update Quote README
    runs-on: ubuntu-latest
    steps:
      - uses: siddharth2016/quote-readme@main
        with:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's break it down. The first action is the &lt;a href="https://github.com/marketplace/actions/giphy-generator"&gt;GIPHY Generator&lt;/a&gt; and it generate a giphy when you write &lt;code&gt;/giphy keyword_here&lt;/code&gt; in a PR. So you can trigger gifs of Marvel characters!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9vdoE9uh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qm0vu934rxf6k1fyge70.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9vdoE9uh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qm0vu934rxf6k1fyge70.png" alt="Spidermen pointing at each other" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up, we have &lt;a href="https://github.com/siddharth2016/quote-readme"&gt;Update Quote README&lt;/a&gt;, which updates your README with a Marvel quote each time an event happens. The original example uses a cron job, but I changed the logic up a bit to use a PR. &lt;/p&gt;

&lt;p&gt;I had fun doing this hackathon since it's my first real experience with Github actions. Here are a few things I've learned and a few things I've yet to learn.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Wacky Wildcards&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;

&lt;p&gt;Pssst -- my repo that holds the workflow is here &lt;a href="https://github.com/Cerchie/github-actions-hackathon-2021"&gt;https://github.com/Cerchie/github-actions-hackathon-2021&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#what-i-learned"&gt;
  &lt;/a&gt;
  What I learned:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you're editing workflow and runs, delete your old runs inside the Github user interface, as well as update your current branch! Otherwise the old workflows will run every time you start the trigger action. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;yaml is no joke&lt;br&gt;
The runs won't work if it isn't formatted properly, so watch out! &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Careful with dashes. At one point I had a &lt;code&gt;-&lt;/code&gt; in front of my id under an if statement, and that clogged the whole thing up since the if statement is supposed to modify that step.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Github secrets are by repo and by environment. The secrets that you use in actions &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"&gt;are for the repo&lt;/a&gt;! Don't mix 'em up or your action might not run.   &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#what-i-want-to-learn"&gt;
  &lt;/a&gt;
  What I want to learn:
&lt;/h4&gt;

&lt;p&gt;There are two ways that I found out to integrate workflows, but I couldn't get them to work in the time I had left. So I'd like to work on:&lt;/p&gt;

&lt;p&gt;1.&lt;br&gt;
&lt;code&gt;jobs.if&lt;/code&gt; - &lt;a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idif"&gt;this syntax&lt;/a&gt; runs the next step if a condition is satisfied. &lt;/p&gt;

&lt;p&gt;2.&lt;br&gt;
Integrating workflows with &lt;code&gt;job.needs&lt;/code&gt; - &lt;a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idneeds"&gt;this syntax&lt;/a&gt; makes two jobs interdependent on each other. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;All in all, I had a good time, learned a few things, and learned what I want to learn in the future! And I couldn't finish this post without thanking my friend &lt;a class="mentioned-user" href="https://dev.to/bogdaaamn"&gt;@bogdaaamn&lt;/a&gt;
 for all of his help. Check out his &lt;a href="https://github.com/marketplace/actions/code-of-conduct-notifier"&gt;code of conduct action&lt;/a&gt;! &lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>productivity</category>
      <category>github</category>
    </item>
    <item>
      <title>How to automate unit tests with github actions and coveralls for an npm package</title>
      <author>Jin Jose Manuel</author>
      <pubDate>Tue, 07 Dec 2021 01:04:25 +0000</pubDate>
      <link>https://dev.to/jinssj3/how-to-automate-unit-tests-with-github-actions-and-coveralls-for-an-npm-package-3bjp</link>
      <guid>https://dev.to/jinssj3/how-to-automate-unit-tests-with-github-actions-and-coveralls-for-an-npm-package-3bjp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#first-of-all-let%C2%B4s-see-what-are-unit-tests"&gt;
  &lt;/a&gt;
  First of all, let´s see what are unit tests?.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Start with this question: How do you ensure the quality of your project?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The goal of unit testing is to isolate each part of the program and show that the individual parts are correct. A unit test provides a strict, written contract that the piece of code must satisfy. As a result, it affords several benefits.&lt;/p&gt;

&lt;p&gt;Unit testing finds problems early in the development cycle. This includes both bugs in the programmer's implementation and flaws or missing parts of the specification for the unit. The process of writing a thorough set of tests forces the author to think through inputs, outputs, and error conditions, and thus more crisply define the unit's desired behavior. The cost of finding a bug before coding begins or when the code is first written is considerably lower than the cost of detecting, identifying, and correcting the bug later. Bugs in released code may also cause costly problems for the end-users of the software. Code can be impossible or difficult to unit test if poorly written, thus unit testing can force developers to structure functions and objects in better ways. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;Since there is no need to reinvent the wheel, I will take advantage of an existing github action in the &lt;code&gt;Continuous integration workflows&lt;/code&gt; category: &lt;strong&gt;&lt;code&gt;Node.js&lt;/code&gt;&lt;/strong&gt;. With this action I will set up this action in one of my public repositories. I will set up Node.js action for automating my unit test and also integrate with &lt;a href="https://coveralls.io"&gt;coveralls.io&lt;/a&gt; for getting a badge of how much my tests covers relevant lines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xB7uLxAE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwhx0azcpvfuvpjciqmj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xB7uLxAE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwhx0azcpvfuvpjciqmj.png" alt="pick action" width="390" height="227"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do I need?&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-javascript-project"&gt;
  &lt;/a&gt;
  A javascript project
&lt;/h4&gt;

&lt;p&gt;Well, first we need to create a public repository for a javascript project on Github. You can use &lt;a href="https://github.com/JinSSJ3/dynamicss"&gt;mine&lt;/a&gt; as a template. &lt;a href="https://www.npmjs.com/package/@dynamicss/dynamicss"&gt;Dynamicss&lt;/a&gt; is a project is an npm package that is ised to manage dynamically css stylesheets using javascript. I will use this project in this example.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-coveralls-account"&gt;
  &lt;/a&gt;
  A coveralls account:
&lt;/h4&gt;

&lt;p&gt;This is pretty simple. Just go to &lt;a href="https://coveralls.io"&gt;https://coveralls.io&lt;/a&gt; and create an account using your Github account. This is important, since you will need to grant &lt;code&gt;coveralls.io&lt;/code&gt; access to your repo. Finally, enable the permission that allows coveralls.io to acces to your repo like I did. Once the account is created using github, go to the left panel and click on "Add repos".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YoyDBgR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmn390bb5h950mz7y6js.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YoyDBgR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmn390bb5h950mz7y6js.png" alt="Add repo" width="211" height="154"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the switch to enable the access to the desired repo. In my case, I filter the repos to get &lt;code&gt;dynamicss&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RaBGGByZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ubnjkmunzqz5bbggzfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RaBGGByZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ubnjkmunzqz5bbggzfl.png" alt="Enable repo" width="880" height="303"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the repo token because we will need it for the set up.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fYmiYTlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv1bty0a3fkfrmu7jc9z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fYmiYTlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv1bty0a3fkfrmu7jc9z.png" alt="Copy token" width="880" height="313"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#create-unit-tests"&gt;
  &lt;/a&gt;
  Create unit tests
&lt;/h4&gt;

&lt;p&gt;You can take my simple unit tests as a simpe example. Of course, there are more complex unit test when working with react or other libraries.&lt;br&gt;
&lt;a href="https://github.com/JinSSJ3/dynamicss/tree/master/tests"&gt;https://github.com/JinSSJ3/dynamicss/tree/master/tests&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#create-a-coverallsyml-file"&gt;
  &lt;/a&gt;
  Create a .coveralls.yml file
&lt;/h4&gt;

&lt;p&gt;Remember we copied a repo token? Well, I our repository we need to create a yml file that contains just one line:&lt;br&gt;
&lt;a href="https://github.com/JinSSJ3/dynamicss/blob/master/.coveralls.yml"&gt;https://github.com/JinSSJ3/dynamicss/blob/master/.coveralls.yml&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#set-up-the-github-action"&gt;
  &lt;/a&gt;
  Set up the github action
&lt;/h4&gt;

&lt;p&gt;Now, in your github repo, go to &lt;code&gt;"actions"&lt;/code&gt; tab.&lt;br&gt;
Search for Node.js action and click on "Set up this worklow". &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4TVhWge9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9kw2eufha3wv3mz8dx2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4TVhWge9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9kw2eufha3wv3mz8dx2.png" alt="Nodejs action" width="390" height="227"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Then we need to edit the code to get something like this:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_QwQx2_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/90ne778xxyy7vd57r4fz.png" alt="yml file edition" width="880" height="643"&gt;
We just need to set the node version.In my case I'm using node in version &lt;code&gt;16&lt;/code&gt;. Finally, we need to set the commands in the last lines, we only need:&lt;/li&gt;
&lt;li&gt;npm ci (for installing dependencies)&lt;/li&gt;
&lt;li&gt;npm run test:coveralls (for testing and sending results to coveralls.io). This command was set previously in &lt;code&gt;package.json&lt;/code&gt; file.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally, make a commit to save this configuration:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--01Bos0GY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwctpr180pght3bqqtyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--01Bos0GY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwctpr180pght3bqqtyk.png" alt="Commit .yml" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will save the .yml file in this location:&lt;br&gt;
&lt;a href="https://github.com/JinSSJ3/dynamicss/blob/master/.github/workflows/node.js.yml"&gt;https://github.com/JinSSJ3/dynamicss/blob/master/.github/workflows/node.js.yml&lt;/a&gt;&lt;br&gt;
Commiting will also trigger the job to be executed.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h4&gt;

&lt;p&gt;Let´s check the result of the action. Let´s go to the actiontab again. In my process, I can see that my code passed all tests and sent result to coveralls. I got a 93% of coverage in relevant lines of code. Also, we can see that job finished successfully.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ozY8vPE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vg7ycyr8gsfz5mht82q6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ozY8vPE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vg7ycyr8gsfz5mht82q6.png" alt="job result part 1" width="880" height="435"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vj5HsDKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6f2jl06cqj62q0lgi8jf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vj5HsDKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6f2jl06cqj62q0lgi8jf.png" alt="job result part 2" width="880" height="425"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, if you go to you coveralls account in your repo you will se something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C3xoc9nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1w8z845xda3mq3c3hu3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C3xoc9nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1w8z845xda3mq3c3hu3.png" alt="Coveralls result" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#final-step-get-your-badge"&gt;
  &lt;/a&gt;
  Final step: get your badge
&lt;/h4&gt;

&lt;p&gt;And you are done! At this point we created a job for testing our code usin github actions. Now we can get our badge an embeb it on our &lt;a href="https://github.com/JinSSJ3/dynamicss#readme"&gt;README.md&lt;/a&gt; file.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yo6Jgv4i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc5k1zd1ne3jo6qaw2ev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yo6Jgv4i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc5k1zd1ne3jo6qaw2ev.png" alt="Badge" width="275" height="143"&gt;&lt;/a&gt;&lt;br&gt;
Click on &lt;code&gt;Embed&lt;/code&gt; button and copy the markdown code:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H_jfcPSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujcirn64h9jvs2sw36he.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H_jfcPSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujcirn64h9jvs2sw36he.png" alt="Embed badge" width="825" height="461"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally we can add the badge in our readme file, commit, push and we'll get something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QKRGMRRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gezzlmymamvnz6ybhm6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QKRGMRRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gezzlmymamvnz6ybhm6g.png" alt="result" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;DIY Deployments&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;

&lt;p&gt;The coveralls result can be accessed &lt;a href="https://coveralls.io/github/JinSSJ3/dynamicss"&gt;here&lt;/a&gt;.&lt;br&gt;
The coveralls .yml file can be accessed &lt;a href="https://github.com/JinSSJ3/dynamicss/blob/master/.coveralls.yml"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The github action .yml file canbe accessed &lt;a href="https://github.com/JinSSJ3/dynamicss/blob/master/.github/workflows/node.js.yml"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The repo can be accessed &lt;a href="https://github.com/JinSSJ3/dynamicss"&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/JinSSJ3"&gt;
        JinSSJ3
      &lt;/a&gt; / &lt;a href="https://github.com/JinSSJ3/dynamicss"&gt;
        dynamicss
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Manage CSS stylesheets dynamically
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
 &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/43678736/127270540-76b8863f-f664-4274-ab5c-41135f23d7dd.png"&gt;&lt;img height="128" src="https://res.cloudinary.com/practicaldev/image/fetch/s--FSzb_AU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/43678736/127270540-76b8863f-f664-4274-ab5c-41135f23d7dd.png" alt="Unlimited React components logologo"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/JinSSJ3/react-drop-zone-responsive/blob/HEAD/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/83d3746e5881c1867665223424263d8e604df233d0a11aae0813e0414d433943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="license"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@dynamicss/dynamicss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ae0c4e0fdf36291bba189037e7fbda591d066c58daba3fdbae1b997791681ca/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4064796e616d696373732f64796e616d696373732e7376673f6c6f676f3d6e706d266c6f676f436f6c6f723d666666266c6162656c3d4e504d2b7061636b61676526636f6c6f723d6c696d65677265656e" alt="npm latest package"&gt;&lt;/a&gt;
&lt;a href="https://packagephobia.com/result?p=@dynamicss/dynamicss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21287534d1b6b519ce5ef9319b6e0c8b4379b04b096102a933997fd4365b6ca8/68747470733a2f2f7061636b61676570686f6269612e636f6d2f62616467653f703d4064796e616d696373732f64796e616d69637373" alt="install size"&gt;&lt;/a&gt;
&lt;a href="https://www.travis-ci.com/JinSSJ3/dynamicss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f993ff26beda79039ab6b0bc73049fd6edc142704091216823695ce508318f0/68747470733a2f2f7777772e7472617669732d63692e636f6d2f4a696e53534a332f64796e616d696373732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/JinSSJ3/dynamicss?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab69eb84038632d08f8a3738cdf645d34a1018eb5c388a2fcfc06eb156e068e6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a696e53534a332f64796e616d696373732f62616467652e7376673f6272616e63683d6d617374657226743d4e5966414157" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/JinSSJ3/dynamicss/alerts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c768280b3d42953342520e0834dcc22c039862a37b46bb87d0062026341462ac/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f4a696e53534a332f64796e616d696373732e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total alerts"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/unlimited-react-components/react-drop-zone/context:javascript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8d68da1b6ea07569f6b97a23f0e89a9ffc84f908162ee2d117c5cd4eda6a5a0/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6a6176617363726970742f672f756e6c696d697465642d72656163742d636f6d706f6e656e74732f72656163742d64726f702d7a6f6e652e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language grade: JavaScript"&gt;&lt;/a&gt;
&lt;a href="https://snyk.io/test/github/jinssj3/dynamicss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bcd64b2ad51dec9f5e495212ac56afd12a5526af4e6248442a104541636bdbf6/68747470733a2f2f736e796b2e696f2f746573742f6769746875622f6a696e53534a332f64796e616d696373732f62616467652e737667" alt="Known Vulnerabilities"&gt;&lt;/a&gt;
&lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ff11ed110cfa69f703ef0dcca3cee6141c0a8ef465e8237221ae245de3deb3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="PRs Welcome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Description&lt;/h2&gt;

&lt;p&gt;With DinamiCSS you can manage CSS style sheets dynamically&lt;/p&gt;

&lt;h2&gt;
Installation&lt;/h2&gt;

&lt;p&gt;DinamiCSS is available as an &lt;a href="https://www.npmjs.com/package/dinamicss" rel="nofollow"&gt;npm package&lt;/a&gt;.&lt;/p&gt;

&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;// with npm
npm i @dynamicss/dynamicss&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Main Features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Insert style sheets from javascript files.&lt;/li&gt;
&lt;li&gt;Edit stylesheets at run-time.&lt;/li&gt;
&lt;li&gt;Remove style sheet.&lt;/li&gt;
&lt;li&gt;Check whether a style sheet has already been inserted into the DOM&lt;/li&gt;
&lt;li&gt;Create a DynamicSheet object rpresentation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage (basic example)&lt;/h2&gt;
&lt;p&gt;Here is a quick example to get you started, &lt;strong&gt;it's all you need&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Interactive and live demo:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codesandbox.io/s/dynamicss-react-h5zie" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90808661433696bc57dce8d4ad732307b5cec6270e6b846f114dcd7ee7f9458a/68747470733a2f2f636f646573616e64626f782e696f2f7374617469632f696d672f706c61792d636f646573616e64626f782e737667" alt="Edit Button"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
DynamiCSS Types:&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Attributes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DynamicSheet&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Object that represents a css style sheet&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;id&lt;/code&gt;: string;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;content?&lt;/code&gt;: string;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;sheetRules?&lt;/code&gt;: DynamicSheetRule[];&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DynamicSheetRule&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Object that represents a set of css rules for a classname&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;className&lt;/code&gt;: string;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;rules&lt;/code&gt;: DynamicStyle | DynamicPseudoNested | DynamicHyphens;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
DynamiCSS namespace Functions:&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;function insertStyleSheet(dynamicSheet: DynamicSheet): string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Inserts the stylesheet into the DOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;function editStyleSheet(id: string, sheetRules: DynamicSheetRule[]): string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Edits an existing stylesheet in the DOM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/JinSSJ3/dynamicss"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
Unit test info got from &lt;a href="https://en.wikipedia.org/wiki/Unit_testing#Advantages"&gt;wikipedia&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>actionshackathon21</category>
      <category>testing</category>
      <category>react</category>
      <category>coveralls</category>
    </item>
    <item>
      <title>MongoDB $weeklyUpdate (December 6, 2021): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Tue, 07 Dec 2021 00:59:04 +0000</pubDate>
      <link>https://dev.to/mongodb/mongodb-weeklyupdate-december-6-2021-latest-mongodb-tutorials-events-podcasts-streams-5d1a</link>
      <guid>https://dev.to/mongodb/mongodb-weeklyupdate-december-6-2021-latest-mongodb-tutorials-events-podcasts-streams-5d1a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  👋 Hi everyone!
&lt;/h2&gt;

&lt;p&gt;Welcome to MongoDB $weeklyUpdate! &lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZ6DNTJI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d32ymgnn683xjw12uwzo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZ6DNTJI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d32ymgnn683xjw12uwzo.jpg" alt="MongoDB World Call for speakers banner" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📢 Call for Speakers for MongoDB World 2022 Now Open!&lt;br&gt;
MongoDB World is where the world’s fastest-growing data community comes to connect, explore, and learn. We’re looking for speakers who can inspire attendees by introducing them to new technologies, ideas, and solutions.&lt;/p&gt;

&lt;p&gt;Whether you want to do a 30 minute conference session, a 75 minutes deep dive tutorial, or a 10 minute lightning talk - we want to hear your talk ideas. If you have a great idea but don’t feel ready for the stage, we've got you covered! We offer speaker workshops, one-on-one coaching sessions, and more.&lt;br&gt;
Call for speakers closes January 18, 2022.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/world-2022-call-for-speakers"&gt;Submit Your Talk&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  🎓 Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#create-a-dataenabled-api-in-mongodb-realm-in-10-minutes-or-less"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/create-data-api-10-min-realm/"&gt;Create a Data-Enabled API in MongoDB Realm in 10 Minutes or Less&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/mlynn"&gt;Michael Lynn&lt;/a&gt; &lt;br&gt;
In this article, we’ll explain the steps to follow to quickly create an API that exposes data from a sample database in MongoDB Atlas. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#building-servicebased-atlas-cluster-management"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/article/building-service-based-atlas-management/"&gt;Building Service-Based Atlas Cluster Management&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/pavel-duchovny/"&gt;Pavel Duchovny&lt;/a&gt; &lt;br&gt;
Learn how to build Service-Based Atlas Cluster Management webhooks/functionality with Atlas Admin API and MongoDB Realm.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#designing-developing-and-analyzing-with-the-new-mongodb-shell"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/article/designing-developing-analyzing-new-mongodb-shell/"&gt;Designing, Developing, and Analyzing with the New MongoDB Shell&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.nraboy.com/"&gt;Nic Raboy&lt;/a&gt; &lt;br&gt;
In this article, we’re going to look a little deeper at the things we can do with the MongoDB Shell. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#using-the-atlas-data-api-with-google-apps-script"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/quickstart/atlas_data_api_google_sheets_apps_script/"&gt;Using the Atlas Data Api with Google Apps Script&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/john-page/"&gt;John Page&lt;/a&gt; &lt;br&gt;
Learn how to call the Atlas Data API from a Google Sheets spreadsheet using Google Apps Script.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#official-mongodb-events-amp-community-events"&gt;
  &lt;/a&gt;
  📅 Official MongoDB &lt;a href="https://www.mongodb.com/events"&gt;Events&lt;/a&gt; &amp;amp; &lt;a href="https://live.mongodb.com/events/#/list"&gt;Community Events&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Attend an official MongoDB event near you! Chat with MongoDB experts, learn something new, meet other developers, and win some swag!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Dec 8 (3pm GMT | Stockholm, Sweden) - &lt;a href="https://events.mongodb.com/streammetothecloud"&gt;Stream Me to the Cloud and Back&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dec 15 (6pm GMT | Virtual) - &lt;a href="https://www.mongodb.com/webinar/getting-started-with-mongodb-atlas-search"&gt;Getting Started With MongoDB Atlas Search&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mongodb-on-twitch-amp-youtube"&gt;
  &lt;/a&gt;
  📺 MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community via &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
&lt;a href="https://www.twitch.tv/videos/1203473721"&gt;https://www.twitch.tv/videos/1203473721&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🍿 &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; so you never miss a stream!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  🎙 Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/1WWRZa7WCon3cObPfjsKtV"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Catch up on past episodes&lt;/em&gt;:&lt;br&gt;
Ep. 91 - &lt;a href="https://open.spotify.com/episode/041SG6u50icEa9KxxI4qZD?si=SXCbIYbuTBWqBMjcv_bG4Q"&gt;Loan Laux - MongoDB and E-Commerce&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 90 - &lt;a href="https://open.spotify.com/episode/4hxZB3nsIIoX5fyJscX1ZB?si=MPorS-tFQ4iMv_KsquMYbQ"&gt;John Page and Karen Hualme of MongoDB Developer Relations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 89 - &lt;a href="https://open.spotify.com/episode/7hV8hNFN0K0W2SE9dqgSTd?si=UvrT8ZddTGGCdhyGQxchLw"&gt;Richard Collins and DJ Walker Morgan of Studio3T&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; 😊)&lt;/p&gt;




&lt;p&gt;💡 These $weeklyUpdates are always posted to the &lt;a href="https://www.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; &lt;em&gt;first&lt;/em&gt;! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>programming</category>
      <category>database</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Introducing Gistblog 🎉: Blog your little ❤️ out using GitHub Gists</title>
      <author>Josh Campbell</author>
      <pubDate>Tue, 07 Dec 2021 00:43:48 +0000</pubDate>
      <link>https://dev.to/seajoshc/introducing-gistblog-blog-your-little-out-using-github-gists-gkc</link>
      <guid>https://dev.to/seajoshc/introducing-gistblog-blog-your-little-out-using-github-gists-gkc</guid>
      <description>&lt;p&gt;Hey there and thanks for stopping by! For the the #ActionsHackathon21 I created something... that definitely belongs in the Whacky Wildcard category! I'd like to introduce you to...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/seajoshc/gistblog"&gt;Gistblog&lt;/a&gt; is an opinionated GitHub repo setup that turns markdown into blog posts. Powered by the &lt;a href="https://github.com/seajoshc/gistblog-action#readme"&gt;Gistblog GitHub Action&lt;/a&gt;, your markdown is turned into wonderful &lt;a href="https://gist.github.com/"&gt;GitHub Gists&lt;/a&gt; that can be easily updated and shared. &lt;a href="https://github.com/seajoshc"&gt;Here's my Gistblog&lt;/a&gt; embedded into my &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;GitHub profile README&lt;/a&gt;. The fancy markdown &lt;a href="https://gist.github.com/seajoshc/d898750deca042b9b241ad8b79bcac96"&gt;table of blog posts&lt;/a&gt; is even generated by the Gistblog Action too! Read on for more details about how you can start Gistblogging!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;Please see the official &lt;a href="https://github.com/seajoshc/gistblog#readme"&gt;Gistblog repository&lt;/a&gt; for the latest instructions on using Gistblog! tl;dr &lt;a href="https://github.com/seajoshc/gistblog/blob/main/.github/workflows/gistblog.yaml"&gt;This is the GitHub Actions workflow&lt;/a&gt; that does all the heavy lifting, and &lt;a href="https://github.com/seajoshc/gistblog-action"&gt;this is the GitHub Action&lt;/a&gt; I created to handle creating/updating the Gists.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#getting-setup-with-gistblog"&gt;
  &lt;/a&gt;
  Getting setup with Gistblog
&lt;/h4&gt;

&lt;p&gt;As I mentioned, Gistblog follows an opinionated setup in order to function. Please read the below carefully to get started.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new repo or use an existing repo. Create two directories in the root of your repo: a &lt;code&gt;blog/&lt;/code&gt; directory and a GitHub Actions workflow directory &lt;code&gt;.github/workflows/&lt;/code&gt; if it doesn't already exist.&lt;/li&gt;
&lt;li&gt;Create a new &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;GitHub Personal Access Token&lt;/a&gt; with the &lt;code&gt;gist&lt;/code&gt; scope (name can be anything you want, like "Gistblog").&lt;/li&gt;
&lt;li&gt;Create a &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository"&gt;repository secret&lt;/a&gt; named GISTS_TOKEN and store the value of the personal access token you just created.&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;.github/workflows/gistblog.yaml&lt;/code&gt; with the following GitHub Actions workflow. Be sure to change your branch name below if it isn't &lt;code&gt;main&lt;/code&gt;:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Gistblog&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;gistblog&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dorny/paths-filter@v2&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;blog&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;list-files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shell&lt;/span&gt;
          &lt;span class="na"&gt;filters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;create_blog:&lt;/span&gt;
            &lt;span class="s"&gt;- added: 'blog/*.md'&lt;/span&gt;
            &lt;span class="s"&gt;update_blog:&lt;/span&gt;
            &lt;span class="s"&gt;- modified: 'blog/*.md'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;steps.blog.outputs.create_blog == 'true'&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;seajoshc/gistblog-action@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;gists-token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GISTS_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;operation&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;create&lt;/span&gt;
          &lt;span class="na"&gt;blog-files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;steps.blog.outputs.create_blog_files&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;steps.blog.outputs.update_blog == 'true'&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;seajoshc/gistblog-action@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;gists-token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GISTS_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;operation&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;update&lt;/span&gt;
          &lt;span class="na"&gt;blog-files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;steps.blog.outputs.update_blog_files&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the spirit of the #ActionsHackathon21, you can see I'm taking advantage of the checkout action GitHub provides and the &lt;a href="https://github.com/dorny/paths-filter"&gt;Paths Filter action by dorny&lt;/a&gt; to create the desired workflow. I'm also using the &lt;a href="https://github.com/seajoshc/gistblog-action"&gt;Gistblog Action&lt;/a&gt; I created for this hackathon which handles managing all the blog posts as Gists. I'd like to explore &lt;a href="https://docs.github.com/en/actions/creating-actions/creating-a-composite-action"&gt;Composite actions&lt;/a&gt; soon to see if I can reduce all of this to a single action making setup even easier.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#how-to-blog-with-gistblog"&gt;
  &lt;/a&gt;
  How to blog with Gistblog
&lt;/h4&gt;

&lt;p&gt;Gistblog simply looks for new, or updated, markdown (&lt;code&gt;.md&lt;/code&gt;) files in the &lt;code&gt;blog/&lt;/code&gt; directory of your repo each time you push to main. If there are new files, Gistblog will automatically create new Gists for your blog posts. And each time you update a file the Gist gets updated too. Each Gist/blog post is backed by a permanent link that you can share out. It's that easy!&lt;/p&gt;

&lt;p&gt;Ideally, you set a description for each blog post by declaring&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!--
post_description: Example Post Title: A short description goes here. 
--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;at the top of each markdown file, &lt;a href="https://github.com/seajoshc/gistblog/blob/main/blog/example.md"&gt;like in this example&lt;/a&gt;. Link previews look a bit nicer when you use this description format.&lt;/p&gt;

&lt;p&gt;Gistblog also maintains a &lt;a href="https://gist.github.com/seajoshc/d898750deca042b9b241ad8b79bcac96"&gt;Table of Contents(ToC)&lt;/a&gt; for all your blog posts. The ToC gets updated each time Gistblog runs so it's always up to date. Check your &lt;a href="https://gist.github.com"&gt;Gists&lt;/a&gt; to find your ToC. Try putting the markdown table from your ToC into your &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;GitHub Profile README&lt;/a&gt; to &lt;a href="https://github.com/seajoshc"&gt;share your blog with the innerwebz&lt;/a&gt;. This is a manual process for now but I'll be looking to solve that in the future!&lt;/p&gt;

&lt;p&gt;If you've got assets, like images, create &lt;code&gt;blog/assets/&lt;/code&gt; and keep your files there. To include them in your post, you'll need to use the URL of where they will end up once pushed into your repo as the image source. The URL is predictable based on the file name and your GitHub username: &lt;code&gt;https://raw.githubusercontent.com/&amp;lt;github_username&amp;gt;/&amp;lt;repo_name&amp;gt;/main/blog/assets/&amp;lt;filename&amp;gt;.&amp;lt;extension&amp;gt;&lt;/code&gt;. &lt;a href="https://github.com/seajoshc/gistblog/blob/main/blog/example.md"&gt;See this example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Changing the filenames on any Gists created by Gistblog will result in duplicate blog posts next time you update. It's best not to touch anything on the Gists really.&lt;/p&gt;

&lt;p&gt;Happy Gistblogging! 🎉&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Wacky Wildcards&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/seajoshc"&gt;
        seajoshc
      &lt;/a&gt; / &lt;a href="https://github.com/seajoshc/gistblog"&gt;
        gistblog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Blog your little ❤️ out using GitHub Gists.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Gistblog - Blog your little ❤️ out using GitHub Gists.&lt;/h1&gt;
&lt;p&gt;Gistblog is an opinionated GitHub repo setup that turns markdown into blog posts. Powered by the &lt;a href="https://github.com/seajoshc/gistblog-action#readme"&gt;Gistblog GitHub Action&lt;/a&gt;, your markdown is turned into wonderful &lt;a href="https://gist.github.com/"&gt;GitHub Gists&lt;/a&gt; that can be easily updated and shared. &lt;a href="https://github.com/seajoshc"&gt;Here's my Gistblog&lt;/a&gt; embedded into my GitHub profile README. The fancy markdown &lt;a href="https://gist.github.com/seajoshc/d898750deca042b9b241ad8b79bcac96"&gt;table of blog posts&lt;/a&gt; is even generated by the Gistblog Action too!&lt;/p&gt;
&lt;p&gt;Do you need a simple platform for sharing your thoughts and ideas with the internet? Have you ever wanted an easy way to turn some plaintext into a blog post? Don't care about things like SEO, monetization, or having a fancy looking website? Is "indefinitely free" your desired monthly cost of hosting your own blog where all the content is yours? Already a big GitHub fan? &lt;a href="https://github.com/seajoshc/gistblog-action#readme"&gt;Gistblog&lt;/a&gt; is the blogging engine for you!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Because Gistblog is an opinionated framework, please read&lt;/strong&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/seajoshc/gistblog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;




&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/seajoshc"&gt;
        seajoshc
      &lt;/a&gt; / &lt;a href="https://github.com/seajoshc/gistblog-action"&gt;
        gistblog-action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Blog your little ❤️ out using GitHub Gists.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Gistblog Action&lt;/h1&gt;
&lt;p&gt;The Gistblog &lt;a href="https://github.com/features/actions"&gt;GitHub Action&lt;/a&gt; is &lt;a href="https://github.com/seajoshc/gistblog"&gt;part of an opinionated setup&lt;/a&gt; that lets you use GitHub Gists as a blogging engine. I strongly urge you to &lt;a href="https://github.com/seajoshc/gistblog#readme"&gt;read this first&lt;/a&gt;. You can also &lt;a href="https://gist.github.com/seajoshc/9a3ee57dd7f380b5d6ce2a17805013c8"&gt;checkout this blogpost&lt;/a&gt; for more info about Gistblog.&lt;/p&gt;
&lt;h2&gt;
Inputs&lt;/h2&gt;
&lt;p&gt;This action expects three things in order: a &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;GitHub Personal Access Token&lt;/a&gt; with "gist" scope, either the "create" or "update" command, and a space delimited list of blog post (markdown) files to process. Create a &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"&gt;secret within the repo you're using&lt;/a&gt; named GISTS_TOKEN and store the value of the aforementioned personal access token. The secret can be securely accessed as shown in the below examples.&lt;/p&gt;
&lt;h2&gt;
gists-token&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;description: A valid GitHub Personal Access Token with "gist" scope.&lt;/li&gt;
&lt;li&gt;required: true&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
operation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;description: The operation to perform either "create" or "update".&lt;/li&gt;
&lt;li&gt;required: true&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
blog-files&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;description: A space delimited list of files to process.&lt;/li&gt;
&lt;li&gt;required: true&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Outputs&lt;/h2&gt;
&lt;p&gt;None.&lt;/p&gt;
&lt;h2&gt;
Example usage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/seajoshc/gistblog#readme"&gt;As&lt;/a&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/seajoshc/gistblog-action"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;You can see &lt;a href="https://github.com/seajoshc"&gt;my personal Gistblog here&lt;/a&gt; and a table of &lt;a href="https://gist.github.com/seajoshc/d898750deca042b9b241ad8b79bcac96"&gt;all my posts using Gistblog here&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-does-this-exist"&gt;
  &lt;/a&gt;
  Why does this exist????
&lt;/h4&gt;

&lt;p&gt;Why Gists when you can blog on &lt;a href="//dev.to"&gt;DEV&lt;/a&gt;? Yeah that's a bit awkward 😅 But it's all good, I'm entering the Whacky Wildcards category 🤣 A short backstory...&lt;/p&gt;

&lt;p&gt;I don't quite know what triggered it but one night in early November 2021 I decided that I wanted to start blogging every once in awhile again. It doesn't matter that few, if any, people will ever read the things I write. It's just a creative outlet. But regardless, as always I was paralyzed by all the choices I had for which blog platform/engine to use. I decided to just put my first post in a &lt;a href="https://gist.github.com/"&gt;GitHub Gist&lt;/a&gt; to get the ball rolling, thinking I would move it elsewhere later. But then I thought it might be kind of cool to continue using Gists for blogging since it was so easy. I started looking more into the APIs and discovered that a workflow around blogging via Gists was definitely feasible. It also just so happened that the &lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;2021 GitHub Actions Hackathon&lt;/a&gt; was going on, so as any good developer does... I decided to make my own &lt;del&gt;Rube Goldberg machine&lt;/del&gt; blog engine instead of trying to pick one! A few weeks later I am happy to introduce... &lt;a href="https://github.com/seajoshc/gistblog"&gt;Gistblog!&lt;/a&gt; &lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
    </item>
    <item>
      <title>Create a Python Layer for your AWS Lambda Function</title>
      <author>Josiah Ayres</author>
      <pubDate>Mon, 06 Dec 2021 23:51:18 +0000</pubDate>
      <link>https://dev.to/josiahayres/create-a-python-layer-for-your-aws-lambda-function-54j7</link>
      <guid>https://dev.to/josiahayres/create-a-python-layer-for-your-aws-lambda-function-54j7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;I just finished creating a few small lambda functions using Python.&lt;br&gt;
Layers are a great way to manage application dependencies, and speeding up your deployment times.&lt;/p&gt;

&lt;p&gt;My project needed the following libraries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.python-requests.org/en/latest/"&gt;&lt;code&gt;requests&lt;/code&gt;&lt;/a&gt; for making HTTP requests.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pysftp.readthedocs.io/en/release_0.2.9/"&gt;&lt;code&gt;pysftp&lt;/code&gt;&lt;/a&gt; for creating SSH connections to different servers. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need a different library, the approach should be the same, assuming it's installable using &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;pip3&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Unfortunately we didn’t have access to &lt;a href="https://aws.amazon.com/ecr/"&gt;Container Registry (ECR)&lt;/a&gt; so we couldn't &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/images-create.html"&gt;create a docker container&lt;/a&gt;, which would have allowed us to install the dependencies as part of the docker container creation.&lt;/p&gt;

&lt;p&gt;We instead had to create &amp;amp; upload a zip file containing our application code and dependencies.&lt;/p&gt;

&lt;p&gt;While we could include the application dependencies in the zip we upload, this has a few disadvantages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It slows down each upload, which is not ideal as you might end up uploading a number of times. &lt;/li&gt;
&lt;li&gt;Your application code will not be viewable in the lambda console if your zip file ends up too large.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#creating-a-aws-lambda-layer"&gt;
  &lt;/a&gt;
  Creating a AWS Lambda layer
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#application-setup"&gt;
  &lt;/a&gt;
  Application Setup
&lt;/h3&gt;

&lt;p&gt;So now we know why layers might be needed in your lambda function, let's look at how to create one.&lt;/p&gt;

&lt;p&gt;The sample project is also available on &lt;a href="https://github.com/josiahayres/aws-lambda-test-function"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Folder structure of a lambda layer:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/requirements.txt
/python/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where &lt;code&gt;requirements.txt&lt;/code&gt; is a file with the names of the packages we’re using, and &lt;code&gt;python&lt;/code&gt; is an empty folder which we will be installing dependencies into. See the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html"&gt;Lambda layer documentation&lt;/a&gt; for more information on why we need to install into the python folder.  &lt;/p&gt;

&lt;p&gt;My application folder on my computer looks something like this then:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/lambda_function.py
/lambda_layer/requirements.txt
/lambda_layer/python/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setup-ubuntu-vm"&gt;
  &lt;/a&gt;
  Setup Ubuntu VM
&lt;/h3&gt;

&lt;p&gt;AWS Lambda runs in a Linux machine, so you'll need to install the layer dependencies using an Linux OS. You can't directly follow these steps in MacOS or Windows.&lt;/p&gt;

&lt;p&gt;I won't cover how to create a Linux VM, as there are many good tutorials available with a quick search online.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-layer-zip-file"&gt;
  &lt;/a&gt;
  Create the layer ZIP file
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember, you need to run these commands in a Linux machine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Navigate into the layer folder:&lt;br&gt;
&lt;code&gt;cd lambda_layer&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Install the dependencies into the python folder:&lt;br&gt;
&lt;code&gt;pip install -r requirements.txt -t .python&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create the lambda layer zip:&lt;br&gt;
&lt;code&gt;zip -r ../app-name-depts-layer.zip *&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;We now have a ZIP file (&lt;code&gt;app-name-depts-layer.zip&lt;/code&gt;) which can be uploaded to AWS as a Layer. This zip file should have a python folder inside it, with the application dependencies installed from &lt;code&gt;pip&lt;/code&gt; inside.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-the-layer-in-aws"&gt;
  &lt;/a&gt;
  Create the layer in AWS
&lt;/h2&gt;

&lt;p&gt;Navigate to your AWS instance, and open Lambda function. Click the create layer button:&lt;br&gt;
￼&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qSqXf_KD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxboyif8rtwkmcy5n0cm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qSqXf_KD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxboyif8rtwkmcy5n0cm.png" alt="AWS Lambda create layer step 1" width="880" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fill in the details of your layer:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I recommend including the names of the packages that are included in the layer, as part of the description. This will be useful in the future, especially if you end up creating and using multiple layers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;￼&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pgEEcsMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1uhaetulsxvo64ppo0hb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgEEcsMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1uhaetulsxvo64ppo0hb.png" alt="AWS Lambda create layer step 2" width="880" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;em&gt;Create layer&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#configure-lambda-function-to-use-layer"&gt;
  &lt;/a&gt;
  Configure Lambda function to use Layer.
&lt;/h2&gt;

&lt;p&gt;In your lambda function, scroll down to the bottom of the page, to the Layers section: &lt;/p&gt;

&lt;p&gt;Click on the &lt;em&gt;Add a layer&lt;/em&gt; button&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8tmEQJAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85h5tltm0qvik3a9lbse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8tmEQJAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85h5tltm0qvik3a9lbse.png" alt="Add a layer to AWS Lambda function, step 1" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;em&gt;Custom layers&lt;/em&gt;, then select the layer you just created, picking the latest version:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0HYXWIoG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtn4hxk80ksnx6yet3wx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0HYXWIoG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtn4hxk80ksnx6yet3wx.png" alt="Adding a layer to an AWS function" width="880" height="647"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Wait for the function to update:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IWmVoE3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrgmwii4o7nmnwdbtr4y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IWmVoE3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrgmwii4o7nmnwdbtr4y.png" alt="AWS Lambda function updated after adding layer" width="880" height="486"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s it! &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#test-it-out"&gt;
  &lt;/a&gt;
  Test it out
&lt;/h2&gt;

&lt;p&gt;Now in your application code, you can simply import the packages installed in the layer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;lambda_function.py&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import requests

def lambda_handler(event, context):
    test_url = 'https://jsonplaceholder.typicode.com/todos/1'
    response = requests.get(test_url)

    return {
        'statusCode': response.status_code,
        'body': response.json()
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the console it should look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fHwzHt1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxfv0996jqqnsfzs2u2v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fHwzHt1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxfv0996jqqnsfzs2u2v.png" alt="Screenshot of AWS console - showing test Lambda function" width="880" height="606"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Testing this code should return: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DxG5F0dS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jipadodw1yh9h0e126l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DxG5F0dS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jipadodw1yh9h0e126l.png" alt="Result of test using application dependency from layer" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You now have the ability to make HTTP requests and can easily reuse the layer in different applications.&lt;/p&gt;

&lt;p&gt;Hopefully this helps get you started, you can easily extend this out as needed...&lt;/p&gt;

</description>
      <category>aws</category>
      <category>python</category>
      <category>serverless</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
