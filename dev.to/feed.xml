<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>🔥Machine Learning Complete Roadmap🔥</title>
      <author>Ashish Yadav</author>
      <pubDate>Wed, 28 Apr 2021 14:29:54 +0000</pubDate>
      <link>https://dev.to/expoashish/machine-learning-complete-roadmap-532l</link>
      <guid>https://dev.to/expoashish/machine-learning-complete-roadmap-532l</guid>
      <description>&lt;p&gt;Do you want to learn machine learning but don't know where to start? Then you are on right track, In this tutorial, we will see complete roadmap for machine learning. You can follow this roadmap to know basic to advance concept of machine learning. Let's start:-&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step-1introduction"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 1:Introduction&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-2basics-of-ml"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 2.Basics of ML&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-3supervised-learning"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 3.Supervised Learning&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-4unsupervised-learning"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 4.Unsupervised Learning&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-5reinforcement-learning"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 5.Reinforcement Learning&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-6some-advance-concept"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 6.Some Advance Concept&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-7nlp"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 7.NLP&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-8evaluation-metrics-for-ml"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 8.Evaluation Metrics for ML&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-9deep-learning"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 9.Deep Learning&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#step-10machine-learning-projects"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;Step 10.Machine Learning Projects&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#and-subscribe-to-our-youtube-channel-bestcodecreator"&gt;
  &lt;/a&gt;
  🎥💡🔥AND Subscribe to Our YouTube Channel &lt;a href="https://www.youtube.com/bestcodecreator"&gt;bestcodecreator&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#and-support-our-blogging-site-myblogs"&gt;
  &lt;/a&gt;
  🎥💡🔥AND Support Our Blogging site &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;myblogs&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Thank you for reading this blog. I wish you the best in your journey in learning and mastering in Machine Learning🔥🔥.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>computerscience</category>
      <category>python</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Building a PHP CMS from Scratch without a Framework</title>
      <author>Salil Mittal</author>
      <pubDate>Wed, 28 Apr 2021 14:27:58 +0000</pubDate>
      <link>https://dev.to/salilmittal2/building-a-php-cms-from-scratch-without-a-framework-17nl</link>
      <guid>https://dev.to/salilmittal2/building-a-php-cms-from-scratch-without-a-framework-17nl</guid>
      <description>&lt;p&gt;PHP is used by 79.2% of all the websites whose server-side programming language we know. However it can be particularly complicated to create a scaled CMS application without a framework.&lt;/p&gt;

&lt;p&gt;Although using right design practices it is possible to implement a solution.&lt;/p&gt;

&lt;p&gt;I built a complete blogging platform for users called &lt;a href="https://luminosity-dev.herokuapp.com"&gt;Luminosity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can inspect the code &lt;a href="https://github.com/cmd3BOT/Luminosity"&gt;here&lt;/a&gt; as you read along.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#design"&gt;
  &lt;/a&gt;
  Design
&lt;/h2&gt;

&lt;p&gt;The project implements &lt;em&gt;MVC [Model-View-Controller]&lt;/em&gt; design pattern. The project has been built upon a &lt;a href="https://github.com/cmd3BOT/PHP-MVC-Framework"&gt;Custom Framework&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZrtGMUVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.educba.com/academy/wp-content/uploads/2019/04/what-is-mvc-design-pattern.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZrtGMUVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.educba.com/academy/wp-content/uploads/2019/04/what-is-mvc-design-pattern.jpg" alt="MVC Structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Model–view–controller (usually known as MVC) is a software design pattern commonly used for developing user interfaces that divides the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Model component corresponds to all the data-related logic that the user works with. This can represent either the data that is being transferred between the View and Controller components or any other business logic-related data. For example, a Customer object will retrieve the customer information from the database, manipulate it and update it data back to the database or use it to render data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;View&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The View component is used for all the UI logic of the application. For example, the Customer view will include all the UI components such as text boxes, dropdowns, etc. that the final user interacts with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controller&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Controllers act as an interface between Model and View components to process all the business logic and incoming requests, manipulate data using the Model component and interact with the Views to render the final output. For example, the Customer controller will handle all the interactions and inputs from the Customer View and update the database using the Customer Model. The same controller will be used to view the Customer data.&lt;/p&gt;

&lt;p&gt;A common example is &lt;a href="https://dotnet.microsoft.com/apps/aspnet/mvc"&gt;ASP.NET MVC&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project Structure
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;app/&lt;/code&gt;&lt;br&gt;
  Contains Backend and Application Logic&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Config - Contains Config Files for project&lt;/li&gt;
&lt;li&gt;Libraries - Contains Basic Libraries extended by classes and units.

&lt;ul&gt;
&lt;li&gt;Look at /Core.php for routing based on request URI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Controllers

&lt;ul&gt;
&lt;li&gt;Ajax Controllers =&amp;gt; Internal API request logic&lt;/li&gt;
&lt;li&gt;Controller Traits =&amp;gt; Config values for controller logic&lt;/li&gt;
&lt;li&gt;View Controllers =&amp;gt; Setup View with data based on request Method&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Helpers - Helper Files for common methods used accross application&lt;/li&gt;
&lt;li&gt;SQL - Contains SQL Dump and Procedures for Models&lt;/li&gt;
&lt;li&gt;Views - Each Controller has a seperate view folder containing files for a specific view [default index]&lt;/li&gt;
&lt;li&gt;Vendor - Packages used in PHP&lt;/li&gt;
&lt;li&gt;Bootstrap.php - Load Configs, Start Session and intanstiate autoloader &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;/public&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application frontend&lt;/li&gt;
&lt;li&gt;Index.php is entry file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;root/.htaccess&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Route requests through public folder&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read Articles of various topics&lt;/li&gt;
&lt;li&gt;Use a Web Friendly interface to create posts&lt;/li&gt;
&lt;li&gt;Comment and React on Posts&lt;/li&gt;
&lt;li&gt;Bookmark and save articles &lt;/li&gt;
&lt;li&gt;Customize Profile&lt;/li&gt;
&lt;li&gt;Site-wide Dark Mode option&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;User Interface&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bc4Dz850--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.discordapp.net/attachments/603212735320162304/836531828927365180/unknown.png%3Fwidth%3D988%26height%3D480" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bc4Dz850--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.discordapp.net/attachments/603212735320162304/836531828927365180/unknown.png%3Fwidth%3D988%26height%3D480" alt="UI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-locally"&gt;
  &lt;/a&gt;
  Setting up Locally
&lt;/h2&gt;

&lt;p&gt;It is very easy to setup Luminosity locally if you have worked with xampp or any other stack.&lt;/p&gt;

&lt;p&gt;Follow the given steps to test Luminosity locally:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Clone project in htdocs directory using: &lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone git@github.com:cmd3BOT/Luminosity.git&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Your directory should look like:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\(xampp or any other stack)\htdocs\Luminosity&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check &lt;code&gt;public/.htaccess&lt;/code&gt; so that project directories match&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create Database in MySQL and load &lt;code&gt;SQL/dump.sql&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Setup app configs in &lt;code&gt;Config/ConfigDefault.php&lt;/code&gt;. Next rename to &lt;code&gt;Config.php&lt;/code&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Refer to &lt;a href="https://www.ipqualityscore.com"&gt;IP Quality Score&lt;/a&gt; and &lt;a href="https://cloudinary.com/"&gt;Cloudinary&lt;/a&gt; to setup APIs&lt;/li&gt;
&lt;li&gt;Be sure to fill all configs carefully to prevent unexpected errors.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Be sure to star the repository and follow me on &lt;a href="//github.com/cmd3BOT"&gt;Github&lt;/a&gt; :)&lt;/p&gt;

</description>
      <category>php</category>
      <category>programming</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB</title>
      <author>The Nerdy Dev</author>
      <pubDate>Wed, 28 Apr 2021 14:13:57 +0000</pubDate>
      <link>https://dev.to/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb</link>
      <guid>https://dev.to/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uchoGaGO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80q3xorf2nr8nuboahrq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uchoGaGO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80q3xorf2nr8nuboahrq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
I recently started to create a Full Web Developer Course on my YouTube Channel and recently finished with the HTML and the CSS Section of this FREE course. More videos will be up on upload.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML Section&lt;/strong&gt; &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/H9snA_Ze0wU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS Section&lt;/strong&gt; &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/j2pTwGeAMFY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JavaScript Section&lt;/strong&gt; &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qubTwfgGUzU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This section covers the basics of JavaScript along with the modern features that the language offers. We cover concepts like :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;em&gt;JavaScript Basics (variables, loops, conditionals, functions)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;JavaScript Types (Strings, Numbers, Objects, Booleans, Functions, Symbols)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Immediately Invoked Function Expressions&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Document Object Model (DOM) - Querying, Traversal, Inserting and Removing Elements from the DOM&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Arrays and Iterables&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Mutator methods - push, pop, shift, unshift, splice&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Other array methods like - slice, indexOf, findIndex, find, sort, reverse&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Higher Order Methods - filter, reduce, map&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Split and Join Methods&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;The spread operator&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Sets and Maps&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Understanding the this keyword in JavaScript&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Overview of Objects, Constructor Functions, Classes, OOP, Instance and Static Methods, Inheritance&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Events - Adding and Removing Event Listeners&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Event Capturing - Bubbling Phases, Propagation and 
Event Delegation&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Asynchronous JavaScript - Event Loop (Call Stack, Message Queue)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Asynchronous JavaScript - Understanding Promises and Error Handling&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Asynchronous JavaScript - Promise.race, Promise.all, Promise.allSettled&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Demystifying Async Await, From Promises to Async Await&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Scopes in JavaScript, Closures&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Symbols in JavaScript&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Iterators and Generators in JavaScript&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;The Concept of Pure and Impure Functions in JavaScript&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Understanding Hoisting in JavaScript&lt;/em&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;AND MORE.... &lt;/p&gt;

&lt;p&gt;A lot of exercises and projects were made in this section of the course. &lt;/p&gt;

&lt;p&gt;Here are the Projects that we made in this JavaScript Section : &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Building COVID-19 Tracker Application using JavaScript and Mapbox&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lX0vHaqtk6M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Making a Todo List Application in JavaScript using Custom Events&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LXs7i0G2ono"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implementation of Infinite Scroll in JavaScript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/7Xzxh6-PBwg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10 JavaScript Projects in 2 Hours&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KTGfHmyje5A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Node.js Section&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;COMING SOON&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MongoDB Section&lt;/strong&gt; &lt;br&gt;
&lt;em&gt;COMING SOON&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Make sure to subscribe to the channel for more such videos. &lt;br&gt;
A lot of AWESOME videos are coming this month... So make sure to SUBSCRIBE to the channel for more amazing videos. &lt;/p&gt;

&lt;p&gt;Follow me on Twitter for more updates : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to set up a PHP Console</title>
      <author>Arwaz Khan </author>
      <pubDate>Wed, 28 Apr 2021 14:08:09 +0000</pubDate>
      <link>https://dev.to/arwazkhan189/how-to-set-up-a-php-console-kbi</link>
      <guid>https://dev.to/arwazkhan189/how-to-set-up-a-php-console-kbi</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello Dev's&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog, we will learn how to set up a PHP console.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-we-need-this"&gt;
  &lt;/a&gt;
  Why we need this?
&lt;/h1&gt;

&lt;p&gt;PHP is a server-side language (Backend) of web development.&lt;br&gt;
In general, we don't require to take input from the console but sometimes for a small function or block of code, we require this because we don't want to disturb our whole code. It is also required to run some code that does not require a webpage (Interface) or sometimes we must require to take input from the console.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements?
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Server:&lt;/strong&gt;  Xampp or WampServer&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#how-to-set-up-this"&gt;
  &lt;/a&gt;
  How to set up this?
&lt;/h1&gt;

&lt;p&gt;First, we have to set up a path in our system environment variable.&lt;br&gt;
&lt;strong&gt;Step 1:&lt;/strong&gt; Goto C drive where your Xampp is installed&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_tjHt3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgfat7toj0mfxogxg0dl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_tjHt3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgfat7toj0mfxogxg0dl.jpg" alt="step 1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Step 2:&lt;/strong&gt; Goto &lt;strong&gt;php&lt;/strong&gt; folder in Xampp folder&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r53gxLyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azxcqdjr0tsa8m19ldg2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r53gxLyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azxcqdjr0tsa8m19ldg2.jpg" alt="step 2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Step 3:&lt;/strong&gt; Copy the path of that folder&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MYmZoL_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p96bod3uqptsoomgpl8n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MYmZoL_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p96bod3uqptsoomgpl8n.jpg" alt="Step 3"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Step 4:&lt;/strong&gt; Now Goto System Properties then Advance System Settings&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ivar0S9q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs85lgdp6m03vdeov6bf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ivar0S9q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs85lgdp6m03vdeov6bf.jpg" alt="step 4"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fn4pwbgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woyh69717bj0qd2n2wfn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fn4pwbgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woyh69717bj0qd2n2wfn.jpg" alt="step 5"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Step 5:&lt;/strong&gt; Goto Environment Variables and follow the below steps and paste the copied path and press ok ok ok...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YNRBXhdm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wjtyzxdnoecyzyik5k6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YNRBXhdm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wjtyzxdnoecyzyik5k6.jpg" alt="step 6"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ipsFgFF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6pl2lop0ghi4593ipn5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ipsFgFF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6pl2lop0ghi4593ipn5.jpg" alt="step 7"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yYt3lUTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t1b2mi7z274fw8iwvgh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yYt3lUTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t1b2mi7z274fw8iwvgh.jpg" alt="step 8"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sYe7vp25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ati2eoljgxkzujju62zq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sYe7vp25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ati2eoljgxkzujju62zq.jpg" alt="step 9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#now-how-to-run-the-php-file"&gt;
  &lt;/a&gt;
  Now How to run the php file?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; open command prompt go to the directory where your code is saved ...&lt;br&gt;
you can use &lt;strong&gt;cd&lt;/strong&gt; command like  cd C:\xampp\htdocs&lt;br&gt;
Now to run php code use this command -&amp;gt; php file_name.php&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P0WOVPlm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yl4hfmk0cjik69dz0cwm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P0WOVPlm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yl4hfmk0cjik69dz0cwm.jpg" alt="step 10"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hope you will understand 😊....&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;If you have any problem you can comment below.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Thankyou 🙏&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>console</category>
    </item>
    <item>
      <title>What are AWS Lambda triggers?</title>
      <author>Taavi Rehemägi</author>
      <pubDate>Wed, 28 Apr 2021 14:05:26 +0000</pubDate>
      <link>https://dev.to/dashbird/what-are-aws-lambda-triggers-1dhh</link>
      <guid>https://dev.to/dashbird/what-are-aws-lambda-triggers-1dhh</guid>
      <description>&lt;p&gt;This is a &lt;strong&gt;basic introduction to Lambda triggers&lt;/strong&gt; that uses DynamoDB as an event source example.&lt;/p&gt;

&lt;p&gt;We talk a lot about the more advanced level of Lambda triggers in our popular two-part series: &lt;strong&gt;Complete Guide to Lambda Triggers&lt;/strong&gt;. If you want to learn more, read &lt;a href="https://dashbird.io/blog/complete-guide-lambda-triggers-design-patterns-part-1/"&gt;part one&lt;/a&gt; and &lt;a href="https://dashbird.io/blog/complete-guide-lambda-triggers-design-patterns-part-2/"&gt;part two&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We're going back to the basics this time because skipping some steps when learning something new might get you confused. It tends to get annoying, or it can even make you frustrated. Why?&lt;/p&gt;

&lt;p&gt;To understand how something works appropriately and later on to know how to apply your knowledge practically without stress, &lt;strong&gt;you must master the particular subject in a particular order&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let me put it this way: you can't calculate how fast is a subatomic particle moving in space if it's 300 lightyears away from the closest planet if you don't know the basic math, like 3.14 times 42, right?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, back to our topic here, what are AWS Lambda triggers?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/aws-lambda-monitoring/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdcUjF_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2020/07/lambda.png" alt="AWS Lambda monitoring"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lambda-triggers-explained-with-dynamodb-integration"&gt;
  &lt;/a&gt;
  Lambda Triggers Explained with DynamoDB Integration
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/dynamodb/"&gt;DynamoDB is an AWS product&lt;/a&gt; just like Lambda, and therefore you're able to create triggers with ease. Triggers are pieces of code that will automatically respond to any events in DynamoDB Streams.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Triggers allow you to build applications that will then react to any data modification&lt;/strong&gt; made in DynamoDB tables. By enabling DynamoDB Streams on a table, you will be able to associate an ARN with your Lambda function. Instantly after an item in the table is modified, a new record will appear in the table's stream. When AWS Lambda detects a new stream record, it will invoke your Lambda function synchronously.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lambda functions can perform any actions you specify&lt;/strong&gt;, like sending notifications or a workflow initiation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An example: suppose you have a mobile gaming app that's writing on a GameScores table. Each time the TopScore attribute of the GameScores table is updated, a corresponding stream record will be written to the table's stream. You can then set a Lambda function to post a message on social media sites once the event is triggered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#eventdriven-lambda-and-how-to-trigger-it"&gt;
  &lt;/a&gt;
  Event-Driven Lambda And How To Trigger It
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;For Lambda functions to execute, an event must occur (think If, Then)&lt;/strong&gt;. If an event happens, then it will trigger Lambda. Until recently, our knowledge of triggering Lambda functions was based on &lt;a href="https://dashbird.io/knowledge-base/api-gateway/what-is-aws-api-gateway/"&gt;API Gateway&lt;/a&gt; as a trigger, but more AWS resources can trigger your Lambda functions.&lt;/p&gt;

&lt;p&gt;Events can be anything happening with the resources within your AWS account. Did somebody write a record to DynamoDB? &lt;strong&gt;This can trigger a Lambda function&lt;/strong&gt;. Did someone upload a file to S3? &lt;strong&gt;This can be a Lambda trigger too&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lambda-triggering-another-lambda-a-bad-decision"&gt;
  &lt;/a&gt;
  Lambda Triggering Another Lambda -- A Bad Decision?
&lt;/h3&gt;

&lt;p&gt;You can even call Lambda functions from other Lambda functions! But this is generally seen as bad practice. &lt;strong&gt;If you don't finish your Lambda before you start the next one, you pay for both running&lt;/strong&gt;. The first one that is waiting for the second one and the second one. Think about &lt;a href="https://dashbird.io/blog/optimizing-aws-lambda-for-production/"&gt;optimizing your lambdas&lt;/a&gt; for performance and cost.&lt;/p&gt;

&lt;p&gt;You should always put another service between your Lambda functions and don't call them directly. SQS, SNS, and &lt;a href="https://dashbird.io/blog/ultimate-guide-aws-step-functions/"&gt;Step Functions&lt;/a&gt; are good ways to connect your Lambda functions without paying for two invocations at once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-trigger-a-lambda-manually"&gt;
  &lt;/a&gt;
  How to Trigger a Lambda Manually?
&lt;/h3&gt;

&lt;p&gt;If you ever want to trigger lambdas "manually" then simply create an event using one of the AWS resources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-trigger-a-lambda-function-3-common-ways-to-trigger-lambda"&gt;
  &lt;/a&gt;
  How to Trigger a Lambda Function? 3 Common Ways To Trigger Lambda
&lt;/h3&gt;

&lt;p&gt;To trigger a lambda function, you can choose between many different ways. The 3 most common ways are API Gateways, S3, and DynamoDB table streams.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#api-gateway"&gt;
  &lt;/a&gt;
  API Gateway
&lt;/h4&gt;

&lt;p&gt;API Gateway event is one way to trigger Lambda. These events are considered synchronous events. Simply put, it means that when somebody is calling an API Gateway, it will trigger your Lambda function. It's a synchronous event because your &lt;strong&gt;Lambda function has to respond to the client directly at the end of its invocation&lt;/strong&gt;. For Lambda to know which kind of event will trigger it, you need to define it in the configuration or, or &lt;code&gt;serverless.yml&lt;/code&gt; if you're using the Serverless Framework.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#s3"&gt;
  &lt;/a&gt;
  S3
&lt;/h4&gt;

&lt;p&gt;S3 events occur when someone (or something) &lt;strong&gt;modifies the content of an S3 bucket&lt;/strong&gt;. Altering the content can be achieved by either creating, removing, or updating a file. While you're defining an event, you're able to &lt;strong&gt;specify what sort of action will trigger the lambda function&lt;/strong&gt;, whether it's creating, removing, or updating a file.&lt;/p&gt;

&lt;p&gt;S3 events are asynchronous, which means your Lambda function only has to handle the event and doesn't have to respond with anything. There is no client involved like with API Gateway, so nobody is waiting for your function to send a response. &lt;strong&gt;S3 will send an event that triggers your Lambda function, but it won't check what it did afterward&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#dynamodb-table-streams"&gt;
  &lt;/a&gt;
  DynamoDB Table Streams
&lt;/h4&gt;

&lt;p&gt;DynamoDB events will be explained shortly, but first, let's start with DynamoDB table streams.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A DynamoDB table stream&lt;/strong&gt; is like a line or a queue through which the data flows. In this particular case, the data is actually the change made to a specific table. This means that when someone updates a record in a specific DynamoDB table, it will instantly publish all of these changes in a stream, and it &lt;strong&gt;further implies that the Lambda function will be triggered because there is data in the stream&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This way is a little bit more complicated since we need to connect the Lambda function to a DynamoDB stream. When there is data in the stream, there are &lt;strong&gt;two different ways Lambda will get triggered&lt;/strong&gt; by it.&lt;/p&gt;

&lt;p&gt;First, when there is &lt;strong&gt;any kind of data in the stream&lt;/strong&gt;, which means a single change to the database at a certain time, the lambda will be executed only once.&lt;/p&gt;

&lt;p&gt;The second way table streams trigger Lambda functions is when there is a &lt;strong&gt;batch of events in the stream, all processed together&lt;/strong&gt;. This way saves the execution time a lot since processing streams are pretty fast.&lt;/p&gt;

&lt;p&gt;Like S3 events, table stream events are asynchronous, so you don't have to send a response from your Lambda function. They differ from S3 events in their second way to trigger Lambda functions, which allows you to batch multiple DynamoDB changes into one Lambda event.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-list-of-lambda-event-sources"&gt;
  &lt;/a&gt;
  Bonus: List of Lambda Event Sources
&lt;/h2&gt;

&lt;p&gt;Here is a small list of AWS services that can trigger events for AWS Lambda.&lt;/p&gt;

&lt;p&gt;Let's start with the &lt;strong&gt;synchronous event sources&lt;/strong&gt;. These require your Lambda function to return a response when it's finished. This is because the service that triggered the event sends the response to a client or uses it to check if the event was handled successfully.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Elastic Load Balancing (Application Load Balancer)&lt;/li&gt;
&lt;li&gt;  Amazon Cognito&lt;/li&gt;
&lt;li&gt;  Amazon connect&lt;/li&gt;
&lt;li&gt;  Amazon Lex&lt;/li&gt;
&lt;li&gt;  Amazon Alexa&lt;/li&gt;
&lt;li&gt;  Amazon API Gateway&lt;/li&gt;
&lt;li&gt;  Amazon CloudFront (Lambda@Edge)&lt;/li&gt;
&lt;li&gt;  Amazon Kinesis Data Firehose&lt;/li&gt;
&lt;li&gt;  Amazon Simple Storage Service Batch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And now the services that trigger asynchronous events. &lt;strong&gt;These are simply fire-and-forget&lt;/strong&gt;; the services that triggered the events don't care if your Lambda function handled them correctly. If you need retry logic, you have to implement it yourself with the help of SQS or Step Functions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Amazon Simple Storage Service&lt;/li&gt;
&lt;li&gt;  Amazon Simple Notification Service&lt;/li&gt;
&lt;li&gt;  Amazon Simple Email Service&lt;/li&gt;
&lt;li&gt;  AWS CloudFormation&lt;/li&gt;
&lt;li&gt;  Amazon CloudWatch Logs&lt;/li&gt;
&lt;li&gt;  Amazon CloudWatch Events&lt;/li&gt;
&lt;li&gt;  AWS CodeCommit&lt;/li&gt;
&lt;li&gt;  AWS Config&lt;/li&gt;
&lt;li&gt;  AWS IoT&lt;/li&gt;
&lt;li&gt;  AWS IoT Events&lt;/li&gt;
&lt;li&gt;  AWS CodePipeline&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;AWS Lambda triggers are merely actions caused by specific AWS resources; these actions generate events that will further execute Lambda functions that listen to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Lambda is an event-based system&lt;/strong&gt;. Lambda functions are associated with events that are triggered by other AWS resources, like API Gateway, S3, or DynamoDB. Lambda functions will always react to these events.&lt;/p&gt;

&lt;p&gt;Once you have finished reading about triggers, you will probably start to wonder about the observability aspect of your serverless app or, to put it better, the lack thereof. You wouldn't be the first one to think like that, but luckily several services can help you in that regard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/aws-lambda-monitoring/"&gt;Dashbird can help you monitor your AWS Lambdas&lt;/a&gt; with an all in one easy-to-understand dashboard. Set up alerts, get insights on what to improve, and keep track of costs without adding any strain to your application. You can &lt;a href="https://dashbird.io/register/"&gt;sign up&lt;/a&gt; right now to start monitoring your serverless app for free! No code changes and no credit card required.&lt;/p&gt;




&lt;p&gt;Further reading:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/complete-aws-lambda-handbook-beginners-part-1/"&gt;The Complete AWS Lambda Handbook for Beginners (part 1/3)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/using-lambda-layers-for-better-serverless-architecture/"&gt;Using Lambda Layers for Better Serverless Architecture&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/monitoring-vs-observability/"&gt;Monitoring vs Observability: can you tell the difference?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/aws-lambda-error-handling-step-functions/"&gt;AWS Lambda Error Handling&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/aws-console-serverless-debugging/"&gt;Why AWS Console isn't Always the Best for Serverless Debugging?&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>serverless</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Challenge 2: Add SQS + S3 Event Triggers for Lambda Apps</title>
      <author>Raphael Jambalos</author>
      <pubDate>Wed, 28 Apr 2021 14:02:40 +0000</pubDate>
      <link>https://dev.to/raphael_jambalos/challenge-2-add-sqs-s3-event-triggers-for-lambda-apps-3ian</link>
      <guid>https://dev.to/raphael_jambalos/challenge-2-add-sqs-s3-event-triggers-for-lambda-apps-3ian</guid>
      <description>&lt;h2&gt;
  &lt;a href="#quick-recap"&gt;
  &lt;/a&gt;
  Quick Recap
&lt;/h2&gt;

&lt;p&gt;In the previous post, we have created a simple loyalty application. It can create and display loyalty cards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-next-challenge"&gt;
  &lt;/a&gt;
  Your next challenge
&lt;/h2&gt;

&lt;p&gt;The loyalty application you have made was a big hit! New user's enrollment is now at an all-time high. However, your old users are complaining. They still are using the old paper-based system and they refused to enroll as new users unless the points from their old loyalty card can be migrated to the new loyalty card system that you created.&lt;/p&gt;

&lt;p&gt;The restaurants have a backlog of 100,000 paper loyalty cards to be migrated to the new system. With a booming business, they can only do 100 a day and your loyal customers are already complaining!&lt;/p&gt;

&lt;p&gt;To help them, your boss volunteered you (ugh, I know right) to create a new module for the application. The staff will just encode the paper loyalty cards in a CSV file. And you will just collect the CSV file and upload it to S3. The new module will read the contents and create a unique loyalty card for each one, and still maintain the points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#specification"&gt;
  &lt;/a&gt;
  Specification
&lt;/h2&gt;

&lt;p&gt;In order to do this, you will have to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an S3 bucket in your AWS Account&lt;/li&gt;
&lt;li&gt;Create a new lambda function (L4). Lambda functions are off by default and are triggered by events. In the previous challenge, it was triggered by an API call. For this function, it is triggered by a file upload to an S3 bucket.&lt;/li&gt;
&lt;li&gt;Once the file is uploaded in your S3 bucket, a Lambda function is triggered. In the event object of the Lambda function, the S3 bucket and the file_key of the file uploaded is given. Use this information to download and read the file line by line.&lt;/li&gt;
&lt;li&gt;Each line is created one job in an SQS queue. An SQS queue is sort of like a line in a bank. If we have a file with 10,000 rows, we would have 10,000 jobs lined up for processing in the SQS queue. Each job is represented by a JSON object sent to SQS. The contents of the JSON object is the values of the row. A sample job would look like &lt;code&gt;{"card_number": "3000-4000-5000-6000", "first_name": "Raphael", "last_name": "Jambalos", "points": 500}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;At the end of the line is a "teller" processing the requests one after the other. For this, we create another Lambda function (L5). L5 takes a request from SQS. It receives a JSON object that has information about the job. With this information, create a loyalty card in your DynamoDB database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iyiPdUYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20zlezcncyusl99esw74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iyiPdUYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20zlezcncyusl99esw74.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hints"&gt;
  &lt;/a&gt;
  Hints
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;For L4, you can begin by connecting the L4 to the S3 bucket by setting up its event property. For an example, &lt;a href="https://github.com/serverless/examples/blob/master/aws-node-s3-file-replicator/serverless.yml"&gt;start here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;For L5, you can begin by configuring the L5 function to connect to the SQS queue. For an example, you can &lt;a href="https://github.com/serverless/examples/blob/master/aws-node-sqs-worker/serverless.yml"&gt;start here&lt;/a&gt;. This example automatically triggers a Lambda function when a request arrives in SQS.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Serverless Example for SQS (L5)

&lt;ul&gt;
&lt;li&gt;NodeJS: &lt;a href="https://github.com/serverless/examples/tree/master/aws-node-sqs-worker"&gt;https://github.com/serverless/examples/tree/master/aws-node-sqs-worker&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Python: &lt;a href="https://github.com/serverless/examples/tree/master/aws-python-sqs-worker"&gt;https://github.com/serverless/examples/tree/master/aws-python-sqs-worker&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Serverless Example for S3 (L4)

&lt;ul&gt;
&lt;li&gt;NodeJS: &lt;a href="https://github.com/serverless/examples/tree/master/aws-node-s3-file-replicator"&gt;https://github.com/serverless/examples/tree/master/aws-node-s3-file-replicator&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#show-off-your-work"&gt;
  &lt;/a&gt;
  Show off your work!
&lt;/h2&gt;

&lt;p&gt;Comment a screencap of your work below. Or better yet, create a blog post here in dev.to explaining how you did it.&lt;/p&gt;

&lt;p&gt;If you have any questions or are stuck somewhere, comment below or send me a pm, and I'd be happy to help you.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@punttim?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Tim Gouw&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>tutorial</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Cassette tape in CSS 🎵</title>
      <author>mrtoxas</author>
      <pubDate>Wed, 28 Apr 2021 13:39:33 +0000</pubDate>
      <link>https://dev.to/mrtoxas/cassette-tape-in-css-3h2p</link>
      <guid>https://dev.to/mrtoxas/cassette-tape-in-css-3h2p</guid>
      <description>&lt;p&gt;Good afternoon dear community Dev.to!&lt;br&gt;
I decided to share with you my craft item - this is a audio-cassette made in CSS. &lt;/p&gt;

&lt;p&gt;Demonstration:&lt;br&gt;
&lt;a href="https://mrtoxas.github.io/cassette-tape-css/"&gt;https://mrtoxas.github.io/cassette-tape-css/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code:&lt;br&gt;
&lt;a href="https://github.com/mrtoxas/cassette-tape-css"&gt;https://github.com/mrtoxas/cassette-tape-css&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this will make you feel a pleasant nostalgic and in a good mood :)&lt;/p&gt;

</description>
      <category>css</category>
      <category>tricks</category>
      <category>scss</category>
      <category>html</category>
    </item>
    <item>
      <title>Which Services A Laravel Development Company Must Offer To Your Dream Project?
</title>
      <author>Rachael Grey</author>
      <pubDate>Wed, 28 Apr 2021 13:11:17 +0000</pubDate>
      <link>https://dev.to/rachaelgrey3/which-services-a-laravel-development-company-must-offer-to-your-dream-project-5dpg</link>
      <guid>https://dev.to/rachaelgrey3/which-services-a-laravel-development-company-must-offer-to-your-dream-project-5dpg</guid>
      <description>&lt;p&gt;You can say that in today's technological era, there is more than one framework with all having extensive features; it turns tough for the development team to choose the best. When it involves developing websites, enterprise leaders are scrupulous approximately the tech stack used. One that might assist them to lessen the overall development time simultaneously as improving the quit-to quit performance is what catches the attention of the developers.&lt;/p&gt;

&lt;p&gt;Laravel is gaining non-stop recognition in constructing particular internet programs from a previous couple of years in this fast-evolving technological sector. Laravel gives elegant capabilities that cover all regular use cases, and you may experience the innovative experience to be truly fulfilling.&lt;/p&gt;

&lt;p&gt;So to take advantage of these, you should hire a skillful laravel development company that will provide all the services that will helpful for the growth of your website, so let's take a look at these services:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Enterprise Solutions:&lt;/strong&gt;&lt;br&gt;
You should choose a top-notch laravel development company that will provide enterprise solutions for your web applications. Enterprise solutions will help entrepreneurs reclaim an organization's data and information because it is designed uniquely to provide all-around information about the company's business. So every entrepreneur must get enterprise solutions from the development company that they have hired.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Data migration solutions:&lt;/strong&gt;&lt;br&gt;
Being an entrepreneur, you must know about data migration solutions services if you plan to hire a laravel development company for your next project. Suppose you want to grow your business and make it more user-friendly so that you can quickly transfer the data. In that case, you should hire a development company that will make you a more responsive application. Performance quality is best-in-class, and it is optimized better while changing your different existing framework to laravel.&lt;br&gt;
Data migration is vital due to many reasons like:&lt;br&gt;
When you want flexible storage capacity so that you can store your data without any hurdles and can also increase the data capacity.&lt;br&gt;
When you want to transfer from one data to another without any difficulty.&lt;br&gt;
When you want to rearrange the data centers of your website application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Restful App Development:&lt;/strong&gt;&lt;br&gt;
You must see that the development company you have hired provides restful app development to interface and use data appropriately. Restful application is a type of application which is preferred chiefly, and it uses HTTP for accessing website's data&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. eCommerce App Development:&lt;/strong&gt;&lt;br&gt;
Suppose your business is associated with eCommerce development. In that case, you must choose a laravel framework for your web application and hire a top-notch development company to create best-in-class web applications that can develop secure and steady eCommerce apps. Laravel has become trendy for making eCommerce websites, as with the help of that, the navigation flow will become easy for your platform.&lt;br&gt;
The developers you hire should be dedicated, and they should create such a framework that will give a compelling end-to-end solution. So an eCommerce website needs to get proper development services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. CRM Development:&lt;/strong&gt;&lt;br&gt;
As you all must be aware of how meaningful customer relationships are. So it is necessary to build a user-friendly CRM system to get proper information about how many customers visited your website so that you can improve and grow your business by making it more customer-friendly. This can be done only when you have a proper laravel development company that gives the best CRM development services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Maintenance &amp;amp; Support:&lt;/strong&gt;&lt;br&gt;
When you decide to hire a development company, you should see whether their developers can give you proper maintenance services or not, whether they can solve even the minute problems correctly or not. It is necessary to update and maintain the website regularly. So you must look for a development company that has proper experience and gives outstanding services.&lt;/p&gt;

&lt;p&gt;To conclude, every entrepreneur must get proper development services to grow your business and earn profit as well as more and more customers will get attracted to your website. For that, you should hire a top-notch &lt;a href="https://www.bacancytechnology.com/laravel-development"&gt;laravel development company&lt;/a&gt; to create a stable framework for your website so that not only its front-end but the backend can also be smooth and reliable. You should also see that the development company provides the services that have been mentioned above before you sign any contract with the company.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-information"&gt;
  &lt;/a&gt;
  Additional Information:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.bacancytechnology.com/blog/boost-your-business-with-laravel"&gt;Grow your business with Laravel web development: 5 proven ways of success&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.bacancytechnology.com/blog/hidden-things-uncovered-about-laravel-development"&gt;Discover the undiscovered Laravel development services&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.bacancytechnology.com/blog/benefits-of-laravel-development-services-for-new-businesses"&gt;What benefits should new businesses know about Laravel development services.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>laravel</category>
      <category>developmentcompany</category>
      <category>services</category>
      <category>webframework</category>
    </item>
    <item>
      <title>Sharpen your Ruby: Procs and Lambdas</title>
      <author>Eric Chapman</author>
      <pubDate>Wed, 28 Apr 2021 13:08:51 +0000</pubDate>
      <link>https://dev.to/ericchapman/sharpen-your-ruby-procs-and-lambdas-3ee8</link>
      <guid>https://dev.to/ericchapman/sharpen-your-ruby-procs-and-lambdas-3ee8</guid>
      <description>&lt;p&gt;I develop in Javascript, Python, PHP and Ruby. By far Ruby is my favorite programming language. &lt;/p&gt;

&lt;p&gt;Together let start a journey and revisit our Ruby foundations. &lt;/p&gt;

&lt;p&gt;Each post will include some theory but also exercise and solution.&lt;/p&gt;

&lt;p&gt;If you have any questions/comments or your are new and need help, you can comment below or send me a message.&lt;/p&gt;

&lt;h2&gt;Ruby blocks?&lt;/h2&gt;

&lt;p&gt;Before understanding Procs and Lambda we have to understand what is a code block in Ruby:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Ruby full code block&lt;/span&gt;
&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; 
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# or&lt;/span&gt;

&lt;span class="c1"&gt;# Ruby one line code block&lt;/span&gt;
&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The num is the argument that will be supply by the .each method. Noted that the argument name are define between two pipe characters |num|&lt;/p&gt;

&lt;p&gt;Inside the block we can do anything including using the num argument.&lt;/p&gt;

&lt;h2&gt;Define a block using Lambda&lt;/h2&gt;

&lt;p&gt;A lambda is a way to define a block and its parameters with some special syntax. You can save this lambda into a variable for later use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;display_welcome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Hello World'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# or&lt;/span&gt;
&lt;span class="n"&gt;display_welcome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Hello World'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#call the lambda&lt;/span&gt;
&lt;span class="n"&gt;display_welcome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lambda can also take arguments&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;display_welcome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#call the lambda with arguments&lt;/span&gt;
&lt;span class="n"&gt;display_welcome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;Ruby Procs&lt;/h2&gt;

&lt;p&gt;Procs are very similar to Lamdbas. Actually Lambda is a type of Proc. The syntax is a bit different:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;display_welcome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#call the lambda with arguments&lt;/span&gt;
&lt;span class="n"&gt;display_welcome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both Procs and Lambda will get the same result. Using one or the other can be confusing. Here a list of there differences:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lambdas are defined with -&amp;gt; {} and procs with Proc.new {}.&lt;/li&gt;
&lt;li&gt;Procs 'return' keyword return from the current calling method, while lambdas return from the lambda itself.&lt;/li&gt;
&lt;li&gt;Procs don’t care about the correct number of arguments, while lambdas will raise an exception.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Closures&lt;/h2&gt;

&lt;p&gt;Ruby procs &amp;amp; lambdas also have another special attribute. When you create a Ruby proc, it captures the current execution scope with it.&lt;/p&gt;

&lt;p&gt;This concept, which is sometimes called closure, means that a proc will carry with it values like local variables and methods from the context where it was defined.&lt;/p&gt;

&lt;p&gt;They don’t carry the actual values, but a reference to them, so if the variables change after the proc is created, the proc will always have the latest version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;call_proc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_proc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Hello All'&lt;/span&gt;
  &lt;span class="n"&gt;my_proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Hello Mike'&lt;/span&gt;
&lt;span class="n"&gt;my_proc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;call_proc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_proc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Hello Mike&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why 'Hello Mike' and not 'Hello All'? The Proc closure is using the context (scope) variables where it was define. &lt;/p&gt;

&lt;p&gt;The mgs variable inside the call_proc method is not part of the same context (scope) as the Proc.new declaration. So have no influence on the Proc.&lt;/p&gt;

&lt;p&gt;At this point is 100% normal that you don't understand that concept of closure. I decide to write this info here because it is related to Procs and Lambda but chance are that it is too hard to gap for the moment... And that ok! I will not ask anything about it in the following exercise don't worry...&lt;/p&gt;

&lt;h1&gt;Exercise&lt;/h1&gt;

&lt;p&gt;Create a little program that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a variable that store a Lambda block &lt;/li&gt;
&lt;li&gt;The lambda bloc will have 2 arguments. &lt;/li&gt;
&lt;li&gt;Those arguments will be added (ex. a + b) inside the lambda block body.&lt;/li&gt;
&lt;li&gt;Execute the lambda block&lt;/li&gt;
&lt;li&gt;Display to console the result&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Solution&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;addition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;addition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 30&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That's it for today. The journey just started, stay tune for the next post very soon. (later today or tomorrow)&lt;/p&gt;

&lt;p&gt;If you have any comments or questions please do so here or send me a message on twitter. &lt;/p&gt;

&lt;p&gt;I am new on twitter so if you want to make me happy&lt;br&gt;
Follow me: &lt;a href="https://twitter.com/justericchapman?ref_src=twsrc%5Etfw"&gt;Follow @justericchapman&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Password Generator Using JavaScript, HTML &amp; CSS</title>
      <author>Mystery Code</author>
      <pubDate>Wed, 28 Apr 2021 12:57:56 +0000</pubDate>
      <link>https://dev.to/foolishdeveloper/password-generator-using-javascript-html-css-375l</link>
      <guid>https://dev.to/foolishdeveloper/password-generator-using-javascript-html-css-375l</guid>
      <description>&lt;p&gt;Random Password Generator is a program that automatically generates a password randomly. Those generated passwords are mix with numbers, alphabets, symbols, and punctuations. This type of program helps the user to create a strong password.&lt;/p&gt;

&lt;p&gt;Today in this article, I'll share with you this program (Random Password Generator). When you click on the generate password button each time this program automatically generated a random password.&lt;br&gt;
There is shown a copy button that copies that generated password when you click on that button.&lt;/p&gt;

&lt;p&gt;Here you can create any type of password, that is, if you want to create a password using just the number, you can do it. You can set the amount of the password here. You can create as many large and small passwords as you wish.&lt;/p&gt;

&lt;p&gt;If you have any difficulty in understanding, you can watch the video tutorial below. In the video below, I am sharing with you how to make it step by step in a completely simple way.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-n0dOu5lp0A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;YouTube Video Link: &lt;a href="https://youtu.be/-n0dOu5lp0A"&gt;https://youtu.be/-n0dOu5lp0A&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully from this video, you have learned how to make it complete. Below is all the source code to make it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Random Password &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"result-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"result"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"clipboard"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa fa-clipboard"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"settings"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"setting all"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"length range__slider"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"length__title field-title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;length:&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 

                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"range"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"length"&lt;/span&gt; &lt;span class="na"&gt;min=&lt;/span&gt;&lt;span class="s"&gt;'4'&lt;/span&gt; &lt;span class="na"&gt;max=&lt;/span&gt;&lt;span class="s"&gt;'20'&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;'20'&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="c"&gt;&amp;lt;!--&amp;lt;input id="length" type="range" min="4" max="32" value="16" /&amp;gt;--&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"setting"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Include uppercase letters&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt; 
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"uppercase"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"setting"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Include lowercase letters&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt; 
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"lowercase"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"setting"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Include numbers&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt; 
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"numbers"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"setting"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Include symbols&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt; 
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"symbols"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;



        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-large"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"generate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            Generate password
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;CSS Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2f2f68&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Muli'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#021929&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;13px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;350px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.result-container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;37&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.result-container&lt;/span&gt; &lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0d66a1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.btn-large&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.setting&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.all&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.range__slider&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.08&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;13px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;65px&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#length&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;-webkit-appearance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.314&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.field-title&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.65rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;pointer-events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;user-select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;254&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;254&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;JavaScript Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resultEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;result&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lengthEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;length&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uppercaseEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;uppercase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lowercaseEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lowercase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbersEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;numbers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;symbolsEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;symbols&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;generateEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;generate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clipboard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;clipboard&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;randomFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getRandomLower&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getRandomUpper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getRandomNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;symbol&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getRandomSymbol&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;clipboard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;textarea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;textarea&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;resultEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;copy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Password copied to clipboard&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;lengthEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasLower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lowercaseEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasUpper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uppercaseEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbersEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasSymbol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;symbolsEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;resultEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generatePassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hasLower&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hasUpper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hasNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hasSymbol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generatePassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;generatedPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;typesCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;typesArr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nx"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="p"&gt;}].&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="c1"&gt;// Doesn't have a selected type&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;typesCount&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// create a loop&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="nx"&gt;typesCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;typesArr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;funcName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nx"&gt;generatedPassword&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;randomFunc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;funcName&lt;/span&gt;&lt;span class="p"&gt;]();&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;finalPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generatedPassword&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;finalPassword&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRandomLower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRandomUpper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRandomNumber&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRandomSymbol&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!@#$%^&amp;amp;*(){}[]=&amp;lt;&amp;gt;/,.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://cutt.ly/WbiPRmt"&gt;Download Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Be sure to let us know how you like this random password generator system by commenting in the comment box.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Overview of Svelte UI Libraries and Components</title>
      <author>Pavel Lazarev</author>
      <pubDate>Wed, 28 Apr 2021 12:42:42 +0000</pubDate>
      <link>https://dev.to/plazarev/overview-of-svelte-ui-libraries-and-components-2ban</link>
      <guid>https://dev.to/plazarev/overview-of-svelte-ui-libraries-and-components-2ban</guid>
      <description>&lt;p&gt;For years, development stacks of web developers almost certainly included one of the “Great Three” of JavaScript frameworks – React, Angular, Vue. These frameworks are still wildly popular and continue evolving, but it is useful for coders to have more alternative options to choose from. Results of the latest &lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;State of JS&lt;/a&gt; survey imply that there is a new rising star on the JavaScript landscape – Svelte.&lt;/p&gt;

&lt;p&gt;Currently, I’m working on a demo project management app based on Svelte. Taking into account the fact that Svelte has been attracting the most serious attention from the development community for just a few years, I thought that I would have to do all the coding part from scratch. But fortunately, I’ve managed to find a lot of UI libraries and even a Gantt component that can be used to make my first coding experience with Svelte more effective and less time-consuming. In this article, I want to share my findings with you. &lt;/p&gt;

&lt;p&gt;But first, we should become familiar with this promising framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-svelte-and-why-to-use-it"&gt;
  &lt;/a&gt;
  What is Svelte and Why to Use It
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; is a relatively new component-based JavaScript framework with a powerful reactivity system at its core. It delivers a fresh approach to building super-fast web applications. In contrast to React and Vue.js that interpret application code when it is running in the user's browser, Svelte operates as a compiler and turns your declarative code into pure JavaScript during the build phase. Svelte automatically updates the DOM when the application’s state changes instead of relying on the virtual DOM diffing. As a result, Svelte allows creating applications with impressive performance rates by writing less code.&lt;/p&gt;

&lt;p&gt;IBM, Philips, GoDaddy, New York Times, and many other companies of various scales have already started using Svelte. It is also a beginner-friendly framework, as basic knowledge of web technologies (HTML, CSS, JS) will be enough to start working with Svelte.&lt;/p&gt;

&lt;p&gt;Now let us proceed with the overview of ready-made UI tools that can be used to speed up the development of Svelte-based applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dhtmlx-gantt-for-svelte"&gt;
  &lt;/a&gt;
  DHTMLX Gantt for Svelte
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iz-2-ope--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldh6oh7s7uy8lxsagedh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iz-2-ope--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldh6oh7s7uy8lxsagedh.jpg" alt="DHTMLX Svelte Gantt"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for an easy way to build a project management application based on a Gantt chart functionality, &lt;a href="https://dhtmlx.com/docs/products/dhtmlxGantt-for-Svelte/"&gt;DHTMLX Svelte Gantt&lt;/a&gt; is exactly what you need. Actually, it is a key component of my demo project. Written in pure Svelte, this brand-new library enables you to build Gantt charts for conveniently planning, managing, and monitoring tasks in projects of any size. &lt;/p&gt;

&lt;p&gt;The main feature of this native Svelte Gantt is its reactivity. It ensures that any editing operations or chart timeline manipulations are displayed with no delay. The component is also notable for its great performance characteristics. Projects with even 10000+ tasks are rendered in just milliseconds without causing any inconvenience to end-users. &lt;/p&gt;

&lt;p&gt;This Svelte Gantt comes with a set of key capabilities for organizing the workflow. For instance, it is possible to set different types of tasks (project, task, milestone) and specify dependencies between them. You can also make the Gantt timeline more informative by adding task tooltips and vertical markers. An intuitive drag-and-drop UI makes it really easy for users to interact with the chart. All relevant data on each project task can be changed on the fly via an edit form.&lt;/p&gt;

&lt;p&gt;An extensive API of this Gantt component provides vast customization possibilities, enabling you to tune all Gantt elements to the guidelines of your project. You are also free to complement tasks with custom HTML content, enable read-only mode, or even place several Gantt charts on one page.&lt;/p&gt;

&lt;p&gt;If you decide to try DHTMLX Svelte Gantt in your project, just download an &lt;a href="https://docs.dhtmlx.com/gantt/web__svelte.html"&gt;evaluation version&lt;/a&gt; from npm and put it to use. Multiple &lt;a href="https://dhtmlx.com/svelte/demos/gantt/#/base/default"&gt;demos&lt;/a&gt; will help you to make the most of this Gantt component much faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 185 kB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; Commercial&lt;br&gt;
&lt;strong&gt;NPM:&lt;/strong&gt; &lt;a href="https://www.npmjs.com/package/@dhtmlx/trial-svelte-gantt"&gt;https://www.npmjs.com/package/@dhtmlx/trial-svelte-gantt&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#svelte-material-ui"&gt;
  &lt;/a&gt;
  Svelte Material UI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E7xgnEOj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rg2e8pqvkq1tgbhm34ma.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E7xgnEOj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rg2e8pqvkq1tgbhm34ma.jpg" alt="Svelte Material UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sveltematerialui.com"&gt;Svelte Material UI&lt;/a&gt; (SMUI) is a library of Svelte 3 UI components (20+) with touch/mobile-optimized design intended for generating a wide range of interface elements. It is based on the Material Design Components (MDC) for Web that aid in implementing Material Design.&lt;/p&gt;

&lt;p&gt;SMUI offers helper utilities for creating custom UI components if the given list of components is not covering your needs. All components can be enriched with arbitrary attributes and actions. All events from every component are forwarded. Here we are talking about DOM, MDC, and custom events. The support for various event modifiers is also included. &lt;/p&gt;

&lt;p&gt;SMUI components are fully themable, meaning that you can define every aspect of their visual appearance with the help of Sass variables or bare CSS. All components can be adjusted for the use of text content written in RTL languages. SMUI is also accessible by default for people with disabilities.&lt;/p&gt;

&lt;p&gt;We can conclude that the library is rapidly gaining popularity among web developers, as it has already found application in more than &lt;a href="https://github.com/hperrin/svelte-material-ui/network/dependents?package_id=UGFja2FnZS01NTM5MDg5MDQ"&gt;500 projects&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 45.6 kB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; Apache 2.0&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 1.6k&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smelte"&gt;
  &lt;/a&gt;
  Smelte
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6xoxl1DU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d94ho7n66p0p24uebhi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6xoxl1DU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d94ho7n66p0p24uebhi.jpg" alt="Smelte"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://smeltejs.com/"&gt;Smelte&lt;/a&gt; is a UI component library based on the combination of Svelte and Tailwind CSS. It offers a collection of Material design components (20+) aimed to help developers in creating nice-looking and responsive layouts. Tailwind's utility classes are used as the main instrument for building Smelte components, while Svelte takes care of performance and bundle size.&lt;/p&gt;

&lt;p&gt;The library offers a lot of helpful features. For instance, there is a PurgeCSS tool that serves to automatically detect and remove all unused classes from your CSS, thus reducing the size of CSS files in your project. The image lazy loading feature allows displaying quality images in your app without causing any performance penalties. The list of other useful capabilities includes JS/CSS ripple animation, SSR deployment, custom themes, material icons, dark mode, and many others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 948 kB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 911&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#carbon-components-svelte"&gt;
  &lt;/a&gt;
  Carbon Components Svelte
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gp6hMGoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6djgnghsrgm5ys3z3389.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gp6hMGoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6djgnghsrgm5ys3z3389.jpg" alt="Carbon Components Svelte"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Carbon is a well-known design system launched by IBM for facilitating design and development processes. Core parts of the system are also implemented by the IBM team for native coding experience with popular JavaScript libraries. &lt;a href="https://carbon-svelte.vercel.app/"&gt;Carbon Components Svelte&lt;/a&gt; is one of these solutions.&lt;/p&gt;

&lt;p&gt;This library is packed with a set of reusable Svelte UI components (50+) for solving specific UI problems. Adopting the library allows you to benefit from consistent markup, styles, and behavior in Svelte projects. Carbon Components Svelte also makes use of the &lt;a href="https://github.com/IBM/sveld"&gt;sveld&lt;/a&gt; library for automatically generating TypeScript definitions and API metadata. &lt;/p&gt;

&lt;p&gt;The Carbon Svelte portfolio also includes three other useful libraries for Svelte applications: &lt;a href="https://github.com/IBM/carbon-icons-svelte"&gt;Carbon Icons&lt;/a&gt; (6000+), &lt;a href="https://github.com/IBM/carbon-pictograms-svelte"&gt;Carbon Pictograms&lt;/a&gt; (700+), &lt;a href="https://github.com/carbon-design-system/carbon-charts/tree/master/packages/svelte"&gt;Carbon Charts&lt;/a&gt; (16). These libraries can be utilized independently or in combination with Carbon Components Svelte.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 2.14 MB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; Apache 2.0&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 773&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#svelte-materialify"&gt;
  &lt;/a&gt;
  Svelte Materialify
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--66XkYtKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jqw5excf73ruu6h2w38.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--66XkYtKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jqw5excf73ruu6h2w38.jpg" alt="Svelte Materialify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://svelte-materialify.vercel.app/"&gt;Svelte Materialify&lt;/a&gt; is a UI library designed to boost the development process with Svelte. It provides web developers with handcrafted Material Components they need to build rich and engaging user interfaces. Currently, the library includes 50+ components that help to implement key UI elements such as grid, forms, menus, buttons, tooltips, and many others.&lt;/p&gt;

&lt;p&gt;All components are customizable, thus they can be modified to fit in various use cases. If you have your own style for Materialify components in mind, it is possible to create custom components. Support for server-side rendering facilitates improved performance. The library is also notable for its full accessibility.&lt;/p&gt;

&lt;p&gt;The library is still in progress, but in the future, it may start playing the same role for Svelte as Vuetify plays for Vue.js.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 2.38 MB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 437&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sveltestrap"&gt;
  &lt;/a&gt;
  Sveltestrap
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i4QNNkjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcjmy7jj64z6hk8cm61c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i4QNNkjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcjmy7jj64z6hk8cm61c.jpg" alt="Sveltesrap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When it comes to web design issues in Svelte apps, some developers may choose to use well-known Bootstrap components. It is possible, but the problem here is that many of these components should come with jQuery and it will increase the app’s bundle size. That is where the &lt;a href="https://sveltestrap.js.org/?path=/story/components--get-started"&gt;Sveltestrap&lt;/a&gt; library can come in handy.&lt;/p&gt;

&lt;p&gt;This library helps to reimplement Bootstrap components as Svelte components. It frees you from the necessity to directly apply Bootstrap component classes or include Bootstrap's JS code. Sveltestrap components do not cause any difficulties in terms of their usage, as they require less markup. Creators of this component borrowed some concepts from the &lt;a href="https://reactstrap.github.io/"&gt;reactstrap&lt;/a&gt; library for React.&lt;/p&gt;

&lt;p&gt;At the same time, it should be noted that Sveltestrap has no Bootstrap styles, so it is necessary to add a link to the Bootstrap 4 stylesheet to your project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 1.14 MB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 574&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#attractions"&gt;
  &lt;/a&gt;
  Attractions
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lioTMDGN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6i7v62hdgvgv4hcuzkz9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lioTMDGN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6i7v62hdgvgv4hcuzkz9.jpg" alt="Attractions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://illright.github.io/attractions/"&gt;Attractions&lt;/a&gt; is a robust package of UI components designed for accelerating the process of implementing various interface parts in Svelte apps. Currently, it includes 46 customizable components and a collection of utility functions for making your coding more productive. Thanks to the compiling nature of Svelte, the library can be applied for any framework using the JS API.&lt;/p&gt;

&lt;p&gt;All styling changes in Attractions components are performed with classes and Sass variables. By utilizing the Custom Elements API, it is also possible to employ Attractions components as Web Components. It can be very helpful in cases when you want to make a quick prototype without using any frameworks or bundlers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 875 kB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 203&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sveltechota"&gt;
  &lt;/a&gt;
  SvelteChota
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mukCurxh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtuyyrgvqy14mx33iq31.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mukCurxh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtuyyrgvqy14mx33iq31.jpg" alt="SvelteChota"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Small bundle sizes is one of the key benefits that motivate web developers to start web projects with Svelte. This idea lies at the heart of &lt;a href="https://alexxnb.github.io/svelte-chota"&gt;SvelteChota&lt;/a&gt; - a kit of UI components based on the Chota CSS framework. This framework is mainly notable for its lightweightness, adding only about 3kb of gzipped code to your bundle. SvelteChota includes a range of basic components (10+) that can be customized with CSS variables. There are also helpful CSS classes for modifying the style of any element. This &lt;a href="https://cdn.rawgit.com/jenil/chota/master/test/index.html"&gt;demo page&lt;/a&gt; shows how standard HTML elements look with Chota.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 110 kB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 177&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notus-svelte"&gt;
  &lt;/a&gt;
  Notus Svelte
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Swq55txp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gde1731e3wx4rlpcvgqf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Swq55txp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gde1731e3wx4rlpcvgqf.jpg" alt="Notus Svelte"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://demos.creative-tim.com/notus-svelte"&gt;Notus Svelte&lt;/a&gt; is a free-to-use UI Kit and Admin built on top of Tailwind CSS and Svelte by Creative Tim. By choosing Notus Svelte, you get access to 120 Fully Coded CSS elements and 18 dynamic components to kickstart your UI development. These components can be mixed and matched to help you go through stages from prototyping to full-functional code with less effort. The appearance of all components can be adjusted to your needs with the help of Tailwind CSS classes and custom classes. You can also use ready-made example pages to get started with Notus Svelte.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 6.65 MB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 168&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#svelthree"&gt;
  &lt;/a&gt;
  Svelthree
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFeqaxWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xennjzyn8kys6va650z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFeqaxWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xennjzyn8kys6va650z.png" alt="Svelthree"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Three.js is a widely used JavaScript library for creating and displaying 3D content in the browser. If you want to do the same in Svelte projects, pay attention to &lt;a href="https://svelthree.dev/"&gt;Svelthree&lt;/a&gt;. The key objective of this components library is to provide Svelte developers with an API similar to the one of three.js. Taking advantage of this library, you can build reactive and reusable three.js scene graphs in a declarative manner. &lt;/p&gt;

&lt;p&gt;The code of all components is written in TypeScript. There are also some useful &lt;a href="https://svelthree.dev/examples#hello-cube"&gt;examples&lt;/a&gt; prepared by the development team to cover the library’s API in more detail. But it should be mentioned that this library is still under development and many features are yet to be added.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 2.24 MB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 158&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#felte"&gt;
  &lt;/a&gt;
  Felte
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhWg06TL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gomtz37c6phqecwhrh4u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhWg06TL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gomtz37c6phqecwhrh4u.jpg" alt="Felte"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Form is the key interface element when it is necessary to get important information from end-users. Therefore I devoted some time to find a good library for implementing this functionality for Svelte and came across &lt;a href="https://felte.dev/"&gt;Felte&lt;/a&gt;. It is a user-friendly and extensible form library based on Svelte stores and actions that allow you to build forms exactly the way you need.&lt;/p&gt;

&lt;p&gt;Validation is an essential part of any form component, that is why Felte offers you to apply popular validation libraries (such as Yup, Zod, or Superstruct) or create a custom validation strategy. It also provides various built-in error reporting capabilities. When talking about styling options, Felte relies on plain HTML tags rather than CSS variables, making your work on styling adjustments easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 243 kB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 74&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#svelte-mapbox"&gt;
  &lt;/a&gt;
  Svelte Mapbox
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--erlAC74y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sq4d223jjf8me2i065t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--erlAC74y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sq4d223jjf8me2i065t.jpg" alt="Svelte Mapbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you need to build an interactive map with server-side rendering support for your Svelte project, &lt;a href="https://github.com/beyonk-adventures/svelte-mapbox"&gt;Svelte Mapbox&lt;/a&gt; can be a good helper for completing this kind of task. Based on a popular Mapbox library, this lightweight mapping tool provides you with map and place geocoding (place autocomplete) components.  You can also add custom Svelte components to your map and modify any map elements with the use of custom CSS. But it is necessary to emphasize that the place autocomplete component has a client-side dependency since it increases the bundle size (by about 0.5 MB) and the build time if bundled.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 52.4 kB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 120&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#svelte-calendar"&gt;
  &lt;/a&gt;
  Svelte Calendar
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bqmVbO2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z7zir8w86nb3jsm0ini.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bqmVbO2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z7zir8w86nb3jsm0ini.jpg" alt="Svelte Calendar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://6edesign.github.io/svelte-calendar"&gt;Svelte Calendar&lt;/a&gt; is a convenient cross-browser datepicker component with neat animations that allows end-users to view and select dates. It renders well on mobile devices of various sizes and can be easily navigated with a thumb or via keyboard. Svelte Calendar allows you to limit the selection range by specifying start and end dates and theme a datepicker. You can employ it as a Svelte component, with vanilla JavaScript, or compile it into a native web component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 1.51 MB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 292&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sveltegrid"&gt;
  &lt;/a&gt;
  Svelte-Grid
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCezaFVK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7iczd0z88zkup5r1cro.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCezaFVK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7iczd0z88zkup5r1cro.jpg" alt="Svelte-Grid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://svelte-grid.vercel.app"&gt;Svelte-Grid&lt;/a&gt; is a handy grid layout system with responsive breakpoints that allows you to arrange all the stuff on a web page in a well-structured way. It is a pure Svelte component without any dependencies on jQuery or 3-rd party tools. Here you get static, draggable, and resizable widgets to implement your page design faster. The component also comes with some helper functions that will help you to manage grid elements more efficiently. It can also be rendered on the server thanks to the compatibility with the Sapper framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package size:&lt;/strong&gt; 179 kB&lt;br&gt;
&lt;strong&gt;License:&lt;/strong&gt; MIT&lt;br&gt;
&lt;strong&gt;GitHub stars:&lt;/strong&gt; 490&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;The only thing that may discourage you from trying Svelte is its immaturity when compared to the mainstream frameworks. It is true that Svelte is a young framework, but as you can see there is a variety of existing UI tools that can help to get started with Svelte. And I think that the ecosystem of this remarkable framework will continue to evolve and become more developer-friendly in the coming years. If you have in mind any other useful UI solutions for building Svelte apps, feel free to share them in the comments below.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>svelte</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>There is something wrong with the Android studio</title>
      <author>Umar-bek</author>
      <pubDate>Wed, 28 Apr 2021 12:42:29 +0000</pubDate>
      <link>https://dev.to/umarbek/there-is-something-wrong-with-the-android-studio-pmf</link>
      <guid>https://dev.to/umarbek/there-is-something-wrong-with-the-android-studio-pmf</guid>
      <description>&lt;p&gt;how can i fix this&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
