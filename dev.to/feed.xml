<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>15 Must-Have Browser Extensions for Web Developers</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 06:28:25 +0000</pubDate>
      <link>https://dev.to/coderzzz/15-must-have-browser-extensions-for-web-developers-57e7</link>
      <guid>https://dev.to/coderzzz/15-must-have-browser-extensions-for-web-developers-57e7</guid>
      <description>&lt;p&gt;Browsers are increasingly incorporating more &lt;span&gt;&lt;a href="#"&gt;extensions, plugins and add-ons&lt;/a&gt;&lt;/span&gt;, which are often developed by their users, making the browser more powerful, and helping us increase our productivity. Here at Awwwards, our mission is to share with you the best resources and tools on the web, so we're writing a series of blog articles on &lt;span&gt;the best extensions and plugins for major browsers&lt;/span&gt;. To kick-off, we're focusing on extensions that are offered in the Chrome Web Store, available for free and easy to install.&lt;/p&gt;
&lt;p&gt;Among the tools, we'll highlight those that are&lt;span&gt; most useful for web designers and developers&lt;/span&gt;. We hope you find them useful and get you better results. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/chrome-extensions-for-web-developers/&amp;amp;ved=2ahUKEwjNobWsr-fyAhX_yzgGHYoACLUQFnoECAMQBQ&amp;amp;usg=AOvVaw3LrSRSp_yMsQU7StlCW8qG"&gt;15 Must-Have Browser Extensions for Web Developers&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 25, Buttons, Entry and Textboxes </title>
      <author>Aatmaj</author>
      <pubDate>Tue, 14 Sep 2021 06:09:57 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-25-buttons-entry-and-textboxes-2d0n</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-25-buttons-entry-and-textboxes-2d0n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-cover-three-widgets-namely-button-entry-and-textbox"&gt;
  &lt;/a&gt;
  Today we will cover three widgets, namely button, entry and textbox.
&lt;/h2&gt;




&lt;h2&gt;
  &lt;a href="#the-plain-old-button"&gt;
  &lt;/a&gt;
  The plain old button
&lt;/h2&gt;

&lt;p&gt;We have covered check buttons, radio buttons and label in the previous parts. But now we will see how to make a simple clickable button. &lt;/p&gt;

&lt;p&gt;The button widget can be created as shown &lt;code&gt;button=tk.Button(form,text="Press Me",command=cmd)&lt;/code&gt;&lt;br&gt;
'cmd' is the  command to be executed once the button is pressed. The example below will make things clearer.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#making-a-blank-button"&gt;
  &lt;/a&gt;
  Making a blank button
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Press Me"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IbrCmGCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w22b2svmeh2ycai4tqxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IbrCmGCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w22b2svmeh2ycai4tqxg.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VA5nwwQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/epcakg5pqhf555sthqdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VA5nwwQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/epcakg5pqhf555sthqdg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On pressing the button, nothing happens. It is just a blank button. But now we will add a counter to count the number of times the button is pressed.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#adding-counter-to-the-button"&gt;
  &lt;/a&gt;
  Adding counter to the button.
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntVar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;&lt;span class="c1"&gt;#don't forget the str()
&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Press Me"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;On pressing the button, the text of the button changes in accordance to the number of times the button is pressed. This is achieved by using the &lt;code&gt;IntVar()&lt;/code&gt; variable.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7zbapgOH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzrdmqcpibwxh8zcxd3r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7zbapgOH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzrdmqcpibwxh8zcxd3r.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ck4hfTRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/482syg5vj7gzexldbem1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ck4hfTRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/482syg5vj7gzexldbem1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vMoquqEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrx6tz05d7g4qnmx7f9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMoquqEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrx6tz05d7g4qnmx7f9m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-entry-widget"&gt;
  &lt;/a&gt;
  The Entry widget.
&lt;/h2&gt;

&lt;p&gt;The entry widget is a single line textbox. The users can give in a single line input via this widget.&lt;br&gt;
&lt;code&gt;entry = tk.Entry(parent)&lt;/code&gt;&lt;br&gt;
We can also add other parameters to the entry widget like color, etc. Here is an example below which demonstrates a blank entry widget.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#blank-entry-widget"&gt;
  &lt;/a&gt;
  Blank entry widget.
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cxPEFlCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbtpby50gfg5u1qojvfx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxPEFlCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbtpby50gfg5u1qojvfx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#getting-value-from-the-entry"&gt;
  &lt;/a&gt;
  Getting value from the entry.
&lt;/h3&gt;

&lt;p&gt;The value of the text can be obtained using the &lt;code&gt;get()&lt;/code&gt; function.  The below example will make things very clear.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
The TB1.get() method returns the string value of the  text inputted into the entry widget. By using the config() method of the button, we can set the text of the button.
'''&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To process the input data, we will need the help of other widgets. Button for example. In the above example, when the button is pressed, the button text changes according to the value of the entry.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FiykySH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5oognqdgj9yapvlebo2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FiykySH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5oognqdgj9yapvlebo2o.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fD6pSXOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4x0brdbpabmng97ncec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fD6pSXOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4x0brdbpabmng97ncec.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CFsSu9QZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tx1vrflcvir6gy3iyhc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CFsSu9QZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tx1vrflcvir6gy3iyhc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yiNU544A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp4fyvgntwwzp1ja6zoo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yiNU544A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp4fyvgntwwzp1ja6zoo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#textbox"&gt;
  &lt;/a&gt;
  Textbox.
&lt;/h2&gt;

&lt;p&gt;Textboxes are just the same as entry widgets, the only difference is that we can add multiple lines to it. Just replace 'Entry' by 'Text' and you are done!&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#blank-textbox"&gt;
  &lt;/a&gt;
  Blank textbox.
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of textbox widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0EQyx3C7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6t7nv5a41xob5juki1ha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0EQyx3C7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6t7nv5a41xob5juki1ha.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#setting-the-textspace"&gt;
  &lt;/a&gt;
  Setting the text-space
&lt;/h4&gt;

&lt;p&gt;Using the height and width attributes, we can set the number of input characters in each line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of textbox widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TosJIIJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olwmezxtkeovnt97hbt2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TosJIIJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olwmezxtkeovnt97hbt2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#getting-input-from-the-textbox"&gt;
  &lt;/a&gt;
  Getting input from the textbox.
&lt;/h3&gt;

&lt;p&gt;We can get the input in the same manner. We need to specify two parameters to the get method. The start and the end parameter. &lt;code&gt;text=TB1.get(1.0, "end-1c")&lt;/code&gt; will give the entire result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"end-1c"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="s"&gt;'''
get(start, [end])
where,
start is starting index of required text in TextBox,
end is ending index of required text in TextBox
'''&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UTjiRzki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ka7z6j5nlihj7px5tb0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UTjiRzki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ka7z6j5nlihj7px5tb0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;







&lt;p&gt;So friends, that was all for today. Tomorrow, we will do a password management program! So stay tuned in this course!. Follow me on GitHub for updates.&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tips To Become Great Programmer Of All Time</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 05:52:17 +0000</pubDate>
      <link>https://dev.to/coderzzz/tips-to-become-great-programmer-4gcg</link>
      <guid>https://dev.to/coderzzz/tips-to-become-great-programmer-4gcg</guid>
      <description>&lt;p&gt; A good programmer is someone who always looks both ways before crossing a one-way street. ~Doug Linder&lt;/p&gt;

&lt;p&gt;Let me start by saying that I do not consider myself to be a competent coder. I consider my coding abilities to be mediocre, and I am still learning and have a long way to go before I am even remotely satisfied with them.Yes, I am better at programming than a lot of others, but that is just because they are lazy and choose to sit about idle all day instead of programming. Their dreadful abilities make my less dreadful abilities appear fantastic.&lt;/p&gt;

&lt;p&gt;So most of the tips I will mention below are lessons learnt from failed endeavours, they are what I have wanted to be and I am not. So lets dive in. &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/tips-to-become-a-great-programmer/"&gt;Tips to become a great programmer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Learn about Node.js - Popular JavaScript Framework ⚡</title>
      <author>Rezaul karim</author>
      <pubDate>Tue, 14 Sep 2021 05:48:06 +0000</pubDate>
      <link>https://dev.to/mrezaulkarim/learn-about-node-js-popular-javascript-framework-43en</link>
      <guid>https://dev.to/mrezaulkarim/learn-about-node-js-popular-javascript-framework-43en</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-nodejs-"&gt;
  &lt;/a&gt;
  What is Node.js ?
&lt;/h2&gt;

&lt;p&gt;Node.js is a server-side JavaScript run-time environment that works cross-platform and is open source. Node.js uses event drive and non-blocking models that make this framework light weight and efficient. Node.js package ecosystem - "NPM" is the world's largest ecosystem of open source libraries.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#actually-nodejs-is-"&gt;
  &lt;/a&gt;
  Actually node.js is -
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A platform that allows us to run on a JavaScript computer or server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Helps to read, delete and update files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Helps to easily communicate with the database.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-is-nodejs-so-popular"&gt;
  &lt;/a&gt;
  Why is Node.js so popular?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It uses JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very fast (using V7 engine and non-blocking code)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open source package has many large ecosystems such as - NPM&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very good for real time services such as - Chat service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-know-about-some-features-of-node-js"&gt;
  &lt;/a&gt;
  Let's know about some features of Node JS:
&lt;/h2&gt;

&lt;p&gt;1) Swift: Node that S's library code execution is much faster.&lt;/p&gt;

&lt;p&gt;2) I / 0 Asynchronous and Even-Driven: All APIs are asynchronous which means the server does not wait for the API to back up the data.&lt;/p&gt;

&lt;p&gt;3) Single threaded: Node that uses single threaded model with S event loop.&lt;/p&gt;

&lt;p&gt;4) High Scalable: Node that S uses an event mechanism that allows the server to respond to non-blocking manners that make it scalable.&lt;/p&gt;

&lt;p&gt;5) No buffering: Node that s processing time significantly reduces when uploading audio and video files. So buffering is not.&lt;/p&gt;

&lt;p&gt;6) Open Source: Being open source, Node JS has come up with many amazing models that are used to add better capability to Node JS applications.&lt;/p&gt;

&lt;p&gt;7) License: It is licensed under MIT.&lt;/p&gt;

&lt;p&gt;*Recommended:  &lt;a href="https://mrezaulkarim.com/es6-cheat-sheet/"&gt;JavaScript - ES6 Cheat Sheet | Download PDF&lt;/a&gt; *&lt;/p&gt;

&lt;p&gt;For more exciting tips and tricks about programming and coding please read our  &lt;a href="https://mrezaulkarim.com/blog/"&gt;others articles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find My page on Instagram:  &lt;a href="https://instagram.com/stack.content"&gt;@stack.content&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find Me on Twitter:   &lt;a href="https://twitter.com/mrezaulkarim_"&gt;@mrezaulkarim_&lt;/a&gt; &lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Amazing Tools for Web Developers 🤩</title>
      <author>Arpit</author>
      <pubDate>Tue, 14 Sep 2021 05:24:30 +0000</pubDate>
      <link>https://dev.to/soniarpit/amazing-tools-for-web-developers-503h</link>
      <guid>https://dev.to/soniarpit/amazing-tools-for-web-developers-503h</guid>
      <description>&lt;p&gt;Web development tools always make our work easy and smooth. As a web developer, I know lots of work is there. That’s why I listed tools that I use all the time. &lt;/p&gt;

&lt;p&gt;Well, there are lots of tools available in the world, so we do not claim this list a complete one. You can share your favorite tools out from the list in the comments section below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-bootstrap-cheatsheet"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://bootstrap-cheatsheet.themeselection.com/"&gt;Bootstrap cheatsheet&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hGjdpN-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-1024x538.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hGjdpN-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-1024x538.png" alt="Bootstrap cheatsheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best cheat sheet for Bootstrap 5 classes, variable, and mixins. It also helps you to find the difference between Bootstrap 4 and Bootstrap 5 so you can easily migrate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-gitignoreio"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.gitignore.io/"&gt;Gitignore.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0rl-wcvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-3-1024x466.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0rl-wcvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-3-1024x466.png" alt="Gitignore.io"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;gitignore.io is a web service designed to help you create .gitignore files for your Git repositories. The site has a graphical and command-line method of creating a .gitignore for your operating system, programming language, or IDE.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-nibbler"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://nibbler.silktide.com/"&gt;Nibbler&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--al2r-Dp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-5-1024x498.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--al2r-Dp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-5-1024x498.png" alt="nibbler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nibbler is a free tool for testing websites. Enter the address of any website and Nibbler will give you a report scoring the website out of 10 for key areas, including accessibility, SEO, social media, and technology.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-cssreferenceio"&gt;
  &lt;/a&gt;
  4. &lt;a href="http://cssreference.io/"&gt;CSSreference.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H30W8HUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H30W8HUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-8.png" alt="cssreference.io"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;cssreference.io is a free visual guide to CSS. It features the most popular properties and explains them with illustrated and animated examples.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-regex101"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://regex101.com/"&gt;Regex101&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--44zc_TED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-14-1024x499.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--44zc_TED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.codesnail.com/wp-content/uploads/2021/09/image-14-1024x499.png" alt="regex101"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application offers both instruction for creating regular expressions and a ready environment for writing and testing expressions. Additionally, after creating an expression, we get a detailed explanation of it. So this is also the best tool from all tools for web developers.&lt;/p&gt;

&lt;p&gt;Check out the other 10 tools here: &lt;a href="https://www.codesnail.com/fantastic-tools-for-web-developers/"&gt;Fantastic Tools for Web Developers That You’re Not Using Yet 🤩&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you &amp;lt;3&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tools</category>
    </item>
    <item>
      <title>10 VS Code extensions every Frontend Developer should Must Use</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 05:22:14 +0000</pubDate>
      <link>https://dev.to/coderzzz/10-vs-code-extensions-every-frontend-developer-should-must-use-fig</link>
      <guid>https://dev.to/coderzzz/10-vs-code-extensions-every-frontend-developer-should-must-use-fig</guid>
      <description>&lt;p&gt;Hello everyone, my name is Vansh and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code. Let's Jump in! &lt;/p&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;10 VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Complete roadmap: How to get started with Frontend Development?</title>
      <author>ShahiLalit</author>
      <pubDate>Tue, 14 Sep 2021 05:18:52 +0000</pubDate>
      <link>https://dev.to/shahilalit/complete-roadmap-how-to-get-started-with-frontend-development-m9p</link>
      <guid>https://dev.to/shahilalit/complete-roadmap-how-to-get-started-with-frontend-development-m9p</guid>
      <description>&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;Today we will look into the complete roadmap for becoming a frontend developer step by step.&lt;/p&gt;

&lt;p&gt;In the previous blog, we talked about if getting into  &lt;a href="https://blog.lalitshahi.com/a-career-in-web-development-in-2021"&gt;a web development career in 2021&lt;/a&gt;  is still a good option. We discussed why it can be a good option for people who are interested in it. We also discussed that web development consists of Frontend Development and Backend Development. And what quick steps one can take to get into any of these fields as an absolute beginner.&lt;/p&gt;

&lt;p&gt;Now, in this article, we will dive deep into the complete guide on how one can plan his/her career in front-end development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-frontend-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Frontend Development?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As an absolute beginner, I am sure you must be asking a question to yourself, what is front-end development? What does a front-end developer do?&lt;/p&gt;

&lt;p&gt;You see as the name suggests, a front-end developer creates everything a user sees on any website or application.&lt;/p&gt;

&lt;p&gt;To make it easier for you to understand and remember, let's make a list of tasks that a frontend developer handles.&lt;/p&gt;

&lt;p&gt;A front-end developer:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creates the static User Interfaces (UIs) for the website/application.&lt;/li&gt;
&lt;li&gt;Responsible for adding and handling the user interactions, e.g. click of a button, filling out a form, etc.&lt;/li&gt;
&lt;li&gt;Integrates the Application Programming Interfaces (APIs) shared by the backend team with the UI.&lt;/li&gt;
&lt;li&gt;Linking pages together on a website/application for users to move back and forth.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Apart from these, there will be other tasks that you will have to do as a developer in a small team but those tasks can be handled by or delegated to anyone. So, let's not talk about what you don't do and talk about as a front-end developer what you do.&lt;/p&gt;

&lt;p&gt;As a beginner, it is very helpful when you have a clear idea about the processes and paths you need to know to achieve anything in your career. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://roadmap.sh/"&gt;Roadmap.sh&lt;/a&gt;  has done a wonderful job of doing extensive research and created this complete frontend developer roadmap for us and for every beginner who is planning to build a career as a frontend developer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ga36qOCb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631524436448/ufCCcUG5W.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ga36qOCb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631524436448/ufCCcUG5W.png" alt="frontend.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#skills-that-you-need-to-learn-to-be-a-frontend-developer"&gt;
  &lt;/a&gt;
  Skills that you need to learn to be a frontend developer
&lt;/h2&gt;

&lt;p&gt;Now, that we have some idea about what you will do as a front-end developer, let's find out the skills that are needed to do all that.&lt;/p&gt;

&lt;p&gt;There are three technologies that you need to start with:-&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html-hypertext-markup-language"&gt;
  &lt;/a&gt;
  HTML - HyperText Markup Language
&lt;/h3&gt;

&lt;p&gt;HTML is the basic foundation of web development. HTML is not a programming language, it's a markup language but it does not mean that it is any less than any programming language like Python or JavaScript.&lt;/p&gt;

&lt;p&gt;Almost all web pages that you see on the web are written in HTML. We can confidently state that HTML is the A B C of web development.&lt;/p&gt;

&lt;p&gt;HTML consists of elements also called tags. Each tag has its meaning and purpose. With the help of HTML, you would create the basic structure of your website and element should be written in the order they are going to be shown on the website.&lt;br&gt;
Some of the best resources to learn HTML:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://html.com/"&gt;html.com&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://w3schools.com/"&gt;W3Schools&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#css-cascading-style-sheets"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CSS - Cascading Style Sheets:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;CSS helps to style the webpage when you are done writing your HTML elements. You can target your HTML elements in a CSS file using various selectors, but mostly you would use classes, ids, and tag names. &lt;/p&gt;

&lt;p&gt;In the CSS file, you would define properties like the color, size of the text and background, how big you want your image to be and which font style to use and so many other properties. &lt;/p&gt;

&lt;p&gt;This is where you get to show your creativity and make the website as beautiful you can make, but keeping in mind the performance of the webpage.&lt;/p&gt;

&lt;p&gt;Some of the best resources to learn CSS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://w3schools.com/"&gt;W3Schools&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://css-tricks.com/"&gt;CSS-Tricks&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#js-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;JS - JavaScript:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;JS is the most popular language out there. According to the StackOverflow survey, also discussed in our previous blog, A career in web development in 2021, JavaScript has been winning this race for 9 years in a row. &lt;/p&gt;

&lt;p&gt;And this is because JavaScript can be used in frontend and backend development. &lt;/p&gt;

&lt;p&gt;But as a beginner, you just have to focus on the fundamental concepts of programming that apply to JavaScript and that would be the stepping stone for you to learn any other language later if you choose to.&lt;/p&gt;

&lt;p&gt;Some of the best resources to learn JavaScript online:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://learnjavascript.online/"&gt;Learn JavaScript Online&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://javascript.info/"&gt;JavaScript Info&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pN6jk0uUrD8&amp;amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP"&gt;Namaste JavaScript Playlist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To understand the use of these three, as an absolute beginner, let's take an example.&lt;/p&gt;

&lt;p&gt;Our body is the website or the application that we have to build.&lt;/p&gt;

&lt;p&gt;For creating our body we need to have the elements like bones, skin, all kinds of body organs.&lt;/p&gt;

&lt;p&gt;Now, same as our body organs, we use HTML to create elements for our website. We create them in order we will be using them on our website. As the header of the website will be on top and footer of the website would be at the bottom, and so on.&lt;/p&gt;

&lt;p&gt;We have created elements that are needed now, we need to define how they should look as per the design and where they should be placed.&lt;/p&gt;

&lt;p&gt;Just like our bodies look different and beautiful in their way with all the hairstyle, clothes, etc. To do all that for our website, CSS comes into the picture.&lt;/p&gt;

&lt;p&gt;CSS (Cascading Style Sheets) defines how a user sees our website. We use CSS, to define what size of the image to put, what color of the text and background should be on our website. CSS also helps us define how our website should look when viewed on different screen sizes.&lt;/p&gt;

&lt;p&gt;Till now, we have created our body with all the structure, bones, muscles, and skin, and everything. But we do want a working body, we want to use our feet to work for walking and hands to help us type this blog, that you can see and read with your eyes.&lt;/p&gt;

&lt;p&gt;So, for this interaction, we have our brain and the nervous system to help us understand the world around us and interact with it.&lt;/p&gt;

&lt;p&gt;Likewise, we have JavaScript that does the work of our brain on our website. It tells the website what to open when a user clicks on a login button and what to do when the user clicks on the logout button.&lt;/p&gt;

&lt;p&gt;JavaScript also helps us get the feedback of our users after they read this blog, and post it down below in the comments section.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If this analogy helped you understand even a bit about HTML, CSS, and JavaScript please drop a comment down below and see the JavaScript in action.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After you have done a basic course on the above three, you will have some idea of how these technologies are used in front-end development.&lt;/p&gt;

&lt;p&gt;It's time to move ahead and learn some of the following technologies which a frontend developer should be aware of, and will have to use in his/her day-to-day work.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#understand-how-the-web-works"&gt;
  &lt;/a&gt;
  Understand how the web works?
&lt;/h3&gt;



&lt;p&gt;&lt;code&gt;How the internet works?&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The basic idea is browser sends a request, the server returns a response, that's how we see a webpage on browsers.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;How do you get the data on hitting a URL in your browser and What is DNS?&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;our browsers and servers talk to each other using numbers and they are called IP Addresses e.g. 255.0.23.3 but we as users can't remember all these IP addresses for all the websites we need, this is where DNS (Domain Name System) comes into the picture and maps our domain names like &lt;code&gt;yourdomain.com&lt;/code&gt; to its IP address.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Understand the difference between client-side and server-side programming.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dom-document-object-model"&gt;
  &lt;/a&gt;
  &lt;strong&gt;DOM - Document Object Model:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This represents the page that contains the webpage and all the elements that we created using HTML. Let's understand it this way, DOM is the document that consists of elements as objects which has their properties and methods.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Why do you need to learn DOM? you may ask!&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;so, DOM helps you target and grab any element on your website, and use it or its properties to change it or use it in any way you want in your project. e.g. you want to show a modal that pops up on the screen when you hit a button, so we can use DOM to achieve that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-preprocessors-like-less-scss"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CSS Pre-processors like LESS, SCSS:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Pro-processors like LESS and SCSS help in creating better organized and re-usable CSS snippets. &lt;/p&gt;

&lt;p&gt;The pre-processors contain features like mixins, functions, variables, and the ability to use multiple files and import those into one main file. &lt;/p&gt;

&lt;p&gt;Basic idea is, it helps you write extensible, re-usable, and less code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#version-control-system"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Version Control System:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;When you start working on a project, you would need to have a way to control the different versions of your project, and have a clear idea about the code changes done by you or any other developer working with you on the same project. &lt;/p&gt;

&lt;p&gt;So, Version Control System helps in handling this by maintaining a history of what changes have happened and who has done it. GIT, CVS, &amp;amp; SVN are few popular open-source version control systems, which you can use to track your changes. &lt;/p&gt;

&lt;p&gt;Most of the companies use GitHub, GitLab, or BitBucket as their version control systems which are based on GIT. Learning GIT can be a bit difficult for a beginner, but when you are working alone on your first few projects, you would only need to remember these commands and you will be good to go.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;git init&lt;/code&gt;- it adds git to your new project and creates a master branch to your repository.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git status&lt;/code&gt; - it checks the new changes to your project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git add -p&lt;/code&gt; - it shows you changes in small chunks so that you can check and confirm those changes one by one. There is another command (git add .) which adds all changes to git without confirmation and I would not suggest doing it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git commit -m "write your commit-change msg here"&lt;/code&gt; - commits changes to git with the message written inside quotes about the changes after &lt;strong&gt;-m&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git push origin remote-branch-name&lt;/code&gt; - it pushes your code to the remote branch which you have mentioned in the command.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git checkout branch-name&lt;/code&gt; - it takes you to the branch you checkout to.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git checkout -b new-branch-name&lt;/code&gt; - it creates a new branch for you with the name provided by you and checks out to that branch.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git pull&lt;/code&gt; - this will pull all the changes from the remote branch to your remote branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ability-to-use-libraries-in-the-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Ability to use libraries in the project:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;As a developer, you would have to do some development in your project which could require a lot of time and effort but you can also use libraries created by other developers and graciously open-sourced for other developers to use and take benefit from it. &lt;/p&gt;

&lt;p&gt;You must gain some experience in integrating and using open-sourced libraries. They can be for any use cases, could be for creating UIs, like using a bootstrap library or using an image slider library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understand-the-difference-between-static-dynamic-websites-and-spas"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Understand the difference between Static, Dynamic Websites and SPAs:&lt;/strong&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;code&gt;Static Websites&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Static websites&lt;/strong&gt; are the website in which the content of the website does not change very often or does not change at all. &lt;/p&gt;

&lt;p&gt;And it is the same for every user, for the time of the day, and the time zone. &lt;/p&gt;

&lt;p&gt;Static websites don't usually need any database design and are good for cases when there are fewer pages and very few update cycles.  To build a static website you just need to have HTML, CSS, and JavaScript knowledge.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Dynamic Websites&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;On other hand, &lt;strong&gt;dynamic websites&lt;/strong&gt; content can change very often, based on its users, timezone, etc. To develop a dynamic website, you necessarily need to have a backend and a database design, because Dynamic websites are mostly database-driven. &lt;/p&gt;

&lt;p&gt;To build a dynamic website you would need to have a fair amount of backend knowledge as well along with HTML, CSS, and JS because mostly all the content is server-rendered and you have to use some server scripting language like node.js, PHP, .Net, or Python to develop and fill the webpage with the content. It is not very much popular and in use nowadays because of SPAs.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Single Page Applications&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SPAs&lt;/strong&gt; or &lt;strong&gt;Single Page Applications&lt;/strong&gt; are the modern ways of developing a web application that gives users the app ecosystem kind of feel and it does not load content from the server on each page load. &lt;/p&gt;

&lt;p&gt;SPAs are popular and in high demand, because they have the ability of dynamic websites and are easy to build like static websites. Popular frameworks that help you develop SPAs are React.js, Angular,.js, Vue.js, and Svelte, etc.&lt;/p&gt;

&lt;p&gt;But it should also be noted that static websites are cheaper to build and faster in performance than dynamic websites or SPAs, that's why it is very important to understand the requirement of the project and then decide what kind of approach we should have for our next project. &lt;/p&gt;

&lt;p&gt;As a beginner it can be confusing for you to decide what to choose for your next project, should it be a static website or a dynamic one. &lt;/p&gt;

&lt;p&gt;Now, you can decide it better when you have a clear idea about the requirement of the project. Try to find out the answers to the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you need to have login functionality? If Yes: Choose SPA&lt;/li&gt;
&lt;li&gt;Is the data going to change more often? If Yes: Choose SPA.&lt;/li&gt;
&lt;li&gt;Are there chances of adding more pages and functionalities in near future? If Yes: Choose SPA.&lt;/li&gt;
&lt;li&gt;It's going to be just a simple landing page of the company or a portfolio - Choose Static Website.&lt;/li&gt;
&lt;li&gt;You need an e-commerce kind of feature: Choose SPA.
These are some of the scenarios but do give some time before starting your project, and very clearly understand the project requirements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#popular-javascript-frameworks-and-libraries"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Popular JavaScript Frameworks and Libraries:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;So, you have taken all the requirements and you came to the conclusion that you would have to develop a Single Page Application for your next project then it's time to learn some popular JavaScript frameworks and libraries. &lt;/p&gt;

&lt;p&gt;My personal preference is React.js and of course, you should try and test yourself all the options available and choose the one which you like the most. &lt;/p&gt;

&lt;p&gt;If you want to learn React.js, it's good to have a look at the  &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;React.js official documentation&lt;/a&gt;  once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#application-programming-interface-api-integrations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Application Programming Interface (API) Integrations:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;As a frontend developer, you will have to connect with the backend team and get the APIs for your SPA. An API connects your frontend with the backend and the database for the data that the user needs to see and interact with. &lt;/p&gt;

&lt;p&gt;It would be your job role as a frontend developer to integrate different types of APIs to your frontend, e.g. if the user wants to send some details about something maybe his/her profile info, then you need to connect a proper API to do that, and then to show the same data back to the user on the profile page, you would need to connect another API. &lt;/p&gt;

&lt;p&gt;In the same way, you will have to link all the pages and actions of your application with the backend with the help of APIs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm-and-yarn"&gt;
  &lt;/a&gt;
  &lt;strong&gt;NPM and Yarn:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;When you start working on SPAs, there will be a lot of dependencies that your frontend code will require, and to manage all that, you have npm and yarn. &lt;/p&gt;

&lt;p&gt;NPM is short for Node Package Manager, it helps you manage packages used in your project. &lt;/p&gt;

&lt;p&gt;It keeps an eye on the version number of the packages in use and even the dependencies of the packages that you use in your project. &lt;/p&gt;

&lt;p&gt;Both NPM and Yarn have the same purpose, it is debatable which one is better than the other, but basic idea is, you should use only one of the two and you should have a basic understanding of the two. &lt;/p&gt;

&lt;p&gt;To find out which packages are being used by your project, open package.json inside your project and you will see the list of package dependencies and the versions of those packages used in your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learn-how-to-use-browser-dev-tools"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Learn how to use browser dev tools:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;As a frontend developer, regardless of your experience level, you will need to use your browser dev tools, for inspecting your website elements, debugging issues, and fixing UI-related problems. &lt;/p&gt;

&lt;p&gt;Browser dev tools would be your friend in all scenarios. It would be a plus point for you if you learn to use dev tools efficiently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;As a final note, frontend development is a very promising career for a developer and opportunities are endless. Once you get a good hold of the web frontend technologies and have created a couple of projects using JavaScript Frameworks, try learning technologies that help you build the frontend for the mobile applications. &lt;/p&gt;

&lt;p&gt;The web keeps changing with new technologies so, it is essential to keep yourself up-to-date with the latest trends and technologies, and never stop learning. &lt;/p&gt;

&lt;p&gt;It's good to have your fundamentals clear, even when you have gained a bit of experience so that you can grasp any new technology that comes in your way easily.&lt;/p&gt;

&lt;p&gt;That is it for now, until next time.&lt;/p&gt;

&lt;p&gt;Keep learning, keep coding...&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

&lt;p&gt;Lalit&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>career</category>
      <category>development</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Array.forEach() Method  in JavaScript 🚀</title>
      <author>Shubham Jadhav</author>
      <pubDate>Tue, 14 Sep 2021 05:18:39 +0000</pubDate>
      <link>https://dev.to/dev_shubham/array-foreach-method-in-javascript-4k9d</link>
      <guid>https://dev.to/dev_shubham/array-foreach-method-in-javascript-4k9d</guid>
      <description>&lt;p&gt;How can we iterate array items through a loop in JavaScript ?? &lt;/p&gt;

&lt;p&gt;If you know the above question answer then give the answer in comment section. &lt;/p&gt;

&lt;p&gt;Today we are learning the most important method in JavaScript. &lt;/p&gt;

&lt;p&gt;Array.forEach();&lt;/p&gt;

&lt;p&gt;• What is Array.forEach() &lt;br&gt;
   method ?&lt;br&gt;
 =&amp;gt; In which method we can &lt;br&gt;
   iterate array items through &lt;br&gt;
   a loop it's called &lt;br&gt;
   Array.forEach() method. &lt;/p&gt;

&lt;p&gt;• Syntax of Array.forEach()&lt;br&gt;
 =&amp;gt; arr.forEach((item, index) &lt;br&gt;
    =&amp;gt; { // code here.. })&lt;/p&gt;

&lt;p&gt;This method return a callback function.&lt;/p&gt;

&lt;p&gt;• Example &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2eGWGUBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/408p0t55ft6dtm8rrp8z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2eGWGUBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/408p0t55ft6dtm8rrp8z.jpg" alt="example 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;• Explanation &lt;br&gt;
  (1) Let's create an array and give any name as per you but I gave 'arr' as name. &lt;br&gt;
  (2) Now, I used here in next step arr.forEach() method. &lt;br&gt;
  (3) As we know this method return a callback function and this has two parameters 'item' and 'index'as shown above example. &lt;br&gt;
  (4) The forEach method iterate all items like a for loop one by one. &lt;/p&gt;

&lt;p&gt;• Advantages of forEach() method&lt;br&gt;
  (1) It has a clear syntax. &lt;br&gt;
  (2) the forEach method keeps the variables from the callback function bound to the local scope&lt;br&gt;
  (3) The forEach method is less error prone. &lt;/p&gt;

&lt;p&gt;🙏 Thank you for reading... &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A career in web development in 2021</title>
      <author>ShahiLalit</author>
      <pubDate>Tue, 14 Sep 2021 05:11:20 +0000</pubDate>
      <link>https://dev.to/shahilalit/a-career-in-web-development-in-2021-lan</link>
      <guid>https://dev.to/shahilalit/a-career-in-web-development-in-2021-lan</guid>
      <description>&lt;p&gt;&lt;strong&gt;Should I choose Web Development as my career in 2021?&lt;/strong&gt; I bet most of the college students must be asking this question to themselves and to their seniors who are working at some company.&lt;/p&gt;

&lt;p&gt;I won't waste your much time and tell it straight away -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Yes! you should choose web development as your career in 2021".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want a job that gives you a decent salary and a skill that you can use to create other income sources, then&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Yes! you should choose web development as your career in 2021".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You only need 3 things, to begin with, web development:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Laptop
2. Internet
3. Will to learn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is all anyone needs to start learning web development. You have to give 1 month to it.&lt;/p&gt;

&lt;p&gt;And I guarantee you that, after one month, you would be able to understand how you create a website from scratch.&lt;/p&gt;

&lt;p&gt;Web development is divided into two parts-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Frontend Development
- Backend Development
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#frontend-development"&gt;
  &lt;/a&gt;
  Frontend Development
&lt;/h3&gt;

&lt;p&gt;In front-end development, you would work on the visible part of any website or application. &lt;br&gt;
It means as a front-end developer, you would work on creating the User Interface (UI).&lt;br&gt;
And integrate the Application Programming Interfaces (a.k.a APIs) to complete the user interaction.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#backend-development"&gt;
  &lt;/a&gt;
  Backend Development
&lt;/h3&gt;

&lt;p&gt;In backend development, you would work on creating APIs, which help users to see the data or the content displayed on the frontend UI. &lt;br&gt;
In the backend development, your code adds utility to everything the front-end developer develops. &lt;br&gt;
You would also be responsible for managing the databases for saving the data needed for the website to run and display content.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-interests-you-more"&gt;
  &lt;/a&gt;
  What Interests you more?
&lt;/h3&gt;

&lt;p&gt;So, before starting your web development course you can think of your interest, what would interests you more -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Is it working on the design stuff and developing the UI components for the websites and applications?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Or is it working on the data part, creating the APIs, working with databases &amp;amp; servers?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, that you have decided to do learn web development, and decided to give your 1 month.&lt;/p&gt;

&lt;p&gt;and you want to go into the frontend development path, I would suggest you divide your 1 month into 1-1-2 weeks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- 1 week to learn HTML. 
- 1 week to learn CSS, &amp;amp; 
- 2 weeks to learn JavaScript.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is all you need to start.&lt;/p&gt;

&lt;p&gt;Now, once you get comfortable with the above three, you should start looking into popular JavaScript frameworks and libraries.&lt;/p&gt;

&lt;p&gt;Here is a  &lt;a href="https://insights.stackoverflow.com/survey/2021/#section-most-popular-technologies-web-frameworks"&gt;survey by StackOverflow&lt;/a&gt;  for the popular web frameworks and libraries. According to it, React.js is the most popular one, so you could try learning it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ShPgiZVh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631028087977/sQnoWbkvR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ShPgiZVh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631028087977/sQnoWbkvR.png" alt="Screenshot 2021-09-07 at 8.40.34 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you prefer backend development, then you have a long list of languages that you could learn to start your backend development journey.&lt;/p&gt;

&lt;p&gt;Some of the popular languages out there for backend development are Python, Node.js, Java, .Net, PHP, Ruby, etc.&lt;/p&gt;

&lt;p&gt;If we look at  &lt;a href="https://insights.stackoverflow.com/survey/2021/#section-most-popular-technologies-programming-scripting-and-markup-languages"&gt;another survey by StackOverflow&lt;/a&gt;  for the popular languages used by developers, JavaScript is selected as the most popular language out of all.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jd4GHoOm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631028065996/2olmzHNPN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jd4GHoOm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631028065996/2olmzHNPN.png" alt="Screenshot 2021-09-07 at 4.11.50 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, the main reason for JavaScript being the most popular language is -&lt;br&gt;
Once you learn JavaScript fundamentals,  you would be able to work on the frontend as well as on the backend development.&lt;/p&gt;

&lt;p&gt;So, that being said, you are still free to use any programming language to learn backend development. And even once you learn JavaScript ( JS ) it is not set in stone that you have to use JS only for the backend development.&lt;br&gt;
When you learn a programming language and the basic fundamental concepts of programming, you would be able to pick up any language out there if you are interested.&lt;/p&gt;

&lt;p&gt;For starting a career as a backend developer you must learn:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Data structure and algorithm basics.&lt;/li&gt;
&lt;li&gt;Any programming language of your choice, be it Python, Java, or JavaScript.&lt;/li&gt;
&lt;li&gt;A framework suitable to the programming language of your choice, to make your life easier in developing the APIs.&lt;/li&gt;
&lt;li&gt;Basics of databases.&lt;/li&gt;
&lt;li&gt;Hosting your application and handling servers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As a final takeaway, I’d just like to say that in addition to inculcating the required skills, to be successful as a frontend or a backend developer, you need to be dedicated, patient, and hard-working.&lt;/p&gt;

&lt;p&gt;In the end, I would like to emphasize that &lt;strong&gt;"Web Development in 2021 is still a good choice to choose as a career"&lt;/strong&gt;, but to grow with the world, you will have to learn and evolve yourself with new technologies in trend and high demand.&lt;/p&gt;

&lt;p&gt;Later, we will discuss more deeply what to learn specifically in frontend and backend development and how to grow as a Full Stack Developer from a Frontend or a Backend Developer.&lt;/p&gt;

&lt;p&gt;Till then be safe &amp;amp; keep coding...&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

&lt;p&gt;Lalit&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>codenewbie</category>
      <category>career</category>
    </item>
    <item>
      <title>Create a responsive popup modal with CSS &amp; JavaScript</title>
      <author>Michael Burrows</author>
      <pubDate>Tue, 14 Sep 2021 05:10:05 +0000</pubDate>
      <link>https://dev.to/michaelburrows/create-a-responsive-popup-modal-with-css-javascript-2l88</link>
      <guid>https://dev.to/michaelburrows/create-a-responsive-popup-modal-with-css-javascript-2l88</guid>
      <description>&lt;p&gt;A popup modal is a UI element that appears in the foreground of a website. They’re usually triggered by the user allowing them to view more information or complete an action without having to navigate to another URL. In this tutorial we’ll be creating a responsive popup modal styled with CSS and JavaScript functionality.&lt;/p&gt;

&lt;p&gt;Let’s get start by creating the required HTML markup:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"demo-modal"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modal"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"dialog"&lt;/span&gt; &lt;span class="na"&gt;tabindex=&lt;/span&gt;&lt;span class="s"&gt;"-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"model-inner"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modal-header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Hello World&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modal-close"&lt;/span&gt; &lt;span class="na"&gt;data-id=&lt;/span&gt;&lt;span class="s"&gt;"demo-modal"&lt;/span&gt; &lt;span class="na"&gt;aria-label=&lt;/span&gt;&lt;span class="s"&gt;"Close"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="ni"&gt;&amp;amp;times;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
      Natus earum velit ab nobis eos. Sed et exercitationem voluptatum omnis
      dolor voluptates. Velit ut ipsam sunt ipsam nostrum. Maiores officia
      accusamus qui sapiente. Dolor qui vel placeat dolor nesciunt quo dolor
      dolores. Quo accusamus hic atque nisi minima.
    &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modal-open"&lt;/span&gt; &lt;span class="na"&gt;data-id=&lt;/span&gt;&lt;span class="s"&gt;"demo-modal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Display Modal&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All of the content within the &lt;code&gt;demo-modal&lt;/code&gt; is optional and included for the purposes of this tutorial, you could replace with whatever content you like when using this on a real website. There is also a button to trigger the popup and display of the model.&lt;/p&gt;

&lt;p&gt;Note: We’re building this in a way that would allow us to include multiple modals in a single page. We do this by using matching &lt;code&gt;id&lt;/code&gt; / &lt;code&gt;data-id&lt;/code&gt; attributes on each modal and the corresponding open and close buttons.&lt;/p&gt;

&lt;p&gt;Next we’ll tackle the JavaScript functionality starting with an event listener for when users click on the open and close buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;modal-open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;modal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;openModal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;modal-close&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;closeModal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code detects if the user clicked either the open or close button (based on the button class), then triggers the relevant function. We’ll start with the &lt;code&gt;openModal&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;openModal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;overflow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;keydown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;escClose&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;overlay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;overlay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;modal-overlay&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;overlay&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And for the &lt;code&gt;closeModal&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;closeModal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;overflow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;keydown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;escClose&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;modal-overlay&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may have noticed an &lt;code&gt;escClose&lt;/code&gt; event listener in the previous two functions. This is so the the modal can be closed by pressing the escape key, here’s the code for that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;escClose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;closeModal&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each key on a keyboard has it’s own unique &lt;code&gt;keyCode&lt;/code&gt; for the “escape” key it’s &lt;code&gt;27&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That’s all for the JavaScript we can now move onto the CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.modal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.modal&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;open&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.model-inner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.modal-header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#modal-overlay&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here’s what the finished popup modal looks like once complete:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_vi6HpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3rrgab0u61pz2qhmxljp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_vi6HpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3rrgab0u61pz2qhmxljp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s all for this tutorial. By following along you’ll have learnt how to build a modal popup without having to rely on any external JavasScript plugins or libraries. A full working version of this modal can be found on &lt;a href="https://codepen.io/w3collective/pen/jOBvRgY"&gt;CodePen&lt;/a&gt; and the source code is also available on &lt;a href="https://github.com/w3collective/responsive-popup-modal"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Overcoming the Fear of LOCO(Lines of Coding)</title>
      <author>Riean Esteves</author>
      <pubDate>Tue, 14 Sep 2021 04:26:17 +0000</pubDate>
      <link>https://dev.to/rieesteves/overcoming-the-fear-of-loco-lines-of-coding-2hjh</link>
      <guid>https://dev.to/rieesteves/overcoming-the-fear-of-loco-lines-of-coding-2hjh</guid>
      <description>&lt;p&gt;A little more than 250 lines under font-size of 18pxl,the worse fear rather nightmare for beginners. And if there is a comma or a semi-colon missing, the slightest error of spelling and the whole program goes for a toss. Fear of LOCO (Lines of coding)/ Coding is not exactly a fear but a mindset which sets you feared.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--znvNjyVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f5begpmyto35j8ynisc7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--znvNjyVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f5begpmyto35j8ynisc7.jpg" alt="FEAR of a huge program"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;strong&gt;Attributes, arguments ,class ,method, objects ,function, parameter's and more....&lt;/strong&gt;&lt;/em&gt; and end-list list of these technical jargons. How frightening are these to hear and understand initially; but gradually with time one can &lt;em&gt;ACE&lt;/em&gt; it and code with &lt;strong&gt;EASE!&lt;/strong&gt; These are building blocks of a code and structure the program efficiently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fear-of-locolines-of-coding"&gt;
  &lt;/a&gt;
  FEAR of LOCO(Lines of Coding)!!!
&lt;/h3&gt;

&lt;p&gt;As a beginner a new IDE( &lt;em&gt;text editors for coding&lt;/em&gt;) with some fancy language and amazing colors fascinating at first as complexity of code increases it increase the fear!&lt;br&gt;
 &lt;em&gt;Now this fear, is it &lt;strong&gt;Fear of length of code? Confused with concepts? thinking its out of ones capability! afraid to mess up the hard work? tendency to error up as having knowledge of too many languages(java, c, python, html, etc)&lt;/strong&gt; whatever the option the bottom line thereafter lies happiness when the code successfully runs at the wink of your eye!&lt;/em&gt; This lost happiness can be easily found if this minor fear is over-come. Coding is not an easy task like having a &lt;em&gt;piece of cake&lt;/em&gt; and one should be in the attitude of &lt;em&gt;"Oh ! This is not my cup of tea !"&lt;/em&gt; , this is where the fear begins in us.&lt;/p&gt;




&lt;p&gt;The Question now arises : &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-we-overcome-"&gt;
  &lt;/a&gt;
  How do we overcome ????
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.Keep a positive attitude and  well planned structural idea in mind&lt;/strong&gt;&lt;br&gt;
Before one starts to code keep a rough structure jotted down. This will help to keep a track of your work pending/done , also  it will help in building up your self confidence and esteem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Learn coding from Good Resources&lt;/strong&gt;&lt;br&gt;
With Online being  better preferred option rather than the tradition books learning ,there are various open source learning platform's that help you get better in this field&lt;br&gt;
As a beginner / even later these are some sights I find very helpful to learn new ways/styles to clear a concept and to tackle a statement.( &lt;em&gt;*The resources are attached at the end&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Master one Language at a time.&lt;/strong&gt;&lt;br&gt;
Don't be the jack of all and master on none, learn one language either &lt;a href="https://www.w3schools.com/cpp/default.asp"&gt;C++&lt;/a&gt; , &lt;a href="https://www.w3schools.com/java/default.asp"&gt;Java&lt;/a&gt; , &lt;a href="https://www.w3schools.com/python/default.asp"&gt;Python&lt;/a&gt; ;or whichever you feel easy the best. &lt;br&gt;
No one is 100% perfect to learn everything in a short span of time and remember it at the wink of an eye . However there is no harm in re-watching videos or reading articles again to understand a concept. The outcome should be whatever the problem may be one has an ideal technical logic in-order to come up with a solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.Don't Worry about the near future&lt;/strong&gt;&lt;br&gt;
Coders usually tend to worry and question themselves with &lt;em&gt;What If?!&lt;/em&gt; This attitude is not very heathy always .Thinking about the future whether a code runs or no will affect one currently typing and having a clear idea set also one can tend to end up with multiple silly typo-errors. It might lead to a break in the flow of the process which eventually can create a mess in your code so &lt;em&gt;Just stay calm and keep typing!!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.Begin with Small Steps&lt;/strong&gt;&lt;br&gt;
However experienced one may be , in whichever aspect a small start has always lead to a wonderful turnover. Similarly with coding; Don't just get super-fascinated after learning some concepts and jump to a conclusion you know it all! and try doing something out of hand out of thought and get caught up with fear of LOCO. &lt;br&gt;
Start small by this I mean break the complex problem in simple easy solvable steps &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qj8TXwPK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xx78zs5fue5jm8eys0uo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qj8TXwPK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xx78zs5fue5jm8eys0uo.png" alt="Steps "&gt;&lt;/a&gt;&lt;br&gt;
click&lt;a href="https://nickjanetakis.com/blog/breaking-down-problems-is-the-number-1-software-developer-skill"&gt;here to read more&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.Google the best companion&lt;/strong&gt;&lt;br&gt;
You know the best answers to the solution is Ok Google!!&lt;br&gt;
Searching and learning via google is no harm but yes one should know the subject and research more and not just 'Ctrl + C' &amp;amp; 'Ctrl + V'. but understand and add you own twist in it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.Reach Out&lt;/strong&gt;&lt;br&gt;
Reach out to the professional/ your peers.&lt;br&gt;
*Teachers/ Professors (School /college/University)&lt;br&gt;
*Peers&lt;br&gt;
*community learning &lt;br&gt;
You lend a hand for help and then reach out to those who seek. A best two way learning process and most helpful way to overcome fear of coding.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Coding everyday helps the LOCO fear go Away!&lt;/strong&gt;&lt;br&gt;
Yes indeed, a small amount of coding daily helps you get a better in logical thinking as well as increases your typing speed. Some may find it funny with a bustling busy schedule &lt;em&gt;how can I code everyday?&lt;/em&gt; But if one gets to this practice, there is no fear that can overpower your will power. &lt;/p&gt;




&lt;p&gt;Lastly, LOCO fear isn't a harm ; well unless you overstress, and overthink about the outcome in future . Lines of coding gradually increases with experience and professional status  or work load  so.. break you work , and code with Ease. Remember to overcome LOCO you need to defeat he fear in your mind your hand will automatically work smoothly. As beginners just be a master of one and not a jack of all; it eventually helps you with clear idea of usage of tags parameters etc in your code. &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Links to the online resources
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8bGVkgdg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eptqoii4sgva4b9n99op.jpeg" alt="link1"&gt;&lt;/a&gt;  &lt;a href="https://www.codecademy.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxKkT2IO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4pj3f8m8jrw8f8xppdb.png" alt="link2"&gt;&lt;/a&gt;   &lt;a href="https://github.com/"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oqs3r6Ce--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqgungcyadgruuxaedix.jpg" alt="link3"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codereview</category>
      <category>coding</category>
      <category>challenge</category>
    </item>
    <item>
      <title>Building a Virtual Conference Ticket with Begin, AWS &amp; Puppeteer</title>
      <author>🅲🅰🆁🆃🅴🆁</author>
      <pubDate>Tue, 14 Sep 2021 03:44:47 +0000</pubDate>
      <link>https://dev.to/crtr0/building-a-virtual-conference-ticket-with-begin-aws-puppeteer-hgk</link>
      <guid>https://dev.to/crtr0/building-a-virtual-conference-ticket-with-begin-aws-puppeteer-hgk</guid>
      <description>&lt;p&gt;This year, inspired by the folks at Next.js Conf, I decided to build &lt;a href="https://2021.cascadiajs.com/tickets/140"&gt;virtual tickets&lt;/a&gt; for my conference &lt;a href="https://2021.cascadiajs.com"&gt;CascadiaJS&lt;/a&gt;. It's a fun feature for attendees because they get to help spread the word about an event they're excited about.&lt;/p&gt;

&lt;p&gt;Here is the user flow for attendees choosing to create a virtual ticket:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;They click a link to create the virtual ticket.&lt;/li&gt;
&lt;li&gt;This sends them to Github for an OAuth flow.&lt;/li&gt;
&lt;li&gt;On success, Github returns with OAuth code.&lt;/li&gt;
&lt;li&gt;Web app stores success marker in DB for this attendee.&lt;/li&gt;
&lt;li&gt;Web app fires event to generate the virtual ticket image.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's walk through each of these steps!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#0-using-begin-to-build-on-aws"&gt;
  &lt;/a&gt;
  0. Using Begin to build on AWS
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://github.com/cascadiajs/cascadiajs-2021"&gt;CascadiaJS 2021 web app&lt;/a&gt; is built on a framework called &lt;a href="http://arc.codes"&gt;Arc&lt;/a&gt; and hosted on AWS via a new platform called &lt;a href="http://begin.com"&gt;Begin&lt;/a&gt;. The combination of Arc and Begin make it easy to build a full-stack web application that takes full advantage of AWS services like Lambda, DynamoDB and SNS without 99% of the boilerplate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-creating-the-github-oauth-link"&gt;
  &lt;/a&gt;
  1. Creating the Github OAuth link.
&lt;/h2&gt;

&lt;p&gt;First, you'll need to go to Github and &lt;a href="https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app"&gt;create an OAuth application&lt;/a&gt;. Once you do this, you'll be provided with a &lt;code&gt;Client ID&lt;/code&gt; and you can create a &lt;code&gt;Client Secret&lt;/code&gt;. Store both of these values in your &lt;a href="https://learn.begin.com/basic/state/env"&gt;environment variables&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Building the link to kick-off a Github OAuth flow is as simple as constructing the URL below with your &lt;code&gt;Client ID&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="https://github.com/login/oauth/authorize?client_id=${ clientID }"&amp;gt;Get Added to Directory&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-this-sends-them-to-github-for-an-oauth-flow"&gt;
  &lt;/a&gt;
  2. This sends them to Github for an OAuth flow.
&lt;/h2&gt;

&lt;p&gt;When the user lands on this page, they'll see the name of your Github OAuth app and the logo you've uploaded. Make sure these are things that folks will trust. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-on-success-github-returns-with-oauth-code"&gt;
  &lt;/a&gt;
  3. On success, Github returns with OAuth code.
&lt;/h2&gt;

&lt;p&gt;Once the user authorizes this connection, Github will redirect to the &lt;code&gt;Authorization callback URL&lt;/code&gt; that you will have configured and will pass along a &lt;code&gt;code&lt;/code&gt; as a query parameter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-web-app-stores-success-marker-in-db-for-this-attendee"&gt;
  &lt;/a&gt;
  4. Web app stores success marker in DB for this attendee.
&lt;/h2&gt;

&lt;p&gt;In the HTTP function that handles the OAuth callback, we use the code passed in the request to &lt;a href="https://github.com/cascadiajs/cascadiajs-2021/blob/main/src/http/get-home-000view/github.js"&gt;retrieve the public information&lt;/a&gt; for this Github user. We then update the attendees ticket record to store their Github username and avatar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let info = await github(req)
await data.set({ table: 'tickets', ...ticket, github: info.login, avatar: info.avatar })
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-web-app-fires-event-to-generate-the-virtual-ticket-image"&gt;
  &lt;/a&gt;
  5. Web app fires event to generate the virtual ticket image.
&lt;/h3&gt;

&lt;p&gt;Finally, the stuff you've &lt;em&gt;really&lt;/em&gt; been waiting for: generating dynamic images!&lt;/p&gt;

&lt;p&gt;First, since this image generation process can take time, I chose to kick-off an asynchronous job using &lt;a href="https://docs.begin.com/en/event-functions/provisioning"&gt;Arc events&lt;/a&gt; which are sugar for more easily using AWS SNS. This way the HTTP functions returns to the user immediately, while imagine generation happens in the background.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const name = 'ticket-shared'
const payload = { number: ticket.number }
await arc.events.publish({ name, payload })
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The event function, when invoked, is provided with the unique ticket number for this attendee. It uses this number to generate the image of virtual ticket:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let file = await screenshot({ number })
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's dig into the &lt;code&gt;screenshot&lt;/code&gt; module, since that's where the magic happens:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const chromium = require('chrome-aws-lambda')
require('puppeteer-core')

function getBaseUrl() {
  let url
  if (process.env.NODE_ENV === 'testing') {
      url = 'http://localhost:3333'
  }
  else  {
      url = `https://${ process.env.NODE_ENV === 'staging' ? 'staging.' : '' }2021.cascadiajs.com`
  }
  return url
}

module.exports = async function screencap({ number }) {
    let browser
    let baseUrl = getBaseUrl()
    // set-up headless browser
    let height = 628
    let width = 1200
    let deviceScaleFactor = 1
    try {
      browser = await chromium.puppeteer.launch({
        args: chromium.args,
        defaultViewport: {
          height, width, deviceScaleFactor
        },
        executablePath: await chromium.executablePath,
        headless: chromium.headless,
        ignoreHTTPSErrors: true,
      })
      let page = await browser.newPage()
      await page.goto(`${ baseUrl }/tickets/${ number }?social`)
      const file = await page.screenshot()
      await browser.close()
      return file
    } finally {
      if (browser) {
        await browser.close()
      }
    }
  }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This module uses &lt;code&gt;chrome-aws-lambda&lt;/code&gt; and &lt;code&gt;puppeteer-core&lt;/code&gt; to fire up a headless Chrome browser and navigate to a webpage that dynamically builds a page for the &lt;a href="https://2021.cascadiajs.com/tickets/140?social"&gt;attendee's virtual ticket&lt;/a&gt;. It then takes a screenshot of this webpage and returns the buffer of bytes.&lt;/p&gt;

&lt;p&gt;This is a good time to note that you want to configure the Lambda associated with this event handler to be pretty beefy and not to timeout too quickly. You can accomplish by setting properties in &lt;code&gt;arc.config&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@aws
runtime nodejs14.x
timeout 90
memory 3008
@arc
shared false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;shared false&lt;/code&gt; command tells Arc not to build and include code and dependencies from the applications shared folder. This is really important because Lambda has a hard 250MB limit on code/deps and &lt;code&gt;chrome-aws-lambda&lt;/code&gt; and &lt;code&gt;puppeteer-core&lt;/code&gt; gobble up a ton of that space.&lt;/p&gt;

&lt;p&gt;We then save this generated screen to s3:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const s3 = new AWS.S3()
    let fileName = `ticket-${ number }.png`
    await s3
      .putObject({
        Bucket: process.env.ARC_STATIC_BUCKET,
        Key : process.env.ARC_STATIC_PREFIX + '/' + fileName,
        ContentType: 'image/png',
        Body: file,
        ACL: 'public-read',
      })
      .promise()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;ARC_STATIC_BUCKET&lt;/code&gt; and &lt;code&gt;ARC_STATIC_PREFIX&lt;/code&gt; are automatically available in your app's environment variables thanks to Begin.&lt;/p&gt;

&lt;p&gt;The last step is to attach this beautiful image to the attendee's custom ticketing page. If you go to &lt;a href="https://2021.cascadiajs.com/tickets/140"&gt;my ticketing page&lt;/a&gt; and view the source you'll see &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags for Open Graph and Twitter image URLs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;meta property="og:image" content="${ socialUrl }" /&amp;gt;
    &amp;lt;meta name="twitter:image" content="${ socialUrl }"&amp;gt;
    &amp;lt;meta name="twitter:card" content="summary_large_image"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Phew! I'm sure I skipped a few steps, but you get the gist of how this works and find this helpful! The source code for the CascadiaJS web app can be found on Github at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cascadiajs/cascadiajs-2021"&gt;https://github.com/cascadiajs/cascadiajs-2021&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>node</category>
      <category>webdev</category>
      <category>serverless</category>
    </item>
  </channel>
</rss>
