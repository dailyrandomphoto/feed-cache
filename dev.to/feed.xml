<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 5 Visual Studio Code Extensions for Flutter</title>
      <author>Pankaj Das</author>
      <pubDate>Mon, 13 Dec 2021 13:07:24 +0000</pubDate>
      <link>https://dev.to/pankajdas0909/top-5-visual-studio-code-extensions-for-flutter-5082</link>
      <guid>https://dev.to/pankajdas0909/top-5-visual-studio-code-extensions-for-flutter-5082</guid>
      <description>&lt;p&gt;Visual Studio Code is an IDE used for Flutter App development. So, in this article, we will see the top 5 V.S. code extensions for Flutter. There are many extensions you can use to improve productivity in Flutter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-5-vs-code-extensions-for-flutter"&gt;
  &lt;/a&gt;
  Top 5 VS Code extensions for Flutter
&lt;/h2&gt;

&lt;p&gt;As a developer, you need productive tools and extensions to improve workplace productivity and efficiency. As Flutter users grow significantly, there is a huge collection of plugins and extensions on the market that can help developers be more productive. Now let’s take a look at some extensions that you can use to improve your productivity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-pubspec-assist"&gt;
  &lt;/a&gt;
  1) Pubspec Assist:
&lt;/h3&gt;

&lt;p&gt;Every Flutter project has a pubspec.yaml file. This file contains the dependencies needed to develop your project or app. The Pubspec.yaml file contains the package version, fonts, assets or images. The Pubspec.yaml file is a very important file. Even one wrong interval will result in an error and the package will not install properly. Pubspec Assist is a very useful Visual Studio Code extension. It allows developers to add dependencies &amp;amp; development dependencies to Dart and Flutter project’s pubspec.yaml easily without leaving the editor. Starting from Dart version&amp;gt; 2.5, this feature is available by default.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-error-lens"&gt;
  &lt;/a&gt;
  2) Error lens
&lt;/h3&gt;

&lt;p&gt;Error lenses are an important addition to VS Code. When developing an app or project, I get errors that need to be fixed, such as missing semicolons or brackets. Errors are usually displayed at the bottom of the console. The console lists many errors in the console. Therefore, the task of ascertaining which particular line failure is occurring and fixing the problem can be difficult and time-consuming.&lt;/p&gt;

&lt;p&gt;To make troubleshooting easier and save more time, there is an extension called Error Lens. If an error occurs, the error lens immediately highlights the error in red at the end of that particular line. This helps us know what mistakes we made and can fix them at the moment, saving us a lot of time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-gitlens-git-supercharged"&gt;
  &lt;/a&gt;
  3) GitLens — Git supercharged
&lt;/h3&gt;

&lt;p&gt;GitLens is an open-source extension for Visual Studio Code that you can use in App development. It will help you in understanding the code better. You can quickly see who changed a line or block of code, why, and when. Go back in history and learn how and why your code has evolved. Take a quick look at the history and evolution of the codebase.&lt;/p&gt;

&lt;p&gt;GitLens is powerful, feature-rich and highly customizable to your needs. If the cord lens is annoying, or if the current conviction is annoying, that’s okay. Turn it off immediately or use GitLens’s interactive settings editor to change its behaviour.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-awesome-flutter-snippets"&gt;
  &lt;/a&gt;
  4) Awesome Flutter Snippets
&lt;/h3&gt;

&lt;p&gt;Awesome Flutter Snippets is a collection of Flutter classes and methods that are used commonly. Developers can increase their speed of development by terminating the boilerplate code associated with the widget creation. For example, you can type the shortcut streamBldr and singleChildSV instead of using Widgets such as StreamBuilder and SingleChildScrollView. The features of Awesome Flutter Snippets are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It will speed up development the development process.&lt;/li&gt;
&lt;li&gt;Also, it eliminates the boilerplate code.&lt;/li&gt;
&lt;li&gt;It supports complex widgets such as Custom Clipper and Custom Paint.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-bloc"&gt;
  &lt;/a&gt;
  5) bloc
&lt;/h3&gt;

&lt;p&gt;VS Code supports the Bloc library. Also, it provides tools to effectively create blocks and cubits for Flutter and Angular Dart apps. You can install bloc from the VS Code Marketplace or you can perform a search in VS Code. To activate a command, launch the Command Palette (View&amp;gt; Command Palette) and enter the command name or right-click the directory where you want to create the block/cubit and select the command from the context menu.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bloc: New Bloc – This command will generate a new Bloc.&lt;/li&gt;
&lt;li&gt;Cubit: New Cubit – This command will generate a new Cubit.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;Thanks for remaining till the end of the article. We hope you have enjoyed reading this article. To summarize, in this article, we have discussed the top 5 V.S. code extensions for Flutter. Do let us know your feedback/comments on the same.&lt;/p&gt;

&lt;p&gt;Flutter agency is the &lt;a href="https://flutteragency.com/"&gt;best Flutter App development company&lt;/a&gt; with a highly experienced team of Flutter developers. We promise to deliver the best application developed in Flutter, which will excel in the market. Also, Flutter Agency is a portal full of excellent resources like Flutter Widget Guide, Flutter Projects, Code libs, etc. So, contact us for your next project.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>javascript</category>
      <category>vscode</category>
      <category>extension</category>
    </item>
    <item>
      <title>⚠️ CRITICAL update for ParseJS/ParseTS! ⚠️</title>
      <author>Calin Baenen</author>
      <pubDate>Mon, 13 Dec 2021 12:46:12 +0000</pubDate>
      <link>https://dev.to/baenencalin/critical-update-for-parsejsparsets-4mpf</link>
      <guid>https://dev.to/baenencalin/critical-update-for-parsejsparsets-4mpf</guid>
      <description>&lt;p&gt;A &lt;a href="https://github.com/CalinZBaenen/ParseJS/commit/78ec5f7e7addeab9d9eca7c64be6b54025360d57"&gt;new commit&lt;/a&gt; to the &lt;a href="https://github.com/CalinZBaenen/ParseJS"&gt;ParseJS GitHub repository&lt;/a&gt; was made.&lt;/p&gt;

&lt;p&gt;It fixes a critical bug related to the output the function returned.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-intended-behavior"&gt;
  &lt;/a&gt;
  The intended behavior.
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;parse_string&lt;/code&gt; usually returns an array that contains either a length-one-&lt;code&gt;string&lt;/code&gt; (&lt;code&gt;char&lt;/code&gt;) or &lt;code&gt;symbol&lt;/code&gt;.&lt;br&gt;
A symbol is inserted into the returned array IF a symbol is found. - I.e. if you pass the arguments: &lt;code&gt;"test + test", ["test"]&lt;/code&gt; two &lt;code&gt;symbol&lt;/code&gt;s containing the description &lt;code&gt;test&lt;/code&gt; will be inserted.&lt;br&gt;
Otherwise, if a valid token isn't found, it will insert the current character&lt;/p&gt;

&lt;p&gt;So, all together, if you pass in &lt;code&gt;"test + test", ["test"]&lt;/code&gt;, you should (and WILL) get &lt;code&gt;[Symbol(test), ' ', '+', ' ', Symbol(test)]&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-bug"&gt;
  &lt;/a&gt;
  The bug.
&lt;/h2&gt;

&lt;p&gt;The bug is that "ghost" characters would be inserted into the output array if a token candidate didn't match the potential token in the string.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-visual-demonstration-of-the-bug"&gt;
  &lt;/a&gt;
  A visual demonstration of the bug.
&lt;/h2&gt;

&lt;p&gt;This is a before and after of the bug fix:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ojYyMGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvimn31jn9qvtozusbzn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ojYyMGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvimn31jn9qvtozusbzn.png" alt="Before update." width="880" height="306"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Xl6-a3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pz26ksz0g60d2lejev9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Xl6-a3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pz26ksz0g60d2lejev9.png" alt="After update." width="880" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
&lt;b&gt;&lt;/b&gt;&lt;center&gt;Thanks for your attention!&lt;br&gt;Cheers!&lt;/center&gt;
&lt;/h1&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>watercooler</category>
      <category>bugfix</category>
    </item>
    <item>
      <title>GITHUB CHEAT SHEET</title>
      <author>Nestor Solalinde</author>
      <pubDate>Mon, 13 Dec 2021 12:41:20 +0000</pubDate>
      <link>https://dev.to/manolosolalinde/github-cheat-sheet-3ifo</link>
      <guid>https://dev.to/manolosolalinde/github-cheat-sheet-3ifo</guid>
      <description>&lt;h1&gt;
  &lt;a href="#github-cheat-sheet"&gt;
  &lt;/a&gt;
  GITHUB CHEAT SHEET
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#starting-a-project"&gt;
  &lt;/a&gt;
  STARTING A PROJECT
&lt;/h2&gt;

&lt;p&gt;Forked projects or existing projects&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/GITHUB/manolosolalinde
git clone &amp;lt;url&amp;gt;
git config credential.helper store
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create remote repository&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/GITHUB/manolosolalinde
&lt;span class="nb"&gt;mkdir&lt;/span&gt; &amp;lt;reponame&amp;gt;
&lt;span class="c"&gt;# deprecated: curl -u 'manolosolalinde@gmail.com' -d '{"name":"'"${PWD##*/}"'"}' https://api.github.com/user/repos&lt;/span&gt;
&lt;span class="c"&gt;# token from https://github.com/settings/tokens&lt;/span&gt;
curl &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: token &amp;lt;GET FROM https://github.com/settings/tokens&amp;gt; "&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{
        "name": "'&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s1"&gt;'", 
        "description": "This is your first repository",
        "homepage": "https://github.com",
        "private": true,
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true
        }'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    https://api.github.com/user/repos
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"# TODO Readme"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start Local Repository and push first commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
git config credential.helper store
git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"first commit"&lt;/span&gt;
git remote add origin https://github.com/manolosolalinde/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;.git
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change local repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote show origin
git remote set-url origin https://github.com/manolosolalinde/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deleting-all-history"&gt;
  &lt;/a&gt;
  DELETING ALL HISTORY
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;localrepofolder&amp;gt;
&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; .git
Start Repository &lt;span class="o"&gt;(&lt;/span&gt;as above&lt;span class="o"&gt;)&lt;/span&gt;
git push &lt;span class="nt"&gt;-u&lt;/span&gt; &lt;span class="nt"&gt;--force&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deleting-a-full-remote-repo"&gt;
  &lt;/a&gt;
  DELETING A FULL REMOTE REPO
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;REPONAME&amp;gt;
curl &lt;span class="nt"&gt;-X&lt;/span&gt; DELETE &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: token replacewithtoken'&lt;/span&gt; https://api.github.com/repos/manolosolalinde/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get Delete Auth token&lt;br&gt;
&lt;a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization"&gt;&lt;/a&gt;&lt;a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization"&gt;https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="nt"&gt;-u&lt;/span&gt; &lt;span class="s1"&gt;'manolosolalinde@gmail.com'&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; POST https://api.github.com/authorizations &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"scopes":["delete_repo"], "note":"token with delete repo scope"}'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; token.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#initial-global-setup"&gt;
  &lt;/a&gt;
  INITIAL GLOBAL SETUP
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Manuel Solalinde"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"manolosolalinde@gmail.com"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#untrack-files-already-added-to-git-repository-based-on-gitignore"&gt;
  &lt;/a&gt;
  UNTRACK FILES already added to git repository based on .gitignore
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="nt"&gt;--cached&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt;
git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;".gitignore fix"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rm is the remove command
-r will allow recursive removal
--cached will only remove files from the index. Your files will still be there.
The . indicates that all files will be untracked. 
You can untrack a specific file with git rm --cached foo.txt (thanks @amadeann).
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#general-purpose"&gt;
  &lt;/a&gt;
  GENERAL PURPOSE
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.cheat-sheets.org/saved-copy/github-git-cheat-sheet.pdf"&gt;http://www.cheat-sheets.org/saved-copy/github-git-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git config --global user.name "Manuel Solalinde"&lt;/code&gt;\&lt;br&gt;
Sets the name you want atached to your commit transactions&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git remote add origin git@github.com:manolosolalinde/newrepo.git&lt;/code&gt;\&lt;br&gt;
Add origin for existing repository&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git config --global user.email "manolosolalinde@gmail.com"&lt;/code&gt;\&lt;br&gt;
Sets the email you want atached to your commit transaction&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git init [project-name]&lt;/code&gt;\&lt;br&gt;
Creates a new local repository with the specified name&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone [url]&lt;/code&gt;\&lt;br&gt;
Downloads a project and its entire version history&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git status&lt;/code&gt;\&lt;br&gt;
Lists all new or modified files to be commited&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add [file]&lt;/code&gt;\&lt;br&gt;
Snapshots the file in preparation for versioning&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git reset [file]&lt;/code&gt;\&lt;br&gt;
Unstages the file, but preserve its contents&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git diff&lt;/code&gt;\&lt;br&gt;
Shows file differences not yet staged&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git diff --staged&lt;/code&gt;\&lt;br&gt;
Shows file differences between staging and the last file version&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit -m "[descriptive message]"&lt;/code&gt;\&lt;br&gt;
Records file snapshots permanently in version history&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git branch&lt;/code&gt;\&lt;br&gt;
Lists all local branches in the current repository&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git branch [branch-name]&lt;/code&gt;\&lt;br&gt;
Creates a new branch&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout [branch-name]&lt;/code&gt;\&lt;br&gt;
Switches to the specified branch and updates the working directory&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git merge [branch]&lt;/code&gt;\&lt;br&gt;
Combines the specified branch’s history into the current branch&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git branch -d [branch-name]&lt;/code&gt;\&lt;br&gt;
Deletes the specified branch&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tags"&gt;
  &lt;/a&gt;
  Tags
&lt;/h2&gt;

&lt;p&gt;more info on tags: &lt;a href="https://git-scm.com/book/en/v2/Git-Basics-Tagging"&gt;&lt;/a&gt;&lt;a href="https://git-scm.com/book/en/v2/Git-Basics-Tagging"&gt;https://git-scm.com/book/en/v2/Git-Basics-Tagging&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git tag -a v1.4 -m "my version 1.4"&lt;/code&gt; \&lt;br&gt;
Creates a tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git tag&lt;/code&gt;&lt;br&gt;
List all tags&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git tag -l "v1.8.5*"&lt;/code&gt; \&lt;br&gt;
v1.8.5&lt;br&gt;
v1.8.5-rc0&lt;br&gt;
v1.8.5-rc1&lt;br&gt;
Check all tags with that name&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git show v1.4&lt;/code&gt; \&lt;br&gt;
Show Tag information&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git log --graph --decorate --oneline&lt;/code&gt;&lt;br&gt;
Show Branch History information&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#working-with-multiple-versions-of-a-project"&gt;
  &lt;/a&gt;
  Working with multiple versions of a project
&lt;/h2&gt;

&lt;p&gt;Interesting post: &lt;a href="https://stackoverflow.com/questions/12153405/how-to-manage-multiple-versions-of-a-project"&gt;&lt;/a&gt;&lt;a href="https://stackoverflow.com/questions/12153405/how-to-manage-multiple-versions-of-a-project"&gt;https://stackoverflow.com/questions/12153405/how-to-manage-multiple-versions-of-a-project&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;In my case, I have two version of the same software that the basics are the same but each version has some different features.&lt;/p&gt;

&lt;p&gt;So I create two &lt;code&gt;worktree&lt;/code&gt; that means, create two relevant long-running branches beside the master.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$git&lt;/span&gt; worktree add &lt;span class="nt"&gt;-b&lt;/span&gt; version-silver ..&lt;span class="se"&gt;\v&lt;/span&gt;ersion-silver master
    &lt;span class="nv"&gt;$git&lt;/span&gt; worktree add &lt;span class="nt"&gt;-b&lt;/span&gt; version-gold ..&lt;span class="se"&gt;\v&lt;/span&gt;ersion-gold master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then I have:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$git&lt;/span&gt; branch
    master  &lt;span class="c"&gt;# base stuff here&lt;/span&gt;
    version-silver &lt;span class="c"&gt;# some normal features&lt;/span&gt;
    version-gold &lt;span class="c"&gt;# some better features&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is one repository, but I have 3 separate folders beside each other for each branch above. And make the common changes in master. then merge it with both other versions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nb"&gt;cd &lt;/span&gt;master
    vim basic.cpp
    git add &lt;span class="nb"&gt;.&lt;/span&gt;
    git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"my common edit on basic.cpp"&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; ..&lt;span class="se"&gt;\v&lt;/span&gt;ersion-silver
    vim silver.cpp
    git add &lt;span class="nb"&gt;.&lt;/span&gt;
    git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"my specific edit on silver.cpp"&lt;/span&gt;
    git merge master &lt;span class="c"&gt;# here i get the basic.cpp latest changes for silver project&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; ..&lt;span class="se"&gt;\v&lt;/span&gt;ersion-gold
    git merge master &lt;span class="c"&gt;# here i get the basic.cpp latest changes for gold project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#copy-changes-of-raw-only-last-commit-endraw-from-branch-a-to-branch-b"&gt;
  &lt;/a&gt;
  Copy changes of &lt;code&gt;only last commit&lt;/code&gt; from branch A to branch B
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/a/18529576/9831182"&gt;Stackoverflow - Commit to multiple branches at the same time&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout A
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Fixed the bug x"&lt;/span&gt;
git checkout B
git cherry-pick A
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#problems"&gt;
  &lt;/a&gt;
  Problems
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#problems-with-vscode-and-credentials"&gt;
  &lt;/a&gt;
  Problems with vscode and credentials
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/34400272/visual-studio-code-always-asking-for-git-credentials"&gt;&lt;/a&gt;&lt;a href="https://stackoverflow.com/questions/34400272/visual-studio-code-always-asking-for-git-credentials"&gt;https://stackoverflow.com/questions/34400272/visual-studio-code-always-asking-for-git-credentials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should be able to set your credentials like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote set-url origin https://&amp;lt;USERNAME&amp;gt;:&amp;lt;PASSWORD&amp;gt;@bitbucket.org/path/to/repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can get the remote url like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --get remote.origin.url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My problem was solved with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd "C:\Program Files\Git\mingw64\libexec\git-core"
git-credential-manager.exe uninstall
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>github</category>
      <category>git</category>
    </item>
    <item>
      <title>How to calculate Square Root in Python?</title>
      <author>hrishikesh1990</author>
      <pubDate>Mon, 13 Dec 2021 12:35:55 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-calculate-square-root-in-python-5d0f</link>
      <guid>https://dev.to/hrishikesh1990/how-to-calculate-square-root-in-python-5d0f</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how we can calculate the square root in Python. We look at four different methods and break them down for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-a-square-root"&gt;What is a square root?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-the-pow-function-to-calculate-the-square-root"&gt;Using the pow() function to calculate the square root in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calculating-the-square-root-in-using-the-exponent-operator"&gt;Calculating the square root in Python using the exponent operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-the-sqrt-function-to-calculate-square-root"&gt;Using the sqrt() function to calculate square root in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calculating-the-square-root-in-python-using-the-cmath-module"&gt;Calculating the square root in Python using the cmath module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-square-root"&gt;
  &lt;/a&gt;
  What is a square root?
&lt;/h2&gt;

&lt;p&gt;The square root of a number is a value when multiplied by itself returns that same number.&lt;/p&gt;

&lt;p&gt;For example, 6 x 6 = 36, so a square root of 36 is 6. However -6 x -6 is 36 too, so -6 is also a square root of 36.&lt;/p&gt;

&lt;p&gt;In Python or any other Programming Language we have various methods to calculate the square root of a number. And in this tutorial, we will cover four different methods to calculate the square root of a number.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-pow-function-to-calculate-the-square-root"&gt;
  &lt;/a&gt;
  Using the pow() function to calculate the square root
&lt;/h2&gt;

&lt;p&gt;The pow() function is a quick method of finding the square root in Python.&lt;/p&gt;

&lt;p&gt;Let us first understand how the pow() function works in Python.&lt;br&gt;
The pow() function takes 2 parameters, the first parameter is the numerical value, and the second parameter is the power of the numerical value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# where y is the power of x
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Using the pow() function 
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" Enter a number: "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sqRoot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"The square root of a given number {0} = {1}"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sqRoot&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="mf"&gt;25.0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#calculating-the-square-root-in-using-the-exponent-operator"&gt;
  &lt;/a&gt;
  Calculating the square root in using the exponent operator
&lt;/h2&gt;

&lt;p&gt;The exponential operator, denoted with ** performs the square root operation as same as the pow() function.&lt;/p&gt;

&lt;p&gt;To make things more interesting, let’s find the square root of a number by defining a function of our own.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Using the exponent operator to calculate the square root in Python
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sqRoot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sqRoot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mf"&gt;6.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have begun by defining a function named sqRoot(n). We have then added the equation, n**0.5, which is to calculate the square root and store the result in the variable x. When we call the function we have defined, we input the number we want to find the square root of in the place of the argument or parameter n. The function is then called to implement the action and print the result.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-sqrt-function-to-calculate-square-root"&gt;
  &lt;/a&gt;
  Using the sqrt() function to calculate square root
&lt;/h2&gt;

&lt;p&gt;The sqrt() function is a predefined method used to find the square root in Python. Firstly, we import the math module to use the sqrt() function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Using the sqrt() function to calculate the square root in Python
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter a number:"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sqRoot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"The square root of &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; is "&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sqRoot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;
&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the first line, we begin with importing the math module, then in the next line we take the input from the user. After that we find the square root of the number using the sqrt() method and the result will be stored in the variable, sqRoot. The final line of code makes sure that the result is printed out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calculating-the-square-root-in-python-using-the-cmath-module"&gt;
  &lt;/a&gt;
  Calculating the square root in Python using the cmath module
&lt;/h2&gt;

&lt;p&gt;The cmath module is used to calculate the square root of a Real or Complex number in Python. The various methods we have used so far will work fine for all positive Real numbers. But for negative or complex numbers, the cmath module proves to be useful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Using the cmath module to calculate the square root of real or complex numbers in Python
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;num_sqRoot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_sqRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_sqRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imag&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;4j&lt;/span&gt;
&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;4j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="mf"&gt;2.197&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;0.910j&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this program, we used the sqrt() function in the cmath module. Note that we have used the eval() function to convert the inputs to complex numbers as well.&lt;br&gt;
The cmath.sqrt() also can be used to return the square-root of a negative number. For example-&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cmath&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mf"&gt;5j&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we have learnt how to calculate the square root of a number in Python by using the sqrt() function, the exponent operator, the pow() function and the cmath module.&lt;/p&gt;

&lt;p&gt;If you need to work with whole numbers instead of floating point numbers; math.isqrt() outputs the square as an integer and rounds down to the nearest whole number. The sqrt() function can also be used with libraries other than the “math” library such as numPy, a Python library used for working with arrays.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Managing the Obscure Boundaries Between Development, QA, and DevOps</title>
      <author>QA Madness</author>
      <pubDate>Mon, 13 Dec 2021 12:34:13 +0000</pubDate>
      <link>https://dev.to/qamadness/managing-the-obscure-boundaries-between-development-qa-and-devops-2m6l</link>
      <guid>https://dev.to/qamadness/managing-the-obscure-boundaries-between-development-qa-and-devops-2m6l</guid>
      <description>&lt;p&gt;As technology has advanced so have the processes with IT organizations. DevOps is fast-becoming the pinnacle framework for software development companies with the promise increased business agility, accelerated product delivery, and higher product quality. Moving away from the traditional waterfall approach that included labor-intensive tasks such as manual software testing, DevOps streamlines, automates, and shortens the development life cycle.&lt;/p&gt;

&lt;p&gt;This has become a necessity in today’s increasing competitiveness in the software app market. The transition of software practices encompasses more than just process change or the adoption of different tools. People sit at the heart of efficient processes and DevOps is built on the foundation of eliminating barriers between roles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modernized-characters-in-a-modern-process"&gt;
  &lt;/a&gt;
  Modernized Characters in a Modern Process
&lt;/h2&gt;

&lt;p&gt;The success of DevOps starts with a refreshed mindset regarding key roles within the software life cycle. This involves having the right people with the right skills who are collectively willing to adapt, communicate, and collaborate.&lt;/p&gt;

&lt;p&gt;This is vastly different from previous business models where development and QA resources would work in silos unaware of each other’s roadblocks and often lacked clarity of the business requirements’ context. Every role was distinct as work passed along the assembly line. DevOps has transformed philosophies and responsibilities to achieve enhanced velocity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h3&gt;

&lt;p&gt;Both past and present processes start with development getting business requirements. However, in a DevOps environment, these requirements are not in lengthy documents with a deadline that is several months in the future as you would find in a waterfall approach. Development is planned in user stories with 2 – 4 week sprints in which requirements are defined for delivery. These requirements provide direction on how to build the software logic in the most efficient and practical way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#qa"&gt;
  &lt;/a&gt;
  QA
&lt;/h3&gt;

&lt;p&gt;Quality assurance engineers keep their focus on software quality and use a combination of automated and manual testing while ensuring adherence to the initial business requirements. Traditionally, QA received a build from development at which point, a series of testing began and could take up to 2 weeks (or more) to complete. Prior to receiving the build for testing, QA had little, if any, interaction with the development stage.&lt;/p&gt;

&lt;p&gt;Today, QA is more aligned with development, and it gets involved in the process from the beginning. QA also embraces more test automation services that involve pre-testing and post-testing checks to achieve as much code coverage as possible. Automation also requires a new skill set and standardization of testing environments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devops"&gt;
  &lt;/a&gt;
  DevOps
&lt;/h3&gt;

&lt;p&gt;DevOps is the merging of development and operations, which requires a change in both technology and culture. Oftentimes organizations create DevOps as an aside to development and operations, which defeats the purpose. Companies must be prudent with the adoption of DevOps because new roles, labels, and titles don't necessarily bring about real change.&lt;/p&gt;

&lt;p&gt;The DevOps methodology integrates the functions of software development and operations within the same cycle. The goal is to improve collaboration across teams and deliver better experiences internally and to the end-customer. To achieve this, a high level of collaboration is needed between the major stakeholders in the software development process, being dev, QA, and operations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-development-and-quality-assurance-fit-in-devops"&gt;
  &lt;/a&gt;
  How do Development and Quality Assurance fit in DevOps?
&lt;/h2&gt;

&lt;p&gt;In DevOps, developers, and QA both play equally important roles. In fact, every actor in the process is responsible for the timeliness and quality of deliverables. This makes the boundaries of roles porous. While titles such as developer and QA are the same, their scope in roles has increased. From the outset of defining requirements, test cases are created at the development and QA level.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-developers-role-in-devops"&gt;
  &lt;/a&gt;
  The Developer’s Role in DevOps
&lt;/h3&gt;

&lt;p&gt;Development now has a greater emphasis on automating the testing, build, and deployment tasks and a more intimate knowledge of the continuous integration cycle. And it requires a more forward-thinking attitude where developers need to consider dependencies and environments that go beyond the individual’s pc. Gone are the days of using the old excuse of “well, it works on my machine”. After building the code and doing initial tests, developers then promote the code package to the next environment, which is typically the testing environment.&lt;/p&gt;

&lt;p&gt;For developers, it is no longer just creating code from requirements. They need to encapsulate testing methods and provide continuous monitoring as well. Engagement with testing is more extensive than before, which has been a catalyst for incorporating automated testing. Having developers think like testers is an added step in ensuring better product quality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-qa-role-in-devops"&gt;
  &lt;/a&gt;
  The QA Role in DevOps
&lt;/h3&gt;

&lt;p&gt;DevOps QA has transitioned to a more strategic role in helping a team build robust software. As the developers’ roles and mindset has changed, so has that of DevOps QA engineer. They need to be able to test an application using a range of tools while also being capable of fixing code.&lt;/p&gt;

&lt;p&gt;Although not every aspect of testing can be automated, it’s not practical to stick to manual testing and still be agile. Automation is crucial for everyday testing and for automating regression testing. And if QA struggles to adopt this change, the quality of the product will degrade, and bottlenecks will accumulate in the software life cycle. A QA strategy using best practices is highly relevant and key to achieving superior product quality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-and-difficulties-in-devops-management"&gt;
  &lt;/a&gt;
  What Are the Benefits and Difficulties in DevOps Management?
&lt;/h2&gt;

&lt;p&gt;When implemented and adopted efficiently, considerable benefits can be achieved with DevOps. However, it is not a silver bullet for every organization and every team. It doesn’t come without its challenges.&lt;/p&gt;

&lt;p&gt;Here are notable advantages as well as the difficulties that come managing an effective DevOps process:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Product quality is much higher with test cases defined early on and testing points added in the development process. Additionally, automation constantly checks new code hasn’t impacted core functionality or broken core dependencies.&lt;/li&gt;
&lt;li&gt;Product stability allows teams to spend less time on support and security issues. A perpetual cycle of ongoing bugs and fixes is frustrating for dev and QA, as well as the customer. Stability means that the DevOps team can spend more time on developing new features and skilling up on new technologies. Enhanced expertise means the product improves and staff turnover remains low.&lt;/li&gt;
&lt;li&gt;Deployment speed increases so developers are able to deploy updates or new features more regularly as opposed to developing enhancements once a month or twice a year.&lt;/li&gt;
&lt;li&gt;If all the above are realized throughout the process, the customer satisfaction rate increases with having a stable, feature-rich app.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#challenges"&gt;
  &lt;/a&gt;
  Challenges
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Having a control and command leadership style doesn’t fit in well with a true DevOps environment. It relies on more than one mind to solve, create, and deliver. Teams are connected and should encourage innovation and inspiration while creating a space where people feel safe to share thoughts and engage in creating solutions.&lt;/li&gt;
&lt;li&gt;Poor product management strategy can hinder speed, reliability, and consistency. This would be the antithesis of what DevOps is about as it’s meant to give companies the competitive edge with great software delivery. A solid strategy involves planning out new features, knowing the customers’ needs as well as the competitive landscape. It is important to reduce risk while maximizing results.&lt;/li&gt;
&lt;li&gt;Poor design and development can make or break efforts. There have been significant changes in software engineering and it’s important to stay abreast of these changes. Examples include having an updated technology stack, moving away from monolithic architectures, and exploring and utilizing microservices. Managing outdated and cumbersome software doesn’t lend itself well to a DevOps environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tips-for-efficient-management"&gt;
  &lt;/a&gt;
  Tips for Efficient Management
&lt;/h2&gt;

&lt;p&gt;To be successful in DevOps, you need a good foundation to keep all parts of the process moving while having transparency across the environment. Some useful tips can help key players ensure efficiency in managing the DevOps process.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Focus on communication. Having a pool of resources working in a fast and adaptable environment needs proper communication and visibility of all moving parts.&lt;/li&gt;
&lt;li&gt;Never underestimate the importance of testing. Testing across different environments and configurations is critical to product stability.&lt;/li&gt;
&lt;li&gt;Size does matter. Small cycles, small projects, and small teams foster agility, trust, and operational efficiency.&lt;/li&gt;
&lt;li&gt;Stay realistic but relevant. While it may be tempting to throw too much at a DevOps process too quickly, it can backfire. Strive for constant improvement but make sure there is sufficient time without putting unnecessary pressure and expectations on the team.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;DevOps is the future of software development companies. It brings teams together to support each other. Roles overlap but it allows for the creation of multidisciplinary teams while nurturing the talent of high performers. When DevOps works well, it works great. People at all levels of the company benefit when everyone can deliver the best results to the customer.&lt;/p&gt;

&lt;p&gt;DevOps is a journey, and the benefits are not realized overnight. Knowing that teams can be multiskilled allows for a shared understanding, and increased collaboration and innovation. DevOps and the roles within highlight it’s an environment of continuous improvement for people and product.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>qa</category>
      <category>development</category>
      <category>testing</category>
    </item>
    <item>
      <title>JavaScript indexedDB: Simple object storage</title>
      <author>101samovar</author>
      <pubDate>Mon, 13 Dec 2021 12:29:58 +0000</pubDate>
      <link>https://dev.to/101samovar/javascript-indexeddb-simple-object-storage-2c23</link>
      <guid>https://dev.to/101samovar/javascript-indexeddb-simple-object-storage-2c23</guid>
      <description>&lt;p&gt;In this article we are going to arrange a simple persistent object storage with indexedDB.&lt;br&gt;
IndexedDB is a key value client side database.&lt;br&gt;
In this database JavaScript objects can be saved.&lt;/p&gt;

&lt;p&gt;So, let’s pretend that there’s some site and there is a list of objects that should be saved on the client. We need to migrate this list of objects to persistent object storage. And then we need to get the list back.&lt;/p&gt;

&lt;p&gt;First of all we need to open the database. Because the process of opening is asynchronous we will use the Promise object.&lt;br&gt;
To open the database we use the Open method of the indexedDB property of the window object. This method has two params: the database name and the version of the database.&lt;br&gt;
This method returns the request object.&lt;br&gt;
The request object has “onsuccess”, “onerror” and “onupgradeneeded” events.&lt;br&gt;
If the database does not exist the “onupgradeneeded” event will be fired. And in this event handler we need to create the object storage.  &lt;/p&gt;

&lt;p&gt;On success we resolve the promise with a database object.&lt;br&gt;
On error we reject the promise.&lt;br&gt;
To save to or to get from the database we need to use the “transaction” method of the database object. This method has two params: “storage name” and “mode”. To save we need to use “readwrite” mode. To get objects the “readonly” mode will do.&lt;/p&gt;

&lt;p&gt;So let’s create the “migrate” method. This method will save all objects from the list to the database.&lt;br&gt;
To save an object we need to get the object store: database - transaction - objectStore.&lt;br&gt;
Now we can use the “add” method of the store object.&lt;/p&gt;

&lt;p&gt;To get the objects from the database let’s create a getList method.&lt;br&gt;
Database - transaction - objectStore - getAll.&lt;br&gt;
We will get all the items in the onsuccess handler results.&lt;/p&gt;

&lt;p&gt;Let’s check it out.&lt;br&gt;
Migrate the list to the database and then get the list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;hp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;gld&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sam&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;hp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;gld&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;hp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;gld&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexedDB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onupgradeneeded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createObjectStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;autoIncrement&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onsuccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;migrate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;readwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;objectStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;objectStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onsuccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;migrate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;getList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;I hope you found this article useful, if you need any help please let me know in the comment section.&lt;/p&gt;

&lt;p&gt;👋 See you next time. Have a nice day!&lt;/p&gt;

&lt;p&gt;Subscribe to our channel:&lt;br&gt;
&lt;a href="https://www.youtube.com/c/Samovar101"&gt;https://www.youtube.com/c/Samovar101&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Understanding the basics of Story Grooming</title>
      <author>Rebecca Ferrao</author>
      <pubDate>Mon, 13 Dec 2021 12:26:56 +0000</pubDate>
      <link>https://dev.to/rebecca/understanding-the-basics-of-story-grooming-4c79</link>
      <guid>https://dev.to/rebecca/understanding-the-basics-of-story-grooming-4c79</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-agile-backlog-grooming"&gt;
  &lt;/a&gt;
  What is Agile Backlog Grooming?
&lt;/h2&gt;

&lt;p&gt;Backlog grooming is an agile product team event to make sure that the backlog is sufficient. In essence, the product team ensures that there are enough user stories in the product backlog which are prepared for spring planning. Backlog grooming is also known as backlog refinement, or backlog management, or story grooming, or story time. These events, or sessions, are recurring in nature.&lt;/p&gt;

&lt;p&gt;Having backlog grooming sessions regularly helps to make sure that the team prioritizes the right stories. This way, the team has a good grasp over the complete product backlog. In these backlog refinement sessions, the product owners or managers explain the purpose of the prioritized stories to the team. The team is then in a position to be better aligned about the project purpose.&lt;/p&gt;

&lt;p&gt;The things that the backlog grooming session tries to achieve are as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Refining the leftover user stories and removing the ones which are no longer relevant.&lt;/li&gt;
&lt;li&gt;Adding new stories based on the needs that are newly discovered.&lt;/li&gt;
&lt;li&gt;Breaking bigger items into smaller, easier tasks, or&lt;a href="https://buildd.co/product/splitting-user-stories"&gt;splitting user stories&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Prioritizing the ones which are to be tackled first.&lt;/li&gt;
&lt;li&gt;Discuss the user stories with the team and answer any questions which arise so that there are no doubts&lt;/li&gt;
&lt;li&gt;Add contextual info and acceptance criteria to the upcoming user stories&lt;/li&gt;
&lt;li&gt;Occasionally, the scrum master estimates the user stories and assigns story points in these sessions.&lt;/li&gt;
&lt;li&gt;Corrections to the existing estimates based on the new info available.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All these items together work in shaping up the tasks and objectives for the next session. The key team stakeholders attend these backlog grooming sessions. To keep the sessions running well, too many people aren't a part of the meetings. However, all the important stakeholders are supposed to be a part of it. These include the core team representatives, product managers, owners, and QA, among others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#origins-of-story-grooming"&gt;
  &lt;/a&gt;
  Origins of Story Grooming
&lt;/h2&gt;

&lt;p&gt;Now that you know what Story grooming is, let's understand how the practice came into being.&lt;/p&gt;

&lt;p&gt;The earliest known use of the term, 'backlog grooming' was on a Yahoo group in 2005. In that year, Mike Cohn, one of the well-known contributors of the scrum world, spoke of it on Yahoo. Specifically, this happened in the Yahoo Group, Scrum Development Mailing List. However, at this time the term wasn't well-defined and didn't come into use.&lt;/p&gt;

&lt;p&gt;A few years later, in 2008, Kane Mar, a scrum trainer, gave one of the first formal descriptions of the term. He called it 'story time' and recommended that these should be implemented as regular meetings in Scrum teams.&lt;/p&gt;

&lt;p&gt;Three years after this, in 2011, Backlog grooming became a part of the Scrum guide. Since then, it's been recognized as an official element of the agile scrum framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-a-part-of-the-story-grooming-sessions"&gt;
  &lt;/a&gt;
  Who is a part of the Story Grooming sessions?
&lt;/h2&gt;

&lt;p&gt;We've already mentioned in passing who is a part of these sessions above. However, let's understand the details here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-leads-backlog-grooming-sessions"&gt;
  &lt;/a&gt;
  Who leads Backlog Grooming sessions?
&lt;/h3&gt;

&lt;p&gt;Usually, the product owner or product manager facilitates the backlog refinement events. It's not limited to them, though, and the Scrum master, a project manager or another member from the team also occasionally leads the events.&lt;/p&gt;

&lt;p&gt;Whoever leads the sessions has to assume the following responsibilities:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Schedule the meeting and invite the right people, also make sure that they attend.&lt;/li&gt;
&lt;li&gt;Ensure that the team doesn't go off topic and is focused on the objectives.&lt;/li&gt;
&lt;li&gt;In case the team is stuck too long on a particular topic, then moving the conversation forward.&lt;/li&gt;
&lt;li&gt;Communicating to the team after the session is over about the necessary things.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Generally, these sessions take about 45 minutes to an hour. So, the lead has to also try to ensure that the meetings don't take too much time. They have to try to keep it short and efficient.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-attends-the-backlog-refinement-sessions"&gt;
  &lt;/a&gt;
  Who attends the Backlog Refinement sessions?
&lt;/h3&gt;

&lt;p&gt;The story grooming sessions are collaborative discussions. For this, it is necessary to get inputs from various team members and to look at things from all viewpoints. At the same time, it's necessary to not overcrowd the meeting and invite only the critical members.&lt;/p&gt;

&lt;p&gt;So, on a broad scale, these are the roles that attend the backlog grooming sessions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The facilitator or the lead as mentioned in the earlier section.&lt;/li&gt;
&lt;li&gt;The product owner and/ or other representatives of the product team.&lt;/li&gt;
&lt;li&gt;The entire delivery team or key representatives if it's too large.&lt;/li&gt;
&lt;li&gt;QA reps.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6V2uih1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/RackMultipart20211213-4-jr4yva_html_a8cd95509e71a977.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6V2uih1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/RackMultipart20211213-4-jr4yva_html_a8cd95509e71a977.jpg" alt="" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparation-for-efficient-story-grooming"&gt;
  &lt;/a&gt;
  Preparation for efficient Story Grooming
&lt;/h2&gt;

&lt;p&gt;The following is an idea on how to prepare for the agile story grooming sessions and what to include in them:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-keep-the-strategic-objectives-of-the-project-in-mind"&gt;
  &lt;/a&gt;
  1. Keep the strategic objectives of the project in mind
&lt;/h3&gt;

&lt;p&gt;At any point of the project, the ones working on it should keep in mind what the main goals of the project are. So, even when preparing for the grooming sessions, the high-level objectives of the project should be kept in mind. Everything should then be aligned accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-involve-the-right-people-in-the-process"&gt;
  &lt;/a&gt;
  2. Involve the right people in the process
&lt;/h3&gt;

&lt;p&gt;We've mentioned above who the ideal people in the story grooming process are. You need to decide who are the best people to invite if you're the one conducting the meeting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-sync-up-with-stakeholders"&gt;
  &lt;/a&gt;
  3. Sync up with stakeholders
&lt;/h3&gt;

&lt;p&gt;Talk to internal and external stakeholders at regular intervals to get feedback. You do not need to invite them to the grooming sessions, but make sure to keep them updated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-review-work-done-and-metrics"&gt;
  &lt;/a&gt;
  4. Review work done and metrics
&lt;/h3&gt;

&lt;p&gt;Since your team's working style could evolve over time, it's good to get an idea of what to keep and what to discard. Tracking and reviewing performance metrics helps with this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-practices-for-story-grooming"&gt;
  &lt;/a&gt;
  Best practices for Story Grooming
&lt;/h2&gt;

&lt;p&gt;The story grooming sessions aim to have a prioritized set of user stories for the team to work on. Agile practitioners usually try to obtain a 'DEEP' product backlog as a result of these sessions. This is what DEEP stands for:&lt;/p&gt;

&lt;p&gt;D - Detailed Appropriately - Items should be stated in very clear terms so that the team and everyone involved have no issues in understanding.&lt;/p&gt;

&lt;p&gt;E - Estimated - Teams should draw a good estimate of the work needed to deliver backlog items which are at the top.&lt;/p&gt;

&lt;p&gt;E - Emergent - The agenda isn't concrete and changes over time. So, it should be easy to accommodate these changes.&lt;/p&gt;

&lt;p&gt;P - Prioritized - Items are ranked according to their value and then taken up in order.&lt;/p&gt;

&lt;p&gt;Originally published &lt;a href="https://buildd.co/product/agile-story-backlog-grooming"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;P.S. If you liked the above, also check out the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://buildd.co/marketing/indirect-marketing"&gt;Indirect Marketing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildd.co/marketing/customer-equity"&gt;Equity (Customer Equity)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildd.co/marketing/top-of-mind-awareness"&gt;Top of Mind Awareness (TOMA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildd.co/product/weighted-scoring-model"&gt;Weighted Scoring Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildd.co/marketing/media-mix-modeling"&gt;Media Mix Modeling&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>beginners</category>
      <category>todayilearned</category>
      <category>agile</category>
    </item>
    <item>
      <title>Release 0.4: Final step</title>
      <author>Hung Nguyen</author>
      <pubDate>Mon, 13 Dec 2021 12:20:57 +0000</pubDate>
      <link>https://dev.to/nguyenhung15913/release-04-final-step-3o91</link>
      <guid>https://dev.to/nguyenhung15913/release-04-final-step-3o91</guid>
      <description>&lt;h1&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h1&gt;

&lt;p&gt;As I mentioned in my last blog post, I finished the Telescope's issue and my PR got accepted. So I spend this week only for the second &lt;a href="https://github.com/VishalIITP/CodepeakSuperDuper/issues/13"&gt;issue&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue
&lt;/h1&gt;

&lt;p&gt;I had a hard time finding the design for the leaderboard. There were so many templates and also the design should match the whole website in general, especially the background of the site. This is the current temporary leaderboard they have:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MJYiR33E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u85wrg4439xibjtdim93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MJYiR33E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u85wrg4439xibjtdim93.png" alt="Image description" width="880" height="447"&gt;&lt;/a&gt;&lt;br&gt;
After hours, I came up with a few designs but this one like the most.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7S0fHoz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j98qhfmquzoe1x75azod.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7S0fHoz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j98qhfmquzoe1x75azod.png" alt="Image description" width="880" height="683"&gt;&lt;/a&gt;&lt;br&gt;
I send the design to Discord but none of the owners replied to me to I just started working on the leaderboard page.&lt;br&gt;
Their project was a ReactJs project so setting everything up for me was not hard. However, there were like thousands lines of code and the way they write their code was confusing to me. My solution was just finding the right components for the leaderboard and where it was located so that I did not get distracted by something else. Luckily, after 15-30 minutes, I found that, but I had to write a bunch of &lt;code&gt;console.log&lt;/code&gt; to know where the component was.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#progress"&gt;
  &lt;/a&gt;
  Progress
&lt;/h1&gt;

&lt;p&gt;I started by creating a new branch. First thing I did was keeping the elements inside the JS file intact. I only added the &lt;code&gt;className&lt;/code&gt; so that I could access it from the &lt;code&gt;.css&lt;/code&gt; file. To know if my class were already applied to the elements, I added some &lt;code&gt;background-color&lt;/code&gt;. After that, I spend some times to understand the React code and how they displayed the data to front-end. Another issue that just came to me. There were the gaps between the &lt;code&gt;tr&lt;/code&gt; elements from the design:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7S0fHoz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j98qhfmquzoe1x75azod.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7S0fHoz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j98qhfmquzoe1x75azod.png" alt="Image description" width="880" height="683"&gt;&lt;/a&gt;&lt;br&gt;
I thought I just needed to add the &lt;code&gt;margin&lt;/code&gt; to it. But it was not that easy, adding margin did work. I was really surprised and started to do some research about table element. The solution was separating the elements and adding the spacing for it:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O7_z8jUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eykq13uvl2p6xb9j0yz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O7_z8jUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eykq13uvl2p6xb9j0yz.png" alt="Image description" width="368" height="177"&gt;&lt;/a&gt;&lt;br&gt;
To match the design, I needed to add background for each row:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wti_L0r9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2l2htndow68o7pe0zidb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wti_L0r9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2l2htndow68o7pe0zidb.png" alt="Image description" width="583" height="459"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason I named my class like &lt;code&gt;color0&lt;/code&gt;, &lt;code&gt;color1&lt;/code&gt; was utilizing the &lt;code&gt;index&lt;/code&gt; parameter from the &lt;code&gt;map&lt;/code&gt; function:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RYLHBbLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpdn8pj9ty2xutalhwig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RYLHBbLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpdn8pj9ty2xutalhwig.png" alt="Image description" width="880" height="234"&gt;&lt;/a&gt;&lt;br&gt;
Also, we cannot add the &lt;code&gt;border-radius&lt;/code&gt; for &lt;code&gt;tr&lt;/code&gt; so I needed to add this feature to &lt;code&gt;td&lt;/code&gt; instead:&lt;br&gt;
 tr td:first-child {&lt;br&gt;
    border-top-left-radius: 10px;&lt;br&gt;
    border-bottom-left-radius: 10px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;tr td:last-child {&lt;br&gt;
    border-top-right-radius: 10px;&lt;br&gt;
    border-bottom-right-radius: 10px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;tr th:first-child {&lt;br&gt;
    border-top-left-radius: 10px;&lt;br&gt;
    border-bottom-left-radius: 10px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;tr th:last-child {&lt;br&gt;
    border-top-right-radius: 10px;&lt;br&gt;
    border-bottom-right-radius: 10px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;I also had to remove some old CSS styling of the owner.  And this is the final result:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A7Hdr7JU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7xfkimsep0pzmw2zzfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A7Hdr7JU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7xfkimsep0pzmw2zzfl.png" alt="Image description" width="870" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will see I modify the &lt;code&gt;Go to Page: 1&lt;/code&gt; so it would be neat and more beautiful. Also I added a yellow cup (from material-ui) for the top player. This will make my design more interesting.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ow4rl0XN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvuq5hk44wa0gx1u3d7j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ow4rl0XN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvuq5hk44wa0gx1u3d7j.png" alt="Image description" width="821" height="628"&gt;&lt;/a&gt;&lt;br&gt;
(Note that, only the &lt;code&gt;cell&lt;/code&gt; that has value === 1 will have the cup icon)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pull-request"&gt;
  &lt;/a&gt;
  Pull request
&lt;/h1&gt;

&lt;p&gt;After that, I submitted a &lt;a href="https://github.com/VishalIITP/CodepeakSuperDuper/pull/21"&gt;PR&lt;/a&gt;. It did not go smoothly because there were some request changes from the owner. He would like me to modify the colors and there was a bug related to displaying:&lt;br&gt;
&lt;a href="https://user-images.githubusercontent.com/72855990/145670180-16c00799-f1b7-4c01-9542-d1811b355cd9.png"&gt;https://user-images.githubusercontent.com/72855990/145670180-16c00799-f1b7-4c01-9542-d1811b355cd9.png&lt;/a&gt;&lt;br&gt;
(If more than 5 players are displayed, the rest will be transparent)&lt;br&gt;
At the moment, I am still working on the changes to my PR and I am pretty sure that everything will be good because I know how to handle this problem.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-thought"&gt;
  &lt;/a&gt;
  Last thought
&lt;/h1&gt;

&lt;p&gt;This final release was very useful, I have learnt a lot of things from understanding a completely new style of writing React code. Also, I learnt new feature of table elements in CSS, and this will be great for me in my future project that would use table.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 5 User Experience Web Design Trends In 2022 </title>
      <author>Krunal69</author>
      <pubDate>Mon, 13 Dec 2021 12:08:00 +0000</pubDate>
      <link>https://dev.to/krunalaneri/top-5-user-experience-web-design-trends-in-2022-1mg8</link>
      <guid>https://dev.to/krunalaneri/top-5-user-experience-web-design-trends-in-2022-1mg8</guid>
      <description>&lt;p&gt;User experience is the most important factor in &lt;a href="https://ritikkachhot.com/"&gt;web design&lt;/a&gt;. For everyone, the main aim is to provide better user experience to visitors on their website.&lt;/p&gt;

&lt;p&gt;There are so many factors that affects user experience but that factors are avoided by so many websites. And, from my point of view the better user experience you create the better it will help your website to grow easily.&lt;/p&gt;

&lt;p&gt;So, let's discuss the important factors that you should consider for user-experience in 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#userexperience-design-trends"&gt;
  &lt;/a&gt;
  User-Experience Design Trends
&lt;/h2&gt;

&lt;p&gt;Below are the trends that is essential for everyone.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;u&gt;Website Loading Speed&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most important factor for user experience because the fast loading website is the essential component of website. As per the survey:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The first 5 seconds page-load time majorly affects the conversion rate.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;70% consumers said that the website speed affects the customer.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, the better website traffic and user experience it is most important that your website should have lightning loading speed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;u&gt;Scrolling effects&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I love scrolling effects because it increases the engagement rate on website. This effect drives more traffic on your website. These eye-catching effects helps users to find more content on your website.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;u&gt;Smart content loading&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The smart content load increases user engagement rate and overall website speed. This feature load content that users see and the unseen content will be still unloaded that's why it increases the  website speed directly.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;u&gt;White Space&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The more white space with perfectly used helps website visitors to read and understand the content on the website easily.&lt;/p&gt;

&lt;p&gt;This feature helps your website to standout from the others.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;u&gt;Minimalism&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The trend for decorative design is gone because the less decorative website and simple design attracts visitors because they can easily find what they are looking for.&lt;/p&gt;

&lt;p&gt;Do the below things for minimalism design:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Provide perfect navigation&lt;/li&gt;
&lt;li&gt;User-friendly and eye catching background images&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The purpose is that users can easily navigate and understand your website services or content gives good user-experience.&lt;/p&gt;

</description>
      <category>design</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>news</category>
    </item>
    <item>
      <title>AWSでSandbox環境を用意して組織全体のスキルアップをしよう</title>
      <author>Shiomi Sumi</author>
      <pubDate>Mon, 13 Dec 2021 11:58:05 +0000</pubDate>
      <link>https://dev.to/aws-builders/awsdesandboxhuan-jing-woyong-yi-sitezu-zhi-quan-ti-nosukiruatupuwosiyou-efk</link>
      <guid>https://dev.to/aws-builders/awsdesandboxhuan-jing-woyong-yi-sitezu-zhi-quan-ti-nosukiruatupuwosiyou-efk</guid>
      <description>&lt;p&gt;こんにちは、sumiです。&lt;/p&gt;

&lt;p&gt;Tech系スタートアップにおいてエンジニアの確保は必須ではあるものの、無名なスタートアップがつよつよエンジニアを獲得するのは難しく、まだまだ未熟なエンジニアも多いのが現状ではないでしょうか。&lt;/p&gt;

&lt;p&gt;未熟なエンジニアは伸び代がありますが、スタートアップには育成にかけるリソースはありません。みんな自発的に学習をしています。&lt;br&gt;
自ら動き、&lt;strong&gt;楽しく学ぶことで大きな成長&lt;/strong&gt;につながりますし、そこで&lt;strong&gt;得られた知識や経験を日々の業務にコミットすることで仕事もうまくいく&lt;/strong&gt;。わたしは自身の経験からそのことをよく理解しているつもりです。&lt;/p&gt;

&lt;p&gt;AWSのスキルは実際に開発を行う中で学び習得することもありますが、開発は最小権限での実行に限定されることになるため、限られたサービスの利用しか実行できないため、より良いビジネスへのアイデアを出すには限界があります。&lt;/p&gt;

&lt;p&gt;そのため、AWSサービスを自由に触ることができるSandbox環境を用意することにしましたので、その運用について紹介します。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sandbox%E7%92%B0%E5%A2%83%E3%81%A8%E3%81%AF"&gt;
  &lt;/a&gt;
  Sandbox環境とは
&lt;/h2&gt;

&lt;p&gt;自由にAWSのサービスを触りまくって遊ぶことが許されている実験・学習用のAWSアカウントです。開発等で使用しているAWSアカウントとは分離させて、実際に運用しているシステムに影響を出すことなくAWSサービスを触ることができる環境です。&lt;/p&gt;

&lt;p&gt;AWSを学習するためにはドキュメントをはじめハンズオンやユーザーグループの開催する勉強会などがありますが、AWSを本当に理解するためには実際に触ってみることが大事です。&lt;/p&gt;

&lt;p&gt;実際にAWSサービスを触らないまま「なんとなく理解した」つもりで、実際の開発で取り入れようとすると、意外なところに壁があったり、実はもっと最適な方法があって後で気づくことになることもあります。&lt;/p&gt;

&lt;p&gt;こうなるとエンジニア含め、その先にあるお客様にとっても嬉しくないので、それを解決するために既存AWSアカウントと分離したSandboxアカウントという手段を採用しました。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E7%9B%AE%E7%9A%84"&gt;
  &lt;/a&gt;
  目的
&lt;/h2&gt;

&lt;p&gt;わたしは、以下3つの目的をもってSandboxの運用をはじめることにしました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;AWSサービスをより広く深く理解し、ビジネスアイデアを増やす&lt;/li&gt;
&lt;li&gt;費用やセキュリティに関して不安を感じることなく思いっきり遊んで学び、エンジニアとしてスキルアップを目指す&lt;/li&gt;
&lt;li&gt;アウトプットを増やしてエンジニア組織としての知名度の向上を目指す&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#%E9%81%8B%E7%94%A8%E6%96%B9%E6%B3%95"&gt;
  &lt;/a&gt;
  運用方法
&lt;/h2&gt;

&lt;p&gt;Sandbox環境の運用はシンプルです。&lt;br&gt;
組織の従業員全員がOktaを経由して、シングル・サインオンでAWSのSandbox環境にAdministrator権限でアクセスできるようにしています。そして、月に一度アカウント内のすべてのリソースを削除しています。&lt;/p&gt;

&lt;p&gt;しかしながら、巨大なインスタンスを立てて膨大な費用を請求されることや、脆弱な穴を作って放置することは組織として望んではいません。そのため、一定のルールとガードレールを設ける必要があります。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E9%81%8B%E7%94%A8%E3%83%AB%E3%83%BC%E3%83%AB"&gt;
  &lt;/a&gt;
  運用ルール
&lt;/h3&gt;

&lt;p&gt;私は以下のルールで運用を始めることにしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;毎月1日に &lt;a href="https://github.com/rebuy-de/aws-nuke"&gt;aws-nuke&lt;/a&gt; でアカウント内のリソースを削除&lt;/li&gt;
&lt;li&gt;予算は組織全体で$500。 (ここは組織拡大を見越して一人当たりの予算とかにすればよかったかも)&lt;/li&gt;
&lt;li&gt;コスト予測アラートをセットする&lt;/li&gt;
&lt;li&gt;サーバー情報をインターネット上に公開しない&lt;/li&gt;
&lt;li&gt;アクセス資格情報をソースコードに含めない&lt;/li&gt;
&lt;li&gt;業務のための検証はSandboxではなくプロジェクトのアカウントで行うこと&lt;/li&gt;
&lt;li&gt;使って欲しくないサービスはSCPで制限する

&lt;ul&gt;
&lt;li&gt;Route53 ドメイン登録&lt;/li&gt;
&lt;li&gt;Snowball&lt;/li&gt;
&lt;li&gt;Ground Station&lt;/li&gt;
&lt;li&gt;Marketplaceの購入&lt;/li&gt;
&lt;li&gt;リザーブドインスタンスの購入&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sandboxの重要な要素の1つは、&lt;strong&gt;Sandbox環境で遊ぶ人々が環境を制御できるようにする必要がある&lt;/strong&gt;ことです。つまり、管理者権限です。しかし、&lt;strong&gt;大いなる力には大いなる責任が伴います&lt;/strong&gt;。初心者は大いなる力を手にしたことを理解しないまま使うこともあるでしょう。&lt;/p&gt;

&lt;p&gt;そのため、これらのルールを守り、システム的な制御を設定する必要があります。&lt;/p&gt;

&lt;p&gt;ただ不便で面倒なルールはお断りです。可能な限り自由でエンジニア・フレンドリーなルールづくりを心がけています。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AC%E3%83%BC%E3%83%89%E3%83%AC%E3%83%BC%E3%83%AB"&gt;
  &lt;/a&gt;
  セキュリティガードレール
&lt;/h3&gt;

&lt;p&gt;エンジニアが思いっきりアクセルを踏み込んで実験を楽しむには、セキュリティの脅威を排除する必要があります。そのためにセキュリティ・ガードレールを作成し、利用者が安全に実験に没頭できる環境を用意します。&lt;/p&gt;

&lt;p&gt;これらのサービスを使用して、組織に合ったガードレールを作成することもできます。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#awsconfig"&gt;
  &lt;/a&gt;
  AWSConfig
&lt;/h4&gt;

&lt;p&gt;AWS Configを使用して、AWSアカウント全体のリソース構成を管理するためのマネージドルールとカスタムルールを実装することができます。&lt;br&gt;
たとえば、マネージドルールを実装して、すべてのS3バケットでサーバー側の暗号化が有効になっていることを監視して、サーバー側の暗号化が有効になっていない場合、AWSConfigは非準拠のリソースを検出してフラグを立てます。SSMで自動修復してもよきですね!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#awscloudtrail-%E3%81%A8-amazoneventbridge"&gt;
  &lt;/a&gt;
  AWSCloudTrail と AmazonEventBridge
&lt;/h4&gt;

&lt;p&gt;EventBridgeはAWSのあらゆるサービスのアクションをトリガーにすることができる超便利なサービスですよね。これと、AWS CloudTrailを監査ツールとして使用して、AWS環境でAPI呼び出しを継続的に監視することができます。&lt;br&gt;
やってほしくない不正な動作を検知させるにはもってこいです。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#awsorganizations-scp"&gt;
  &lt;/a&gt;
  AWSOrganizations (SCP)
&lt;/h4&gt;

&lt;p&gt;不要なアクションを防ぐために、セキュリティガードレールとしてSCPを実装する必要があります。サンドボックスアカウントは、SCPをすべてのサンドボックスアカウントに簡単に適用できるように、組織内の「サンドボックス」組織単位(OU)の中にいれています。&lt;/p&gt;

&lt;p&gt;うちでは使用できるリージョンを制限しています。GuardDutyを全リージョン有効にするのはさすがにコストがかかりすぎなので、4つくらいに絞ってます。&lt;/p&gt;

&lt;p&gt;あとは上記のルールで指定した「使って欲しくないサービス」の制限です。&lt;br&gt;
やって欲しくないアクションを拒否するようにしています。&lt;/p&gt;

&lt;p&gt;他にもやってみてもいいかなと思うアイデアとしては、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EC2インスタンスは特定のタイプしか使えないようにする&lt;/li&gt;
&lt;li&gt;Configルールの変更ができないようにする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などはあるのですが、まだ実装できてないので今後取り組んでいきたいところ。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E3%82%B3%E3%82%B9%E3%83%88%E3%81%AE%E8%BF%BD%E8%B7%A1%E3%81%A8%E7%AE%A1%E7%90%86"&gt;
  &lt;/a&gt;
  コストの追跡と管理
&lt;/h4&gt;

&lt;p&gt;Sandboxアカウントには予算を必ず設定しておきましょう。&lt;br&gt;
また、その支出が正常なものか(不正に利用されたものではないか)を判断できるようにしておくことも重要です。&lt;br&gt;
そのために、BudgetsとCostExplorerの存在はかかせません。&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#awsbudgets"&gt;
  &lt;/a&gt;
  AWSBudgets
&lt;/h5&gt;

&lt;p&gt;AWS Budgetsを使用すると、コストまたは使用予算に割り当てられた金額を超えた場合、または超えようとしている場合にアラートをあげることができます。&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#aws-costexplorer"&gt;
  &lt;/a&gt;
  AWS CostExplorer
&lt;/h5&gt;

&lt;p&gt;過去の使用量とコストを表示し、予想される支出を予測し、コストを最適化する方法の推奨事項を提供してくれる有能なサービスです。コスト異常検出の機能もあるので、SNSと組み合わせれば、「気づいたら請求金額がえらいことに…」なんて事態は防ぐことができそうですね。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%A6"&gt;
  &lt;/a&gt;
  やってみて
&lt;/h2&gt;

&lt;p&gt;運用をはじめてみると、AWSに興味はあるけどAWSの料金がよくわからなくて、個人では怖くて使えなかったというエンジニアたちが使い始めるようになりました。&lt;br&gt;
最近のコスト・レポートから見ると、AmplifyやDynamoDBといった実業務で触ったことのあるサービスを、より深く理解するためにSandbox環境で学習している傾向が見られました。&lt;/p&gt;

&lt;p&gt;また、&lt;a href="https://aws.amazon.com/jp/aws-jp-introduction/aws-jp-webinar-hands-on/"&gt;公式で提供されているハンズオン&lt;/a&gt;を試してみたり、新しく登場したサービスを触ってみるなど、実験・学習用途としての利用もされているようで、組織のAWSスキルの向上に貢献できているような気がしました。&lt;/p&gt;

&lt;p&gt;ですが、まだまだ毎月の予算を使い切るほど利用はされていないので、もっと社内のエンジニアたちを焚き付けてどんどんAWSにのめり込んでもらって、たくさんアウトプットをしていけるような組織づくりをしていきたいなと思います。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E3%81%BE%E3%81%A8%E3%82%81"&gt;
  &lt;/a&gt;
  まとめ
&lt;/h2&gt;

&lt;p&gt;開発チームにとって、Sandboxアカウントは、安全な設定でAWSサービスをテストおよび検証する自由を提供し、エンジニア自身の成長を促す役割があります。人材の育成は企業にとって重要なことですが、育成のためのリソースが不足しているスタートアップにとっては必要なものではないでしょうか。&lt;/p&gt;

&lt;p&gt;意図しない結果を防ぐための制限(ガードレール)を設定した上で、広い特権を付与することで、AWSのあらゆるサービスを安全で自由に学ぶことができます。&lt;/p&gt;

&lt;p&gt;AWSにはたくさんのサービスがあり、日々進化を続けています。マネージドで便利なサービスも増えました。それらをビジネスに活かすために私たちは日々学ばなくてはなりません。&lt;br&gt;
ビジネス・チャンスを広げるためにも、AWSで何ができるのかを学びましょう。&lt;/p&gt;

</description>
      <category>aws</category>
      <category>startup</category>
      <category>skillup</category>
    </item>
    <item>
      <title>Breaking Up a Monolithic Database with Kong</title>
      <author>John Vester</author>
      <pubDate>Mon, 13 Dec 2021 11:57:14 +0000</pubDate>
      <link>https://dev.to/johnjvester/breaking-up-a-monolithic-database-with-kong-1b7p</link>
      <guid>https://dev.to/johnjvester/breaking-up-a-monolithic-database-with-kong-1b7p</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6anhNkYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rrhmz4pzjwxe3uka3g9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6anhNkYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rrhmz4pzjwxe3uka3g9.jpg" alt="Feature Image" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are events in our life that seem to be just routine, but then unexpectedly they have a profound impact on our journey. For me, one event was attending the 2008 Gartner conference in Orlando, Florida. &lt;/p&gt;

&lt;p&gt;That event not only introduced me to the Salesforce ecosystem for the very first time but also to concepts like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Service-oriented_architecture"&gt;Service-Oriented Architecture&lt;/a&gt; (via an impressive session by Roy Schulte)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Web_2.0"&gt;Web 2.0&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Mashup_(web_application_hybrid)"&gt;Mashups&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;RESTful API Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While I had modest expectations for the event, those few days in central Florida became a key aspect of focus for the next 13 years of my career, far exceeding any expectations I could have ever imagined. &lt;/p&gt;

&lt;p&gt;Along the way, I learned many lessons from projects and initiatives focused on these very concepts. In this article, I will dive into several lessons learned from projects that placed RESTful APIs at the core of an application’s design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-restful-api-pitfalls"&gt;
  &lt;/a&gt;
  The RESTful API Pitfalls
&lt;/h2&gt;

&lt;p&gt;The RESTful API software style provides an easy manner for client applications to gain access to the resources (data) they need to meet business needs. In fact, it did not take long for Javascript-based frameworks like Angular, React, and Vue to rely on RESTful APIs and lead the market for web-based applications.&lt;/p&gt;

&lt;p&gt;This pattern of RESTful service APIs and frontend Javascript frameworks sparked a desire for many organizations to fund projects migrating away from monolithic or outdated applications. The RESTful API pattern also provided a much-needed boost in the technology economy which was still recovering from the impact of the &lt;a href="https://en.wikipedia.org/wiki/Great_Recession"&gt;Great Recession&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fast-forward several agile iterations into this new development paradigm, and two pitfalls have been repeatedly encountered more than they have been avoided:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;An outdated application design was ultimately replaced with a very large RESTful API and an equally large Javascript framework. This created challenges with coordinating future features and enhancements; basically, one monolith was replaced by another.&lt;/li&gt;
&lt;li&gt;A legacy application design employed multiple RESTful APIs and componentized clients utilizing Javascript frameworks, but a single database was utilized. The result of this design led to data ownership conflicts, a higher-than-expected number of database connections, and higher costs to support/maintain a large database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below is an example of how pitfall #2 played out, with several services competing for resources from a single database:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgPewf2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok53184irzpagzr0e7pd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgPewf2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok53184irzpagzr0e7pd.png" alt="Multiple Services One Database" width="880" height="356"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, I have also seen these same scenarios with greenfield development opportunities, where there is a preference to use a single database for an entire collection of microservices. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#microservices-should-begin-with-the-database"&gt;
  &lt;/a&gt;
  Microservices Should Begin With the Database
&lt;/h2&gt;

&lt;p&gt;In most programming languages, it is possible to create a fully functional application using a single file. In Java, everything could be in the same class file and stemmed from simply calling the &lt;code&gt;main()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class SingleClassApplication {
    public static void main(String[] args) {
        // Start doing something really cool here
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, this approach is not very supportable, nor does it facilitate easy contribution from multiple developers. &lt;/p&gt;

&lt;p&gt;There is also the concept of “ownership” (or system of record) when it comes to aspects of an application. In cases where more than one service or function claims to be the owner of something (like a customer), challenges arise when business rules differ. The same scenario can occur when multiple RESTful APIs claim ownership of a given object.&lt;/p&gt;

&lt;p&gt;These same concepts translate to the database layer when employing a RESTful API design. Consider the following guideline:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A single RESTful API should be considered the system of record for a given aspect of the application. As such, the corresponding data tier should leverage a data store focused solely on that aspect of the application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The illustration below provides a microservices design that adheres to this guideline:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--46g7hUPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pbguatbd8ssldlfmets.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--46g7hUPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pbguatbd8ssldlfmets.png" alt="Multiple Services with Dedicated Database" width="880" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A successful microservice design begins with the database. Once in place, scaling to meet customer demand for the given service does not have an impact on any other service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#counterpoint-what-about-database-constraints"&gt;
  &lt;/a&gt;
  Counterpoint: What About Database Constraints?
&lt;/h3&gt;

&lt;p&gt;My recommended approach is to isolate a given microservice with a dedicated database. This allows the count and size of the related components to match user demand while avoiding additional costs for elements that do not have the same levels of demand.&lt;/p&gt;

&lt;p&gt;Database administrators are quick to defend the single-database design by noting the benefits that constraints and relationships can provide when all of the elements of the application reside in a single database. As an example, a single database design can prevent a request to remove a customer if there are orders associated with the customer queued for deletion.&lt;/p&gt;

&lt;p&gt;While that is definitely a benefit to having a single database, consider the following points before opting to utilize a single database for all microservices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compare the long-term value gained by using a single database with the associated costs for scaling a single, large database. What is the expected cost to scale and support a single database design in the future?&lt;/li&gt;
&lt;li&gt;What is the risk and value of having these constraints enforced at the API layer instead?  Keep in mind that a single microservice would be considered the owner of a given database, so the business logic would not allow things like deleting a customer with active orders.&lt;/li&gt;
&lt;li&gt;Consider the benefits of using an event-driven (or message-based) design to handle the situations where how one microservice handles a request depends on the response from another microservice. While this is similar to a single application/single database design, the ability to scale and allocate dedicated processing power when needed can be isolated and controlled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Certainly, constraints and relationships should be implemented and enforced, even when the database supports only a dedicated service instance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common-elements-should-be-abstracted"&gt;
  &lt;/a&gt;
  Common Elements Should Be Abstracted
&lt;/h2&gt;

&lt;p&gt;Adopting a true microservices design can lead to side effects if not planned appropriately. The biggest challenge I continue to see is the duplication of common components and the service-tier layer. &lt;/p&gt;

&lt;p&gt;The list below provides examples of elements that are often duplicated inside each microservice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;authentication&lt;/li&gt;
&lt;li&gt;caching&lt;/li&gt;
&lt;li&gt;logging&lt;/li&gt;
&lt;li&gt;monitoring&lt;/li&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In fact, consider this illustration, which I introduced in my “&lt;a href="https://dev.to/johnjvester/how-i-stopped-coding-repetitive-service-components-with-kong-1af"&gt;How I Stopped Coding Repetitive Service Components with Kong&lt;/a&gt;” article earlier this year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i30y28Uj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdphu4u0t0xgktphuzfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i30y28Uj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdphu4u0t0xgktphuzfl.png" alt="Kong Example" width="880" height="356"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like all aspects of the development lifecycle, we should always focus on keeping things as DRY (don’t repeat yourself) as possible. This includes elements that can be abstracted and processed at a common level or a different level of the application stack.&lt;/p&gt;

&lt;p&gt;One approach I often recommend is a distributed microservices abstraction layer approach provided by &lt;a href="https://konghq.com/"&gt;Kong&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#placing-kong-at-the-center-of-the-ideal-design"&gt;
  &lt;/a&gt;
  Placing Kong at the Center of the Ideal Design
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/Kong/kong"&gt;Kong Gateway&lt;/a&gt; allows the complexity of service-tier APIs to be reduced to a collection of endpoints (or URIs) focused on meeting a collection of business needs and functionality. Often-duplicated components (like authentication, logging, and security) are handled by the gateway and can be removed from the service-tier design.&lt;/p&gt;

&lt;p&gt;With each RESTful microservice maintaining a dedicated database instance and the duplicate components abstracted, a collection of purpose-driven microservices would appear as illustrated below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bK3lekU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5655nkdu7ay61rbhqy9r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bK3lekU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5655nkdu7ay61rbhqy9r.png" alt="Kong - Full Example" width="880" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Inter-service communication is handled via a messaging tier utilizing common &lt;a href="https://en.wikipedia.org/wiki/Enterprise_Integration_Patterns"&gt;enterprise integration patterns&lt;/a&gt;, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.wso2.com/display/EIP/Command+Message"&gt;Command Message&lt;/a&gt; - invoke another service to perform a background action&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.wso2.com/display/EIP/Document+Message"&gt;Document Message&lt;/a&gt; - request information from another service&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.wso2.com/display/EIP/Event+Message"&gt;Event Message&lt;/a&gt; - broadcast information to anyone listening on a given topic&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.wso2.com/display/EIP/Request-Reply"&gt;Request-Reply&lt;/a&gt; - make a request to another service and listen for a response&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this design in place, consider some real-life benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If the Node.js service experiences higher-than-expected usage, the cost to scale up to meet demands is isolated to the service and dedicated database.&lt;/li&gt;
&lt;li&gt;If any single service realizes that a data store change is preferred (such as SQL to NoSQL), the new design can be deployed with little (if any) impact on any of the other services—provided the RESTful API URIs are not changed.&lt;/li&gt;
&lt;li&gt;A change in any of the abstracted layer components (for example, using a new logging approach) can be made at the Kong Gateway layer and have no impact on the underlying services.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Starting in 2021, I have been trying to live by the following mission statement, which I feel can apply to any IT professional:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Focus your time on delivering features/functionality which extends the value of your intellectual property. Leverage frameworks, products, and services for everything else.”&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;J. Vester&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;While the primary objective of this article is to move toward a true microservice design that includes a dedicated database, Kong provides core aspects for a true microservice design that are scalable and easy to adopt. In fact, Kong Gateway allows developers to keep things DRY, introducing common components to reside in the distributed microservices abstraction layer.&lt;/p&gt;

&lt;p&gt;Remember, “microservices” includes the word “micro,” which is often defined as “extremely small.” It is important to keep this basic premise in mind during any microservice implementation.&lt;/p&gt;

&lt;p&gt;Feature developers utilize packages and classes to group their program code for supportability and maintainability. Within those classes, methods and functions are defined—often employing a rule that each block of code is small and easy to digest. To me, an ideal function or method is one that I can review without ever having to touch my mouse.&lt;/p&gt;

&lt;p&gt;Microservices should be an extension of the same rules programmers have been following for decades: keep things small, purpose-driven, and efficient … keep things “micro.”&lt;/p&gt;

&lt;p&gt;To reach that goal, the design must include the database.&lt;/p&gt;

&lt;p&gt;Have a really great day!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>database</category>
    </item>
    <item>
      <title>🚀 HIRING | 383 Project | Software Engineers | 4 Roles Available | Remote &amp; Onsite Options</title>
      <author>Andrew Yardley</author>
      <pubDate>Mon, 13 Dec 2021 11:37:44 +0000</pubDate>
      <link>https://dev.to/8ix/hiring-383-project-software-engineers-4-roles-available-26oh</link>
      <guid>https://dev.to/8ix/hiring-383-project-software-engineers-4-roles-available-26oh</guid>
      <description>&lt;p&gt;We are growing the #engineering team here at 383 🚀. We are looking to fill 4 engineering roles across both mid and senior levels.&lt;/p&gt;

&lt;p&gt;Our tech-stack is Laravel, React, React Native and AWS.&lt;/p&gt;

&lt;p&gt;Active roles include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lead Frontend Engineer&lt;/li&gt;
&lt;li&gt;Mid Level React Frontend Engineer&lt;/li&gt;
&lt;li&gt;React Native Mobile applications Engineer&lt;/li&gt;
&lt;li&gt;Senior PHP Engineer (Laravel/WordPress)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If this sounds of interest apply direct below.&lt;br&gt;
&lt;a href="https://lnkd.in/ezsQH-kC"&gt;https://lnkd.in/ezsQH-kC&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
      <category>laravel</category>
      <category>career</category>
    </item>
  </channel>
</rss>
