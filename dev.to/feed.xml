<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>3 TypeScript Tricks You Can Use in JavaScript</title>
      <author>Mastering JS</author>
      <pubDate>Fri, 03 Sep 2021 21:44:59 +0000</pubDate>
      <link>https://dev.to/masteringjs/3-typescript-tricks-you-can-use-in-javascript-1m75</link>
      <guid>https://dev.to/masteringjs/3-typescript-tricks-you-can-use-in-javascript-1m75</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--okr3-sAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pi8vzugvaadx8g7a223w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--okr3-sAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pi8vzugvaadx8g7a223w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TypeScript is growing rapidly in popularity, but &lt;a href="https://www.getrevue.co/profile/masteringjs/issues/is-typescript-worth-it-307679"&gt;isn't worth the effort for some projects&lt;/a&gt;. However, even if you're writing JavaScript, there's some patterns you can learn from TypeScript. Here's 3 of our favorite TypeScript-inspired patterns for JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-javascript-enums"&gt;
  &lt;/a&gt;
  1) &lt;a href="https://masteringjs.io/tutorials/fundamentals/enum"&gt;JavaScript Enums&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;TypeScript has support for enums, which are a neat pattern for defining an object whose keys you can use in place of hard-coded strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;Direction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Up&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Down&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Right&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript doesn't support enums. But TypeScript compiles to JavaScript, so what does the above code turn into? Turns out TypeScript enums compile into &lt;a href="https://masteringjs.io/tutorials/fundamentals/pojo"&gt;JavaScript POJOs&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;Up&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Up&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;Down&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Down&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;Left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Left&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;Right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Right&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also make &lt;code&gt;Direction&lt;/code&gt; immutable using &lt;code&gt;Object.freeze()&lt;/code&gt;, which makes &lt;code&gt;Direction&lt;/code&gt; pretty close to a TypeScript enum. And that means you can do what you expect to do with enums in other languages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get allowed enum values: &lt;code&gt;Object.keys(Direction)&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Check if a value equals an enum value: &lt;code&gt;val === Direction.Up&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Check if a value is in the enum: &lt;code&gt;Object.hasOwnProperty(val)&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-raw-orfail-endraw-helpers-to-avoid-null-checks"&gt;
  &lt;/a&gt;
  2) &lt;a href="http://thecodebarbarian.com/whats-new-in-mongoose-53-orfail-and-global-toobject.html"&gt;&lt;code&gt;orFail()&lt;/code&gt;&lt;/a&gt; helpers to avoid null checks
&lt;/h2&gt;

&lt;p&gt;TypeScript requires you to check for &lt;code&gt;null&lt;/code&gt; query results in Mongoose. This is good practice, but also gets a bit cumbersome if you need to do it over and over again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// TypeScript reports an error "Object is possibly 'null'."&lt;/span&gt;
&lt;span class="c1"&gt;// Need to add a `if (doc != null)` check&lt;/span&gt;
&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Mongoose queries have a neat &lt;code&gt;orFail()&lt;/code&gt; helper that throws an error if there's no result, which means you can go about using &lt;code&gt;doc&lt;/code&gt; &lt;strong&gt;without&lt;/strong&gt; explicitly checking for &lt;code&gt;null&lt;/code&gt;. This is because &lt;code&gt;orFail()&lt;/code&gt; marks the query as resolving to a &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;NonNullable&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;orFail&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Works!&lt;/span&gt;
&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use this &lt;code&gt;orFail()&lt;/code&gt; pattern a lot in our TypeScript tests, because it saves us from having to add repetitive &lt;code&gt;if&lt;/code&gt; checks. If the &lt;code&gt;orFail()&lt;/code&gt; is triggered, the error bubbles up to error handling.&lt;/p&gt;

&lt;p&gt;However, there's no reason why you can't use &lt;code&gt;orFail()&lt;/code&gt; in JavaScript! Just because TypeScript isn't there to tell you there's a problem, doesn't mean the problem isn't there.&lt;/p&gt;

&lt;p&gt;Similarly, if you have other functions that may return &lt;code&gt;null&lt;/code&gt; if a value is not found, consider wrapping them in a function that throws an error if the value is not found. It can save you a lot of &lt;code&gt;null&lt;/code&gt; checks!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-use-javascript-maps-for-objects-with-unknown-types"&gt;
  &lt;/a&gt;
  3) Use &lt;a href="https://masteringjs.io/tutorials/fundamentals/map"&gt;JavaScript maps&lt;/a&gt; for objects with unknown types
&lt;/h2&gt;

&lt;p&gt;TypeScript makes it just a little easier to define a map with arbitrary keys than an object with arbitrary keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// An object with string keys and values of type `T`&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;AnyObject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="na"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Map with string keys and values of type `T`&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AnyMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TypeScript makes working with maps to store arbitrary key/value mappings easier, and with good reason: maps support mapping from keys of arbitrary type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fakeMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="nx"&gt;fakeMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fakeMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fakeMap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// { '1': string }&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Map(2) { 1 =&amp;gt; 'number', '1' =&amp;gt; 'string' }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The issue is that JavaScript object keys can only be strings or symbols, so JavaScript always converts object keys to strings. That's why you should use maps in cases where you aren't sure that the keys you're using are strings.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>A complete beginner friendly Python Flask tutorial 🐍. Learn from basic template rendering to deploying in web servers.</title>
      <author>Siddhartha Roy</author>
      <pubDate>Fri, 03 Sep 2021 20:57:25 +0000</pubDate>
      <link>https://dev.to/sid86dev/a-complete-beginner-friendly-python-flask-tutorial-learn-from-basic-template-rendering-to-deploying-in-web-servers-5ack</link>
      <guid>https://dev.to/sid86dev/a-complete-beginner-friendly-python-flask-tutorial-learn-from-basic-template-rendering-to-deploying-in-web-servers-5ack</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UFNH_GJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://visitor-badge.laobi.icu/badge%3Fpage_id%3Dsid86-dev.flask-tutorial" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UFNH_GJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://visitor-badge.laobi.icu/badge%3Fpage_id%3Dsid86-dev.flask-tutorial" alt="Visitor Badge"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wDlbO9kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/repo-size/sid86-dev/flask-tutorial" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDlbO9kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/repo-size/sid86-dev/flask-tutorial" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#a-complete-flask-tutorial-for-beginners"&gt;
  &lt;/a&gt;
  A complete Flask tutorial for beginners
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#i-made-this-tutorial-to-help-and-teach-my-students-make-awesome-dynamic-websites-using-flask-flask-is-an-api-of-python-that-allows-us-to-build-up-webapplications-it-was-developed-by-armin-ronacher-its-modern-and-very-expressive-i-learned-it-because-its-just-super-useful-and-also-allows-me-to-write-less-code"&gt;
  &lt;/a&gt;
  I made this tutorial to help and teach my students make awesome dynamic websites using Flask. Flask is an API of Python that allows us to build up web-applications. It was developed by Armin Ronacher. It's Modern and very expressive, I learned it because it's just super useful and also allows me to write less code.
&lt;/h4&gt;
&lt;h4&gt;
  &lt;a href="#i-tried-to-remove-the-extra-topics-of-flask-and-made-this-as-beginner-friendly-as-possible-so-lets-get-started-with-installation-and-then-get-an-overview-with-the-quickstart-this-tutorial-will-show-how-to-create-a-small-but-complete-application-with-flask"&gt;
  &lt;/a&gt;
  I tried to remove the extra topics of Flask and made this as beginner friendly as possible. So let's get started with Installation and then get an overview with the Quickstart. This Tutorial will show how to create a small but complete application with Flask.
&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Best of luck to you!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLDQ9_SE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Flask_logo.svg/1200px-Flask_logo.svg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLDQ9_SE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Flask_logo.svg/1200px-Flask_logo.svg.png" alt="logo"&gt;&lt;/a&gt; 
&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#minimal-app"&gt;Minimal app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debug-mode"&gt;Debug Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#routing"&gt;Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#url-variables"&gt;Url Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;Required:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A little experience with coding in python (variables, loops, methods/functions, etc)&lt;/li&gt;
&lt;li&gt;Patience&lt;/li&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note this is a tutorial for &lt;strong&gt;Backend Development&lt;/strong&gt;, not Frontend Development. Large software companies like Google, Amazon, &lt;br&gt;
Facebook and Microsoft view Backend Developers as different from  Frontend Developers. Yet, in order to become a good programmer one need to understand the concepts of both. &lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#docs"&gt;
  &lt;/a&gt;
  Docs
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#fask-docs"&gt;
  &lt;/a&gt;
  &lt;a href="https://flask.palletsprojects.com/en/2.0.x/"&gt;Fask Docs&lt;/a&gt;
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#jinja-docs"&gt;
  &lt;/a&gt;
  &lt;a href="https://jinja.palletsprojects.com/en/3.0.x/"&gt;Jinja Docs&lt;/a&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#why-to-choose-flask"&gt;
  &lt;/a&gt;
  Why to choose Flask
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Flask's framework is more explicit than Django's framework and is also easier to learn because it has less base code to implement a simple web-Application.&lt;br&gt;
List of companies using Flask framework - who is using Flask?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#companies-using-flask"&gt;
  &lt;/a&gt;
  Companies using Flask
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://redhat.com"&gt;Red Hat&lt;/a&gt; , &lt;a href="http://rackspace.com"&gt;Rackspace&lt;/a&gt;, &lt;a href="http://airbnb.com"&gt;Airbnb&lt;/a&gt;, &lt;a href="https://medium.com/netflix-techblog/automation-as-a-service-introducing-scriptflask-17a8e4ad954b"&gt;Netflix&lt;/a&gt;, &lt;a href="https://www.pythonanywhere.com/"&gt;PythonAnywhere&lt;/a&gt;, &lt;a href="https://stackshare.io/lyft/lyft"&gt;Lyft&lt;/a&gt;, &lt;a href="https://stackshare.io/reddit/reddit"&gt;Reddit&lt;/a&gt;, &lt;a href="https://stackshare.io/mailgun/mailgun"&gt;Mailgun&lt;/a&gt;, &lt;a href="https://stackshare.io/mit/mit"&gt;MIT&lt;/a&gt;, &lt;a href="https://www.mozilla.org"&gt;Mozilla&lt;/a&gt;, &lt;a href="https://github.com/mozilla/balrog"&gt;Balrog (Application Update Service)&lt;/a&gt;, &lt;a href="https://github.com/mozilla-releng/services"&gt;Release Engineering Services&lt;/a&gt;, &lt;a href="https://stackshare.io/hotjar/hotjar"&gt;Hotjar&lt;/a&gt;, &lt;a href="https://stackshare.io/patreon/patreon"&gt;Patreon&lt;/a&gt;, &lt;a href="https://stackshare.io/teradata/teradata"&gt;Teradata&lt;/a&gt;, &lt;a href="https://stackshare.io/uber/partners-uber-com"&gt;Uber&lt;/a&gt;, &lt;a href="https://stackshare.io/engel80/apkg"&gt;Samsung&lt;/a&gt;, &lt;a href="https://stackshare.io/nginx-inc/nginx-amplify"&gt;Nginx&lt;/a&gt;, +1.5k more companies in &lt;a href="https://stackshare.io/flask/"&gt;https://stackshare.io/flask/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#quickstart"&gt;
  &lt;/a&gt;
  Quickstart
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#-raw-pip-install-flask-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;pip install flask&lt;/code&gt;
&lt;/h3&gt;



&lt;h2&gt;
  &lt;a href="#minimal-app"&gt;
  &lt;/a&gt;
  Minimal app
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/minimal_app"&gt;Code Here ⚙️&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hello, World!&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#so-what-did-that-code-do"&gt;
  &lt;/a&gt;
  So what did that code do?
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First we imported the Flask class. An instance of this class will be our WSGI application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next we create an instance of this class. The first argument is the name of the application’s module or package. &lt;strong&gt;name&lt;/strong&gt; is a convenient shortcut for this that is appropriate   for most cases. This is needed so that Flask knows where to look for resources such as templates and static files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We then use the route() decorator to tell Flask what URL should trigger our function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The function returns the message we want to display in the user’s browser. The default content type is HTML, so HTML in the string will be rendered by the browser.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;



&lt;h2&gt;
  &lt;a href="#debug-mode"&gt;
  &lt;/a&gt;
  Debug Mode
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/debug_mode"&gt;Code Here ⚙️&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hello, World!&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# debud mode running on 8000 port
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The flask run command can do more than just start the development server. By enabling debug mode, the server will automatically reload if code changes, and will show an          interactive debugger in the browser if an error occurs during a request.&lt;/p&gt;

&lt;p&gt;Warning ⚠️ &lt;br&gt;
The debugger allows executing arbitrary Python code from the browser. It is protected by a pin, but still represents a major security risk. Do not run the development server or   debugger in a production environment.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/routing"&gt;Code Here ⚙️&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'This is Index Page'&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/login'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'This is Login Page'&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/hello'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'Hello, World'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Modern web applications use meaningful URLs to help users. Users are more likely to like a page and come back if the page uses a meaningful URL they can remember and use to   directly visit a page.&lt;/p&gt;

&lt;p&gt;Use the &lt;code&gt;route()&lt;/code&gt; decorator to bind a function to a URL.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#url-variables"&gt;
  &lt;/a&gt;
  Url Variables
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/url_variables"&gt;Code Here ⚙️&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'index.html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# string
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/string/&amp;lt;string:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a string value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# int
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/int/&amp;lt;int:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a int value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# float
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/float/&amp;lt;float:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a float value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# path
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/path/&amp;lt;path:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a path value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# uuid
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/uuid/&amp;lt;uuid:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a uuid value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;



&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can add variable sections to a URL by marking sections with &lt;code&gt;&amp;lt;variable_name&amp;gt;&lt;/code&gt;. Your function then receives the &lt;code&gt;&amp;lt;variable_name&amp;gt;&lt;/code&gt; as a keyword argument. Optionally, you can use a  converter to specify the type of the argument like &lt;a&gt;converter:variable_name&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
        &lt;tr&gt;
            &lt;th&gt;Type&lt;/th&gt;
            &lt;th&gt;Value&lt;/th&gt;
            &lt;th&gt;Use&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;string&lt;/td&gt;
            &lt;td&gt;(default) accepts any text without a slash&lt;/td&gt;
            &lt;td&gt;
                string:value
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;int&lt;/td&gt;
            &lt;td&gt;accepts positive integers&lt;/td&gt;
            &lt;td&gt;int:value&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;float&lt;/td&gt;
            &lt;td&gt;accepts positive floating point values&lt;/td&gt;
            &lt;td&gt;float:value&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;path&lt;/td&gt;
            &lt;td&gt;like string but also accepts slashes&lt;/td&gt;
            &lt;td&gt;path:value&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;uuid&lt;/td&gt;
            &lt;td&gt;accepts UUID strings&lt;/td&gt;
            &lt;td&gt;uuid:value&lt;/td&gt;
        &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🆘 Git tips - comandos úteis para sobreviver no dia a dia</title>
      <author>Lays Hidani</author>
      <pubDate>Fri, 03 Sep 2021 20:38:46 +0000</pubDate>
      <link>https://dev.to/layshidani/git-tips-comandos-uteis-para-sobreviver-no-dia-a-dia-1poo</link>
      <guid>https://dev.to/layshidani/git-tips-comandos-uteis-para-sobreviver-no-dia-a-dia-1poo</guid>
      <description>&lt;p&gt;O versionamento de código ajuda muito nossa vida como desenvolvedores. Porém muitas vezes nos deparamos com algumas situações difíceis com o git no dia a dia...&lt;/p&gt;

&lt;p&gt;Eu gosto de ir tomando notas sobre minhas descobertas conforme vou aprendendo e sobrevivendo para relembrar e consultar sempre que necessário.&lt;/p&gt;

&lt;p&gt;Separei uma lista de comandos úteis (um pouco além dos mais básicos, e aqueles que geralmente a gente esquece), espero que te ajudem também 😉&lt;/p&gt;

&lt;p&gt;Vamos lá...&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Substituir comando entre &amp;lt;&amp;gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-url"&gt;
  &lt;/a&gt;
  # URL
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#verificar-qual-a-url-remota"&gt;
  &lt;/a&gt;
  Verificar qual a URL remota
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#editar-url-remota"&gt;
  &lt;/a&gt;
  Editar url remota
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote set-url origin &amp;lt;https://github.com/USERNAME/REPOSITORY.git&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#stash"&gt;
  &lt;/a&gt;
  Stash
&lt;/h1&gt;

&lt;p&gt;📖 Opções de Git stash (ver &lt;a href="https://www.atlassian.com/git/tutorials/saving-changes/git-stash"&gt;Atlassian&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;O comando git stash é utilizado para armazenar temporariamente as alterações que você fez, para poder trabalhar em outra coisa e depois voltar e reaplicá-las posteriormente.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eqc1tIbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6ovla8ny9rdct0b52mq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eqc1tIbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6ovla8ny9rdct0b52mq.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Fonte da imagem: Atlasian&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#stash-tracked-files"&gt;
  &lt;/a&gt;
  Stash &lt;strong&gt;tracked files&lt;/strong&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#stash-tamb%C3%A9m-dos-untracked-files"&gt;
  &lt;/a&gt;
  Stash também dos &lt;strong&gt;untracked files&lt;/strong&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash &lt;span class="nt"&gt;-u&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;onde &lt;code&gt;-u = --include-untracked&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#stash-de-todos-os-arquivos-incluindo-os-ignored-files"&gt;
  &lt;/a&gt;
  Stash de todos os arquivos, incluindo os &lt;strong&gt;ignored files&lt;/strong&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash &lt;span class="nt"&gt;-a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;onde &lt;code&gt;-a = --all&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#stash-com-descri%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Stash com descrição
&lt;/h2&gt;

&lt;p&gt;É possível adicionar mensagens/descrições aos &lt;em&gt;stashs&lt;/em&gt;, assim como fazemos com os commits:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash save &amp;lt;&lt;span class="s2"&gt;"message"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-stashs"&gt;
  &lt;/a&gt;
  Listar stashs
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deletar-stash-espec%C3%ADfica"&gt;
  &lt;/a&gt;
  Deletar &lt;em&gt;stash&lt;/em&gt; específica
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash drop stash@&lt;span class="o"&gt;{&lt;/span&gt;&amp;lt;index&amp;gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deletar-todas-stash"&gt;
  &lt;/a&gt;
  Deletar todas &lt;em&gt;stash&lt;/em&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash clear
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reaplicando-altera%C3%A7%C3%B5es-que-est%C3%A3o-em-stash"&gt;
  &lt;/a&gt;
  Reaplicando alterações que estão em &lt;em&gt;stash&lt;/em&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#padr%C3%A3o-%C3%BAltimo-stash"&gt;
  &lt;/a&gt;
  Padrão, último &lt;em&gt;stash&lt;/em&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash apply
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#escolher-qual-stash-como-em-um-array-utilize-o-raw-git-stash-list-endraw-para-visualizar-a-lista-de-stashs"&gt;
  &lt;/a&gt;
  Escolher qual &lt;em&gt;stash&lt;/em&gt; (como em um array, utilize o &lt;code&gt;git stash list&lt;/code&gt; para visualizar a lista de &lt;em&gt;stashs&lt;/em&gt;):
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash pop stash@&lt;span class="o"&gt;{&lt;/span&gt;&amp;lt;index&amp;gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#visualizar-stash-diff-stash-show"&gt;
  &lt;/a&gt;
  Visualizar Stash diff (stash show)
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash show
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-ou-para-visualiza%C3%A7%C3%A3o-completa-p-patch"&gt;
  &lt;/a&gt;
  # ou, para visualização completa (-p = --patch):
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash show &lt;span class="nt"&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#criar-branch-a-partir-de-stash"&gt;
  &lt;/a&gt;
  Criar branch a partir de &lt;em&gt;stash&lt;/em&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash branch &amp;lt;branch-name&amp;gt; stash@&lt;span class="o"&gt;{&lt;/span&gt;&amp;lt;index&amp;gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-cherry-pick"&gt;
  &lt;/a&gt;
  # Cherry Pick
&lt;/h1&gt;

&lt;p&gt;O cherry-pick é um comando para 'Pegar' um commit de uma branch através do hash do commit e aplicá-lo em outra.&lt;/p&gt;

&lt;p&gt;Ex: commitei acidentalmente em outra branch, e desejo trazer o commit para minha branch certa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pick-1-commit"&gt;
  &lt;/a&gt;
  Pick 1 commit
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git cherry-pick &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pick-v%C3%A1rios-commits"&gt;
  &lt;/a&gt;
  Pick vários commits
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git cherry-pick &amp;lt;hash1&amp;gt; &amp;lt;hash2&amp;gt; &amp;lt;hash3&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pick-de-um-commit-at%C3%A9-outro-commit"&gt;
  &lt;/a&gt;
  Pick de um commit até outro commit
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git cherry-pick &amp;lt;hash1...hash3&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-branchs"&gt;
  &lt;/a&gt;
  # Branchs
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#listar-branchs"&gt;
  &lt;/a&gt;
  Listar Branchs
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-branchs-matching"&gt;
  &lt;/a&gt;
  Listar branchs matching
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;--list&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;termo&amp;gt;*'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;exemplo, listar branchs, cujos nomes começam com &lt;strong&gt;fix/:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;--list&lt;/span&gt; &lt;span class="s1"&gt;'fix/*'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#renomear-branch"&gt;
  &lt;/a&gt;
  Renomear branch
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#local-e-se-voc%C3%AA-est%C3%A1-nessa-branch"&gt;
  &lt;/a&gt;
  Local, e se você está nessa branch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;-m&lt;/span&gt; &amp;lt;new-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#local-e-se-voc%C3%AA-n%C3%A3o-est%C3%A1-nessa-branch"&gt;
  &lt;/a&gt;
  Local, e se você NÃO está nessa branch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;-m&lt;/span&gt; &amp;lt;old-name&amp;gt; &amp;lt;new-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remota-seguir-os-passos-adicionais"&gt;
  &lt;/a&gt;
  Remota, seguir os passos adicionais
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push origin :&amp;lt;old-name&amp;gt; &amp;lt;new-name&amp;gt;

&lt;span class="c"&gt;# ou&lt;/span&gt;

git push origin &lt;span class="nt"&gt;--delete&lt;/span&gt; &amp;lt;old-name&amp;gt;
git push origin &amp;lt;new-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#resetar-a-branch-upstream-para-o-novo-nome-da-branch"&gt;
  &lt;/a&gt;
  Resetar a branch &lt;em&gt;upstream&lt;/em&gt; para o novo nome da branch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push origin &lt;span class="nt"&gt;-u&lt;/span&gt; &amp;lt;new-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#remover-tag-de-uma-branch"&gt;
  &lt;/a&gt;
  Remover tag de uma branch
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#remover-tag-branch-remota"&gt;
  &lt;/a&gt;
  Remover tag, branch remota
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push origin :refs/tags/&amp;lt;tag-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remover-tag-branch-local"&gt;
  &lt;/a&gt;
  Remover tag, branch local
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git tag &lt;span class="nt"&gt;-d&lt;/span&gt; &amp;lt;tag-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#mudar-para-branch-anterior-atalho"&gt;
  &lt;/a&gt;
  Mudar para branch anterior [atalho]
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout -
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-commits"&gt;
  &lt;/a&gt;
  # Commits
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#alterar-reescrever-mensagem-do-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Alterar (Reescrever) mensagem do último commit
&lt;/h2&gt;

&lt;p&gt;para renomear o commit, caso este seja seu último commit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;nova mensagem de commit&amp;gt;'&lt;/span&gt; &lt;span class="nt"&gt;--amend&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;caso já tenha subido este último commit para a branch remota, será necessário fazer um push force pois estaremos sobreescrevendo a história&lt;/li&gt;
&lt;li&gt;caso não seja o ultimo commit, será necessário renomear através de rebase interativo ou reset —soft&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#refazer-o-%C3%BAltimo-commit-add-arquivos-ao-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Refazer o último commit (add arquivos ao último commit)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#refazer-o-%C3%BAltimo-commit-utilizando-a-mensagem-do-commit-anterior"&gt;
  &lt;/a&gt;
  Refazer o último commit utilizando a mensagem do commit anterior
&lt;/h3&gt;

&lt;p&gt;Considere ter esquecido alguma alteração em um arquivo após ter commitado. Você pode utilizar o &lt;code&gt;amend&lt;/code&gt; para commitar de novo utilizando a mesma mensagem do último commit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# primeiro add o arquivo (git add &amp;lt;arquivos&amp;gt;) e em seguida:&lt;/span&gt;

git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--reuse-message&lt;/span&gt; HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refazer-o-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Refazer o último commit
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# primeiro add o arquivo (git add &amp;lt;arquivos&amp;gt;) e em seguida:&lt;/span&gt;

git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--no-edit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-commits"&gt;
  &lt;/a&gt;
  Desfazer commits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;com &lt;strong&gt;soft&lt;/strong&gt;: apaga só os commits&lt;/li&gt;
&lt;li&gt;com &lt;strong&gt;hard&lt;/strong&gt;: apaga os commits e o código&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-o-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Desfazer o último commit
&lt;/h3&gt;

&lt;p&gt;mantendo as alterações do último commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD^ 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;deletando todas as alterações do último commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; HEAD^
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#desfazer-commits-por-quantidade-do-mais-atual-para-o-mais-antigo"&gt;
  &lt;/a&gt;
  Desfazer commits por quantidade (do mais atual para o mais antigo)
&lt;/h3&gt;

&lt;p&gt;Desfaz apenas os commits e mantem as alterações&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~&amp;lt;quantidade de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Desfaz os commits e o código&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; HEAD~&amp;lt;quantidade de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#desfazer-commits-at%C3%A9-o-commit-x-com-soft-ou-hard"&gt;
  &lt;/a&gt;
  Desfazer commits até o commit x (com soft ou hard):
&lt;/h3&gt;

&lt;p&gt;Através de um &lt;code&gt;git log --oneline&lt;/code&gt;podemos verificar os commits, e obter a hash de referência.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~&amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;o comando acima irá desfazer todos os commits posteriores à hash especificada.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#-git-log-lista-de-commits"&gt;
  &lt;/a&gt;
  # Git log (lista de commits)
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#listar-commits-resumido"&gt;
  &lt;/a&gt;
  Listar commits resumido
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-gr%C3%A1fico-branch"&gt;
  &lt;/a&gt;
  Listar commits gráfico branch
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--graph&lt;/span&gt; &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-com-refer%C3%AAncias-associadas-branch-tag-etc"&gt;
  &lt;/a&gt;
  Listar commits com referências associadas (branch, tag, etc)
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--decorate&lt;/span&gt;

&lt;span class="c"&gt;# ou&lt;/span&gt;

git log &lt;span class="nt"&gt;--oneline&lt;/span&gt; &lt;span class="nt"&gt;--decorate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-por-quantidade"&gt;
  &lt;/a&gt;
  Listar commits por quantidade
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log -&amp;lt;quantidade&amp;gt;

&lt;span class="c"&gt;# ex: git log -5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-pesquisa-%E2%86%92-procurar-commits-com-uma-mensagempalavra"&gt;
  &lt;/a&gt;
  Listar commits pesquisa → procurar commits com uma mensagem/palavra
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;-S&lt;/span&gt; &amp;lt;&lt;span class="s1"&gt;'string-to-search'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-pesquisa-%E2%86%92-procurar-commits-com-uma-mensagempalavra-do-c%C3%B3digo"&gt;
  &lt;/a&gt;
  Listar commits pesquisa → procurar commits com uma mensagem/palavra do código
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;-S&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;string-to-search&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-pesquisa-%E2%86%92-procurar-commits-com-uma-mensagempalavra-da-mensagem-de-commit"&gt;
  &lt;/a&gt;
  Listar commits pesquisa → procurar commits com uma mensagem/palavra da mensagem de commit
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--grep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;string-to-search&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: git log --grep='fix'&lt;/span&gt;
&lt;span class="c"&gt;# ex: git log --grep='fix' --oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-pesquisa-%E2%86%92-procurar-commits-por-arquivos"&gt;
  &lt;/a&gt;
  Listar commits pesquisa → procurar commits por arquivos
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;file1.extension&amp;gt; &amp;lt;file2.extension&amp;gt; &amp;lt;...n&amp;gt;

&lt;span class="c"&gt;# ex: git log -- foo.ts bar.ts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-por-data"&gt;
  &lt;/a&gt;
  Listar commits por data
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#depois-de"&gt;
  &lt;/a&gt;
  Depois de
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--after&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;date&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: &lt;/span&gt;
&lt;span class="c"&gt;# git log --after='2014-7-1'&lt;/span&gt;
&lt;span class="c"&gt;# git log --after='yesterday'&lt;/span&gt;
&lt;span class="c"&gt;# git log --after='1 week ago'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#depois-de"&gt;
  &lt;/a&gt;
  Depois de
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--before&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;date&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: &lt;/span&gt;
&lt;span class="c"&gt;# git log --before='2014-7-1'&lt;/span&gt;
&lt;span class="c"&gt;# git log --before='yesterday'&lt;/span&gt;
&lt;span class="c"&gt;# git log --before='1 week ago'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#entre-datas"&gt;
  &lt;/a&gt;
  Entre datas
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--since&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;date&amp;gt;'&lt;/span&gt; &lt;span class="nt"&gt;--until&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;date&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: git log --since='&amp;lt;JAN 01 2019&amp;gt;' --until='&amp;lt;DEC 25 2019&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-por-autor"&gt;
  &lt;/a&gt;
  Listar commits por autor
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-autor"&gt;
  &lt;/a&gt;
  1 autor
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;name&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: &lt;/span&gt;
&lt;span class="c"&gt;#  git log --author='Lays'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mais-de-1-autor"&gt;
  &lt;/a&gt;
  Mais de 1 autor
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;name1&amp;gt;\|&amp;lt;name2&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: &lt;/span&gt;
&lt;span class="c"&gt;#  git log --author='Lays\|Bruno'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Listar último commit
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;-1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-push"&gt;
  &lt;/a&gt;
  # Push
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#push-force"&gt;
  &lt;/a&gt;
  Push force
&lt;/h2&gt;

&lt;p&gt;Caso a gente reescreva a história de algo que já está commitado na branch remota, como por exemplo um squash, renomear commit etc, será necessário fazer um &lt;code&gt;push force&lt;/code&gt; para forçar a atualização remota, já que ela irá recusar a atualização por &lt;code&gt;push&lt;/code&gt; normal. Ou seja o &lt;code&gt;push force&lt;/code&gt;, sobreescreve tudo o que está na branch remota pelo que está na branch local. Tome cuidado com esse comando, e nunca faça &lt;code&gt;push force&lt;/code&gt; das branchs principais.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# ou&lt;/span&gt;

git push &lt;span class="nt"&gt;-f&lt;/span&gt;

&lt;span class="c"&gt;# ou &lt;/span&gt;

git push origin +HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#fazer-push-sem-digitar-o-nome-da-branch-em-que-voc%C3%AA-est%C3%A1-head-atalho"&gt;
  &lt;/a&gt;
  Fazer push sem digitar o nome da branch em que você está (HEAD) [atalho]
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push origin HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-reflog-o-salva-vidas"&gt;
  &lt;/a&gt;
  🆘 # Reflog - o Salva vidas
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#hist%C3%B3rico-listar-tudo-o-que-voc%C3%AA-fez-no-git"&gt;
  &lt;/a&gt;
  Histórico - Listar tudo o que você fez no git
&lt;/h2&gt;

&lt;p&gt;Enquanto o &lt;code&gt;git log&lt;/code&gt; exibe apenas os commits, o &lt;code&gt;git reflog&lt;/code&gt; exibe todo o histórico, incluindo  commits, checkout, merge, rebase etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reflog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;a partir da lista/histórico conseguimos reverter algumas alterações indesejadas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algumas-op%C3%A7%C3%B5es-com-git-reflog"&gt;
  &lt;/a&gt;
  Algumas opções com git reflog
&lt;/h2&gt;

&lt;p&gt;Após executar o &lt;code&gt;git reflog&lt;/code&gt;, serão listadas todas as modificações. Procure o hash referente ao ponto que você gostaria de voltar no tempo. Algumas opções para trabalhar com o reflog:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reverter todas as alterações para o hash específico (deleta todas as alterações feitas):&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reverter somente um arquivo específico para o estado em que estava a partir de um hash:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fazer Cherry-pick a partir do hash:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git cherry-pick &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#-merge-tips"&gt;
  &lt;/a&gt;
  # Merge tips
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#sem-fastforward"&gt;
  &lt;/a&gt;
  sem fast-forward
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;ff&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;branch&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The --no-ff flag prevents git merge from executing a "fast-forward" if it detects that your current HEAD is an ancestor of the commit you're trying to merge. A fast-forward is when, instead of constructing a merge commit, git just moves your branch pointer to point at the incoming commit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, occasionally you want to prevent this behavior from happening, typically because you want to maintain a specific branch topology (e.g. you're merging in a topic branch and you want to ensure it looks that way when reading history). In order to do that, you can pass the --no-ff flag and git merge will always construct a merge instead of fast-forwarding.&lt;/p&gt;

&lt;p&gt;_&lt;a href="https://newbedev.com/what-is-the-difference-between-git-merge-and-git-merge-no-ff"&gt;https://newbedev.com/what-is-the-difference-between-git-merge-and-git-merge-no-ff&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8D972skD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvxf2ouab9sllgvv3y4o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8D972skD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvxf2ouab9sllgvv3y4o.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Fonte da imagem: NewBeDev&lt;/em&gt; &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#-arquivos"&gt;
  &lt;/a&gt;
  # Arquivos
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#renomear-arquivo-local"&gt;
  &lt;/a&gt;
  Renomear arquivo local
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#1%C2%AA-op%C3%A7%C3%A3o-renomear-pelo-computador"&gt;
  &lt;/a&gt;
  1ª opção: renomear pelo computador
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;renomeie normalmente o arquivo pela pasta.&lt;/li&gt;
&lt;li&gt;Faça &lt;code&gt;git add do arquivo&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Assim ele irá passar para o estado de RENAMED quando você verificar pelo &lt;code&gt;git status&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Agora faça o commit do arquivo normalmente com &lt;code&gt;git commit&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#2%C2%AA-op%C3%A7%C3%A3o-pelo-git"&gt;
  &lt;/a&gt;
  2ª opção: pelo Git
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;No terminal: &lt;code&gt;git mv nome_antigo.extensão novo_nome.extensão&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Assim ele irá passar para o estado de RENAMED quando você verificar pelo &lt;code&gt;git status&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Agora faça o commit do arquivo normalmente com &lt;code&gt;git commit&lt;/code&gt; para consolidar a mudança&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#unstage-files"&gt;
  &lt;/a&gt;
  Unstage Files
&lt;/h2&gt;

&lt;p&gt;Se você deseja já fez &lt;code&gt;git add&lt;/code&gt; em um arquivo e ele está em STAGE pronto para ser commitado, mas deseja reverter (sem perder as alterações):&lt;/p&gt;

&lt;p&gt;Todos os arquivos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arquivo específico:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;nome-do-arquivo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Desfazer alterações
&lt;/h2&gt;

&lt;p&gt;Supondo que você deseja desfazer alterações no arquivo (apagar alterações)… vai depender em que ponto ele está: untracked, modified, commited.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ao invés de desfazer, o mais aconselhado é reverter, para ao invés de apenas deletar a alteração, manter documentado. Ver reverter mais abaixo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es-arquivo-em-untracked"&gt;
  &lt;/a&gt;
  Desfazer alterações: arquivo em :::untracked:::
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt;&amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es-arquivos-em-modified-j%C3%A1-feito-add-mas-n%C3%A3o-commit"&gt;
  &lt;/a&gt;
  Desfazer alterações: arquivos em :::modified::: (já feito add, mas não commit)
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;1º tira ele de modified e leva de volta para untracked:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2º já é possível fazer checkout e reverter alterações&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt;&amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es-arquivos-j%C3%A1-commitados"&gt;
  &lt;/a&gt;
  Desfazer alterações: arquivos já commitados
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1%C2%BA-caso-soft"&gt;
  &lt;/a&gt;
  1º caso SOFT
&lt;/h3&gt;

&lt;p&gt;Tirar arquivo de commit e passar de volta para staged, sem deletar o arquivo, usa-se o comando –soft + a hash do pai, ou seja, a hash do commit anterior ao que eu quero apagar. e depois é possível fazer o checkout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; &amp;lt;hash_do_pai&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou através da quantidade de commits (voltar atrás em nº de commits):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~&amp;lt;numero de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2%C2%BA-caso-mixed"&gt;
  &lt;/a&gt;
  2º caso MIXED
&lt;/h3&gt;

&lt;p&gt;Tirar arquivo de commit e passar para modified (fora do staged), sem deletar o arquivo, usa-se o comando –mixed + a hash do pai, ou seja, a hash do commit anterior ao que eu quero apagar e depois é possível fazer o checkout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--mixed&lt;/span&gt; &amp;lt;hash_do_pai&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou&lt;/p&gt;

&lt;p&gt;através da quantidade de commits (voltar atrás em nº de commits):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--mixed&lt;/span&gt; HEAD~&amp;lt;numero de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3%C2%BA-caso-deletar-hard"&gt;
  &lt;/a&gt;
  3º caso DELETAR HARD
&lt;/h3&gt;

&lt;p&gt;Tirar arquivo de commit e deletar o arquivo (todos os commits e arquivos que estão depois do que o commit em questão deixam de existir, são deletados e fica só do commit pai/anterior para baixo). Usa-se o comando –hard + a hash do pai, ou seja, a hash do commit anterior ao que eu quero apagar e depois é possível fazer o checkout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; &amp;lt;hash_do_pai&amp;gt;&amp;lt;hash_do_commit_a_ser_revertido&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou&lt;/p&gt;

&lt;p&gt;através da quantidade de commits (voltar atrás em nº de commits):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; HEAD~&amp;lt;numero de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reverter-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Reverter alterações
&lt;/h2&gt;

&lt;p&gt;Quase semelhante ao desfazer, mas nesse caso será criado um commit que indica a reversão. É o mais aconselhado.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1%C2%B0-caso"&gt;
  &lt;/a&gt;
  1° caso
&lt;/h3&gt;

&lt;p&gt;Com mensagem sobre a reversão, neste caso o editor de texto irá abrir para que você insira a mensagem sobre o por que da reversão, ou digite (-m “mensagem”) após o hash&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git revert &amp;lt;hash_do_commit_a_ser_revertido&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2%C2%B0-caso"&gt;
  &lt;/a&gt;
  2° caso
&lt;/h3&gt;

&lt;p&gt;Sem mensagem sobre a reversão:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git revert &amp;lt;hash_do_commit_a_ser_revertido&amp;gt; &lt;span class="nt"&gt;--no-edit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-arquivo-deletado-da-m%C3%A1quina"&gt;
  &lt;/a&gt;
  Desfazer: arquivo deletado da máquina
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remover-arquivopasta-pelo-git"&gt;
  &lt;/a&gt;
  Remover arquivo/pasta pelo Git
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#remover-arquivo"&gt;
  &lt;/a&gt;
  Remover arquivo
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nb"&gt;rm&lt;/span&gt; &amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remover-pasta"&gt;
  &lt;/a&gt;
  Remover pasta
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; &amp;lt;nome da pasta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Desfazer alterações
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-todas-as-altera%C3%A7%C3%B5es-untracked"&gt;
  &lt;/a&gt;
  Desfazer todas as alterações (untracked)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;visualizar arquivos que estão fora da &lt;em&gt;working tree&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clean &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;deletar arquivos:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clean &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-todas-as-altera%C3%A7%C3%B5es-tracked"&gt;
  &lt;/a&gt;
  Desfazer todas as alterações (tracked)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#voltar-para-vers%C3%A3o-anterior-de-arquivo-checkout"&gt;
  &lt;/a&gt;
  Voltar para versão anterior de arquivo (checkout)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &amp;lt;file-name.extension&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remover-arquivo-adicionado-acidentalmente"&gt;
  &lt;/a&gt;
  Remover arquivo adicionado acidentalmente
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#arquivo-ainda-n%C3%A3o-commitado"&gt;
  &lt;/a&gt;
  Arquivo ainda não commitado:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &amp;lt;/path/file-name.extension&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arquivo-j%C3%A1-commitado"&gt;
  &lt;/a&gt;
  Arquivo já commitado:
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-merge-e-manter-o-hist%C3%B3rico-de-commits"&gt;
  &lt;/a&gt;
  Desfazer merge e manter o histórico de commits
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~1

git reset &amp;lt;/path/file-name.extension&amp;gt; 

&lt;span class="nb"&gt;rm&lt;/span&gt; &amp;lt;/path/file-name.extension&amp;gt;

git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ir para a branch principal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &amp;lt;master_branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;git log para verificar a hash correta&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;fazer a reversão utilizando a hash do merge correspondente&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git revert &lt;span class="nt"&gt;-m&lt;/span&gt; 1 &amp;lt;merge-commit-hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#-squash-comprimir-commits-em-um-s%C3%B3"&gt;
  &lt;/a&gt;
  # Squash (‘comprimir’ commits em um só)
&lt;/h1&gt;

&lt;p&gt;Considerando que você deseja comprimir/transformar seus últimos 1 só.. para isso fazemos o squash.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;desfazer os últimos commits por quantidade (mantendo as alterações):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~&amp;lt;commit_quantity&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ex, desfazer 5 commits: &lt;code&gt;git reset --soft HEAD~5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ou você pode optar por utilizar as hashs dos commits. O comando abaixo listará os commits, assim você pode verificar até qual commit você quer desfazer.&lt;br&gt;
(lembrando que os commits são listados do mais novo para o mais antigo)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;em sequida:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; &amp;lt;hash_do_ultimo-commit_que_vc_quer_manter&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ex:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;

&lt;span class="c"&gt;# listou:&lt;/span&gt;
&amp;lt;x323x32&amp;gt; meu commit 6
&amp;lt;kj56kj5&amp;gt; meu commit 5
&amp;lt;8f7g87f&amp;gt; meu commit 4
&amp;lt;k6k356j&amp;gt; meu commit 3
&amp;lt;jk4hj34&amp;gt; meu commit 2
&amp;lt;hjh2424&amp;gt; meu commit 1

&lt;span class="c"&gt;# supomos que você deseja desfazer os 3 primeiros commits &lt;/span&gt;
&lt;span class="c"&gt;# (hash_6, hash_5, hash_4) e manter a partir do hash_3, então você usará&lt;/span&gt;
&lt;span class="c"&gt;# o código do hash 3&lt;/span&gt;

git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; k6k356j
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;faz o processo de add e commit com a mensagem certa&lt;/li&gt;
&lt;li&gt;faz push para o repositório remoto&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#-configura%C3%A7%C3%B5es-globais"&gt;
  &lt;/a&gt;
  # Configurações globais
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#verificar-e-editar-configura%C3%A7%C3%B5es-globais"&gt;
  &lt;/a&gt;
  Verificar e editar configurações globais
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configurar-usu%C3%A1rio-e-email"&gt;
  &lt;/a&gt;
  Configurar usuário e email
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &amp;lt;name&amp;gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &amp;lt;email&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configurar-editor-padr%C3%A3o"&gt;
  &lt;/a&gt;
  Configurar editor padrão
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; core.editor &lt;span class="s1"&gt;'&amp;lt;editor_name&amp;gt; --wait'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;exemplo com o VSCode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; core.editor &lt;span class="s1"&gt;'code --wait'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-remover-git-no-reposit%C3%B3rio"&gt;
  &lt;/a&gt;
  # Remover Git no repositório
&lt;/h1&gt;

&lt;p&gt;Se por algum motivo não deseja mais usar o controle de versões e deseja 'desligar/remover' o Git do repositório (esse comando irá remover/deletar o Git do repositório em questão):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; .git/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Este comando irá deletar o arquivo onde o git guarda todas as informações e configurações do repositório. Pode ser feito dessa forma, ou deletando o arquivo manualmente.&lt;/p&gt;

&lt;p&gt;--&lt;br&gt;
&lt;em&gt;Foto de capa: &lt;a href="https://unsplash.com/@yancymin?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Yancy Min&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/git?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>18 amazing 🤩 GitHub repositories that will help you 🪄 make a beautiful project</title>
      <author>Roden</author>
      <pubDate>Fri, 03 Sep 2021 20:31:32 +0000</pubDate>
      <link>https://dev.to/kerthin/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-3pgo</link>
      <guid>https://dev.to/kerthin/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-3pgo</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;

&lt;p&gt;So let's get started&lt;/p&gt;

&lt;h1&gt;1. Lottie-Web/Bodymovin&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/airbnb"&gt;
        airbnb
      &lt;/a&gt; / &lt;a href="https://github.com/airbnb/lottie-web"&gt;
        lottie-web
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Render After Effects animations natively on Web, Android and iOS, and React Native. http://airbnb.io/lottie/
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Lottie for Web, &lt;a href="https://github.com/airbnb/lottie-android"&gt;Android&lt;/a&gt;, &lt;a href="https://github.com/airbnb/lottie-ios"&gt;iOS&lt;/a&gt;, &lt;a href="https://github.com/airbnb/lottie-react-native"&gt;React Native&lt;/a&gt;, and &lt;a href="https://aka.ms/lottie" rel="nofollow"&gt;Windows&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Lottie is a mobile library for Web,  and iOS that parses &lt;a href="http://www.adobe.com/products/aftereffects.html" rel="nofollow"&gt;Adobe After Effects&lt;/a&gt; animations exported as json with &lt;a href="https://github.com/airbnb/lottie-web"&gt;Bodymovin&lt;/a&gt; and renders them natively on mobile!&lt;/p&gt;
&lt;p&gt;For the first time, designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating it by hand. They say a picture is worth 1,000 words so here are 13,000:&lt;/p&gt;
&lt;h1&gt;
View documentation, FAQ, help, examples, and more at &lt;a href="http://airbnb.io/lottie/" rel="nofollow"&gt;airbnb.io/lottie&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Example1.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEX1NtkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Example1.gif" alt="Example1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Example2.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2LvTS1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Example2.gif" alt="Example2"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Example3.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rNb_2xlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Example3.gif" alt="Example3"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Community%202_3.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C1iNFeaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Community%25202_3.gif" alt="Community"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Example4.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g24cXe2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Example4.gif" alt="Example4"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Plugin installation&lt;/h1&gt;
&lt;h3&gt;
Option 1 (Recommended):&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Download it from from aescripts + aeplugins:&lt;/strong&gt;
&lt;a href="http://aescripts.com/bodymovin/" rel="nofollow"&gt;http://aescripts.com/bodymovin/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Option 2:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Or get it from the adobe store&lt;/strong&gt;
&lt;a href="https://creative.adobe.com/addons/products/12557" rel="nofollow"&gt;https://creative.adobe.com/addons/products/12557&lt;/a&gt;
CC 2014 and up.&lt;/p&gt;
&lt;h2&gt;
Other installation options:&lt;/h2&gt;
&lt;h3&gt;
Option 3:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;download the ZIP from the repo.&lt;/li&gt;
&lt;li&gt;Extract content and get the .zxp file from '/build/extension'&lt;/li&gt;
&lt;li&gt;Use the &lt;a href="http://aescripts.com/learn/zxp-installer/" rel="nofollow"&gt;ZXP installer&lt;/a&gt; from aescripts.com.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Option 4:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Close After Effects&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract the zipped file on &lt;code&gt;build/extension/bodymovin.zxp&lt;/code&gt; to the adobe CEP folder:&lt;br&gt;
WINDOWS:&lt;br&gt;
&lt;code&gt;C:\Program Files&lt;/code&gt;…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/airbnb/lottie-web"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I want to start with my favorite repository. With this library, you can export the animation you created from &lt;code&gt;Adobe After Effects&lt;/code&gt; directly to your &lt;code&gt;website&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aRHtFZVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ab9lw773gbkzx8fd1h3b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aRHtFZVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ab9lw773gbkzx8fd1h3b.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZytkJi5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od5sa1hhenf3tebzxf1e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZytkJi5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od5sa1hhenf3tebzxf1e.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NIbazi3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tejdtk8maoiwv17gvao.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NIbazi3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tejdtk8maoiwv17gvao.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;2. Parallax.js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wagerfield"&gt;
        wagerfield
      &lt;/a&gt; / &lt;a href="https://github.com/wagerfield/parallax"&gt;
        parallax
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Parallax Engine that reacts to the orientation of a smart device
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/wagerfield/parallaxlogo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kn8x-3YU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wagerfield/parallaxlogo.png" alt="Parallax.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cdnjs.com/libraries/parallax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3466bbd955a05ca7928ef655b5cd73c0f964db3fdab3503964245e701afa1111/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f706172616c6c61782e737667" alt="CDNJS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Parallax Engine that reacts to the orientation of a smart device. Where no gyroscope or motion detection hardware is available, the position of the cursor is used instead.&lt;/p&gt;
&lt;p&gt;Check out the &lt;strong&gt;&lt;a href="https://wagerfield.github.com/parallax/"&gt;demo&lt;/a&gt;&lt;/strong&gt; to see it in action!&lt;/p&gt;
&lt;h1&gt;
Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax#1-getting-started"&gt;1. Getting started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#11-installation"&gt;1.1 Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#12-preparations"&gt;1.2 Preparations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#13-run-parallax"&gt;1.3 Run Parallax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax#2-configuration"&gt;2. Configuration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#21-programmatic-vs-declarative"&gt;2.1 Programmatic vs Declarative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#22-configuration-options"&gt;2.2 Configuration Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#3-methods"&gt;3. Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax#4-development"&gt;4. Development&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#41-running-the-project"&gt;4.1 Running the Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#42-opening-an-issue"&gt;4.2 Opening an Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#43-known-issues"&gt;4.3 Known Issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#5-faq"&gt;5. FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax#6-information"&gt;6. Information&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#61-license"&gt;6.1 License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#62-authors"&gt;6.2 Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
1. Getting started&lt;/h1&gt;
&lt;h2&gt;
1.1 Installation&lt;/h2&gt;
&lt;h3&gt;
1.1 a) Using the CDN&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;&amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/parallax/3.1.0/parallax.min.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; to your markup&lt;/li&gt;
&lt;li&gt;Done!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Many thanks to the fine folks over at &lt;a href="https://cdnjs.com/" rel="nofollow"&gt;cdnjs&lt;/a&gt; for hosting our library.&lt;/p&gt;
&lt;h3&gt;
1.1 b) Beginners&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Head over to the &lt;a href="https://github.com/wagerfield/parallax/releases"&gt;releases&lt;/a&gt; Section&lt;/li&gt;
&lt;li&gt;Download &lt;code&gt;compiled.zip&lt;/code&gt; from the latest release&lt;/li&gt;
&lt;li&gt;Extract the ZIP archive and locate the &lt;code&gt;parallax.js&lt;/code&gt; and &lt;code&gt;parallax.min.js&lt;/code&gt; files
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;parallax.js&lt;/code&gt; if you want to snoop around in the code&lt;/li&gt;
&lt;li&gt;Use…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wagerfield/parallax"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With this library, you can create a beautiful parallax effect that you can control with the mouse movement. You can also adjust the speed of moving objects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Wmv1XOIvePuc3qO0Cb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Wmv1XOIvePuc3qO0Cb/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;3. Flat Surface Shader [FSS]&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wagerfield"&gt;
        wagerfield
      &lt;/a&gt; / &lt;a href="https://github.com/wagerfield/flat-surface-shader"&gt;
        flat-surface-shader
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flat Surface Shader for rendering illuminated triangles
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Flat Surface Shader [FSS]&lt;/h1&gt;
&lt;p&gt;Simple, lightweight &lt;strong&gt;Flat Surface Shader&lt;/strong&gt; written in &lt;strong&gt;JavaScript&lt;/strong&gt; for rendering lit &lt;strong&gt;Triangles&lt;/strong&gt; to a number of contexts. Currently there is support for &lt;strong&gt;WebGL&lt;/strong&gt;, &lt;strong&gt;Canvas 2D&lt;/strong&gt; and &lt;strong&gt;SVG&lt;/strong&gt;. Check out this &lt;a href="http://wagerfield.github.com/flat-surface-shader/"&gt;demo&lt;/a&gt; to see it in action.&lt;/p&gt;
&lt;h2&gt;
Understanding Lighting&lt;/h2&gt;
&lt;p&gt;Simply put, &lt;strong&gt;FSS&lt;/strong&gt; uses the &lt;a href="http://en.wikipedia.org/wiki/Lambertian_reflectance" rel="nofollow"&gt;Lambertian Reflectance&lt;/a&gt; model to calculate the color of a &lt;strong&gt;Triangle&lt;/strong&gt; based on an array of &lt;strong&gt;Light&lt;/strong&gt; sources within a &lt;strong&gt;Scene&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
Light&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;Light&lt;/strong&gt; is composed of a 3D position &lt;strong&gt;Vector&lt;/strong&gt; and 2 &lt;strong&gt;Color&lt;/strong&gt; objects defining its &lt;strong&gt;ambient&lt;/strong&gt; &amp;amp; &lt;strong&gt;diffuse&lt;/strong&gt; emissions. These color channels interact with the &lt;strong&gt;Material&lt;/strong&gt; of a &lt;strong&gt;Mesh&lt;/strong&gt; to calculate the color of a &lt;strong&gt;Triangle&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
Triangle&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;Triangle&lt;/strong&gt; is constructed from &lt;strong&gt;3 Vertices&lt;/strong&gt; which each define the &lt;strong&gt;x, y&lt;/strong&gt; and &lt;strong&gt;z&lt;/strong&gt; coordinates of a corner. Based on these &lt;strong&gt;3 Vertices&lt;/strong&gt;, a forth &lt;strong&gt;3D Vector&lt;/strong&gt; is automatically derived at the center of the &lt;strong&gt;Triangle&lt;/strong&gt; – this is…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wagerfield/flat-surface-shader"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--evrHMTVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/40PrJABm6oBD2neqbG/giphy.gif%3Fcid%3D790b76119f62e40cd0c934d412fc4929c9a71e79e649acbf%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--evrHMTVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/40PrJABm6oBD2neqbG/giphy.gif%3Fcid%3D790b76119f62e40cd0c934d412fc4929c9a71e79e649acbf%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;4. Hover.css&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/IanLunn"&gt;
        IanLunn
      &lt;/a&gt; / &lt;a href="https://github.com/IanLunn/Hover"&gt;
        Hover
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Hover.css&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ianlunn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0379394e4207f98955259bf2376cae50095e17ac8dedfed1a3f2087f5bcdd02c/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f6c61746f2d626c75652e706e67" alt="Buy Me A Coffee" width="217" height="51"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ianlunn.github.io/Hover" rel="nofollow"&gt;Demo&lt;/a&gt;  |
&lt;a href="http://ianlunn.co.uk/articles/hover-css-tutorial-introduction/" rel="nofollow"&gt;Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#downloadinstall"&gt;Download/Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Hover#how-to-use"&gt;How To Use&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#a-copy-and-paste-an-effect"&gt;A. Copy and Paste an Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#b-reference-hovercss"&gt;B. Reference Hover.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#a-note-on-the-display-property"&gt;A Note on the display property&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#using-icon-effects"&gt;Using Icon Effects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Hover#whats-included"&gt;What's Included?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#css"&gt;css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#scssless"&gt;scss/less&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#other"&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#browser-support"&gt;Browser Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#using-grunt-for-development"&gt;Using Grunt for Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Hover#using-sassless-for-development"&gt;Using Sass/LESS for Development&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#_hacks"&gt;_hacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#_mixins"&gt;_mixins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#_options"&gt;_options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#contribute-to-hovercss"&gt;Contribute to Hover.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Hover#licenses"&gt;Licenses&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#commercial-license"&gt;Commercial License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#open-source-license"&gt;Open-Source License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#hire-ian-lunn"&gt;Hire Ian Lunn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Download/Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NPM: &lt;code&gt;npm install hover.css --save&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Bower: &lt;code&gt;bower install hover --save&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover/archive/master.zip"&gt;Download Zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
How To Use&lt;/h2&gt;
&lt;p&gt;Hover.css can be used in a number of ways; either copy and paste the effect you'd like to use in your own stylesheet or reference the stylesheet. Then just add the class name of the effect to the element you'd…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/IanLunn/Hover"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;5. Video.js Markers&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/spchuang"&gt;
        spchuang
      &lt;/a&gt; / &lt;a href="https://github.com/spchuang/videojs-markers"&gt;
        videojs-markers
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Displays customizable markers upon progress bars of videojs players
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
Not actively maintained anymore.&lt;/h2&gt;
&lt;h1&gt;
Video.js Markers&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/edbdc625985117492139bf01a5953f9b92c222cd079cfd2f02ae279afed512e9/68747470733a2f2f7261772e6769746875622e636f6d2f7370636875616e672f766964656f6a732d6d61726b6572732f6d61737465722f73637265656e73686f742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/edbdc625985117492139bf01a5953f9b92c222cd079cfd2f02ae279afed512e9/68747470733a2f2f7261772e6769746875622e636f6d2f7370636875616e672f766964656f6a732d6d61726b6572732f6d61737465722f73637265656e73686f742e706e67" alt="Alt text" title="Screen shot of videojs.markers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A plugin that displays customizable markers upon progress bars of the video with &lt;a href="https://github.com/videojs/video.js/"&gt;Video.js&lt;/a&gt;. This could be used to show video breaks and show overlaid text on the video when playback reaches the specific break point.&lt;/p&gt;
&lt;h2&gt;
Demo and Documentation&lt;/h2&gt;
&lt;p&gt;See &lt;a href="http://www.sampingchuang.com/videojs-markers" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JSBin Demo can be found &lt;a href="http://jsbin.com/vifilen/1/edit" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Display markers on progress bar, with hover-over tooltips&lt;/li&gt;
&lt;li&gt;Display break overlays&lt;/li&gt;
&lt;li&gt;Flexible styling&lt;/li&gt;
&lt;li&gt;Support dynamically adding and removing markers&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Download&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download master with git -- &lt;code&gt;git clone git@github.com:spchuang/videojs-markers.git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download zip/tar files for newest release&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download through bower -- &lt;code&gt;bower install videojs-markers&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;p&gt;Add the 'videojs.markers.js' plugin and stylesheet after including videojs script&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;link href="http://vjs.zencdn.net/4.2/video-js.css" rel="stylesheet"&amp;gt;
&amp;lt;link href="videojs.markers.css" rel="stylesheet"&amp;gt;
&amp;lt;script src="http://vjs.zencdn.net/4.2/video.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src='../src/videojs.markers.js'&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Basic usage: display break markers in the video.&lt;/h3&gt;
&lt;p&gt;To add breaks in the video, simply add a new time (in seconds) in the list of breaks option.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;// initialize video.js
var video&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/spchuang/videojs-markers"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With this plugin, you can place the necessary marks on the video that is present on your site, so that you can easily switch to the time codes you need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gLTB8Tyj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ths63oa1tpsxgn25a20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLTB8Tyj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ths63oa1tpsxgn25a20.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;6. Magic Grid&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/e-oj"&gt;
        e-oj
      &lt;/a&gt; / &lt;a href="https://github.com/e-oj/Magic-Grid"&gt;
        Magic-Grid
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple, lightweight Javascript library for dynamic grid layouts.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/magic-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/843e7b1d658b0d7cc7182815cc780d78537f73379162256a87d9228e08ce7e38/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6d616769632d677269642e7376673f7374796c653d666f722d7468652d6261646765" alt="MIT License"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/magic-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89c02f9b8d7bde5145a42d6dfd5e42efe533c8ab628b354889dd0ab8c3e7caf2/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d616769632d677269642e7376673f7374796c653d666f722d7468652d6261646765" alt="Version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/magic-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c74c9f674b30e00f5d4ef3b578c8367a1a7c2ffbc65166baf80aab373e579881/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f6d616769632d677269642e7376673f7374796c653d666f722d7468652d6261646765" alt="Downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/e.oj" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28aae05a0fba45679e8e27d90609601e249b64a5fe30dfef05495de4f4e318d4/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f76322f64656661756c742d79656c6c6f772e706e67" alt="Buy Me A Coffee" height="40px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Magic Grid &lt;a href="https://twitter.com/intent/tweet?text=Magic%20Grid%20-%20A%20simple,%20lightweight%20Javascript%20library%20for%20dynamic%20grid%20layouts.&amp;amp;url=https://github.com/e-oj/Magic-Grid&amp;amp;hashtags=MagicGrid,GridLayout,JS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h2&gt;
A simple, lightweight Javascript library for dynamic grid layouts.&lt;/h2&gt;
&lt;p&gt;Creating a dynamic grid layout has never been easier. With Magic Grid, all you have to do is specify a container and listen for changes. A few other configuration options are available for convenience but it's all very simple. Check it out live &lt;b&gt;&lt;a href="https://jsfiddle.net/eolaojo/4pov0rdf/" rel="nofollow"&gt;on JSFIDDLE&lt;/a&gt;&lt;/b&gt;. You can read about the implementation details &lt;b&gt;&lt;a href="https://codeburst.io/magic-grid-f8e2221e7cef" rel="nofollow"&gt;on CodeBurst&lt;/a&gt;&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: Every item in the grid must have the same width.&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;
&lt;a href="https://github.com/e-oj/Magic-Grid/blob/master/test/grid.html"&gt;Sample Usage&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6089b9eda5025251a335de3f78868627760749680e71707efcb0d6da3af9b710/687474703a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d3137324553505a447751496637764c4d656c756e2d5f34526157445f2d6a39342d"&gt;&lt;img src="https://camo.githubusercontent.com/6089b9eda5025251a335de3f78868627760749680e71707efcb0d6da3af9b710/687474703a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d3137324553505a447751496637764c4d656c756e2d5f34526157445f2d6a39342d" alt="demo" width="850"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Why not CSS Grid?&lt;/h3&gt;
&lt;p&gt;This question is addressed in &lt;b&gt;&lt;a href="https://codeburst.io/magic-grid-f8e2221e7cef" rel="nofollow"&gt;the article&lt;/a&gt;&lt;/b&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Implementing a grid layout can quickly turn into a tricky task. If you have grid items that are always the same height, then you can probably make do with a Flexbox grid or some other CSS grid implementation. However, if you’re dealing with user-generated content, chances are, you don’t have the luxury of equal height components. One longer…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/e-oj/Magic-Grid"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This library will help you create an adaptive grid, where you do not have to create separate &lt;code&gt;@media styles&lt;/code&gt;. Just specify the container and that's it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u9Y-32f2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f9l8iqohheixpi5hl8d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u9Y-32f2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f9l8iqohheixpi5hl8d.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;7. Vue/React Content Loader&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/egoist"&gt;
        egoist
      &lt;/a&gt; / &lt;a href="https://github.com/egoist/vue-content-loader"&gt;
        vue-content-loader
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SVG component to create placeholder loading, like Facebook cards loading.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
vue-content-loader&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://npmjs.com/package/vue-content-loader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/827f587f18e3b16515327ac530b879ca5eb8a6aea64fb4a882578ce87c2cc72d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7675652d636f6e74656e742d6c6f616465722e7376673f7374796c653d666c6174" alt="NPM version"&gt;&lt;/a&gt; &lt;a href="https://npmjs.com/package/vue-content-loader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/738272af9a3b7314ed888f604ecd6a77b1d8d7f81e897ffdb32c0a2d66e575ee/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f7675652d636f6e74656e742d6c6f616465722e7376673f7374796c653d666c6174" alt="NPM downloads"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/egoist/vue-content-loader/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/318ec0138a5f83087ed8112b9c4de1ba015e2c05b24fdfd28bcc2aa16a3e350c/68747470733a2f2f636972636c6563692e636f6d2f67682f65676f6973742f7675652d636f6e74656e742d6c6f616465722f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SVG component to create placeholder loading, like Facebook cards loading.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rm23uFCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif" alt="preview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;This is a Vue port for &lt;a href="https://github.com/danilowoz/react-content-loader"&gt;react-content-loader&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Completely customizable: you can change the colors, speed and sizes.&lt;/li&gt;
&lt;li&gt;Create your own loading: use the &lt;a href="https://create-content-loader.now.sh/" rel="nofollow"&gt;online tool&lt;/a&gt; to create your custom loader easily.&lt;/li&gt;
&lt;li&gt;You can use it right now: there are a lot of presets already.&lt;/li&gt;
&lt;li&gt;Performance
&lt;ul&gt;
&lt;li&gt;Tree-shakable and highly optimized bundle.&lt;/li&gt;
&lt;li&gt;Pure SVG, so it's works without any javascript, canvas, etc.&lt;/li&gt;
&lt;li&gt;Pure functional components.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;⚠️ &lt;strong&gt;The latest version is compatible with Vue 3 only.&lt;/strong&gt; For Vue 2 &amp;amp; Nuxt 2, use &lt;code&gt;vue-content-loader@^0.2&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;With npm:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i vue-content-loader&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or with yarn:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add vue-content-loader&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;CDN: &lt;a href="https://unpkg.com/vue-content-loader/" rel="nofollow"&gt;UNPKG&lt;/a&gt; | &lt;a href="https://cdn.jsdelivr.net/npm/vue-content-loader/" rel="nofollow"&gt;jsDelivr&lt;/a&gt; (available as &lt;code&gt;window.contentLoaders&lt;/code&gt;)&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;👀👉 Demo: &lt;a href="https://codesandbox.io/s/vue-content-loader-igfyf?file=/src/App.vue" rel="nofollow"&gt;CodeSandbox&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-html-vue position-relative js-code-highlight"&gt;
&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;template&lt;/span&gt;&amp;amp;gt
  &amp;lt;&lt;span class="pl-ent"&gt;content-loader&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;content-loader&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;template&lt;/span&gt;&amp;gt;

&lt;span class="pl-s1"&gt;&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; { &lt;span class="pl-smi"&gt;ContentLoader&lt;/span&gt; } &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vue-content-loader&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-c1"&gt;default&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-s1"&gt;  components&lt;span class="pl-k"&gt;:&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-s1"&gt;    ContentLoader&lt;/span&gt;
&lt;span class="pl-s1"&gt;  }&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/egoist/vue-content-loader"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;SVG component to create placeholder loading, like Facebook cards loading.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CgjhJ-IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/EzDts3uOGLkzqB6JMd/giphy.gif%3Fcid%3D790b7611babc983ffdf784eefb5f8ffd3b26eddc3d9011e0%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CgjhJ-IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/EzDts3uOGLkzqB6JMd/giphy.gif%3Fcid%3D790b7611babc983ffdf784eefb5f8ffd3b26eddc3d9011e0%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Version for &lt;code&gt;React.js&lt;/code&gt;:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/danilowoz"&gt;
        danilowoz
      &lt;/a&gt; / &lt;a href="https://github.com/danilowoz/react-content-loader"&gt;
        react-content-loader
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚪ SVG-Powered component to easily create skeleton loadings.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4838076/34419335-5669c3f8-ebea-11e7-9668-c47b7846970b.png"&gt;&lt;img width="350" alt="react-content-loader" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KdUp9yEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4838076/34419335-5669c3f8-ebea-11e7-9668-c47b7846970b.png"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif"&gt;&lt;img width="400" alt="Example's react-content-loader" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rm23uFCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;SVG-Powered component to easily create placeholder loadings (like Facebook's cards loading).&lt;/p&gt;

&lt;h2&gt;
Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
⚙️ &lt;strong&gt;Customizable:&lt;/strong&gt; Feel free to change the colors, speed, sizes, and even &lt;strong&gt;RTL&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;
👌 &lt;strong&gt;Plug and play:&lt;/strong&gt; with many presets to use, see the &lt;a href="http://danilowoz.com/create-content-loader/#gallery" rel="nofollow"&gt;examples&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
✏️ &lt;strong&gt;DIY:&lt;/strong&gt; use the &lt;a href="https://danilowoz.com/create-content-loader" rel="nofollow"&gt;create-content-loader&lt;/a&gt; to create your own custom loaders easily;&lt;/li&gt;
&lt;li&gt;
📱 &lt;strong&gt;React Native support&lt;/strong&gt;: same API, as same powerful features;&lt;/li&gt;
&lt;li&gt;
⚛️ &lt;strong&gt;Really lightweight:&lt;/strong&gt; less than &lt;strong&gt;2kB&lt;/strong&gt; and &lt;strong&gt;0 dependencies&lt;/strong&gt; for web version;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Index&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#gettingstarted"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danilowoz/react-content-loader#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#native"&gt;Native&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#options"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#similarpackages"&gt;Similar packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#development"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Getting Started&lt;/h2&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i react-content-loader --save&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add react-content-loader&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
For React Native&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i react-content-loader react-native-svg --save&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add react-content-loader react-native-svg&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;CDN from &lt;a href="https://www.jsdelivr.com/package/npm/react-content-loader" rel="nofollow"&gt;JSDELIVR&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;There are two ways to use it:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Presets, see the &lt;a href="https://danilowoz.com/react-content-loader/" rel="nofollow"&gt;examples&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ContentLoader&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Facebook&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-content-loader'&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;MyLoader&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;ContentLoader&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;MyFacebookLoader&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Facebook&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/danilowoz/react-content-loader"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;8. React Image Gallery&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/xiaolin"&gt;
        xiaolin
      &lt;/a&gt; / &lt;a href="https://github.com/xiaolin/react-image-gallery"&gt;
        react-image-gallery
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React carousel image gallery component with thumbnail support  🖼
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React Image Gallery&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://badge.fury.io/js/react-image-gallery" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c3dc34c8244e0987205f2d004aec27b013a0fb293d50262152851151d540e1d/68747470733a2f2f62616467652e667572792e696f2f6a732f72656163742d696d6167652d67616c6c6572792e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/react-image-gallery" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be994b9d7b45d701f09b00e951aae305a059bc9b8bbe191ea7d65a16c51ee7f3/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d696d6167652d67616c6c6572792e7376673f7374796c653d666c6174" alt="Download Count"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/package/react-image-gallery" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1e915030d8f840db3853ce8cc7be315b5c97d0e7f399f1326f1f9e507c43ee2c/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d696d6167652d67616c6c657279" alt="Bundle size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Live Demo (try it on mobile for swipe support)&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://linxtion.com/demo/react-image-gallery" rel="nofollow"&gt;&lt;code&gt;linxtion.com/demo/react-image-gallery&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/xiaolin/react-image-gallery/raw/master/static/image_gallery_v1.0.2.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vNw0NNxL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/xiaolin/react-image-gallery/raw/master/static/image_gallery_v1.0.2.gif" alt="demo gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React image gallery is a React component for building image galleries and carousels&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mobile swipe gestures&lt;/li&gt;
&lt;li&gt;Thumbnail navigation&lt;/li&gt;
&lt;li&gt;Fullscreen support&lt;/li&gt;
&lt;li&gt;Custom rendered slides&lt;/li&gt;
&lt;li&gt;RTL support&lt;/li&gt;
&lt;li&gt;Responsive design&lt;/li&gt;
&lt;li&gt;Tons of customization options (see props below)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;p&gt;React Image Gallery requires &lt;strong&gt;React 16.0.0 or later.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install react-image-gallery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Style import (with webpack)&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;# SCSS
@import "~react-image-gallery/styles/scss/image-gallery.scss"
# CSS
@import "~react-image-gallery/styles/css/image-gallery.css";
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Example&lt;/h3&gt;
&lt;p&gt;Need more example? See &lt;a href="https://github.com/xiaolin/react-image-gallery/blob/master/example/app.js"&gt;&lt;code&gt;example/app.js&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ImageGallery&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-image-gallery'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;images&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;
  &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;original&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1018/1000/600/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;thumbnail&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1018/250/150/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;original&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1015/1000/600/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;thumbnail&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1015/250/150/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;original&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1019/1000/600/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;thumbnail&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1019/250/150/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;MyGallery&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;Component&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-en"&gt;render&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;ImageGallery&lt;/span&gt; &lt;span class="pl-c1"&gt;items&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-s1"&gt;images&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h1&gt;
Props&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;items&lt;/code&gt;…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/xiaolin/react-image-gallery"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-NBwOtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbx76t756fw1ct3g00er.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-NBwOtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbx76t756fw1ct3g00er.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;9. WebSlides&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/webslides"&gt;
        webslides
      &lt;/a&gt; / &lt;a href="https://github.com/webslides/WebSlides"&gt;
        WebSlides
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create HTML presentations in seconds —
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
WebSlides = Create stories with Karma&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83d3746e5881c1867665223424263d8e604df233d0a11aae0813e0414d433943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT License"&gt;&lt;/a&gt;
&lt;a href="https://github.com/webslides/webslides/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/c6883e1508adedebaaa4c6302f75c8ae627b4be3801d4dd7665638f8a40c478c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f776562736c696465732f776562736c696465732e737667" alt="Release"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/webslides/WebSlides" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/422375738ab6f6dcdb4afd5eab7a5364ba7c0c95184391de46988ec2abb5b118/68747470733a2f2f636f6465636f762e696f2f67682f776562736c696465732f576562536c696465732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.me/jlantunez/8" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2bfa6102e99ff9a137185897b0a566aa0977a4790348c462e6951829e787af8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/webslides" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da078e6c9d3d5792bff8e49a2e9c9f19be63155c662ed90d91772097fc9d02dd/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f6769746875622e636f6d2f776562736c696465732f776562736c696465732e7376673f7374796c653d736f6369616c" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finally, everything you need to make HTML presentations, landings, and longforms in a beautiful way. Just a basic knowledge of HTML and CSS is required. Designers, marketers, and journalists can now focus on the content. — &lt;a href="https://webslides.tv/demos" rel="nofollow"&gt;https://webslides.tv/demos&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Download&lt;/h3&gt;
&lt;p&gt;Simply choose a demo and customize it in seconds. Latest version: &lt;a href="https://webslides.tv/webslides-latest.zip" rel="nofollow"&gt;webslides.tv/webslides-latest.zip&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
What's in the download?&lt;/h3&gt;
&lt;p&gt;The download includes demos and images (devices and logos)
All content is for demo purposes only. Images are property of their respective owners.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;webslides/
├── index.html
├── css/
│   ├── base.css
│   └── colors.css
│   └── svg-icons.css (optional)
├── js/
│   ├── webslides.js
│   └── svg-icons.js (optional)
└── demos/
└── images/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Navigation (horizontal and vertical sliding): remote presenters, touchpad, keyboard shortcuts, and swipe.&lt;/li&gt;
&lt;li&gt;Slide counter.&lt;/li&gt;
&lt;li&gt;Permalinks: go to a specific slide.&lt;/li&gt;
&lt;li&gt;Autoslide.&lt;/li&gt;
&lt;li&gt;Click to nav.&lt;/li&gt;
&lt;li&gt;Simple CSS alignments. Put content wherever you want (vertical centering...)&lt;/li&gt;
&lt;li&gt;40+ components…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/webslides/WebSlides"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--by0jF_Q2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/ZtqYdOuCxPsAHWUyyv/giphy.gif%3Fcid%3D790b76110e13186bab19f9adf313e1d4b3d5f8ca34ba6e62%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--by0jF_Q2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/ZtqYdOuCxPsAHWUyyv/giphy.gif%3Fcid%3D790b76110e13186bab19f9adf313e1d4b3d5f8ca34ba6e62%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;10. SVG.js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/svgdotjs"&gt;
        svgdotjs
      &lt;/a&gt; / &lt;a href="https://github.com/svgdotjs/svg.js"&gt;
        svg.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The lightweight library for manipulating and animating SVG
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
SVG.js&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/svgdotjs/svg.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0f214ffd86acd53b9470972b3c0809d9166201bb6b5d5b2e1b7f06df52566ca/68747470733a2f2f7472617669732d63692e6f72672f737667646f746a732f7376672e6a732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/svgdotjs/svg.js?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/150265f2133714cbb7f942a720d23c14f66f332e5d026de6d4cc41ebc92b31bd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f737667646f746a732f7376672e6a732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://cdnjs.com/libraries/svg.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9d522206fe24a9d5bb763c837154221397dc69a7ee03c4ebae49f05d09735be/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f7376672e6a732e737667" alt="Cdnjs"&gt;&lt;/a&gt;
&lt;a href="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6f58df3d3235bc102ae4bcfb119cbd912d564235753e0fd562b8737470486115/68747470733a2f2f62616467656e2e6e65742f6a7364656c6976722f762f6e706d2f40737667646f746a732f7376672e6a73" alt="jsdelivr"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/svgdotjs/svg.js?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/826e48be372a07bb7204b2b1522686a7d586b6259a5695da71600b304262b3ac/68747470733a2f2f6261646765732e6769747465722e696d2f737667646f746a732f7376672e6a732e737667" alt="Join the chat at https://gitter.im/svgdotjs/svg.js"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/svg_js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/033473ff239afd32ae7389c36f4f6166d2d5d13fd45b23ec6e7a41a954275107/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f547769747465722d407376675f5f6a732d677265656e2e737667" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A lightweight library for manipulating and animating SVG, without any dependencies.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SVG.js is licensed under the terms of the MIT License.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h4&gt;
Npm:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;npm install @svgdotjs/svg.js&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
Yarn:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;yarn add @svgdotjs/svg.js&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
CDNs:&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://cdnjs.com/libraries/svg.js" rel="nofollow"&gt;https://cdnjs.com/libraries/svg.js&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js" rel="nofollow"&gt;https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js&lt;/a&gt;&lt;br&gt;
&lt;a href="https://unpkg.com/@svgdotjs/svg.js" rel="nofollow"&gt;https://unpkg.com/@svgdotjs/svg.js&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Check &lt;a href="https://svgjs.dev/docs/3.0/" rel="nofollow"&gt;svgjs.dev&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=ulima.ums%40googlemail.com&amp;amp;lc=US&amp;amp;item_name=SVG.JS&amp;amp;currency_code=EUR&amp;amp;bn=PP-DonationsBF%3Abtn_donate_74x21.png%3ANonHostedGuest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2bfa6102e99ff9a137185897b0a566aa0977a4790348c462e6951829e787af8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate"&gt;&lt;/a&gt; or &lt;a href="https://github.com/sponsors/Fuzzyma"&gt;&lt;img src="https://camo.githubusercontent.com/4a9167617917bd53e45d9bd102338687bb359d582e557a8d750d2d7b4b91c868/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53706f6e736f722d7376672e6a732d677265656e2e737667" alt="Sponsor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/svgdotjs/svg.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;strong&gt;Open Result&lt;/strong&gt;&lt;br&gt;
&lt;iframe src="https://jsfiddle.net/Fuzzy/f2wbgx5a//embedded//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;11. React Motion&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/chenglou"&gt;
        chenglou
      &lt;/a&gt; / &lt;a href="https://github.com/chenglou/react-motion"&gt;
        react-motion
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A spring that solves your animation problems.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React-Motion&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/chenglou/react-motion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/51eb92b7d5a7c065ab6af56ef17717f2ed8b119582a0b3e6fff1a6b46581088c/68747470733a2f2f7472617669732d63692e6f72672f6368656e676c6f752f72656163742d6d6f74696f6e2e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/react-motion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21672335dfb8e778325227dcd4c45af5085d4b00126860adc974cae91203caf1/68747470733a2f2f62616467652e667572792e696f2f6a732f72656163742d6d6f74696f6e2e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="http://badge.fury.io/bo/react-motion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4df8e8c8cecec455587b7be48253ffbaa6757a523ccd52b2ed8ead4ede4939d5/68747470733a2f2f62616467652e667572792e696f2f626f2f72656163742d6d6f74696f6e2e737667" alt="Bower version"&gt;&lt;/a&gt;
&lt;a href="https://discordapp.com/invite/0ZcbPKXt5bYzmcI0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af82efa899ccd52614a5ab0980af8176b7eeac8eb0710b0cff1dbbf11543c1d7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646973636f72642d72656163742d2d6d6f74696f6e253430726561637469666c75782d3733386264372e7376673f7374796c653d666c6174" alt="react-motion channel on discord"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-v"&gt;Motion&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;spring&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-motion'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// In your render...&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Motion&lt;/span&gt; &lt;span class="pl-c1"&gt;defaultStyle&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;style&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-en"&gt;spring&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;x&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;Motion&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Animate a counter from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;10&lt;/code&gt;. For more advanced usage, see below.&lt;/p&gt;
&lt;h3&gt;
Install&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Npm: &lt;code&gt;npm install --save react-motion&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bower: &lt;strong&gt;do not install with &lt;code&gt;bower install react-motion&lt;/code&gt;, it won't work&lt;/strong&gt;. Use &lt;code&gt;bower install --save https://unpkg.com/react-motion/bower.zip&lt;/code&gt;. Or in &lt;code&gt;bower.json&lt;/code&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-json position-relative js-code-highlight"&gt;
&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dependencies&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;react-motion&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://unpkg.com/react-motion/bower.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;then include as&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;bower_components/react-motion/build/react-motion.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;1998 Script Tag:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/react-motion/build/react-motion.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
(Module exposed as `ReactMotion`)&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Works with React-Native v0.18+&lt;/strong&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/chenglou/react-motion"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;h1&gt;What does this library try to solve?&lt;/h1&gt;

&lt;p&gt;For 95% of use-cases of animating components, we don't have to resort to using hard-coded easing curves and duration. Set up a stiffness and damping for your UI element, and let the magic of physics take care of the rest. This way, you don't have to worry about petty situations such as interrupted animation behavior. It also greatly simplifies the API.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FtMddm5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/5UFoMZysidoVnERZQI/giphy.gif%3Fcid%3D790b76116ad776fcb8c42b1634d2baa5527c18973e6d69f6%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtMddm5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/5UFoMZysidoVnERZQI/giphy.gif%3Fcid%3D790b76116ad776fcb8c42b1634d2baa5527c18973e6d69f6%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MdM3cPGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/J7i7arvCqD2odP2jn7/giphy.gif%3Fcid%3D790b7611b88b5b8670057396ed9d257100de01c7066015c2%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MdM3cPGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/J7i7arvCqD2odP2jn7/giphy.gif%3Fcid%3D790b7611b88b5b8670057396ed9d257100de01c7066015c2%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVsN6orE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/Pbb6RK6yFezhCo71zo/giphy.gif%3Fcid%3D790b76117a7d69fb498be4839971ae3d68b6ae552d487312%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVsN6orE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/Pbb6RK6yFezhCo71zo/giphy.gif%3Fcid%3D790b76117a7d69fb498be4839971ae3d68b6ae552d487312%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;12. RELLAX&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dixonandmoe"&gt;
        dixonandmoe
      &lt;/a&gt; / &lt;a href="https://github.com/dixonandmoe/rellax"&gt;
        rellax
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Lightweight, vanilla javascript parallax library
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
RELLAX&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.org/package/rellax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5bd9fedd6d6e0bacfba3d51ed394d0de1e659a87b11b1d5c84afc70cf42143f1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656c6c61782e737667" alt="NPM Package"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=rellax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/de228f666028300fee0452062fd9cd2949ece3d73a18dceea3d31a7a011834d3/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e2f72656c6c61782e7376673f6c6162656c3d6d696e6966696564" alt="Minified Size"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=rellax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9452b64737484fa6f7a9fadf8eebf9f1bac92d0f27027eb0b5ddb394c161fd7/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f72656c6c61782e7376673f6c6162656c3d677a6970706564" alt="Gzipped Size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rellax is a buttery smooth, super lightweight, vanilla javascript parallax library. &lt;strong&gt;Update:&lt;/strong&gt; Rellax now works on mobile (v1.0.0).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dixonandmoe.com/rellax/" rel="nofollow"&gt;Demo Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;h3&gt;
Using npm&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;npm install rellax --save&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
Using yarn&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;yarn add rellax&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
CDN&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script src="https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
Download Locally&lt;/h3&gt;
&lt;p&gt;if you're old school like us download and insert &lt;code&gt;rellax.min.js&lt;/code&gt; in your html&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;="&lt;span class="pl-s"&gt;rellax&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  I’m that default chill speed of "-2"
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;="&lt;span class="pl-s"&gt;rellax&lt;/span&gt;" &lt;span class="pl-c1"&gt;data-rellax-speed&lt;/span&gt;="&lt;span class="pl-s"&gt;7&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  I’m super fast!!
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;="&lt;span class="pl-s"&gt;rellax&lt;/span&gt;" &lt;span class="pl-c1"&gt;data-rellax-speed&lt;/span&gt;="&lt;span class="pl-s"&gt;-4&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  I’m extra slow and smooth
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;// Accepts any class name&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;rellax&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Rellax&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'.rellax'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;// Also can pass in optional settings block&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;rellax&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/dixonandmoe/rellax"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnEY36_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/QuE2jqcQ2aiUvZluXx/giphy.gif%3Fcid%3D790b7611a4457fa52ccbdab26f75ae5d94e16e6f642669bc%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnEY36_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/QuE2jqcQ2aiUvZluXx/giphy.gif%3Fcid%3D790b7611a4457fa52ccbdab26f75ae5d94e16e6f642669bc%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;13. Dynamics.js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/michaelvillar"&gt;
        michaelvillar
      &lt;/a&gt; / &lt;a href="https://github.com/michaelvillar/dynamics.js"&gt;
        dynamics.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Javascript library to create physics-based animations
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Dynamics.js&lt;/h1&gt;
&lt;p&gt;Dynamics.js is a JavaScript library to create physics-based animations&lt;/p&gt;
&lt;p&gt;To see some demos, check out &lt;a href="http://dynamicsjs.com" rel="nofollow"&gt;dynamicsjs.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Download:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/michaelvillar/dynamics.js/releases"&gt;GitHub releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/dynamics.js" rel="nofollow"&gt;npm&lt;/a&gt;: &lt;code&gt;npm install dynamics.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;bower: &lt;code&gt;bower install dynamics.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Include &lt;code&gt;dynamics.js&lt;/code&gt; into your page:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;dynamics.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can animate CSS properties of any DOM element.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;el&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;getElementById&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"logo"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-s1"&gt;dynamics&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;animate&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;el&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;translateX&lt;/span&gt;: &lt;span class="pl-c1"&gt;350&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;scale&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;opacity&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-s1"&gt;dynamics&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;spring&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;frequency&lt;/span&gt;: &lt;span class="pl-c1"&gt;200&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;friction&lt;/span&gt;: &lt;span class="pl-c1"&gt;200&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;1500&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You also can animate SVG properties.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;path&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;querySelector&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"path"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-s1"&gt;dynamics&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;animate&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;path&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;d&lt;/span&gt;: &lt;span class="pl-s"&gt;"M0,0 L0,100 L100,50 L0,0 Z"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;fill&lt;/span&gt;: &lt;span class="pl-s"&gt;"#FF0000"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;rotateZ&lt;/span&gt;: &lt;span class="pl-c1"&gt;45&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c"&gt;// rotateCX and rotateCY are the center of&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/michaelvillar/dynamics.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XBIU1HF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FX1skO126IairT4Ioz/giphy.gif%3Fcid%3D790b761199db9ca8a999651e8e0fa58cd75e2b3ee45aa90b%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XBIU1HF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FX1skO126IairT4Ioz/giphy.gif%3Fcid%3D790b761199db9ca8a999651e8e0fa58cd75e2b3ee45aa90b%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;14. mo · js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mojs"&gt;
        mojs
      &lt;/a&gt; / &lt;a href="https://github.com/mojs/mojs"&gt;
        mojs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The motion graphics toolbelt for the web
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mo · js – &lt;a href="https://www.npmjs.com/package/@mojs/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc583d59478eb20c81962ccddcf7e72ebed40b8f4ec7753db4e93eacbf2c0ef1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f406d6f6a732f636f72652e737667" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://github.com/mojs/mojs/actions?query=workflow:%22CI%22"&gt;&lt;img src="https://camo.githubusercontent.com/6e08ec368d88d212d5e9662da4f0d96730b9eae452d2f915281b4e3d925c8774/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6d6f6a732f6d6f6a732f4349" alt="ci"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/mojs/mojs?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bea2e546bdb922ce5c30ad7d8371e1833571ae6623c9f57921694e9d7541ed71/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6f6a732f6d6f6a732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/mojs/shared_invite/zt-dlyxhupt-VR7eV2uwCnvu3Cx~Yc_L9Q" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f2125bb4be72646dafa9bc30cb8da50d072181b0f378eb9559f3da1376cfca2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374796c652d6a6f696e2d6666363962342e7376673f6c6162656c3d736c61636b" alt="Slack"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The motion graphics toolbelt for the web.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mojs.github.io/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYp7EGPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mojs/mojslogo.svg" alt="mo · js" title="mo · js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;mo · js&lt;/strong&gt; is a javascript motion graphics library that is a &lt;strong&gt;fast, retina ready, modular and open source&lt;/strong&gt;. In comparison to other libraries, it has a different syntax and code animation structure approach. The declarative API provides you a complete control over the animation, making it customizable with ease.&lt;/p&gt;
&lt;p&gt;The library provides &lt;strong&gt;built-in components&lt;/strong&gt; to start animating from scratch like html, shape, swirl, burst and stagger, but also bring you tools to help craft your animation in a most natural way. Using mojs on your site will enhance the user experience, enrich your content visually and create &lt;strong&gt;delightful animations&lt;/strong&gt; precisely.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;h3&gt;
Use with a bundler&lt;/h3&gt;
&lt;p&gt;Mojs is published on the &lt;strong&gt;NPM registry&lt;/strong&gt; and &lt;strong&gt;GPR registry&lt;/strong&gt;, so you can install it through the command line interpreter using your favorite package manager. This is the best way…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mojs/mojs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;The library provides built-in components to start animating from scratch like html, shape, swirl, burst and stagger, but also bring you tools to help craft your animation in a most natural way&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/sol0mka/embed/ogOYJj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;strong&gt;Click on any circle&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sol0mka/embed/yNOage?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sol0mka/embed/pEagoL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;15. Reveal.js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hakimel"&gt;
        hakimel
      &lt;/a&gt; / &lt;a href="https://github.com/hakimel/reveal.js"&gt;
        reveal.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The HTML Presentation Framework
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://revealjs.com" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/67ab0dc35ff7b5c57c210baeb98b60f2618166f629172b278dbb6e394a0a1e10/68747470733a2f2f68616b696d2d7374617469632e73332e616d617a6f6e6177732e636f6d2f72657665616c2d6a732f6c6f676f2f76312f72657665616c2d626c61636b2d746578742e737667" alt="reveal.js" width="450"&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href="https://github.com/hakimel/reveal.js/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7xOafQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hakimel/reveal.js/workflows/tests/badge.svg"&gt;&lt;/a&gt;
  &lt;a href="https://slides.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a25a9e24942656ec32955d6fd5dca1fc62c1590d6e8e205032b7e089c1b21c05/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f7374617469632e736c69642e65732f696d616765732f736c696465732d6769746875622d62616e6e65722d3332307834302e706e673f31" alt="Slides" width="160" height="20"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free. &lt;a href="https://revealjs.com/" rel="nofollow"&gt;Check out the live demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The framework comes with a broad range of features including &lt;a href="https://revealjs.com/vertical-slides/" rel="nofollow"&gt;nested slides&lt;/a&gt;, &lt;a href="https://revealjs.com/markdown/" rel="nofollow"&gt;Markdown support&lt;/a&gt;, &lt;a href="https://revealjs.com/auto-animate/" rel="nofollow"&gt;Auto-Animate&lt;/a&gt;, &lt;a href="https://revealjs.com/pdf-export/" rel="nofollow"&gt;PDF export&lt;/a&gt;, &lt;a href="https://revealjs.com/speaker-view/" rel="nofollow"&gt;speaker notes&lt;/a&gt;, &lt;a href="https://revealjs.com/math/" rel="nofollow"&gt;LaTeX support&lt;/a&gt;, &lt;a href="https://revealjs.com/code/" rel="nofollow"&gt;syntax highlighted code&lt;/a&gt; and much more.&lt;/p&gt;

&lt;h1&gt;

  &lt;a href="https://revealjs.com/installation" rel="nofollow"&gt;Get Started&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;

&lt;p&gt;The full reveal.js documentation is available at &lt;a href="https://revealjs.com" rel="nofollow"&gt;revealjs.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
Online Editor&lt;/h2&gt;

&lt;p&gt;Want to create your presentation using a visual editor? Try the official reveal.js presentation platform for free at &lt;a href="https://slides.com" rel="nofollow"&gt;Slides.com&lt;/a&gt;. It's made by the same people behind reveal.js.&lt;/p&gt;

&lt;h2&gt;
License&lt;/h2&gt;

&lt;p&gt;MIT licensed&lt;/p&gt;

&lt;p&gt;Copyright (C) 2011-2021 Hakim El Hattab, &lt;a href="https://hakim.se" rel="nofollow"&gt;https://hakim.se&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hakimel/reveal.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qrEm1Z1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/clPn37Z1Ij7iBrTsvg/giphy.gif%3Fcid%3D790b76115eae8065ec2f824fa26cd69c8e4d1079ebb67bcd%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qrEm1Z1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/clPn37Z1Ij7iBrTsvg/giphy.gif%3Fcid%3D790b76115eae8065ec2f824fa26cd69c8e4d1079ebb67bcd%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;16. Animsition&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/blivesta"&gt;
        blivesta
      &lt;/a&gt; / &lt;a href="https://github.com/blivesta/animsition"&gt;
        animsition
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple and easy jQuery plugin for CSS animated page transitions.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="http://blivesta.github.io/animsition" rel="nofollow"&gt;Animsition&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0ac0058f6dbffaf25d56c0cd11c7cba82d21eb286b8233a9919659013b6ea15f/68747470733a2f2f696d672e736869656c64732e696f2f626f7765722f762f616e696d736974696f6e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/0ac0058f6dbffaf25d56c0cd11c7cba82d21eb286b8233a9919659013b6ea15f/68747470733a2f2f696d672e736869656c64732e696f2f626f7765722f762f616e696d736974696f6e2e7376673f7374796c653d666c61742d737175617265" alt="Bower version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/animsition" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab1847b04089e96fe0c079e420595e02451956c634e10643dab3e21e968e6db4/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f616e696d736974696f6e2e7376673f7374796c653d666c61742d737175617265" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/blivesta/animsition" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06f55ccde97863eb29ea950de52749fce8e2462ff7a52d96da433adca927d902/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f626c6976657374612f616e696d736974696f6e2f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A simple and easy jQuery plugin for CSS animated page transitions.&lt;/p&gt;
&lt;h2&gt;
Demo &amp;amp; Installation&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://git.blivesta.com/animsition/" rel="nofollow"&gt;http://git.blivesta.com/animsition/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Development&lt;/h2&gt;
&lt;p&gt;Install : &lt;code&gt;nodejs&lt;/code&gt; &lt;code&gt;npm&lt;/code&gt; &lt;code&gt;gulp&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ git clone https://github.com/blivesta/animsition.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; animsition
$ git checkout -b patch-1
$ npm install &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; gulp&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Build&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ gulp build&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Build -&amp;gt; Watch&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ gulp&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
CDN&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://cdnjs.com/libraries/animsition" rel="nofollow"&gt;cdnjs&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dist/css/animsition.css&lt;/li&gt;
&lt;li&gt;dist/css/animsition.min.css&lt;/li&gt;
&lt;li&gt;dist/js/animsition.js&lt;/li&gt;
&lt;li&gt;dist/js/animsition.min.js&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;To contribute to animsition, clone this repo locally and commit your code.&lt;br&gt;
Please check that everything works before opening a pull-request.&lt;/p&gt;
&lt;h2&gt;
Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/blivesta"&gt;@blivesta&lt;/a&gt; (Maintainer)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ungki"&gt;@ungki&lt;/a&gt; (Maintainer)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gauravpadia"&gt;@gauravpadia&lt;/a&gt; (Maintainer)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/munsonbh"&gt;@munsonbh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/triq6"&gt;@triq6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shgtkshruch"&gt;@shgtkshruch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vburlak"&gt;@vburlak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wpexplorer"&gt;@wpexplorer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/armbull"&gt;@armbull&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kkirsche"&gt;@kkirsche&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justbartlett"&gt;@justbartlett&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brianmontanaweb"&gt;@brianmontanaweb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Superpencil"&gt;@Superpencil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tegansnyder"&gt;@tegansnyder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvartolomei"&gt;@nvartolomei&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;Released under the &lt;a href="https://github.com/blivesta/animsition/blob/master/LICENSE.md"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;

&lt;h2&gt;
WordPress plugin&lt;/h2&gt;
&lt;h3&gt;
&lt;a href="http://wordpress.org/plugins/page-transition/" title="Page Transition" rel="nofollow"&gt;Page Transition&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;@numixtech&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gauravpadia"&gt;@gauravpadia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;@asalamwp&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/blivesta/animsition"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6QaAKUhq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/UOPBUJCEQtRWgoCeIk/giphy.gif%3Fcid%3D790b761178178021345b7f33f5f12441c337a8cc4e0829af%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6QaAKUhq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/UOPBUJCEQtRWgoCeIk/giphy.gif%3Fcid%3D790b761178178021345b7f33f5f12441c337a8cc4e0829af%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;17. SVG Mesh 3d&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mattdesl"&gt;
        mattdesl
      &lt;/a&gt; / &lt;a href="https://github.com/mattdesl/svg-mesh-3d"&gt;
        svg-mesh-3d
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 converts a SVG path to a 3D mesh
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
svg-mesh-3d&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://github.com/badges/stability-badges"&gt;&lt;img src="https://camo.githubusercontent.com/5cd3df2dc41de541ea4d16524e39eae78807a7e414c43e3805c080a32bcfa498/687474703a2f2f6261646765732e6769746875622e696f2f73746162696c6974792d6261646765732f646973742f737461626c652e737667" alt="stable"&gt;&lt;/a&gt;&lt;/p&gt;
  [&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c539bb338f9623cc3f197a72b836a94f559d3fd8c648b8be6dfbc30968e2ca4a/687474703a2f2f692e696d6775722e636f6d2f725933625270732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c539bb338f9623cc3f197a72b836a94f559d3fd8c648b8be6dfbc30968e2ca4a/687474703a2f2f692e696d6775722e636f6d2f725933625270732e706e67" width="80%"&gt;&lt;/a&gt;&lt;/p&gt;](&lt;a href="http://mattdesl.github.io/svg-mesh-3d/" rel="nofollow"&gt;http://mattdesl.github.io/svg-mesh-3d/&lt;/a&gt;)
&lt;p&gt;&lt;a href="http://mattdesl.github.io/svg-mesh-3d/" rel="nofollow"&gt;(ThreeJS demo)&lt;/a&gt; - &lt;a href="https://github.com/mattdesl/svg-mesh-3d./demo/index.js"&gt;(source)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A high-level module to convert a SVG &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; string into a 3D triangulated mesh. Best suited for silhouettes, like font icon SVGs.&lt;/p&gt;
&lt;p&gt;Built on top of &lt;a href="https://www.npmjs.com/package/cdt2d" rel="nofollow"&gt;cdt2d&lt;/a&gt; by &lt;a href="https://twitter.com/MikolaLysenko" rel="nofollow"&gt;@mikolalysenko&lt;/a&gt;, and various other modules.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install svg-mesh-3d --save&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Example&lt;/h2&gt;
&lt;p&gt;Here is an example using a simple path:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;svgMesh3d&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'svg-mesh-3d'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;path&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;'M305.214,374.779c2.463,0,3.45,0.493...'&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;mesh&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;svgMesh3d&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;path&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The returned mesh is a 3D indexed &lt;a href="https://www.npmjs.com/package/mesh-primitives#generic-mesh-modules" rel="nofollow"&gt;"simplicial complex"&lt;/a&gt; that can be used in ThreeJS, StackGL, etc. It uses arrays for vectors and follows the format:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;positions&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;x1&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;y1&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;z1&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;x2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;y2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;z2&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; ... &lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;cells&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;a&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;b&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;c&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;d&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;e&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;f&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt; &lt;span class="pl-kos"&gt;]&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or, to load a mesh in…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mattdesl/svg-mesh-3d"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;A high-level module to convert a SVG  string into a 3D triangulated mesh. Best suited for silhouettes, like font icon SVGs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TgpVThOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/hllL76HZIEhs7Ir8Gc/giphy.gif%3Fcid%3D790b7611685f483dab7673770057e400f0ae3a1a52d85c5d%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TgpVThOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/hllL76HZIEhs7Ir8Gc/giphy.gif%3Fcid%3D790b7611685f483dab7673770057e400f0ae3a1a52d85c5d%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;18. Zdog&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/metafizzy"&gt;
        metafizzy
      &lt;/a&gt; / &lt;a href="https://github.com/metafizzy/zdog"&gt;
        zdog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flat, round, designer-friendly pseudo-3D engine for canvas &amp;amp; SVG
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Zdog&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Round, flat, designer-friendly pseudo-3D engine&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;View complete documentation and live demos at &lt;a href="https://zzz.dog" rel="nofollow"&gt;zzz.dog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;h3&gt;
Download&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://unpkg.com/zdog@1/dist/zdog.dist.min.js" rel="nofollow"&gt;zdog.dist.min.js&lt;/a&gt; minified, or&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://unpkg.com/zdog@1/dist/zdog.dist.js" rel="nofollow"&gt;zdog.dist.js&lt;/a&gt; un-minified&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
CDN&lt;/h3&gt;
&lt;p&gt;Link directly to Zdog JS on &lt;a href="https://unpkg.com" rel="nofollow"&gt;unpkg&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/zdog@1/dist/zdog.dist.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Package managers&lt;/h3&gt;
&lt;p&gt;npm: &lt;code&gt;npm install zdog&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Bower: &lt;code&gt;bower install zdog&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Hello world demo&lt;/h2&gt;
&lt;p&gt;Create 3D models with Zdog by adding shapes. See &lt;a href="https://zzz.dog/getting-started" rel="nofollow"&gt;Getting started&lt;/a&gt; for a walk-through of this demo.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-s1"&gt;isSpinning&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-s1"&gt;illo&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Zdog&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;Illustration&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;element&lt;/span&gt;: &lt;span class="pl-s"&gt;'.zdog-canvas'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;zoom&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;dragRotate&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c"&gt;// stop spinning when drag starts&lt;/span&gt;
  &lt;span class="pl-en"&gt;onDragStart&lt;/span&gt;: &lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-s1"&gt;isSpinning&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// circle&lt;/span&gt;
&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Zdog&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;Ellipse&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;addTo&lt;/span&gt;: &lt;span class="pl-s1"&gt;illo&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;diameter&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;translate&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;z&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;stroke&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;color&lt;/span&gt;: &lt;span class="pl-s"&gt;'#636'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/metafizzy/zdog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With this library, you can create pseudo-3d elements, while you do not need to know geometry or algebra to create geometric shapes. This library is very easy to learn and learning will not take you much time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PfmrMcle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/WUA2gPXAS9Jewk8vql/giphy.gif%3Fcid%3D790b76115df6beadd5c63c20018a5b35eeceba16bf1a3e66%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PfmrMcle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/WUA2gPXAS9Jewk8vql/giphy.gif%3Fcid%3D790b76115df6beadd5c63c20018a5b35eeceba16bf1a3e66%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can drag it&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/desandro/embed/vdwMyW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/desandro/embed/YebMXQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/chenxinnn/embed/Xwowxz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/gabriellewee/embed/JjNGvJd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;The End&lt;/h1&gt;

&lt;p&gt;Thank you for taking your time to my post. You can also recommend the GitHub repositories you use. Or suggest a better alternative to the repositories that are presented in this post.&lt;/p&gt;

&lt;p&gt;I also advise novice frontend programmers not to try to implement some complex task on their own, but it is better to use a ready-made solution so as not to generate a lot of problems in their own and third-party projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No need to re-invent the wheel.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wowAxxrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FVAvmLbptzZpC/giphy.gif%3Fcid%3Decf05e47f7vzwma5yq2wmr20jeteoy2xzokzzrpy47cm52zz%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wowAxxrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FVAvmLbptzZpC/giphy.gif%3Fcid%3Decf05e47f7vzwma5yq2wmr20jeteoy2xzokzzrpy47cm52zz%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I can advise you to subscribe to my &lt;a href="https://twitter.com/BelichenkoRoden"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;, I also post my works there.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>github</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Setting up an API with Rails</title>
      <author>benjaminolmsted</author>
      <pubDate>Fri, 03 Sep 2021 19:46:52 +0000</pubDate>
      <link>https://dev.to/benjaminolmsted/setting-up-an-api-with-rails-59i5</link>
      <guid>https://dev.to/benjaminolmsted/setting-up-an-api-with-rails-59i5</guid>
      <description>&lt;p&gt;In this blog, we go over the steps for setting up a &lt;a href="https://guides.rubyonrails.org/api_app.html"&gt;Rails based API&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;installation&lt;/li&gt;
&lt;li&gt;CORS&lt;/li&gt;
&lt;li&gt;generate resource&lt;/li&gt;
&lt;li&gt;create migration&lt;/li&gt;
&lt;li&gt;add seed data&lt;/li&gt;
&lt;li&gt;add actions to our controller&lt;/li&gt;
&lt;li&gt;testing in Postman&lt;/li&gt;
&lt;li&gt;some validations&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  1
&lt;/h2&gt;

&lt;p&gt;run &lt;code&gt;rails new this-is-a-blog --api&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This sets up the project for use as an API. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  2
&lt;/h2&gt;

&lt;p&gt;enable CORS (cross-origin resource sharing)&lt;br&gt;
In the Gemfile, uncomment the gem &lt;code&gt;'rack-cors'&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfXtvKYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0mh13sj7uz3u2dgbqsa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfXtvKYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0mh13sj7uz3u2dgbqsa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then head over to &lt;code&gt;config/initializers/cors.rb&lt;/code&gt; and uncomment lines 8-16 and change &lt;code&gt;origins 'example.com'&lt;/code&gt; to &lt;code&gt;origins '*'&lt;/code&gt; to allow requests from anywhere. If the API is meant to be consumed by a specific domain, put that domain here. For development purposes, &lt;code&gt;'*'&lt;/code&gt; is fine. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q1Yq1yBw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62j0c4t1c0t53svt9zcl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q1Yq1yBw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62j0c4t1c0t53svt9zcl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  3
&lt;/h2&gt;

&lt;p&gt;we generate our first resource with &lt;code&gt;rails g resource Post&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This generates a &lt;code&gt;post.rb&lt;/code&gt; model, a &lt;code&gt;posts_controller.rb&lt;/code&gt; controller, a &lt;code&gt;CreatePosts&lt;/code&gt; migration, and adds a &lt;code&gt;resources: posts&lt;/code&gt; to our &lt;code&gt;routes.rb&lt;/code&gt; file.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  4
&lt;/h2&gt;

&lt;p&gt;we create our migration in &lt;code&gt;db/migrate/{local_time}create_posts.rb&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreatePosts&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Migration&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;6.1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;change&lt;/span&gt;
    &lt;span class="n"&gt;create_table&lt;/span&gt; &lt;span class="ss"&gt;:posts&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt; &lt;span class="ss"&gt;:title&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt; &lt;span class="ss"&gt;:body&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt; &lt;span class="ss"&gt;:image_url&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;timestamps&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;we could have had this step done automatically if we had run our generation like so:&lt;/em&gt; &lt;code&gt;rails g resource Post title body image_url&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and migrate with &lt;code&gt;rails db:migrate&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  5
&lt;/h2&gt;

&lt;p&gt;we add some seed data to db/seeds.rb&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s2"&gt;"Editor Basics"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;body: &lt;/span&gt;&lt;span class="s2"&gt;"Use Markdown to write and format posts. You can use Liquid tags to add rich content such as Tweets, YouTube videos, etc.
    In addition to images for the post's content, you can also drag and drop a cover image"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s2"&gt;"Setting up an API with Rails"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="ss"&gt;:"First, run `rails new this-is-a-blog --api`"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s2"&gt;"Writing a Great Post Title"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;body: &lt;/span&gt;&lt;span class="s2"&gt;"Think of your post title as a super short (but compelling!) description — like an overview of the actual post in one short sentence.
Use keywords where appropriate to help ensure people can find your post by search."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and run &lt;code&gt;rails db:seed&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  6
&lt;/h2&gt;

&lt;p&gt;we head over to app/controllers/posts_controller.rb and lay out our actions&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PostsController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
&lt;span class="n"&gt;rescue_from&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RecordNotFound&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: :record_not_found_response&lt;/span&gt;
&lt;span class="n"&gt;rescue_from&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RecordInvalid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: :record_invalid_response&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;
        &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: :ok&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_post&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: :ok&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_post&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: :accepted&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: :created&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;destroy&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_post&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;destroy&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="ss"&gt;:no_content&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="kp"&gt;private&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_post&lt;/span&gt;
        &lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post_params&lt;/span&gt;
        &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;permit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:image_url&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;record_not_found_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;error: &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="ss"&gt;status: :not_found&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;record_invalid_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;invalid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;errors: &lt;/span&gt;&lt;span class="n"&gt;invalid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;full_messages&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="ss"&gt;status: :unprocessable_entity&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  7
&lt;/h2&gt;

&lt;p&gt;now it's time to check our work using &lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fire up your server with &lt;code&gt;rails s&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uPavGG-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0aqvfd4tswqrlfi48vb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uPavGG-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0aqvfd4tswqrlfi48vb.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Index is working!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x23MI5aB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8m76pqtnn86sabosyru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x23MI5aB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8m76pqtnn86sabosyru.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our Show route works!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gZuIYEYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2khonaudulqxeny83w3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZuIYEYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2khonaudulqxeny83w3j.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So does the create route.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6IdAcwwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6jzo1ot5c1dgldui72b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6IdAcwwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6jzo1ot5c1dgldui72b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;our patch updates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tw3jiGCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gw6athbb7on5gfwukvm7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tw3jiGCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gw6athbb7on5gfwukvm7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our delete deletes. &lt;br&gt;
Our happy routes work! Excellent. Now let's check our error handling. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vzzfLVn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h82j9sop6x4bgfdnxanc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vzzfLVn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h82j9sop6x4bgfdnxanc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we try to find an :id that does not exist, we get our helpful error!&lt;/p&gt;

&lt;p&gt;Excellent! We made an API in rails. &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  8
&lt;/h2&gt;

&lt;p&gt;now, let's put in some &lt;a href="https://guides.rubyonrails.org/active_record_validations.html"&gt;validations&lt;/a&gt; on our model.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;
    &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;length: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;minimum: &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's see what happens if we try to post something without a body!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7nX6F0FI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25rl6fdo76uc87v12lf8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7nX6F0FI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25rl6fdo76uc87v12lf8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We cannot, thanks to the validations. We get that error thanks to our &lt;code&gt;rescue_from  ActiveRecord::RecordInvalid&lt;/code&gt; and our use of &lt;code&gt;create!&lt;/code&gt; and &lt;code&gt;update!&lt;/code&gt;, which will throw an ActiveRecord::RecordInvalid error if the request fails any validations. &lt;/p&gt;

&lt;p&gt;The very basics of setting up an API in Rails, complete.&lt;/p&gt;

&lt;p&gt;Resources:&lt;br&gt;
&lt;a href="https://guides.rubyonrails.org/active_record_validations.html"&gt;https://guides.rubyonrails.org/active_record_validations.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guides.rubyonrails.org/api_app.html"&gt;https://guides.rubyonrails.org/api_app.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/lisahjung/beginner-s-guide-to-creating-an-api-from-scratch-using-rails-2eie"&gt;https://dev.to/lisahjung/beginner-s-guide-to-creating-an-api-from-scratch-using-rails-2eie&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>A simple PSR-4 autoloader</title>
      <author>Doeke Norg</author>
      <pubDate>Fri, 03 Sep 2021 19:27:36 +0000</pubDate>
      <link>https://dev.to/doekenorg/a-simple-psr-4-autoloader-4635</link>
      <guid>https://dev.to/doekenorg/a-simple-psr-4-autoloader-4635</guid>
      <description>&lt;p&gt;Have you even used a &lt;code&gt;composer.json&lt;/code&gt; file purely for the need of registering a PSR-4 autoloader? I have, and it always felt a little weird to require such a hunk of code for such a simple task. It adds a &lt;code&gt;vendor&lt;/code&gt; folder and a bunch of empty files. I don't like that overhead when it's not necessary.&lt;/p&gt;

&lt;p&gt;So here is a drop-in alternative. You can for example use this in a WordPress theme or plugin.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nb"&gt;spl_autoload_register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$class_name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Map the namespace to the corresponding folder&lt;/span&gt;
    &lt;span class="nv"&gt;$namespace_mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'DoekeNorg\\BlogTheme'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'src'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$namespace_mapping&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$namespace&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$class_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$namespace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$namespace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'\\'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$directory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="no"&gt;DIRECTORY_SEPARATOR&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$directory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;DIRECTORY_SEPARATOR&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Class name doesn't match or the directory doesn't exist&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Require the file&lt;/span&gt;
        &lt;span class="nv"&gt;$class_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$directory&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nv"&gt;$namespace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'\\'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;DIRECTORY_SEPARATOR&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$class_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$class_file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="nv"&gt;$class_file&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-use-this-autoloader"&gt;
  &lt;/a&gt;
  How to use this autoloader
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Save this file as &lt;code&gt;autoload.php&lt;/code&gt; for example, and fill out the correct values for &lt;code&gt;$namespace_mapping&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;require&lt;/code&gt; this file inside your bootstrap file or theme/plugin entry file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it. Now you can reference any class with that namespace, and the autoloader will require the correct file.&lt;/p&gt;

&lt;p&gt;The mapping is relative to the location of the &lt;code&gt;autoload.php&lt;/code&gt; file, so you can also do things like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;|-- blog-theme
    |-- src
    |-- vendor
        |-- autoload.php &amp;lt;- the autoloader 
    |-- public
        |-- index.php &amp;lt;- entry file
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you require &lt;code&gt;vendor/autoload.php&lt;/code&gt; inside &lt;code&gt;public/index.php&lt;/code&gt; you can adjust your mapping to the following,&lt;br&gt;
and the resolving will still work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt; &lt;span class="nv"&gt;$namespace_mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'DoekeNorg\\BlogTheme'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'../src'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Couldn't you make this into a nice class?&lt;/strong&gt;&lt;br&gt;
Of course, but would that &lt;em&gt;really&lt;/em&gt; be better?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is it a big win over Composer?&lt;/strong&gt;&lt;br&gt;
No, a big win it is not, a small one; maybe. It's also not ment to replace Composer in any way, because that is way more optimized. It's just that for a simple plugin or theme you don't need the overhead Composer creates.&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>programming</category>
      <category>wordpress</category>
    </item>
    <item>
      <title>Git alias, crie comandos personalizados para turbinar seu git</title>
      <author>Lays Hidani</author>
      <pubDate>Fri, 03 Sep 2021 19:26:36 +0000</pubDate>
      <link>https://dev.to/layshidani/git-alias-crie-comandos-personalizados-para-turbinar-seu-git-79e</link>
      <guid>https://dev.to/layshidani/git-alias-crie-comandos-personalizados-para-turbinar-seu-git-79e</guid>
      <description>&lt;p&gt;Já pensou em customizar seus comandos do Git?&lt;/p&gt;

&lt;p&gt;Os aliases podem turbinar e facilitar o seu dia-a-dia, transformando seus comandos de terminal do git.&lt;/p&gt;

&lt;p&gt;Você pode criar aliases para abreviar os comandos ou personalizá-los como quiser 🤩&lt;/p&gt;

&lt;p&gt;Vamos lá...&lt;/p&gt;




&lt;p&gt;💡 &lt;em&gt;IMPORTANTE: após configurar, é necessário reabrir o terminal para refletir as novas configurações.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#criar-alias-direto-no-arquivo-de-configura%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Criar alias direto no arquivo de configuração
&lt;/h3&gt;

&lt;p&gt;1 - Abra o arquivo &lt;code&gt;.gitconfig&lt;/code&gt; (localizado no diretório principal), você pode abri-lo através do seu diretório ou via terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;open ~/.gitconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;*&lt;em&gt;este comando irá abrir o arquivo em seu editor padrão para que você possa editá-lo&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2 - Adicione seus aliases da seguinte forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[alias]
    comando_reduzido = comando_original
    comando_reduzido = comando_original
    comando_reduzido = comando_original
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Prontinho! ⚡&lt;br&gt;
Agora é só reabrir seu terminal para que os comandos possam começar a funcionar.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lista-de-comandos-%C3%BAteis"&gt;
  &lt;/a&gt;
  Lista de comandos úteis
&lt;/h3&gt;

&lt;p&gt;arquivo &lt;code&gt;.gitconfig&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[alias]
  cm = commit -m
  acm = !git add -A &amp;amp;&amp;amp; git commit -m
  lg = log --oneline
  lgg = log --all --graph --decorate --oneline --abbrev-commit
  b =  branch
  co = checkout
  cb = checkout -b
  st = status
  stt = status -sb
  pl = pull origin
  pu = push origin -u
  plr = pull origin -r
  pp = push origin
  pf = push origin +HEAD
  config = config --global -e
  up = !git pull --rebase --prune $@ &amp;amp;&amp;amp; git submodule update --init --recursive
  save = !git add -A &amp;amp;&amp;amp; git commit -m '~SAVEPOINT :construction:'
  wip = git add -A &amp;amp;&amp;amp; git commit -m '~WIP :construction:'
  undo = reset --soft HEAD~1
  amend = commit --amend
  ops = commit --amend --no-edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#utilizando-os-aliases"&gt;
  &lt;/a&gt;
  Utilizando os aliases
&lt;/h2&gt;

&lt;p&gt;Vamos supor que eu tenha configurado meus aliases conforme a lista acima, então toda vez que eu quiser utilizar um alias, basta rodar o comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &amp;lt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👩🏻‍🍳 Exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Seria o mesmo que digitar&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;

git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s1"&gt;'~SAVEPOINT :construction:'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;muito mais prático!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#criar-alias-via-linha-de-comando"&gt;
  &lt;/a&gt;
  Criar alias via linha de comando
&lt;/h2&gt;

&lt;p&gt;Também é possível configurar seus aliases via linha de comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; alias.&amp;lt;seu-alias&amp;gt; &amp;lt;comando-original&amp;gt;

&lt;span class="c"&gt;# exemplo&lt;/span&gt;
&lt;span class="c"&gt;# git config --global alias.st status&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No exemplo acima, depois de configurado, ao invés de ter que digitar &lt;code&gt;git status&lt;/code&gt;, basta digitar &lt;code&gt;git st&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A opção &lt;code&gt;–global&lt;/code&gt; quer dizer que o alias será aplicado no arquivo .gitconfig dentro do seu diretório home, e por isso o alias será aplicado em todos seus repositórios. Sem esta opção, o alias será aplicado no .gitconfig do repositório atual, logo só será aplicado apenas a ele.}}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/kelvinst/331aff32508e2517afbd"&gt;https://gist.github.com/kelvinst/331aff32508e2517afbd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;📖 &lt;a href="https://haacked.com/archive/2014/07/28/github-flow-aliases/"&gt;saiba mais&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;--&lt;br&gt;
&lt;em&gt;Foto da capa: &lt;a href="https://unsplash.com/@synkevych?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Roman Synkevych&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/git?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Authentication in Go</title>
      <author>Karan Kumar </author>
      <pubDate>Fri, 03 Sep 2021 19:24:53 +0000</pubDate>
      <link>https://dev.to/karankumarshreds/authentication-in-go-2630</link>
      <guid>https://dev.to/karankumarshreds/authentication-in-go-2630</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-authentication-works"&gt;
  &lt;/a&gt;
  How authentication works
&lt;/h2&gt;

&lt;p&gt;A client sends the authentication request to the server with the credentials. The server validates the credentials with the database entry. If the match is successful, it writes something called &lt;strong&gt;cookie&lt;/strong&gt; in the response.&lt;br&gt;
This &lt;strong&gt;cookie&lt;/strong&gt; will be sent back from the client in the subsequent requests to the server which is used by the servers to validate if the cookie attached is valid (on the basis of the one sent in the first place).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#sessions"&gt;
  &lt;/a&gt;
  Sessions
&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;session&lt;/strong&gt; is a way to record users authentication related payload in a cookie over a period of time.&lt;/p&gt;

&lt;p&gt;Here's a diagram from book &lt;code&gt;Handson restful services with Go&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kHd3lBLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thxgd73x4fv79n9dy6if.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kHd3lBLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thxgd73x4fv79n9dy6if.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the user &lt;strong&gt;logs in&lt;/strong&gt; in by sending valid credentials, the server attaches the cookie in the response. Then the client uses that cookie (saved in the browser or client service) to make future requests.&lt;br&gt;
When a client makes a &lt;strong&gt;logout&lt;/strong&gt; request by sending a API on the server, the server destroys the session in the response. The server can also place an expiration on cookies so that the session expires after a certain time if there is no activity.&lt;/p&gt;

&lt;p&gt;The working code for this can be found on &lt;a href="https://github.com/karankumarshreds/GoAuthentication"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us use &lt;code&gt;gorilla/mux&lt;/code&gt; package to implement this workflow.&lt;/p&gt;

&lt;p&gt;We will use the packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"github.com/gorilla/mux"&lt;/li&gt;
&lt;li&gt;"github.com/gorilla/sessions"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us create a cookie store first from the sessions package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;// store the secret key in env variable in production&lt;/span&gt;
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sessions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewCookieStore&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"my_secret_key"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This secret key is supposed to be a secret for the server. The cookie session is encrypted and decrypted using this key. This is how the server validates if the user/client is logged in with proper payload on the cookie or not.&lt;/p&gt;

&lt;p&gt;First we will create three routes to implement the authentication example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;/login&lt;/li&gt;
&lt;li&gt;/logout&lt;/li&gt;
&lt;li&gt;/healthcheck (a test route that will be used by the logged in user)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets create the login handler. I will add relevant comments for code explanation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;loginHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;"POST"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Method Not Supported"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusMethodNotAllowed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;// ParseForm parses the raw query from the URL and updates r.Form&lt;/span&gt;
    &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParseForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Please pass the data as URL form encoded"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusBadRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c"&gt;// Get username and password from the parsed form&lt;/span&gt;
    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// Check if user exists&lt;/span&gt;
    &lt;span class="n"&gt;storedPassword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// It returns a new session if the sessions doesn't exist&lt;/span&gt;
        &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"session.id"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;storedPassword&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"authenticated"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
            &lt;span class="c"&gt;// Saves all sessions used during the current request&lt;/span&gt;
            &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Invalid Credentials"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusUnauthorized&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Login successfully!"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us create the logout handler which will cater to the &lt;code&gt;GET&lt;/code&gt; request. In this handler we will set the &lt;code&gt;authenticated&lt;/code&gt; flag on the request session to &lt;code&gt;false&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;logoutHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Get registers and returns a session for the given name and session store.&lt;/span&gt;
    &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"session.id"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;// Set the authenticated value on the session to false&lt;/span&gt;
    &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"authenticated"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Logout Successful"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us implement the test handler which is serving the &lt;code&gt;protected route : /healthcheck&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;healthcheck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"session.id"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;authenticated&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"authenticated"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;authenticated&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;authenticated&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome!"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Forbidden"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusForbidden&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us use the &lt;code&gt;gorilla/mux&lt;/code&gt; library to hook up all the handlers in our main function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;mux&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewRouter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/login"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;loginHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/logout"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logoutHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/healthcheck"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;healthcheck&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;// modifying default http import struct to add an extra property&lt;/span&gt;
    &lt;span class="c"&gt;// of timeout (good practice)&lt;/span&gt;
    &lt;span class="n"&gt;httpServer&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Addr&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"127.0.0.1:8000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;WriteTimeout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;httpServer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us login with &lt;code&gt;postman&lt;/code&gt; on the login route and see if we are able to do so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BkRv3W_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ifr08larya3299i1u4n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BkRv3W_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ifr08larya3299i1u4n.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see we are able to login with &lt;code&gt;200&lt;/code&gt; response and cookies are also set. If we check the cookie set by the server, we will see the name of the cookie is &lt;code&gt;session'id&lt;/code&gt; which we set from the server side.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4IM_SH2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irmbb9x8z7v23pycgd2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4IM_SH2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irmbb9x8z7v23pycgd2m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let us make another request to see if we are able to validate the authenticated user by hitting the protected route &lt;code&gt;healthcheck&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uPNE7haI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsazqghpdv372umwo3j9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uPNE7haI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsazqghpdv372umwo3j9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, we are!&lt;/p&gt;

&lt;p&gt;Now let us hit the &lt;code&gt;logout&lt;/code&gt; route and see&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qEzR398x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjld4t7mwlqpvg5dcmvn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qEzR398x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjld4t7mwlqpvg5dcmvn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, we can logout.&lt;/p&gt;

&lt;p&gt;Now last thing, let us try to hit the &lt;code&gt;/healthcheck&lt;/code&gt; again and we should be FORBIDDEN to do so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S0a28PcB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nowbm471stomx6dzcjiu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0a28PcB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nowbm471stomx6dzcjiu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And yes, it works! Congratulations, you have successfully created a session based authentication system using Go and Mux package.&lt;/p&gt;

&lt;p&gt;In the upcoming blog, we will learn how to make use of &lt;code&gt;Redis&lt;/code&gt; to persist the user sessions. Till then, stay tuned!&lt;/p&gt;

&lt;p&gt;The working code for this can be found on &lt;a href="https://github.com/karankumarshreds/GoAuthentication"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>discuss</category>
      <category>webdev</category>
    </item>
    <item>
      <title>LeetCode Sep' 21 Challenge Series | Day 2 | Contains Duplicate III</title>
      <author>geetcloud</author>
      <pubDate>Fri, 03 Sep 2021 19:10:48 +0000</pubDate>
      <link>https://dev.to/geetcloud/leetcode-sep-21-challenge-series-day-2-contains-duplicate-iii-4a01</link>
      <guid>https://dev.to/geetcloud/leetcode-sep-21-challenge-series-day-2-contains-duplicate-iii-4a01</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contains-duplicate-iii"&gt;
  &lt;/a&gt;
  Contains Duplicate III
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#problem"&gt;
  &lt;/a&gt;
  Problem
&lt;/h3&gt;

&lt;p&gt;Given an integer array nums and two integers k and t, return true if there are two distinct indices i and j in the array such that abs(nums[i] - nums[j]) &amp;lt;= t and abs(i - j) &amp;lt;= k.&lt;/p&gt;

&lt;p&gt;Example 1:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: nums = [1,2,3,1], k = 3, t = 0
Output: true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example 2:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: nums = [1,0,1,1], k = 1, t = 2
Output: true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example 3:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: nums = [1,5,9,1,5,9], k = 2, t = 3
Output: false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hint #1  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Time complexity O(n log k) - This will give an indication that sorting is involved for k elements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hint #2  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Use already existing state to evaluate next state - Like, a set of k sorted numbers are only needed to be tracked. When we are processing the next number in array, then we can utilize the existing sorted state and it is not necessary to sort next overlapping set of k numbers again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Let's start
&lt;/h3&gt;

&lt;p&gt;As usual , our main goal is to solve the problem and at the same time achieve the best time complexity with minimal space complexity. If you are a beginner to problem solving or trying data structure problems, I suggest you start with a brute force approach and then try to optimize your solution to the best time/space complexity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#analysis"&gt;
  &lt;/a&gt;
  Analysis
&lt;/h3&gt;

&lt;p&gt;Given an integer array nums and two integers k and t, return true if there are two distinct indices i and j in the array such that abs(nums[i] - nums[j]) &amp;lt;= t and abs(i - j) &amp;lt;= k.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PTEpuy_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/eYFXkFqaTrAAAAAi/thinking-think.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PTEpuy_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/eYFXkFqaTrAAAAAi/thinking-think.gif" alt="thinking"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Before jumping into a solution or pseudocode, read the problem statement a couple of times and make sure to understand it well.
&lt;/li&gt;
&lt;li&gt;Based on the problem statement, we understand that we need to find two distinct indices i and j such that abs(nums[i] - nums[j]) &amp;lt;= t and abs(i - j) &amp;lt;= k.&lt;/li&gt;
&lt;li&gt;This time, the problem is a moderate one and not as easy as the Day 1 problem. So I'm going to use the hints provided. I have shared the two hints provided with the problem. &lt;/li&gt;
&lt;li&gt;Based on the first hint, it is understood that we need to sort the elements first and then using the sorted list, we need to find if there are two distinct indices i.e satisfying the provided condition. &lt;/li&gt;
&lt;li&gt;With sorting and iterating through all the array elements, we can achieve the solution by  O(n log k) complexity. &lt;/li&gt;
&lt;li&gt; With second hint, we understood that we need to maintain the sorted elements with its state in a data structure in such a way that we don't have to sort next overlapping elements again.&lt;/li&gt;
&lt;li&gt;From points #4 to #6, we can definitely choose TreeSet (data structure in Java) which will be a best candidate for this problem solution.&lt;/li&gt;
&lt;li&gt;And with all these points, we also got a hint, that this problem falls under "&lt;strong&gt;Sliding Window Pattern"&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;A sliding window is a sublist or subarray that runs over an underlying data structure. The data structure is iterable and ordered, such as an array or a string. At a high level, you can think of it as a subset of the two pointers method.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#treeset-in-java"&gt;
  &lt;/a&gt;
  TreeSet in Java
&lt;/h3&gt;

&lt;p&gt;A TreeSet is a sorted collection that extends the AbstractSet class and implements the NavigableSet interface.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It stores unique elements&lt;/li&gt;
&lt;li&gt;It doesn't preserve the insertion order of the elements&lt;/li&gt;
&lt;li&gt;It sorts the elements in ascending order&lt;/li&gt;
&lt;li&gt;It's not thread-safe&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our solution, we are going to mainly use the below two important methods of Tree Set.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ceiling() =&amp;gt; This method returns the least element in this set greater than or equal to the given element, or null if there is no such element.&lt;/li&gt;
&lt;li&gt;floor() =&amp;gt; This method returns the greatest element in this set less than or equal to the given element, or null if there is no such element.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So with all these hints and analysis, let's start writing our algorithm or pseudocode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#algorithm-pseudocode"&gt;
  &lt;/a&gt;
  Algorithm | Pseudocode
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a TreeSet to store the visited or tracked elements in the array.&lt;/li&gt;
&lt;li&gt;Iterate each element in the array and get the below two values

&lt;ul&gt;
&lt;li&gt;low =&amp;gt; highest element in the set lesser than the current element nums[i]&lt;/li&gt;
&lt;li&gt;hight =&amp;gt; smallest element in the set greater than the current element nums[i]&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  if ((low != null &amp;amp;&amp;amp; (long) nums[i] - low &amp;lt;= t) || (high != null &amp;amp;&amp;amp; (long) high - nums[i] &amp;lt;= t)) return true
This means, we found the two indices that meet the required conditions.&lt;/li&gt;
&lt;li&gt;  if the conditions are not satisfied, insert the current element nums[i] in the tracking treeSet.

&lt;ul&gt;
&lt;li&gt; if we reach (i&amp;gt;=k) element, we can remove the first element, since the two indices which we need to identify has to be within &amp;lt;=k indices.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's start writing the solution.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Loop through the elements in the array. If we find the two indices that matches the required condition by comparing the low &amp;amp; high values in the treeSet. That's it. That is our answer. &lt;br&gt;
** Given Array contains Duplicate !**&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#solution-in-java"&gt;
  &lt;/a&gt;
  Solution (in Java)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;
    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;containsNearbyAlmostDuplicate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;TreeSet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;visitedSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TreeSet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;visitedSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;floor&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
            &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;high&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;visitedSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ceiling&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;high&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;high&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;visitedSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;visitedSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#complexity"&gt;
  &lt;/a&gt;
  Complexity
&lt;/h3&gt;

&lt;p&gt;Time Complexity =&amp;gt; O(n log k)&lt;br&gt;
Space Complexity =&amp;gt;  O(k) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;This problem is a very good example of Sliding Window Pattern. Do check out more examples in this category for further learning. Since our solution's complexity is O(n log k) , this is not the best optimized solution. Based on my research and analysis, I found that we could achieve O(n) complexity for this problem using bucket sort. But it's a little complex solution based on my understanding. So I am leaving it to readers of this article to try out the O(n) bucket sort solution as an exercise. Provide your experience on solving this problem in O(n) complexity in the comment section of this article, if interested. Let's learn from each other.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;p&gt;The LeetCode Problem in this article:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/554/week-1-september-1st-september-7th/3446/"&gt;https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/554/week-1-september-1st-september-7th/3446/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LeetCode September 2021 Challenge&lt;/p&gt;

&lt;p&gt;&lt;a href="https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/"&gt;https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading-this-post"&gt;
  &lt;/a&gt;
  Thanks for reading this post!
&lt;/h3&gt;

&lt;p&gt;I hope this article is informative and helpful in some way. If it is, please like and share! Follow me on &lt;a href="https://twitter.com/geetcloud"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/sangeetha-karthik/"&gt;LinkedIn&lt;/a&gt; for related content.&lt;/p&gt;

&lt;p&gt;Happy learning! &lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>programming</category>
      <category>java</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>ESLint rule: react/jsx-curly-brace-presence</title>
      <author>Nikhil Taneja</author>
      <pubDate>Fri, 03 Sep 2021 19:05:39 +0000</pubDate>
      <link>https://dev.to/itsnikhil/eslint-rule-react-jsx-curly-brace-presence-5ke</link>
      <guid>https://dev.to/itsnikhil/eslint-rule-react-jsx-curly-brace-presence-5ke</guid>
      <description>&lt;p&gt;I like to read engineering and technology related articles shared by wonderful folks our various platform like Medium, Dev.to, Twitter, etc. One day while scrolling through my feed I stumbled upon &lt;a href="https://dev.to/devteam/bug-smash-is-back-join-the-challenge-g41"&gt;#bugsmash program&lt;/a&gt;. &lt;br&gt;
I looked into the open issues and picked &lt;strong&gt;Add eslint rule for formatting redundant curly braces in jsx &lt;a href="https://github.com/forem/forem/issues/12643"&gt;#12643&lt;/a&gt;&lt;/strong&gt;. During this time I was reading about ASTs, learning how linters work so I thought it would be a good issue to tackle.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#about-the-bug"&gt;
  &lt;/a&gt;
  About the bug
&lt;/h3&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/12643"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Add eslint rule for formatting redundant curly braces in jsx
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#12643&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/aitchiss"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gKQDnp6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/20773163%3Fv%3D4" alt="aitchiss avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/aitchiss"&gt;aitchiss&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/12643"&gt;&lt;time&gt;Feb 10, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;This issue is to consider enabling the rule for &lt;code&gt;react/jsx-curly-brace-presence&lt;/code&gt; in our eslint config. This could be set up to catch two formatting/code style issues, e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;MyComponent&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s"&gt;'exampleType'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s"&gt;'Hello world'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;MyComponent&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Would be corrected to:&lt;/p&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;MyComponent&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;"exampleType"&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;Hello world&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;MyComponent&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;It's a minor code style issue, but would make our JSX components more consistent and readable. We already have &lt;code&gt;eslint-plugin-react&lt;/code&gt; as a dev dependency in the project, and could enable this rule as a warning initially.&lt;/p&gt;
&lt;p&gt;NB: From a bit of investigation it seems Prettier can't do this for us which is why I'm suggesting eslint&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/12643"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The task was to be set up ESLint rule to catch the following formatting/code style issues in react&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MyComponent&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;exampleType&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Would be corrected to:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MyComponent&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"exampleType"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello world&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As, you can see below, I ran the linter on all JavaScript files and it found and fixed 1 issue here -&amp;gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gFrtTdSf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/smt0mwxofe1lyaytwcdo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFrtTdSf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/smt0mwxofe1lyaytwcdo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-i-smashed-it"&gt;
  &lt;/a&gt;
  How I Smashed It
&lt;/h3&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/14592"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        #12643 Add eslint rule for formatting redundant curly braces in jsx
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#14592&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/itsnikhil"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HWLUhwLZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/20350674%3Fv%3D4" alt="itsnikhil avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/itsnikhil"&gt;itsnikhil&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/pull/14592"&gt;&lt;time&gt;Aug 25, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      
&lt;h2&gt;
&lt;a id="user-content-what-type-of-pr-is-this-check-all-applicable" class="anchor" href="#what-type-of-pr-is-this-check-all-applicable"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What type of PR is this? (check all applicable)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Refactor&lt;/li&gt;
&lt;li&gt;[ ] Feature&lt;/li&gt;
&lt;li&gt;[ ] Bug Fix&lt;/li&gt;
&lt;li&gt;[ ] Optimization&lt;/li&gt;
&lt;li&gt;[ ] Documentation Update&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-description" class="anchor" href="#description"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;Initially I thought I would have to build and publish my very own eslint plugin to solve this issue but later on I found out that such linting rule already exists. After merging this PR you can expect to see this linting check in action fixing where&lt;/p&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;MyComponent&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s"&gt;'exampleType'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s"&gt;'Hello world'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;MyComponent&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Would be corrected to:&lt;/p&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;MyComponent&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;"exampleType"&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;Hello world&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;MyComponent&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;As, you can see below, I ran the linter on all JavaScript files and it found and fixed 1 issue here -&amp;gt; &lt;a href="https://github.com/itsnikhil/forem/commit/17508f12970621a323711cc5f08e0a67b7a7977b#diff-55437c4c12bdc7f18b73ceb37af6c27f95e647ef5ada26083c7fa53bd3730832R112"&gt;https://github.com/itsnikhil/forem/commit/17508f12970621a323711cc5f08e0a67b7a7977b#diff-55437c4c12bdc7f18b73ceb37af6c27f95e647ef5ada26083c7fa53bd3730832R112&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-related-tickets--documents" class="anchor" href="#related-tickets--documents"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Related Tickets &amp;amp; Documents&lt;/h2&gt;
&lt;p&gt;This PR fixes &lt;a href="https://github.com/forem/forem/issues/12643"&gt;https://github.com/forem/forem/issues/12643&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-qa-instructions-screenshots-recordings" class="anchor" href="#qa-instructions-screenshots-recordings"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;QA Instructions, Screenshots, Recordings&lt;/h2&gt;
&lt;p&gt;You can run the following command and such linting violations will be marked as errors&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt; yarn run lint:frontend&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/20350674/130853092-6f40e1a7-7aa9-4e22-b561-eef4fa7d2bc8.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Au3YRauk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/20350674/130853092-6f40e1a7-7aa9-4e22-b561-eef4fa7d2bc8.png" alt="image"&gt;&lt;/a&gt;
And with &lt;code&gt;--fix&lt;/code&gt;, it will try to automatically fix such errors&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt; yarn run lint:frontend --fix&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;a id="user-content-ui-accessibility-concerns" class="anchor" href="#ui-accessibility-concerns"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;UI accessibility concerns?&lt;/h3&gt;
&lt;p&gt;N/A&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-addedupdated-tests" class="anchor" href="#addedupdated-tests"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Added/updated tests?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[x] No, there are no unit tests for linting violations.. I have done manual testing but if there is some way please let me know.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-forem-core-team-only-how-will-this-change-be-communicated" class="anchor" href="#forem-core-team-only-how-will-this-change-be-communicated"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;[Forem core team only] How will this change be communicated?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Will this PR introduce a change that impacts Forem members or creators, the
development process, or any of our internal teams? If so, please note how you
will share this change with the people who need to know about it.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] I've updated the &lt;a href="https://developers.forem.com" rel="nofollow"&gt;Developer Docs&lt;/a&gt; and/or
&lt;a href="https://admin.forem.com/" rel="nofollow"&gt;Admin Guide&lt;/a&gt;, or
&lt;a href="https://storybook.forem.com/" rel="nofollow"&gt;Storybook&lt;/a&gt; (for Crayons components)&lt;/li&gt;
&lt;li&gt;[ ] I've updated the README or added inline documentation&lt;/li&gt;
&lt;li&gt;[ ] I've added an entry to
&lt;a href="https://github.com/forem/forem/tree/main/CHANGELOG.md"&gt;&lt;code&gt;CHANGELOG.md&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;[ ] I will share this change in a &lt;a href="https://forem.dev/t/changelog" rel="nofollow"&gt;Changelog&lt;/a&gt;
or in a &lt;a href="http://forem.dev" rel="nofollow"&gt;forem.dev&lt;/a&gt; post&lt;/li&gt;
&lt;li&gt;[ ] I will share this change internally with the appropriate teams&lt;/li&gt;
&lt;li&gt;[ ] I'm not sure how best to communicate this change and need help&lt;/li&gt;
&lt;li&gt;[ ] This change does not need to be communicated, and this is why not: &lt;em&gt;please
replace this line with details on why this change doesn't need to be
shared&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-what-gif-best-describes-this-pr-or-how-it-makes-you-feel" class="anchor" href="#what-gif-best-describes-this-pr-or-how-it-makes-you-feel"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What gif best describes this PR or how it makes you feel?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/2ee577fa7bb13ecf53ace7bf663371060246811947ad63abde6542a6090b6bd7/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4a47554d5050544d5243565062536e6356462f67697068792e6769663f6369643d65636630356534376a7761696435783277697966776362756a64326e7a366b72706371366b6d646f6430387239767170267269643d67697068792e6769662663743d67" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ee577fa7bb13ecf53ace7bf663371060246811947ad63abde6542a6090b6bd7/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4a47554d5050544d5243565062536e6356462f67697068792e6769663f6369643d65636630356534376a7761696435783277697966776362756a64326e7a366b72706371366b6d646f6430387239767170267269643d67697068792e6769662663743d67" alt="check"&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/pull/14592"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The solution was as easy as adding any other existing rule. Since &lt;code&gt;eslint-plugin-react&lt;/code&gt; was already added as a dev dependency in the project, I followed the guide here &lt;a href="https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-brace-presence.md"&gt;https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-brace-presence.md&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// .eslintrc.js&lt;/span&gt;
&lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* 
        Existing rules
    */&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react/jsx-curly-brace-presence&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;never&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;never&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before reaching to above solution, I explored &lt;a href="https://astexplorer.net/"&gt;https://astexplorer.net/&lt;/a&gt; and how to work with rules. I also learned how to write my very own ESLint rule.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;exampleType&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/MyComponent&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above jsx in AST have following structure:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sqJGfvRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h8axqxgpsm9je2fbxsfu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sqJGfvRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h8axqxgpsm9je2fbxsfu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, we can have a following function which apply on all &lt;code&gt;JSXExpressionContainer&lt;/code&gt; using visitor pattern and check if &lt;code&gt;typeof node.expression.value is a string&lt;/code&gt; then we can replace the expression with a fixer by replacing it with &lt;code&gt;node.expression.raw&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;JSXExpressionContainer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;report&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Do not use redundant curly braces&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;suggest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Replace `{ 'string' }` with `'string'`&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;fix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fixer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;fixer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the whole thing in action&lt;br&gt;
&lt;a href="https://astexplorer.net/#/gist/b146b6ba734c554f51e4d5bb53023dda/e4077cfc126335c9468cca9eba01c675addf177d"&gt;https://astexplorer.net/#/gist/b146b6ba734c554f51e4d5bb53023dda/e4077cfc126335c9468cca9eba01c675addf177d&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reflection"&gt;
  &lt;/a&gt;
  Reflection
&lt;/h3&gt;

&lt;p&gt;It was great experience building forem's source code and I like that the DEV team really appreciated my PR however small it was.&lt;/p&gt;

</description>
      <category>devbugsmash</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>10x django developer </title>
      <author>Nasser El Idrissi </author>
      <pubDate>Fri, 03 Sep 2021 18:57:57 +0000</pubDate>
      <link>https://dev.to/abdenasser/10x-django-developer-42p7</link>
      <guid>https://dev.to/abdenasser/10x-django-developer-42p7</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/YGjNFdccr0Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;if you are wondering what this is using here is the package and don't forget to support it by dropping a star ⭐&lt;/p&gt;

&lt;p&gt;github repo: &lt;a href="https://github.com/Abdenasser/dr_scaffold"&gt;dr_scaffold&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tutorial: &lt;a href="https://dev.to/abdenasser/scaffold-django-apis-like-a-champion-1595"&gt;make a full api in seconds&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>tooling</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 03 Sep 2021 17:47:51 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-4nil</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-4nil</guid>
      <description>&lt;p&gt;Hi everyone! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Getting out into nature... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Happy Friday! Great job this week 🎊 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/cOB8cDnKM6eyY/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cOB8cDnKM6eyY/giphy.gif" alt="Neverending Story"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
  </channel>
</rss>
