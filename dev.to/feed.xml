<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Working with Numbers &amp; Strings in Python</title>
      <author>CodeWithKenn</author>
      <pubDate>Mon, 17 Jan 2022 17:15:56 +0000</pubDate>
      <link>https://dev.to/codewithkenn/working-with-numbers-strings-in-python-4d8l</link>
      <guid>https://dev.to/codewithkenn/working-with-numbers-strings-in-python-4d8l</guid>
      <description>&lt;p&gt;Python is one of the most popular coding languages available and is great as a starting point in your learning journey. It can be used for a range of things, such as web and internet development, software development application, network programming, and 3D graphics... (&lt;a href="https://hethelinnovation.com/"&gt;hethelinnovation.com&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;*While learning, we end up getting stuck in small bugs that can take more time to solve, whereas we could have solved it quickly if we could only remember the basics. *&lt;/p&gt;

&lt;p&gt;So, this is a series of Basics Python tips to remember whenever we work with numbers and strings. You can also use this article as a reference somehow while coding...&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-numbers"&gt;
  &lt;/a&gt;
  Python Numbers
&lt;/h2&gt;

&lt;p&gt;There are three numeric types we use in Python: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;int: or integer, is a whole number without decimals.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = 1245
y = -789

print(type(x))
print(type(y))

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;float: or Floating, a number with one or more decimals.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = 12.45
y = 42E5

print(type(x))
print(type(y))

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;complex: as studied in high school, is a number written with a "j" as the imaginary part.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = 3 + 2j
y = -15j

print(type(x))
print(type(y))

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#numbers-types-conversion"&gt;
  &lt;/a&gt;
  Numbers Types Conversion
&lt;/h2&gt;

&lt;p&gt;To convert numbers from one type (from the three) to another, we used methods.&lt;/p&gt;

&lt;p&gt;In Python, a method is a function that is available for a given object because of the object's type.&lt;br&gt;
So, You can convert from one type to another with the int(), float(), and complex() methods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
x = 4    # int number
y = 0.8  # float number
z = 4j   # complex number

# from int to float:
a = float(x)

# from float to int:
b = int(y)

# from int to complex:
c = complex(x)

print(a)
print(b)
print(c)

print(type(a))
print(type(b))
print(type(c))

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-build-a-simple-calculator"&gt;
  &lt;/a&gt;
  Let's Build a Simple Calculator
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Python Simple calculator

# Addition Function
def add(x, y):
    return x + y

# Substraction Function
def subtract(x, y):
    return x - y

# Multiplication Function
def multiply(x, y):
    return x * y

# Division Function
def divide(x, y):
    return x / y


def calculate(first_number, second_number, operator):
    if operator == "+":
        answer = add(first_number, second_number)
        return answer

    elif operator == "-":
        answer = subtract(first_number, second_number)
        return answer

    elif operator == "/":
        answer = divide(first_number, second_number)
        return answer
    elif operator == "*" or operator == "x":
        answer = subtract(first_number, second_number)
        return answer
    else:
        return "Invalid"


num1 = int(input("Enter the first number: "))
num2 = int(input("Enter the second number: "))
operator = input("Enter the Operator: ")

print(f"{num1} {operator} {num2} = {calculate(num1, num2, operator)}")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-strings"&gt;
  &lt;/a&gt;
  Python Strings
&lt;/h2&gt;

&lt;p&gt;Strings in python are surrounded by: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Single quotation marks
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'bonjour'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Double quotation marks
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"bonjour"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#use-a-variable-to-save-the-string"&gt;
  &lt;/a&gt;
  Use a Variable to save the String
&lt;/h2&gt;

&lt;p&gt;The assignment sign is made of &lt;em&gt;=&lt;/em&gt; (equal sign).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name = "Kennedy"
role = "Software Engineer"
print(name)
print(role)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#we-can-also-use-multiline-strings"&gt;
  &lt;/a&gt;
  We can also use Multiline Strings
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;poem = """Your face is the grave of your nose
your face is the grave of your ears
your face is the grave of your face
once again your face overflows uncontrollably."""

print(poem)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#accessing-a-character-of-the-string"&gt;
  &lt;/a&gt;
  Accessing a Character of the String
&lt;/h2&gt;

&lt;p&gt;We can think of strings like an array made of characters. For example, the word "Elon Musk" is made of "E", "l", "o", "n", " ", "M", "u", "s" and "k" (Notice the space is also counted as a character).&lt;/p&gt;

&lt;p&gt;The first character is counted at index 0 (not 1).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;greeting = "Hello, World!"
print(greeting[1]) #prints "e" 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#working-with-strings"&gt;
  &lt;/a&gt;
  Working with Strings
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#checking-the-string-length"&gt;
  &lt;/a&gt;
  Checking the String Length
&lt;/h3&gt;

&lt;p&gt;use the &lt;code&gt;len()&lt;/code&gt; function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name = "Kennedy"
length_of_name = len(name)

print(length_of_name)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#checking-an-existing-string-or-character-in-a-string"&gt;
  &lt;/a&gt;
  Checking an existing string or character in a string
&lt;/h3&gt;

&lt;p&gt;Use the &lt;code&gt;in&lt;/code&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sentence = "Kennedy is a python programmer"
if "python" in a sentence:
  print("Yes, 'python' is present.")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#most-common-string-methods"&gt;
  &lt;/a&gt;
  Most Common String Methods
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;capitalize()&lt;/code&gt; method converts the first character of a string to an uppercase letter and lowercases all other characters.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name = "python"
print(name.capitalize())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;casefold()&lt;/code&gt; method Converts string into lower case.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name = "PYTHON"
print(name.casefold())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;upper()&lt;/code&gt; method converts all the characters into Uppercase.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name = "python"
print(name.upper())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;lower()&lt;/code&gt; method converts all the characters into Lowercase.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name = "PYTHON"
print(name.lower())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;len()&lt;/code&gt; method used to count the total number of characters in a string.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name = "python"
print( len(name) )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;find()&lt;/code&gt; searches the string for a specified value and returns the position of where it was found.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sentence = "python is great"
print( sentence.find('great') )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;replace()&lt;/code&gt; is used to replace a string with another.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sentence = "python is great"
new_sentence = sentence.replace('great', 'awesome') 
print(new_sentence)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;str()&lt;/code&gt; is used for string conversion
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ten = str(10)
print(ten) #converts 10 to '10'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You can find more in the &lt;a href="https://docs.python.org/2.5/lib/string-methods.html"&gt;Python.org Official Docs&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lets-work-on-a-small-project"&gt;
  &lt;/a&gt;
  Let's work on a Small Project
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-arrange-string-characters-such-that-lowercase-letters-should-come-first"&gt;
  &lt;/a&gt;
  - Arrange string characters such that lowercase letters should come first
&lt;/h4&gt;

&lt;p&gt;Initial Code&lt;br&gt;
&lt;code&gt;noun = PrOgRamMinG&lt;/code&gt;&lt;br&gt;
&lt;code&gt;# Expected Output : rgaminPORMG&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Solution&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;noun = "PrOgRamMinG"

def arrange_string(my_string):
    print('Original String:', my_string)
    lower = []
    upper = []

    #Let's iterate and convert
    for char in my_string:
        if char.islower():
            # add lowercase characters to lower list
            lower.append(char)
        else:
            # add uppercase characters to lower list
            upper.append(char)

    # Join both list
    sorted_str = ''.join(lower + upper)
    print('Result:', sorted_str)

# Now, let's call execute the function we just created! 
arrange_string(noun)

# Output: 
# Original String: PrOgRamMinG
# Result: rgaminPORMG
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resources for more Details:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.w3schools.com/python/"&gt;www.w3schools.com&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.programiz.com/python-programming"&gt;www.programiz.com&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pynative.com/python-string-exercise/#h-exercise-4-arrange-string-characters-such-that-lowercase-letters-should-come-first"&gt;www.pynative.com/&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;👉 &lt;a href="https://dev.to/codewithkenn"&gt;DISCOVER MORE useful ARTICLES&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading this article, many others are coming very soon, Feel free to subscribe 🤙.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  🌎 Let's connect
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/CodeWithKenn"&gt;Twitter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/KennStack01"&gt;Github&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/kennkibadi/"&gt;LinkedIn&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.instagram.com/codewithkenn_/"&gt;Instagram&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Want to start blogging?  🔥&lt;a href="https://hashnode.com/@CodeWithKenn/joinme"&gt;Join NOW!&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Exploiting IndexedDB API information leaks in Safari 15</title>
      <author>Savannah Copland 👋</author>
      <pubDate>Mon, 17 Jan 2022 17:14:53 +0000</pubDate>
      <link>https://dev.to/savannahjs/exploiting-indexeddb-api-information-leaks-in-safari-15-58o2</link>
      <guid>https://dev.to/savannahjs/exploiting-indexeddb-api-information-leaks-in-safari-15-58o2</guid>
      <description>&lt;p&gt;&lt;small&gt;DISCLAIMER: FingerprintJS does not use this vulnerability in our products and does not provide cross-site tracking services. We focus on stopping fraud and support modern privacy trends for removing cross-site tracking entirely. We believe that vulnerabilities like this one should be discussed in the open to help browsers fix them as quickly as possible. To help fix it, we have submitted a bug report to the WebKit maintainers, created a live demo, and have made a &lt;a href="https://github.com/fingerprintjs/blog-indexeddb-safari-leaks-demo" rel="noopener noreferrer"&gt;public source code repository&lt;/a&gt; available to all.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Z7dPeGpCl8s"&gt;Watch our Youtube overview&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In this article, we discuss a software bug introduced in Safari 15’s implementation of the IndexedDB API that lets any website track your internet activity and even reveal your identity.&lt;/p&gt;

&lt;p&gt;We have also published a demo site to see the vulnerability in action:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://safarileaks.com"&gt;Try the demo&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The leak was reported to the &lt;a href="https://bugs.webkit.org/" rel="noopener noreferrer"&gt;WebKit Bug Tracker&lt;/a&gt; on November 28, 2021 as bug &lt;a href="https://bugs.webkit.org/show_bug.cgi?id=233548" rel="noopener noreferrer"&gt;233548&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update (Monday January 17th 2022)&lt;/strong&gt;: Apple engineers began working on the bug as of Sunday, have &lt;a href="https://github.com/WebKit/WebKit/commit/f73005ed826014988f8ee447de23927749fb56e5"&gt;merged potential fixes&lt;/a&gt;, and have marked our report as resolved. However, the bug continues to persist for end users until these changes are released.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-short-introduction-to-the-indexeddb-api%C2%A0"&gt;
  &lt;/a&gt;
  A short introduction to the IndexedDB API 
&lt;/h2&gt;

&lt;p&gt;IndexedDB is a browser API for client-side storage designed to hold significant amounts of data. It’s supported in all major browsers and is very commonly used. As IndexedDB is a low-level API, many developers choose to use wrappers that abstract most of the technicalities and provide an easier-to-use, more developer-friendly API. &lt;/p&gt;

&lt;p&gt;Like most modern web browser technologies, IndexedDB is following &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy" rel="noopener noreferrer"&gt;Same-origin policy&lt;/a&gt;. The same-origin policy is a fundamental security mechanism that restricts how documents or scripts loaded from one origin can interact with resources from other origins. An origin is defined by the scheme (protocol), hostname (domain), and port of the URL used to access it. &lt;/p&gt;

&lt;p&gt;Indexed databases are associated with a specific origin. Documents or scripts associated with different origins should never have the possibility to interact with databases associated with other origins.&lt;/p&gt;

&lt;p&gt;If you want to learn more about how IndexedDB APIs work check out the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API" rel="noopener noreferrer"&gt;MDN Web Docs&lt;/a&gt; or the &lt;a href="https://www.w3.org/TR/IndexedDB/" rel="noopener noreferrer"&gt;W3C specification&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-indexeddb-leaks-in-safari-15"&gt;
  &lt;/a&gt;
  The IndexedDB leaks in Safari 15
&lt;/h2&gt;

&lt;p&gt;In Safari 15 on macOS, and in all browsers on iOS and iPadOS 15, the IndexedDB API is violating the same-origin policy. Every time a website interacts with a database, a new (empty) database with the same name is created in all other active frames, tabs, and windows within the same browser session. Windows and tabs usually share the same session, unless you switch to a different profile, in Chrome for example, or open a private window. For clarity, we will refer to the newly created databases as “cross-origin-duplicated databases” for the remainder of the article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-this-leak-bad"&gt;
  &lt;/a&gt;
  Why is this leak bad?
&lt;/h3&gt;

&lt;p&gt;The fact that database names leak across different origins is an obvious privacy violation. It lets arbitrary websites learn what websites the user visits in different tabs or windows. This is possible because database names are typically unique and website-specific. Moreover, we observed that in some cases, websites use unique user-specific identifiers in database names. This means that authenticated users can be uniquely and precisely identified. Some popular examples would be YouTube, Google Calendar, or Google Keep. All of these websites create databases that include the authenticated Google User ID and in case the user is logged into multiple accounts, databases are created for all these accounts.&lt;/p&gt;

&lt;p&gt;The Google User ID is an internal identifier generated by Google. It uniquely identifies a single Google account. It can be used with Google APIs to fetch public personal information of the account owner. The information exposed by these APIs is controlled by many factors. In general, at minimum, the user's profile picture is typically available. To learn more, refer to Google's &lt;a href="https://developers.google.com/people/v1/how-tos/authorizing#profile-scopes" rel="noopener noreferrer"&gt;People API&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;Not only does this imply that untrusted or malicious websites can learn a user’s identity, but it also allows the linking together of multiple separate accounts used by the same user.&lt;/p&gt;

&lt;p&gt;Note that these leaks do not require any specific user action. A tab or window that runs in the background and continually queries the IndexedDB API for available databases, can learn what other websites a user visits in real-time. Alternatively, websites can open any website in an iframe or popup window in order to trigger an IndexedDB-based leak for that specific site.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-many-websites-are-affected"&gt;
  &lt;/a&gt;
  How many websites are affected?
&lt;/h3&gt;

&lt;p&gt;We checked the homepages of Alexa’s Top 1000 most visited websites to understand how many websites use IndexedDB and can be uniquely identified by the databases they interact with. &lt;/p&gt;

&lt;p&gt;The results show that more than 30 websites interact with indexed databases directly on their homepage, without any additional user interaction or the need to authenticate. We suspect this number to be significantly higher in real-world scenarios as websites can interact with databases on subpages, after specific user actions, or on authenticated parts of the page.&lt;/p&gt;

&lt;p&gt;We also saw a pattern where indexed databases named as universally unique identifiers (UUIDs) are being created by subresources, specifically ad networks. Interestingly, loading of these resources seems to be in some cases blocked by Safari’s tracking prevention features, which effectively prevents the database names from leaking. These leaks will also be prevented if the resources are blocked by other means, for example when using adblocker extensions or blocking all JavaScript execution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#does-safari-private-mode-protect-against-the-leak"&gt;
  &lt;/a&gt;
  Does Safari private mode protect against the leak?
&lt;/h3&gt;

&lt;p&gt;Firstly, when followed, the same-origin policy is an effective security mechanism for all window modes. Websites with one origin should never have access to resources from other origins regardless of whether a visitor is using private browsing or not unless it’s explicitly allowed via cross-origin resource sharing (CORS).&lt;/p&gt;

&lt;p&gt;In this case, private mode in Safari 15 is also affected by the leak. It’s important to note that browsing sessions in private Safari windows are restricted to a single tab, which reduces the extent of information available via the leak. However, if you visit multiple different websites within the same tab, all databases these websites interact with are leaked to all subsequently visited websites. Note that in other WebKit-based browsers, for example Brave or Google Chrome on iOS, private tabs share the same browser session in the same way as in non-private mode.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;We created a simple demo page that demonstrates how a website can learn the Google account identity of any visitor. The demo is available at &lt;a href="https://safarileaks.com"&gt;safarileaks.com&lt;/a&gt;. If you open the page and start the demo in an affected browser, you will see how the current browsing context and your identity is leaked right away. Identity data will only be available if you are authenticated to your Google account in the same browsing session. &lt;/p&gt;

&lt;p&gt;Moreover, the demo detects the presence of 20+ websites in other browser tabs or windows, including Google Calendar, Youtube, Twitter, and Bloomberg. This is possible because database names, which those websites interact with, are specific enough to uniquely identify them.  &lt;/p&gt;

&lt;p&gt;The supported browsers are Safari 15 on macOS, and essentially all browsers on iOS 15 and iPadOS 15. That is because Apple’s App Store guidelines require all browsers on iOS  and iPadOS to use the WebKit engine.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://safarileaks.com"&gt;Try the demo&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reproducing-the-leak"&gt;
  &lt;/a&gt;
  Reproducing the leak
&lt;/h2&gt;

&lt;p&gt;To reproduce the leak yourself, simply call the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/databases" rel="noopener noreferrer"&gt;indexedDB.databases()&lt;/a&gt; API. In case websites opened in other frames, tabs, or windows interact with other databases, you will see the cross-origin-duplicated databases.&lt;/p&gt;

&lt;p&gt;Based on our observations, if a database is deleted, all related cross-origin-duplicated databases are also deleted. However, there seems to be an issue when developer tools are opened and a page refresh happens. On every page refresh, all databases are duplicated once again and seem to become independent from the original databases. In fact, it’s not even possible to delete these duplicated databases by using the regular &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/deleteDatabase" rel="noopener noreferrer"&gt;indexedDB.deleteDatabase()&lt;/a&gt; function. &lt;/p&gt;

&lt;p&gt;This behavior makes it very difficult to use the developer tools to understand what exactly is happening with the databases that a website interacts with. It is therefore recommended to use other means of debugging (for example rendering output into the DOM instead of using console logs or the JavaScript debugger) when trying to reproduce the leaks described in this article. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-protect-yourself"&gt;
  &lt;/a&gt;
  How to protect yourself
&lt;/h2&gt;

&lt;p&gt;Unfortunately, there isn’t much Safari, iPadOS and iOS users can do to protect themselves without taking drastic measures. One option may be to block all JavaScript by default and only allow it on sites that are trusted. This makes modern web browsing inconvenient and is likely not a good solution for everyone. Moreover, vulnerabilities like cross-site scripting make it possible to get targeted via trusted sites as well, although the risk is much smaller. Another alternative for Safari users on Macs is to temporarily switch to a different browser. Unfortunately, on iOS and iPadOS this is not an option as all browsers are affected.&lt;/p&gt;

&lt;p&gt;The only real protection is to update your browser or OS once the issue is resolved by Apple. In the meantime, we hope this article will raise awareness of this issue.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>privacy</category>
      <category>javascript</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Integrating Google reCAPTCHA with Laravel, Inertia JS and Vue 3.</title>
      <author>Sesha</author>
      <pubDate>Mon, 17 Jan 2022 17:04:12 +0000</pubDate>
      <link>https://dev.to/sesha/integrating-google-recaptcha-with-laravel-inertia-js-and-vue-3-3o0c</link>
      <guid>https://dev.to/sesha/integrating-google-recaptcha-with-laravel-inertia-js-and-vue-3-3o0c</guid>
      <description>&lt;p&gt;I will show you how to add the Google reCAPTCHA version 3 with Laravel with a few simple steps.&lt;/p&gt;

&lt;p&gt;I assume you already installed Laravel with Jetstream, InertiaJS and Vue3. If not, &lt;a href="https://jetstream.laravel.com/"&gt;this&lt;/a&gt; link will help you to install.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup-1"&gt;
  &lt;/a&gt;
  Setup 1:
&lt;/h3&gt;

&lt;p&gt;Register your site in the &lt;a href="https://www.google.com/recaptcha/admin/create"&gt;Google reCAPTCHA&lt;/a&gt; and get the reCAPTCHA site key and Secret Key.&lt;/p&gt;

&lt;p&gt;Configure those values in the config services.php file for better accessibility and management.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
 &lt;span class="s1"&gt;'google_recaptcha'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="s1"&gt;'url'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'https://www.google.com/recaptcha/api/siteverify'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s1"&gt;'site_key'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GOOGLE_RECAPTCHA_SITE_KEY'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="s1"&gt;'secret_key'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GOOGLE_RECAPTCHA_SECRET_SITE_KEY'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To access the reCAPTCHA site key in the frontend, share through the HandleInertiaRequest file. Directly mentioning the site key in the front end isn't a great idea.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;share&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s1"&gt;'recaptcha_site_key'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'services.google_recaptcha.site_key'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
     &lt;span class="p"&gt;]);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setup-2"&gt;
  &lt;/a&gt;
  Setup 2:
&lt;/h3&gt;

&lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/vue-recaptcha-v3"&gt;Vue recaptcha v3&lt;/a&gt; and import in app.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;VueReCaptcha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useReCaptcha&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-recaptcha-v3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;


&lt;span class="nx"&gt;createInertiaApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;appName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`./Pages/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.vue`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;plugin&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;captcheKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initialPage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;recaptcha_site_key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;plugin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;VueReCaptcha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;siteKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;captcheKey&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mixin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3:
&lt;/h3&gt;

&lt;p&gt;To add Google reCAPTCHA to the form. Here, I used a sample form to demonstrate the Google reCAPTCHA with Vue 3 composition API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;  &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;submit.prevent=&lt;/span&gt;&lt;span class="s"&gt;"recaptcha"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   ...

   &lt;span class="nt"&gt;&amp;lt;jet-input-error&lt;/span&gt; &lt;span class="na"&gt;:message=&lt;/span&gt;&lt;span class="s"&gt;"form.errors.captcha_token"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-2"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useForm&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@inertiajs/inertia-vue3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useReCaptcha&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue-recaptcha-v3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useForm&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;captcha_token&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;executeRecaptcha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;recaptchaLoaded&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReCaptcha&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;recaptcha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;recaptchaLoaded&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;captcha_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;executeRecaptcha&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;contact-us.store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;preserveScroll&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;submit&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;recaptcha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h3&gt;

&lt;p&gt;Create a Laravel custom rule to verify the token and score. Here, I rejected the form if the score &amp;lt;= 0.5 and status was not equals to true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Rules&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Http&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Contracts\Validation\Rule&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Recaptcha&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;Rule&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Create a new rule instance.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Determine if the validation rule passes.
     *
     * @param  string  $attribute
     * @param  mixed  $value
     * @return bool
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;passes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$attribute&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'services.google_recaptcha'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Http&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;asForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$endpoint&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'url'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'secret'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$endpoint&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'secret_key'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;'response'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'score'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Get the validation error message.
     *
     * @return string
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'Something goes wrong. Please contact us directly through the phone or email.'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, add in the controller to validate the input request along with reCAPTCHA token.&lt;/p&gt;

&lt;p&gt;use Illuminate\Support\Facades\Request;&lt;br&gt;
use Illuminate\Support\Facades\Redirect;&lt;br&gt;
use App\Rules\Recaptcha;&lt;/p&gt;

&lt;p&gt;...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$contact&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contact&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="nc"&gt;Request&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
     &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:50'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
     &lt;span class="s1"&gt;'email'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:100'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
     &lt;span class="s1"&gt;'phone'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'nullable'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:13'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
     &lt;span class="s1"&gt;'message'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'max:2000'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
     &lt;span class="s1"&gt;'captcha_token'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Recaptcha&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;  

 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Redirect&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'contact-us'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   

&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope, this tutorial helps you to integrate Google reCAPTCHA 3 with Laravel. Please let me know if it doesn't work for you.&lt;/p&gt;

&lt;p&gt;Thank you. &lt;/p&gt;

</description>
      <category>laravel</category>
      <category>vue</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A lightweight framework for Material Design 3</title>
      <author>Leonardo Rafael Wehrmeister</author>
      <pubDate>Mon, 17 Jan 2022 16:54:13 +0000</pubDate>
      <link>https://dev.to/leonardorafael/a-lightweight-framework-for-material-design-3-3dm0</link>
      <guid>https://dev.to/leonardorafael/a-lightweight-framework-for-material-design-3-3dm0</guid>
      <description>&lt;p&gt;Hello devs,&lt;/p&gt;

&lt;p&gt;I am super excited to share with you the new release of &lt;a href="https://www.beercss.com"&gt;https://www.beercss.com&lt;/a&gt; guided by Material Design 3. Oh, sorry for the shy post, ok?&lt;/p&gt;

&lt;p&gt;Hope you enjoy it! 🍺🍺🍺&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
      <category>pwa</category>
    </item>
    <item>
      <title>An Overview of CSS Positioning Schemes</title>
      <author>Zach Snoek</author>
      <pubDate>Mon, 17 Jan 2022 16:30:02 +0000</pubDate>
      <link>https://dev.to/zachsnoek/an-overview-of-css-positioning-schemes-59bo</link>
      <guid>https://dev.to/zachsnoek/an-overview-of-css-positioning-schemes-59bo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this post, we’ll learn about positioning schemes, which we can use to change an element’s position.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is a post in a series about topics covered in Josh Comeau's &lt;a href="https://css-for-js.dev/"&gt;CSS for JavaScript Developers&lt;/a&gt; course. These posts will be brief, polished versions of my notes, and I'll write about new things I learned or deepen my understanding of something already familiar to me.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-reference"&gt;
  &lt;/a&gt;
  Quick reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#static"&gt;Static&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#relative"&gt;Relative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#absolute"&gt;Absolute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fixed"&gt;Fixed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sticky"&gt;Sticky&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-position-property"&gt;
  &lt;/a&gt;
  The position property
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;position&lt;/code&gt; property allows us to specify a positioning scheme. It accepts the values: &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;relative&lt;/code&gt;, &lt;code&gt;absolute&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, and &lt;code&gt;sticky&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;static&lt;/code&gt; is the default value; an element with this value set is called a statically-positioned or non-positioned element. An element using a value other than &lt;code&gt;static&lt;/code&gt; is called a positioned element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inset-properties"&gt;
  &lt;/a&gt;
  Inset properties
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;position&lt;/code&gt; works with the &lt;a href="https://www.w3.org/TR/css-position-3/#coords"&gt;inset properties&lt;/a&gt; &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;left&lt;/code&gt; to control the precise location of a positioned element.&lt;/p&gt;

&lt;p&gt;Let’s take a closer look at each of these positioning scheme values.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static"&gt;
  &lt;/a&gt;
  Static
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;static&lt;/code&gt; is the default value for &lt;code&gt;position&lt;/code&gt;, and it places the element in the normal flow of the document. Inset properties do not affect the element’s position.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/PoJdRBp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#relative"&gt;
  &lt;/a&gt;
  Relative
&lt;/h2&gt;

&lt;p&gt;The element gets placed in the normal flow of the document like &lt;code&gt;static&lt;/code&gt; and inset properties offset it relative to itself. This offset does not affect the layout of other elements, and the element takes up space as if it were statically positioned. The offset acts as a cosmetic effect.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/LYzJdaV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#absolute"&gt;
  &lt;/a&gt;
  Absolute
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;absolute&lt;/code&gt; removes the element from the normal document flow and positions it relative to its nearest positioned ancestor. If there is no positioned ancestor, the element gets positioned relative to the &lt;a href="https://www.w3.org/TR/css-display-3/#initial-containing-block"&gt;initial containing block&lt;/a&gt; (the containing block of the root &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element, a box the size and position of the viewport).&lt;/p&gt;

&lt;p&gt;No space gets made for absolutely-positioned elements in the page layout; other elements act as if they do not exist.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/ZEXMxZw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fixed"&gt;
  &lt;/a&gt;
  Fixed
&lt;/h2&gt;

&lt;p&gt;Fixed elements behave similarly to absolutely-positioned elements, but they are always positioned relative to the initial containing block. This causes the element to appear fixed on the page, regardless of scrolling.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/ExweEqY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Note that an element using the &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;perspective&lt;/code&gt;, and &lt;code&gt;transform&lt;/code&gt; properties or the &lt;code&gt;will-change: transform&lt;/code&gt; declaration becomes the containing block of any &lt;code&gt;fixed&lt;/code&gt; descendants, causing the &lt;code&gt;fixed&lt;/code&gt; elements to act absolutely-positioned. In other words, elements with these properties cannot have &lt;code&gt;fixed&lt;/code&gt; descendants.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sticky"&gt;
  &lt;/a&gt;
  Sticky
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sticky&lt;/code&gt; causes the element to act like a relatively-positioned element until it reaches a threshold, at which point it becomes fixed relative to its &lt;a href="https://www.w3.org/TR/css-overflow-3/#scrollport"&gt;nearest scrollport&lt;/a&gt; (i.e., the closest ancestor that manages overflow) until its container goes out of view. Space is made for the element in the layout, even when it acts fixed.&lt;/p&gt;

&lt;p&gt;The threshold is specified by the inset properties: for example, a &lt;code&gt;sticky&lt;/code&gt; element with &lt;code&gt;top: 10px&lt;/code&gt; would be relatively-positioned until the element is 10 pixels from the top of its nearest scrollport. Once that threshold is met, the element is fixed 10 pixels from the top of its nearest scrollport.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/vYezjyZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this example, the box sticks to the viewport but is only sticky while its container is in view:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/QWqVrpz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#positioning-in-the-wild"&gt;
  &lt;/a&gt;
  Positioning in the wild
&lt;/h2&gt;

&lt;p&gt;I found it helpful to understand positioning by seeing its use in the real world. Here are a few examples of positioning types that I found.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#absolute-facebook-notification-badge"&gt;
  &lt;/a&gt;
  Absolute: Facebook notification badge
&lt;/h3&gt;

&lt;p&gt;This notification badge on Facebook uses absolute positioning to appear above the news icon:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pPZ41pkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg4yb1e9r4rjyh6k8tv2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pPZ41pkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg4yb1e9r4rjyh6k8tv2.png" alt="Facebook notification badge" width="45" height="43"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fixed-stackoverflow-header"&gt;
  &lt;/a&gt;
  Fixed: StackOverflow header
&lt;/h3&gt;

&lt;p&gt;Headers commonly use fixed positioning to stick to the top of the page when the user scrolls:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4zbtf3Xw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41gw0533h0jzmo7bpyyh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4zbtf3Xw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41gw0533h0jzmo7bpyyh.gif" alt="Stack Overflow header" width="600" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sticky-iphone-product-page"&gt;
  &lt;/a&gt;
  Sticky: iPhone product page
&lt;/h3&gt;

&lt;p&gt;Both the white “iPhone 13” header and product image on this page are sticky:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SGZEAdnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6gycnn533xqgvgr95cj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SGZEAdnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6gycnn533xqgvgr95cj.gif" alt="iPhone 13 product page" width="600" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relative"&gt;
  &lt;/a&gt;
  Relative
&lt;/h3&gt;

&lt;p&gt;I couldn’t find a good example for relative positioning. Please suggest one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect
&lt;/h2&gt;

&lt;p&gt;If you enjoyed this post, connect with me on &lt;a href="https://www.linkedin.com/in/zach-snoek-5b327b179/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://github.com/zachsnoek"&gt;GitHub&lt;/a&gt;, and &lt;a href="https://twitter.com/zach_snoek"&gt;Twitter&lt;/a&gt;! You can also &lt;a href="https://mailchi.mp/2df4b6d5458f/signup-page"&gt;subscribe to my mailing list&lt;/a&gt; to get the latest content and news from me.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bJMEpL4rxAQ"&gt;Chris Coyier | Sticky Positioning in CSS: How it Works, What Can Break It, and Dumb Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/almanac/properties/p/position/"&gt;CSS-Tricks | position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-for-js.dev/"&gt;Josh Comeau | CSS for JavaScript Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position"&gt;MDN | position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning"&gt;MDN | Positioning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/css-position-3/"&gt;W3C | CSS Positioned Layout Module Level 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cover photo by &lt;a href="https://unsplash.com/@__itsflores?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Omar Flores&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Free Django v4 Starter - Soft UI Dashboard</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 17 Jan 2022 16:12:15 +0000</pubDate>
      <link>https://dev.to/sm0ke/free-django-v5-starter-soft-ui-dashboard-o9e</link>
      <guid>https://dev.to/sm0ke/free-django-v5-starter-soft-ui-dashboard-o9e</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article presents an &lt;code&gt;open-source dashboard&lt;/code&gt; starter recently updated to work with the latest &lt;strong&gt;Django&lt;/strong&gt; version. For newcomers, &lt;code&gt;Django&lt;/code&gt; is a leading web framework powered by Python, updated in December 2021 to version 4. &lt;a href="https://appseed.us/product/django-soft-ui-dashboard"&gt;Soft UI Dashboard Django&lt;/a&gt; can be downloaded under the MIT license directly from Github and used for unlimited commercial end products or simply for eLearning activities. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://django-soft-ui-dashboard.appseed-srv1.com/"&gt;Soft UI Dashboard Django&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/django-soft-ui-dashboard"&gt;Soft UI Dashboard Django&lt;/a&gt; - sources (published on GH)&lt;/li&gt;
&lt;li&gt;✨ Get &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Designed for those who like bold elements and beautiful dashboards, &lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; is ready to help you create stunning websites and web apps. This pixel-perfect &lt;strong&gt;Bootstrap 5&lt;/strong&gt; design is provided by &lt;code&gt;Creative-Tim&lt;/code&gt; agency.&lt;/p&gt;




&lt;p&gt;The product can be compiled and used in a local environment via the Docker setup shipped with the sources.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; -  Clone source code (from Github)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-soft-ui-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-soft-ui-dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the above commands are executed, we should be able to visit the app in the browser, register new users, and authenticate.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0VSbyw21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48y17u2feirj4t9fj7qo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0VSbyw21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48y17u2feirj4t9fj7qo.png" alt="Django 4 Soft UI Dashboard - Login Page." width="880" height="463"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-4-updates"&gt;
  &lt;/a&gt;
  ✨ Django 4 Updates
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://blog.appseed.us/django-v4-release/"&gt;Django framework got an update&lt;/a&gt; in December from version v3.2.6 to v4.0 with a few improvements and breaking changes highlighted below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;zoneInfo&lt;/code&gt; becomes the default time zone&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Template-based&lt;/code&gt; form rendering&lt;/li&gt;
&lt;li&gt;Built-in &lt;code&gt;RedisCache&lt;/code&gt; backend powered by redis-py&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;scrypt&lt;/code&gt; password hasher (more powerful than PBKDF2)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Deprecated support&lt;/code&gt; for PostgreSQL v9.6 and Oracle v12.2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information feel free to access the official &lt;a href="https://docs.djangoproject.com/en/4.0/releases/4.0/"&gt;Django v4.x release page&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#soft-ui-design"&gt;
  &lt;/a&gt;
  ✨ Soft UI Design
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining.&lt;/p&gt;

&lt;p&gt;You will save a lot of time going from prototyping to full-functional code because all elements are implemented. This Free Bootstrap 5 Dashboard is coming with prebuilt design blocks, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sE2Fu9uh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nzxutago0fb245uf3z57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sE2Fu9uh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nzxutago0fb245uf3z57.png" alt="Django 4 Soft UI Dashboard - User Profile Page" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Django 4 Soft Dashboard - Billing Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EsFkr-Rl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40lebx8uj3ccehrzuczn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EsFkr-Rl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40lebx8uj3ccehrzuczn.png" alt="Django 4 Soft UI Dashboard - Billing Page." width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, feel free to acess:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;🎁 More &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Dashboards&lt;/a&gt; crafted in &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;Flask&lt;/code&gt;, and &lt;strong&gt;Django&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;🎁 Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - curated list published on Dev.to
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>django</category>
      <category>python</category>
      <category>opensource</category>
    </item>
    <item>
      <title>iOS Code Review Checklist</title>
      <author>ivcelic</author>
      <pubDate>Mon, 17 Jan 2022 16:11:36 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/ios-code-review-checklist-53ia</link>
      <guid>https://dev.to/bornfightcompany/ios-code-review-checklist-53ia</guid>
      <description>&lt;p&gt;To encourage iOS developers to approach code review more throughly we've built a simple check list that should be followed when going through an iOS pull request. &lt;/p&gt;

&lt;p&gt;Of course we do not go through it and add checkmarks on every PR but we use it to remind us from time to time what should we look for when code reviewing. This is also a good start for someone who is new in iOS development or code reviewing in general.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C9DwGASO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wawzhxix6mpkdti6hg2d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C9DwGASO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wawzhxix6mpkdti6hg2d.png" alt="Image description" width="880" height="948"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Are there any merge conflicts in the PR?&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If yes - return to assignee before looking further into code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. Did the static analysis check run?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;eg. for checking the Swift code style we use Swift Lint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3. Check the architecture&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;eg. data should not be fetched or processed in presenters or in views&lt;/li&gt;
&lt;li&gt;eg. views should not be modified in view models&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4. Is the code consistent with the agreed coding guidelines?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Are there any new Xcode warnings introduced?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4-B4j15Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxzq48w4w2qgfnz8asl2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4-B4j15Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxzq48w4w2qgfnz8asl2.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Prefer static constants over computed properties&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prefer&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;static let c: Int = 1234
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Over&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;static var d: Int { return 1234 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;7. Check single source of truth principle&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;eg. don’t preserve the same information in multiple places in the code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;8. Avoid singletons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use dependency injection instead&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;9.Look for force unwrapping&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;force unwrap should be avoided (use in &amp;lt; 1% of the cases)&lt;/li&gt;
&lt;li&gt;Using ! should always be a red flag!&lt;/li&gt;
&lt;li&gt;Check if early return from functions (eg. guard) is used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;10.Constants&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extract constant to a struct&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;11.Check for magic numbers&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoid harcoding, avoid magic numbers, if needed extract into a constant&lt;/li&gt;
&lt;li&gt;If added, magic numbers should be commented&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9cVBSqxE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3jyv7h8w0webggpx6hg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9cVBSqxE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3jyv7h8w0webggpx6hg.png" alt="Image description" width="880" height="644"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12.Check encapsulation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check if public variable or function can be private or private(set)?&lt;/li&gt;
&lt;li&gt;If a class won’t be ever instantiated - use enum instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;13.Check polymorphism&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Should we mark the class final?&lt;/li&gt;
&lt;li&gt;Should we use class or static keyword for a function/variable.&lt;/li&gt;
&lt;li&gt;Prefer composition with protocols over inheritance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;14.Check for single responsability&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The function should have one purpose! Split it in two if makes sense.&lt;/li&gt;
&lt;li&gt;The class should not have too many responsabilities - split if needed.&lt;/li&gt;
&lt;li&gt;Avoid massive view controller, add managers, helpers, utils instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3UF4Ckvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydli4fgvwxzdf2pih7b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3UF4Ckvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydli4fgvwxzdf2pih7b7.png" alt="Image description" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15.Check for explicit use of self keyword&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Explicit (unneeded) use of self should be avoided
because it makes the capturing semantics of self stand out more in closures, and prevents verbosity elsewhere&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;16.Performance check&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use strings concatenation with /() instead of +&lt;/li&gt;
&lt;li&gt;use isEmpty instead of == nil&lt;/li&gt;
&lt;li&gt;use ! instead of == false&lt;/li&gt;
&lt;li&gt;instantiate DateFormatter only once&lt;/li&gt;
&lt;li&gt;reuse cells&lt;/li&gt;
&lt;li&gt;use image caching &lt;/li&gt;
&lt;li&gt;use background threads where needed&lt;/li&gt;
&lt;li&gt;etc…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;17.Error handling&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are all the errors cases handled in code? Log the error, notify the user, retry, fail safely…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;18.Check security vulnerabilities&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are there any user passwords or other secrets stored as plain text?&lt;/li&gt;
&lt;li&gt;Is there any sensitive data being logged?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;19.Check naming&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is naming clear and consistent. The naming is important for writing self-documenting code!&lt;/li&gt;
&lt;li&gt;Boolean values should start with is, can, should, will…&lt;/li&gt;
&lt;li&gt;When in doubt - use longer names (adds more information) over shorter names (can bring confusion).&lt;/li&gt;
&lt;li&gt;Use UpperCamelCase for types and protocols, lowerCamelCase for everything else.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oHhAeMsB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1dzcry28pfy1tocflb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oHhAeMsB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1dzcry28pfy1tocflb8.png" alt="Image description" width="830" height="898"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;20.Check duplicate code&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Duplicate code is a big no no and should be extracted and reused!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;21.Remove unnecessary code&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove commented code. You can always get it back with git.&lt;/li&gt;
&lt;li&gt;Remove empty and/or unused variables, functions, imports…&lt;/li&gt;
&lt;li&gt;No need to add explicit init for structs if using only the default initialiser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;22.Memory leaks&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Closures should use weak self&lt;/li&gt;
&lt;li&gt;Delegates should be weak&lt;/li&gt;
&lt;li&gt;Check if unowned is misused&lt;/li&gt;
&lt;li&gt;Check for any retain cycles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;23.Check if all strings are localised&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;24.Is the code covered with logs?&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Every important event in the app should be logged.&lt;/li&gt;
&lt;li&gt;The logs should contain enough information (class, function, parameters, severity).&lt;/li&gt;
&lt;li&gt;Repeating information can pollute the log.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;25.Is the code well documented?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does every public function contain a comment?&lt;/li&gt;
&lt;li&gt;Does the code contain a comment for every specific part of the code?&lt;/li&gt;
&lt;li&gt;Does every specific class (manager, service, script…) contain a comment about their purpose?&lt;/li&gt;
&lt;li&gt;Does every file contain a copyright?&lt;/li&gt;
&lt;li&gt;Should the README be updated?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_tkmeWSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzmqqyyif76p1kmspny8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_tkmeWSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzmqqyyif76p1kmspny8.png" alt="Image description" width="880" height="675"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As mention before, we use this checklist as a reminder and a motivation for doing better code reviews. Thus, we are adding bullets to our checklist and improving it over time. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What would you add to the list?&lt;/strong&gt; 🙂&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>ios</category>
      <category>codereview</category>
      <category>swift</category>
    </item>
    <item>
      <title>Paracetamol.js💊| #14: ¿Qué imprime este código JavaScript? </title>
      <author>Cristian Fernando </author>
      <pubDate>Mon, 17 Jan 2022 16:04:47 +0000</pubDate>
      <link>https://dev.to/duxtech/paracetamoljs-14-que-imprime-este-codigo-javascript-cb1</link>
      <guid>https://dev.to/duxtech/paracetamoljs-14-que-imprime-este-codigo-javascript-cb1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#qu%C3%A9-imprime-este-c%C3%B3digo-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;¿Qué imprime este código JavaScript?&lt;/strong&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A. &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B. &lt;code&gt;number&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C. &lt;code&gt;object&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D. &lt;code&gt;string&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Respuesta en el primer comentario.&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>spanish</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to create a simple event streaming in Laravel?</title>
      <author>Bobby Iliev</author>
      <pubDate>Mon, 17 Jan 2022 15:55:48 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/how-to-create-a-simple-event-streaming-in-laravel-4pia</link>
      <guid>https://dev.to/bobbyiliev/how-to-create-a-simple-event-streaming-in-laravel-4pia</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Event streams provide you with a way to send events to the client without having to reload the page. This is useful for things like updating the user interface in real-time changes are made to the database.&lt;/p&gt;

&lt;p&gt;Unlike traditional Long-polling using AJAX requests, where multiple requests are sent to the server and a new connection is established each time, event streams are sent to the client in real-time in a single request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6NpD6Rw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/51pLy3q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6NpD6Rw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/51pLy3q.png" alt="Server sent events" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article, I will show you how to create a simple event streaming in Laravel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before you start, you need to have Laravel installed on your machine.&lt;/p&gt;

&lt;p&gt;I will be using a DigitalOcean Ubuntu Droplet for this demo. If you wish, you can use my affiliate code to get &lt;a href="https://m.do.co/c/2a9bba940f39"&gt;free $100 DigitalOcean credit&lt;/a&gt; to spin up your own servers!&lt;/p&gt;

&lt;p&gt;If you do not have that yet, you can follow the steps from this tutorial on how to do that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-install-laravel-on-digitalocean-with-1-click"&gt;How to Install Laravel on DigitalOcean with 1-Click&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or you could use this awesome script to do the installation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/episode/laravel-on-digital-ocean-with-larasail"&gt;LaraSail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-controller"&gt;
  &lt;/a&gt;
  Creating a controller
&lt;/h2&gt;

&lt;p&gt;Let's start by creating a controller that will handle the event stream.&lt;/p&gt;

&lt;p&gt;To do so, we will use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:controller EventStreamController
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a new controller in the &lt;code&gt;App\Http\Controllers&lt;/code&gt; directory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-event-stream-method"&gt;
  &lt;/a&gt;
  Adding the event stream method
&lt;/h2&gt;

&lt;p&gt;Once we have our controller created, we need to add the &lt;code&gt;stream&lt;/code&gt; method to it. The method will be used to send the event stream.&lt;/p&gt;

&lt;p&gt;Open the &lt;code&gt;EventStreamController.php&lt;/code&gt; file and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Carbon\Carbon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\Trade&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StreamsController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * The stream source.
     *
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"event: ping&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$curDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DATE_ISO8601&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'data: {"time": "'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$curDate&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'"}'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                &lt;span class="nv"&gt;$trades&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Trade&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'data: {"total_trades":'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$trades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'}'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                &lt;span class="nv"&gt;$latestTrades&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Trade&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'stock'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'data: {"latest_trade_user":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'", "latest_trade_stock":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;symbol&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'", "latest_trade_volume":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'", "latest_trade_price":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'", "latest_trade_type":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'"}'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;

                &lt;span class="nb"&gt;ob_flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="nb"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

                &lt;span class="c1"&gt;// Break the loop if the client aborted the connection (closed the page)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;connection_aborted&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
                &lt;span class="nb"&gt;usleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 50ms&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'Cache-Control'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'no-cache'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'Content-Type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'text/event-stream'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main things to note here are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We are using the &lt;code&gt;response()-&amp;gt;stream()&lt;/code&gt; method to create the event stream.&lt;/li&gt;
&lt;li&gt;Then we have an infinite loop that sends the event stream every 50ms.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;ob_flush()&lt;/code&gt; and &lt;code&gt;flush()&lt;/code&gt; methods to send the event stream.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;sleep()&lt;/code&gt; method to wait for 50ms before sending the next event.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;connection_aborted()&lt;/code&gt; method to break the loop if the client aborted the connection.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;Carbon\Carbon&lt;/code&gt; class to get the current date.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;App\Models\Trade&lt;/code&gt; model to get the latest trades. This is just for the demo, you can use any model you want.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Content-Type&lt;/code&gt; header is set to &lt;code&gt;text/event-stream&lt;/code&gt; to tell the browser that the response is an event stream.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#enable-output-buffering"&gt;
  &lt;/a&gt;
  Enable output buffering
&lt;/h2&gt;

&lt;p&gt;For the above code to work, we need to enable output buffering in your PHP.ini file. This is done by adding the following line to the &lt;code&gt;php.ini&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;output_buffering = On
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may need to reload the PHP-FPM service after making this change. Or if you are using Apache, you can restart Apache.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-routes"&gt;
  &lt;/a&gt;
  Adding the routes
&lt;/h2&gt;

&lt;p&gt;We would like to call the &lt;code&gt;stream&lt;/code&gt; method when the &lt;code&gt;/stream&lt;/code&gt; route is requested.&lt;/p&gt;

&lt;p&gt;The route will be added to the &lt;code&gt;routes/web.php&lt;/code&gt; file and will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Controllers\StreamsController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/stream'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nc"&gt;StreamsController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'stream'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#working-with-the-event-stream-on-the-frontend"&gt;
  &lt;/a&gt;
  Working with the event stream on the frontend
&lt;/h2&gt;

&lt;p&gt;You could use a frontend framework like &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; to handle the event stream. But for this demo, I will use pure Javascript.&lt;/p&gt;

&lt;p&gt;The JavaScript snippet that I will add to my blade template will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/stream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;eventSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;time&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;newElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;eventList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see this in action, you can try the following demo!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo-project"&gt;
  &lt;/a&gt;
  Demo project
&lt;/h2&gt;

&lt;p&gt;If you want to see how the event stream works, you can check out the demo project I created:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/materialize-tutorials/tree/main/laravel-eventstreams"&gt;Laravel EventStream: Real-time stock trades dashboard with Laravel and Materialize&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The demo project does not only show the event stream but also has a simple frontend dashboard and uses &lt;a href="https://materialize.com"&gt;Materialize&lt;/a&gt; as a streaming database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eFJ9iGv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/21223421/149408173-7a76c837-314b-419a-a589-d6867fc55c99.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFJ9iGv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/21223421/149408173-7a76c837-314b-419a-a589-d6867fc55c99.gif" alt="Laravel EventStream" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sse-vs-websockets"&gt;
  &lt;/a&gt;
  SSE vs WebSockets
&lt;/h2&gt;

&lt;p&gt;Event streams are great and easy to use, but there are some pros and cons when compared to other streaming protocols like &lt;a href="https://en.wikipedia.org/wiki/WebSocket"&gt;WebSockets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For example, SSE is unidirectional, meaning that once the connection is established the server will only send data to the client, but the client can't send data back to the server.&lt;/p&gt;

&lt;p&gt;Unlike long-polling, with WebSockets you only have a single connection to the server similar to SSE (Server-Sent Events). The connection is duplex, meaning you can send and receive data from the server.&lt;/p&gt;

&lt;p&gt;If you want to learn more about the differences between SSE and WebSockets, check out this great video by Martin Chaov:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/n9mRjkQg3VE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;For more information about event streams, check out this documentation here by Mozilla:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events"&gt;Event streams in the Web Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There you would find a more in-depth explanation of the event streams and how they work.&lt;/p&gt;

&lt;p&gt;For more information about Materialize, check out this video here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WVORbibyFGA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hope you enjoyed this tutorial!&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>materialize</category>
      <category>database</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Windows 10 PuTTY Kurulumu</title>
      <author>Fatih Arslan Tugay</author>
      <pubDate>Mon, 17 Jan 2022 15:37:23 +0000</pubDate>
      <link>https://dev.to/aciklab/windows-10-putty-kurulumu-3691</link>
      <guid>https://dev.to/aciklab/windows-10-putty-kurulumu-3691</guid>
      <description>&lt;p&gt;Bu yazımızda Windows 10 işletim sistemi üzerinde PuTTY programının kurulumunu anlatacağız.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#putty-nedir"&gt;
  &lt;/a&gt;
  PuTTY Nedir?
&lt;/h2&gt;

&lt;p&gt;PuTTY, SSH bağlantısı ile birlikte uzak bir sunucuya bağlantı kurmamızı sağlayan bir yazılımdır. PuTTY ile birlikte sunucularınıza SSH/Telnet bağlantısı gerçekleştirerek erişim sağlayabilirsiniz. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kurulum"&gt;
  &lt;/a&gt;
  Kurulum
&lt;/h2&gt;

&lt;p&gt;Öncelikle programın yükleme dosyasını indirmemiz gerekmektedir. &lt;a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html"&gt;Linke&lt;/a&gt; tıklayarak ilgili siteye gidelim. Direkt .msi uzantılı kurulum dosyası indireceğimizden Package files kısmından işlemcimize uyumlu pakete tıklayarak indirelim.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wM2QFcZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68rsbiilhi3kktcfm6hm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wM2QFcZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68rsbiilhi3kktcfm6hm.png" alt="1" width="880" height="662"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İlk önce Next diyerek kuruluma başlıyoruz. İlk gelen kısımda programın kurulacağı yeri seçiyoruz. Default olarak gelen yeri değiştirmeden Next diyerek devam edebiliriz. Daha sonra gelen ekranda ise istediğimiz özellikleri seçtiğimiz ekran geliyor. İşaretli yerdeki simgelerin hepsini resimdeki hale getirerek Install diyelim ve kuruluma başlayalım.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---VZKjX_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gojrr1w4ukwdxgr9cin.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---VZKjX_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gojrr1w4ukwdxgr9cin.png" alt="2" width="440" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kurulum tamamlandıktan sonra kurulum sihirbazını kapatarak masaüstüne gidelim. PuTTY simgesine tıklayarak programı kullanmaya başlayabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T1dv5LtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we1wc0xsj9h59gwp2cm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T1dv5LtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we1wc0xsj9h59gwp2cm6.png" alt="3" width="400" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>putty</category>
      <category>ssh</category>
      <category>telnet</category>
      <category>windows</category>
    </item>
    <item>
      <title>Know Bunzz, a game changer blockchain startup for DApp Development with No Code</title>
      <author>Bunzz</author>
      <pubDate>Mon, 17 Jan 2022 15:35:29 +0000</pubDate>
      <link>https://dev.to/bunzzdev/know-bunzz-a-game-changer-blockchain-startup-for-dapp-development-with-no-code-3ml0</link>
      <guid>https://dev.to/bunzzdev/know-bunzz-a-game-changer-blockchain-startup-for-dapp-development-with-no-code-3ml0</guid>
      <description>&lt;p&gt;In a world where businesses are starting to shift into blockchain solutions to adapt to upcoming new standards in tech and user experience, the path to that goal has been very complicated, complex and costly until the appearance of Bunzz on the scene. Bunzz is the world's first platform that allows software developers and businesses to develop DApps (Decentralized Applications) in a few minutes without knowing how to code nor any prior knowledge of blockchain and Web3.   &lt;/p&gt;

&lt;p&gt;Landing Page: &lt;a href="https://bunzz.dev"&gt;bunzz.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bunzz is the second service and new business fully dedicated to Dapp development provided and developed by the blockchain startup LasTrust, that also has been up in the worldwide tech market providing other services such as CloudCerts.&lt;/p&gt;

&lt;p&gt;Technically, Bunzz functions like Firebase but for Dapps development, being a Blockchain Backend as a Service (BC BaaS) that lets developers create DApps without coding but combining smart contracts by selecting Modules and after that integrating them to a front-end via a Bubble plug-in, while at the same time Bunzz provides the automatic back-end solutions for them, all in one platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AHOyWaGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5834uj7vpyytgm9nxay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AHOyWaGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5834uj7vpyytgm9nxay.png" alt="Image description" width="880" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this way, Bunzz provides a service that eliminates the need for back-end coding in DApp development, while also providing an environment where front-end development can be done without the need to write any code.&lt;/p&gt;

&lt;p&gt;This unique modular structure as User Interface enables smart contracts to be combined swiftly and smoothly, almost as easy as drag and drop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vkUoql5h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gs62a4kn75rctv47mgyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vkUoql5h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gs62a4kn75rctv47mgyk.png" alt="Image description" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, it’s possible to combine a module that generates NFTs (ERC721) with a module that trades NFTs to develop an NFT marketplace. Alternatively, a module that generates a ERC20 token and a lending function module and using them to develop a "lending DeFi service. Among other use cases and new combinations to come in the coming months, meeting the needs of each user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQPv3ET3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs6stex7la1sm3nyv5h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQPv3ET3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs6stex7la1sm3nyv5h1.png" alt="Image description" width="512" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2zNymFqYXOY"&gt;https://www.youtube.com/watch?v=2zNymFqYXOY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to these most frequently used ready-made modules of smart contracts that have been prepared in advance upon launch, in Q1 2022, Bunzz plans to implement an Explorer and Repository, which will allow users to use their own uploaded smart contracts, extending the functionality of the DApps that can be built by importing and using other smart contracts that are external to Bunzz.&lt;/p&gt;

&lt;p&gt;For a depiction of what is possible with Bunzz, we invite you to watch this brief video with a walkthrough of Bunzz dashboard and the creation of a cryptocurrency as a sample of how the platform works. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/2zNymFqYXOY"&gt;https://youtu.be/2zNymFqYXOY&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Apps based on blockchain technology, such as NFT and DeFi, have attracted the attention of numerous developers and investors. However, new companies and entry-level developers have found it hard to dive into blockchain because it requires a high level of expertise. &lt;/p&gt;

&lt;p&gt;The name "Bunzz" is derived from the bun part of a hamburger, likening the development of a DApp to the process of making a hamburger. The concept of Bunzz is to provide a high-quality bun (backend) that allows users to deploy their original burgers (DApps) by selecting their favorite ingredients (smart contracts) and to use any ingredient as a product.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImjQ6Eew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emomk0zc6icborb5ekpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImjQ6Eew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emomk0zc6icborb5ekpz.png" alt="Image description" width="880" height="289"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The platform allows users to complete the entire process from DApp configuration to deployment using only a graphical user interface (GUI), thus greatly reducing the cost of learning blockchain and smart contracts to build a DApp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nW37NJhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmr3j54w1nrczreknvpx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nW37NJhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmr3j54w1nrczreknvpx.png" alt="Image description" width="880" height="364"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check the latest updates of Bunzz on &lt;a href="https://twitter.com/BunzzDev"&gt;Twitter&lt;/a&gt;, &lt;a href="https://discord.gg/DtXHMX76"&gt;Discord &lt;/a&gt;and our &lt;a href="http://www.bunzz.dev"&gt;Website&lt;/a&gt;. We offer continuous support to developers and any help needed by business owners, artists and any user throughout the process of creating your Dapps in Bunzz platform, simply jump in to our Discord and let us know your questions and what you intend to build.&lt;/p&gt;

&lt;p&gt;We are excited to have you all trying our top-notch platform and creating your own Dapps fast and easy, and maybe for some expanding and shifting your regular businesses and art works into blockchain allowing your clients and/or followers to buy your products/services using cryptocurrencies.&lt;/p&gt;

&lt;p&gt;Sign Up to Bunzz platform here: &lt;a href="https://app.bunzz.dev/signup"&gt;app.bunzz.dev/signup&lt;/a&gt; and start building your Dapps for free!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GquSupil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct6xko4oay21ft5ea2zz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GquSupil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct6xko4oay21ft5ea2zz.png" alt="Image description" width="300" height="44"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>dappdevelopment</category>
      <category>dapps</category>
      <category>nocodeplatform</category>
    </item>
    <item>
      <title>6 Amazing Algorithms For Detecting Faces In Images With Python Code References</title>
      <author>Yaniv Noema</author>
      <pubDate>Mon, 17 Jan 2022 15:30:45 +0000</pubDate>
      <link>https://dev.to/yanivnoema/6-amazing-algorithms-for-detecting-faces-in-images-with-python-code-references-50je</link>
      <guid>https://dev.to/yanivnoema/6-amazing-algorithms-for-detecting-faces-in-images-with-python-code-references-50je</guid>
      <description>&lt;p&gt;Did you know that there are many different algorithms for detecting faces in images?&lt;br&gt;
The most popular of these is the Viola-Jones algorithm, but it’s not perfect. There are plenty of other great options out there like the Haar Cascades and Fisherfaces which you can use to detect faces on your own computer or mobile device.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://ersanpreet.wordpress.com/2020/03/10/face-and-eyes-detection-with-viola-jones-along-with-python-code/"&gt;1. Viola-Jones Algorithm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This algorithm works very quickly and with a good degree of accuracy. It was created by Paul Viola and Michael Jones in 2001. The algorithm has been successfully applied to many different fields, including ATM machines that can detect a user’s face to authorize a transaction.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/python-haar-cascades-for-object-detection/"&gt;2. Haar Cascade Algorithm&lt;/a&gt;&lt;br&gt;
This algorithm was created by Paul Viola and Michael Jones in 2003. The algorithm works very quickly and is simple to apply, which makes it perfect for mobile devices.&lt;br&gt;
It is also very accurate and can be used to detect a wide variety of objects, not just faces.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://scipy-lectures.org/packages/scikit-learn/auto_examples/plot_eigenfaces.html"&gt;3. Eigenfaces&lt;/a&gt;&lt;br&gt;
This algorithm was created in 1992 by Feng Huang and Peter J. Rousseeuw in their paper “Finding Groups of Data-Points in Data-Space”. The algorithm is simple to apply and very accurate. However, it can be slow when applied to large images.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://iq.opengenus.org/face-recognition-using-fisherfaces/"&gt;4. Fisherfaces&lt;/a&gt;&lt;br&gt;
This algorithm was created in 1999 by Vladimir I. Ivkovic, Sebastian Thrun, and Berthold K. P. Horn. The algorithm is very accurate and fast, making it a good choice for applications that require real-time detection.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.analyticsvidhya.com/blog/2021/07/understanding-face-recognition-using-lbph-algorithm/"&gt;5. Local Binary Patterns Histogram Algorithm (LBPH)&lt;/a&gt;&lt;br&gt;
This algorithm was created by Matthew O’Toole, Andrea Vacchi, and Andrew Zisserman in their paper “A Local Geometric Model for Face Detection.”&lt;br&gt;
The algorithm is very accurate and can be applied to a wide variety of images. However, it is slow when applied to large images.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://docs.opencv.org/4.x/d1/d89/tutorial_py_orb.html"&gt;6. Oriented FAST and Rotated BRIEF (ORB)&lt;/a&gt;&lt;br&gt;
This algorithm was created by Piotr Dollár and Richard Szeliski in their paper “A Fast Approximate Energy Minimization Algorithm for the Simultaneous Detection and Pose Estimation of Human Faces.”&lt;br&gt;
This algorithm is very accurate but is slow when applied to large images.&lt;/p&gt;




&lt;p&gt;The algorithms described in this blog post will help you identify faces and other objects automatically. This is a great way to make your life easier by automating the tedious task of identifying things that are hard to see, such as people’s faces or parts of an animal’s body. You can also use these algorithms for more advanced tasks like detecting whether someone has emotions on their face (e.g., happy, angry) and even predicting how old they appear!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; provide you with an easy way to build image datasets.&lt;br&gt;
15K+ categories to choose from&lt;br&gt;
Consistent folders structure for easy parsing&lt;br&gt;
Advanced tools for dataset pre-processing: image format, data split, image size and data augmentation.&lt;/p&gt;

&lt;p&gt;👉Visit &lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; to learn more&lt;br&gt;
imagescv&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>python</category>
      <category>computerscience</category>
    </item>
  </channel>
</rss>
