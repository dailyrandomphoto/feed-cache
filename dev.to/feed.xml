<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>UX and the Invisible Design of things
</title>
      <author>Bryan Ferguson</author>
      <pubDate>Fri, 12 Nov 2021 13:52:19 +0000</pubDate>
      <link>https://dev.to/bryanalphasquad/ux-and-the-invisible-design-of-things-io5</link>
      <guid>https://dev.to/bryanalphasquad/ux-and-the-invisible-design-of-things-io5</guid>
      <description>&lt;p&gt;Hello everyone, &lt;br&gt;
Throughout the years, designers have focused on the importance of the invisibility of a design for a good user experience. The debate of invisible UX and design has been going on in design circles for quite a while. And ultimately, designers agree that a good design is dependent on the experience of users, when they’re actually interacting with that design. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-web-design-be-invisible"&gt;
  &lt;/a&gt;
  How can Web Design be Invisible?
&lt;/h2&gt;

&lt;p&gt;Web design has always been focused on user experience. Most designers have come to believe that good UX is invisible. When we say that a good UX is invisible, what we actually mean is that the experience, by design, should be smooth enough to make it look like that.&lt;br&gt;&lt;br&gt;
Designers put a lot of effort into elevating the user experience to an invisible degree, yet they misinterpret the meaning of truly invisible UX. Moreover, the design can be overwhelming for some users if they have to put in conscious effort to interact with it. &lt;br&gt;
Design should be focused on making things easier and simpler for end-users. The most primal yet effective approach is to try to assess the users’ behavior and make things more intuitive, so the users don’t get stuck in the complications of the design. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#design-in-everyday-life"&gt;
  &lt;/a&gt;
  Design in everyday life
&lt;/h2&gt;

&lt;p&gt;As I’ve said earlier, design is everywhere. We generally don't notice how good the design is while using everyday things. For example, we don’t spend our time thinking how good the chair is that we’re sitting in. &lt;br&gt;
We only come to realize the flaws of a design when it cannot perform the function that it’s supposed to. I read somewhere that a good design is like a refrigerator. Cause when it works, no one really notices. But when it doesn’t, it sure stinks.&lt;br&gt;
The concept of invisible design stems from everyday things in life. Where the elevation of user experience is the effortlessness of the user while they’re interacting with the design. &lt;br&gt;
So we can say that if you don’t notice how good is a good indication of the good design it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keep-things-simple"&gt;
  &lt;/a&gt;
  Keep things simple
&lt;/h2&gt;

&lt;p&gt;The approach to have truly invisible design is making users feel familiar with the design. In some cases, designers try to make new designs but in the end make things more complicated for users as a good design must always have a good experience. Moreover, users should not think about the effort that makes the design. Following the general concept of the design, designers can achieve the major goals of making things easier in their design.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intuitive-design"&gt;
  &lt;/a&gt;
  Intuitive design
&lt;/h2&gt;

&lt;p&gt;An easier design is liked by users over a design that requires their consideration. Intuitive design is when a user knows how a design works by intuition. A design is intuitive when a user’s  knowledge matches the target knowledge of the design. The major thing to consider here is that a design can only be intuitive for a user that already has basic knowledge about the design. Hence, through user research and conducting it to your target users. If you’re not sure about who is going to use your design, you can never make it intuitive subsequently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So we have now established that good design is invisible, but what really makes design invisible is the extent of the consistency in the overall experience that it provides to users. Making things easier and knowing your users’ behavior certainly is the key to building designs that are intuitive and flawless.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
    </item>
    <item>
      <title> Game Dev Digest — Issue #118 - What's New</title>
      <author>Game Dev Digest - The Newsletter On Unity Game Dev</author>
      <pubDate>Fri, 12 Nov 2021 13:49:53 +0000</pubDate>
      <link>https://dev.to/gamedevdigest/game-dev-digest-issue-118-whats-new-3pl4</link>
      <guid>https://dev.to/gamedevdigest/game-dev-digest-issue-118-whats-new-3pl4</guid>
      <description>&lt;h3&gt;
  &lt;a href="#issue-118-whats-new"&gt;
  &lt;/a&gt;
  Issue #118 - What's New
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://gamedevdigest.com/digests/issue-118-whats-new.html"&gt;GameDevDigest.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGLZfYYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-118.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGLZfYYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-118.png" alt="Issue #118 - What's New" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out some new features in Unity's latest version, plus lots more. Enjoy!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://blog.unity.com/games/feature-preview-whats-new-for-multiplayer-networking-in-unity"&gt;&lt;strong&gt;Feature preview: What's new for multiplayer networking in Unity&lt;/strong&gt;&lt;/a&gt;  - We’re happy to share that, as of October 21st, Unity creators have an expanded and supported feature set that accelerates the creation of small-scale cooperative games (like Animal Crossing). These new pre-release packages are now available and are compatible with Unity 2020.3 LTS, Unity 2021.2, and Unity 2022.1 beta. In addition to that, we’ve introduced two new Unity Gaming Services, Relay and Lobby, to keep your players connected for great multiplayer experiences.&lt;br&gt;
&lt;a href="https://blog.unity.com/games/feature-preview-whats-new-for-multiplayer-networking-in-unity"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://technology.riotgames.com/news/peeking-valorants-netcode"&gt;&lt;strong&gt;Peeking Into Valorant's Netcode&lt;/strong&gt;&lt;/a&gt;  - This article will first explore the design goals we had in mind when building VALORANT’s netcode, and then dive into technical challenges and how we addressed these to align with our design goals.&lt;br&gt;
&lt;a href="https://technology.riotgames.com/news/peeking-valorants-netcode"&gt;&lt;em&gt;technology.riotgames.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pavcreations.com/imitation-learning-for-2d-platformer-with-unity-ml-agents/"&gt;&lt;strong&gt;Imitation Learning for 2D platformer with Unity ML-Agents&lt;/strong&gt;&lt;/a&gt;  - Imitation learning, contrary to Reinforcement Learning, is based on the idea of showing the AI how to fulfill a given task. It’s no longer about asking the agent to find the best possible strategy on his own. As humans we can guide our systems throughout the optimization process of their policies. By doing so they can not only learn faster but also give better results in more complex case scenarios. In this article we are going to look into introducing the concept of Imitation Learning into the training regimes.&lt;br&gt;
&lt;a href="https://pavcreations.com/imitation-learning-for-2d-platformer-with-unity-ml-agents/"&gt;&lt;em&gt;pavcreations.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.unity.com/technology/experience-true-volumetric-clouds-with-hdrp-unity-20212"&gt;&lt;strong&gt;Experience true Volumetric Clouds with HDRP &amp;amp; Unity 2021.2&lt;/strong&gt;&lt;/a&gt;  - For decades, flat-painted skyboxes and HDRIs have been the go-to solutions for sky and cloud rendering. Now, thanks to the brand-new Volumetric Clouds in HDRP, you can populate your worlds with dynamic clouds. For the first iteration of this system, we focused on performance and ease of use, so you can create beautiful visuals in a couple of clicks for a low GPU cost.&lt;br&gt;
&lt;a href="https://blog.unity.com/technology/experience-true-volumetric-clouds-with-hdrp-unity-20212"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Ww12q6HsmJA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c9SbYBmY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/ee694d60f7405e47b4ccc0a87843fbe9.png" alt="The Art of Outer Wilds | Unity Creator Spotlight" width="480" height="360"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=Ww12q6HsmJA"&gt;&lt;strong&gt;The Art of Outer Wilds | Unity Creator Spotlight&lt;/strong&gt;&lt;/a&gt;  - Join Unity and Mobius Digital as we explore the solar systems of Outer Wilds one planet at a time! We have the game's art director and an environment / VFX artist break down the principle features of each planet. From giant sand columns, to spherical oceans and destructive supernovas!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=Ww12q6HsmJA"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=lT02gaTCtKY"&gt;&lt;strong&gt;Here's what's new in Unity 2021.2&lt;/strong&gt;&lt;/a&gt;  - Unity 2021.2 feature breakdown.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=lT02gaTCtKY"&gt;&lt;em&gt;Christopher Francis - Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=p48rNiJBFG0"&gt;&lt;strong&gt;New Lighting Features in Unity 2021.2: Volumetric Clouds, Lens Flare &amp;amp; Light Anchor | SIGGRAPH 2021&lt;/strong&gt;&lt;/a&gt;  - Get an overview of the brand new Volumetric Clouds system offered by Unity’s High Definition Render Pipeline (HDRP), along with some of the alternatives available for generating beautiful skies in Unity, including HDRI distortions and Cloud Layers. You’ll learn about the brand new Lens Flare system, which works with both the Universal Render Pipeline and HDRP and lets you easily simulate the characteristics of camera lenses, and the Light Anchor component, which allows artists to drastically reduce the time needed to light characters and products.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=p48rNiJBFG0"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=WY-mk-ZGAq8"&gt;&lt;strong&gt;Unity async / await: Coroutine's Hot Sister [C# &amp;amp; Unity]&lt;/strong&gt;&lt;/a&gt;  - The C# async / await workflow can simplify your code and give you more granular control over your game in Unity.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=WY-mk-ZGAq8"&gt;&lt;em&gt;Tarodev&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=kV06GiJgFhc"&gt;&lt;strong&gt;How to Program in Unity: Hierarchical State Machine Refactor [Built-In Character Controller #5]&lt;/strong&gt;&lt;/a&gt;  - Learn how to program a Hierarchical State Machine in Unity with this new video break down and tutorial!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=kV06GiJgFhc"&gt;&lt;em&gt;iHeartGameDev&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=icBN5Cr-kFk"&gt;&lt;strong&gt;Saving and Loading Tilemaps - Unity Tutorial&lt;/strong&gt;&lt;/a&gt;  - When you create a level for your game, Unity will save it automatically. But what if there will be changes during runtime or even better, the player creates a big part of the tilemap? Well then you need to save it on your own. But don't worry, creating a basic saving and loading system is quite easy.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=icBN5Cr-kFk"&gt;&lt;em&gt;Velvary&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assets"&gt;
  &lt;/a&gt;
  Assets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDC-EuSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/f5c434d6-9c9b-9294-dd4e-eac957d12129.jpg" alt="Unity Black Friday Sale" width="600" height="362"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;strong&gt;Unity Black Friday Sale&lt;/strong&gt;&lt;/a&gt;  - Unity's Black Friday sale will begin November 14 and continues through December 4. More than 500 of the very best and most popular assets on the Asset Store will be available for 50% off.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com/?lightningDeal=true&amp;amp;aid=1011l8NVc"&gt;Lightning Deals&lt;/a&gt;&lt;br&gt;
New for this sale are Lightning Deals! Each Lightning Deal asset will be available at a deep discount for a limited number of users. During Black Friday, there are 20 licenses available at 90% off, 50 at 80% off, and 400 at 70% off. Once those have been claimed, the asset will no longer be a Lightning Deal, and will remain 50% off through the end of the sale. The following 16 assets will be marked as &lt;a href="https://assetstore.unity.com/?lightningDeal=true&amp;amp;aid=1011l8NVc"&gt;Lightning Deals&lt;/a&gt; at the start of the sale on 11/14/21 21:00:00 PT.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/189093?aid=1011l8NVc"&gt;POLYGON Dungeon Realms - Low Poly 3D Art by Synty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/116514?aid=1011l8NVc"&gt;Animancer Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/52739?aid=1011l8NVc"&gt;CCG Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/53895?aid=1011l8NVc"&gt;Dungeon Architect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/192456?aid=1011l8NVc"&gt;Expanse - Volumetric Skies, Clouds, and Atmospheres in HDRP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/157625?aid=1011l8NVc"&gt;Fantastic City Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/196648?aid=1011l8NVc"&gt;Low Poly Terrain - Polaris 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/98823?aid=1011l8NVc"&gt;Match 3 Sweet Sugar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/180688?aid=1011l8NVc"&gt;Medieval Kingdom UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/38532?aid=1011l8NVc"&gt;Modern Loft Full Pack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/92579?aid=1011l8NVc"&gt;POLYGON Pirates - Low Poly 3D Art by Synty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/188953?aid=1011l8NVc"&gt;POP BLOCKS Puzzle Game Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/52837?aid=1011l8NVc"&gt;Pro Radar Builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/63772?aid=1011l8NVc"&gt;RPG Character Mecanim Animation Pack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/89126?aid=1011l8NVc"&gt;Total Music Collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://assetstore.unity.com/packages/package/id/126124?aid=1011l8NVc"&gt;UFE 2 SOURCE&lt;/a&gt;
&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt; &lt;strong&gt;Affiliate&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com/packages/tools/modeling/fluffy-grooming-tool-193828?aid=1011l8NVc"&gt;&lt;strong&gt;Fluffy Grooming Tool&lt;/strong&gt;&lt;/a&gt;  - Fluffy is a complete grooming solution fur and short hair in the Unity Editor. It also supports Alembic hair and fur created in third party applications.&lt;br&gt;
&lt;a href="https://assetstore.unity.com/packages/tools/modeling/fluffy-grooming-tool-193828?aid=1011l8NVc"&gt;&lt;em&gt;Daniel Zeller&lt;/em&gt;&lt;/a&gt; &lt;strong&gt;Affiliate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/williamrjackson/UnityArcRayCast?"&gt;&lt;strong&gt;Arc Raycast&lt;/strong&gt;&lt;/a&gt;  - Arc raycast utility using projectile formulas.&lt;br&gt;
&lt;a href="https://github.com/williamrjackson/UnityArcRayCast?"&gt;&lt;em&gt;williamrjackson&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/needle-tools/compilation-visualizer?"&gt;&lt;strong&gt;Compilation Visualizer for Unity&lt;/strong&gt;&lt;/a&gt;  - This tool visualizes the assembly compilation process in Unity3D. It hooks into the Editor-provided events and nicely draws them on a timeline. That's especially helpful when trying to optimize compile times and dependencies between assemblies.&lt;br&gt;
Besides showing a graphical view of compilation, selecting an assembly shows both dependencies and dependents of that assembly.&lt;br&gt;
&lt;a href="https://github.com/needle-tools/compilation-visualizer?"&gt;&lt;em&gt;needle-tools&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tom-weiland/RiptideNetworking?"&gt;&lt;strong&gt;RiptideNetworking - C# Networking Library&lt;/strong&gt;&lt;/a&gt;  - RUDP (Reliable UDP) networking solution built in C#, primarily intended for use in multiplayer games. Features an unreliable channel (regular UDP) as well as a reliable channel (UDP with loss detection). Works in Unity &amp;amp; console apps alike.&lt;br&gt;
&lt;a href="https://github.com/tom-weiland/RiptideNetworking?"&gt;&lt;em&gt;tom-weiland&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nicholas-maltbie/OpenKCC?"&gt;&lt;strong&gt;Open KCC&lt;/strong&gt;&lt;/a&gt;  - This project is a sample of the Open Kinematic Character Controller. A Kinematic Character Controller (KCC) provides a way to control a character avatar as a kinematic object that will interact with the environment.&lt;br&gt;
&lt;a href="https://github.com/nicholas-maltbie/OpenKCC?"&gt;&lt;em&gt;nicholas-maltbie&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sr4dev/Unity-SpriteAssist?"&gt;&lt;strong&gt;Unity-SpriteAssist&lt;/strong&gt;&lt;/a&gt;  - Unity-SpriteAssist is an Unity extension that assist Sprite's mesh creation more conveniently.&lt;br&gt;
Unity 2019.4 or later versions&lt;br&gt;
&lt;a href="https://github.com/sr4dev/Unity-SpriteAssist?"&gt;&lt;em&gt;sr4dev&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/brunomikoski/SpriteAuditor?"&gt;&lt;strong&gt;Sprite Auditor&lt;/strong&gt;&lt;/a&gt;  - Sprite auditor its the tool to give you the visibility when optimizing your atlases for smaller binary size or performance, allowing you see what atlas are reused between multiple scenes, and what sprites are in use from that atlas.&lt;br&gt;
&lt;a href="https://github.com/brunomikoski/SpriteAuditor?"&gt;&lt;em&gt;brunomikoski&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ruccho/Viewseprite?"&gt;&lt;strong&gt;Viewseprite&lt;/strong&gt;&lt;/a&gt;  - Utility to use Aseprite images as Unity Texture2D in realtime. You can view editing sprites on Unity with shading, lighting and post-processing.&lt;br&gt;
&lt;a href="https://github.com/ruccho/Viewseprite?"&gt;&lt;em&gt;ruccho&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/unity3d-jp/StreamingImageSequence?"&gt;&lt;strong&gt;StreamingImageSequence&lt;/strong&gt;&lt;/a&gt;  - Streaming Image Sequence is a package for playing sequential image sequences in Unity Timeline easily without making Unity 2D Sprites.&lt;br&gt;
&lt;a href="https://github.com/unity3d-jp/StreamingImageSequence?"&gt;&lt;em&gt;unity3d-jp&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Eldoir/Array2DEditor?"&gt;&lt;strong&gt;Array2DEditor&lt;/strong&gt;&lt;/a&gt;  - Use this if you want to deal with 2D arrays easily within the inspector of Unity.&lt;br&gt;
&lt;a href="https://github.com/Eldoir/Array2DEditor?"&gt;&lt;em&gt;Eldoir&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Demigiant/demilib?"&gt;&lt;strong&gt;DemiLib&lt;/strong&gt;&lt;/a&gt;  - Various utility libraries for Unity (alpha). Developed by Daniele Giardini (DOTween).&lt;br&gt;
&lt;a href="https://github.com/Demigiant/demilib?"&gt;&lt;em&gt;Demigiant&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/marijnz/NativePhysicsBVH?"&gt;&lt;strong&gt;NativePhysicsBVH&lt;/strong&gt;&lt;/a&gt;  - A Bounding Volume Hierarchy with basic physics queries for Unity DOTS.&lt;br&gt;
&lt;a href="https://github.com/marijnz/NativePhysicsBVH?"&gt;&lt;em&gt;marijnz&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dotsnav/dotsnav?utm_source=pocket_mylist"&gt;&lt;strong&gt;dotsnav&lt;/strong&gt;&lt;/a&gt;  - DotsNav is a fully dynamic and robust planar navmesh Unity package built on DOTS. It is fast enough to add and remove many obstacles each frame, supports agents of any size, and can be used through monobehaviours without prior knowledge of DOTS.&lt;br&gt;
&lt;a href="https://github.com/dotsnav/dotsnav?utm_source=pocket_mylist"&gt;&lt;em&gt;dotsnav&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/owenmoore/cube-coordinates?"&gt;&lt;strong&gt;CubeCoordinates&lt;/strong&gt;&lt;/a&gt;  - Unity package providing a cube coordinate system and methods for building hexagonal tile grids for interactive gameplay.&lt;br&gt;
&lt;a href="https://github.com/owenmoore/cube-coordinates?"&gt;&lt;em&gt;owenmoore&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/the_f_key/status/1458091756633923599"&gt;&lt;strong&gt;Light Cookies&lt;/strong&gt;&lt;/a&gt;  - Download these files and drag them into an #HDRP project, and get instantly more realistic lights adding these ies cookies to your lights.&lt;br&gt;
&lt;a href="https://twitter.com/the_f_key/status/1458091756633923599"&gt;&lt;em&gt;Mathieu @the_f_key&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/PhantasmicDev/4a91afa15c5c0786ec18b46566661bfa"&gt;&lt;strong&gt;PrefabOnlyAttribute.cs&lt;/strong&gt;&lt;/a&gt;  - An attribute that allows referencing only prefabs in the editor.&lt;br&gt;
&lt;a href="https://gist.github.com/PhantasmicDev/4a91afa15c5c0786ec18b46566661bfa"&gt;&lt;em&gt;PhantasmicDev&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spotlight"&gt;
  &lt;/a&gt;
  Spotlight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://store.steampowered.com/app/1077510/Breaking_Box/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dqaG2rEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/36cde6368b01bea02f8cc1689dde9ff7.png" alt="Breaking Box" width="640" height="360"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://store.steampowered.com/app/1077510/Breaking_Box/"&gt;&lt;strong&gt;Breaking Box&lt;/strong&gt;&lt;/a&gt;  - Breaking Box is a 3D multiplayer game with a level editor in-game. You can enjoy the competition with friends or create your own levels! &lt;br&gt;
&lt;em&gt;[Play the demo on &lt;a href="https://store.steampowered.com/app/1077510/Breaking_Box/"&gt;Steam&lt;/a&gt;, support the upcoming &lt;a href="https://www.kickstarter.com/projects/dotoyou/breaking-box-create-your-own-3d-platformer-stages"&gt;Kickstarter&lt;/a&gt;, and follow along on &lt;a href="https://twitter.com/BreakingBoxGame"&gt;Twitter&lt;/a&gt;]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://store.steampowered.com/app/1077510/Breaking_Box/"&gt;&lt;em&gt;Dotoyou Games&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You can subscribe to the free weekly newsletter on &lt;a href="https://gamedevdigest.com"&gt;GameDevDigest.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>unity</category>
      <category>csharp</category>
      <category>news</category>
    </item>
    <item>
      <title>Summary of VGG paper</title>
      <author>Hitansh</author>
      <pubDate>Fri, 12 Nov 2021 13:34:44 +0000</pubDate>
      <link>https://dev.to/hitansh159/summary-of-vgg-paper-2n16</link>
      <guid>https://dev.to/hitansh159/summary-of-vgg-paper-2n16</guid>
      <description>&lt;h2&gt;
  &lt;a href="#title"&gt;
  &lt;/a&gt;
  Title
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Very deep convolutional networks for large scale image recognition&lt;/li&gt;
&lt;li&gt;result:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Large Scale image recognition&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Method

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Very deep convolution&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Why / aim:
To investigate the effect of the depth on accuracy of recognition &lt;/li&gt;
&lt;li&gt;Description / method:
By increasing the depth using as architecture with very small (3*3) convolution filter 
increasing depth upto 16-19 weight layers&lt;/li&gt;
&lt;li&gt;Result:
model that genralize well on other datasets as well
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Background:
Convolution networks have seen great success in large scale image and video recognition
This is possible due to:

&lt;ol&gt;
&lt;li&gt;Large public image datasets&lt;/li&gt;
&lt;li&gt;high performance systems&lt;/li&gt;
&lt;li&gt;large scale distributed clusters&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Intention:
This paper address an important aspect of ConvNet architecture design i.e. &lt;code&gt;depth&lt;/code&gt;.
In this paper, authors keeps other aspects constant while steadily increasing depth of the network by adding 3*3 filter convolution layers
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Dataset&lt;br&gt;
ILSVRC-2012 dataset &lt;br&gt;
It includes 1000 classes which are divied as following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Training &lt;code&gt;1.3 Million&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Calidation &lt;code&gt;50 Thousand&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;testing &lt;code&gt;100 Thousand&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Perfomance Evalution is done in 2 ways &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Top - 1 / multi class classification error:
 the problem of classifying instances into one of three or more classes&lt;/li&gt;
&lt;li&gt;Top - 5:
The proportion of images such that ground truth category is outside the top 5 predicted categories &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Preprocessing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;isotropically rescalling (i.e. keeping image ratio same while scalling) to 224 &lt;/li&gt;
&lt;li&gt;subtracting mean RGB value&lt;/li&gt;
&lt;li&gt;Random cropping one crop per image per SGD iteration&lt;/li&gt;
&lt;li&gt;Random horizontal flips&lt;/li&gt;
&lt;li&gt;Random RGB shift &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#model-architecture"&gt;
  &lt;/a&gt;
  Model Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ah-geGGN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/175bze1jb2eurto111wl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ah-geGGN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/175bze1jb2eurto111wl.png" alt="VGG architecture" width="475" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Input &lt;code&gt;fixed size RGB image of 224*224 px&lt;/code&gt;.followed by &lt;code&gt;preproccessing steps&lt;/code&gt;. &lt;br&gt;
Architecture is stack of convolution layers with filters of small&lt;code&gt;receptive field: 3*3 or 1*1&lt;/code&gt; in some cases&lt;br&gt;
1*1 convolution layers can be treated as linear transformation followed by non-linear transformation.&lt;br&gt;
&lt;code&gt;Stride is fixed to 1 px&lt;/code&gt; . Padding is such that size is maintained.&lt;br&gt;
&lt;code&gt;pooling is done by max pooling layers with 2*2 window and stride 2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After this &lt;code&gt;3 FC layers&lt;/code&gt; are used. &lt;br&gt;
&lt;code&gt;2 have 4096 channels&lt;/code&gt; and &lt;code&gt;last one is 1000 way soft-max layer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;All hidden layers used &lt;code&gt;ReLU&lt;/code&gt;.&lt;br&gt;
also, some models used &lt;code&gt;Local response Normalization&lt;/code&gt; but it did not improve the performance while increasing memory consumption and computation time. &lt;/p&gt;

&lt;p&gt;There are 6 (A-E, A-LRN) models based on this genaric design&lt;br&gt;&lt;br&gt;
A-E 5 models differ only in depth from 11 to 19 layers.&lt;br&gt;
With width of convolution layers starting from 64 to 512 increasing in factor of 2.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#input-and-output"&gt;
  &lt;/a&gt;
  Input and Output
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Input:&lt;code&gt;fixed size 224*224 RGB image&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Output: &lt;code&gt;class&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#new-techniques"&gt;
  &lt;/a&gt;
  New techniques
&lt;/h2&gt;

&lt;p&gt;Important part of paper is, &lt;code&gt;why author selected 3*3 window field ?&lt;/code&gt;&lt;br&gt;
Explanation by author: &lt;br&gt;
2 conv layer of window 3 * 3 =  1 window of 5 * 5&lt;br&gt;
3 conv layer of window 3 * 3 = 1 window of 7 * 7&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;using 3 convo layer means we get to involve 3  non-linear rectification layers which makes decision making more discriminate.&lt;/li&gt;
&lt;li&gt;It decreases number of parameters&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Lets assume there are C number of channels then,&lt;br&gt;
3 conv layers with window of 3 * 3  = 3(3^2 * C^2 ) = 27C^2&lt;br&gt;
1 Conv layer with window of 7 * 7 = 7^2 * c^2 = 49C^2&lt;/p&gt;

&lt;p&gt;One can also use 1 * 1 window to increase non-linearity of decision function. &lt;br&gt;
&lt;code&gt;This small window technique works best if net is deep.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#loss"&gt;
  &lt;/a&gt;
  Loss
&lt;/h2&gt;

&lt;p&gt;Input image is isotropically rescaled to a pre-defined smallest image side.&lt;br&gt;
The fully connected layers are first converted to convolution layers. First FC to a 7 * 7 conv layers, last two to 1 * 1 conv layers&lt;/p&gt;

&lt;p&gt;Now, on perdition we get class score map i.e. we get confidence for each class.&lt;br&gt;
to obtain fixed size vector class score map is passed through sum-pooled&lt;br&gt;
Final score is average of score from original image and its horizontal flip.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Multi crop was drop as it doesn't justify the computation time required for the accuracy growth it showed.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#model-training"&gt;
  &lt;/a&gt;
  Model training
&lt;/h2&gt;

&lt;p&gt;technique: &lt;code&gt;mini batch gradient descent&lt;/code&gt;&lt;br&gt;
batch size: &lt;code&gt;256&lt;/code&gt;&lt;br&gt;
optimizer: &lt;code&gt;multinomial logistic regression&lt;/code&gt;&lt;br&gt;
momentum: &lt;code&gt;0.9&lt;/code&gt;&lt;br&gt;
regularization: &lt;code&gt;L2&lt;/code&gt; &lt;br&gt;
regularization multiplier: &lt;code&gt;5*10^-4&lt;/code&gt;&lt;br&gt;
Dropout: &lt;code&gt;for first 2 FC 0.5&lt;/code&gt;&lt;br&gt;
learning rate: &lt;code&gt;10^-2 decreased by factor of 10 when validation accuracy stopped improving&lt;/code&gt; &lt;br&gt;
(learning rate was totally decreased 3 times)&lt;br&gt;
&lt;code&gt;learning stopped after 370k iterations 74 epochs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Model converge in less epochs :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Implicit regularization imposed by greater depth and smaller filter size&lt;/li&gt;
&lt;li&gt;pre-initalization of certain layer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Initalize weights without pre-training by using &lt;code&gt;Xavier weights&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Two training settings were used&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;fixed scale &lt;/li&gt;
&lt;li&gt;Multi scale &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Two fix size were considered S = 256, 384 &lt;br&gt;
First network was trained with size of 256.&lt;br&gt;
Then same weight are used to initalize network for size of 384. and learning rate was set to 10^-3.   &lt;/p&gt;

&lt;p&gt;Second approach, &lt;br&gt;
set input image size to S where S from certain range [256, 512]&lt;br&gt;
this can also be seen as training set augmentation by scale jittering. Where a single model is trained on recogniizing object over a wide range of scales. &lt;br&gt;
This approach was speed up by fine tuning weights from first approach&lt;/p&gt;

&lt;p&gt;This was implemented with &lt;code&gt;c++ Caffe toolbox&lt;/code&gt; with a &lt;code&gt;number of significant modifications&lt;/code&gt;.&lt;br&gt;
To make use of multiple GPUs.&lt;br&gt;
Images were trained in &lt;code&gt;batches parallelly in GPUs&lt;/code&gt;.&lt;br&gt;
Results from each GPUs was &lt;code&gt;averaged&lt;/code&gt; to &lt;code&gt;obtained graident for full batch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;4 &lt;code&gt;NVIDIA Titan BLACK GPUs&lt;/code&gt; were used to give &lt;code&gt;3.75 times fast training then then single GPU&lt;/code&gt;. &lt;br&gt;
It took &lt;code&gt;2-3 weeks for single net to train&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QtbtKLRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40286xlcifgjhgcdsfze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QtbtKLRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40286xlcifgjhgcdsfze.png" alt="Result table" width="880" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  summary
&lt;/h2&gt;

&lt;p&gt;In very deep convolution networks for large scale image classification depth is beneficial for the classification accuracy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-data-and-code-available"&gt;
  &lt;/a&gt;
  Check data and code available
&lt;/h2&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Dataset: https://image-net.org/challenges/LSVRC/index.php 
Code: 
    By author: https://worksheets.codalab.org/worksheets/0xe2ac460eee7443438d5ab9f43824a819
    Tensorflow implementation: https://github.com/tensorflow/models/blob/master/research/slim/nets/vgg.py 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>ai</category>
      <category>deeplearning</category>
    </item>
    <item>
      <title>MailPoet 為 WordPress 量身設計的發信服務</title>
      <author>Leon</author>
      <pubDate>Fri, 12 Nov 2021 13:29:46 +0000</pubDate>
      <link>https://dev.to/leon0824/mailpoet-wei-wordpress-liang-shen-she-ji-de-fa-xin-fu-wu-54me</link>
      <guid>https://dev.to/leon0824/mailpoet-wei-wordpress-liang-shen-she-ji-de-fa-xin-fu-wu-54me</guid>
      <description>&lt;p&gt;對一個 WordPress 網站來說，寄信可能不會是重要的功能，但如果是加掛了 WooCommerce 的站台，寄信就顯得相當重要，現行對消費者購物前後的系統通知信都還是以 email 做為溝通管道，如果還有發行銷信（電子報）的需求，那 email 更是應該被著重考慮的要點之一。&lt;/p&gt;

&lt;p&gt;在介紹 &lt;a href="https://www.mailpoet.com"&gt;MailPoet&lt;/a&gt; 前，先介紹一下 WordPress 原生的發信機制。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wordpress-%E5%8E%9F%E5%A7%8B%E7%9A%84%E7%99%BC%E4%BF%A1%E6%A9%9F%E5%88%B6"&gt;
  &lt;/a&gt;
  WordPress 原始的發信機制
&lt;/h2&gt;

&lt;p&gt;在沒有任何外掛輔助下，WordPress 會呼叫底層 PHP 的發信機制，但這個發信機制相當原始，誕生於垃圾郵件尚未氾濫的時代，不支援後來發展出的 &lt;a href="https://zh.m.wikipedia.org/zh-tw/%E5%8F%91%E4%BB%B6%E4%BA%BA%E7%AD%96%E7%95%A5%E6%A1%86%E6%9E%B6"&gt;SPF&lt;/a&gt; 認證機制，所以很容易被別的郵件主機視為垃圾郵件，另一方面對於電子報相關的需求來說，也缺少了對開信率、點閱率追蹤的能力，這樣原始陽春的發信機制，對現在的發信需求來說完全是不可用的，而萬惡的 WordPress 的開發商 &lt;a href="https://automattic.com/"&gt;Automattic&lt;/a&gt; 不知道是仗著社群龐大還是什麼原因，這十幾年來竟然完全沒想過把它改善，完全擺爛放生，也真的是幸好 WordPress 的社群龐大，所以我們還可以依賴 MailPoet 這類的服務來做為發信之用。&lt;/p&gt;

&lt;p&gt;岔題講一下我心中理想的生態系治理模式應該是像蘋果，提供開發者從上架到收款一條龍的服務，並且嚴審上架 app，也要求開發者必須跟上新版的 SDK 或 API，而不是像 Automattic 這樣擺爛放生不管，縱容有安全風險或粗製濫造的外掛隨意上架。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E7%8F%BE%E4%BB%A3%E5%8C%96%E7%9A%84%E7%99%BC%E4%BF%A1%E6%A9%9F%E5%88%B6"&gt;
  &lt;/a&gt;
  現代化的發信機制
&lt;/h2&gt;

&lt;p&gt;回頭講發信，市場上發送系統信或行銷信的服務有很多，例如 MailChimp、SendGrid、台灣的電子豹等，這些現代化的發信服務在系統面的共同特色都是採取 API 串接發信，而非原始的 SMTP 發信協議，透過 API 對發信機制的封裝，讓我們可以對發信這件事情做更多可程式化的操作，做出更多附加服務，這是原始 SMTP 難以做到的。&lt;/p&gt;

&lt;p&gt;前面提到的發信服務雖然都有 API，不過再回頭考慮與 WordPress 的整合度，會發現並非每間廠商都有為 WordPress 提供原生的外掛，MailPoet 是少數幾間有為 WordPress 提供原生外掛，以及也整合了 WooCommerce 系統信的廠商之一。下面開始紀錄 MailPoet 的一些特色和操作事項。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mailpoet"&gt;
  &lt;/a&gt;
  MailPoet
&lt;/h2&gt;

&lt;p&gt;MailPoet 是個與 WordPress / WooCommerce 深度整合的發信服務，包括系統信的發送以及行銷信（電子報）的發送，不論是系統信或行銷信，都可以透過 MailPoet 的 WordPress 外掛在 WordPress 內編輯信件外觀與內容，也可以在 MailPoet 外掛內追蹤信件的寄達率、開信率、點擊率等數據，MailPoet 應該是市面上與 WordPress 整合的最徹底的發信服務了，也因此，除了開帳號、認證網域、繳費等底層功能是在 MailPoet 網站操作外，幾乎所有的主要發信相關的功能都是直接在 MailPoet 外掛內操作的。&lt;/p&gt;

&lt;p&gt;下面是一些操作紀錄，但不會包括太基礎的開立帳號或外掛安裝等操作。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E8%A8%AD%E5%AE%9A%E7%99%BC%E4%BF%A1%E4%BF%A1%E7%AE%B1"&gt;
  &lt;/a&gt;
  設定發信信箱
&lt;/h3&gt;

&lt;p&gt;像 MailPoet 這種發信服務通常沒有收信功能，頂多幫你把來信轉寄到你的另一個信箱，並且利用發信服務也通常都要設定寄件信箱，讓你的客戶看到信時能正確的從「寄件人」認出你的信箱。&lt;/p&gt;

&lt;p&gt;在 MailPoet 設定寄件信箱是需要認證的，登入後在「My authorized Emails」頁填入要做為「寄件人」的信箱：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HqNwhMYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0hvzn5yccr3d1o8pqz1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HqNwhMYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0hvzn5yccr3d1o8pqz1.png" alt="My authorized Emails" width="880" height="413"&gt;&lt;/a&gt;&lt;br&gt;
接著至該信箱收取 MailPoet 的認證信，點擊認證連結確認你真的擁有該信箱即可，寄件人信箱認證後，在 MailPoet 的 WordPress 外掛內的「Settings」頁再把該信箱填入「 Default sender」才算設定完整。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WmhIwRYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6itj7qacrnk0mtxbhovn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WmhIwRYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6itj7qacrnk0mtxbhovn.png" alt="MailPoet Settings" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E8%A8%AD%E5%AE%9A%E7%B6%B2%E5%9F%9F"&gt;
  &lt;/a&gt;
  設定網域
&lt;/h3&gt;

&lt;p&gt;前面提到，在垃圾郵件氾濫後，就有人提出 SPF 機制來對發信人作網域認證，來自 SPF 認證的網域的信件較不會被判斷成垃圾信而直接被丟進垃圾信箱，我們常用的個人信箱，像是 Gmail 等，也都有做 SPF 認證，但如果是要在自己的網域透過 MailPoet 做發信，那 MailPoet 也可以協助我們對自有的網域做 SPF 認證，具體的操作其實很簡單，把 MailPoet 提供的認證碼填入你的 DNS 紀錄即可，本人慣用的 DNS 代管是 Cloudflare，其他 DNS 代管服務就自行舉一反三吧！&lt;/p&gt;

&lt;p&gt;先到登入 MailPoet 網站，到「My Sender Domains」填入自己的網域：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O4Or52ER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wleixhxdad1dfq3qtyys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O4Or52ER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wleixhxdad1dfq3qtyys.png" alt="My Sender Domains" width="880" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;接著 MailPoet 就會提示要建立的 DNS 紀錄，把那些 DNS 紀錄鍵入 DNS 即可，下面是 Cloudflare 的例子：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ok8txuu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr13nx3c3fl6so722ety.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ok8txuu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr13nx3c3fl6so722ety.png" alt="Cloudflare DNS" width="880" height="511"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;可以看到我們在這邊建了兩組 CNAME 與一組 TXT 的紀錄，在 Cloudflare 要注意的是不能啟用 Cloudflare proxy，否則會認證失敗。&lt;/p&gt;

&lt;p&gt;DNS 紀錄建好後，回到 MailPoet 驗證網域，如果 DNS 紀錄有被確實存在，應該就會驗證成功，具體的效果就是從 MailPoet 寄出的信會比較不容易被判斷成垃圾信而被無情的丟入垃圾信箱。&lt;/p&gt;

&lt;p&gt;提醒一點，設定網域這邊，也是要搭配寄件人信箱才會有用，以上面的例子來說， 我對 o.com.tw 認證了 SPF，那麼寄件信箱也必須是 &lt;a href="mailto:xxx@o.com.tw"&gt;xxx@o.com.tw&lt;/a&gt;，這整組 SPF 機制才會達到「不被當成垃圾信」的效果，如果辛苦認證了網域，寄件信箱卻還是設成 &lt;a href="mailto:e@gmail.com"&gt;e@gmail.com&lt;/a&gt; 的話，那那個網域認證就是白做的，因為收信方的郵件服務根本就不會去查 o.com.tw 的 SPF 認證狀態，因為信件是來自 gmail.com，收信方的郵件服務只會去查 gmail.com 的 SPF 認證狀態。&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>mailpoet</category>
    </item>
    <item>
      <title>I got a CORS error, now what?</title>
      <author>Warren Parad</author>
      <pubDate>Fri, 12 Nov 2021 13:26:55 +0000</pubDate>
      <link>https://dev.to/wparad/i-got-a-cors-error-now-what-hpb</link>
      <guid>https://dev.to/wparad/i-got-a-cors-error-now-what-hpb</guid>
      <description>&lt;p&gt;I got a CORS error, of course you did, but there isn't just one kind of CORS error, there are many. To solve a CORS error, you need to start debugging. And that begins with understanding a bit about the process.&lt;/p&gt;

&lt;p&gt;CORS or Cross-Origin Resource Sharing, means that your website is running on a different domain than the API you are calling. Seeing the error means that the response from the API is incorrect. If you don't control the API that is returning data, you can't fix the problem yourself, end of story (Note: there is one rare case where you can, but I'm not going to go into that at the moment.)&lt;/p&gt;

&lt;p&gt;Further to investigate any and all CORS related issues, you MUST use a terminal, you cannot fix CORS errors by using a browser. The reason is when a CORS error appears, your browser immediately discards the error data to prevent it from being used maliciously. Terminal investigation is done by navigating to the &lt;strong&gt;Network Inspector&lt;/strong&gt; tab and right-click the failing request, and copy it to &lt;code&gt;cURL&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cu2qOkEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69p63rpmfoalpjw3nqgu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cu2qOkEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69p63rpmfoalpjw3nqgu.png" alt="How to copy curl command" width="678" height="975"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then run the &lt;code&gt;cURL&lt;/code&gt; in your terminal of choice. This terminal MUST not be windows CMD. If you don't have another terminal, you can try the &lt;a href="https://www.test-cors.org/"&gt;Online CORS tester&lt;/a&gt;. But because this isn't the same request as the one your browser sent, you likely won't get a conclusive answer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-cors-flow-preflight-failures"&gt;
  &lt;/a&gt;
  The CORS flow - Preflight failures
&lt;/h2&gt;

&lt;p&gt;There are two different requests that can fail:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OPTIONS - also known as preflight&lt;/li&gt;
&lt;li&gt;METHOD - GET/POST/etc.. the real request&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The preflight is optional and your browser may or may not send it. It is an &lt;code&gt;OPTIONS&lt;/code&gt; Method request, it needs explicit configuration. If the preflight fails, it is usually due to either a misconfiguration of your infrastructure, and so it is possible that you did not correctly configure it correctly to handle CORS. OR You did configure it correctly, but your code isn't designed to handle an OPTIONS request. Here are some things that are important about an OPTIONS request:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is no body - OPTIONS requests do not contain a body, end of story, so if your code depends on it, that's your bug&lt;/li&gt;
&lt;li&gt;There is no Authorization header - The headers are completely different.&lt;/li&gt;
&lt;li&gt;You must return &lt;code&gt;access-control-allow-headers&lt;/code&gt;, &lt;code&gt;access-control-allow-methods&lt;/code&gt;, and &lt;code&gt;access-control-allow-origin&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-actual-request"&gt;
  &lt;/a&gt;
  The actual request
&lt;/h2&gt;

&lt;p&gt;After a successful preflight response, the browser will make the second request to the service. When this due to a CORS error it is because the response back does not contain the &lt;code&gt;access-control-allow-origin&lt;/code&gt; header. Yes ALSO THIS RESPONSE requires the &lt;code&gt;access-control-allow-origin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the code "looks right", but the response to the website is a 4XX or 5XX, then it is likely your "happy-path" works correctly, but the error-path does not. My recommendation is to add &lt;code&gt;access-control-allow-origin: *&lt;/code&gt; to all responses, including the error ones, so that the real response can be passed to the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-do-i-use-the-wildcard-raw-endraw-"&gt;
  &lt;/a&gt;
  When do I use the wildcard &lt;code&gt;*&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;I've suggested multiple times in this article to use the &lt;code&gt;*&lt;/code&gt;. This is usually the correct solution, and you actually don't have to worry about CORS at all. Just set this as &lt;code&gt;*&lt;/code&gt;, pat yourself on the back, and move on.&lt;/p&gt;

&lt;p&gt;If you have any dependence on Cookies, which is usually wrong, stop doing that. If you really really need them, then you'll need start thinking about what the CORS response should be. But in reality you are better off stop using cookies, then you won't have to worry about any nasty security vulnerability, and all your CORS problems go away.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-i-really-really-need-cookies"&gt;
  &lt;/a&gt;
  But I really really need cookies
&lt;/h2&gt;

&lt;p&gt;The only time cookies are going to be valuable is you want to track your users. This only makes sense to two situations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are a malicious website advertiser&lt;/li&gt;
&lt;li&gt;You are building Auth as a service&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the first case, I'm sorry this post isn't for you, I'm not going to help malicious advertisers. And in the second case, we wrote &lt;a href="https://authress.io"&gt;Authress&lt;/a&gt; to do this, so you don't have to. And cookies work out of the box there :)&lt;/p&gt;

</description>
      <category>cors</category>
      <category>http</category>
      <category>website</category>
    </item>
    <item>
      <title>Vscode : Android Full Support</title>
      <author>anto</author>
      <pubDate>Fri, 12 Nov 2021 13:24:43 +0000</pubDate>
      <link>https://dev.to/antooooony/vscode-android-full-support-576i</link>
      <guid>https://dev.to/antooooony/vscode-android-full-support-576i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#just-imagine"&gt;
  &lt;/a&gt;
  Just imagine
&lt;/h2&gt;

&lt;p&gt;You need to make a 1 billion application and you need to use native feature. &lt;br&gt;
&lt;strong&gt;Unfortunately&lt;/strong&gt; you will have to pass by Android Studio.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ct4JeD-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.reactiongifs.us/wp-content/uploads/2014/01/hose_to_head_king_of_the_hill.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ct4JeD-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.reactiongifs.us/wp-content/uploads/2014/01/hose_to_head_king_of_the_hill.gif" alt="suicide" width="500" height="384"&gt;&lt;/a&gt;&lt;br&gt;
There is a solution (and it is not suicide🥲).&lt;br&gt;
You don't need to use the horrible UX of Android Studio.&lt;br&gt;
You don't need to have a 16Gb RAM computer.&lt;br&gt;
Look at this ⬇️&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ieQ1aJos--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/dgdbFSR/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ieQ1aJos--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/dgdbFSR/image.png" alt="androisstudioconsumption" width="638" height="36"&gt;&lt;/a&gt; &lt;br&gt;
10Mo/s of IO operation when idle ...WTF 🤷🏿‍♀️&lt;br&gt;
The solution is to add to vscode the missing features to do android development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-is-real"&gt;
  &lt;/a&gt;
  It is real
&lt;/h2&gt;

&lt;p&gt;There is an extension that does this :&lt;br&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=AntonyDalmiere.android-support"&gt;https://marketplace.visualstudio.com/items?itemName=AntonyDalmiere.android-support&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0hFdvFkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/dJQ2zmY/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0hFdvFkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/dJQ2zmY/image.png" alt="extension" width="640" height="142"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now it's up to you to make the next Instagram🧑🏿‍💻&lt;/p&gt;

&lt;p&gt;Thank you for reading. If you enjoyed the article please feel free to like and share.🙏🏿&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>android</category>
      <category>java</category>
      <category>kotlin</category>
    </item>
    <item>
      <title>Symfony Station Communique - 12 November 2021. A Look at Symfony and PHP News.</title>
      <author>Reuben Walker, Jr.</author>
      <pubDate>Fri, 12 Nov 2021 13:15:30 +0000</pubDate>
      <link>https://dev.to/reubenwalker64/symfony-station-communique-12-november-2021-a-look-at-symfony-and-php-news-1fcc</link>
      <guid>https://dev.to/reubenwalker64/symfony-station-communique-12-november-2021-a-look-at-symfony-and-php-news-1fcc</guid>
      <description>&lt;p&gt;This post originally appeared on &lt;a href="https://symfonystation.com/Communiques"&gt;Symfony Station&lt;/a&gt;. Vist the link to see past communiques and sign up to receive future ones (a day early) directly in your inbox.&lt;/p&gt;

&lt;p&gt;Welcome to this week's Symfony Station Communique. It’s your weekly review of the most valuable and essential news in the Symfony and PHP development communities. This week it’s pretty extensive, so take your time and peruse it for the most valuable items.&lt;/p&gt;

&lt;p&gt;Thanks to Javier Eguiluz and Symfony for sharing &lt;a href="https://symfonystation.com/Symfony-Station-Communique-5-November-2021"&gt;our last communique&lt;/a&gt; in their &lt;a href="https://symfony.com/blog/a-week-of-symfony-775-1-7-november-2021"&gt;Week of Symfony&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please note all links will open in a new browser window. &lt;strong&gt;My opinions, if I present any, will be in bold.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XH6z9_82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/symfony-logo-no-text.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XH6z9_82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/symfony-logo-no-text.png" alt="Symfony Logo" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#symfony"&gt;
  &lt;/a&gt;
  Symfony
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;As always, we will start with the official news from Symfony.&lt;/p&gt;

&lt;p&gt;Highlight -&amp;gt; “This week, Symfony 5.4.0-BETA1 and 6.0.0-BETA1 versions were published in preparation for their final release at the end of November 2021. We also published the first articles about the new features of Symfony 5.4. Lastly, we announced more speakers for the SymfonyWorld Online 2021 Winter Edition conference (December 9-10, 2021). ”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/a-week-of-symfony-775-1-7-november-2021"&gt;A Week of Symfony #775 (1-7 November 2021)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Javier has a series of posts on what’s new in Symfony 5.4.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-nested-validation-attributes"&gt;New in Symfony 5.4: Nested Validation Attributes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-controller-changes"&gt;New in Symfony 5.4: Controller Changes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-route-aliasing"&gt;New in Symfony 5.4: Route Aliasing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-php-enumerations-support"&gt;New in Symfony 5.4: PHP Enumerations Support&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Would you like to put your brand ahead of the Symfony community? Make your Corporate social responsibility (CSR) policy a reality? The Fast-Track book for version 6 and SymfonyWorld Online conference next month are still open for sponsorship!&lt;/p&gt;

&lt;p&gt;But in this blog post, Nicolas Grekas makes a specific call to SaaS providers for whom Symfony has a bridge (aka plugins).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/calling-saas-providers-to-back-their-symfony-bridge"&gt;Calling SaaS providers to back their Symfony bridge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SensioLabs, the company behind Symfony, has some great resources for getting the best out of your projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sensiolabs.com/en/ressources/white_papers.html"&gt;Read / Watch / Download / Enjoy our free resources&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#featured-item"&gt;
  &lt;/a&gt;
  Featured Item
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;We continue to highlight the most significant post of the week.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Makeoverarena says: “Although there are many PHP frameworks, Laravel and Symfony are the most popular. Hence, there has been a constant rivalry between both. Especially on which one to choose in the coming year (2022). So, if you are in the dark about the one to choose, it isn’t hard. Just pay attention to this article as its main purpose is to explain the best out of both.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.makeoverarena.com/laravel-vs-symfony-which-php-framework-to-choose-in-2022/"&gt;Laravel Vs. Symfony – Which PHP Framework to Choose in 2022?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is another comparison.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://morioh.com/p/b936f5f38157"&gt;How Laravel Differs From Symfony?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Via SymfonyCasts: “If your app checks passwords, implementing the new PasswordAuthenticatedUserInterface is for you! How do you &lt;em&gt;check&lt;/em&gt; if the submitted password is valid from inside an authenticator? You don't! Instead, you attach the new PasswordCredentials object to your Passport... and let Symfony do the heavy lifting for you!” &lt;/p&gt;

&lt;p&gt;&lt;a href="https://5hy9x.r.ag.d.sendibm3.com/mk/mr/-PJZNPeWCm8RwxpAyC1VwkDA5Ci84SNwNbXKUrgjSvME-zdsj1rIDTa8HnPRkZSqn60EYCf_bdSkyGjRZ-XgsMmrWyfv5xi-434pkDhNhLX1i4TaR5MWBa9u1yUd_fwzv1bZawexaQ"&gt;This week on SymfonyCasts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wouter Carabain, who provides some helpful info on his new blog, continues a new series of posts looking at pairing Symfony with API Platform. Here’s the third one and a follow-up of the articles we shared in earlier communiques.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://woutercarabain.com/webdevelopment/how-to-create-a-simple-application-using-symfony-and-react-native-part-3/"&gt;How to create a simple application using Symfony and React Native – Part 3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anders Björkland has a second article on Bolt CMS. The previous one dealt with content creation and editing. This one looks at how to implement a design for it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/andersbjorkland/bolt-cms-for-designers-1cmk"&gt;Bolt CMS for designers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Drupal users, Drupal needs your input. The decision was made to create a "test" branch with Symfony 5.4. The question now is how are they going to do that. A couple of choices must be made. Tell them what you think!&lt;/p&gt;

&lt;p&gt;[POLICY] &lt;a href="https://www.drupal.org/project/drupal/issues/3248106"&gt;Release Symfony 5.4 with which Drupal branch and how much support will it get?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On a similar note Drupal 10’s rollout is dictated by Symfony 6’s.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://imagexmedia.com/blog/2021/11/what-expect-drupal-10-and-how-deal-drupal-8s-end-life/?utm_source=drupal-newsletter&amp;amp;utm_medium=email&amp;amp;utm_campaign=drupal-newsletter-20211111"&gt;What To Expect from Drupal 10, and How to Deal With Drupal 8’s End of Life&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The API Platform Conference made their presentations available for replay. Several caught my eye.&lt;/p&gt;

&lt;p&gt;In French. &lt;a href="https://www.youtube.com/watch?v=aB6lKL_SvYQ"&gt;Why Symfony and PHP are still in the game for any project.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=mYwL8snWvTs"&gt;A suitable serialization with API Platform and Symfony&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In English. &lt;a href="https://www.youtube.com/watch?v=5f2qoBH7tl8"&gt;Sylius and API Platform: the story of integration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=vXk2Z1dy_gA"&gt;Symfony Runtime: wrapping API Platform in a lambda&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post, Mickaël Andrieu asks how to control the quality of your PHP and Symfony projects? In French.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mickael-andrieu.medium.com/comment-contr%C3%B4ler-la-qualit%C3%A9-de-vos-projets-php-symfony-d30f791cf1ca"&gt;Comment contrôler la qualité de vos projets PHP &amp;amp; Symfony?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He also posted this one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mickael-andrieu.medium.com/contr%C3%B4ler-la-qualit%C3%A9-de-vos-projets-php-symfony-avec-php-cs-fixer-a926bb34066f"&gt;Contrôler la qualité de vos projets PHP &amp;amp; Symfony avec PHP-CS-Fixer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And Mickaël finishes with the series with this one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mickael-andrieu.medium.com/contr%C3%B4ler-la-qualit%C3%A9-de-vos-projets-php-symfony-%C3%A0-laide-des-hooks-git-b49ff0779889"&gt;Contrôler la qualité de vos projets PHP &amp;amp; Symfony à l’aide des hooks Git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article is from an unlikely source and, despite its title, is more about the history and advantages of SensioLabs and Symfony. But it’s still interesting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://urbanlinker.com/en/blog/10-feature-articles/migrating-from-legacy-to-symfony-sensiolabs-explains-it-all"&gt;Migrating from Legacy to Symfony? SensioLabs explains it all!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Romain writes Github Actions will help you guarantee optimal quality and good functioning of code thanks launching of automatic tests. But it also warns you about the known vulnerabilities of your dependencies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/romaixn/github-actions-for-symfony-5-phpunit-and-more-4e90"&gt;Github Actions for Symfony 5, PHPUnit, and more&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h3&gt;

&lt;p&gt;I ran across Akashic Seer’s blog last week, which is a treasure chest of Symfony-related posts. Here are a few posts from his archive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://akashicseer.com/web-development/symfony-5-check-if-user-is-logged-in-inside-template/"&gt;Symfony 5+ check if user is logged in inside a twig template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://akashicseer.com/web-development/how-to-install-and-configure-redis-in-symfony-5-for-local-testing/"&gt;How to install and configure Redis in Symfony 5+ for local testing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1d3ksI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/php-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1d3ksI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/php-logo.png" alt="PHP Logo" width="880" height="645"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;Our “frenemies” at Laravel have this helpful video for your enjoyment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://laravel-news.com/getting-started-with-php-in-2022"&gt;Getting Started With PHP in 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mateusz Cholewka says that you should manage your logs if you are using Docker and cloud services to run your application live.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@kontaktmtk3d/how-to-configure-php-logs-for-docker-6c70ae75d9e2"&gt;How to configure PHP logs for Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sticher.io notes that PHP 8.1 will be released on November 25, 2021. We already know all the new features, performance improvements, changes, and deprecations, so let's go through them one by one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stitcher.io/blog/new-in-php-81"&gt;What's new in PHP 8.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Brent also had this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stitcher.io/blog/php-81-in-8-code-blocks"&gt;PHP 8.1 in 8 code blocks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this video.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stitcher.io/blog/generics-in-php-video"&gt;Generics in PHP (video)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In another video, Kinsta shows us:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=mVzL2MRFANI"&gt;How to install PHP on any server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beau Beauchamp tells us why PHP is more popular and more hated than ever.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I thought about going with this one for the featured post.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://beau-beauchamp.medium.com/php-is-killing-python-2be459364284"&gt;PHP Is Killing Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And we still get these kinds of articles generated from “data” from “a survey by”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://insights.dice.com/2021/11/09/is-php-doomed-to-decline-in-the-long-term-tiobe-thinks-so/"&gt;Is PHP Doomed to Decline in the Long Term? TIOBE Thinks So.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And yet another comparison article, this time for Node.JS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.aeliusventure.com/php-vs-node-js-which-is-better-for-backend-development/"&gt;PHP vs. Node.js: Which is Better for Backend Development?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Starting your journey as a PHP developer? Here are some of the best PHP Projects to inspire you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/theme_selection/10the-best-php-projects-github-2022-2o7m"&gt;10+ The Best PHP Projects GitHub 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Type variance allows types to change during inheritance in a way that is compatible with the Liskov substitution principle. This article describes how this works on a technical level.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npopov.com/2021/11/08/Type-variance-in-PHP.html"&gt;Type variance in PHP&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-week"&gt;
  &lt;/a&gt;
  Last Week
&lt;/h3&gt;

&lt;p&gt;Smaine Milianni states “Le but de cet article est de donner une vue d’avion sur ce qu’est l’architecture hexagonale et de faire un retour d’expérience sur son utilisation dans un contexte professionnel.” &lt;/p&gt;

&lt;p&gt;&lt;a href="https://smaine-milianni.medium.com/larchi-hexa-est-ce-archi-bien-fd0449b32e33"&gt;L’archi Hexa est-ce archi bien? Is hexagonal architecture good architecture?&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h3&gt;

&lt;p&gt;In a post from last year, JetBrains notes the Pest PhpStorm plugin is a new addition to PhpStorm’s growing ecosystem. With this plugin, testing your code in your favorite IDE is even simpler and faster!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.jetbrains.com/phpstorm/2020/10/how-the-pest-phpstorm-plugin-will-improve-your-testing-workflow/"&gt;How the Pest PhpStorm Plugin Will Improve Your Testing Workflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a similar vein, Laravel News says Better PHPUnit is a Visual Studio Code plugin by Caleb Porzio for running PHPUnit tests from the editor. Like Sublime PHPUnit, it automates running repetitive PHPUnit commands using the command palette or keyboard shortcuts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://laravel-news.com/better-phpunit-vs-code-extension"&gt;Better PHPUnit VS Code Extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LSip1kS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/code-logo.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LSip1kS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/code-logo.jpeg" alt="Code Logo" width="626" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h2&gt;

&lt;p&gt;In the Guardian, Jane Martinson writes, “I have been at the Web Summit in Portugal, a sort of Davos for the technology industry, which ended with the sense that after years of talk about harm and regulation, the demands are increasing, and change is finally in the air.&lt;/p&gt;

&lt;p&gt;While it is true that most of the 40,000 startup founders, investors, and other attendees still yearn to be the next $7tn company like Meta, there was also genuine discussion about the kind of tech and the kind of society that discovers children are being harmed, and democracies undermined and yet does little or nothing about it.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theguardian.com/commentisfree/2021/nov/06/mark-zuckerberg-facebook-woes-rebranding-meta"&gt;Mark Zuckerberg and the tech bros are still on top – but their grip is loosening&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Burke Holland says: “One of the first things you realize after getting started with GitHub’sCodespaces, is that you desperately want your custom environment setup that you enjoy locally to somehow magically be available in Codespaces. You can do that using a “dotfiles” repo, and in this post, we’re going to look at how to set up a dotfiles repo and what quirks you need to be aware of to use it with Codespaces.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://burkeholland.github.io/posts/codespaces-dotfiles/"&gt;How to add your dotfiles to GitHub Codespaces&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Travis Weston notes that: “one of the first lessons you learn when getting into business is that there are two types of debt: Good debt and bad debt. Technical debt is no different. We’ll never avoid technical debt entirely, but we can prevent bad technical debt.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://levelup.gitconnected.com/the-technical-debt-snowball-811a7918f1df"&gt;The (Technical) Debt Snowball: Pay down technical debt without going bankrupt in the process.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I learned a lot about edge servers from this post by Kinsta.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kinsta.com/knowledgebase/edge-servers/"&gt;How Do Edge Servers Work? Everything You Need to Know&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker has the details on Docker Desktop 4.2 and its expanded capabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.docker.com/blog/docker-desktop-4-2-release-save-your-battery-with-pause-resume-and-say-goodbye-to-the-update-pop-up/"&gt;Docker Desktop 4.2 Release: Save Your Battery with Pause / Resume, and Say Goodbye to the Update Pop-up&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you published or seen something related to Symfony or PHP that we missed? If so, &lt;a href="https://symfonystation.com/Contact"&gt;please contact us&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That's it for this week. Thanks for making it to the end of another extended edition. ;) I look forward to sharing next week's Symfony and PHP news with you on Friday. &lt;/p&gt;

&lt;p&gt;Please share this post. :) Be sure to &lt;a href="https://symfonystation.com/Communiques"&gt;join our newsletter list&lt;/a&gt;, so you get each week's communique directly in your inbox (a day early). And follow us on Twitter at &lt;a href="https://twitter.com/SymfonyStation"&gt;@symfonfystation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy coding Symfonistas!&lt;/p&gt;

&lt;p&gt;Reuben Walker&lt;br&gt;
Founder &lt;a href="https://symfonystation.com/"&gt;Symfony Station&lt;/a&gt;&lt;br&gt;
Reuben is also Ringmaster of Mobile Atom Media and its division Mobile Atom Code. &lt;/p&gt;

</description>
      <category>symfony</category>
      <category>php</category>
      <category>docker</category>
      <category>github</category>
    </item>
    <item>
      <title>Testing Teams apps made easier with the new developer portal</title>
      <author>Eli H. Schei</author>
      <pubDate>Fri, 12 Nov 2021 13:06:48 +0000</pubDate>
      <link>https://dev.to/elischei/testing-teams-apps-made-easier-with-the-new-developer-portal-1m4j</link>
      <guid>https://dev.to/elischei/testing-teams-apps-made-easier-with-the-new-developer-portal-1m4j</guid>
      <description>&lt;p&gt;One of my most read blogposts is&lt;a href="https://elischei.com/enable-sideloading-of-apps-in-microsoft-teams/"&gt;the one about sideloading apps in Microsoft Teams&lt;/a&gt;, so when I heard about the developer portal and how it makes it easier to test Teams apps I thought I should write about that too. The developer portal was made general available for all Teams developers in october this year (2021). I really like that you get both resources and tools presented in the same place. And of course that they have made it very easy too test Teams apps.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note! Since I have allready been testing Teams apps before, I have &lt;a href="https://elischei.com/enable-sideloading-of-apps-in-microsoft-teams/"&gt;enabled both sideloading&lt;/a&gt; and the &lt;a href="https://docs.microsoft.com/en-us/microsoftteams/teams-custom-app-policies-and-settings#org-wide-custom-app-setting"&gt;‘allow interaction with cusom apps’ setting&lt;/a&gt; on my dev-tenant. I have not tried to test an app from the developer portal without these settings – so its possible you still have to enable them to use the developer portal for testing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#how-to-test-teams-apps-through-the-developer-portal"&gt;
  &lt;/a&gt;
  How to test teams apps through the developer portal
&lt;/h2&gt;

&lt;p&gt;Start by navigating to the developer portal, you can find it here: &lt;a href="https://dev.teams.microsoft.com/home"&gt;https://dev.teams.microsoft.com/home&lt;/a&gt; . If you are not allready logged in – do so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--plIn-sPB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vj0g6shpdt0qvbrbyv2u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plIn-sPB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vj0g6shpdt0qvbrbyv2u.png" alt="Devportal frontpage" width="880" height="457"&gt;&lt;/a&gt;&lt;br&gt;
In the navigation on the left side, select Apps. This will show you the apps that you have allready added. There are also shortcuts to create a new app (I havn’t tested this yet) or import an existing app. In this blogpost I will assume you allready have an app you want to test, so either import it, or select it from the list.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v1l8olcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crpb99o450cc83vje1n1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v1l8olcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crpb99o450cc83vje1n1.png" alt="Devportal all apps page" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you select an app you will get a landing page for that specific app. Here you can find a lot of usefull information about the app, and you can also change some configurations from here.&lt;/p&gt;

&lt;p&gt;In the upper right corner you will see a button that sais “Preview in Teams”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ceil_fGG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8lavv22nqg34p94ftffj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ceil_fGG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8lavv22nqg34p94ftffj.png" alt='Devportal app overview page with the "preview in teams" button hightlightet' width="880" height="407"&gt;&lt;/a&gt;&lt;br&gt;
When clickling the button you will first get promted to open Teams, and inside Teams you’ll get a dialog to add the app to a teams tab. Click the “Add to a team” button and select the team where you would like the app to be installed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MoLTdj4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76lg9jm86clv2m8ven06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MoLTdj4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76lg9jm86clv2m8ven06.png" alt="The add app to teams dialog" width="880" height="380"&gt;&lt;/a&gt;&lt;br&gt;
And thats it, now you can test your app inside teams. 🙂&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pro-tip-add-the-developer-portal-as-an-app-in-teams"&gt;
  &lt;/a&gt;
  Pro tip: Add the developer portal as an app in Teams
&lt;/h2&gt;

&lt;p&gt;The developer portal is actually available as a Teams app itself. Install it and you can manage and test your Teams applications directly from teams.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aiko_HSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zshdcjmabp3vgw0mxw8g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aiko_HSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zshdcjmabp3vgw0mxw8g.png" alt="Devportal added as an app inside teams" width="880" height="708"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/microsoft365dev/manage-your-microsoft-teams-apps-with-the-developer-portal/"&gt;Manage your Microsoft Teams apps with the Developer Portal – Microsoft 365 Developer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/teams-developer-portal"&gt;Manage your apps with the Developer Portal – Teams | Microsoft Docs&lt;/a&gt;
***
Did you find this article usefull? &lt;a href="https://twitter.com/acupof_dev"&gt;Follow me on twitter&lt;/a&gt; to be notified when I publish something new!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, if you have any feedback or questions, please let me know in the comments below. 🙂&lt;/p&gt;

&lt;p&gt;Thank you for reading, and happy coding!&lt;/p&gt;

&lt;p&gt;/Eli&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Responsive Personal Portfolio Website with HTML CSS JS - Part 5</title>
      <author>Sadee</author>
      <pubDate>Fri, 12 Nov 2021 13:05:55 +0000</pubDate>
      <link>https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-5-5f4m</link>
      <guid>https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-5-5f4m</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nXvZqo4N7Os"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Responsive personal portfolio website with html css js&lt;/p&gt;

&lt;p&gt;In this video series, &lt;br&gt;
I will show you how to build a Complete Responsive Personal Portfolio Website using HTML CSS JavaScript. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#website-features"&gt;
  &lt;/a&gt;
  🌟 Website features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;5 pages&lt;/li&gt;
&lt;li&gt;Fully Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Awesome Page Navigation&lt;/li&gt;
&lt;li&gt;Filterable item showcase&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;HI 👋&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel 👇&lt;/p&gt;

&lt;p&gt;📺 My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
🔔 Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
🕐 New videos Every Friday &amp;amp; Tuesday&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  📹 Recommended Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-1-3dlg"&gt;Part 1&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-2-l5"&gt;Part 2&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-3-2m6a"&gt;Part 3&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-4-4ejo-temp-slug-651293"&gt;Part 4&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  🔗 Essential links
&lt;/h2&gt;

&lt;p&gt;Images : &lt;a href="https://drive.google.com/file/d/1CZZcnaOEVDDneSve6qpSUoyAfEBuPrqD/view"&gt;image.zip&lt;/a&gt;&lt;br&gt;
Font : &lt;a href="https://fonts.google.com/specimen/Poppins?query=poppins"&gt;Poppins&lt;/a&gt;&lt;br&gt;
Ionicon : &lt;a href="https://ionic.io/ionicons"&gt;https://ionic.io/ionicons&lt;/a&gt;&lt;br&gt;
How to use ionicon : &lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;https://youtu.be/TTrYjLOJeKs&lt;/a&gt;&lt;br&gt;
Source Code : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#timestamp"&gt;
  &lt;/a&gt;
  ⏱️ Timestamp
&lt;/h2&gt;

&lt;p&gt;0:00 - Demo&lt;br&gt;
1:05 - Contact section&lt;br&gt;
8:33 - Media queries&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  👤 Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to create reusable component using Vue Js</title>
      <author>Snehal </author>
      <pubDate>Fri, 12 Nov 2021 12:37:43 +0000</pubDate>
      <link>https://dev.to/snehalk/how-to-create-reusable-component-using-vue-js-177f</link>
      <guid>https://dev.to/snehalk/how-to-create-reusable-component-using-vue-js-177f</guid>
      <description>&lt;p&gt;Hello artisan!&lt;/p&gt;

&lt;p&gt;In this blog we are going build a reusable component which we can reuse it in Create or Edit user or anywhere if there is requirement of the same code and the same functionality.&lt;/p&gt;

&lt;p&gt;The reuse of the component may help us to avoid writing the same code and functionality multiple times which may leads to less code and make our app faster.&lt;/p&gt;

&lt;p&gt;In this blog we are going to create a user component which can be used to create as well as edit the User.&lt;/p&gt;

&lt;p&gt;So let’s start coding&lt;/p&gt;

&lt;p&gt;Create the component &lt;code&gt;UserComponent.vue&lt;/code&gt; in components directory and add the below code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;max-w-lg mx-5 text-left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prevent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$emit('submit-form', form)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-sm font-medium text-gray-900 block mb-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/labe&lt;/span&gt;&lt;span class="err"&gt;l
&lt;/span&gt;        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
          &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form.name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;
        &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-sm font-medium text-gray-900 block mb-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/labe&lt;/span&gt;&lt;span class="err"&gt;l
&lt;/span&gt;        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
          &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form.email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;
        &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;
          &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-sm font-medium text-gray-900 block mb-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Address&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/labe&lt;/span&gt;&lt;span class="err"&gt;l
&lt;/span&gt;        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
          &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form.address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;
        &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-sm font-medium text-gray-900 block mb-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Mobile&lt;/span&gt; &lt;span class="nx"&gt;no&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/labe&lt;/span&gt;&lt;span class="err"&gt;l
&lt;/span&gt;        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
          &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mobile_no&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mobile no&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form.mobile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;
        &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
        &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Submit&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UserComponent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;mobile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mobile&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create a component &lt;code&gt;CreateUser.vue&lt;/code&gt; in components directory. After creating the create-user component import the &lt;code&gt;UserComponent&lt;/code&gt; and add it in template as given in below code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px-5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Success&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;msg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserComponent&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;submit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;saveUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;UserComponent&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./UserComponent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Success&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CreateUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;UserComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;Success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;saveUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User added&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User info saved&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Same we will do for Edit User for that let’s create EditUser component and add the below code to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px-5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Success&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;msg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;edit&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="nx"&gt;which&lt;/span&gt; &lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserComponent&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;submit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;updateUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;UserComponent&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./UserComponent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Success&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;EditUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;UserComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;Success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;updateUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User Updated&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User info updated&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a one more component to display the success message after creating/editing user. So let’s create a &lt;code&gt;Success&lt;/code&gt; component in components directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;
    &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;w-full mx-4 text-green-300 p-2 mx-auto mb-6 bg-green-600 border border-green-700 rounded&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are on the final step, add the &lt;code&gt;CreateUser&lt;/code&gt; and &lt;code&gt;EditUser&lt;/code&gt; component in App.vue file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Save&lt;/span&gt; &lt;span class="nx"&gt;information&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h4&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CreateUser&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Update&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="nx"&gt;Information&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h4&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;EditUser&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;CreateUser&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/CreateUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;EditUser&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/EditUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;CreateUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;EditUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Alex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;info building&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;alex@xyz.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;mobile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1122334456&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Avenir&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;osx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;c3e50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we go we have successfully re-used the component. &lt;br&gt;
You can also check the result below.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/reusable-component-in-vue-js-for-create-and-edit-user-w9z0q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;❤️ 🦄 Happy Reading.. 🦄 ❤️&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Blockchain Gaming and NFT are Booming, have you tried any? </title>
      <author>Grozy</author>
      <pubDate>Fri, 12 Nov 2021 12:32:33 +0000</pubDate>
      <link>https://dev.to/grozy_crypto/blockchain-gaming-and-nft-are-booming-have-you-tried-any-494a</link>
      <guid>https://dev.to/grozy_crypto/blockchain-gaming-and-nft-are-booming-have-you-tried-any-494a</guid>
      <description>&lt;p&gt;Blockchain games are video games that run on a cryptocurrency and include a completely or partially distributed ledger. It provides the players with verified ownership over the virtual products contained in the games. &lt;/p&gt;

&lt;p&gt;The Crypto gaming industry is booming and it continues to be a global phenomenon. Gaming in a particular has become a breeding ground for many new inventions in this space. &lt;/p&gt;

&lt;p&gt;Undoubtedly crypto games are disrupting the traditional games by allowing players to earn and be in charge of their game-in assets. Players can trade virtual products, for cryptocurrency which can be traded for real money.&lt;/p&gt;

&lt;p&gt;Though the concept of Blockchain gaming, crypto gaming, and play2earn games are relatively still new concepts, there are plenty of existing and aspiring blockchain gaming companies. &lt;/p&gt;

&lt;p&gt;Additionally NFT’s are seemingly becoming more than just speculative assets. It is reshaping how the users interact with the blockchain games, and what are their future expectations are.&lt;/p&gt;

&lt;p&gt;With Blockchain and NFT booming, have you tried any of such games? If you haven’t then here are few games you should definitely try:- &lt;/p&gt;

&lt;p&gt;AXIE INFINITY &lt;/p&gt;

&lt;p&gt;Axie Infinity is one of the most popular blockchain gaming startups created by Sky Mavis in Vietnam. The game leverages Ethereum-based cryptocurrency AXS and SLP.&lt;/p&gt;

&lt;p&gt;AKS and SLP be traded on Ethereum exchange for bitcoin using Smart Contracts. Smooth Love Portion (SLP) and AXIS Infinity Shard (AXS) are the two tokens used for this project. &lt;/p&gt;

&lt;p&gt;Axie Infinity incorporates Non-Fungible Tokens. The monsters or the Axies in the game are NFT’s. Players spend real money on those characters and engage in battles with other players. They can also level up characters and sell them to other players which in turn generates income for the players. &lt;/p&gt;

&lt;p&gt;Sky Mavis, the developer of Axie Infinity has raised $152 million at a nearly $3 billion valuation to help grow its Axie- infinity “ play-to-earn” game. &lt;/p&gt;

&lt;p&gt;GameInfinfity - Blockchain Gaming Platform | META token :&lt;/p&gt;

&lt;p&gt;Game Infinity is another best alternative game to the AXIE Infinity. Game Infinity is a Blockchain Gaming Platform ( META ) that offers various single-player and multiplayer games integrated with META tokens.&lt;/p&gt;

&lt;p&gt;The players are rewarded with tokens and require a META token to enter the game. In the GameInfinity ( META ) Gaming Universe, you get access to games, meet friends, chat with gamers, trade gaming NFT and make gaming a full-time earning source. &lt;/p&gt;

&lt;p&gt;Game Infinity has a lot to offer its users with Simplified Blockchain gaming and NFT services. By the first quarter of 2022, the team aims to launch 50+ games including single and multiplayer.&lt;/p&gt;

&lt;p&gt;Cryptokitties:&lt;/p&gt;

&lt;p&gt;Cryptokitties is a more established NFT game to gain success throughout the years.  It is a game about cryptokitties which are breedable, collectible, and adorable creatures. The cat belonging to the users is unique and cannot be duplicated, taken away, or destroyed. &lt;/p&gt;

&lt;p&gt;The game involves collecting and breeding digital kitties, which can be then sold at desired prices depending on the quality of the cats. &lt;/p&gt;

&lt;p&gt;Gods Unchained :&lt;/p&gt;

&lt;p&gt;GodsUnchahined is free to play games that incorporate the NFT component with a traditional card trading game which was launched in September 2022.&lt;/p&gt;

&lt;p&gt;In the game, players have to get high-ranking cards from other players by winning matches. Players can acquire cards by purchasing them from other players. The quality of these cards and the player’s gaming ability often determine the winner. With skills and tactics being emphasized more. &lt;/p&gt;

&lt;p&gt;The listed above games are the ones everyone must try if you are interested in crypto and blockchain games.  Refer the games to your friends, and let them try these too.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>meta</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>A Ruby on Rails Application for Organizing News Articles</title>
      <author>Guosa</author>
      <pubDate>Fri, 12 Nov 2021 12:31:08 +0000</pubDate>
      <link>https://dev.to/guosae/a-ruby-on-rails-application-for-organizing-news-articles-1422</link>
      <guid>https://dev.to/guosae/a-ruby-on-rails-application-for-organizing-news-articles-1422</guid>
      <description>&lt;p&gt;As part of my journey to becoming a software developer I learned the Ruby on Rails framework, a popular web application framework which makes use of the principle of &lt;a href="https://en.wikipedia.org/wiki/Convention_over_configuration"&gt;&lt;em&gt;convention over configuration&lt;/em&gt;&lt;/a&gt; to make it easier for developers to quickly develop useful web applications.&lt;/p&gt;

&lt;p&gt;Ruby on Rails, or Rails, like Sinatra, utilizes the &lt;a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller"&gt;model-view-controller (MVC) architecture&lt;/a&gt; where controllers handle data flow between views (the representations of data which the user of the application sees and can interact with) and models (which manage the logic and data of the application). &lt;/p&gt;

&lt;p&gt;An important feature of Rails is its built-in use of the &lt;a href="https://guides.rubyonrails.org/active_record_basics.html"&gt;Active Record Object Relational Mapping System&lt;/a&gt; to map database tables (which store the actual information which the program uses) to models (which in Rails are certain Ruby classes which are defined as the models of the application). &lt;/p&gt;

&lt;p&gt;Through the use of the Active Record system developers do not need to focus on putting excessive effort into configuration (since the configuration of this aspect of the application is already set up in any Rails application) and can also utilize certain standard, pre-defined conventions to quickly manipulate data for their Rails applications.&lt;/p&gt;

&lt;p&gt;Active Record has &lt;a href="https://guides.rubyonrails.org/active_record_basics.html#naming-conventions"&gt;naming conventions&lt;/a&gt; for classes and their corresponding database tables, where table names are pluralized versions of their corresponding model/class names. Active Record also comes with many standard, pre-defined methods which can be utilized on the application's models/classes and instances of those classes.&lt;/p&gt;

&lt;p&gt;In Rails, in order to set up database tables for the models of an application, a developer first has to run migrations, which create database tables for the models. In the migration files which a developer creates in order to set up their database, the structure of the database tables (their columns, the data types of these columns, and the relationships of each table to other tables in the application) are defined, and then the developer runs these migration files and the database is created.&lt;/p&gt;

&lt;p&gt;Developers can also very easily set up &lt;a href="https://guides.rubyonrails.org/routing.html#crud-verbs-and-actions"&gt;RESTful routes&lt;/a&gt; (index, new, create, show, edit, update, and destroy) in Rails by defining the necessary actions (defined as methods belonging to controller classes) in their controller files, then creating corresponding view pages, and also defining the necessary routes. By doing this, developers can provide users of their application access to view pages (accessible to users through specific URL paths) which display certain standard information about the data used in the application: a list of all existing objects, a form to create new objects and then have the newly created object persist in the database, a display of the details of one specific object, a page to edit the details of an object and then have it updated in the database, and the ability to delete an object from the application.&lt;/p&gt;




&lt;p&gt;In learning to use the Ruby on Rails framework my goal was to build a working Ruby on Rails application which allowed users to manage a collection of news articles, and make notes about news articles which other users of the application could view.&lt;/p&gt;

&lt;p&gt;The final application was a kind of Wikipedia-like application where anyone could create an account (sign up), login into their account and create, read, update, or delete news articles of interest to them, in addition to being able to create, read, update, or delete notes about the news articles (or anything else). Whereas in Wikipedia any user can create an account and add new encyclopedia articles or modify existing ones, as well as discuss the aspects (such as quality, style, tone, problems, etc.) of each online encyclopedia article on the talk pages for articles, in my application users could add news/journalism articles, modify existing ones, and create viewable notes about the news articles or other issues of interest.&lt;/p&gt;

&lt;p&gt;The project needed to meet certain requirements in terms of its functionality and design, which are listed below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The application needed to have models which had at least one &lt;code&gt;has_many&lt;/code&gt;, at least one &lt;code&gt;belongs_to&lt;/code&gt;, and at least two &lt;code&gt;has_many :through&lt;/code&gt; relationships.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It needed to include a &lt;code&gt;has_many :through&lt;/code&gt; association where the join table was a user-submittable attribute.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Models needed to have reasonable validations for simple attributes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There needed to be at least one class level ActiveRecord scope method that was chainable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The application needed to be able to provide standard user authentication including signup, login, logout and passwords.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The application needed to allow login from some third party service, such as GitHub or a social media account such as Facebook, Twitter, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The application needed to make use of a nested resource with the appropriate RESTful URLs, which included a nested new route and either a nested index route or a nested show route.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The forms which were used to enter new information or modify existing information needed to display validation errors on the page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The application needed to be a DRY (Do-not-Repeat-Yourself) Rails application, where there was not excess repetition of similar or identical lines of code throughout the application.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It was also required that I not use scaffolding (Rails has certain commands a developer can enter which allow them to auto-generate a lot of the working parts of an application from the get go), in order to learn more by building out each part of the application piece by piece on my own rather than having much of it being automatically generated from the start.&lt;/p&gt;

&lt;p&gt;Here is how I met these requirements for my application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For the first requirement, I set up a &lt;code&gt;has_many&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt; relationship between a region model and a country model, where a region had many countries and a country belonged to a particular region of the world. I used countries and regions for the part of the application where the user could access news articles grouped by country, view countries by region, and add countries to regions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the first requirement I also set up two &lt;code&gt;has_many :through&lt;/code&gt; relationships:&lt;/p&gt;

&lt;p&gt;A writer &lt;code&gt;has_many :sources, through: :articles&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A source &lt;code&gt;has_many :writers, through: :articles&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An article &lt;code&gt;belongs_to :writer&lt;/code&gt;  and  &lt;code&gt;belongs_to :source&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Writer referred to the author or authors of the news article, while source referred to the media company or newspaper responsible for publishing the news article.&lt;/p&gt;

&lt;p&gt;A category &lt;code&gt;has_many :subjects, through: :notes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A subject &lt;code&gt;has_many :categories, through: :notes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A note &lt;code&gt;belongs_to :category&lt;/code&gt; and &lt;code&gt;belongs_to :subject&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Category referred to the type of note (i.e. what the note could be classified as - such as a critical note, a note expressing an opinion, etc.) while subject referred to what specific topic the note was actually about (such as finance, business, economics, art, politics, movies, etc.).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In my application the join table between writers and sources was the articles table. A user was able to create, read, update, and delete articles, so article was a user-submittable attribute acting as the join table between writers and sources. Similarly the notes table was the join table between subjects and categories and was also user-submittable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I included validations on the article model ensuring that each article had a title, URL address, and description and also ensuring that each URL address given for each article was unique, before articles could be saved to the database. I also included validations on the names of countries, regions, and writers, and included validations on notes to ensure that they contained information before they could be saved&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Article&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;
    &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:writer&lt;/span&gt; 
    &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:source&lt;/span&gt; 
    &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:country&lt;/span&gt;
    &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;uniqueness: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;I included class level ActiveRecord scope methods on the Writer model/class and on the Source model/class which enabled writers and sources to be ordered by name, respectively.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Writer&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;
    &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:articles&lt;/span&gt;
    &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:sources&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;through: :articles&lt;/span&gt;
    &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="ss"&gt;:ordered_by_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I set up standard user authentication allowing signup, login, logout and utilizing passwords. Initially I did this on my own, and got it working perfectly fine following the standard Rails approach to this using user and session controllers, but then later I redid this part using the devise gem instead, which also made this part a bit easier.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For the external third-party or social media login, I used the &lt;a href="https://github.com/heartcombo/devise"&gt;devise gem&lt;/a&gt;, the &lt;a href="https://github.com/omniauth/omniauth"&gt;omniauth gem&lt;/a&gt;, the &lt;a href="https://github.com/omniauth/omniauth-github"&gt;omniauth-github&lt;/a&gt; gem, and the &lt;a href="https://github.com/cookpad/omniauth-rails_csrf_protection"&gt;omniauth-rails_csrf_protection gem&lt;/a&gt; in my Gemfile and set up the necessary models, controllers, and routes in order to allow a user to login to the application using their GitHub account.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'devise'&lt;/span&gt;

&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'omniauth'&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'omniauth-github'&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'omniauth-rails_csrf_protection'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I set up a nested resource using countries and regions where there was a nested new route for making new countries by region, and a nested index route where one could see all the countries within the same region as a selected country, with the appropriate RESTful URLs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The forms for creating or editing articles, notes, countries, or regions did display validation errors on their respective view pages if the user failed to enter in the required information correctly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The application made use of partials and helper methods to keep the repetition of similar or identical code throughout the application to a minimum.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also used &lt;a href="https://newsapi.org/"&gt;https://newsapi.org/&lt;/a&gt; as a source of real news articles based around a particular subject (I chose news articles about business and the economy) to seed my database with, so I could see the effect of changes to the application with the use of real data as I was building it out. I utilized the &lt;a href="https://github.com/rest-client/rest-client"&gt;rest-client gem&lt;/a&gt; to easily import news articles from the newsapi.org website into the seed file for my database, in order to create instances of articles, writers, and sources.&lt;/p&gt;

&lt;p&gt;I was able to build out a working Ruby on Rails application which met the technical and design requirements described above, and which provided a basic service to users (storing and managing news information/content in the form of news articles) and in the process I learned a great deal about Rails and also about web development more generally.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/GuosaE/story-saver"&gt;A link to the repository for my project.&lt;/a&gt; &lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
