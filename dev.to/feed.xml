<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>HTML, a frontend language.</title>
      <author>BeautyJames</author>
      <pubDate>Fri, 15 Oct 2021 16:44:05 +0000</pubDate>
      <link>https://dev.to/beautyjames/html-a-frontend-language-5fc1</link>
      <guid>https://dev.to/beautyjames/html-a-frontend-language-5fc1</guid>
      <description>&lt;p&gt;Hello everyone, Beauty James here again with another intriguing topic. Since I talked about Frontend development in my previous article, I figured it would be beneficial to include topics about frontend languages on this blog.&lt;br&gt;
So, today we will be considering HTML, a frontend language. We’re going to start with the basics as we discuss the following;&lt;br&gt;
• What is html?&lt;br&gt;
• Basic concepts in HTML&lt;br&gt;
• What is an html editor?&lt;br&gt;
• Features of an html text editor&lt;br&gt;
• When do you need an html editor?&lt;br&gt;
• Examples of html editors&lt;br&gt;
• How to write html codes?&lt;br&gt;
• Basic text formatting in HTML&lt;br&gt;
• Uses of html&lt;br&gt;
What is HTML?&lt;br&gt;
HTML (Hypertext Markup Language) is the code that is used to structure the web and it’s content. Structuring contents could be within a set of paragraphs, a list of bulleted point or using images and data tables. It tells the web browsers how to structure the web pages you visit. It could be complicated or really basic, depending on how the developer wants it to be.&lt;br&gt;
Basic concepts in HTML&lt;br&gt;
 The program you need: HTML is written in plain text. All you need is a simple text editor that is already in your system. For Macintosh, you could use a  simple text editor and for Windows, that will be Notepad.&lt;br&gt;
 Rules in HTML: In HTML, the rules are fairly simple. For example, HTML tags are always surrounded by angles (&amp;lt; &amp;gt;).&lt;br&gt;
 Case sensitivity: HTML tags are not case sensitive. This means that you can use either uppercase or lowercase. For instance,  is the same as .&lt;br&gt;
 Elements; HTML consists of a series of elements which you use to enclose, wrap or markup different parts of a content to make it appear or act in a certain way. They are the building blocks of HTML pages. Elements are indicated in the documents by tags enclosed in angle brackets for example &lt;/p&gt;
&lt;p&gt;. The extent of an element could also be indicated by a pair of tags: a start tag&lt;/p&gt;
&lt;p&gt; and an end tag &lt;/p&gt;. The text content of any element is placed within these tags. Note that the browsers do not display the tags but only use them to interpret the content of the page&lt;br&gt;
For example, consider the text below&lt;br&gt;
My dog has a temper.&lt;br&gt;
If you want to make the text stand by itself, you could specify that it is a paragraph by enclosing it in a paragraph &lt;p&gt; element.&lt;/p&gt;

&lt;p&gt;My dog has a temper&lt;/p&gt;

&lt;p&gt;In the text above, we can denote that the opening tag is &lt;/p&gt;
&lt;p&gt;, while the closing tag is &lt;/p&gt;. The sentence “My dog has a temper”, becomes the content while the element here becomes the opening tag followed by the content and the closing tag. To understand this better, we will further look into the anatomy of an element.&lt;br&gt;
i.  The opening tag; This consist of the name of the tag wrapped in opening and closing angle brackets but it marks where the element begins.&lt;br&gt;
ii. The content; This is simply the content of an element. In this example, it is the paragraph text “My dog has a temper”.&lt;br&gt;
iii.    The closing tag; This is the same as the opening tag except that it has a forward slash before the tag ends. It marks where the element ends.&lt;br&gt;
It should be noted that although the terms Element and Tag could be used interchangeably, they are not exactly the same. An element consists of an opening tag, the content and the closing tag while a tag simply marks the beginning or the end of  an element.&lt;br&gt;
 Empty elements: Empty elements consists of a single tag which is usually used to insert something in the document. It doesn’t follow the anatomy of a regular element (the opening tag, the content and the closing tag) as mentioned above. &lt;br&gt;
 Attributes: These are special codes placed within the html elements that describe how the element should look like. They contain extra information about the element that won’t appear in the content.&lt;br&gt;
An attribute should always have:&lt;br&gt;
i.  The attribute name followed by an equality sign&lt;br&gt;
ii. Space between it and the element (in cases of multiple attributes, the attributes should also be separated by spaces)&lt;br&gt;
iii.    The attribute value wrapped around opening and closing tags&lt;br&gt;
Examples of attributes are the color attribute which changes the color of the webpage and outline attribute which aligns the text either to the left or right.&lt;br&gt;
 HTML structure: All html document are divided into two main parts; The head and the body as shown below;&lt;br&gt;
&lt;br&gt;
-----the head&lt;br&gt;
………&lt;br&gt;
&lt;br&gt;
-----the body&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
 Nesting: Nesting is the act of enclosing text and graphics using tags. Example, .&lt;br&gt;
What is an HTML editor?&lt;br&gt;
An HTML editor is a specialized piece of software that assists in the creation of HTML and quite possibly CSS codes. It includes features that help streamline your coding workflow and of course  allows users to enter raw text. Whether you’re new to HTML or a seasoned professional, a good HTML editor will help you code faster thanks to it’s many helpful features.&lt;br&gt;
Features of an HTML text editor&lt;br&gt;
A good HTML editor should have a few or all of the following features:&lt;br&gt;
o   Code Validation: Code Validation simply means making sure that your code’s syntax is error free. This is a basic feature made available to most html text editors. It doesn’t necessarily check for complex errors like a debugging tool would, but it definitely helps to save time and is comparable to a debugging tool.&lt;br&gt;
o   A Quick Search Of code: This feature allows you to search for a code instead of going through hundreds of lines of codes for just a single component. &lt;br&gt;
o   Auto Completion: This feature automatically inserts components like closing tags when they’re logically supposed to appear, saving you time in the process.&lt;br&gt;
o   Syntax Highlighter:  Syntax Highlighter makes it possible to visually  differentiate between elements so you can quickly determine what you need to write next by emphasizing key elements in different colors.&lt;br&gt;
o   Debugging: HTML text editors can sometimes save you from having to scan through line after line of code trying to see and fix tiny errors that are easy to miss. This feature that checks your codes for errors and reports them back to you is known as Debugging&lt;br&gt;
o   Insert common HTML Elements: You can easily add HTML element with one click without constantly having to type them in every time you want to use them, saving you time.&lt;br&gt;
o   Search and replace: This feature helps you to search your code and replace all instances of your keyword to something else. You only have to type the code once instead of multiple times.&lt;br&gt;
When do you need an HTML editor?&lt;br&gt;
Sometimes you may need an HTML editor, a word processor or an IDE (Integrated Development Environment). Below are general guidelines that will help you to determine what type of software you need.&lt;br&gt;
An HTML editor is helpful when ;&lt;br&gt;
 You’re learning how to write html codes&lt;br&gt;
 You need a professional tool that will reduce errors in your code&lt;br&gt;
 A basic word processor or text editor just isn’t cutting it for you anymore.&lt;br&gt;
 You need to edit an HTML or CSS file.&lt;br&gt;
 It’s essential to efficiently write HTML or other design-based code like CSS.&lt;br&gt;
Examples of HTML editors&lt;br&gt;
Using a word processor or basic text editor will most likely fill your work with errors. This could be prevented by simply using an html editor. With a wide range of HTML editors you could use, the following are the most reliable and efficient ones:&lt;br&gt;
• Brackets.io; This kind of editor works well with html, CSS, LESS, SCSS, and JavaScript, making it perfect for frontend development. Brackets.io provides a professional experience and is an easy-to-use text editor for html, making it one of the best editors used by web developers.&lt;br&gt;
• Atoms; This kind of editor supports multiple panes which helps you to edit multiple files at the same time especially for apple and Linux users. This is especially useful if you’re working on interrelated files. Its user interface is customizable and it has both Git and GitHub. Atom offers professional experience and is intuitive to use.&lt;br&gt;
• Notepad++; Notepad++ is a free html editor that supports CSS, JavaScript, PHP and other programming languages. It has not just the basic features of an html editor, but some advanced features without being overly complicated. Notepad++ is the best option for an html editor that’s great for transitioning  out of beginner or intermediate-level web development. It is also great for advanced users who love the idea of a distraction-free interface.&lt;br&gt;
• Komodo edit; This is  a free html editor that supports Perl, Ruby, Python, HTML/CSS and more programming languages. Komodo edit is a professional program with  great, advanced features, and also includes project management. Although the free version is often perfect on its own for most developers and beginners, it is preferable to upgrade to komodo IDE if professional features are needed, such as for business or enterprise level project. &lt;br&gt;
• Visual studio code; This is a type of html editor that is well maintained by Microsoft and open-source community. Visual studio code supports HTML, CSS,  LESS, CASS, PHP, C++, c#, Ruby, Perl, SQL, XML, JSON, Python, and many more languages. It consists of both basic features like syntax Highlighting and advanced features like debugging and Git commands built-in, and tons of other extensions available. The user interface (UI) is Clean and well-organized.&lt;br&gt;
• Dreamweaver; Dreamweaver is one of the best html editors because it supports many web standards including HTML and CSS. It is easier to spot and correct issues in Dreamweaver because it has Error Underlining. With Dreamweaver you don’t have to keep saving your working file and uploading it to your server to check your progress because there’s a live preview editing area built right into the UI so you can streamline your workflow.&lt;br&gt;
• Vim; Due to it’s great advanced features such as error highlighting, and search and replace tool, Vim is sometimes considered as an IDE than a mere HTML text editor. It enables users to undo their actions in an unlimited number of times and it is also customizable.&lt;br&gt;
• Sublime text 3; Sublime text 3 is an excellent option for an HTML editor that is also customizable. It has a clean interface that’s uncluttered and allows users to focus more on their code. Sublime text 3 has features such as syntax Highlighting and a split-pane UI capability as well, which allows users search and find elements quickly thereby, saving time.&lt;br&gt;
Other examples include;&lt;br&gt;
• TinyMCE Editor, and&lt;br&gt;
• Froala.&lt;br&gt;
How to write HTML codes&lt;br&gt;
Writing HTML codes is simply creating your own webpage. We will explain the process of creating a web page through the steps listed below:&lt;br&gt;
STEP 1; Open a text editor&lt;br&gt;
 Open Notepad for Windows&lt;br&gt;
For Windows 8 or later, open the start screen, on the window symbol at the bottom left of your screen, type Notepad.&lt;br&gt;
For Windows 7 or earlier, open Start&amp;gt;Programs&amp;gt;Accessories&amp;gt;Notepad&amp;gt;&lt;br&gt;
 Open TextEdit for Mac&lt;br&gt;
Open Finder&amp;gt;Application&amp;gt;TextEdit&lt;br&gt;
Also change some preferences to get the application to change files correctly. In preferences, Format&amp;gt;Plain text. Then under “Open and Save”, check the box that says “Display html files as html codes instead of formatted text”.&lt;br&gt;
STEP 2; Write or copy the following code into Notepad or TextEdit &lt;br&gt;
&lt;br&gt;
&lt;br&gt;
This is my first web page &lt;br&gt;
 &lt;br&gt;
Hello world. This is my first webpage. There is more to come so make sure you don’t miss out ..&lt;br&gt;
 &lt;br&gt;
STEP 3: Save the file on the computer. A file can be saved as either ‘htm’ or ‘html’.&lt;br&gt;
STEP 4: View the html file in your browser. To preview your document, open it with your browser.&lt;br&gt;
Basic Text Formatting&lt;br&gt;
The following headline, paragraph, line break and horizontal rule tags will make our current web page a lot more exciting:&lt;br&gt;
• Headline tag; In html, you can create text with bold copies by using the headline ranging from &lt;h1&gt;………..&lt;/h1&gt; to &lt;h6&gt;………&lt;/h6&gt;. The code of all these headline sizes will be written as

&lt;h1&gt;Level 1 headlines&lt;/h1&gt;

&lt;h2&gt;Level 2 headlines&lt;/h2&gt;

&lt;h3&gt;Level 3 headlines &lt;/h3&gt;

&lt;h4&gt;Level 4 headlines &lt;/h4&gt;

&lt;h5&gt;Level 5 headlines&lt;/h5&gt;

&lt;h6&gt;Level 6 headlines&lt;/h6&gt;

&lt;p&gt;To add the headline to your webpage, follow the steps listed above but instead, your code should look like this&lt;br&gt;
&lt;br&gt;
&lt;/p&gt; &lt;br&gt;
This is my first webpage &lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;Hello world. &lt;/h1&gt;This is my first webpage. There is more to come.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Save the file and open it in your web browser to view it.&lt;br&gt;
• Paragraph and Line breaks; To add space between paragraphs, you use a paragraph tag &lt;p&gt;………&lt;/p&gt;.&lt;br&gt;
To add a single blank line or space, you use a break tag &lt;br&gt;. This is an empty element and therefore stands alone.&lt;br&gt;
To apply paragraphs and line breaks to your web page, follow the same steps listed above, but your code should look like this&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
This is my first webpage&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;Hello world.&lt;/h1&gt;.This is my first webpage. There’s more to come&lt;br&gt;
&lt;br&gt;

&lt;p&gt;I am learning how to use the horizontal rule, headline, paragraph and line break tags. Writing html isn’t as hard as it seems.
&lt;/p&gt;

&lt;p&gt;Here is a list of my favorites fruits:&lt;br&gt;
Apple &lt;br&gt;
Banana&lt;br&gt;
Watermelon&lt;br&gt;
But most of all, Grapes&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;
• List items; Most websites users don’t like to read a lot of text so putting your information in form of a list (&lt;/p&gt;
&lt;li&gt;……&lt;/li&gt;)either in numbers or bullets will be helpful. The numbered list are called ordered list (&lt;ol&gt;……..&lt;/ol&gt;), while the bulleted list are called unordered list (&lt;ul&gt;……..&lt;/ul&gt;). An ordered list goes like this.

&lt;ol&gt;
&lt;li&gt;my first item on the list&lt;/li&gt;
&lt;li&gt;my second item on the list&lt;/li&gt;
&lt;li&gt;my third item on the list&lt;/li&gt;
&lt;li&gt;my fourth item on the list&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the browser, it will appear like this;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; my first item on the list.&lt;/li&gt;
&lt;li&gt; my second item on the list.&lt;/li&gt;
&lt;li&gt; my third item on the list.&lt;/li&gt;
&lt;li&gt; my fourth item on the list. 
An unordered list or bulleted list goes like this;
&lt;ul&gt;
&lt;li&gt;my first item on the list&lt;/li&gt;
&lt;li&gt;my second item on the list&lt;/li&gt;
&lt;li&gt;my third item on the list&lt;/li&gt;
&lt;li&gt;my fourth item on the list&lt;/li&gt;
&lt;/ul&gt;
In the browser, it should appear like this; &lt;/li&gt;
&lt;li&gt; my first item on the list.&lt;/li&gt;
&lt;li&gt;  my second item on the list.&lt;/li&gt;
&lt;li&gt; my third item on the list.&lt;/li&gt;
&lt;li&gt;  my fourth item on the list.
Uses of HTML
• Client-side storage: With HTML5, Client-side storage is feasible Using local storage and index DB. Index DB is a better and larger client-side data store. It can be expanded with the user’s permission.
• Web document creation: Html is used to design and create documents on the web(including the head, the title and the body).
• Web page development: HTML is mainly used for creating pages on the World wide web. Every page on the web is written using a version of  html code and contains a set of html tags including hyperlinks which connects users to other pages.
• Data entry support with html: Html5 is used to support data entry. Html5 has developed new attributes to drive on-screen keyboards, validations and other data-experiences to enable users to have a better data entry.
• Internet navigation: This is one of the most important uses of html, which is made possible by utilizing the concept of Hypertext. This is a text that enables users to navigate  webpages and between websites located on different servers.
Other uses of html includes:
• Cutting edge feature
• Game development usage
• Responsive images on webpages
• Offline capabilities usage
• Native APIs usage to enrich a website
CONCLUSION
You have successfully made it to the end of this article! At this point, you should be able to understand what html looks like and how it works. If you are able to understand these basics concepts of html, you are off to a great start because usage of html is widespread and has become more sophisticated than ever before. It is your responsibility as a developer to put applications of html concepts in real time usage.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>We measured maintainer response time in Issues and PRs for 90k GitHub repos</title>
      <author>Quine</author>
      <pubDate>Fri, 15 Oct 2021 16:33:56 +0000</pubDate>
      <link>https://dev.to/quine_sh/we-measured-maintainer-response-time-in-issues-and-prs-for-90k-github-repos-2pcb</link>
      <guid>https://dev.to/quine_sh/we-measured-maintainer-response-time-in-issues-and-prs-for-90k-github-repos-2pcb</guid>
      <description>&lt;p&gt;Writing an open-source contribution is difficult and time-consuming, but so is reviewing it and maintaining it. For this reason, contributing to open source is a two-sided investment decision. On the one hand, contributors invest their time and energy writing high-quality code and understanding how their submission fits in the storyline of the repo. On the other hand, maintainers allocate time and attention to review the PR and tacitly make a long-term commitment to look after the wellbeing of the contribution. When a PR is finally merged, the time and effort that was put into writing and reviewing it converts into exponential value for the authors, the reviewers, and the ecosystem!&lt;/p&gt;

&lt;p&gt;Unfortunately, contributor stories does not always end in happy merges. The open source ecosystem is flooded with abandoned open issues and neglected pull-requests, which speaks about fundamental mismatches between repo's communities and aspiring contributors. We at Quine think this is mainly a data problem.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Would you invest time opening an issue if you knew the repo is abandoned?&lt;/em&gt; &lt;em&gt;Is your community more unresponsive that the "other" competing repo?&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;To address these information asymmetries we built &lt;strong&gt;&lt;em&gt;repo detail page&lt;/em&gt;&lt;/strong&gt;, a statistical dashboard that helps contributors and maintainers understand the health of a repository at the community level. To start with, we created a &lt;strong&gt;response time graph&lt;/strong&gt; that measures the (median) time it takes maintainers to respond to issues, and the time it takes for pull requests to be merged after being initially submitted. Your time is valuable, but so is the time of maintainers. Understanding the activity and responsiveness of the community you aspire to join can help you make an informed decision on where to invest your time and energy. For maintainers, the response time graph can help understand the internal dynamics of their community and provide a better contributor experience 🙂&lt;/p&gt;

&lt;p&gt;Response time graphs are already available for the 90,000 most popular open source repositories on Github. To access them, signup &lt;a href="https://quine.sh"&gt;here&lt;/a&gt;! &lt;/p&gt;

&lt;p&gt;Quine's just getting started ✨ Follow us &lt;a href="https://twitter.com/quine_sh"&gt;on Twitter&lt;/a&gt; or join &lt;a href="https://discord.com/invite/ChAuP3SC5H"&gt;our Discord server&lt;/a&gt; if you want to be in the loop!&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
      <category>github</category>
    </item>
    <item>
      <title>Top 10 trending github repos of the week🌟.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Fri, 15 Oct 2021 15:52:48 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-trending-github-repos-of-the-week-35bc</link>
      <guid>https://dev.to/ksengine/top-10-trending-github-repos-of-the-week-35bc</guid>
      <description>&lt;p&gt;GitHub is where over 65 million developers shape the future of software, together. Contribute to the open source community, manage your Git repositories, review code like a pro, track bugs and features, power your CI/CD and DevOps workflows, and secure code before you commit it.&lt;/p&gt;

&lt;p&gt;Here is the most popular repos published on this platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/louislam"&gt;
        louislam
      &lt;/a&gt; / &lt;a href="https://github.com/louislam/uptime-kuma"&gt;
        uptime-kuma
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A fancy self-hosted monitoring tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Uptime Kuma&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://camo.githubusercontent.com/eac777f5dd7cc7cab02b7e7600db2c1172e816985d302490df59ea0842931a62/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6c6f7569736c616d2f757074696d652d6b756d61"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/louislam/uptime-kuma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/84f55f44da98f4f9e7b743d23015c5c44f7ade03c0ab3ae18e0bf2b904effbfe/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6c6f7569736c616d2f757074696d652d6b756d61"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/louislam/uptime-kuma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e513f793946b0a9f7c581aad3b13233dd57ee41cb333b8434398a9b8305fc007/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f762f6c6f7569736c616d2f757074696d652d6b756d612f6c61746573743f6c6162656c3d646f636b6572253230696d6167652532307665722e"&gt;&lt;/a&gt; &lt;a href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://camo.githubusercontent.com/dcd9ea6b2cc7f4d2b3a06548811deecefaea6724fbf8fe57ad9003ec9c9f909f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6c6f7569736c616d2f757074696d652d6b756d61"&gt;&lt;/a&gt;  &lt;a href="https://opencollective.com/uptime-kuma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb875182ae299319ea43c876bc805c8c13056f74a1d14857ebd9fdb2c4127db9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f757074696d652d6b756d612f746f74616c2f62616467652e7376673f6c6162656c3d4261636b65727326636f6c6f723d627269676874677265656e"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div width="100%"&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/louislam/uptime-kuma./public/icon.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0r4nfdls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/louislam/uptime-kuma./public/icon.svg" width="128" alt=""&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;It is a self-hosted monitoring tool like "Uptime Robot".&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9674a2b1b7d094b060fd79e6df7dca10b86a484ce6015b2668cff768dfc786ee/68747470733a2f2f757074696d652e6b756d612e7065742f696d672f6461726b2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/9674a2b1b7d094b060fd79e6df7dca10b86a484ce6015b2668cff768dfc786ee/68747470733a2f2f757074696d652e6b756d612e7065742f696d672f6461726b2e6a7067" width="700" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
🥔 Live Demo&lt;/h2&gt;
&lt;p&gt;Try it!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://demo.uptime.kuma.pet" rel="nofollow"&gt;https://demo.uptime.kuma.pet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is a 10 minutes live demo, all data will be deleted after that. The server is located at Tokyo, if you live far away from here, it may affact your experience. I suggest that you should install to try it.&lt;/p&gt;
&lt;p&gt;VPS is sponsored by Uptime Kuma sponsors on &lt;a href="https://opencollective.com/uptime-kuma" rel="nofollow"&gt;Open Collective&lt;/a&gt;! Thank you so much!&lt;/p&gt;
&lt;h2&gt;
⭐ Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Monitoring uptime for HTTP(s) / TCP / Ping / DNS Record / Push.&lt;/li&gt;
&lt;li&gt;Fancy, Reactive, Fast UI/UX.&lt;/li&gt;
&lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications"&gt;70+ notification services, click here for the full list&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;20 seconds interval.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/languages"&gt;Multi Languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simple Status Page&lt;/li&gt;
&lt;li&gt;Ping Chart&lt;/li&gt;
&lt;li&gt;Certificate Info&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
🔧 How to Install&lt;/h2&gt;
&lt;h3&gt;
🐳 Docker&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;docker volume create uptime-kuma
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Browse to &lt;a href="http://localhost:3001" rel="nofollow"&gt;http://localhost:3001&lt;/a&gt; after started.&lt;/p&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/louislam/uptime-kuma"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/facebook"&gt;
        facebook
      &lt;/a&gt; / &lt;a href="https://github.com/facebook/flipper"&gt;
        flipper
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A desktop debugging platform for mobile developers.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61c446d6a94563556b5a021ce98908578cf7d795383144cb32e566d6c2b32758/68747470733a2f2f6662666c69707065722e636f6d2f696d672f69636f6e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/61c446d6a94563556b5a021ce98908578cf7d795383144cb32e566d6c2b32758/68747470733a2f2f6662666c69707065722e636f6d2f696d672f69636f6e2e706e67" alt="logo" width="20%"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
  Flipper
&lt;/h1&gt;

&lt;p&gt;
  &lt;a href="https://search.maven.org/artifact/com.facebook.flipper/flipper" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/225183f2c2332411e3f9aa5cb316048a15ced8badbf0f859230e4093235b7770/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e66616365626f6f6b2e666c69707065722f666c6970706572" alt="Android Maven Badge"&gt;
  &lt;/a&gt;
  &lt;a href="https://cocoapods.org/pods/Flipper" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/6c8fa4d21086bdaabc377eb33a0cb8cabaeca19edd630eefdb78f925c6fe6f0b/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f466c69707065724b69742e7376673f6c6162656c3d694f5326636f6c6f723d626c7565" alt="iOS"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  Flipper (formerly Sonar) is a platform for debugging mobile apps on iOS and Android. Visualize, inspect, and control your apps from a simple desktop interface. Use Flipper as is or extend it using the plugin API
&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/facebook/flipper/website/static/img/layout.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YrekD7B8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/facebook/flipper/website/static/img/layout.png" alt="Flipper"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#mobile-development"&gt;Mobile development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#extending-flipper"&gt;Extending Flipper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#contributing-to-flipper"&gt;Contributing to Flipper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#in-this-repo"&gt;In this repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/facebook/flipper#getting-started"&gt;Getting started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/facebook/flipper#building-from-source"&gt;Building from Source&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/facebook/flipper#desktop"&gt;Desktop&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#running-from-source"&gt;Running from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#building-standalone-application"&gt;Building standalone application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#ios-sdk--sample-app"&gt;iOS SDK + Sample App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#android-sdk--sample-app"&gt;Android SDK + Sample app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/flipper#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Mobile development&lt;/h2&gt;
&lt;p&gt;Flipper aims to be your number one companion for mobile app development on iOS and Android. Therefore, we provide a bunch of useful tools, including a log viewer, interactive layout inspector, and network inspector.&lt;/p&gt;
&lt;h2&gt;
Extending Flipper&lt;/h2&gt;
&lt;p&gt;Flipper is built as a platform. In addition to using the tools already included, you can create your own plugins to visualize and debug data from your mobile apps. Flipper takes care of sending data back…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/facebook/flipper"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/goplus"&gt;
        goplus
      &lt;/a&gt; / &lt;a href="https://github.com/goplus/gop"&gt;
        gop
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      GoPlus - The Go+ language for engineering, STEM education, and data science
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
The Go+ language for engineering, STEM education, and data science&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/goplus/gop/actions/workflows/go.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9SZsXtL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goplus/gop/actions/workflows/go.yml/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/goplus/gop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eae2e75fbf689feb5ed01d7285ffb04c6882afad2376feaff9c696dc5c5ce5db/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f676f706c75732f676f70" alt="Go Report Card"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/goplus/gop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aaa5a3c16fb37dd3adb8f1ea56cdbb692e5d086757ae68963797562a27632e4a/68747470733a2f2f636f6465636f762e696f2f67682f676f706c75732f676f702f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/goplus/gop/releases"&gt;&lt;img src="https://camo.githubusercontent.com/5b36a5df2f29729453f846f5c46493b657126545036e47e0f3c42d93f57c4763/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f676f706c75732f676f702e7376673f6c6162656c3d72656c65617365" alt="GitHub release"&gt;&lt;/a&gt;
&lt;a href="https://play.goplus.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9c6a265d47eb80859ed5e261bae36588046e34ac156c5c9e2a2de0eb7bde4fa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c617967726f756e642d476f2b2d626c75652e737667" alt="Playground"&gt;&lt;/a&gt;
&lt;a href="https://github.com/gopcode/vscode-goplus"&gt;&lt;img src="https://camo.githubusercontent.com/800e8b74cd27fc9aadb68e1bded9bf62e36d6706cde1b30e4294b23b098627b6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7673636f64652d476f2b2d7465616c2e737667" alt="VSCode"&gt;&lt;/a&gt;
&lt;a href="https://github.com/goplus/gop/blob/main/README_zh.md"&gt;&lt;img src="https://camo.githubusercontent.com/f2810c819c8266336f23f6ea4c802d3434bda3f91c9d6801af97bac5fb10da0e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f524541444d452d2545342542382541442545362539362538372d7465616c2e737667" alt="Readme"&gt;&lt;/a&gt;
&lt;a href="https://pkg.go.dev/mod/github.com/goplus/gop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1e02678fae25a0cc367e202eaed93c76629769623138bc3dc4ff5e9852572cc0/68747470733a2f2f706b672e676f2e6465762f62616467652f6769746875622e636f6d2f676f706c75732f676f702e737667" alt="GoDoc"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Summary about Go+&lt;/h2&gt;
&lt;p&gt;What are mainly impressions about Go+?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A static typed language.&lt;/li&gt;
&lt;li&gt;Fully compatible with &lt;a href="https://github.com/golang/go"&gt;the Go language&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Script-like style, and more readable code for data science than Go.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, the following is legal Go+ source code:&lt;/p&gt;
&lt;div class="highlight highlight-source-go position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;:=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;]
&lt;span class="pl-smi"&gt;println&lt;/span&gt;(&lt;span class="pl-s1"&gt;a&lt;/span&gt;)&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;How do we do this in the Go language?&lt;/p&gt;
&lt;div class="highlight highlight-source-go position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;"fmt"&lt;/span&gt;

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-s1"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;:=&lt;/span&gt; []&lt;span class="pl-smi"&gt;float64&lt;/span&gt;{&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.4&lt;/span&gt;}
    &lt;span class="pl-s1"&gt;fmt&lt;/span&gt;.&lt;span class="pl-en"&gt;Println&lt;/span&gt;(&lt;span class="pl-s1"&gt;a&lt;/span&gt;)
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Of course, we don't only do less-typing things.&lt;/p&gt;
&lt;p&gt;For example, we support &lt;a href="https://en.wikipedia.org/wiki/List_comprehension" rel="nofollow"&gt;list comprehension&lt;/a&gt;, which makes data processing easier.&lt;/p&gt;
&lt;div class="highlight highlight-source-go position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;:=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;]
&lt;span class="pl-s1"&gt;b&lt;/span&gt; &lt;span class="pl-c1"&gt;:=&lt;/span&gt; [&lt;span class="pl-s1"&gt;x&lt;/span&gt;&lt;span class="pl-c1"&gt;*&lt;/span&gt;&lt;span class="pl-s1"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-s1"&gt;x&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;-&lt;/span&gt; &lt;span class="pl-s1"&gt;a&lt;/span&gt;, &lt;span class="pl-s1"&gt;x&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;]
&lt;span class="pl-smi"&gt;println&lt;/span&gt;(&lt;span class="pl-s1"&gt;b&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/goplus/gop"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Slurmio"&gt;
        Slurmio
      &lt;/a&gt; / &lt;a href="https://github.com/Slurmio/school-dev-k8s"&gt;
        school-dev-k8s
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
school-dev-k8s&lt;/h1&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Slurmio/school-dev-k8s"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  #5
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/babysor"&gt;
        babysor
      &lt;/a&gt; / &lt;a href="https://github.com/babysor/MockingBird"&gt;
        MockingBird
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀AI拟声: 5秒内克隆您的声音并生成任意语音内容 Clone a voice in 5 seconds to generate arbitrary speech in real-time
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/12797292/131216767-6eb251d6-14fc-4951-8324-2722f0cd4c63.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Zhp6TWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12797292/131216767-6eb251d6-14fc-4951-8324-2722f0cd4c63.jpg" alt="mockingbird"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://choosealicense.com/licenses/mit/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dd1c858e94a371529a0a4c359bc95f18f09ba4a5fc0e658950bcb1383ea40fc9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174" alt="MIT License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;English | &lt;a href="https://github.com/babysor/MockingBirdREADME-CN.md"&gt;中文&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;🌍 &lt;strong&gt;Chinese&lt;/strong&gt; supported mandarin and tested with multiple datasets: aidatatang_200zh, magicdata, aishell3, data_aishell, and etc.&lt;/p&gt;
&lt;p&gt;🤩 &lt;strong&gt;PyTorch&lt;/strong&gt; worked for pytorch, tested in version of 1.9.0(latest in August 2021), with GPU Tesla T4 and GTX 2060&lt;/p&gt;
&lt;p&gt;🌍 &lt;strong&gt;Windows + Linux&lt;/strong&gt; run in both Windows OS and linux OS (even in M1 MACOS)&lt;/p&gt;
&lt;p&gt;🤩 &lt;strong&gt;Easy &amp;amp; Awesome&lt;/strong&gt; effect with only newly-trained synthesizer, by reusing the pretrained encoder/vocoder&lt;/p&gt;
&lt;p&gt;🌍 &lt;strong&gt;Webserver Ready&lt;/strong&gt; to serve your result with remote calling&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://www.bilibili.com/video/BV17Q4y1B7mY/" rel="nofollow"&gt;DEMO VIDEO&lt;/a&gt;
&lt;/h3&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;h3&gt;
1. Install Requirements&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Follow the original repo to test if you got all environment ready
**Python 3.7 or higher ** is needed to run the toolbox.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://pytorch.org/get-started/locally/" rel="nofollow"&gt;PyTorch&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If you get an &lt;code&gt;ERROR: Could not find a version that satisfies the requirement torch==1.9.0+cu102 (from versions: 0.1.2, 0.1.2.post1, 0.1.2.post2 )&lt;/code&gt; This error is probably due to a low version of python, try using 3.9 and it will…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/babysor/MockingBird"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  #6
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lvgl"&gt;
        lvgl
      &lt;/a&gt; / &lt;a href="https://github.com/lvgl/lvgl"&gt;
        lvgl
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Powerful and easy-to-use embedded GUI library with many widgets, advanced visual effects (opacity, antialiasing, animations) and low memory requirements (16K RAM, 64K Flash).
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
 LVGL - Light and Versatile Graphics Library&lt;/h1&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b9f59645f486900c0f75fb74b2af9fefbda3575ead45de9194d60e8176c02f40/68747470733a2f2f6c76676c2e696f2f6173736574732f696d616765732f6c76676c5f776964676574735f64656d6f2e676966"&gt;&lt;img src="https://camo.githubusercontent.com/b9f59645f486900c0f75fb74b2af9fefbda3575ead45de9194d60e8176c02f40/68747470733a2f2f6c76676c2e696f2f6173736574732f696d616765732f6c76676c5f776964676574735f64656d6f2e676966"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
LVGL provides everything you need to create an embedded GUI with easy-to-use graphical elements, beautiful visual effects and a low memory footprint
&lt;/p&gt;

&lt;h4&gt;
&lt;a href="https://lvgl.io" rel="nofollow"&gt;Website &lt;/a&gt; ·
&lt;a href="https://docs.lvgl.io/" rel="nofollow"&gt;Docs&lt;/a&gt; ·
&lt;a href="https://forum.lvgl.io" rel="nofollow"&gt;Forum&lt;/a&gt;  ·
&lt;a href="https://lvgl.io/services" rel="nofollow"&gt;Services&lt;/a&gt;  ·
&lt;a href="https://docs.lvgl.io/master/examples.html" rel="nofollow"&gt;Interactive examples&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
Table of content&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lvgl/lvgl#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lvgl/lvgl#get-started"&gt;Get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lvgl/lvgl#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lvgl/lvgl#services"&gt;Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lvgl/lvgl#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;h3&gt;
Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Powerful &lt;a href="https://docs.lvgl.io/master/widgets/index.html" rel="nofollow"&gt;building blocks&lt;/a&gt;: buttons, charts, lists, sliders, images, etc.&lt;/li&gt;
&lt;li&gt;Advanced graphics engine: animations, anti-aliasing, opacity, smooth scrolling, blending modes, etc&lt;/li&gt;
&lt;li&gt;Supports &lt;a href="https://docs.lvgl.io/master/overview/indev.html" rel="nofollow"&gt;various input devices&lt;/a&gt;: touchscreen, mouse, keyboard, encoder, buttons, etc.&lt;/li&gt;
&lt;li&gt;Supports &lt;a href="https://docs.lvgl.io/master/overview/display.html" rel="nofollow"&gt;multiple displays&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Hardware independent, can be use with any microcontroller and display&lt;/li&gt;
&lt;li&gt;Scalable to operate with little memory (64 kB Flash, 16 kB RAM)&lt;/li&gt;
&lt;li&gt;Multi-language support with UTF-8 handling, CJK, Bidirectional and Arabic script support&lt;/li&gt;
&lt;li&gt;Fully customizable graphical elements via &lt;a href="https://docs.lvgl.io/master/overview/style.html" rel="nofollow"&gt;CSS-like styles&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Powerful layouts inspired by CSS: &lt;a href="https://docs.lvgl.io/master/layouts/flex.html" rel="nofollow"&gt;Flexbox&lt;/a&gt; and &lt;a href="https://docs.lvgl.io/master/layouts/grid.html" rel="nofollow"&gt;Grid&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;OS, External memory and GPU are supported but not required. (built in support for STM32 DMA2D, and…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lvgl/lvgl"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  #7
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trailofbits"&gt;
        trailofbits
      &lt;/a&gt; / &lt;a href="https://github.com/trailofbits/algo"&gt;
        algo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Set up a personal VPN in the cloud
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Algo VPN&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://twitter.com/AlgoVPN" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c67d8bb0ef4a515150ad9e3152a32aa81b9eec7dad29ba40cdee13b12f08a3ad/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f666f6c645f6c6566742e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77253230253430416c676f56504e" alt="Twitter"&gt;&lt;/a&gt;
&lt;a href="https://github.com/trailofbits/algo/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MonGebmK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trailofbits/algo/workflows/Main/badge.svg%3Fbranch%3Dmaster" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Algo VPN is a set of Ansible scripts that simplify the setup of a personal WireGuard and IPsec VPN. It uses the most secure defaults available and works with common cloud providers. See our &lt;a href="https://blog.trailofbits.com/2016/12/12/meet-algo-the-vpn-that-works/" rel="nofollow"&gt;release announcement&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Supports only IKEv2 with strong crypto (AES-GCM, SHA2, and P-256) for iOS, macOS, and Linux&lt;/li&gt;
&lt;li&gt;Supports &lt;a href="https://www.wireguard.com/" rel="nofollow"&gt;WireGuard&lt;/a&gt; for all of the above, in addition to Android and Windows 10&lt;/li&gt;
&lt;li&gt;Generates .conf files and QR codes for iOS, macOS, Android, and Windows WireGuard clients&lt;/li&gt;
&lt;li&gt;Generates Apple profiles to auto-configure iOS and macOS devices for IPsec - no client software required&lt;/li&gt;
&lt;li&gt;Includes a helper script to add and remove users&lt;/li&gt;
&lt;li&gt;Blocks ads with a local DNS resolver (optional)&lt;/li&gt;
&lt;li&gt;Sets up limited SSH users for tunneling traffic (optional)&lt;/li&gt;
&lt;li&gt;Based on current versions of Ubuntu and strongSwan&lt;/li&gt;
&lt;li&gt;Installs to DigitalOcean, Amazon Lightsail, Amazon EC2, Vultr, Microsoft Azure, Google Compute Engine, Scaleway, OpenStack…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trailofbits/algo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  #8
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hrsh7th"&gt;
        hrsh7th
      &lt;/a&gt; / &lt;a href="https://github.com/hrsh7th/nvim-cmp"&gt;
        nvim-cmp
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A completion plugin for neovim coded in Lua.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
nvim-cmp&lt;/h1&gt;
&lt;p&gt;A completion engine plugin for neovim written in Lua
Completion sources are installed from external repositories and "sourced".&lt;/p&gt;
&lt;p&gt;
  
    

    &lt;span class="m-1"&gt;Kapture.2021-10-11.at.12.12.19.mp4&lt;/span&gt;
  

  

  

&lt;/p&gt;

&lt;h1&gt;
Readme!&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;nvim-cmp's breaking changes are &lt;a href="https://github.com/hrsh7th/nvim-cmp/issues/231"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;This is my hobby project. You can support me via GitHub sponsors.&lt;/li&gt;
&lt;li&gt;The bug reports are welcome, but I might not fix if you don't provide a minimal reproduction configuration and steps.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
Concept&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;No flicker&lt;/li&gt;
&lt;li&gt;Works properly&lt;/li&gt;
&lt;li&gt;Fully customizable via Lua functions&lt;/li&gt;
&lt;li&gt;Fully supported LSP's Completion capabilities
&lt;ul&gt;
&lt;li&gt;Snippets&lt;/li&gt;
&lt;li&gt;CommitCharacters&lt;/li&gt;
&lt;li&gt;TriggerCharacters&lt;/li&gt;
&lt;li&gt;TextEdit and InsertReplaceTextEdit&lt;/li&gt;
&lt;li&gt;AdditionalTextEdits&lt;/li&gt;
&lt;li&gt;Markdown documentation&lt;/li&gt;
&lt;li&gt;Execute commands (Some LSP server needs it to auto-importing. e.g. &lt;code&gt;sumneko_lua&lt;/code&gt; or &lt;code&gt;purescript-language-server&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Preselect&lt;/li&gt;
&lt;li&gt;CompletionItemTags&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Support pairs-wise plugin automatically&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
Setup&lt;/h1&gt;

&lt;h3&gt;
Recommended Configuration&lt;/h3&gt;

&lt;p&gt;This example configuration is using &lt;code&gt;vim-plug&lt;/code&gt;.&lt;/p&gt;

&lt;div class="highlight highlight-source-viml position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;plug_dir&lt;/span&gt;)
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;neovim/nvim-lspconfig&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hrsh7th/cmp-nvim-lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hrsh7th/cmp-buffer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hrsh7th/nvim-cmp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; For vsnip user.&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hrsh7th/cmp-vsnip&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hrsh7th/vim-vsnip&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; For luasnip&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hrsh7th/nvim-cmp"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9"&gt;
  &lt;/a&gt;
  #9
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/argoproj"&gt;
        argoproj
      &lt;/a&gt; / &lt;a href="https://github.com/argoproj/argo-cd"&gt;
        argo-cd
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Declarative continuous deployment for Kubernetes.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/argoproj/argo-cd/actions?query=workflow%3A%22Integration+tests%22"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VvyAJ2X3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/argoproj/argo-cd/workflows/Integration%2520tests/badge.svg%3Fbranch%3Dmaster" alt="Integration tests"&gt;&lt;/a&gt;
&lt;a href="https://argoproj.github.io/community/join-slack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3577de2235b140195f4d59a722b7e4a0fd2922de8b933cc2145abaac718554c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6172676f70726f6a2d627269676874677265656e2e7376673f6c6f676f3d736c61636b" alt="slack"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/argoproj/argo-cd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4da97e3fc5657fef0a34d2809552f76ed4e182e4dd221f9d5b64bdd2e39ed563/68747470733a2f2f636f6465636f762e696f2f67682f6172676f70726f6a2f6172676f2d63642f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://github.com/argoproj/argo-cd/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/82038ce45eae21eb815fb0e115e5d7cfdd746b076ec1ddb1d61e4757a904af8b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6172676f70726f6a2f6172676f2d63643f6c6162656c3d6172676f2d6364" alt="Release Version"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/4486" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ce16a1b096bf3bf140dd061f54c73071dca8e982e354179f6f11dae8d35175b/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f343438362f6261646765" alt="CII Best Practices"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Argo CD - Declarative Continuous Delivery for Kubernetes&lt;/h1&gt;
&lt;h2&gt;
What is Argo CD?&lt;/h2&gt;
&lt;p&gt;Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/argoproj/argo-cddocs/assets/argocd-ui.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0970yBi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/argoproj/argo-cddocs/assets/argocd-ui.gif" alt="Argo CD UI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/0WAm0y2vLIo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d57550d6b798c15ef2cfbdc949bb74151211c8750cc14bfed146bc5a08e28c8/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f3057416d307932764c496f2f302e6a7067" alt="Argo CD Demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Why Argo CD?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Application definitions, configurations, and environments should be declarative and version controlled.&lt;/li&gt;
&lt;li&gt;Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Who uses Argo CD?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/argoproj/argo-cdUSERS.md"&gt;Official Argo CD user list&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;To learn more about Argo CD &lt;a href="https://argo-cd.readthedocs.io/" rel="nofollow"&gt;go to the complete documentation&lt;/a&gt;
Check live demo at &lt;a href="https://cd.apps.argoproj.io/" rel="nofollow"&gt;https://cd.apps.argoproj.io/&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Community&lt;/h2&gt;
&lt;h3&gt;
Contribution, Discussion and Support&lt;/h3&gt;
&lt;p&gt;You can reach the Argo CD community and developers via the following channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Q &amp;amp; A : &lt;a href="https://github.com/argoproj/argo-cd/discussions"&gt;Github Discussions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chat : &lt;a href="https://argoproj.github.io/community/join-slack" rel="nofollow"&gt;The #argo-cd Slack channel&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Contributors Office Hours: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com" rel="nofollow"&gt;Every Thursday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ" rel="nofollow"&gt;Agenda&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;User Community meeting: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com" rel="nofollow"&gt;Every other Wednesday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8" rel="nofollow"&gt;Agenda&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Participation in the Argo CD project is governed by the &lt;a href="https://github.com/cncf/foundation/blob/master/code-of-conduct.md"&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Blogs and Presentations&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://youtu.be/eEcgn_gU3SM" rel="nofollow"&gt;Combining Argo CD (GitOps), Crossplane (Control Plane), And KubeVela (OAM)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/argoproj/argo-cd"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#10"&gt;
  &lt;/a&gt;
  #10
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ossrs"&gt;
        ossrs
      &lt;/a&gt; / &lt;a href="https://github.com/ossrs/srs"&gt;
        srs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SRS is a simple, high efficiency and realtime video server, supports RTMP/WebRTC/HLS/HTTP-FLV/SRT/GB28181.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
SRS(Simple Realtime Server)&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c6beb26f0ee210a925c67d128d38421a1c4e369a119a9bf50ff91f0a5c08ebf0/687474703a2f2f6f737372732e6e65742f6769662f76312f736c732e6769663f736974653d6769746875622e636f6d26706174683d2f7372732f342e3072656c65617365"&gt;&lt;img src="https://camo.githubusercontent.com/c6beb26f0ee210a925c67d128d38421a1c4e369a119a9bf50ff91f0a5c08ebf0/687474703a2f2f6f737372732e6e65742f6769662f76312f736c732e6769663f736974653d6769746875622e636f6d26706174683d2f7372732f342e3072656c65617365" alt=""&gt;&lt;/a&gt;
&lt;a href="https://github.com/ossrs/srs/actions?query=workflow%3ACodeQL+branch%3A4.0release"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XVHy8B36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ossrs/srs/actions/workflows/codeql-analysis.yml/badge.svg%3Fbranch%3D4.0release" alt=""&gt;&lt;/a&gt;
&lt;a href="https://github.com/ossrs/srs/actions/workflows/release.yml?query=workflow%3ARelease"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oe2by-KA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ossrs/srs/actions/workflows/release.yml/badge.svg" alt=""&gt;&lt;/a&gt;
&lt;a href="https://github.com/ossrs/srs/actions?query=workflow%3ATest+branch%3A4.0release"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WNLgPw2T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ossrs/srs/actions/workflows/test.yml/badge.svg%3Fbranch%3D4.0release" alt=""&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/ossrs/srs/branch/4.0release" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cb0b3a69f8c6c17baba350004a71448166cef410ae10e5160833f0b80078433/68747470733a2f2f636f6465636f762e696f2f67682f6f737372732f7372732f6272616e63682f342e3072656c656173652f67726170682f62616467652e737667" alt=""&gt;&lt;/a&gt;
&lt;a href="https://github.com/ossrs/srs../../wikis/Contact#wechat"&gt;&lt;img src="https://camo.githubusercontent.com/2cea1d9cc3d33fa80493551c25fb6fd3a51e4e728eb54f5e2f83fac8f876a999/68747470733a2f2f67697465652e636f6d2f77696e6c696e7669702f7372732d77696b692f7261772f6d61737465722f696d616765732f7765636861742d6261646765322e706e67" alt=""&gt;&lt;/a&gt;
&lt;a href="http://bbs.ossrs.net" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a105ca4eea4541a1778b12a480f1d91e29dbeeb209b7a51ccd324f3aaeded977/68747470733a2f2f67697465652e636f6d2f77696e6c696e7669702f7372732d77696b692f7261772f6d61737465722f696d616765732f626273322e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SRS/4.0，&lt;a href="https://github.com/ossrs/srs/wiki/v4_CN_Product#release40"&gt;Leo&lt;/a&gt;，是一个简单高效的实时视频服务器，支持RTMP/WebRTC/HLS/HTTP-FLV/SRT。&lt;/p&gt;
&lt;p&gt;SRS is a simple, high efficiency and realtime video server, supports RTMP/WebRTC/HLS/HTTP-FLV/SRT.&lt;/p&gt;
&lt;p&gt;SRS is licenced under &lt;a href="https://github.com/ossrs/srs/blob/4.0release/LICENSE"&gt;MIT&lt;/a&gt;, but some depended libraries are distributed using their &lt;a href="https://github.com/ossrs/srs/wiki/LicenseMixing"&gt;own licenses&lt;/a&gt;.&lt;/p&gt;


&lt;h2&gt;
Usage&lt;/h2&gt;

&lt;p&gt;Build SRS from source or &lt;strong&gt;docker(&lt;a href="https://github.com/ossrs/srs/wiki/v4_CN_Home#docker"&gt;CN&lt;/a&gt; / &lt;a href="https://github.com/ossrs/srs/wiki/v4_EN_Home#docker"&gt;EN&lt;/a&gt;)&lt;/strong&gt;, please read &lt;strong&gt;Wiki: Gettting Started(&lt;a href="https://github.com/ossrs/srs/wiki/v4_CN_Home#getting-started"&gt;CN&lt;/a&gt; / &lt;a href="https://github.com/ossrs/srs/wiki/v4_EN_Home#getting-started"&gt;EN&lt;/a&gt;)&lt;/strong&gt;:&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;git clone -b 4.0release https://gitee.com/ossrs/srs.git &amp;amp;&amp;amp;amp
cd srs/trunk &amp;amp;&amp;amp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; ./objs/srs -c conf/srs.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open &lt;a href="http://localhost:8080/" rel="nofollow"&gt;http://localhost:8080/&lt;/a&gt; to check it, then publish
by &lt;a href="https://ffmpeg.org/download.html" rel="nofollow"&gt;FFmpeg&lt;/a&gt; or &lt;a href="https://obsproject.com/download" rel="nofollow"&gt;OBS&lt;/a&gt; as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;ffmpeg -re -i ./doc/source.flv -c copy -f flv -y rtmp://localhost/live/livestream&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: It's also able to &lt;a href="http://localhost:8080/players/rtc_publisher.html?autostart=true" rel="nofollow"&gt;publish by H5&lt;/a&gt; if WebRTC is enabled.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Play the following streams by &lt;a href="https://ossrs.net" rel="nofollow"&gt;players&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RTMP (by &lt;a href="https://www.videolan.org/" rel="nofollow"&gt;VLC&lt;/a&gt;): rtmp://localhost/live/livestream&lt;/li&gt;
&lt;li&gt;H5(HTTP-FLV): &lt;a href="http://localhost:8080/players/srs_player.html?autostart=true&amp;amp;stream=livestream.flv&amp;amp;port=8080&amp;amp;schema=http" rel="nofollow"&gt;http://localhost:8080/live/livestream.flv&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;H5(HLS): &lt;a href="http://localhost:8080/players/srs_player.html?autostart=true&amp;amp;stream=livestream.m3u8&amp;amp;port=8080&amp;amp;schema=http" rel="nofollow"&gt;http://localhost:8080/live/livestream.m3u8&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;H5(WebRTC): &lt;a href="http://localhost:8080/players/rtc_player.html?autostart=true" rel="nofollow"&gt;webrtc://localhost/live/livestream&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From here, please read wikis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ossrs/srs/wiki/v4_EN_Home#getting-started"&gt;Getting Started&lt;/a&gt;, please read Wiki first.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ossrs/srs/wiki/v4_CN_Home#getting-started"&gt;中文文档：起步&lt;/a&gt;，不读Wiki一定扑街，不读文档请不要提Issue，不读文档请不要提问题，任何文档中明确说过的疑问都不会解答。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fast index for Wikis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Overview? (&lt;a href="https://github.com/ossrs/srs/wiki/v4_CN_Home"&gt;CN&lt;/a&gt;, &lt;a href="https://github.com/ossrs/srs/wiki/v4_EN_Home"&gt;EN&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;How…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ossrs/srs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Enjoy these repos.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks 💖💖💖&lt;/p&gt;

</description>
      <category>docker</category>
      <category>hacktoberfest</category>
      <category>uptime</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>Adding react-to-print in your project</title>
      <author>Beatriz Oliveira</author>
      <pubDate>Fri, 15 Oct 2021 15:43:49 +0000</pubDate>
      <link>https://dev.to/beatrizoliveira/adding-react-to-print-in-your-project-1d7m</link>
      <guid>https://dev.to/beatrizoliveira/adding-react-to-print-in-your-project-1d7m</guid>
      <description>&lt;p&gt;In this blogpost I'll show an added feature in a project already created &lt;strong&gt;My first project with React ts + Hooks&lt;/strong&gt; link to blogpost:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/beatrizoliveira" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3RtzkGm4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yFn0nB5M--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/556754/db096be3-acf3-4f8f-8358-0580f312e162.jpg" alt="beatrizoliveira"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/beatrizoliveira/my-first-project-with-react-ts-hooks-3mji" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My first project with React ts + Hooks&lt;/h2&gt;
      &lt;h3&gt;Beatriz Oliveira ・ Apr 4 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hooks&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#materialui&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
 
&lt;h2&gt;
  &lt;a href="#step-by-step"&gt;
  &lt;/a&gt;
  Step by Step
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#1-install-dependencies"&gt;
  &lt;/a&gt;
  1 - Install Dependencies
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# using yarn&lt;/span&gt;
yarn add react-to-print

&lt;span class="c"&gt;# using npm&lt;/span&gt;
npm i react-to-print
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#2-flow-of-the-new-feature"&gt;
  &lt;/a&gt;
  2 - Flow of the new Feature:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S9170mQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dnmkdhgrzki10f50sa4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9170mQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dnmkdhgrzki10f50sa4.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
An import concept is &lt;strong&gt;Lifting State Up&lt;/strong&gt; which consists of: when we want to add one or more features/components for certain functionality and manage them so that they work together we use the concept of elevating state so that the root component will be the manager of all child components.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4UmZRt7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg2sqihcc6cz9kbvhbtd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4UmZRt7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg2sqihcc6cz9kbvhbtd.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
See more in: &lt;a href="https://reactjs.org/docs/lifting-state-up.html#gatsby-focus-wrapper"&gt;https://reactjs.org/docs/lifting-state-up.html#gatsby-focus-wrapper&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-folder-structure"&gt;
  &lt;/a&gt;
  3 - Folder structure
&lt;/h3&gt;

&lt;p&gt;To best understand and visualization:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hpRy7j93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6fj4b7x00dpdh1v3zx5y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hpRy7j93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6fj4b7x00dpdh1v3zx5y.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-add-actionbutton"&gt;
  &lt;/a&gt;
  4 - Add ActionButton
&lt;/h3&gt;

&lt;p&gt;First, we will import all the dependencies that will be used and pass the type of the &lt;strong&gt;componentToPrint&lt;/strong&gt; function to be used:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/core/Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactToPrint&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-to-print&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ActionButtonProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;componentToPrint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MutableRefObject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And we create ActionButton function and we passed the componentToPrint function into the same, and return button print:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ReactToPrint&lt;/span&gt;
        &lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;print&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;contained&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Print&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;componentToPrint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We wrap the button with ReactToPrint and pass a trigger on it where the component will return and then an onClick.&lt;br&gt;
How we will use the useRef hook to return mutable objects via &lt;code&gt;.current&lt;/code&gt; and related components.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-we-passed-componenttoprint-to-todolist-component"&gt;
  &lt;/a&gt;
  5 - We passed ComponentToPrint to TodoList component
&lt;/h3&gt;

&lt;p&gt;We wrap the To component of the List with a div that links with componentToPrint:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentToPrint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TextField&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;IconButton&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AddIcon&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/IconButton&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;IconButton&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeleteIcon&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/IconButton&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#6-pass-componenttoprint-to-component-root-apptsx"&gt;
  &lt;/a&gt;
  6 - Pass componentToPrint to component Root (App.tsx)
&lt;/h3&gt;

&lt;p&gt;Coming to the last step we will pass the componentToprint on the parent component where it will manage the child components.&lt;/p&gt;

&lt;p&gt;We pass the componentToPrint function inside the App function and we will use the useRef hook to finish the relation of all the components that are part of the buttonPrint and we pass the componentToPrint as a parameter in their return:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;componentToPrint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TodoList&lt;/span&gt; &lt;span class="nx"&gt;componentToPrint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;componentToPrint&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ActionButton&lt;/span&gt; &lt;span class="nx"&gt;componentToPrint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;componentToPrint&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uo6pe8CH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93mfkjtk0ysjwia3qnyd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uo6pe8CH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93mfkjtk0ysjwia3qnyd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 GitHub: &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/beatrizoliveiira"&gt;
        beatrizoliveiira
      &lt;/a&gt; / &lt;a href="https://github.com/beatrizoliveiira/todolist"&gt;
        todolist
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Todo List + react hooks + material ui
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65451957/133009423-0dd2527e-96a3-4308-a402-7b513b4b7884.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RM7wPjwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65451957/133009423-0dd2527e-96a3-4308-a402-7b513b4b7884.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Todo-List&lt;/h2&gt;
&lt;p&gt;Well, the project that will be presented is very simple, but served to consolidate basic knowledge about React, I chose to use typescript, because the code becomes more readable and simple, but if you prefer you can use normal javascript.&lt;/p&gt;
&lt;h3&gt;
The project will use:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Typescript&lt;/li&gt;
&lt;li&gt;React Hooks&lt;/li&gt;
&lt;li&gt;Material UI&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Dev.to article with step by step&lt;/h3&gt;
&lt;p&gt;🔗 &lt;a href="https://dev.to/beatrizoliveira/my-first-project-with-react-ts-hooks-3mji" rel="nofollow"&gt;https://dev.to/beatrizoliveira/my-first-project-with-react-ts-hooks-3mji&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Dev.to article adding new feat print button&lt;/h3&gt;
&lt;p&gt;🔗 [ WIP ]&lt;/p&gt;
&lt;h3&gt;
New Feature &lt;a href="https://github.com/gregnb/react-to-print"&gt;react-to-print&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65451957/133009303-393635bd-0c71-4de1-ac50-51ce0d53f75e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IeFRDnxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65451957/133009303-393635bd-0c71-4de1-ac50-51ce0d53f75e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Getting Started&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1-&lt;/strong&gt; Clone repository.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2-&lt;/strong&gt; Install dependecies.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;yarn&lt;/span&gt;
&lt;span class="pl-c"&gt;// or&lt;/span&gt;
&lt;span class="pl-s1"&gt;yarn&lt;/span&gt; &lt;span class="pl-s1"&gt;install&lt;/span&gt;
&lt;span class="pl-c"&gt;// and&lt;/span&gt;
&lt;span class="pl-s1"&gt;yarn&lt;/span&gt; &lt;span class="pl-s1"&gt;start&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Demo&lt;/h3&gt;
&lt;p&gt;🔗 &lt;a href="https://todolist-git-master-beatrizoliveira250.vercel.app/" rel="nofollow"&gt;https://todolist-git-master-beatrizoliveira250.vercel.app/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
CodeSanbox&lt;/h3&gt;
&lt;p&gt;🔗 &lt;a href="https://codesandbox.io/s/react-to-print-f5tje?file=/src/App.tsx" rel="nofollow"&gt;https://codesandbox.io/s/react-to-print-f5tje?file=/src/App.tsx&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/beatrizoliveiira/todolist"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;🔗 CodeSandbox: &lt;a href="https://codesandbox.io/s/react-to-print-f5tje?file=/src/App.tsx"&gt;https://codesandbox.io/s/react-to-print-f5tje?file=/src/App.tsx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Devtools for Data Privacy — Step 1: Privacy Taxonomy V1.0</title>
      <author>Cillian</author>
      <pubDate>Fri, 15 Oct 2021 15:38:55 +0000</pubDate>
      <link>https://dev.to/cillian/devtools-for-data-privacy-step-1-privacy-taxonomy-v10-2fpp</link>
      <guid>https://dev.to/cillian/devtools-for-data-privacy-step-1-privacy-taxonomy-v10-2fpp</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mbVziUVH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fx3j3s41h06k7r01d70s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mbVziUVH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fx3j3s41h06k7r01d70s.png" alt="Open Source Privacy Taxonomy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you’d like to jump straight to the &lt;a href="https://github.com/ethyca/privacy-taxonomy"&gt;Github repo&lt;/a&gt; or &lt;a href="https://ethyca.github.io/privacy-taxonomy/"&gt;documentation&lt;/a&gt; you can get these at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ethyca/privacy-taxonomy"&gt;Privacy Taxonomy Github Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ethyca.github.io/privacy-taxonomy"&gt;Github Pages Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Contents&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#a-proposed-privacy-taxonomy"&gt;A Proposed Privacy Taxonomy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#objective-of-a-privacy-taxonomy"&gt;Objective of a Privacy Taxonomy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#accessing-amp-exploring-the-taxonomy"&gt;Accessing &amp;amp; Exploring the Taxonomy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#privacy-taxonomy-research"&gt;Privacy Taxonomy Research&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#early-decisions"&gt;Early Decisions&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#early-decisions"&gt;Concepts &amp;amp; Conventions of the Taxonomy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#writing-conventions"&gt;Writing Conventions&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#taxonomy-structure"&gt;Taxonomy Structure&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#data-categories"&gt;Data Categories&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#data-uses"&gt;Data Uses&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#data-subjects"&gt;Data Subjects&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#data-qualifiers"&gt;Data Qualifiers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Back in July, I articulated some of Ethyca’s driving ideas in a Stack Overflow feature: &lt;a href="https://stackoverflow.blog/2021/07/19/privacy-is-an-afterthought-in-the-software-lifecycle-that-needs-to-change/"&gt;Privacy is an afterthought in the software lifecycle. That needs to change&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To solve the problem I described, &lt;strong&gt;I believe the dev community needs to agree upon and build an open source definition language and set of tools for privacy&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The purpose of these tools is simple:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Allow anyone working on systems that process sensitive or risky data to consistently describe the types of data they’re handling and what that data is being used for.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create CI rules or policies for how data can be used and enforce those in the CI pipeline to prevent code that might create risks or misuse data from ever reaching production.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide configurable tools to ensure respecting a user’s rights can be a feature of any system, such as data access, erasure, portability and retention.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create runtime rules or policies for fine-grained, semantic enforcement, thereby ensuring that only the necessary data is shared with systems or people to perform a process.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The two key benefits yielded are (1) ensuring that software systems more easily comply with complex data privacy regulations that are already forcing change on the tech community, and (2) ensuring that the products we build more naturally respect the rights of users.&lt;/p&gt;

&lt;p&gt;Over the last three years at Ethyca, we’ve been working hard with technical design partners and engineering teams at some of the world’s biggest tech companies to understand the root cause of privacy challenges and build the tools necessary to solve these from the ground up. I’m excited that in the coming months we’ll finally share the culmination of that work with the first public release of our open source privacy tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-proposed-privacy-taxonomy"&gt;
  &lt;/a&gt;
  A Proposed Privacy Taxonomy
&lt;/h2&gt;

&lt;p&gt;The foundation of those tools is a consistent understanding of types and uses of data, and so I want to share the first public release of our data taxonomy with you today.&lt;/p&gt;

&lt;p&gt;Its purpose is to create an agreed-upon definition of types and categories of personal data. This is a vital first step in any ontological design as, in order for any privacy standard to be interoperable, we must first achieve a shared definition of what types of data there are.&lt;/p&gt;

&lt;p&gt;I’m eager to share this and excited to get any feedback that might improve this standard for every developer. I believe what follows forms the foundation of any realistic solution to privacy engineering.&lt;/p&gt;

&lt;p&gt;The rest of this post breaks down our current thinking on what will be a freely available and extensible taxonomy: its components, hierarchy and syntax.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#objective-of-a-privacy-taxonomy"&gt;
  &lt;/a&gt;
  Objective of a Privacy Taxonomy
&lt;/h2&gt;

&lt;p&gt;As stated briefly above and in my other posts, if the dev community is going to solve privacy, we need to agree on a standard definition language on which to base our understanding of systems, the risk they pose and our ability to codify healthy policies into them — ultimately, an ontology for privacy (more on that in a future post).&lt;/p&gt;

&lt;p&gt;The starting point for that is a definition of entities in a system: a taxonomy, the ability to describe what types of data we are handling and what we’re using them for. If we can make it easy for any dev to do this as part of their implementation process, we can start to bake privacy naturally into healthy software design and delivery processes.&lt;/p&gt;

&lt;p&gt;So a lot rides on getting the dev community to standardize their way of describing privacy data and privacy-related data processes in their systems. The taxonomy that follows is our attempt to publicly start that process, and we want to encourage as many developers as possible to contribute their views so that we can collectively build better technology.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessing-amp-exploring-the-taxonomy"&gt;
  &lt;/a&gt;
  Accessing &amp;amp; Exploring the Taxonomy
&lt;/h2&gt;

&lt;p&gt;This post marks the day we’re starting to release years of development work at Ethyca, as we had always intended, for the open source community. With that in mind, feel free to grab the &lt;a href="https://github.com/ethyca/privacy-taxonomy"&gt;taxonomy repo&lt;/a&gt; available below or use the &lt;a href="https://codepen.io/cilliank/embed/OJgexYz?theme-id=39778"&gt;codepen&lt;/a&gt; to explore the structure visually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ethyca/privacy-taxonomy"&gt;https://github.com/ethyca/privacy-taxonomy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or codepen here:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/cilliank/embed/OJgexYz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#privacy-taxonomy-research"&gt;
  &lt;/a&gt;
  Privacy Taxonomy Research
&lt;/h2&gt;

&lt;p&gt;Our goal at Ethyca was to conduct the detailed research necessary to provide the dev community with a first draft taxonomy robust enough to capture a comprehensive view of privacy, yet intuitive enough for any engineer to easily apply.&lt;/p&gt;

&lt;p&gt;To achieve this, we evaluated existing privacy ontologies and their taxonomies, such as &lt;a href="https://www.w3.org/community/dpvcg/wiki/PrOnto:_Privacy_Ontology_for_Legal_Reasoning"&gt;PrOnto&lt;/a&gt; and &lt;a href="https://www.researchgate.net/publication/351034289_COPri_v2_-_A_core_ontology_for_privacy_requirements"&gt;COPri v.2&lt;/a&gt;; international standards like &lt;a href="https://www.iso.org/standard/79573.html"&gt;ISO 19944&lt;/a&gt;; and contrasted with major data privacy regulations like the &lt;a href="https://ico.org.uk/for-organisations/guide-to-data-protection/guide-to-the-general-data-protection-regulation-gdpr/"&gt;GDPR&lt;/a&gt; (the ICO’s website is a helpful read for those curious), &lt;a href="https://ethyca.com/cpra-hub/"&gt;CCPA&lt;/a&gt;, &lt;a href="https://iapp.org/news/a/the-new-brazilian-general-data-protection-law-a-detailed-analysis/"&gt;LGPD&lt;/a&gt; and drafts of the &lt;a href="https://share.getcloudapp.com/4gulq7K2"&gt;Indian PDPB&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#early-decisions"&gt;
  &lt;/a&gt;
  Early Decisions
&lt;/h2&gt;

&lt;p&gt;Armed with this analysis and feedback from our technical design partners, we’ve been refining this taxonomy for over a year. We feel that it’s an early but confident first step in capturing everything you will need to describe the privacy behaviors and data types of your tech stack.&lt;/p&gt;

&lt;p&gt;To achieve this, we made some early, opinionated and intentional decisions that I’d love feedback on. So the taxonomy repo you’ll see here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Supports all of the data types and concepts necessary to describe a system for the GDPR, CCPA and LGPD.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Supports the standards of ISO 19944;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Is extensible, so you can add categories of data or data processing definitions to suit your business;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Is intended to be semantic and allow a natural understanding of any label for any user.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#concepts-amp-conventions-of-the-taxonomy"&gt;
  &lt;/a&gt;
  Concepts &amp;amp; Conventions of the Taxonomy
&lt;/h2&gt;

&lt;p&gt;Conceptually, the taxonomy is segmented in four groupings as follows:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-data-categories"&gt;
  &lt;/a&gt;
  1. Data Categories
&lt;/h2&gt;

&lt;p&gt;Data Categories are a comprehensive hierarchy of labels to represent types of data in your systems. They can be coarse definitions such as “User Provided Data” or fine grained ones, such as “User Provided Email Address”. We’ll dig into this in a bit more detail shortly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-data-uses"&gt;
  &lt;/a&gt;
  2. Data Uses
&lt;/h2&gt;

&lt;p&gt;Data Uses are labels that describe how, or for what purposes, you are using the data. This branch of the taxonomy creates a structure for the most common uses of data in software applications. An example might be the use of data for payment processing or first party personalized advertising. These would both be data uses, ways in which your system uses data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-data-subject-categories"&gt;
  &lt;/a&gt;
  3. Data Subject Categories
&lt;/h2&gt;

&lt;p&gt;“Subjects” is a slightly esoteric term, common in the privacy industry to represent the user type — that is to say, the label applied to describe the provider or owner of the data. E.g., if you have an email address in your system, it might belong to an employee of the company, or to a customer. In this case, employees and customers are both “subjects” of the system. Under various privacy regulations, they are afforded rights over managing how their data is used and that may vary by the subject type, so the distinction between a patient in a medical records system and a customer in an e-commerce system is important.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-data-qualifiers"&gt;
  &lt;/a&gt;
  4. Data Qualifiers
&lt;/h2&gt;

&lt;p&gt;Data Qualifiers provide added context as to the degree of identification and therefore, potential risk using the data might pose relative to identifying an individual. A simple way to think about this is a spectrum: on one end is completely anonymous data, i.e. it is impossible to identify an individual from it, and on the other end is data that specifically identifies an individual. Along this spectrum are various labels that denote the degree of identification that a given data might provide.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-conventions"&gt;
  &lt;/a&gt;
  Writing Conventions
&lt;/h2&gt;

&lt;p&gt;We worked through various potential syntaxes to ensure it’s as easy as possible to read and write in plain English. Ultimately, dot notation lends itself most appropriately to writing statements that are concise and easy to understand. So the branch structure is dot notation and you’ll see some of the end nodes are complex terms that use snake case for clarity.&lt;/p&gt;

&lt;p&gt;As such, if you were attempting to use the taxonomy of data categories to label, for example, an email address, the resulting hierarchical notation would look like:&lt;/p&gt;

&lt;p&gt;user.provided.identifiable.contact.email&lt;/p&gt;

&lt;p&gt;As you can see, it’s pretty easy to deduce from this that it’s user-provided data, it identifies them and it is considered contact information — more specifically, an email address.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m61lIQXL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltbkxrpgc92rjh8y25xy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m61lIQXL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltbkxrpgc92rjh8y25xy.png" alt="Notation Structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The design of these hierarchical structures is intended to allow any dev implementing this to type out the classification to a level of specificity that suits their needs. If I take the above example, my team and I might decide that we’re satisfied if we know it’s identifiable data about a user, which would look like:&lt;/p&gt;

&lt;p&gt;user.provided.identifiable&lt;/p&gt;

&lt;p&gt;Or labeling it with slightly more specificity as contact data:&lt;/p&gt;

&lt;p&gt;user.provided.identifiable.contact&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#taxonomy-structure"&gt;
  &lt;/a&gt;
  Taxonomy Structure
&lt;/h2&gt;

&lt;p&gt;As stated, the objective with releasing the taxonomy now is to discuss, debate and over time, iteratively improve the taxonomy so that it can cater to most common scenarios for devs and data teams in describing systems. Here we’ll delve into the current structure and our rationale for their present state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-categories"&gt;
  &lt;/a&gt;
  Data Categories
&lt;/h2&gt;

&lt;p&gt;As you can see from the dot notation example above and the taxonomy visualizer tool in the header, Data Categories are classified into primitive categories with a hierarchy of branches and nodes that allow for degrees of precision when classifying data.&lt;/p&gt;

&lt;p&gt;Here’s a breakdown of that structure:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-categories-top-level"&gt;
  &lt;/a&gt;
  Data Categories — Top Level
&lt;/h3&gt;

&lt;p&gt;There are three top-level categories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;account&lt;/strong&gt;: Data related to a system account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;system&lt;/strong&gt;: Data unique to, and under control of the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;user&lt;/strong&gt;: Data related to the user of the system, either provided directly or derived based on their usage.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In defining these, we looked at the cross-labeling implications of data types such as an email address, which may be both account data and user data. This is a logical multi-label assignment so that you can manage this data for both purposes, or perhaps create exclusionary rules related to its use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt;: When considering and testing labeling extensively, we found that with three clear primitives you could elegantly construct a series of labels that covered the broadest possible data types while limiting the number of terms needed to do so.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-categories-second-level"&gt;
  &lt;/a&gt;
  Data Categories — Second Level
&lt;/h3&gt;

&lt;p&gt;For each top-level node, there are multiple branches that provide richer context. You will see for the first two, account and system, these are limited, where the user node provides subclasses suitable to assist in detailed personal data management.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;account.contact&lt;/strong&gt;: Contact data related to a system account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;account.payment&lt;/strong&gt;: Payment data related to a system account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;system.authentication&lt;/strong&gt;: Data used to manage access to the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;system.operations&lt;/strong&gt;: Data used for system operations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;user.derived&lt;/strong&gt;: Data derived from user provided data or as a result of user actions in the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;user.provided&lt;/strong&gt;: Data provided or created directly by a user of the system.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Most of these are likely self-evident. Of note here are the derived and provided labels, as these respectively describe where data was derived by the system through observation or inference, versus explicitly provided by a user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-categories-third-level"&gt;
  &lt;/a&gt;
  Data Categories — Third Level
&lt;/h3&gt;

&lt;p&gt;As you can see, the hierarchy supports simple labels or, where necessary, very precise and fine-grained annotations. It’s easiest from here for you to dive in and play with the classifications yourself. However, we’ll quickly look at level three of the user branch specifically, where you have branches from derived and provided:&lt;/p&gt;

&lt;p&gt;You can see this is split into identifiable and non-identifiable data:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;user.derived.identifiable&lt;/strong&gt;: Derived data that is linked to, or identifies a user.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;user.derived.nonidentifiable&lt;/strong&gt;: Non-user identifiable data derived related to a user as a result of user actions in the system.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And a similar split applies to provided, as shown below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;user.provided.identifiable&lt;/strong&gt;: Data provided or created directly by a user that is linked to or identifies a user.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;user.provided.nonidentifiable&lt;/strong&gt;: Data provided or created directly by a user that is not identifiable.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#data-uses"&gt;
  &lt;/a&gt;
  Data Uses
&lt;/h2&gt;

&lt;p&gt;Similar to Data Categories, for Data Use, we’ve attempted to capture the widest variety of data use cases with the briefest hierarchy we can. In addition to this, we’ve captured all of the use cases described by ISO 19944 and GDPR to ensure that a single taxonomy can describe data uses across data privacy frameworks.&lt;/p&gt;

&lt;p&gt;You’ll see if you use the taxonomy explorer in the header that this currently breaks down as follows:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-uses-top-level"&gt;
  &lt;/a&gt;
  Data Uses — Top Level
&lt;/h3&gt;

&lt;p&gt;At present there are seven top-level nodes to the use categories taxonomy branch. We think this still needs work and are continuing to optimize. However, today they are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;provide&lt;/strong&gt;: Provide, in the context of providing a product or service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;improve&lt;/strong&gt;: Improve, similarly relating to the product or service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;personalize&lt;/strong&gt;: Personalization of the product or service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;advertising&lt;/strong&gt;: Marketing, Advertising or Promotion.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;third_party_sharing&lt;/strong&gt;: Sharing data with a third party vendor or processor.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;collect&lt;/strong&gt;: Collect data with no currently specified use (you shouldn’t do this but it seems necessary to encompass some poor, non-privacy appropriate, legacy processes).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;train_ai_system&lt;/strong&gt;: Train an AI System.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#data-uses-second-level"&gt;
  &lt;/a&gt;
  Data Uses — Second Level
&lt;/h3&gt;

&lt;p&gt;From here, it’s likely quicker to explore the second level data use categories yourself. However, it’s worth noting that we’ve attempted to capture the most common constructs that create privacy risks. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;advertising.third_party.personalized&lt;/strong&gt;: Specifies data received from a third party for the purpose of personalization of advertising to a user or group of users.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;third_party_sharing.personalized_advertising&lt;/strong&gt;: Sharing of data collected by the system with a third party for their use in personalized advertising.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These two examples show really important distinctions of use. The first is where your product is performing personalized marketing/advertising by receiving and processing data from a third party. Whereas the second example declares that your system is sharing data with a third party for their use in advertising — very different uses and privacy implications!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-uses-final-word"&gt;
  &lt;/a&gt;
  Data Uses — Final Word
&lt;/h3&gt;

&lt;p&gt;As a final word on data use categories, I stated at the top of this post that we’ve designed this with extensibility in mind, and data uses are a really effective example of this. Every business or software system is different and as such, you’re likely to have different or industry specific uses for your system.&lt;/p&gt;

&lt;p&gt;The objective therefore with data uses is to create a simple framework to generate a clear hierarchy of classifications, so that you can quickly extend this for your use, whether it’s medical data use or some other sensitive process.&lt;/p&gt;

&lt;p&gt;Finally, if you look at the repository history, you’ll see we’ve been iterating on structure from snake_case to dot notation and also hierarchy of terms. I’m hopeful that we’ll continue to do this constantly with feedback from devs implementing this to ensure it satisfies real-world use cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-subjects"&gt;
  &lt;/a&gt;
  Data Subjects
&lt;/h2&gt;

&lt;p&gt;This is likely the easiest group of the taxonomy to understand. At present it’s a flat structure with no hierarchy and represents the various types of users (aka subjects) that may be participants in your system. These could be users, customers, employees, patients, voters, etc.&lt;/p&gt;

&lt;p&gt;You might ask why we’ve done this. The benefit of this specificity is future-proofing. As privacy regulations evolve we expect that certain groups of users’ data will be managed differently. The ability to assign one or multiple user types to your data assures that in future you can build policies and enforcements around data for any business or legal requirement. So you might decide that today you treat employee and customer data the same way, but you will have the flexibility to change retention policies on employee data in the future. As with everything in the taxonomy, you can extend this to support specific business cases. This flexibility means that a thoughtful system need not be fragile, rendered unworkable as soon as compliance requirements evolve. To the contrary: the ontology enables the system to be nimble, a vital quality in a landscape as dynamic as modern data and privacy compliance needs.&lt;/p&gt;

&lt;p&gt;Subject categories are explicit in their meaning today, so:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;anonymous_user&lt;/strong&gt;: An individual who is truly unknown/anonymous to the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;citizen_voter&lt;/strong&gt;: An individual who is a citizen of a nation or state and may be a voter in a state sponsored voting system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;commuter&lt;/strong&gt;: An individual in transit on any means of transportation where their location may be monitored.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;consultant&lt;/strong&gt;: An individual external service provider to the organization..&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customer&lt;/strong&gt;: An individual who has purchased products or services from the organization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;employee&lt;/strong&gt;: An individual who is an employee of the organization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;job_applicant&lt;/strong&gt;: An individual who is in the job application process of an organization, past or present.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;next_of_kin&lt;/strong&gt;: An individual identified as a legal point of contact for another category of individual in the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;passenger&lt;/strong&gt;: An individual traveling on transportation provided by the organization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;patient&lt;/strong&gt;: An individual identified for the purpose of medical or health procedures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;prospect&lt;/strong&gt;: An individual identified for the purpose of sales and marketing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;shareholder&lt;/strong&gt;: An individual identified as an owner or shareholder of an organization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;supplier_vendor&lt;/strong&gt;: An individual or organization providing goods or services to the organization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;trainee&lt;/strong&gt;: An individual receiving training or tutoring.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;visitor&lt;/strong&gt;: An individual visiting a location of an organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#data-qualifiers"&gt;
  &lt;/a&gt;
  Data Qualifiers
&lt;/h2&gt;

&lt;p&gt;Data Qualifiers describe the degree of identification of the given data. Think of this as a spectrum: on one end is completely anonymous data, i.e. it is impossible to identify an individual from it, and on the other end is data that specifically identifies an individual.&lt;/p&gt;

&lt;p&gt;Along this spectrum are labels that describe the degree of identification that a given data might provide, such as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;identified&lt;/strong&gt;: Data that directly identifies an individual.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;pseudonymized&lt;/strong&gt;: Data which has been de-identified (by removing/replacing all identifiers) but used with other data may re-identify an individual.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;unlinked_pseudonymized&lt;/strong&gt;: Data which has been de-identified (by removing/replacing all identifiers) where linkages have also been replaced/broken such that the individual cannot be re-identified.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;anonymized&lt;/strong&gt;: Data which has been unlinked and for which attributes have been modified to assure confidence that the person cannot be re-identified with this data or in combination with other data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;aggregated&lt;/strong&gt;: Statistical data that does not contain individual data and/or has been combined with sufficient data from multiple persons that no individual is identifiable.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post I’ve proposed a first draft of a privacy taxonomy, one that underpins much of the thinking we do at Ethyca. What we’re releasing today is just an up-down taxonomy. However, this precedes an entire ontology that provides a simple grammar to describe complex data flows and privacy-related behaviors in a software system. This has been at the heart of our work for nearly three years now.&lt;/p&gt;

&lt;p&gt;I’m excited to finally start sharing that work publicly with the community, and I encourage feedback, debate and changes. By having these conversations, we can build a better standard and the tools necessary to make this easy for every dev to implement.&lt;/p&gt;

&lt;p&gt;Over the coming weeks we’ll be releasing more details of our work in this space and the benefits created by these tools. We welcome your feedback, participation and contribution.&lt;/p&gt;

&lt;p&gt;If you’d like to chat about anything here you can get me on Twitter, &lt;a href="https://twitter.com/cillian"&gt;@cillian&lt;/a&gt;, or feel free to comment here.&lt;/p&gt;

</description>
      <category>dataprivacy</category>
      <category>opensource</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Codebytes: Shorter UUIDs with collision prediction using nanoid</title>
      <author>prakash chokalingam</author>
      <pubDate>Fri, 15 Oct 2021 15:33:12 +0000</pubDate>
      <link>https://dev.to/prakash_chokalingam/codebytes-shorter-uuids-with-collision-prediction-using-nanoid-co8</link>
      <guid>https://dev.to/prakash_chokalingam/codebytes-shorter-uuids-with-collision-prediction-using-nanoid-co8</guid>
      <description>&lt;p&gt;To generate an unique ID most of us use npm libraries and node utils like uuid, crypto.randomUUID. One of the major cons is these IDs are larger in size and the shorter UUID generation will increase the &lt;strong&gt;probability of duplicate&lt;/strong&gt; IDs.&lt;/p&gt;

&lt;p&gt;Here comes the saviour, &lt;a href="https://github.com/ai/nanoid"&gt;nanoid&lt;/a&gt; - A tiny, secure, URL-friendly, unique string ID generator for JavaScript.&lt;/p&gt;

&lt;p&gt;Since the bigger alphabet is being used in the UUID generation, nanoid can generate random unique ids within 21 chars.&lt;/p&gt;

&lt;p&gt;And its 2x faster and safer than other UUID generators.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wait-this-will-blow-your-mind"&gt;
  &lt;/a&gt;
  Wait... This will blow your mind!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TnTFCG3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zc7tv529i4r2w7n019x7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TnTFCG3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zc7tv529i4r2w7n019x7.gif" alt="mind blown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nanoid is completely configurable from size to char's, to be used while generating the UUIDs. Then how does it &lt;strong&gt;avoid the probability of duplication?&lt;/strong&gt; It comes with a &lt;strong&gt;&lt;a href="https://zelark.github.io/nano-id-cc/"&gt;collision calculator&lt;/a&gt;&lt;/strong&gt; which helps to predict the probability of collision based on configuration.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwyalT0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/edocpgy3z19r122axngu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwyalT0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/edocpgy3z19r122axngu.png" alt="collision calculator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It has support for various other programming languages. Checkout this awesome repo:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ai"&gt;
        ai
      &lt;/a&gt; / &lt;a href="https://github.com/ai/nanoid"&gt;
        nanoid
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A tiny (108 bytes), secure, URL-friendly, unique string ID generator for JavaScript
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Nano ID&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c306d97014be1caa9a2a511a0ff4722d54a77b0b6c81a18c81113d6051408325/68747470733a2f2f61692e6769746875622e696f2f6e616e6f69642f6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c306d97014be1caa9a2a511a0ff4722d54a77b0b6c81a18c81113d6051408325/68747470733a2f2f61692e6769746875622e696f2f6e616e6f69642f6c6f676f2e737667" alt="Nano ID logo by Anton Lovchikov" width="180" height="94"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href="https://github.com/ai/nanoid./README.ru.md"&gt;Русский&lt;/a&gt; | &lt;a href="https://github.com/ai/nanoid./README.zh-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A tiny, secure, URL-friendly, unique string ID generator for JavaScript.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“An amazing level of senseless perfectionism
which is simply impossible not to respect.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Small.&lt;/strong&gt; 130 bytes (minified and gzipped). No dependencies
&lt;a href="https://github.com/ai/size-limit"&gt;Size Limit&lt;/a&gt; controls the size.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fast.&lt;/strong&gt; It is 2 times faster than UUID.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Safe.&lt;/strong&gt; It uses hardware random generator. Can be used in clusters.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Short IDs.&lt;/strong&gt; It uses a larger alphabet than UUID (&lt;code&gt;A-Za-z0-9_-&lt;/code&gt;)
So ID size was reduced from 36 to 21 symbols.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Portable.&lt;/strong&gt; Nano ID was ported
to &lt;a href="https://github.com/ai/nanoid#other-programming-languages"&gt;19 programming languages&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;nanoid&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'nanoid'&lt;/span&gt;
&lt;span class="pl-s1"&gt;model&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;nanoid&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c"&gt;//=&amp;gt; "V1StGXR8_Z5jdHi6B-myT"&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Supports modern browsers, IE &lt;a href="https://developer.epages.com/blog/coding/how-to-transpile-node-modules-with-babel-and-webpack-in-a-monorepo/" rel="nofollow"&gt;with Babel&lt;/a&gt;, Node.js and React Native.&lt;/p&gt;
&lt;a href="https://evilmartians.com/?utm_source=nanoid" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/e3313339ea3cb39c90da1e389af3b31b3ab754f9e06a115f8bab411854ea460e/68747470733a2f2f6576696c6d61727469616e732e636f6d2f6261646765732f73706f6e736f7265642d62792d6576696c2d6d61727469616e732e737667" alt="Sponsored by Evil Martians" width="236" height="54"&gt;
&lt;/a&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#comparison-with-uuid"&gt;Comparison with UUID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#benchmark"&gt;Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ai/nanoid#api"&gt;API&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#blocking"&gt;Blocking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#async"&gt;Async&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#non-secure"&gt;Non-Secure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#custom-alphabet-or-size"&gt;Custom Alphabet or Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#custom-random-bytes-generator"&gt;Custom Random Bytes Generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ai/nanoid#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#ie"&gt;IE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#react"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#html-id"&gt;HTML ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#react-native"&gt;React Native&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid#rollup"&gt;Rollup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ai/nanoid#pouchdb-and-couchdb"&gt;PouchDB and&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ai/nanoid"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>codebytes</category>
      <category>uuid</category>
      <category>nanoid</category>
      <category>javascript</category>
    </item>
    <item>
      <title>A simple CSS Grid System</title>
      <author>M Adeel Ahsan</author>
      <pubDate>Fri, 15 Oct 2021 15:11:46 +0000</pubDate>
      <link>https://dev.to/madeelahsan/a-simple-css-grid-system-5a5i</link>
      <guid>https://dev.to/madeelahsan/a-simple-css-grid-system-5a5i</guid>
      <description>&lt;h1&gt;
  &lt;a href="#sccssgridsystem"&gt;
  &lt;/a&gt;
  sc-css-grid-system
&lt;/h1&gt;

&lt;p&gt;Simple CSS grid system component built with styled component for react. &lt;br&gt;
sc-css-grid-system utilizes the power of CSS grid and styled-components to easily create responsive grids.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features"&gt;
  &lt;/a&gt;
  key features
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;responsive breakpoint xs,sm,md,lg,xl&lt;/li&gt;
&lt;li&gt;responsive gutter/gap option&lt;/li&gt;
&lt;li&gt;really easy to use&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#responsive-grid-example"&gt;
  &lt;/a&gt;
  Responsive Grid Example:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sc-css-grid-system&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CssGridSystem&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="nx"&gt;xs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;md&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;lg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;xl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Grid&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;render as:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AMhvDUmz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/21342152/133593532-e4ba26fd-19e9-4b14-a919-d6d23b39a1bb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AMhvDUmz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/21342152/133593532-e4ba26fd-19e9-4b14-a919-d6d23b39a1bb.gif" alt="Hnet-image (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-complete-documentation-and-demo"&gt;
  &lt;/a&gt;
  for complete documentation and demo:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/madeelahsan/sc-css-grid-system"&gt;Github repo&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  NPM
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/sc-css-grid-system"&gt;SC-CSS-Grid-System&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Symfony Station Communique - 15 October 2021. A Look at Symfony and PHP News.</title>
      <author>Reuben Walker, Jr.</author>
      <pubDate>Fri, 15 Oct 2021 15:05:40 +0000</pubDate>
      <link>https://dev.to/reubenwalker64/symfony-station-communique-15-october-2021-a-look-at-symfony-and-php-news-4n3l</link>
      <guid>https://dev.to/reubenwalker64/symfony-station-communique-15-october-2021-a-look-at-symfony-and-php-news-4n3l</guid>
      <description>&lt;p&gt;This post originally appeared on &lt;a href="https://symfonystation.com/communiques/f/symfony-station-communique---15-october-2021"&gt;Symfony Station&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Welcome to this week's Symfony Station Communique. It’s your weekly review of the most valuable and essential news in the Symfony and PHP development communities.&lt;/p&gt;

&lt;p&gt;Thanks to the team at &lt;a href="https://symfony.com/blog/a-week-of-symfony-771-4-10-october-2021"&gt;Symfony's blog&lt;/a&gt; for featuring our &lt;a href="https://symfonystation.com/communiques/f/symfony-station-communique-8-october-2021"&gt;previous Communique&lt;/a&gt; on Sunday!&lt;/p&gt;

&lt;p&gt;*Please note all links will open in a new browser window. My opinions, if I present any, will be in italics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#symfony"&gt;
  &lt;/a&gt;
  Symfony
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;As always, we will start with the official news from Symfony.&lt;/p&gt;

&lt;p&gt;Highlight -&amp;gt; “This week, Symfony continued adding tweaks to fix compatibility with the future PHP 8.1 version. Meanwhile, the upcoming Symfony 5.4 version merged some new features such as basic support for language negotiation and a CssColor constraint to validate that a given value matches any of the formats available to define CSS colors.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/a-week-of-symfony-771-4-10-october-2021"&gt;A Week of Symfony&lt;/a&gt; #769 (4-10 October, 2021)&lt;/p&gt;

&lt;p&gt;They announced the upcoming SymfonyWorld Online 2021 Winter Edition conference (December 9-10, 2021) will offer two days of online workshops. Seats are limited. Book your seats soon!&lt;/p&gt;

&lt;p&gt;Announcing &lt;a href="https://symfony.com/blog/announcing-the-workshops-of-symfonyworld-online-2021-winter-conference"&gt;the Workshops of SymfonyWorld Online 2021&lt;/a&gt; Winter Conference&lt;/p&gt;

&lt;p&gt;And they also announced that the SymfonyWorld Online 2021 Winter Edition conference (December 9-10, 2021) will take place a few days after the release of Symfony 6. That's why it's a great opportunity to learn all about the latest Symfony 6 features.&lt;/p&gt;

&lt;p&gt;First selected &lt;a href="https://symfony.com/blog/first-selected-speakers-at-symfonyworld-2021-online-2021-winter-conference"&gt;speakers at SymfonyWorld Online 2021&lt;/a&gt; Winter Conference&lt;/p&gt;

&lt;p&gt;Last but not least the &lt;a href="https://symfony.com/doc/current/security.html"&gt;Symfony Security Documentation&lt;/a&gt; has been updated.&lt;/p&gt;

&lt;p&gt;SymfonyCasts looks at Doctrine Relations and using Foundry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://5hy9x.r.ag.d.sendibm3.com/mk/mr/k1KySlnreCSGjCqfMaXBl9S_dlRXUq7g1Cu_zAoC8oR415IN3kEUypuu_vQGQl-aNfKetRKe3MpMNE1e6g0iTLZNKySUFNhehAKO1z7WPkxbAVhEP5td4aQ0DIJV2WszFEeyvfOluw"&gt;This week on SymfonyCasts&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Matthias Noback observes that “It's an extremely common problem in legacy code bases: a new way of doing things was introduced before the team decided on a way to get the old thing out.” Regarding this code, he asks:&lt;/p&gt;

&lt;p&gt;Do you have &lt;a href="https://matthiasnoback.nl/2021/10/do-you-have-an-exit-strategy/"&gt;an exit strategy?&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Do you have a Symfony/PHP application which needs to connect to AWS and use some of its services (S3, Secrets Manager, etc.)? Do you want to avoid pushing credentials to your Git repository or revealing them to any third party (deployment, testing, or code review tools). If so, then follow this guide.&lt;/p&gt;

&lt;p&gt;Safe and simple &lt;a href="https://dev.to/nikolastojilj12/safe-and-simple-aws-credential-management-for-your-symfony-php-application-29i"&gt;AWS credential management for your Symfony/PHP application&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-month"&gt;
  &lt;/a&gt;
  This month
&lt;/h3&gt;

&lt;p&gt;Mon Code examines mitigating data breaches. As you can't be confident in your security, encrypted data is an excellent way to reduce impact by making data unusable. There are some existing libraries and bundles to use with Symfony and Doctrine that allow you to encrypt and decrypt data on the fly with your database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mon-code.net/post/131/Secure-your-data-using-encryption-in-PHP"&gt;Secure your data using encryption in PHP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blackfire was glad to announce the release of their Consumers Monitoring feature, expanding even further the scale of the Continuous Observability available to its customers. Consumers, background jobs, and CLI commands can now be monitored.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.blackfire.io/consumers-monitoring.html"&gt;Introducing the Consumers Monitoring&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Roberto Manchado says testing a listener using Symfony events is easy. He shows us how much in this article.&lt;/p&gt;

&lt;p&gt;How to &lt;a href="https://dev.to/robertomanchado/how-test-your-listener-events-on-symfony-5bh8"&gt;test your listener events on Symfony with PHPUnit&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h3&gt;

&lt;p&gt;We are building out the permanent Symfony Station website with Drupal and ran across this article during our research.&lt;/p&gt;

&lt;p&gt;Why &lt;a href="https://www.bairesdev.com/technologies/drupal-development-services/"&gt;Symfony Is Perfect For Drupal Developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article is in French but it is a good review of the developer experience for Symfony and Laravel developers.&lt;/p&gt;

&lt;p&gt;Symfony et Laravel : &lt;a href="https://blog.link-value.fr/symfony-laravel-partage-experience-developpeurs-php-6fe0e73c5850"&gt;Retours d’expérience de développeurs PHP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cet l’article est aussi en francais et looks at Doctrine filters.&lt;/p&gt;

&lt;p&gt;Symfony — &lt;a href="https://nicolasfz-code.medium.com/symfony-les-filtres-doctrines-a91ffa486f33"&gt;Les Filtres doctrines&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;On GitConnected, Travis Weston asks what does goto have to do with loops?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://levelup.gitconnected.com/loops-are-just-conditionals-that-repeat-71275d4768f2"&gt;Loops are just conditionals that repeat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rector shows you how to upgrade your annotations to attributes with their product.&lt;/p&gt;

&lt;p&gt;How to &lt;a href="https://getrector.org/blog/how-to-upgrade-annotations-to-attributes"&gt;Upgrade Annotations to Attributes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Brent from Stitcher.io notes that PHP 8.1 adds a feature that might seem like a small detail, but one that I think will have a significant day-by-day impact on many people. So what's this "new in initializers RFC" thing?&lt;/p&gt;

&lt;p&gt;PHP 8.1: &lt;a href="https://stitcher.io/blog/php-81-new-in-inititalizers"&gt;new in initializers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nikita Popov describes the concepts behind Opcache in this thorough article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npopov.com/2021/10/13/How-opcache-works.html"&gt;How OPcache works&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A 10-day newsletter from Brent Roose explores static analysis.&lt;/p&gt;

&lt;p&gt;The Road to PHP: &lt;a href="https://road-to-php.com/static"&gt;Static Analysis&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-month"&gt;
  &lt;/a&gt;
  This Month
&lt;/h3&gt;

&lt;p&gt;In a new ebook Front Line PHP looks at building modern applications with PHP 8.1.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://front-line-php.com/"&gt;Building modern applications with PHP 8.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On Dev.to Alua TYC mentions that PHP implicit casting is prevalent. But before he examined what it means, he looked at why it happens.&lt;/p&gt;

&lt;p&gt;A detailed look into &lt;a href="https://dev.to/altsyset/a-detailed-look-into-php-type-casting-4m6d"&gt;PHP type casting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tomas Votruba explains that Coding Standard tools are very fast in processing a single file. However, the performance hiccup is in the number of processed files. If you have multiple files, the 2nd file cannot start until the 1st file finishes.&lt;/p&gt;

&lt;p&gt;Fortunately, this architecture has a huge potential in performance improvement once we add a parallel run.&lt;/p&gt;

&lt;p&gt;Introducing up-to a 16 Times &lt;a href="https://tomasvotruba.com/blog/introducing-up-to-16-times-faster-easy-coding-standard/"&gt;Faster Easy Coding Standard&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-year"&gt;
  &lt;/a&gt;
  This Year
&lt;/h3&gt;

&lt;p&gt;In a 2nd article, Tomas Votruba asks if you enabled parallel run in PHPStan and ECS? You may know the speed gain is brutal. But, on the other hand, there are few hidden costs in developer experience.&lt;/p&gt;

&lt;p&gt;Hidden &lt;a href="https://tomasvotruba.com/blog/hidden-productivity-costs-of-parallel-run/"&gt;Productivity Costs of Parallel Run&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h2&gt;

&lt;p&gt;The Next Web had an interesting article about Natural Language Processing and its evolution to Natural Language Coding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thenextweb.com/news/programming-natural-language-syndication"&gt;Programming in ‘natural’ language&lt;/a&gt; is coming sooner than you think&lt;/p&gt;

&lt;p&gt;Mind Matters News says equating code debt with monetary debt can lead to strategic technology mistakes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tomasvotruba.com/blog/introducing-up-to-16-times-faster-easy-coding-standard/"&gt;Code Debt is not Real Debt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;McKinsey has a new report looking at which technology trends will affect our future the most. The World Economic Forum has an overview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.weforum.org/agenda/2021/10/technology-trends-2021-mckinsey/"&gt;These are the top 10 tech trends&lt;/a&gt; that will shape the coming decade, according to McKinsey&lt;/p&gt;

&lt;p&gt;That's it for this week. I look forward to sharing next week's Symfony and PHP news with you on Friday. &lt;/p&gt;

&lt;p&gt;Please share this post. :)&lt;/p&gt;

&lt;p&gt;Happy coding Symfonistas!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jbyOblem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2100/0%2AkWSBxA1B_Cw1INEf" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jbyOblem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2100/0%2AkWSBxA1B_Cw1INEf" alt="Photo of Reuben Walker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reuben Walker&lt;br&gt;
Founder Symfony Station&lt;br&gt;
Reuben is also Ringmaster of Mobile Atom Media and its division Mobile Atom Code. &lt;/p&gt;

</description>
      <category>symfony</category>
      <category>php</category>
      <category>opcache</category>
      <category>phpunit</category>
    </item>
    <item>
      <title>M3O - An open source AWS alternative</title>
      <author>Asim Aslam</author>
      <pubDate>Fri, 15 Oct 2021 14:53:29 +0000</pubDate>
      <link>https://dev.to/micro/m3o-an-open-source-aws-alternative-24ii</link>
      <guid>https://dev.to/micro/m3o-an-open-source-aws-alternative-24ii</guid>
      <description>&lt;p&gt;
    &lt;a href="http://m3o.com"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wMLtyA55--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/65984637%3Fs%3D200%26v%3D4"&gt;
        &lt;h1&gt;M3O&lt;/h1&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;M3O is an open source public cloud platform.&lt;br&gt;We are building an AWS alternative for the next generation of developers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;AWS was a first generation public cloud provider started in 2006. It's infrastructure services and pay as go pricing model made it an incredibly &lt;br&gt;
compelling choice for a previous generation of developers. But what about the future? &lt;/p&gt;

&lt;p&gt;M3O is an attempt to build a new public cloud platform with higher level building blocks for the next generation of developers. &lt;br&gt;
M3O is powered by the open source &lt;a href="https://github.com/micro/micro"&gt;Micro&lt;/a&gt; platform and programmable real world &lt;a href="https://github.com/micro/services"&gt;Micro Services&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;🔥 Dev UX&lt;/strong&gt; - The developer experience is first priority. A slick new UX for the next generation of developers.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;☝️ One Token&lt;/strong&gt; - Use one Micro API token to fulfill all your API needs. Access multiple public APIs with a single token.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;⚡ Fast Access&lt;/strong&gt; - Using a new API is easy - no need to learn yet another API, it's all the same Micro developer experience.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;🆓 Free to start&lt;/strong&gt; - It's a simple pay as you go model and everything is priced per request. Top up your account and start making calls.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;🚫 Anti AWS Billing&lt;/strong&gt; - Don't get lost in a sea of infinite cloud billing. We show you exactly what you use and don't hide any of the costs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;✔️ Open Source Software&lt;/strong&gt; - Built on an open source foundation and services which anyone can contribute to with a simple PR.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#rationale"&gt;
  &lt;/a&gt;
  Rationale
&lt;/h2&gt;

&lt;p&gt;AWS is a fairly complex beast which makes it hard for new developers to get started. In the past we needed VMs and file storage, but today with the Jamstack &lt;br&gt;
and other modern development models, the building blocks we're looking for are changing. They're mostly now third party APIs. M3O is looking to &lt;br&gt;
aggregate all those third party public APIs into a single uniform offering with a slick new dev UX.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#services"&gt;
  &lt;/a&gt;
  Services
&lt;/h2&gt;

&lt;p&gt;So far there are over 35+ services. Here are some of the highlights:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  Backend
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/cache"&gt;&lt;strong&gt;Cache&lt;/strong&gt;&lt;/a&gt; - Quick access key-value storage&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/db"&gt;&lt;strong&gt;DB&lt;/strong&gt;&lt;/a&gt; - Simple database service&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/function"&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/a&gt; - Serverless compute as a service&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/stream"&gt;&lt;strong&gt;Stream&lt;/strong&gt;&lt;/a&gt; - Publish and subscribe to messages&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/user"&gt;&lt;strong&gt;User&lt;/strong&gt;&lt;/a&gt; - User management and authentication&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/file"&gt;&lt;strong&gt;File&lt;/strong&gt;&lt;/a&gt; - Store, list, and retrieve text files&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#logistics"&gt;
  &lt;/a&gt;
  Logistics
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/address"&gt;&lt;strong&gt;Address&lt;/strong&gt;&lt;/a&gt; - Address lookup by postcode&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/geocoding"&gt;&lt;strong&gt;Geocoding&lt;/strong&gt;&lt;/a&gt; - Geocode an address to gps location and the reverse.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/location"&gt;&lt;strong&gt;Location&lt;/strong&gt;&lt;/a&gt; - Real time GPS location tracking and search&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/routing"&gt;&lt;strong&gt;Routing&lt;/strong&gt;&lt;/a&gt; - Etas, routes and turn by turn directions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/ip"&gt;&lt;strong&gt;IP&lt;/strong&gt;&lt;/a&gt; - IP to geolocation lookup&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web"&gt;
  &lt;/a&gt;
  Web
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/email"&gt;&lt;strong&gt;Email&lt;/strong&gt;&lt;/a&gt; - Send emails in a flash&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/image"&gt;&lt;strong&gt;Image&lt;/strong&gt;&lt;/a&gt; - Quickly upload, resize, and convert images&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/otp"&gt;&lt;strong&gt;OTP&lt;/strong&gt;&lt;/a&gt; - One time password generation&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/qr"&gt;&lt;strong&gt;QR Codes&lt;/strong&gt;&lt;/a&gt; - QR code generator&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/sms"&gt;&lt;strong&gt;SMS&lt;/strong&gt;&lt;/a&gt; - Send an SMS message&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m3o.com/weather"&gt;&lt;strong&gt;Weather&lt;/strong&gt;&lt;/a&gt; - Real time weather forecast&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the full list at &lt;a href="https://m3o.com/explore"&gt;m3o.com/explore&lt;/a&gt; or the source at &lt;a href="https://github.com/micro/services"&gt;github.com/micro/services&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Head to &lt;a href="https://m3o.com"&gt;m3o.com&lt;/a&gt; and signup for a free account.&lt;/li&gt;
&lt;li&gt;Generate an API key on the &lt;a href="https://m3o.com/settings/keys"&gt;Settings page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Browse the APIs on the &lt;a href="https://m3o.com/explore"&gt;Explore page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Call any API using your token in the &lt;code&gt;Authorization: Bearer [Token]&lt;/code&gt; header and &lt;code&gt;https://api.m3o.com/v1/[service]/[endpoint]&lt;/code&gt; url.&lt;/li&gt;
&lt;li&gt;See the &lt;a href="https://github.com/m3o/m3o/tree/main/cli"&gt;m3o/cli&lt;/a&gt; for command line usage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn More
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Checkout the &lt;a href="https://dev.toexamples"&gt;Examples&lt;/a&gt; to see what you can build&lt;/li&gt;
&lt;li&gt;Follow us on &lt;a href="https://twitter.com/m3oservices"&gt;Twitter&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join the &lt;a href="https://slack.m3o.com"&gt;Slack&lt;/a&gt; community&lt;/li&gt;
&lt;li&gt;Join the &lt;a href="https://discord.gg/TBR9bRjd6Z"&gt;Discord&lt;/a&gt; server&lt;/li&gt;
&lt;li&gt;Email &lt;a href="//mailto:support@m3o.com"&gt;Support&lt;/a&gt; for help&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it Works
&lt;/h2&gt;

&lt;p&gt;M3O is built on existing public cloud infrastructure using managed kubernetes along with our own &lt;a href="https://github.com/m3o/platform"&gt;infrastructure automation&lt;/a&gt; &lt;br&gt;
and abstraction layer for existing third party public APIs. We host the open source &lt;a href="https://github.com/micro/micro"&gt;Micro&lt;/a&gt; project as our base OS and &lt;br&gt;
use it to power all the &lt;a href="https://github.com/micro/services"&gt;Micro Services&lt;/a&gt;, which provide simpler building blocks for existing cloud primitives.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ux"&gt;
  &lt;/a&gt;
  UX
&lt;/h3&gt;

&lt;p&gt;We host our own custom dev UX (&lt;a href="https://github.com/m3o/cloud"&gt;m3o/cloud&lt;/a&gt;) on top of the infrastructure stack and a &lt;a href="https://github.com/m3o/backend"&gt;backend&lt;/a&gt; &lt;br&gt;
which acts as the management control plane.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#services"&gt;
  &lt;/a&gt;
  Services
&lt;/h3&gt;

&lt;p&gt;Developers build and contribute to services in &lt;a href="https://github.com/micro/services"&gt;github.com/micro/services&lt;/a&gt;, a vendor neutral home. We then automate the &lt;br&gt;
building and publishing of those services and client libraries. This creates a shared and fully managed platform for everyone to leverage.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infrastructure"&gt;
  &lt;/a&gt;
  Infrastructure
&lt;/h3&gt;

&lt;p&gt;We primarily use existing open source software, fully managed services and third party public APIs as the backing infrastructure then layer a standard interface &lt;br&gt;
on top. With all the services on one platform, accessible with one API token, we drastically improve the Dev UX.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h2&gt;

&lt;p&gt;This project is a combination of open source projects and a platform managed by the Micro team. Our goal is to enable any developer to &lt;br&gt;
contribute to the open source while benefiting from the platform as a shared resource.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloud-hosting"&gt;
  &lt;/a&gt;
  Cloud Hosting
&lt;/h3&gt;

&lt;p&gt;The cloud hosted providers of Micro services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://m3o.com"&gt;m3o.com&lt;/a&gt; - a fully managed offering of micro services&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h3&gt;

&lt;p&gt;The core cloud OS and services exists in a vendor neutral org&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/micro/micro"&gt;micro/micro&lt;/a&gt; - an open source operating system for the cloud&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/micro/services"&gt;micro/services&lt;/a&gt; - open source micro services powering m3o.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#m3o-dev-ux"&gt;
  &lt;/a&gt;
  M3O Dev UX
&lt;/h3&gt;

&lt;p&gt;The hosting of Micro services on &lt;a href="https://m3o.com"&gt;m3o.com&lt;/a&gt; is powered by the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/m3o/cloud"&gt;m3o/cloud&lt;/a&gt; - locally hostable angular based dev UX for the website&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/m3o/platform"&gt;m3o/platform&lt;/a&gt; - the infrastructure automation for cloud hosted stack&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/m3o/backend"&gt;m3o/backend&lt;/a&gt; - the services which power the m3o.com product backend&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#publish-apis"&gt;
  &lt;/a&gt;
  Publish APIs
&lt;/h2&gt;

&lt;p&gt;If you'd like to publish your own APIs on the M3O platform &lt;a href="https://forms.gle/9SQV6DdLNDzSRQ477"&gt;fill in this form&lt;/a&gt; and we'll get back to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  Contributing
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Write examples - &lt;a href="https://github.com/m3o/m3o/tree/main/examples"&gt;m3o/examples&lt;/a&gt; provides a place to showcase things built on top which we'll feature on the website&lt;/li&gt;
&lt;li&gt;Write services - &lt;a href="https://github.com/micro/services"&gt;micro/services&lt;/a&gt; are all the services we host and hope for more devs to help&lt;/li&gt;
&lt;li&gt;Write docs - &lt;a href="https://github.com/m3o/m3o/tree/main/docs"&gt;m3o/docs&lt;/a&gt; is where our docs will live and we know without great docs this isn't going to work&lt;/li&gt;
&lt;li&gt;Show support - Tweet &lt;a href="https://twitter.com/m3oservices"&gt;@m3oservices&lt;/a&gt; and let the world know what we're building so that more people can get involved&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h2&gt;

&lt;p&gt;Hopefully you buy into what we're talking about and the need for something new in the public cloud space.&lt;br&gt;
If you like what you’re hearing, &lt;a href="https://m3o.com"&gt;Signup for Free&lt;/a&gt; or send us some &lt;a href="//mailto:contact@m3o.com"&gt;feedback&lt;/a&gt;. &lt;br&gt;
Reach out on &lt;a href="https://slack.m3o.com"&gt;slack&lt;/a&gt; or &lt;a href="https://twitter.com/m3oservices"&gt;twitter&lt;/a&gt; if you have any questions.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>m3o</category>
      <category>cloud</category>
    </item>
    <item>
      <title>a little less spam and a lot more action</title>
      <author>Matthew</author>
      <pubDate>Fri, 15 Oct 2021 14:33:59 +0000</pubDate>
      <link>https://dev.to/mtfoley/a-little-less-spam-and-a-lot-more-action-if2</link>
      <guid>https://dev.to/mtfoley/a-little-less-spam-and-a-lot-more-action-if2</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/RI4LTRjrVJhTskGtrb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/RI4LTRjrVJhTskGtrb/giphy.gif" alt="spam"&gt;&lt;/a&gt; This is a follow up to my post a few days ago &lt;a href="https://dev.to/mtfoley/pr-compliance-action-56m0"&gt;pr-compliance-action&lt;/a&gt;.  I had been excited to see how it would behave on a real project, and yesterday I got my wish!&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/open-sauced/open-sauced"&gt;Open Sauced&lt;/a&gt; project is configured to have &lt;a href="https://github.com/dependabot/"&gt;dependabot&lt;/a&gt; run on Thursdays, and my action contribution had gotten implemented last Friday. &lt;a class="mentioned-user" href="https://dev.to/bdougieyo"&gt;@bdougieyo&lt;/a&gt;
 has the Open Sauced discord setup to monitor the GitHub repo for comments and other events and yesterday we got the regular traffic from &lt;code&gt;dependabot&lt;/code&gt;, but for each PR that it opened, &lt;code&gt;pr-compliance-action&lt;/code&gt; jumped in with a comment of its own! This was because of two things - one was by design, and one was a bug in the design.&lt;/p&gt;

&lt;p&gt;By design, &lt;code&gt;pr-compliance-action&lt;/code&gt; is checking for PRs opened that don't refer to an existing issue in the repo.  Dependabot opens PRs that fit that description.  Also by design, &lt;code&gt;pr-compliance-action&lt;/code&gt; is supposed to ignore &lt;code&gt;dependabot&lt;/code&gt; by default.  The bug was in the workflow file for &lt;code&gt;pr-compliance-action&lt;/code&gt;'s &lt;code&gt;ignore-authors&lt;/code&gt; input, using the wrong style of multiline YAML syntax. Easy fix, one character!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/open-sauced/open-sauced/issues/1234"&gt;Open Sauced Issue #1234&lt;/a&gt;&lt;br&gt;
Loving &lt;a class="mentioned-user" href="https://dev.to/0vortex"&gt;@0vortex&lt;/a&gt;
 issue description:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Steps to reproduce&lt;/strong&gt;&lt;br&gt;
Wait for Thursday&lt;br&gt;
Wait for Dependabot to open a pull request&lt;br&gt;
Dependabot gets greeted to join Discord&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The other &lt;em&gt;opportunity for improvement&lt;/em&gt; that became apparent was that &lt;code&gt;pr-compliance-action&lt;/code&gt; didn't discriminate whether a PR author was a repo owner or a team member.  This was a little more involved a feature to implement than a single character change, but I enjoyed it.  This was a matter of leveraging the GitHub's REST API to list out whether the user's orgs included the org that owns the repo in question.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/open-sauced/open-sauced/issues/1240"&gt;Open Sauced Issue #1240&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Two release tags in one day - is that a reason to celebrate? Well I am :-)&lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What is object destructuring in JavaScript?</title>
      <author>Amer Sikira</author>
      <pubDate>Fri, 15 Oct 2021 14:08:33 +0000</pubDate>
      <link>https://dev.to/amersikira/what-is-object-destructuring-in-javascript-437a</link>
      <guid>https://dev.to/amersikira/what-is-object-destructuring-in-javascript-437a</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was originally published on &lt;a href="https://webinuse.com/what-is-object-destructuring-in-javascript/"&gt;webinuse.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Object destructuring means: extracting values, by key, from existing object.&lt;br&gt;
Object destructuring was introduced in ES6. Prior to that, when we wanted to extract some values&lt;br&gt;
from object it required a lot of typing. As a result, we had to do additional work, and often&lt;br&gt;
this lead to mistakes. &lt;/p&gt;

&lt;p&gt;One example of extracting data the old way would be following example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;surname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With ES6 object destructuring became a lot easier. It uses the following syntax: &lt;code&gt;const {properties} = obj&lt;/code&gt;.&lt;br&gt;
We can use as many properties as we want, as long as those properties exist inside an object. &lt;br&gt;
If we use key that does not exist in object, it will return &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When we use destructuring method, every property that we pass inside &lt;code&gt;{}&lt;/code&gt; will be created as variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Result: &lt;/span&gt;
&lt;span class="c1"&gt;//John&lt;/span&gt;
&lt;span class="c1"&gt;//Doe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#default-value-in-object-destructuring"&gt;
  &lt;/a&gt;
  Default value in object destructuring
&lt;/h3&gt;

&lt;p&gt;If we are not sure whether some key will be defined we can pass default values, like in the example below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//John&lt;/span&gt;
&lt;span class="c1"&gt;//Doe&lt;/span&gt;
&lt;span class="c1"&gt;//18&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-use-alias"&gt;
  &lt;/a&gt;
  How to use alias
&lt;/h3&gt;

&lt;p&gt;Alias means substitute name for key without modifying the key. This is useful when we have variables with similar, or same&lt;br&gt;
names as object keys, so we want to differentiate them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;nameAlias&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nameAlias&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//John&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#extracting-properties-from-nested-objects"&gt;
  &lt;/a&gt;
  Extracting properties from nested objects
&lt;/h3&gt;

&lt;p&gt;Not all objects are created with one level. Sometimes we use objects with multiple levels. By using object destructuring we can &lt;br&gt;
extract data from all levels.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//John&lt;/span&gt;
&lt;span class="c1"&gt;//Doe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dynamic-key-object-destructuring"&gt;
  &lt;/a&gt;
  Dynamic key object destructuring
&lt;/h3&gt;

&lt;p&gt;Sometimes we need to destructure object where we do not know property name in advance, but it is known at runtime.&lt;br&gt;
We can use object destructuring for that, also.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//John&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#combination-of-rest-operator-and-object-destructuring"&gt;
  &lt;/a&gt;
  Combination of rest operator and object destructuring
&lt;/h3&gt;

&lt;p&gt;If we need to separate some properties from the rest of the object, but we also need the rest of the object, we can use  rest (...) operator.ž&lt;br&gt;
Syntax for destructuring object this way is as following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;identifiers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After we destructure object this way, identifier(s) contain property value, while &lt;code&gt;...rest&lt;/code&gt; contains remaining properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;surname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//123&lt;/span&gt;
&lt;span class="c1"&gt;//{name: 'John', surname: 'Doe'}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have any questions or anything you can find me on my &lt;a href="https://twitter.com/AmerSikira"&gt;Twitter&lt;/a&gt;, or you can read some of my other articles like &lt;a href="https://webinuse.com/css-positions-the-complete-guide/"&gt;&lt;/a&gt;&lt;a href="https://webinuse.com/how-to-use-localstorage-api/"&gt;How to use localStorage API&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How To Make Filterable Portfolio With React.js</title>
      <author>Ammar Yaser</author>
      <pubDate>Fri, 15 Oct 2021 14:01:44 +0000</pubDate>
      <link>https://dev.to/ammarbasuony/how-to-make-filterable-portfolio-with-reactjs-1p27</link>
      <guid>https://dev.to/ammarbasuony/how-to-make-filterable-portfolio-with-reactjs-1p27</guid>
      <description>&lt;p&gt;In the past, it was not easy to control a web application, if you wanted to do a simple function, it required a lot of code, but now with the advancement of technology, it has become easy to do these functions.&lt;/p&gt;

&lt;p&gt;So, I’m coming today with the easiest way to make a filterable portfolio by categories using React.js&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l2Fov7F6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx68efdlq535q7lxct6n.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l2Fov7F6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx68efdlq535q7lxct6n.gif" alt="Final Result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, you need to install &lt;code&gt;create-react-app&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app my-app
cd my-app
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you have created a react app :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3FL8IbCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfxeszjjuxt44vvn5182.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3FL8IbCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfxeszjjuxt44vvn5182.png" alt="React App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next step is to create a file called &lt;code&gt;portfolio.js&lt;/code&gt; in &lt;code&gt;src/portfolio/portfolio.js&lt;/code&gt;&lt;br&gt;
And configure it in the &lt;code&gt;App.js&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/Portfolio/Portfolio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; 
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/portfolio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Router&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have an empty file called &lt;code&gt;portfolio.js&lt;/code&gt; let’s create the component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="nx"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to create states to control the the portfolio&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;getAllPortfolio: contain all the portfolio items&lt;/li&gt;
&lt;li&gt;portfolio: contain the current state of portfolio (on category change)&lt;/li&gt;
&lt;li&gt;categories: contain our categories&lt;/li&gt;
&lt;li&gt;selectedCategory: contain the selected category
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;getAllPortfolio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devices&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Accessories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devices&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tools&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fruits&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;portfolio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;

        &lt;span class="na"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devices&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Accessories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tools&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fruits&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shoes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="nx"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now this is the time that we will make these states work together and perform the action, we will write a function &lt;code&gt;filterItems()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;filterItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;portfolio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAllPortfolio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;portfolio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAllPortfolio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, let’s render our elements to the DOM&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;portfolioItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;work&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;categoriesList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;
                &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectedCat&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filterItems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Portfolio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;all-content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;categories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;categoriesList&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/section&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;works&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;portfolioItems&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you like it and learn something new :)&lt;br&gt;
You can follow me on &lt;a href="https://twitter.com/EngAmmarYaser"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.behance.net/ammaryaser"&gt;Behance&lt;/a&gt;, &lt;a href="https://dribbble.com/ammaryaser"&gt;Dribbble&lt;/a&gt;, &lt;a href="https://github.com/ammarbasuony"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
