<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Adding/Enabling Extensions in PHP using Windows</title>
      <author>Alonzo</author>
      <pubDate>Mon, 19 Jul 2021 19:28:12 +0000</pubDate>
      <link>https://dev.to/glowtoad123/adding-enabling-extensions-in-php-using-windows-2c2g</link>
      <guid>https://dev.to/glowtoad123/adding-enabling-extensions-in-php-using-windows-2c2g</guid>
      <description>&lt;p&gt;If you're using PHP or any PHP framework/library for the first time, you've probably noticed when you tried to use composer to create a project that you don't have certain extensions. You may have tried to go to composer to install these extensions, only to find out that this isn't working. Here's how to solve that problem.&lt;/p&gt;

&lt;p&gt;You may be surprised to find out that these extensions are already installed, but just are not enabled. To enable these, you must go to &lt;em&gt;C:\tools\php80_ in your file explorer. Next, you need to look for the &lt;strong&gt;php.ini&lt;/strong&gt; file. It may be hard to find this because the &lt;strong&gt;.ini&lt;/strong&gt; file extension is not shown after PHP. To locate this file, look for the icon that has the &lt;strong&gt;Configuration settings&lt;/strong&gt; type. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--man9zXrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/alonzoaustin-8314b.appspot.com/o/blogs%252Fphp_extensions%252Fphp_ini.png%3Falt%3Dmedia%26token%3D4599e91c-3dda-4209-9fab-5da8053d44dc" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--man9zXrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/alonzoaustin-8314b.appspot.com/o/blogs%252Fphp_extensions%252Fphp_ini.png%3Falt%3Dmedia%26token%3D4599e91c-3dda-4209-9fab-5da8053d44dc" alt="php.ini"&gt;&lt;/a&gt; Next, open it using your code editor/text editor/IDE. Next search for a long list of extensions that begin with _;extension&lt;/em&gt;. The &lt;strong&gt;;&lt;/strong&gt; comments out a single line, so look for the extensions that begin with &lt;strong&gt;;extension&lt;/strong&gt; and delete the &lt;strong&gt;;&lt;/strong&gt;. This will enable the extension. You are now ready to use the PHP framework/library of your choice. &lt;/p&gt;

&lt;p&gt;While developing your web app, you may try to install a package from composer, only to find that an extension that is not already in the &lt;em&gt;php.ini&lt;/em&gt; file. How can you fix this?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-extensions"&gt;
  &lt;/a&gt;
  Adding Extensions
&lt;/h2&gt;

&lt;p&gt;To add extensions, you need to go to &lt;em&gt;&lt;a href="http://pecl.php.net/"&gt;http://pecl.php.net/&lt;/a&gt;&lt;/em&gt; to find the extension you need. (I'm using MongoDB as an example) When you find an extension, find the right version and click on &lt;strong&gt;dll&lt;/strong&gt;. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvTn7gZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/alonzoaustin-8314b.appspot.com/o/blogs%252Fphp_extensions%252Fdll.png%3Falt%3Dmedia%26token%3D89f136ce-1bc7-4ba5-bf62-11d38af7d947" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvTn7gZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/alonzoaustin-8314b.appspot.com/o/blogs%252Fphp_extensions%252Fdll.png%3Falt%3Dmedia%26token%3D89f136ce-1bc7-4ba5-bf62-11d38af7d947" alt="dll not tgz"&gt;&lt;/a&gt; Again, look for the version compatible with your version of PHP, and download the ** non-threaded** file if you're not using apache. After that, extract the file and find the &lt;strong&gt;dll&lt;/strong&gt; file. Next copy the file into &lt;em&gt;C:\tools\php80\ext&lt;/em&gt;. You can then add the entry for the new extension in &lt;em&gt;php.ini&lt;/em&gt; like the other extensions (for example, to add MongoDB, you would type &lt;strong&gt;extension=mongodb&lt;/strong&gt; in alphabetical order of extensions unless stated otherwise). With that done, you can then install the package you need.&lt;/p&gt;

</description>
      <category>php</category>
      <category>windows</category>
    </item>
    <item>
      <title>I want to build an Operating System!!</title>
      <author>Tristan Elliott</author>
      <pubDate>Mon, 19 Jul 2021 19:11:14 +0000</pubDate>
      <link>https://dev.to/theplebdev/i-want-to-build-an-operating-system-5f86</link>
      <guid>https://dev.to/theplebdev/i-want-to-build-an-operating-system-5f86</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Now I am fully aware of herculean task that is building an operating system but thankfully I am relatively young and naïve enough to try.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#my-resources"&gt;
  &lt;/a&gt;
  My Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I have found some pretty awesome resources, such as books, computer science lectures and even old computer science labs. I found a series of lectures on YouTube by a CalTech professor, the  lectures are on intro to operating systems. Lectures can be found &lt;a href="https://www.youtube.com/watch?v=Hf4wvrgSHx8&amp;amp;list=PL3swII2vlVoVbav6FV98pidq6BsTN4u56"&gt;HERE&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;However, this is not our starting point. A prerequisite to building a operating system is to understand how computers actually work and believe it or not that very complicated. Our starting point is actually a series of lectures posted &lt;a href="https://www.youtube.com/watch?v=ynZWB0qPFGU&amp;amp;list=PL3swII2vlVoVspHvAYIvnbbqdV8oEuxkw"&gt;HERE&lt;/a&gt;. Now if we combine those lectures with the textbook, &lt;code&gt;Computer Systems: A Programmer's Perspective by Randal E. Bryant and David R. O'Hallaron&lt;/code&gt;, we should have a solid foundation and a linear path to our ultimate goal.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#timeline"&gt;
  &lt;/a&gt;
  Timeline
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;judging by the sheer density of these books, lectures and the fact that I am only able to commit two hours a day to reading these books. I am still trying to find a developer job. I would say that this will take well over a year to complete.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Because it seems hard, fun, scary, I might fail, I might succeed but ultimately because I fricken want to!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Thank you for taking the time out of your day to read this blog post of mine. If you have any questions or concerns please comment below or reach out to me on &lt;a href="https://twitter.com/TristAndroidDev"&gt;Twitter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>operatingsystem</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Lessons learned after being a Tech Lead for three years</title>
      <author>David Jiménez</author>
      <pubDate>Mon, 19 Jul 2021 18:48:18 +0000</pubDate>
      <link>https://dev.to/rydra/lessons-learned-after-being-a-tech-lead-for-three-years-3na2</link>
      <guid>https://dev.to/rydra/lessons-learned-after-being-a-tech-lead-for-three-years-3na2</guid>
      <description>&lt;p&gt;After being a technical lead for three years in my current company I decided it was a good time to retrospect on it and share my experience and conclusions. I hope you find my experiences helpful.&lt;/p&gt;

&lt;p&gt;Disclaimer: Any statement here are solely based on my experiences and knowledge. I am by no means a Leadership Coach so some conclusions I provide might be clash with some established ideas and conceptions. And that's ok, challenging what's established is always enriching!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We are developers. By default we are not the most charismatic people in the world (this is why we are developers after all, otherwise we might have picked another less solitary profession). However, I felt like working up and improving certain soft skills at the same pace as technical skills could boost my career. I found the chance to be on that role and I took it. And I never could have been more certain.&lt;/p&gt;

&lt;p&gt;However, during these years I learnt a lot. I made mistakes. I messed up. And on occasions maybe, and just maybe, I was right.&lt;/p&gt;

&lt;p&gt;I'm going to highlight those aspects of the tech lead role I found the most challenging and important, and most of them, surprisingly, are not especially tech-related; most of them refer to communication with your team and behavioral aspects.&lt;/p&gt;

&lt;p&gt;The topics I'm going to pinpoint in this article are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication and self-retrospection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enabler"&gt;You are a selfless enabler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#teacher"&gt;"The teacher"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bossy"&gt;It's not about being bossy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#feedback"&gt;Manners and feedback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reference"&gt;It's good to be a point of technical reference, but it's not mandatory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ownership"&gt;Share ownership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#leader"&gt;Ultimately, it's about being an actual leader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#communication-and-selfretrospection"&gt;
  &lt;/a&gt;
  Communication and self-retrospection &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It looks pretty obvious, but communicating effectively is an essential part of being a tech lead. You will have to talk with a lot of people, from developers to clients, crossing product owners and testers in the path. You don't necessarily need to be always talkative, it is way more important to listen and understand foreign ideas while realizing that not everybody will understand your technical jargon. &lt;/p&gt;

&lt;p&gt;When communicating with your team, sometimes you might be a grumpy furious monkey without being aware of it. This is why, from time to time, you should sit down and look at yourself from the outside in order to find gaps in your communication skills or behavior. Even when writing these lines I'm just realizing some communication mistakes I did several days ago which I was completely oblivious.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-are-a-selfless-enabler"&gt;
  &lt;/a&gt;
  You are a selfless enabler &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Tech Lead is a role meant to be selfless. Yes, we are all busy with our own share of work. But after all your teammates and you navigate in the same direction inside the context of the project. I like to think about it in an epic manner where you are a Spartan hoplite carrying a spear and a shield, but your shield is not meant to protect you, but your comrade at the left.&lt;/p&gt;

&lt;p&gt;Is a fellow developer blocked and you can help? Go help him ASAP and, if you cannot do it right now for whatever reason, kindly tell him/her to meet up at a &lt;strong&gt;specific&lt;/strong&gt;, later point in time to tackle the issue (note the word &lt;strong&gt;specific&lt;/strong&gt;) or delegate the responsibility to another team member.&lt;/p&gt;

&lt;p&gt;Neither you should hoard knowledge. I remember a debate with a former colleague from another company where he defended that, if you are good, it's better to keep your knowledge and best practices for yourself, with the statement that most people he shared his knowledge with were ungrateful and took advantage of that knowledge to step over him. Clearly a resentment from a past experience that sometimes gives you a lesson learned that, when you ponder about it with a good heart you think to yourself "that's a sad way to think about it".&lt;/p&gt;

&lt;p&gt;Even if you had any experience like that, I prefer to "flow in the good, selfless direction". Share your knowledge and eagerness to help by default, and if people are ungrateful and no one appreciates it, either you should reflect on how you are providing this help or maybe, just maybe, it could be time to move on to another job/place (yes, there are workplaces which are utter shitholes).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-teacher"&gt;
  &lt;/a&gt;
  "The teacher" &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This follows up a little bit the last statements of the previous section. Another of the roles I have at my current company is that of a "Technical Coach", bringing the more junior employees or new recruits up to speed on the project regarding the architecture of the software solution, best practices, coding techniques, etc.&lt;/p&gt;

&lt;p&gt;When I was at university, I wanted to be a professor there, teaching Software Engineering to students, sharing my knowledge while researching something awesome. I just loved that idea, and I studied a master oriented towards a Ph.D. on the area of Software Engineering.&lt;/p&gt;

&lt;p&gt;So, when I receive a question from one of my fellow dev mates, this part of me triggers and I just fire the cannon of knowledge and experience on the topic relentlessly, even when unrequested. Not all people are equal though, and while some will appreciate your wisdom, others will frown upon that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You do not have to always be "the teacher"&lt;/strong&gt;. It's a bit like the classical advice you are given when flirting in your early 20's: do not go all out unless you are requested so and keep a juicy bait on the hook.&lt;/p&gt;

&lt;p&gt;Even then, I have a personal conflict over this. I like the TV show &lt;em&gt;Avatar: The last airbender&lt;/em&gt;, and one of my favorite characters is Uncle Iroh, the uncle of the main antagonist of the show. He spreads wisdom everywhere, even if his own nephew doesn't want it. Still, I love Iroh at heart. I would love any reader to share his opinionated view on this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-not-about-being-bossy"&gt;
  &lt;/a&gt;
  It's not about being bossy &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The role is not meant to exercise authority and supremacy over others. I like flat hierarchical structures, since it promotes the feeling of ownership of the solution and the flowing of ideas from all directions in a team. Even though formally in your contract you are the technical lead, you are still one more developer and you must consider your fellow teammates as an equal.&lt;/p&gt;

&lt;p&gt;Yes, as the tech lead you might be the only technical guy from your team invited to certain meetings for the sake of keeping noise under control. But that doesn't mean that you belong to the Bilderberg Club. Try to act as a voice and speaker for your team, not yourself.&lt;/p&gt;

&lt;p&gt;A subtle, yet significant change I noted and changed: When introducing myself to either new job candidates at technical interviews or clients, I started stating my role as the Technical Lead of the development team. Recently, for the sake of that flat hierarchy inside the team, I changed that and started introducing myself simply as a software engineer or backend developer. It made me realize it's just not necessary to boast yourself at the slightest opportunity (unless by protocol they need you to introduce yourself as such)&lt;/p&gt;

&lt;p&gt;This brought me to the following conclusion: Humility is a good quality for a leader. Your contributions to the conversations, your communication skills and your confidence will eventually give a clue to the rest of the team who is the leader.&lt;/p&gt;

&lt;p&gt;As I was writing this though, a thought clashed my mind. In this era of big CEOs on big companies or big personalities where everybody thinks of them as true leaders, I perceive most of them are everything but humble. Just one more example that sometimes statements and lessons learned depend on perception. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#manners-and-feedback"&gt;
  &lt;/a&gt;
  Manners and feedback &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Yes, you and your teammates are going to screw up. Someone will not follow gitflow to the line and have a polluted remote git repository. Some code will make you pour blood from your eyes when reviewing a pull request.&lt;/p&gt;

&lt;p&gt;There are people, however, willing to improve and listen to feedback. If you find those, kindly address them and provide them with constructive feedback. People will appreciate it. Just remember this quote from Lincoln when giving "constructive feedback": "A drop of honey catches more flies than a gallon of gall".&lt;/p&gt;

&lt;p&gt;AND REMEMBER, the same works the other way around. Feedback is a gift, a very difficult gift someone gives to you (it's always way easier to stay silent and let people fail). Take the time to appreciate it if you receive some.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-good-to-be-a-point-of-technical-reference-but-its-not-mandatory"&gt;
  &lt;/a&gt;
  It's good to be a point of technical reference, but it's not mandatory &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;There are a number of reasons you might have obtained the role of tech lead of a team: it may have been your technical prowess, your communication skills, a mix of both...&lt;/p&gt;

&lt;p&gt;Remember though that you are not a walking encyclopedia: you do not know everything, nor you should force yourself to attain such state, nor you should look pedantic. It's ok to admit you don't know something. If a teammate is blocked though and you are required to solve a certain problem do what any other developer worth their salt would do: research, test and solve it.&lt;/p&gt;

&lt;p&gt;Neither you need to be the role-model or that steadfast statue one-hundred percent of the time. We are humans after all: we laugh, we explain bad jokes that make our mates either fall from the chair or frown upon us, we may have bad days. Showing weakness it's ok (and in fact, deeply, people appreciate it, it makes you more approachable than keeping the barrier up all the time), just make sure you always keep cool and don't let any storm you generate fall upon your teammates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#share-ownership"&gt;
  &lt;/a&gt;
  Share ownership &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As a tech lead, the definition of the architecture and implementation of parts of the software system are your responsibility. But that doesn't mean that you should define it on your own. It's a good idea to build something considering the input of your team. It's easier for developers to build something if they contributed to the solution actively.&lt;/p&gt;

&lt;p&gt;Do not be afraid to share ownership and collaborate with others to build a software solution. They are not paying you to be a hero. While making developers feel like the project is their child is cool, it's actually not yours unless you are the owner of the company. They are paying you to promote best development practices inside the team, coach junior members and new recruits, and offer a working, maintainable solution to the problem at hand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ultimately-its-about-being-an-actual-leader"&gt;
  &lt;/a&gt;
  Ultimately, it's about being an actual leader&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Even though your contract might state the word "lead", it's not enough. &lt;strong&gt;A leader is someone that people follow by their own will&lt;/strong&gt;. Remember that a leader that people follow by force is not a leader, but a mere boss.&lt;/p&gt;

&lt;p&gt;And trust me, it's way, way, way more rewarding for everybody if people follow you because they want to. Not everybody is going to like you and that's ok, try though that statistically most people like you or retrospect about why it's not that way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;I'm a developer at the core, but having had the opportunity to develop a good share of soft skills in the shape of technical leadership has been one of the most rewarding and personality-bending steps I ever took on my career. It has changed me for good: it boosted my communication skills both inside and outside the technical team and gave me the chance to be able to share the joy of facing new technical challenges with my team. &lt;/p&gt;

&lt;p&gt;Nevertheless, being a technical lead (in fact, any leading position in general, not necessarily technical) is deeply bound to your own personality. If your personality clashes with some of the aspects required for the role (you're selfish and have a boundless evil ambition, or you prioritize yourself over your teammates), you'll eventually show up your true colors. So TL;DR: don't be an asshole.&lt;/p&gt;

</description>
      <category>leadership</category>
    </item>
    <item>
      <title>Engineering Customer Success w/ Sunil Mavadia</title>
      <author>Conor Bronsdon</author>
      <pubDate>Mon, 19 Jul 2021 18:47:26 +0000</pubDate>
      <link>https://dev.to/linearb/engineering-customer-success-w-sunil-mavadia-1hbm</link>
      <guid>https://dev.to/linearb/engineering-customer-success-w-sunil-mavadia-1hbm</guid>
      <description>&lt;p&gt;Customer success can make or break any business, especially when you’re scaling. &lt;/p&gt;

&lt;p&gt;Sunil Mavadia, Director of Global Architecture at Cloudbees, has been building and scaling customer success teams at software companies since before customer success was a known term. Now, over a decade later, he joins &lt;a href="https://devinterrupted.com/podcast/engineering-customer-success/"&gt;Dev Interrupted&lt;/a&gt; to discuss the unique relationship between developers and their customers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0sqkRNDgoA7jsINpXie73J"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to initiate and scale a customer success initiative&lt;/li&gt;
&lt;li&gt;When to bring customers and developers together&lt;/li&gt;
&lt;li&gt;What dev teams can do to improve customer success&lt;/li&gt;
&lt;li&gt;How to structure the conversation between engineering and customer success&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>devops</category>
      <category>management</category>
      <category>customer</category>
    </item>
    <item>
      <title>What is Jina?</title>
      <author>Vishwa.R</author>
      <pubDate>Mon, 19 Jul 2021 18:36:20 +0000</pubDate>
      <link>https://dev.to/codereaper08/what-is-jina-4deg</link>
      <guid>https://dev.to/codereaper08/what-is-jina-4deg</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6j3WfUVk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/jina-ai/jina/master/.github/logo-only.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6j3WfUVk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/jina-ai/jina/master/.github/logo-only.gif" alt="Jina-AI-Logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This Post discusses &lt;a href="https://jina.ai/"&gt;Jina&lt;/a&gt;, a neural search framework from Jina-AI, in layman terms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-search-going-now-"&gt;
  &lt;/a&gt;
  How is search going now ?
&lt;/h2&gt;

&lt;p&gt;We search the internet for a variety of needs, from finding the lyrics of your favourite song to ordering food online. We use search engines like google to search and get the desired data based on a query. Now what is a query ?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#query-"&gt;
  &lt;/a&gt;
  Query :
&lt;/h3&gt;

&lt;p&gt;It is a precise request for information retrieval with database and information systems.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__wikipedia--container"&gt;
  &lt;div class="ltag__wikipedia--header"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sew3uq9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/wikipedia-logo-0a3e76624c7b1c3ccdeb9493ea4add6ef5bd82d7e88d102d5ddfd7c981efa2e7.svg" class="ltag__wikipedia--logo" alt="Wikipedia Logo"&gt;
    &lt;a href="https://en.wikipedia.org/wiki/Query" rel="noopener noreferrer"&gt;Query&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="ltag__wikipedia--extract"&gt;&lt;p&gt;In general, a &lt;b&gt;query&lt;/b&gt; is a form of questioning, in a line of inquiry.&lt;/p&gt;&lt;/div&gt;
  &lt;div class="ltag__wikipedia--btn--container"&gt;
    
      &lt;a href="https://en.wikipedia.org/wiki/Query" rel="noopener noreferrer"&gt;View on Wikipedia&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Now, after we give a query to a search engine, it begins it's work and responds to our query with the results matching. For example, imagine you search for the new film releasing this weekend, you google it like, &lt;code&gt;New movie this week release&lt;/code&gt; or &lt;code&gt;new film near me&lt;/code&gt;. These two phrases we use for searching about the to be released film is the query we give to search engine. Now search engine uses this and retrieve and present us information/data related to the query we gave. This is how the process works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#traditional-query"&gt;
  &lt;/a&gt;
  Traditional query:
&lt;/h3&gt;

&lt;p&gt;In our day-to-day life, we search (I mean query) search engines using plain text mostly. This approach is traditional. Search engines like Google are for general purpose and cannot be tailored for the business needs. Moreover, this traditional approach is error-prone (User can misspell the queries or some words mean different in different context) This poses a void for Jina to enter the scene.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umsQfKuK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5c06e16a5bdc7bce10059cc3/5e5540cfdd9a4a409a6ba476_43qyMsRomMThG3bDbaGcFTTcJvTm0xGSbQgqudgVNND6DrfIHrTbVyDbfV0i8-ebnoNNc_snTNTIoA_QL7VcNhr1u0LDeK_0y5iETvjs-ZKZtHfskvcu2b9iT1adp0dXxi0cCfwC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umsQfKuK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5c06e16a5bdc7bce10059cc3/5e5540cfdd9a4a409a6ba476_43qyMsRomMThG3bDbaGcFTTcJvTm0xGSbQgqudgVNND6DrfIHrTbVyDbfV0i8-ebnoNNc_snTNTIoA_QL7VcNhr1u0LDeK_0y5iETvjs-ZKZtHfskvcu2b9iT1adp0dXxi0cCfwC.png" alt="Traditional-query"&gt;&lt;/a&gt;&lt;/p&gt;
Image source : growhackscale.com


&lt;h2&gt;
  &lt;a href="#how-jina-works"&gt;
  &lt;/a&gt;
  How Jina works?
&lt;/h2&gt;

&lt;p&gt;Jina, on the other hand, is a neural search framework, meaning it uses a deep learning based Neural Search approach to provide out of the box features. One clear advantage of Jina is that it enables users to query with unstructured data, like images, audio, video, and maps. Sounds cool right? If it didn't awe you, here's another plus, it is &lt;strong&gt;fully customizable and Open-Source&lt;/strong&gt;. This means one can easily tailor their search needs with Jina and provide a highly accurate search results for unstructured query.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#structured-and-unstructured-data"&gt;
  &lt;/a&gt;
  Structured and Unstructured data:
&lt;/h3&gt;

&lt;p&gt;Ordered data is known as structured data, for example CSV and XML files. Here, data is categorized and ordered, in the form of rows and columns. Whereas in Unstructured data, such orderliness and categorization is difficult and not found.&lt;/p&gt;

&lt;p&gt;Now here Jina wins as it enables users to query with unstructured data like images, videos and more. This is possible because of the fundamental development of Jina is strongly rooted on Neural Search and deep learning. This makes Jina trainable for different use-cases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xYRUCFct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lawtomated.com/wp-content/uploads/2019/04/structuredVsUnstructuredIgneos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xYRUCFct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lawtomated.com/wp-content/uploads/2019/04/structuredVsUnstructuredIgneos.png" alt="Different-datas"&gt;&lt;/a&gt;&lt;/p&gt;
Image source : lawtomated.com


&lt;h2&gt;
  &lt;a href="#traditional-search-vs-neural-search"&gt;
  &lt;/a&gt;
  Traditional Search VS Neural Search:
&lt;/h2&gt;

&lt;p&gt;Chill, This is not going to be a fight between two ways. Both has their own pros and cons. Like, Neural Search has low query matching capabilities compared to Traditional Search. But Neural Search wins in scalability and customizable factor.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-jina"&gt;
  &lt;/a&gt;
  Using Jina:
&lt;/h2&gt;

&lt;p&gt;We just install Jina using &lt;code&gt;pip install jina&lt;/code&gt; in a venv. &lt;br&gt;
Jina works on &lt;code&gt;flows&lt;/code&gt;, a fundamental component, which manages things to get your application running, each flow takes care of real world task. A flow contains &lt;code&gt;executor&lt;/code&gt;, executors are like elements which do data processing for our application.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We add these executors called MyTransformer and MyIndexer for data encoding and indexing purpose respectively&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We can visualize this flow using plot function&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;this generates an SVG like below,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TEv6_DqP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jina.ai/assets/images/blog/tutorials/plot_flow1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TEv6_DqP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jina.ai/assets/images/blog/tutorials/plot_flow1.png" alt="Generated-SVG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We now add a name to the executors like below, so that the generated SVG is readable,&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;This now generates a more readable SVG like below,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TKz-O3F7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jina.ai/assets/images/blog/tutorials/plot_flow2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TKz-O3F7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jina.ai/assets/images/blog/tutorials/plot_flow2.png" alt="Generated-SVG2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We then add executors needed for our purpose and begin our work. More detailed explanations are given in &lt;a href="https://docs.jina.ai/"&gt;Jina-Docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribute-to-jina"&gt;
  &lt;/a&gt;
  Contribute to Jina:
&lt;/h2&gt;

&lt;p&gt;Jina adores Open-Source as it's crown and works on community level to get features onboard. Any type of contributions are welcomed, and they have a diverse and inclusive community too. Head over to the &lt;a href="https://github.com/jina-ai/jina/"&gt;GitHub page&lt;/a&gt; and start working on issues. If you want to spread a word about Jina, Awesome, do it soon!&lt;br&gt;
Any type of contribution is welcomed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#love-jina-read-these-blogs-too"&gt;
  &lt;/a&gt;
  Love Jina? Read these blogs too
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexcg/what-is-neural-search-and-why-should-i-care-2gpd"&gt;https://dev.to/alexcg/what-is-neural-search-and-why-should-i-care-2gpd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kdnuggets.com/2021/05/what-neural-search.html"&gt;https://www.kdnuggets.com/2021/05/what-neural-search.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jina.ai/2021/06/28/tutorial.html"&gt;https://jina.ai/2021/06/28/tutorial.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Correct me if I am wrong, forgive me if my English is bad.&lt;/p&gt;

</description>
      <category>python</category>
      <category>ai</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Getting started with Terraform: Terraform Import</title>
      <author>Daniel Huerta</author>
      <pubDate>Mon, 19 Jul 2021 18:25:08 +0000</pubDate>
      <link>https://dev.to/danihuerta/getting-started-with-terraform-terraform-import-53do</link>
      <guid>https://dev.to/danihuerta/getting-started-with-terraform-terraform-import-53do</guid>
      <description>&lt;p&gt;Even when we are using an &lt;em&gt;Infrastructure as Code&lt;/em&gt; tool such as &lt;strong&gt;Terraform&lt;/strong&gt; can be a member of a team (including us 😅) that will ignore all this workflow and will create &lt;strong&gt;manually&lt;/strong&gt; some resources directly in the cloud provider. It is unnecessary to say that it can be a really headache for the team, mainly because all the required changes for that resource need to be manually as well and ... that's why Terraform exists!! 🤯.&lt;/p&gt;

&lt;p&gt;So, in this scenario there's a solution in TF and it is the &lt;strong&gt;import&lt;/strong&gt; command 😎. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terraform-import"&gt;
  &lt;/a&gt;
  Terraform Import
&lt;/h2&gt;

&lt;p&gt;This is a simple command that will help us in this tricky situations, it is going to (as its name says) import &lt;em&gt;existing&lt;/em&gt; infrastructure to be managed by Terraform from now on.&lt;/p&gt;

&lt;p&gt;But be careful, there is an important thing to mention here, &lt;strong&gt;&lt;em&gt;Terraform will not create the configuration file of the resource that was created manually&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Because of this, it is necessary to first write manually a resource configuration block for the resource (with the same properties as the one that is already created), to which the imported object will be linked.&lt;/p&gt;

&lt;p&gt;So let's do an example with an AWS EC2 instance:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a file with the provider configuration (in this case AWS).&lt;/li&gt;
&lt;li&gt;Create a file in which we need to configure the resource that is already created in the Cloud with the same properties. &lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;terraform import  &lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#ec2-instance-manually"&gt;
  &lt;/a&gt;
  EC2 instance manually
&lt;/h3&gt;

&lt;p&gt;Let's start creating the EC2 instance manually with some basic configuration. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T73CUvLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y1v1w44toqn7ww7b0sxa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T73CUvLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y1v1w44toqn7ww7b0sxa.png" alt="Screen Shot 2021-07-19 at 12.58.19"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here it is important to review all the important properties that this resource has because they need to be the same as the ones that we are goin to set in Terraform to be able to match both resources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-configuration-file"&gt;
  &lt;/a&gt;
  Creating configuration file
&lt;/h3&gt;

&lt;p&gt;See that just some attributes are required to mapped both resources:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gnflbhyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/akr2vjjwlkxr21lz4bjk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gnflbhyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/akr2vjjwlkxr21lz4bjk.png" alt="Screen Shot 2021-07-19 at 13.11.23"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we have created the configuration file for the resources let's run:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;terraform import aws_instance.myec2 i-0c598199bf2771676&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Change the name of the resources and the id according to yours&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now the resource that was created manually has been mapped to the local one that we set with Terraform, it means that if we change something in the file, the change will be reflected in AWS.&lt;/p&gt;

&lt;p&gt;Let's change the Name tag from &lt;em&gt;manual&lt;/em&gt; to &lt;em&gt;manual2&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qlx86J4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iiuhxrz6pv7fi2l5hy5v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qlx86J4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iiuhxrz6pv7fi2l5hy5v.png" alt="Screen Shot 2021-07-19 at 13.15.25"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even when we run the plan command we can see that any resource will be created but just modified (it means that there's already an existing created resource with that configuration).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;terraform plan&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;terraform apply -auto-approve&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, we can see that the changes were reflected in AWS:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ui05Vqhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbqbo1ry970t69r4d8lm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ui05Vqhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbqbo1ry970t69r4d8lm.png" alt="Screen Shot 2021-07-19 at 13.17.31"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can manage that resource using Terraform 😉. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closure"&gt;
  &lt;/a&gt;
  Closure
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;import&lt;/strong&gt; command is very useful, these situations where a resource is created manually occurs very frequently 😅 fortunately exists this solution so don't hesitate to use it when it happens to you.&lt;/p&gt;

&lt;p&gt;Oh! And just one last thing, Terraform will include the feature of creating the &lt;strong&gt;configuration file&lt;/strong&gt; when we run the &lt;em&gt;import command&lt;/em&gt; in future releases, so this tricky part will be just for a few moment 😉💙.&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>aws</category>
      <category>devops</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Null Coalescing Operator in C#</title>
      <author>Ishaan Sheikh</author>
      <pubDate>Mon, 19 Jul 2021 18:14:21 +0000</pubDate>
      <link>https://dev.to/sheikh_ishaan/null-coalescing-operator-in-c-4cjk</link>
      <guid>https://dev.to/sheikh_ishaan/null-coalescing-operator-in-c-4cjk</guid>
      <description>&lt;p&gt;If you have used javascript before you probably have used the logical OR &lt;strong&gt;(||)&lt;/strong&gt; operator while assigning values to a variable. For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code snippet assigns the value of &lt;code&gt;b&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt; if it is defined, else assign &lt;code&gt;c&lt;/code&gt; to it.&lt;/p&gt;

&lt;p&gt;In C# the &lt;code&gt;??&lt;/code&gt; operator is used to handle this kind of situations.&lt;br&gt;
This operator us available in C# 8.0 and later.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above statement will be equivalent to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h2&gt;

&lt;p&gt;Below are some use-cases for &lt;code&gt;??&lt;/code&gt; operator.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-throwing-an-exception"&gt;
  &lt;/a&gt;
  1. Throwing an exception
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"'input' cannot be null"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-assigning-a-default-value"&gt;
  &lt;/a&gt;
  2. Assigning a default value
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;requiredValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userInput&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-this-operator-can-also-be-nested"&gt;
  &lt;/a&gt;
  3. This operator can also be Nested
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This operator is &lt;strong&gt;right-associative&lt;/strong&gt;, so the above example will evaluated as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>csharp</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Squash 3 commits into 1?
</title>
      <author>ajay upreti</author>
      <pubDate>Mon, 19 Jul 2021 18:12:38 +0000</pubDate>
      <link>https://dev.to/ajayupreti/how-to-squash-3-commits-into-1-3b48</link>
      <guid>https://dev.to/ajayupreti/how-to-squash-3-commits-into-1-3b48</guid>
      <description>&lt;h3&gt;
  &lt;a href="#do-git-log-and-see-the-commits-you-want-to-squash-is-commited-first"&gt;
  &lt;/a&gt;
  Do git log and see the commits you want to squash is commited first.
&lt;/h3&gt;

&lt;p&gt;if you want squash top 3 commits from your head,&lt;br&gt;
Use this command,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git rebase -i HEAD~3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here the tilde ~ symbol with 3 pick the top latest three commits and it will pop up in an interactive shell where you can select the top commit and squash other two commits into one by entering s, it means squash.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If your commit is not appearing then do git log and see, if not then&lt;/p&gt;

&lt;p&gt;git add files&lt;br&gt;
&lt;code&gt;git commit -m 'your commit'&lt;/code&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>githunt</category>
      <category>git</category>
    </item>
    <item>
      <title>Npm libraries you need to know for your Node JS App</title>
      <author>DHANUSH N</author>
      <pubDate>Mon, 19 Jul 2021 17:41:21 +0000</pubDate>
      <link>https://dev.to/dhanushxeno/npm-libraries-you-need-to-know-for-your-node-js-app-3312</link>
      <guid>https://dev.to/dhanushxeno/npm-libraries-you-need-to-know-for-your-node-js-app-3312</guid>
      <description>&lt;p&gt;NPM Libraries you need to know for Node Js&lt;/p&gt;

&lt;p&gt;📌 Bull&lt;/p&gt;

&lt;p&gt;The fastest &amp;amp; most reliable redis based queue for node&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/Qe6yXdp2FR"&gt;https://t.co/Qe6yXdp2FR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 Bull Board&lt;/p&gt;

&lt;p&gt;This is built in top of bull which helps to visualise the queue &amp;amp; their jobs&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/rJe8LJ5Mvp"&gt;https://t.co/rJe8LJ5Mvp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 Lodash&lt;/p&gt;

&lt;p&gt;One of the best utility library for javascript&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/UtRuwgOLgs"&gt;https://t.co/UtRuwgOLgs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 Jest&lt;/p&gt;

&lt;p&gt;Complete and ready to set-up JavaScript testing solution. A great one if you are following Test driven development&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/kkFZuMxif8"&gt;https://t.co/kkFZuMxif8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 Express winston&lt;/p&gt;

&lt;p&gt;express-winston provides middlewares for request and error logging of your express app and also provides variety of options as well&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/PNDSMNOD7N"&gt;https://t.co/PNDSMNOD7N&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 User Agent&lt;/p&gt;

&lt;p&gt;Helps to determine the device information&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/AWDBpjTy0u"&gt;https://t.co/AWDBpjTy0u&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 Ip address&lt;/p&gt;

&lt;p&gt;Helps to deal with Ipv4 &amp;amp; Ipv6 addresses in Javascript&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/sS52oErRih"&gt;https://t.co/sS52oErRih&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 Uuid&lt;/p&gt;

&lt;p&gt;Helps in generation of unique identifier to be added in your application&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/WSNf7zxs0G"&gt;https://t.co/WSNf7zxs0G&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 Joi&lt;/p&gt;

&lt;p&gt;Most famous &amp;amp; powerful data validation &amp;amp; schema description language in Javascript&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/JD0JIQ2iW2"&gt;https://t.co/JD0JIQ2iW2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌 Winston daily rotate file&lt;/p&gt;

&lt;p&gt;It is a transport of winston that logs information to a rotating file. Logs can be removed after some days and also rotation of log files can be based on date, size &amp;amp; limit&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.co/aZvJww5eqE"&gt;https://t.co/aZvJww5eqE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you know anymore famous npm libraries feel free to add below 👇&lt;/p&gt;

&lt;p&gt;To know more tech related information let's stay connected via &lt;a href="https://twitter.com/Dhanush_Xen?s=09"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>npm</category>
      <category>discuss</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What is SEO: A Beginner's Guide to SEO</title>
      <author>Aman Chourasia</author>
      <pubDate>Mon, 19 Jul 2021 17:32:57 +0000</pubDate>
      <link>https://dev.to/amanchourasia/what-is-seo-24d9</link>
      <guid>https://dev.to/amanchourasia/what-is-seo-24d9</guid>
      <description>&lt;p&gt;The full form of SEO is Search Engine Optimization and it is a technique with the help of which we rank our posts in the top position on the first page of any search engine. &lt;/p&gt;

&lt;p&gt;All bloggers' goal is to get the first position in search engines like Google and bring more and more traffic to their blog.&lt;/p&gt;

&lt;p&gt;When you start Blogging we must have heard about SEO.&lt;/p&gt;

&lt;p&gt;Any new blogger does not understand this and just spends more and more time writing blog designs and posts.&lt;/p&gt;

&lt;p&gt;But after some time, despite working so hard, when the visitors of the page on the blog is zero, then the desire to know also arises in their minds that what is this search engine optimization, why is it necessary and how?&lt;/p&gt;

&lt;p&gt;You understand that just as there are crores of stars in the sky, in the same way, there are crores of websites on the internet.&lt;/p&gt;

&lt;p&gt;People only know or recognize the website which is famous by the brand name or which the search engine keeps above in the result page. You would also like that whatever page you have on your blog should make it to the first place of Google.&lt;/p&gt;

&lt;p&gt;That is why let us know what SEO means.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-seo"&gt;
  &lt;/a&gt;
  What is SEO?
&lt;/h2&gt;

&lt;p&gt;The full form of SEO is Search Engine Optimization. This is a way in which we can rank our posts in search engines.&lt;/p&gt;

&lt;p&gt;This is a technique using which we optimize the post written on our blog so that it ranks in the top position on the first page of search engines like Google, Bing, Yahoo...&lt;/p&gt;

&lt;p&gt;You are reading this post because it has reached you only because of SEO. So now be sure that you are at the right place.&lt;/p&gt;

&lt;p&gt;I will give you all the information about this technique. By which you will get every information that will answer every question related to SEO that you are looking for.&lt;/p&gt;

&lt;p&gt;In the beginning, a new blogger does not have any idea about this.&lt;/p&gt;

&lt;p&gt;But gradually the new blogger comes to know the importance of this word and also understands that there is no benefit in blogging without search engine optimization.&lt;/p&gt;

&lt;p&gt;If a blogger is not aware of this, then that blogger's blog will simply be lost on the internet and will not reach the people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For example&lt;/strong&gt;, let's say that there are many stars in the sky, but we recognize the ones that give more light or are closer to us.&lt;/p&gt;

&lt;p&gt;If we know optimization well then we can make our blog or website 1 No. Rank on position. If we do not do Search Engine Optimization, we will not see our website or blog anywhere on the result page of the Search Engine.&lt;/p&gt;

&lt;p&gt;Let us understand it with the help of an example. Suppose I want to get information about Pen from Google, then I will search "What is Pen"  Now Google will show all the articles related to the word Pen in the search result.&lt;/p&gt;

&lt;p&gt;In this, we will see many different websites that have written posts about Pen. So as we are served the desired website, we will simply go to a website and look for the information required.&lt;/p&gt;

&lt;p&gt;If we do not get satisfaction from the information in it, then we can see the other posts related to it to find our desired answer.&lt;/p&gt;

&lt;p&gt;The search engine optimization of the blog which is at number 1 in this search result is the strongest, only then it is ranking at No 1. position. There are chances of getting more traffic by staying ranked in the first position.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://www.amanchourasia.in/2021/06/what-is-seo.html"&gt;What is SEO: A Beginner's Guide to SEO&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Read More:&lt;/em&gt; &lt;a href="https://www.amanchourasia.in/2021/06/what-is-seo.html"&gt;https://www.amanchourasia.in/2021/06/what-is-seo.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>seo</category>
      <category>blog</category>
    </item>
    <item>
      <title>Migrating from Lambda@Edge to CloudFront Functions</title>
      <author>Jimmy Dahlqvist</author>
      <pubDate>Mon, 19 Jul 2021 17:30:10 +0000</pubDate>
      <link>https://dev.to/aws-builders/migrating-from-lambda-edge-to-cloudfront-functions-3k7k</link>
      <guid>https://dev.to/aws-builders/migrating-from-lambda-edge-to-cloudfront-functions-3k7k</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cO-yBuLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jimmydqv.com/assets/img/post_migrate_cloudfront_functions_thumb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cO-yBuLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jimmydqv.com/assets/img/post_migrate_cloudfront_functions_thumb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have been using Lambda@Edge for several years now, first time I used it was back in 2018, wrote this &lt;a href="https://jimmydqv.com/create-a-serverless-blog/"&gt;post&lt;/a&gt; back then. I was always under the impression that the Lambda function was running in the edge cache, hence the name. But I was apparently wrong, it runs in the region cache and not in the edge cache. That became clear when AWS, back in May 2021, release the new and shiny CloudFront Functions that was going to run in true edge cache.&lt;br&gt;&lt;br&gt;
So what are the differences? How do we go about to migrate from Lambda@Edge to CloudFront Functions. In this post I will try to explain the differences and talk about my experience migrating my blog infrastructure to CloudFront functions.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lambdaedge-vs-cloudfront-functions"&gt;
  &lt;/a&gt;
  Lambda@Edge vs CloudFront Functions
&lt;/h2&gt;

&lt;p&gt;So what are the difference between the two then? First of all Lambda@Edge run at the 13 (at the time of writing this post) Regional Caches. CloudFront Functions run at the 200+ Edge Caches. That mean that the your code will run closer to your users.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qGlI1Pal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jimmydqv.com/assets/img/post_migrate_cloudfront_functions_functions_lambda.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qGlI1Pal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jimmydqv.com/assets/img/post_migrate_cloudfront_functions_functions_lambda.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The other major differences are around runtime support, memory usages, execution time, and more. Here is a table showing the differences.  &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;CloudFront Functions&lt;/th&gt;
&lt;th&gt;Lambda@Edge&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Runtime&lt;/td&gt;
&lt;td&gt;JavaScript&lt;br&gt;(ECMAScript 5.1 compliant)&lt;/td&gt;
&lt;td&gt;Node.js, Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CloudFront triggers&lt;/td&gt;
&lt;td&gt;Viewer request Viewer response&lt;/td&gt;
&lt;td&gt;Viewer request&lt;br&gt;Viewer response&lt;br&gt;Origin request&lt;br&gt;Origin response&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Execution time&lt;/td&gt;
&lt;td&gt;1 millisecond&lt;/td&gt;
&lt;td&gt;5 seconds (viewer triggers)&lt;br&gt;30 seconds (origin triggers)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory&lt;/td&gt;
&lt;td&gt;2MB&lt;/td&gt;
&lt;td&gt;128MB (viewer triggers)&lt;br&gt;10GB (origin triggers)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Package size&lt;/td&gt;
&lt;td&gt;10 KB&lt;/td&gt;
&lt;td&gt;1 MB (viewer triggers)&lt;br&gt;50 MB (origin triggers)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network access&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;File system access&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Access to the request body&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;That was a lot of differences, but what does it mean? How do I know which to choose?&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;So what about pricing? Is CloudFront Functions or Lambda@Edge more expensive?&lt;br&gt;
With Lambda@Edge you pay $0.60 per 1 million requests plus the execution time ($0.00000625125 FOR EVERY 128MB-SECOND).&lt;br&gt;
With CloudFront Functions you pay $0.10 per 1 million Invocations and nothing for execution time.&lt;br&gt;
That mean that CloudFront Functions is the cheapest option of the two.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#choosing-lambdaedge-or-cloudfront-functions"&gt;
  &lt;/a&gt;
  Choosing Lambda@Edge or CloudFront Functions
&lt;/h3&gt;

&lt;p&gt;As we just saw there are several differences between Lambda@Edge and CloudFront functions. Which should I use?&lt;br&gt;
I would say that if you don't need to react on origin triggers, have access to the request body, need file or network access, can finish execution within 1 ms and have really small deployment packages, then CloudFront Functions is probably a great match for you. Just remember that no network access mean no access to any other AWS service.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#migrating"&gt;
  &lt;/a&gt;
  Migrating
&lt;/h2&gt;

&lt;p&gt;CloudFront Functions are deployed with the CloudFront distribution in the region of your choice. This truly made deployment much easier, Lambda@Edge always had to be deployed in us-east-1 region, with CloudFront Functions there was no need to target different regions during deployment.&lt;/p&gt;

&lt;p&gt;I have been using Lambda@Edge to make CloudFront act more like a webserver, so if a link was pointing to a folder I use Lambda@edge to append index.html to the path, so the correct file is requested from S3. Since I didn't use any network access, my Lambda@edge function was rather fast, and written in pure Javascript the migration process was rather easy.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#create-the-function"&gt;
  &lt;/a&gt;
  Create the Function
&lt;/h3&gt;

&lt;p&gt;First of all I created a AWS::CloudFront::Function and deployed that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;  &lt;span class="na"&gt;CloudFrontFunction&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::CloudFront::Function&lt;/span&gt;
    &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;UpdatePath&lt;/span&gt;
      &lt;span class="na"&gt;AutoPublish&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;FunctionCode&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!Sub&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;function handler(event) {&lt;/span&gt;
          &lt;span class="s"&gt;var request = event.request;&lt;/span&gt;
          &lt;span class="s"&gt;var uri = request.uri;&lt;/span&gt;
          &lt;span class="s"&gt;uri = uri.replace(/\/$/, '\/index.html');&lt;/span&gt;
          &lt;span class="s"&gt;request.uri = uri;&lt;/span&gt;
          &lt;span class="s"&gt;return request;&lt;/span&gt;
        &lt;span class="s"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;FunctionConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;Comment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!Sub&lt;/span&gt; &lt;span class="s"&gt;Append index.html to folder paths&lt;/span&gt;
        &lt;span class="na"&gt;Runtime&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;cloudfront-js-1.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Runtime of the function must always be cloudfront-js-1.0. I could not find a good way to keep the code in an external source file and not inline it in the CloudFormation template. This is a rather clunky way to add the code for the function. I would love to see a deployment similar to how Lambda is deployed. Since my code was rather short it is manageable to have it inlined.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-and-debugging"&gt;
  &lt;/a&gt;
  Testing and debugging
&lt;/h3&gt;

&lt;p&gt;When the function was deployed I could turn to the console to test it out, which was a rather nice experience. You can select the trigger and what stage, Development or Live, you like to use for the test.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9VKiwMhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jimmydqv.com/assets/img/post_migrate_cloudfront_functions_test_img1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9VKiwMhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jimmydqv.com/assets/img/post_migrate_cloudfront_functions_test_img1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4EWH-Ep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jimmydqv.com/assets/img/post_migrate_cloudfront_functions_test_img2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4EWH-Ep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jimmydqv.com/assets/img/post_migrate_cloudfront_functions_test_img2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
The result is presented in a really nice way.&lt;/p&gt;

&lt;p&gt;It is also possible to perform tests using the CLI in an automatic way. This is done using the test-function command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws cloudfront test-function &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--name&lt;/span&gt; ExampleFunction &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--if-match&lt;/span&gt; ETVABCEXAMPLE &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--event-object&lt;/span&gt; fileb://event-object.json
    &lt;span class="nt"&gt;--stage&lt;/span&gt; DEVELOPMENT
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The event-object is Json with the information about stage etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"context"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"eventType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"viewer-request"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"viewer"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.2.3.4"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"request"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"uri"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/mytest/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"headers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"host"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"example.org"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The deployment and testing is really nice, you can easily deploy a new development version and test it out before going live. &lt;br&gt;
Logs, printed using console.log() is always sent to CloudWatch logs in us-east-1, doesn't matter what edge location the Function runs in, logs are in us-east-1&lt;/p&gt;

&lt;p&gt;So after I had tested the Function it was time to update the CloudFormation template.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#doing-the-actual-migration"&gt;
  &lt;/a&gt;
  Doing the actual migration
&lt;/h3&gt;

&lt;p&gt;The last step is to do the actual update of CloudFormation and do the migration. I commented out the LambdaFunctionAssociations section and added the FunctionAssociations instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;CloudFrontDistribution&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::CloudFront::Distribution&lt;/span&gt;
    &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;DistributionConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;....&lt;/span&gt;
            &lt;span class="s"&gt;FunctionAssociations&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;EventType&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;viewer-request&lt;/span&gt;
                &lt;span class="na"&gt;FunctionARN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!GetAtt&lt;/span&gt; &lt;span class="s"&gt;CloudFrontFunction.FunctionMetadata.FunctionARN&lt;/span&gt;
            &lt;span class="c1"&gt;#LambdaFunctionAssociations:&lt;/span&gt;
            &lt;span class="c1"&gt;#    - EventType: viewer-request&lt;/span&gt;
            &lt;span class="c1"&gt;#    LambdaFunctionARN: !Ref LambdaARN&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The deployment took a couple of minutes but was not that bad. After the deployment was done the page was working perfect and I could delete the Lambda@Edge function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Migrating to CloudFront Functions from Lambda@Edge was really easy, and was accomplished with just a few steps. So what did the migration bring? I feel that it was easier to debug and test CloudFront Functions. Testing was nice and straight forward. That logs are always in us-east-1 and not as with Lambda@Edge where they end up in the region the Lambda@Edge function runs in, is a killer feature. My cost was down slightly, but not much, I'm not using that much. I can see cost to be a driver for migration for heavy usage. For some reason the page felt more responsive, even though it's the same code that is running. Can be due to CloudFront Functions running closer to the client, can be my imagination, I have not done any proper measurements yet.&lt;/p&gt;

&lt;p&gt;In short, I would say that if you can you should migrate.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>lambda</category>
      <category>cloudfront</category>
    </item>
    <item>
      <title>Installing Scrapy in Fedora34 with pypy( pypy3 )</title>
      <author>Amit Kumar Malaker</author>
      <pubDate>Mon, 19 Jul 2021 17:23:56 +0000</pubDate>
      <link>https://dev.to/amitkumarmalaker/installing-scrapy-in-fedora34-with-pypy-pypy3-f4m</link>
      <guid>https://dev.to/amitkumarmalaker/installing-scrapy-in-fedora34-with-pypy-pypy3-f4m</guid>
      <description>&lt;h1&gt;
  &lt;a href="#precontext"&gt;
  &lt;/a&gt;
  Pre-context:
&lt;/h1&gt;

&lt;p&gt;The thing is I love fast things. And I am sure the reader also pursue same nature like me. Hence, pypy3 is the choice.&lt;br&gt;
Fedora is nice but for me it is new and new thing is not always hassle free so to make your life better this instructions will be life saving.&lt;/p&gt;

&lt;p&gt;First install pypy3 and respective pip pkgmanager:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo dnf install pypy3
wget https://bootstrap.pypa.io/get-pip.py -o get-pip.py
pypy3 get-pip.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then install the below dependencies which are the root cause of scrapy installation failures. So do it carefully.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo dnf install pypy3-devel
sudo dnf install libxml2-devel
sudo dnf install libxslt-devel
sudo dnf install @development-tools
sudo dnf install libffi-devel
install them if you find them: [zlib1g-dev, libssl-dev] (optional)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create virtual environment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pypy3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Activate the virtual environment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now install scrapy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pypy3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;setuptools&lt;/span&gt;
&lt;span class="n"&gt;pypy3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;scrapy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hopefully scrapy will be installed successfully.&lt;br&gt;
Now create scrapy project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;scrapy&lt;/span&gt; &lt;span class="n"&gt;startproject&lt;/span&gt; &lt;span class="n"&gt;demo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a spider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;demo&lt;/span&gt;
&lt;span class="n"&gt;scrapy&lt;/span&gt; &lt;span class="n"&gt;genspider&lt;/span&gt; &lt;span class="n"&gt;demo&lt;/span&gt; &lt;span class="n"&gt;demo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In fine, this is the way to have our beloved scrapy working in fedora.&lt;br&gt;
If you have any problem you can comment below. I will try my best to resolve it.&lt;/p&gt;

</description>
      <category>scrapy</category>
      <category>pypy</category>
      <category>fedora34</category>
      <category>personal</category>
    </item>
  </channel>
</rss>
