<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JavaScript Guide </title>
      <author>Lasha Kakabadze</author>
      <pubDate>Sat, 19 Dec 2020 17:20:52 +0000</pubDate>
      <link>https://dev.to/adrinlol/javascript-guide-2coa</link>
      <guid>https://dev.to/adrinlol/javascript-guide-2coa</guid>
      <description>&lt;p&gt;In this article I'm going to go over my most recent project - JavaScript Guide. The intention of this guide is to help beginner developers ace advance their Frontend knowledge and ace their interview questions.&lt;/p&gt;

&lt;p&gt;From basic to advanced: test how well you know JavaScript, refresh your knowledge a bit, or prepare for your coding interview! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hS8kltc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/48876996/102694409-4d754700-423a-11eb-9615-af0f6e70d450.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hS8kltc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/48876996/102694409-4d754700-423a-11eb-9615-af0f6e70d450.gif" alt="ezgif com-gif-maker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo" class="anchor"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;Link to the repo 👇&lt;br&gt;
&lt;a href="https://github.com/Adrinlol/javascript-guide"&gt;https://github.com/Adrinlol/javascript-guide&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;p&gt;This projects covers all the important concepts of JavaScript along with several examples.&lt;/p&gt;

&lt;p&gt;Some key topics included in this tutorial are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Constants"&gt;Constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Scope"&gt;Scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Objects"&gt;Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Arrays"&gt;Arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Comparison"&gt;Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Closure"&gt;Closure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

Note: This is just a part 1/n of this project, I'll be updating it regularly to include as many concepts as I can. 



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why Your Website Should Be Using Dithered Images</title>
      <author>Nathaniel</author>
      <pubDate>Sat, 19 Dec 2020 15:33:24 +0000</pubDate>
      <link>https://dev.to/shadowfaxrodeo/why-your-site-should-be-using-dithered-images-3bad</link>
      <guid>https://dev.to/shadowfaxrodeo/why-your-site-should-be-using-dithered-images-3bad</guid>
      <description>&lt;p&gt;Oversized images have a negative impact on your site's speed, accessibility, seo, and on the climate. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://httparchive.org/reports/state-of-images#bytesImg"&gt;The average byte size of images per web page is nearing 1MB.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;On the average WordPress site it's already 1.2MB and &lt;a href="https://www.wappalyzer.com/technologies/cms/wordpress/"&gt;WordPress is used by 39% of websites.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's a lot of data. It's more than the average bytes from html, css, fonts, and javascript combined.&lt;/p&gt;

&lt;p&gt;Worse still, most of these are stock images of people in suits doing business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There's is a solution. One that dramatically reduces file sizes while making your website look funky and stylish…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dithering!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dithering" class="anchor"&gt;
  &lt;/a&gt;
  What is Dithering?
&lt;/h2&gt;

&lt;p&gt;Dithering is a retro method of reducing the colors in images to display them on old hardware.&lt;/p&gt;

&lt;p&gt;For example, here's a picture of my dog...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bBJRAHVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v5hmmdgq71zivpe2s54d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bBJRAHVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v5hmmdgq71zivpe2s54d.jpg" alt="undithered picture of my dog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Original Picture of my Dog — 123 KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;She looks great on our modern devices in full color. But let's say we had to display the same picture on an old black and white computer screen. (Only black and white, not even greyscale.) How would we do this?&lt;/p&gt;

&lt;p&gt;We need to make every pixel in our image either white or black. So each pixel is either &lt;em&gt;on or off&lt;/em&gt;, &lt;em&gt;0 or 1&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;The simplest way is to go through each pixel and if it's a light-ish pixel turn it on, if it's a dark-ish pixel turn it off. Here's the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wnSP01wm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ig6vklzz9tb6tvok5njy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wnSP01wm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ig6vklzz9tb6tvok5njy.png" alt="undithered black and white picture of my dog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Reduced to black and white with no dithering – 15 KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, that image look pretty terrible. You can still tell it's a dog, but with just two shades we've lost too much of what makes the original image so great. &lt;em&gt;e.g. her nostrils and details on her fur&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is where dithering comes in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dithering is the process of placing dots in our image to emulate all the shades we're missing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next image uses only &lt;em&gt;on and off&lt;/em&gt; pixels like the one above, but this time we've dithered it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6p15jnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/t2lq30h3dyek0243e2cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6p15jnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/t2lq30h3dyek0243e2cc.png" alt="a dithered picture of my dog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Reduced to black and white with dithering – 48 KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Exactly how this works will be the topic for another post. There's lots of methods of dithering an image. You can dither images with any color palette too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pbG1YNZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u2dzdts5tq28wk2lx6hs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pbG1YNZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u2dzdts5tq28wk2lx6hs.jpg" alt="original dog image but 200px wide"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Our original image resized to 200 by 200 pixels — 30KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ezLoYCxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vwxevnauygvg6u5kibha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ezLoYCxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vwxevnauygvg6u5kibha.png" alt="dog image reduced to 12 colors and dithered"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Reduced to 12 colors using 4x1 Ordered Dithering - 12KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8XXPmc7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/90qwa7m1czbo9r6laczd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8XXPmc7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/90qwa7m1czbo9r6laczd.png" alt="dog image reduced to 64 colors and dithered"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Reduced to 64 colors using 4x4 Ordered Dithering - 14KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6DdFYB2T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yx9zzadrhdooj27y2bpi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6DdFYB2T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yx9zzadrhdooj27y2bpi.png" alt="dog image dithered to look like an original gameboy game"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Dithered to look like the original GameBoy™ - 8KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1IU0SUbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3uzfz4uereorq00bjj0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1IU0SUbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3uzfz4uereorq00bjj0i.png" alt="dog image dithered to just 5 colors"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Error Diffusion dithering in red, green, blue, black, and white - 17KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ge9z8Oam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tuvw17lh5k8y2kd3y0mf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ge9z8Oam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tuvw17lh5k8y2kd3y0mf.png" alt="dog image dithered to match the colors of my website"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Dithered using the color palette of my website - 9KB)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-dither-in-2020" class="anchor"&gt;
  &lt;/a&gt;
  Why Dither in 2020?
&lt;/h2&gt;

&lt;p&gt;It's 2020, we've got a lot of problems, but limited colors on computer screens isn't one of them. So, why should you dither images?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Speed.&lt;/strong&gt; Large images make your website slow and inaccessible to visitors with slow connections. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Visitor's Wallets.&lt;/strong&gt; Large images cost visitors money, sometimes a lot of money. &lt;em&gt;&lt;a href="https://www.visualcapitalist.com/cost-of-mobile-data-worldwide/"&gt;To put it in perspective, a mobile user in Malawi pays $27.41 per gigabyte in Canada its $12.55.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Your Wallet.&lt;/strong&gt; Serving large images costs you money too.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Climate Change.&lt;/strong&gt; Big images waste electricity and emit carbon. &lt;a href="https://www.bbc.com/future/article/20200305-why-your-internet-habits-are-not-as-clean-as-you-think"&gt;The internet is responsible for 3.7% of global carbon emissions.&lt;/a&gt; A number that keeps growing as we send more and more data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SEO.&lt;/strong&gt; Faster loading times and a good user experience will rank your site higher on search engines.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-about-other-image-optimizations" class="anchor"&gt;
  &lt;/a&gt;
  What about other image optimizations?
&lt;/h3&gt;

&lt;p&gt;Part of this issue can be solved by optimising image sizes, and serving images as &lt;code&gt;webp&lt;/code&gt;. But a full color &lt;code&gt;webp&lt;/code&gt; image is still much larger than a dithered &lt;code&gt;png&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;edit: you can get even more gains by using &lt;code&gt;lossless WEBP&lt;/code&gt; on a dithered image&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-note-on-image-formats" class="anchor"&gt;
  &lt;/a&gt;
  A note on image formats
&lt;/h3&gt;

&lt;p&gt;The original image of the dog on this post is a &lt;code&gt;jpeg&lt;/code&gt;, and the dithered images are &lt;code&gt;png&lt;/code&gt;. This is because &lt;code&gt;jpeg&lt;/code&gt; is really good at compressing full color photos, but struggles to compress dithered images. In contrast &lt;code&gt;png&lt;/code&gt; does dithered images really well.&lt;/p&gt;

&lt;p&gt;If the original image was a &lt;code&gt;png&lt;/code&gt; it would have been a much larger file size. The reduction in size after dithering it would have seemed much more impressive. But the comparison wouldn't have been very useful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-dither-and-when-no-to-dither" class="anchor"&gt;
  &lt;/a&gt;
  When to Dither and when no to dither?
&lt;/h2&gt;

&lt;p&gt;I admit. Not every image on the internet should be dithered.&lt;/p&gt;

&lt;p&gt;There are sites where the images need to be full color: (i.e. A clothing store, a photography blog.) but there are lots of websites where dithered images would look great...&lt;/p&gt;

&lt;p&gt;Two situations where I'd love to see more dithering are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blogs-and-online-magazines" class="anchor"&gt;
  &lt;/a&gt;
  Blogs and Online Magazines
&lt;/h3&gt;

&lt;p&gt;Most blog posts and magazine articles use images simply to illustrate a point in the written content of the piece. A full-color image is usually not needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#featured-images" class="anchor"&gt;
  &lt;/a&gt;
  "Featured Images"
&lt;/h3&gt;

&lt;p&gt;Many (if not most) blog posts start with a big eye-catching image. This is often a stock image vaguely related to the topic. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;cool coding idea ...computer-screen-with-code.jpg&lt;/em&gt;&lt;br&gt;
&lt;em&gt;money problems ...someone-scratching-their-head.jpg&lt;/em&gt;&lt;br&gt;
&lt;em&gt;meditation guide ...sunset.jpg&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A reasonable argument could be made that these images should just be deleted. But if you really need to catch eyes...dither them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-dither-images" class="anchor"&gt;
  &lt;/a&gt;
  How to dither images?
&lt;/h2&gt;

&lt;p&gt;You can use this tool I've made to diher images: &lt;a href="https://doodad.dev/dither-me-this"&gt;Dither Me This&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're working with a static site generator, and want your images dithered at build time. I'll be updating this post with a git repo soon. &lt;/p&gt;

&lt;p&gt;Let me know if you have any other questions about dithering!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webperf</category>
      <category>performance</category>
      <category>images</category>
    </item>
    <item>
      <title>Build and run Angular application in a Docker container</title>
      <author>Wojtek Krzywiec</author>
      <pubDate>Sat, 19 Dec 2020 15:07:34 +0000</pubDate>
      <link>https://dev.to/wkrzywiec/build-and-run-angular-application-in-a-docker-container-19pm</link>
      <guid>https://dev.to/wkrzywiec/build-and-run-angular-application-in-a-docker-container-19pm</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Cover image by &lt;a href="https://unsplash.com/@alicegrace"&gt;Alice Achterhof&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;In this blog post I would like to show you how to run your Angular application in a Docker container, then I’ll introduce a multi-stage Docker build which will make the container smaller and your work more automated.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Without further introduction, let’s get hands dirty and put an Angular app into the Docker container. For purpose of this blog post I’ll use my old project — &lt;a href="https://github.com/wkrzywiec/aston-villa-app"&gt;aston-villa-app&lt;/a&gt;. It’s a simple dashboard with league standings of one of my favourite football club — Aston Villa.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NNIs-hhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j72uij2e2m3o97zoaweh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NNIs-hhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j72uij2e2m3o97zoaweh.png" alt="dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you want to use your project you can go with it, all the steps will be the same as for my app.&lt;/p&gt;

&lt;p&gt;Ok, so to get my application you’ll need first to clone it, so open a terminal and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; git clone https://github.com/wkrzywiec/aston-villa-app.git
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Now, you’ve got it in your local folder and then enter it. Next make sure that you have installed Node.js and Angular CLI on your local PC. Full instruction can be found on &lt;a href="https://angular.io/guide/setup-local"&gt;the official Angular website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now if you installed both prerequisites you can compile an Angular app. Therefore open a terminal in the root folder of the app and type:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; ng build &lt;span class="nt"&gt;--prod&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This will result in creation of a new folder called &lt;strong&gt;dist/aston-villa-app&lt;/strong&gt; in which all compiled files are put.&lt;/p&gt;

&lt;p&gt;Then create a new file called &lt;strong&gt;Dockerfile&lt;/strong&gt; that will be located in the project’s root folder. It should have these following lines:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:1.17.1-alpine&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; nginx.conf /etc/nginx/nginx.conf&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; /dist/aston-villa-app /usr/share/nginx/html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This simple Dockerfile will tell Docker to do three things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;first to get a &lt;a href="https://hub.docker.com/_/nginx"&gt;nginx Docker image from Docker Hub&lt;/a&gt; tagged with &lt;code&gt;1.17.1-alpine&lt;/code&gt; (it’s like a version number),&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;then copy-paste the default nginx configuration,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;and finally copy-paste the compiled application (we done it in previous step) to the container.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My default nginx configuration file looks as follows (it’s located in the same directory as Dockerfile):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight conf"&gt;&lt;code&gt;&lt;span class="n"&gt;events&lt;/span&gt;{}

&lt;span class="n"&gt;http&lt;/span&gt; {

    &lt;span class="n"&gt;include&lt;/span&gt; /&lt;span class="n"&gt;etc&lt;/span&gt;/&lt;span class="n"&gt;nginx&lt;/span&gt;/&lt;span class="n"&gt;mime&lt;/span&gt;.&lt;span class="n"&gt;types&lt;/span&gt;;

    &lt;span class="n"&gt;server&lt;/span&gt; {

        &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;;
        &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt;;
        &lt;span class="n"&gt;root&lt;/span&gt; /&lt;span class="n"&gt;usr&lt;/span&gt;/&lt;span class="n"&gt;share&lt;/span&gt;/&lt;span class="n"&gt;nginx&lt;/span&gt;/&lt;span class="n"&gt;html&lt;/span&gt;;
        &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;.&lt;span class="n"&gt;html&lt;/span&gt;;

        &lt;span class="n"&gt;location&lt;/span&gt; / {
                &lt;span class="n"&gt;try_files&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt;/ /&lt;span class="n"&gt;index&lt;/span&gt;.&lt;span class="n"&gt;html&lt;/span&gt;;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I don’t want to go that much into details what each line means here (if you would like there are two very nice links with more explanation at the end of this article). In general, here we define the server on which application will be hosted, its port and default behaviour.&lt;/p&gt;

&lt;p&gt;Finally, go back to the terminal and use this command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker build &lt;span class="nt"&gt;-t&lt;/span&gt; av-app-image &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you check the list of locally available Docker images you should get similar output:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker image &lt;span class="nb"&gt;ls

&lt;/span&gt;REPOSITORY    TAG            IMAGE ID      
av-app-image  latest         a160a7494a19      
nginx         1.17.1-alpine  ea1193fd3dde        
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;To run the image you’ve just created use following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker run &lt;span class="nt"&gt;--name&lt;/span&gt; av-app-container &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:80 av-app-image
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With it first you give a name to the container ( &lt;code&gt;--name av-app-container&lt;/code&gt; ), then make sure that it will run in the background (&lt;code&gt;-d&lt;/code&gt;), next you map container port to your local ( &lt;code&gt;-p 8080:80&lt;/code&gt; ) and finally you pick a base Docker image to be that you’ve just created - &lt;code&gt;av-app-image&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To check if new container is running in terminal type:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker container &lt;span class="nb"&gt;ls

&lt;/span&gt;CONTAINER ID  IMAGE         STATUS         NAMES
2523d9f77cf6  av-app-image  Up 26 minutes  av-app-container
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Or you can enter a web browser and go to &lt;a href="http://localhost:8080/"&gt;http://localhost:8080/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Alright! That was easy! Wasn’t it? I hope it was for you, but you could see that it’s a multi step process and as such, beside being time consuming, is also error-prone.&lt;/p&gt;

&lt;p&gt;So how it can be done better? Maybe it could be better when we include the compile phase ( &lt;code&gt;ng build --prod&lt;/code&gt; ) into the Docker build? That sounds promising, let’s do it!&lt;/p&gt;

&lt;p&gt;To achieve it I’d like to introduce something that’s called &lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/"&gt;Multi-stage Docker build&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was introduced in Docker 17.05 and it’s main goal was to create smaller containers without loosing the readability of a Dockerfile. With this approach we can divide building a Docker image into smaller phases (stages) where result of previous one (or part of it) can be used in another.&lt;/p&gt;

&lt;p&gt;To put it into our context, we’ll divide our Docker build into two stages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;compiling the source code into production ready output,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;running compiled app in a Docker image.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only compiled output from first stage will be moved to the second so small size of the container will be preserved.&lt;/p&gt;

&lt;p&gt;Until this point we’ve done the second step, so let’s focus on a first one.&lt;/p&gt;

&lt;p&gt;For compiling the source code we’ll go with different Docker image as a base, which is that containing &lt;a href="https://hub.docker.com/_/node/"&gt;Node.js&lt;/a&gt;. The part of Dockerfile that covers building stage is:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:12.7-alpine AS build&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json package-lock.json ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;In this case there are more lines which are responsible for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;FROM&lt;/code&gt; ) getting &lt;em&gt;node&lt;/em&gt; Docker image from registry and naming the compilation stage as build (so we will be able to refer to it in another stage),&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;WORKDIR&lt;/code&gt; ) setting default work directory,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;COPY&lt;/code&gt; ) copying &lt;em&gt;package.json&lt;/em&gt; &amp;amp; &lt;em&gt;package-lock.json&lt;/em&gt; files from local root directory — this file contains all dependencies that our app requires,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;RUN&lt;/code&gt; ) installing necessary libraries (based on a file copied in previous step),&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;COPY&lt;/code&gt; ) copying all remaining files with a source code,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;RUN&lt;/code&gt; ) and finally compiling our app.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make building our Docker image even more efficient we can add to the project’s root additional file called &lt;em&gt;.dockerignore&lt;/em&gt; . This one works similar to &lt;em&gt;.gitignore&lt;/em&gt; and in it we can define what files and folders we want to Docker to ignore. In our case we don’t want to copy any files from &lt;em&gt;node_modules&lt;/em&gt; and &lt;em&gt;dist&lt;/em&gt; folders, because they’re not needed in compilation.&lt;/p&gt;

&lt;p&gt;Therefore this file should look like as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dist
node_modules
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Alright so let’s combine both Docker stages into one and as a result we’ll get:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;### STAGE 1: Build ###&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:12.7-alpine AS build&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json package-lock.json ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm run build

&lt;span class="c"&gt;### STAGE 2: Run ###&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:1.17.1-alpine&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; nginx.conf /etc/nginx/nginx.conf&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=build /usr/src/app/dist/aston-villa-app /usr/share/nginx/html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The only adjustment that I made here is that I’ve added comments before each stage and also I’ve added &lt;code&gt;--from=build&lt;/code&gt; flag to tell Docker that it needs to copy compiled files from &lt;em&gt;build&lt;/em&gt; stage (also the source path have changed, because files are located in a different folder).&lt;/p&gt;

&lt;p&gt;Going back to a terminal, first you need to create a Docker image:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker build &lt;span class="nt"&gt;-t&lt;/span&gt; av-app-multistage-image &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And then run the app (on a different port):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker run &lt;span class="nt"&gt;--name&lt;/span&gt; av-app-multistage-container &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 8888:80 av-app-multistage-image
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And if you now enter &lt;a href="http://localhost:8888/"&gt;http://localhost:8888/&lt;/a&gt; you’ll see that it’s running!&lt;/p&gt;

&lt;p&gt;If you want to check this project go to its repository on GitHub:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wkrzywiec"&gt;
        wkrzywiec
      &lt;/a&gt; / &lt;a href="https://github.com/wkrzywiec/aston-villa-app"&gt;
        aston-villa-app
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Aston Villa Dashboard made in Angular 7
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references" class="anchor"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/"&gt;&lt;strong&gt;Use multi-stage builds&lt;/strong&gt; on docs.docker.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/avatsaev/create-efficient-angular-docker-images-with-multi-stage-builds-1f3n"&gt;&lt;strong&gt;Create efficient Angular Docker images with Multi Stage Builds&lt;/strong&gt;
on dev.to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://malcoded.com/posts/angular-docker/"&gt;&lt;strong&gt;Run Angular in a Docker Container using Multi-Stage builds&lt;/strong&gt;
on malcoded.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@tonistiigi/advanced-multi-stage-build-patterns-6f741b852fae"&gt;&lt;strong&gt;Advanced multi-stage build patterns&lt;/strong&gt; on medium.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@DenysVuika/your-angular-apps-as-docker-containers-471f570a7f2"&gt;&lt;strong&gt;Your Angular apps as Docker containers&lt;/strong&gt; on medium.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts"&gt;&lt;strong&gt;Understanding the Nginx Configuration File Structure and Configuration Contexts&lt;/strong&gt; on www.digitalocean.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/beginners_guide.html#conf_structure"&gt;&lt;strong&gt;Beginner's Guide&lt;/strong&gt; on nginx.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>docker</category>
      <category>beginners</category>
      <category>angular</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to quickly build a website using Tailwindcss and Tailblocks</title>
      <author>Siddharth Chaudhary</author>
      <pubDate>Sat, 19 Dec 2020 14:21:01 +0000</pubDate>
      <link>https://dev.to/sidchaudhary04/how-to-quickly-build-a-website-using-tailwindcss-and-tailblocks-k22</link>
      <guid>https://dev.to/sidchaudhary04/how-to-quickly-build-a-website-using-tailwindcss-and-tailblocks-k22</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4AMukO51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://refactoringui.nyc3.cdn.digitaloceanspaces.com/tailwind-logo.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4AMukO51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://refactoringui.nyc3.cdn.digitaloceanspaces.com/tailwind-logo.svg" alt="Tailwindcss Logo"&gt;&lt;/a&gt;&lt;br&gt;
I recently discovered this tool that allowed me to rapidly build my own &lt;a href="https://siddharth.one"&gt;website&lt;/a&gt;. Hope it might be useful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tailwindcss" class="anchor"&gt;
  &lt;/a&gt;
  What is Tailwindcss
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com"&gt;Tailwindcss&lt;/a&gt; is a utility based css framework for rapid development and is very useful in some cases. My own &lt;a href="https://siddharth.one"&gt;website&lt;/a&gt; is built entirely on tailwindcss, so I definitely would recommend it to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailblocks" class="anchor"&gt;
  &lt;/a&gt;
  Tailblocks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mertjf.github.io/tailblocks/"&gt;Tailblocks&lt;/a&gt; is a very simple tool that provides you with readymade Tailwindcss blocks. It includes most of the blocks that you would need to build a great website, including navbars, hero sections and footers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use" class="anchor"&gt;
  &lt;/a&gt;
  How to use
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Setup your html document like below
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;iDOCTYPE&lt;/span&gt; &lt;span class="na"&gt;html&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt;  &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Your title&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="https://mertjf.github.io/tailblocks/"&gt;tailblocks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Pick out a block you like.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FB60bPEd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qczillga8zemwyvot7zm.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Click the '&amp;lt;&amp;gt;View Code' button.&lt;/li&gt;
&lt;li&gt;Copy the code.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Paste it into the html document and voila 🤯&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Repeat the process with as many blocks as you like 👍.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Introduction to Guild - The free self-hosted team management solution </title>
      <author>Guild</author>
      <pubDate>Sat, 19 Dec 2020 13:58:24 +0000</pubDate>
      <link>https://dev.to/guild/introduction-to-guild-the-free-self-hosted-team-management-solution-933</link>
      <guid>https://dev.to/guild/introduction-to-guild-the-free-self-hosted-team-management-solution-933</guid>
      <description>&lt;h1&gt;
  &lt;a href="#idea" class="anchor"&gt;
  &lt;/a&gt;
  💡 Idea
&lt;/h1&gt;

&lt;p&gt;With Covid and so many people working remotely, managing your team could be a challenging task. Keeping an eye on what your team is working on is going to be crucial. &lt;/p&gt;

&lt;p&gt;There are many management apps out there, but so many of them are really complex or very expensive. If there was an app where a manager could take one look at a single page and see who's on shift at the moment and what they’re working on, it could be really cool!&lt;/p&gt;

&lt;p&gt;This is why we decided to create Guilds! &lt;strong&gt;An open-source App for managing teams&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A guild is a group of people who are on a mission to complete a common goal. Your team is your guild, and this self-hosted solution will put the simplicity back into organizing a team. It's a simple dashboard of company announcements, team member availability, and team member status. Keeping it simple because managing your "management system" shouldn't be a task in itself.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#landing-page" class="anchor"&gt;
  &lt;/a&gt;
  📃 Landing Page
&lt;/h1&gt;

&lt;p&gt;As of the time being, you can find the landing page of the Guild project here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guild.so"&gt;https://guild.so&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#screenshot" class="anchor"&gt;
  &lt;/a&gt;
  📸 Screenshot
&lt;/h1&gt;

&lt;p&gt;Landing Page: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ydij2_tV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/c3EiOXH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ydij2_tV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/c3EiOXH.png" alt="Guild - The free self-hosted team management solution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Login Form:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7GBLojvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/uhutJJ8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7GBLojvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/uhutJJ8.png" alt="Guild login form"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;User Profile&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5SfwLKU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/8XHLh4E.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5SfwLKU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/8XHLh4E.png" alt="Guild User Profile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Team management:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zvxtLV8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MChYo3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zvxtLV8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MChYo3p.png" alt="Guild Teams"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;User status dashboard:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--658Fy9zg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/dLBUvc0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--658Fy9zg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/dLBUvc0.png" alt="User status dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#current-status" class="anchor"&gt;
  &lt;/a&gt;
  ✅ Current Status
&lt;/h1&gt;

&lt;p&gt;We've taken the first steps in getting ready with the project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Domain name: &lt;a href="https://guild.so"&gt;https://guild.so&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Landing page&lt;/li&gt;
&lt;li&gt;Initial Laravel and Jetstream Setup&lt;/li&gt;
&lt;li&gt;Different Teams and roles (Developers, Managers, etc.)&lt;/li&gt;
&lt;li&gt;Registration and User Profile Management&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#things-to-do" class="anchor"&gt;
  &lt;/a&gt;
  ❓ Things To Do
&lt;/h1&gt;

&lt;p&gt;We've got the initial idea and setup done however there is still a lot to do!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CRUD for new tasks with validation&lt;/li&gt;
&lt;li&gt;Discord &amp;amp; Slack notifications for common actions (Add/Delete/Update Task, start/end shift and etc)&lt;/li&gt;
&lt;li&gt;Simple Time Tracking&lt;/li&gt;
&lt;li&gt;Badges for specific accomplishments (e.g. closed 10 tasks, worked for a total of 100 hours, etc.)&lt;/li&gt;
&lt;li&gt;Redesign Laravel Jetstream components&lt;/li&gt;
&lt;li&gt;Deploy to DO button&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#tools" class="anchor"&gt;
  &lt;/a&gt;
  🔧 Tools
&lt;/h1&gt;

&lt;p&gt;The tools which we've used so far are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Design Tool: &lt;a href="https://devdojo.com/tails"&gt;Tails&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Backend: &lt;a href="https://laravel.com"&gt;Laravel&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Scaffolding: &lt;a href="https://jetstream.laravel.com"&gt;Laravel Jetstream&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Frontend Stack: &lt;a href="https://tailwindcss.com"&gt;TailwindCSS&lt;/a&gt; &amp;amp; [Laravel Livewire]&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dohackathon</category>
      <category>laravel</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>How I Easily Code For 8+ Hours Without Feeling Tired (My Productivity System)</title>
      <author>Nick Bull</author>
      <pubDate>Sat, 19 Dec 2020 12:15:59 +0000</pubDate>
      <link>https://dev.to/nickbulljs/how-i-easily-code-for-8-hours-without-feeling-tired-my-productivity-system-23i8</link>
      <guid>https://dev.to/nickbulljs/how-i-easily-code-for-8-hours-without-feeling-tired-my-productivity-system-23i8</guid>
      <description>&lt;p&gt;I've been coding wrong my whole life.&lt;/p&gt;

&lt;p&gt;I thought it was okay to just sit down at my desk, open my laptop, take a task from my to-do list, and code it until I felt tired.&lt;/p&gt;

&lt;p&gt;But in reality, this style of work always killed my productivity levels after 2-4 hours of coding. I felt so tired that I didn't want to do anything except different low energy tasks (&lt;em&gt;like code review&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today I can code 8+ hours without feeling like crap after.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What has changed?&lt;/p&gt;

&lt;p&gt;My approach to work.&lt;/p&gt;

&lt;p&gt;After 62+ self-development books, dozens of articles and studies about productivity, and my trials and errors, I have created a productivity system that helps me to code, write, create, and live at my maximum capabilities without procrastination, tiredness, and brain fog.&lt;/p&gt;

&lt;p&gt;Here it is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-productivity-system" class="anchor"&gt;
  &lt;/a&gt;
  My Productivity System
&lt;/h2&gt;

&lt;p&gt;My productivity system stays on 3 main pillars:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Schedule.&lt;/li&gt;
&lt;li&gt;To-do for tomorrow.&lt;/li&gt;
&lt;li&gt;System 69 (!)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look closer at each of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#schedule" class="anchor"&gt;
  &lt;/a&gt;
  Schedule
&lt;/h2&gt;

&lt;p&gt;Everything starts with a schedule. What, where, and when I do.&lt;/p&gt;

&lt;p&gt;My schedule looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3gf4lxc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378643183/3ZswRiq7N.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3gf4lxc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378643183/3ZswRiq7N.jpeg" alt="sheduled.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I’m using a whiteboard to constantly remind myself of what I should do at the exact moment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I always neglected to create a schedule.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“I know what and when I should do!”&lt;/em&gt; I told myself.&lt;/p&gt;

&lt;p&gt;But in reality, I always forget to do or overdo my daily activities (&lt;em&gt;even with a habit to do them&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;For example, when I woke up at 7:00 in the morning I knew that I had 1 free hour before my work. In that hour I wanted to have time to do a morning ritual (eating, stretching, showering, breathing) and to read for 30 minutes. But many times I could have breakfast in the morning for an hour, forgetting to take the time to read. Even if I kept in mind that I have to read for 30 minutes every morning. I &lt;em&gt;overdone&lt;/em&gt; my activity (breakfast) and stole my time from another activity (reading).&lt;/p&gt;

&lt;p&gt;I have also noticed that without a schedule it takes a lot of time to decide what I should do next. I could finish the workout in the afternoon, take shower, sit at my desk, open laptop and then decide which task I should pick next within 10 minutes. If we count how much the same decisions I made during the day, 10 minutes becomes 60 minutes. &lt;strong&gt;One hour!&lt;/strong&gt; It’s a lot of time.&lt;/p&gt;

&lt;p&gt;The other thing is that in the process of deciding what I should do next, there is always an angel and a demon sitting on my shoulders and "helping" me decide whether I should work on the essential things to me or do some light work, or even take a break to relax. I often had to use willpower to force myself to do the "right" things without a schedule.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“If you waste resources trying to decide when or where to work, you’ll impede your capacity to do the work.” – &lt;a href="https://www.theguardian.com/science/2013/oct/05/daily-rituals-creative-minds-mason-currey"&gt;Guardian&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I made the schedule, these problems disappeared.&lt;/p&gt;

&lt;p&gt;Now, I always have time to do what I have planned.&lt;/p&gt;

&lt;p&gt;I always know what I should do next.&lt;/p&gt;

&lt;p&gt;I don’t need to use willpower to force myself to do essential things.&lt;/p&gt;

&lt;p&gt;Schedule puts my decision-making process on autopilot.&lt;/p&gt;

&lt;p&gt;If you want to create your schedule I recommend using Google calendar for it, so you can easily edit or share your schedule with someone else. Also, I recommend having a schedule on some piece of paper or whiteboard, to always remind yourself of what, where, and when you should do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#todo-for-tomorrow" class="anchor"&gt;
  &lt;/a&gt;
  To-Do For Tomorrow
&lt;/h2&gt;

&lt;p&gt;If the schedule helps me decide what, where and when I should do, the to-do list helps me decide &lt;strong&gt;exactly&lt;/strong&gt; &lt;strong&gt;what&lt;/strong&gt; I should do next.&lt;/p&gt;

&lt;p&gt;I could spend the "perfectly planned" day, but not do what is essential to me.&lt;/p&gt;

&lt;p&gt;For example, when I opened my schedule and saw a “Deep Work” block from 08.00 to 09.30, I could do deep work, but it didn’t guarantee that I would be doing important things during it and not some light work.&lt;/p&gt;

&lt;p&gt;Our brain is always trying to spend less energy and will do everything to convince you not to waste energy.&lt;/p&gt;

&lt;p&gt;That's where the to-do list comes in.&lt;/p&gt;

&lt;p&gt;It helps me &lt;strong&gt;even more&lt;/strong&gt; to put the decision-making process on autopilot and spend less time and cognitive resources on it.&lt;/p&gt;

&lt;p&gt;It guarantees that I will do only essential things (&lt;em&gt;most of the time&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;My to-do list is simple, I use a plain paper notebook to make it and &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; as a digital copy (&lt;em&gt;I use Notion for everything, but that's for another article&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e5d6d6_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378601645/oaEOZMMy4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e5d6d6_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378601645/oaEOZMMy4.jpeg" alt="todo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S2kyWdRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378595485/nFdvJ9q3s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S2kyWdRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378595485/nFdvJ9q3s.png" alt="to do 2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I create my to-do list I create it in the evening for tomorrow day.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;When you plan your day in the morning, you are thinking about every task that needs to be done today. It is good when the task is clear and simple and you know what to do (like &lt;em&gt;“code review last commit by John”&lt;/em&gt;). But when you don’t know what exactly needs to be done, it will take time to figure it out. Like when you know that you need to write an article, but don’t know about what. It will take time to research your ideas and choose the right topic to write about.&lt;/p&gt;

&lt;p&gt;And in addition to the fact that such tasks take time to research, there is a chance that you will fall into the trap of your thinking process (&lt;em&gt;when you start imagining results, details, processes, and other various things related to the task, and you spend 5, 10, 15, or even more minutes on it&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;The process of creating a to-do list in the morning wastes your productive morning time, your cognitive resources, and has a chance to distract you.&lt;/p&gt;

&lt;p&gt;That’s why I create a to-do list for tomorrow and not in the morning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#system-69" class="anchor"&gt;
  &lt;/a&gt;
  System 69
&lt;/h2&gt;

&lt;p&gt;When I started coding I did it like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open laptop.&lt;/li&gt;
&lt;li&gt;Open Code editor (&lt;em&gt;VSCode&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Pick a task.&lt;/li&gt;
&lt;li&gt;Code until I feel tired.&lt;/li&gt;
&lt;li&gt;Take a break (&lt;em&gt;spending time on social media&lt;/em&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Looks normal?&lt;/p&gt;

&lt;p&gt;Yeah.&lt;/p&gt;

&lt;p&gt;Until I read about &lt;a href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Pomodoro Technique is a time management method when you break down work into intervals, traditionally 25 minutes in length, separated by short breaks. For example, 25-minute coding and a 5-minute break after. And divide the entire workday into such breaks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;5 minute break.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;5 minute break.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;etc. until the end of the working day.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I tried it and it worked, but not as great as I imagined. I definitely became more productive, but for an additional hour. And I found the 25-minute work intervals are too short for me &lt;em&gt;(It took me 5-10 minutes to activate the &lt;a href="https://en.wikipedia.org/wiki/Flow_%28psychology%29"&gt;flow state&lt;/a&gt;, so I couldn’t perform a "deep work" for more than 15 minutes with such intervals).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So I went further.&lt;/p&gt;

&lt;p&gt;I found the 52 + 17 rule.&lt;/p&gt;

&lt;p&gt;What’s this?&lt;/p&gt;

&lt;p&gt;52-minute of work and a 17-minute break. Similar to the Pomodoro Technique.&lt;/p&gt;

&lt;p&gt;I tested it and it worked better for me than 25+5 intervals. Now I could work productively for two more hours, but I still felt like crap after a workday.&lt;/p&gt;

&lt;p&gt;So I didn’t stop on the 52 + 17 rule.&lt;/p&gt;

&lt;p&gt;I started researching more about productivity and motivation and learned about effective breaks.&lt;/p&gt;

&lt;p&gt;When most people hear the word “break” the first association is “doing anything except work.” Like scrolling Instagram feed, chatting with friends, or watching Youtube.&lt;/p&gt;

&lt;p&gt;Technically these are all breaks, but not effective ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The main sign of an effective break is that it gives you energy, not takes it away.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Example of my effective breaks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Stretching.&lt;/li&gt;
&lt;li&gt;  Hydrating.&lt;/li&gt;
&lt;li&gt;  Light workout.&lt;/li&gt;
&lt;li&gt;  Walking (&lt;em&gt;without the headphones&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;  Breathing (&lt;em&gt;box breathing, Wim Hof method&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After I learned about effective breaks, my workday became almost perfect - 52 minutes of work (&lt;em&gt;45 minutes often in a flow state, because I need 10 minutes to reach it&lt;/em&gt;) and 17 minutes of an effective break that gives me energy.&lt;/p&gt;

&lt;p&gt;Everything worked perfectly, and I have to stop there…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But I went further.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was obsessed with the idea to make every hour of my work the most productive hour on earth.&lt;/p&gt;

&lt;p&gt;And I think I did it.&lt;/p&gt;

&lt;p&gt;One thing that kept me from being in a flow state all the time was distraction.&lt;/p&gt;

&lt;p&gt;For years I didn't pay attention to it. To all the notifications that pop-up on my phone, the noise of people around me, the hundreds of open tabs and windows on my laptop, all those distractions.&lt;/p&gt;

&lt;p&gt;I set a timer for 52 minutes, started to work, got in a flow state, and then BAM! A new notification pops up. And I like, &lt;em&gt;“What’s in there?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The flow state is gone.&lt;/p&gt;

&lt;p&gt;Focus on the task is gone.&lt;/p&gt;

&lt;p&gt;Productivity is gone.&lt;/p&gt;

&lt;p&gt;One tiny notification instantly ruined my productivity.&lt;/p&gt;

&lt;p&gt;I never paid attention to it until I started to deep dive into the personal development field (&lt;em&gt;I wish I started earlier&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Now, when I work I turn off all notifications, tell people to not bother me, put on my headphones (&lt;em&gt;if I work in a noisy environment&lt;/em&gt;), close all the browser tabs that are not related to the task, and &lt;strong&gt;do everything I can to avoid distractions during my working hours.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So far so good, my system seemed perfect.&lt;/p&gt;

&lt;p&gt;But can we go further?&lt;/p&gt;

&lt;p&gt;Of course.&lt;/p&gt;

&lt;p&gt;The last piece of the puzzle is &lt;strong&gt;NO multitasking.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I hear today that someone can do multitasking, I smile.&lt;/p&gt;

&lt;p&gt;Multitasking is &lt;a href="https://www.theladders.com/career-advice/why-multitasking-is-a-myth-backed-by-science"&gt;not working&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://health.clevelandclinic.org/science-clear-multitasking-doesnt-work/"&gt;It’s a myth.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is only &lt;a href="https://www.researchgate.net/publication/45629771_Supertaskers_Profiles_in_extraordinary_multitasking_ability"&gt;one study&lt;/a&gt; that shows that 2.5% of subjects can do multitasking with the same efficiency levels as performing one task at a time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other 97.5% are not.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So when I pick some task and start doing it, I focus only on it.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;One task per time. *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Not two.&lt;/p&gt;

&lt;p&gt;Not three.&lt;/p&gt;

&lt;p&gt;Only one.&lt;/p&gt;

&lt;p&gt;This is a rule I follow during my working hours.&lt;/p&gt;

&lt;p&gt;Always.&lt;/p&gt;

&lt;p&gt;Okay, now we have all the pieces of System 69.&lt;/p&gt;

&lt;p&gt;Let's glue them together and see what we get:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;52-minute of work.&lt;/li&gt;
&lt;li&gt;17-minute of an effective break.&lt;/li&gt;
&lt;li&gt;Remove all distractions.&lt;/li&gt;
&lt;li&gt;Focus on one task at a time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Awesome!&lt;/p&gt;

&lt;p&gt;This is my System 69.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-end" class="anchor"&gt;
  &lt;/a&gt;
  In the end…
&lt;/h2&gt;

&lt;p&gt;These are the three pillars of my productivity system.&lt;/p&gt;

&lt;p&gt;Today I successfully use this system to operate as a content creator. Every day I write in &lt;a href="https://blog.nickbulljs.com/"&gt;my blog&lt;/a&gt;, build the &lt;a href="https://javascriptcoursethatworks.com/"&gt;most practical JavaScript course&lt;/a&gt; ever, create &lt;a href="https://twitter.com/nickbulljs"&gt;social media content&lt;/a&gt;, write a book on &lt;a href="https://nailthetechnicalinterview.com/"&gt;how to Nail The Technical Interview and Land a High-Paying Job&lt;/a&gt;, and do many more tasks easily without effort and tiredness.&lt;/p&gt;

&lt;p&gt;Literally, you can use my productivity system to successfully do any kind of job, not just coding. &lt;em&gt;But use it wisely.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Have a great one!&lt;/p&gt;

&lt;p&gt;– Nick Bull&lt;/p&gt;

&lt;p&gt;And also &lt;em&gt;before I forget&lt;/em&gt;, every week I send out a "3–2–1" newsletter with 3 tech news, 2 articles, and 1 piece of advice for you.&lt;/p&gt;

&lt;p&gt;🔥 &lt;a href="https://nickbulljs.com/"&gt;Get the latest Frontend news here.&lt;/a&gt; 🔥&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Introduction to Event delegation in JavaScript.</title>
      <author>Abhishek Jain</author>
      <pubDate>Sat, 19 Dec 2020 11:14:12 +0000</pubDate>
      <link>https://dev.to/abhishekjain35/introduction-to-event-delegation-in-javascript-3p7p</link>
      <guid>https://dev.to/abhishekjain35/introduction-to-event-delegation-in-javascript-3p7p</guid>
      <description>&lt;p&gt;Hello devs, let's understand event delegation.😁&lt;/p&gt;

&lt;p&gt;To understand event delegation, firstly, we'll need to get a hold of how the event listeners work.&lt;/p&gt;

&lt;p&gt;Look at the code below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sampleDiv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sampleDiv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;sampleDiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sample Div clicked&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Woohooo, We've added an event listener.&lt;br&gt;
Things to note in the above code - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Browser always provides the event object as a parameter for the callback function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Event object provides many properties, But we're going to focus on the &lt;code&gt;event.target&lt;/code&gt; and &lt;code&gt;event.currentTarget&lt;/code&gt; properties.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#lets-assume-a-situation" class="anchor"&gt;
  &lt;/a&gt;
  Let's assume a situation
&lt;/h4&gt;

&lt;p&gt;Suppose a simple todo app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//HTML&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sampleDiv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AddBtn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="c1"&gt;//NOTE: some basic CSS is applied on these elements.&lt;/span&gt;

&lt;span class="c1"&gt;//JavaScript&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sampleDiv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sampleDiv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AddButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AddBtn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;AddButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todoToRemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click me to remove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;sampleDiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And the code above does this - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ZSifZ5G2qOjiOrwwuj/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ZSifZ5G2qOjiOrwwuj/giphy.gif" alt="Todo gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We want to click on the &lt;code&gt;todo(the paragraph)&lt;/code&gt; to remove the todo. so, I think that we can attach event listeners to each todo and remove todo when it is clicked like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Todos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todoToRemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;But, It doesn't work.&lt;br&gt;
Since we are adding the todo dynamically through our javascript, the above code runs firstly, but there are no todos so that listeners are attached to any of them.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#so-how-can-we-fix-this" class="anchor"&gt;
  &lt;/a&gt;
  So, How can we fix this?
&lt;/h3&gt;

&lt;p&gt;Here comes the concept of event delegation. Theoretically, what happens in event delegation is we attach the event listener to a parent element. We check for the &lt;code&gt;event.target&lt;/code&gt; property, which results in the actual element on which the event has triggered.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So, the key takeaway is &lt;code&gt;event.currentTarget&lt;/code&gt; is the actual element on which the event listener is attached. And, &lt;code&gt;event.target&lt;/code&gt; is the element on which the actual event happened.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#fixing-the-problem-with-event-delegation" class="anchor"&gt;
  &lt;/a&gt;
  Fixing the problem with event delegation
&lt;/h3&gt;

&lt;p&gt;We can fix the todo removing problem with this simple code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sampleDiv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;//NOTE: the remove function have less support on legacy browsers. so, you can also use this line inside if statement - &lt;/span&gt;
&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And this works perfectly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/rSw1ENoaCJgxLNoerE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/rSw1ENoaCJgxLNoerE/giphy.gif" alt="Working Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We added an event listener to the parent and checked if &lt;code&gt;event.target&lt;/code&gt; is a &lt;code&gt;p&lt;/code&gt; tag. If true, then we call the remove function on it to remove it from the dom tree.&lt;/p&gt;

&lt;p&gt;This whole concept of adding an event listener to a parent is called event delegation.&lt;/p&gt;

&lt;p&gt;That's it from my side. Till then 👋👋&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/7DzlajZNY5D0I/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/7DzlajZNY5D0I/giphy.gif" alt="BYE BYE"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>5 Podcasts every Dev must listen</title>
      <author>Rishabh Singh</author>
      <pubDate>Sat, 19 Dec 2020 08:50:41 +0000</pubDate>
      <link>https://dev.to/mindninjax/top-5-podcasts-every-dev-should-start-listening-1cmd</link>
      <guid>https://dev.to/mindninjax/top-5-podcasts-every-dev-should-start-listening-1cmd</guid>
      <description>&lt;p&gt;As a Dev, it's very important for us to stay updated with the latest and greatest in the industry. One of the easiest &amp;amp;  fun ways to do that is listening to Podcasts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--njJhFTbZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7jx6pks25uwbu20tcs20.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--njJhFTbZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7jx6pks25uwbu20tcs20.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-is-a-list-of-the-amazing-podcast-you-should-start-listening-as-a-dev-in-2021" class="anchor"&gt;
  &lt;/a&gt;
  Here is a list of the amazing podcast you should start listening as a DEV in 2021:
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#talks-at-google" class="anchor"&gt;
  &lt;/a&gt;
  Talks at Google
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBXN8_o---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hrv656fqt4dx8ms1pnvk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBXN8_o---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hrv656fqt4dx8ms1pnvk.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are a fan of TED Talks then this one's for you. Talks at Google can be said as Google's own version of TED Talks. Talks at Google brings the world’s most influential thinkers, creators, makers, and doers all to one place. This Bi-weekly Podcast brings you new Episode every Tuesdays &amp;amp; Fridays. This podcast covers a variety of topics with impact and change in mind by some of the most influential people on our planet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://goo.gl/Eidbk4"&gt;Spotify&lt;/a&gt;, &lt;a href="https://www.youtube.com/redirect?redir_token=QUFFLUhqa2NGcDdqQzVsLTN4OEh3UXRWa24wbFdKUDVIZ3xBQ3Jtc0ttTnFla3BlOXBtMFRHZjBwdF9rcXFkMVRPTW12Nk45aFRFZ2plMEI2cUhTcUZQYVBLZU9zXzdHQUlPQVFPT1BWTUNTblVVSm1HVFVVTzg3SkZELVV4MHRJN1FwRjF5eFNLUUpKdlpjOWZpSGdxekhjdw%3D%3D&amp;amp;v=RmrWdl35eKo&amp;amp;q=http%3A%2F%2Fg.co%2FTalksAtGoogle%2FiTunes&amp;amp;event=video_description"&gt;Apple Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/c/talksatgoogle"&gt;YouTube&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#darknet-diaries" class="anchor"&gt;
  &lt;/a&gt;
  Darknet Diaries
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Alr5govq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://darknetdiaries.com/imgs/darknet-diaries-sm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Alr5govq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://darknetdiaries.com/imgs/darknet-diaries-sm.jpg" alt="https://darknetdiaries.com/imgs/darknet-diaries-sm.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Darknet Diaries is all about true creepy dark &amp;amp; twisted things that happen on the darknet. Scary enough to give you nightmares. Combined with the immersive storytelling of Jack Rhysider you will instantly fell in love with this Podcast as you explore the secrets and dangers of being on the dark side of the internet. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/show/4XPl3uEEL9hvqMkoZrzbx5?si=eKrU1IJcQGGT5IePPHCIrQ"&gt;Spotify&lt;/a&gt;, &lt;a href="https://apple.co/DarknetDiaries"&gt;Apple Podcast&lt;/a&gt; &amp;amp; &lt;a href="https://podcasts.google.com/?feed=aHR0cHM6Ly9mZWVkcy5tZWdhcGhvbmUuZm0vZGFya25ldGRpYXJpZXM%3D"&gt;Google Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#command-line-heroes" class="anchor"&gt;
  &lt;/a&gt;
  Command Line Heroes
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rVzgjUou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/riuk9babryyx0s46xkjf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rVzgjUou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/riuk9babryyx0s46xkjf.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Command Line Heroes Podcast brings us the stories of developers, programmers, hackers and tech enthusiasts who are revolutionizing our present and shaping our future. Overall this is a must-listen podcast produced Red Hat organization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/show/4Jgtgr4mHXNDyLldHkfEMz"&gt;Spotify&lt;/a&gt;, &lt;a href="https://geo.itunes.apple.com/podcast/us/id1319947289?mt=2&amp;amp;at=1010lbVy&amp;amp;ct=redhatclh_website"&gt;Apple Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://www.google.com/podcasts?feed=aHR0cHM6Ly9mZWVkcy5wYWNpZmljLWNvbnRlbnQuY29tL2NvbW1hbmRsaW5laGVyb2Vz"&gt;Google Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gradient-dissent" class="anchor"&gt;
  &lt;/a&gt;
  Gradient Dissent
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WFgK_9lq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yqofayg9ebj3tgxvat9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WFgK_9lq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yqofayg9ebj3tgxvat9h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are a machine learning enthusiast then you are going to love &lt;strong&gt;Gradient Dissent&lt;/strong&gt; Podcast which, as the name suggests, is all about machine learning. Tune into this Podcast to see how experts from all around the world are thinking and using the power of Machine Learning and similar technologies to solve real-world problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="http://media.blubrry.com/gradient_dissent/open.spotify.com/show/7o9r3fFig3MhTJwehXDbXm"&gt;Spotify&lt;/a&gt;, &lt;a href="http://media.blubrry.com/gradient_dissent/podcasts.apple.com/us/podcast/gradient-dissent-weights-biases/id1504567418"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5zb3VuZGNsb3VkLmNvbS91c2Vycy9zb3VuZGNsb3VkOnVzZXJzOjc5MjEzOTQyOS9zb3VuZHMucnNz"&gt;Google Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/playlist?list=PLD80i8An1OEEb1jP0sjEyiLG8ULRXFob_"&gt;YouTube&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#soft-skills-engineering" class="anchor"&gt;
  &lt;/a&gt;
  Soft Skills Engineering
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F8rr9ihG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8tncndx68gjlu9g8pxjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8rr9ihG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8tncndx68gjlu9g8pxjd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It takes more than great code to be a great engineer. Last but not the least we have, &lt;strong&gt;Soft Skills Engineering&lt;/strong&gt; Podcast which is a weekly advice podcast for software developers about the non-technical stuff that goes into being a great software developer. It's also one of the highest-rated podcasts by Developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/show/59I1XnvAB9fQzSj9SIKCoI?si=9dasZvgFRDyrIcU9yPCgkQ"&gt;Spotify&lt;/a&gt;, &lt;a href="https://itunes.apple.com/us/podcast/soft-skills-engineering/id1091341048?mt=2"&gt;Apple Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://www.google.com/podcasts?feed=aHR0cHM6Ly9zb2Z0c2tpbGxzLmF1ZGlvL2ZlZWQueG1s"&gt;Google Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bonus" class="anchor"&gt;
  &lt;/a&gt;
  BONUS:
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#here-are-2-of-my-favourite-podcast-as-a-bonus-for-you" class="anchor"&gt;
  &lt;/a&gt;
  Here are 2 of my favourite Podcast as a Bonus for you:
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#dev-discuss" class="anchor"&gt;
  &lt;/a&gt;
  Dev Discuss
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zDWzA_vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/64oj6n56aq3cl56bld1l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zDWzA_vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/64oj6n56aq3cl56bld1l.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Officially produced by &lt;strong&gt;The DEV Team&lt;/strong&gt;, &lt;strong&gt;DevDiscuss&lt;/strong&gt; is one of the best Podcasts on the web. This weekly Podcast brings in amazing developers around the globe as they answer and discuss the hottest questions and topics, trending on the internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/show/4Jae2mPUqx0XnGychucsE4?"&gt;Spotify&lt;/a&gt;, &lt;a href="https://podcasts.apple.com/us/podcast/devdiscuss/id1513053883"&gt;Apple Podcasts&lt;/a&gt; &amp;amp; &lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s?ep=14"&gt;Google Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev-news" class="anchor"&gt;
  &lt;/a&gt;
  Dev News
&lt;/h2&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0qHxBsxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.listennotes.com/podcasts/devnews-dev-FwglQdEHyvR-fH8hvsClkWp.1400x1400.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0qHxBsxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.listennotes.com/podcasts/devnews-dev-FwglQdEHyvR-fH8hvsClkWp.1400x1400.jpg" alt="https://cdn-images-1.listennotes.com/podcasts/devnews-dev-FwglQdEHyvR-fH8hvsClkWp.1400x1400.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another great Podcast from The DEV Team, Dev News is a weekly Podcast which brings you the latest and greatest tech news from all around the world. Hosted by Developers for developers, this Podcast is gonna be a great addition to your weekly playlist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available on &lt;a href="https://open.spotify.com/episode/2hMB006ZcD3E8DSDRQZUev"&gt;Spotify&lt;/a&gt; &amp;amp; &lt;a href="https://podcasts.apple.com/us/podcast/devnews/id1525581923"&gt;Apple Podcasts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-note" class="anchor"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;




&lt;p&gt;Do you know any other great Podcasts for Devs, then please feel free to share it in the discussions/comments. Thank you for reading my Blog Post.&lt;/p&gt;

</description>
      <category>podcast</category>
      <category>watercooler</category>
      <category>discuss</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Star background using Houdini CSS</title>
      <author>Rafi</author>
      <pubDate>Sat, 19 Dec 2020 06:00:50 +0000</pubDate>
      <link>https://dev.to/rafi993/star-background-using-houdini-css-2dog</link>
      <guid>https://dev.to/rafi993/star-background-using-houdini-css-2dog</guid>
      <description>&lt;p&gt;I was playing with Houdini css and built this. It is a worklet that allows you to render stars in the background.&lt;br&gt;
It takes in two properties number of star and maximum size of a given star. you can use it as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;paint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stars&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;#282828&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--star-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--star-max-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KTc1VwqT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tcc971pdklue8kyog98i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KTc1VwqT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tcc971pdklue8kyog98i.gif" alt="Stars"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;here is the actual worklet code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Stars&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;inputProperties&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--star-count&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--star-max-size&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;getRandom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;paint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--star-count&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;maxSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--star-max-size&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colorrange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxSize&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxSize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;colorrange&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;colorrange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hsl(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;sat&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;%, 88%)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;closePath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;registerPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stars&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Stars&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;it is hosted &lt;a href="https://rafi993.github.io/Houdini-stars/"&gt;here&lt;/a&gt; and here is the &lt;a href="https://github.com/Rafi993/Houdini-stars"&gt;source code&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>css</category>
      <category>houdini</category>
    </item>
    <item>
      <title>Tailwind CSS full-screen video header</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 19 Dec 2020 03:41:15 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/tailwind-css-full-screen-video-header-5539</link>
      <guid>https://dev.to/dailydevtips1/tailwind-css-full-screen-video-header-5539</guid>
      <description>&lt;p&gt;Call me old-school, but I love to see video headers. Hardly do I have a use for them on my personal website, but I love to implement a video header for clients with stunning videos.&lt;/p&gt;

&lt;p&gt;Today I wanted to see how easy this could be done with no custom CSS. We are only going to use the classes &lt;a href="https://daily-dev-tips.com/posts/my-first-experiences-with-tailwind-css/"&gt;Tailwind CSS&lt;/a&gt; gives us.&lt;/p&gt;

&lt;p&gt;The end result is this stunning full-screen video header using only Tailwind CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PEHtb52j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607940108457/esNeCkquB.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PEHtb52j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607940108457/esNeCkquB.gif" alt="video-header.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-fullscreen-video-header" class="anchor"&gt;
  &lt;/a&gt;
  Tailwind CSS full-screen video header
&lt;/h2&gt;

&lt;p&gt;To create this header, we are leveraging yesterday's &lt;a href="https://daily-dev-tips.com/posts/tailwind-css-parallax-effect/"&gt;Tailwind parallax header&lt;/a&gt;. It has a very similar setup, only now we don't make it parallax scroll.&lt;/p&gt;

&lt;p&gt;The basic &lt;code&gt;HTML&lt;/code&gt; structure will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    Welcome to my site!
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;autoplay&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt; &lt;span class="na"&gt;muted&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"video.mp4"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"video/mp4"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    Your browser does not support the video tag.
  &lt;span class="nt"&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can see we used a header tag. In there, we have a div that will hold a block that will sit on top of the video.&lt;br&gt;
Then we have a video tag, which can hold one or multiple sources.&lt;/p&gt;

&lt;p&gt;I will now write down the end &lt;code&gt;HTML&lt;/code&gt; structure and then go through the importance of each class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;header&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative flex items-center justify-center h-screen mb-12 overflow-hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative z-30 p-5 text-2xl text-white bg-purple-300 bg-opacity-50 rounded-xl"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Welcome to my site!
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt;
    &lt;span class="na"&gt;autoplay&lt;/span&gt;
    &lt;span class="na"&gt;loop&lt;/span&gt;
    &lt;span class="na"&gt;muted&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute z-10 w-auto min-w-full min-h-full max-w-none"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt;
      &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://assets.mixkit.co/videos/preview/mixkit-set-of-plateaus-seen-from-the-heights-in-a-sunset-26070-large.mp4"&lt;/span&gt;
      &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"video/mp4"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    Your browser does not support the video tag.
  &lt;span class="nt"&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The classes used for the header:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;relative&lt;/code&gt;: Makes the header relative. We will make the video absolute to position it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;flex&lt;/code&gt;: Adds a display flex so we can align the text block inside&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;items-center&lt;/code&gt;: Aligns the text-block vertically&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;justify-center&lt;/code&gt;: Aligns the text-block horizontally&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;h-screen&lt;/code&gt;: This adds a 100vh height, so it's 100% of the viewport.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;mb-12&lt;/code&gt;: We add quite a big margin-bottom with this (3rem)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;overflow-hidden&lt;/code&gt;: The video will be slightly bigger than our header, so we don't want to show the overflow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then for our overlay text block, we use the following classes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;relative&lt;/code&gt;: We need to make this relative, to place it on top of the video&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;z-30&lt;/code&gt;: This needs to be higher than the z-index on the video&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;p-5&lt;/code&gt;: Adds equal padding on each side (1.25rem)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;text-2xl&lt;/code&gt;: Makes the text nice and big (1.5rem)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;text-white&lt;/code&gt;: Make the text white&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;bg-purple-300&lt;/code&gt;: A nice cool purple color&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;bg-opacity-50&lt;/code&gt;: This one makes sure the background has an opacity of 50%.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rounded-xl&lt;/code&gt;: Adds the nice rounder borders&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And last but not least, we can add the classes for our video element:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;absolute&lt;/code&gt;: The video is an absolute positioned element&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;z-10&lt;/code&gt;: We give it a lower z-index than our text-block&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;w-auto&lt;/code&gt;: The width can be auto, so it will adjust&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;min-w-full&lt;/code&gt;: We need to make the min-width 100%&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;min-h-full&lt;/code&gt;: The same goes for the min-height&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;max-w-none&lt;/code&gt;: Unset the default max-width&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this, we have all our classes in place. This will give us a very nice full-screen video header using only Tailwind CSS classes.&lt;/p&gt;

&lt;p&gt;The end result can be found on this Codepen.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/dypNrog?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect" class="anchor"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>Hands-on GitOps with OneDev and Kubernetes</title>
      <author>Robin Shen</author>
      <pubDate>Sat, 19 Dec 2020 03:13:08 +0000</pubDate>
      <link>https://dev.to/robinshine/hands-on-gitops-with-onedev-and-kubernetes-25bo</link>
      <guid>https://dev.to/robinshine/hands-on-gitops-with-onedev-and-kubernetes-25bo</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;GitOps is a DevOps approach to maintain Kubernetes-based infrastructure as code in git, and operate it with git tools such as push, revert, pull request.&lt;/p&gt;

&lt;p&gt;OneDev (&lt;a href="https://github.com/theonedev/onedev"&gt;https://github.com/theonedev/onedev&lt;/a&gt;) is an open source git repository server, with built-in CI/CD integration.&lt;br&gt;
This tutorial explains how to set up OneDev to do GitOps in Kubernetes.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#set-up-kubernetes-cluster" class="anchor"&gt;
  &lt;/a&gt;
  Set Up Kubernetes Cluster
&lt;/h1&gt;

&lt;p&gt;Firstable we need a Kubernetes cluster. You may use an existing one, or just set up a new one. For this tutorial, we chose to use GKE (Google Kubernetes Engine).&lt;/p&gt;

&lt;p&gt;Just follow the &lt;a href="https://cloud.google.com/kubernetes-engine/docs/quickstart"&gt;quick start&lt;/a&gt; to create a cluster. To save your money, the default pool with only one node is sufficient for our testing. For node image type, use the default Container-Optimized OS; for machine type, please select one with at least 8G mem. After creating the cluster, go ahead to configure kubectl to connect to the cluster following &lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-access-for-kubectl"&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To verify that things are working, run below command in your terminal to make sure it is successful:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl cluster-info
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#install-onedev-into-kubernetes-cluster" class="anchor"&gt;
  &lt;/a&gt;
  Install OneDev into Kubernetes Cluster
&lt;/h1&gt;

&lt;p&gt;Now that we have a working cluster. Let’s deploy OneDev into the cluster to manage code of our demo project&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download &lt;a href="https://code.onedev.io/downloads/projects/onedev-server/builds/1075/artifacts/k8s-resources.zip"&gt;OneDev k8s resources&lt;/a&gt;, extract it, and run below commands to deploy OneDev (note that OneDev by default will apply two persistent volumes to store data: one is of 100G to store git repositories, and another is of 20G to store database files. This setting can be adjusted via file k8s-resources/production/disk-settings.yaml if desired):&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd k8s-resources/production
$ kubectl apply -k .
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After deployment, run below command to show external ip of OneDev service (may need to wait a while for external ip to be assigned):&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get services -n onedev
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open url http:// with your browser to set up OneDev. Wait a while and try again if OneDev is not ready&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#add-a-demo-project-into-onedev" class="anchor"&gt;
  &lt;/a&gt;
  Add a Demo Project into OneDev
&lt;/h1&gt;

&lt;p&gt;OneDev should be up and running. Let’s set up a demo project now:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;From OneDev projects page, add a project named gitops-demo&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From the terminal, create a react project, and push to OneDev by running below commands (you need to have node.js environment. Refer to &lt;a href="https://reactjs.org/docs/create-a-new-react-app.html"&gt;react documentation&lt;/a&gt; if you are not familiar with it):&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npx create-react-app gitops-demo 
$ cd gitops-demo
$ git remote add origin http://&amp;lt;OneDev external ip&amp;gt;/gitops-demo
$ git push --set-upstream origin master 
(use OneDev admin account created previously for authentication)
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Refresh files page of the demo project in OneDev, and click the add build spec link as below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3wgbPlVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/93zv1qx9k35w7gt5s8c6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3wgbPlVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/93zv1qx9k35w7gt5s8c6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From the build spec edit page, switch to Edit Source tab &lt;strong&gt;without adding any job&lt;/strong&gt; and replace the source with below content (do not worry about the syntax. In most cases you only need to work with the GUI editor):&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: 1
jobs:
- name: CI
  image: node:15.4-alpine
  commands:
  - set -e
  - ''
  - apk add --update jq
  - buildVersion=`jq -r '.version' package.json`
  - echo "##onedev[SetBuildVersion '$buildVersion']"
  - ''
  - yarn install
  - ''
  - export CI=true
  - yarn test
  triggers:
  - !BranchUpdateTrigger {}
  retrieveSource: true
  cloneCredential: !DefaultCredential {}
  cpuRequirement: 250m
  memoryRequirement: 128m
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  caches:
  - key: npm-cache
    path: /root/.npm
  timeout: 3600
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save and commit the change. Our CI build should be running now as demonstrated below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uSnTYOJo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/faul7utabsi956gj5wu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uSnTYOJo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/faul7utabsi956gj5wu2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#set-up-gitops-for-the-demo-project" class="anchor"&gt;
  &lt;/a&gt;
  Set Up GitOps for the Demo Project
&lt;/h1&gt;

&lt;p&gt;We now have a demo project with CI ability. Let’s improve it to be able to deploy to Kubernetes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;To deploy to Kubernetes, we need to build and publish docker image of the demo project. We will use the official docker hub registry here. Please visit （&lt;a href="https://hub.docker.com)%5Bhttps://hub.docker.com%5D"&gt;https://hub.docker.com)[https://hub.docker.com]&lt;/a&gt;, login with your account, and create a &lt;strong&gt;public&lt;/strong&gt; repository, say gitops-demo (OneDev also works with private repository, we create public repository here for simplicity purpose)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To be able to publish docker image to your repository, OneDev needs to know credential of your docker hub account. To do it, add a job secret in the demo project, give it a name, for instance, dockerhub-password, and input docker hub password as value of the secret&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W15ZA1C7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/d0o1kj4y02yj30akbvsa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W15ZA1C7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/d0o1kj4y02yj30akbvsa.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To deploy docker image of the demo project into Kubernetes, we need to give extra permissions to OneDev builds. To do it, create a file say gitops-demo-role.yaml in your terminal with below content:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gitops-demo
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "patch", "create"]
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Then run below command to add the role into Kubernetes:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl apply -f gitops-demo-role.yaml
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;After doing above, switch to job executors page in OneDev, &lt;strong&gt;delete the default auto-discover job executor&lt;/strong&gt;, add a new Kubernetes executor, give it a name, and specify property Cluster Role as gitops-demo, leave all other fields untouched and save the executor&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qtykrTxv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ld3dwyy7n5g5q5t3bpi2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qtykrTxv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ld3dwyy7n5g5q5t3bpi2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since we need to build docker image of our demo project, let’s add a Dockerfile in root of the project with below content:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM nginx:1.19.5
COPY build /usr/share/nginx/html
EXPOSE 80
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We deploy the demo project via Kubernetes resources, so continue to add a file k8s.yaml in root of the project with below content, and &lt;strong&gt;replace all occurrences of  with name of your docker hub account&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitops-demo
  labels:
    tier: gitops-demo
spec:
  selector:
    matchLabels:
      tier: gitops-demo
  strategy:
    type: Recreate
  template:
    metadata:
      name: gitops-demo
      labels:
        tier: gitops-demo
    spec:
      containers:
      - name: gitops-demo
        image: &amp;lt;your-dockerhub-account&amp;gt;/gitops-demo:imageTag
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: gitops-demo
  labels:
    tier: gitops-demo
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    tier: gitops-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit build spec in OneDev (click file &lt;em&gt;.onedev-buildspec.yaml&lt;/em&gt; from root of the project and then edit it), replace property &lt;em&gt;image&lt;/em&gt; with &lt;em&gt;docker:19.03.5&lt;/em&gt;, replace property &lt;em&gt;commands&lt;/em&gt; with below content, and &lt;strong&gt;replace all occurrences of  with name of your docker hub account&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set -e
apk add --update npm jq curl
buildVersion=`jq -r '.version' package.json`
echo "##onedev[SetBuildVersion '$buildVersion']"
npm install -g yarn
yarn install
export CI=true
yarn test
yarn build
docker build -t &amp;lt;your-dockerhub-account&amp;gt;/gitops-demo:@commit_hash@ .
docker login -u &amp;lt;your-dockerhub-account&amp;gt; -p @secrets:dockerhub-password@
docker push &amp;lt;your-dockerhub-account&amp;gt;/gitops-demo:@commit_hash@
curl -o /usr/local/bin/kubectl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x /usr/local/bin/kubectl
sed -i "s/imageTag/@commit_hash@/g" k8s.yaml
kubectl apply -f k8s.yaml -n default
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save and commit the change. OneDev will start to build and deploy the demo project. After build is successful, run below command to show external ip address of published demo service&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get service gitops-demo
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Open url http:// with your browser to show the deployed demo app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Congrats! You’ve successfully set up GitOps for the demo project. Whenever there is a new commit pushed to master branch, the CI job will be triggered to test, build, and redeploy the project. In case you want to revert to previous deployment, just run &lt;code&gt;git revert master&lt;/code&gt; and push the change.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#multiple-deployment-environments" class="anchor"&gt;
  &lt;/a&gt;
  Multiple Deployment Environments
&lt;/h1&gt;

&lt;p&gt;In our setup above, we deploy the demo project directly into the default namespace, which is not good. In real world, we may need to create multiple namespaces to cater deployment of multiple environments. Let’s create two namespaces, one for test, and one for production:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl create namespace test
$ kubectl create namespace production
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This tells OneDev to deploy our demo project into production namespace if build against master branch, and deploy into namespace identified by branch name otherwise. After committing the change, OneDev should be deploying the demo project into production namespace.&lt;/p&gt;

&lt;p&gt;Now let’s create the test branch to track deployments for test environment. After creating the branch, OneDev will start to deploy the demo project into test namespace.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyPWXDp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ih96lx7pdkwqid93qaxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyPWXDp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ih96lx7pdkwqid93qaxk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get Kubernetes printing external ip address of deployed demo service in specified namespaces, run below command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get service -n &amp;lt;namespace&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now from the commits page, we have a clear view of deployment status in different environments, and we can control deployments in different environments by pushing/merging into corresponding branches.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aUibzE12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3taw3yrdfxnfn3fnk6jd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUibzE12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3taw3yrdfxnfn3fnk6jd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>git</category>
      <category>kubernetes</category>
    </item>
    <item>
      <title>Doing a frontend technical interview with ReactJS</title>
      <author>Kristijan Pajtasev</author>
      <pubDate>Sat, 19 Dec 2020 00:47:30 +0000</pubDate>
      <link>https://dev.to/chriss/doing-a-frontend-technical-interview-with-reactjs-2p0</link>
      <guid>https://dev.to/chriss/doing-a-frontend-technical-interview-with-reactjs-2p0</guid>
      <description>&lt;p&gt;There are many ways to conduct a technical interview, and they depend from company to company. You might get whiteboard designing of architecture system, writing an algorithm, or some coding challenge. After working with multiple companies and going through many interviews from both sides, I prefer coding ones. More specifically, making something like a to-do application. By doing it, in an hour, I can assess if a person is junior, mid-level, senior, or architect. In this text, I cover how I do it and what knowledge I expect for which experience level.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-to%C2%A0build" class="anchor"&gt;
  &lt;/a&gt;
  Application to build
&lt;/h2&gt;

&lt;p&gt;I prefer a to-do application. The model for an item of it is straightforward. All you need is a text, a unique identifier, and some flag indicating its status. All to-do applications display the list of all items, enable input of a new item, toggle the item's status, and delete them. I don't expect to spend more than 45 minutes up to an hour. That is not a long time, so I don't expect candidates to do everything, just enough to show how they think and what they know.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup" class="anchor"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#ide" class="anchor"&gt;
  &lt;/a&gt;
  IDE
&lt;/h3&gt;

&lt;p&gt;There are many ways you can conduct this kind of technical interview, but I like &lt;a href="https://codesandbox.io/"&gt;codesandbox&lt;/a&gt;. There you can create an initial React application, and you can easily install other npm packages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data" class="anchor"&gt;
  &lt;/a&gt;
  Data
&lt;/h3&gt;

&lt;p&gt;I provide candidates with initial data. It is just a JSON file with few items located in the public folder. In React, every file located in that folder is available, and this one you can request by making a get request to /todo.json.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#google" class="anchor"&gt;
  &lt;/a&gt;
  Google
&lt;/h3&gt;

&lt;p&gt;I am okay with googling for documentation, and I make it clear at the beginning of the interview. And this is also an indicator of candidate experience level. If the candidate checks documentation for some API, that is fine. But if the candidate googles everything, there is probably a significant lack of experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interview" class="anchor"&gt;
  &lt;/a&gt;
  Interview
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#task-1-load-data-and-display" class="anchor"&gt;
  &lt;/a&gt;
  Task 1: Load data and display
&lt;/h3&gt;

&lt;p&gt;I do give a walkthrough of all the setup, where data is, how it is available, and the end goal of the application. As a first task, I request to display all the items from my data file. In this step, I expect candidates to load data using fetch API in the effect hook. After they do this, they should store them in the state and display them in a list. Often, I hear from candidates they want to use some third party request library like Axios and are free to do so. Another variation is also how they are displaying it. Sometimes it is a list of divs, and sometimes, it is an HTML list element. I prefer an HTML list, but any other solution can be acceptable as long as the candidate explains. It is an excellent opportunity for discussion.&lt;/p&gt;

&lt;p&gt;Senior vs. Junior&lt;/p&gt;

&lt;p&gt;What separates senior and junior is looking ahead. Often less experienced developers set incorrect initial state data. They don't check if data already exists before rendering, and they do everything in a single component. Sometimes, senior developers can also make everything in one component, but what they do is they are evident in explaining what and why they are doing. In this case, they would say it is all in a single component for the sake of simplicity and that they are intending to split it once they have the display working. They have an approach to first make it work, then improve it.&lt;/p&gt;

&lt;p&gt;Another thing in this task that separates junior and senior developers is fetching data. The experienced developer does it every day and should not have a problem working with fetch API and asynchronous code. A less experienced developer might struggle with it a bit. Struggling too much, or not being able to do it at all, might be a deal-breaker.&lt;/p&gt;

&lt;p&gt;This task gives a lot of side questions opportunities. One of them is a key prop. In React, when you are displaying items in a loop, they need to have a key prop. Candidates with less experience won't pass it. Pointing at this error gives a great indicator of how much experience with React do they have, and it is an excellent opportunity to ask what it does. In this section, other questions that you might want to ask are about hooks and lifestyle methods, the difference between HTML lists, and the components' organization.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#task-2-styling" class="anchor"&gt;
  &lt;/a&gt;
  Task 2: Styling
&lt;/h3&gt;

&lt;p&gt;There are many ways to do styling. There are CSS, LESS, SASS, bootstrap, and many other solutions. But I think that you need to know CSS. At this stage, I do not expect anything overly complicated. But I would ask to play around with margins and paddings, to remove list bulleting and maybe so some text styling. Junior might struggle because they are used to simple stuff or using a third-party library. But senior developer should be able to do it without any problem. It is also a perfect moment to ask for some comparison of different solutions and when to use which. Things like the difference between padding and margin.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-updating-status-or-adding-a-new-item" class="anchor"&gt;
  &lt;/a&gt;
  Step 3: Updating status or adding a new item
&lt;/h3&gt;

&lt;p&gt;If a candidate got to this part in under 30 minutes, it already does indicate good knowledge. Another task is to test more of their forward-thinking. The file is read-only, and they obviously can't update it. But they can work with the state. Here you can test the updating state in a parent component. It does show how deep is their understanding of components lifecycle - updating of status especially.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-questions" class="anchor"&gt;
  &lt;/a&gt;
  Step 4: Questions
&lt;/h3&gt;

&lt;p&gt;After the coding part, it is always good to leave 5–10 minutes for theoretical questions. Juniors do get more straightforward questions, focused on their experience: tasks they had, and details on how they solved them. I like to do more comprehensive solutions for seniors, and I expect them to have questions as part of their answers. To consider requirements.&lt;/p&gt;




&lt;p&gt;For more, you can follow me on &lt;a href="https://twitter.com/hi_iam_chris_"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/kpajtasev/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://github.com/kristijan-pajtasev/"&gt;GitHub&lt;/a&gt;, or &lt;a href="https://www.instagram.com/hi_iam_chris_/"&gt;Instagram&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>career</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
