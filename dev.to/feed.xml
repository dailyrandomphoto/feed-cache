<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10 coding challenges you have to try out</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 05 Jan 2022 08:13:10 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/10-coding-challenges-you-have-to-try-out-1foj</link>
      <guid>https://dev.to/dailydevtips1/10-coding-challenges-you-have-to-try-out-1foj</guid>
      <description>&lt;p&gt;Yesterday I gave you &lt;a href="https://daily-dev-tips.com/posts/5-reasons-why-i-love-coding-challenges/"&gt;five reasons why I love coding challenges&lt;/a&gt;, and why you should give them a try.&lt;/p&gt;

&lt;p&gt;However, we didn't really dive into finding these coding challenges.&lt;/p&gt;

&lt;p&gt;In this article, I'll help you find coding challenges to start solving them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#freecodecamp-challenges"&gt;
  &lt;/a&gt;
  FreeCodeCamp challenges
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W8nkq9ol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579433869/EScySYUdj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W8nkq9ol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579433869/EScySYUdj.png" alt="FreeCodeCamp logo" width="880" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FreeCodeCamp is not only a super good resource for people wanting to level up their development game.&lt;br&gt;
They also provided real-world and very in-depth coding challenges for you to solve.&lt;/p&gt;

&lt;p&gt;The great thing about FreeCodeCamp is that they do not focus on one area. You can choose different languages to try out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/learn/coding-interview-prep/"&gt;Try out FreeCodeCamp challenges&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leetcode"&gt;
  &lt;/a&gt;
  LeetCode
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvP6qzfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579492395/seJm2qGTU.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvP6qzfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579492395/seJm2qGTU.jpeg" alt="LeetCode logo" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another immense resource of coding challenges is LeetCode. They provide free and premium challenges you can complete.&lt;/p&gt;

&lt;p&gt;The cool part here is that they also include questions asked at some of the bigger tech companies.&lt;/p&gt;

&lt;p&gt;They also divided the challenges into categories, so you can really pick a challenge related to your skill level.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://leetcode.com/problemset/all/"&gt;Check out LeetCode's challenges&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topcoder"&gt;
  &lt;/a&gt;
  TopCoder
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hKas02oV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579533795/we8ZQZNKP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hKas02oV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579533795/we8ZQZNKP.png" alt="TopCoder logo" width="880" height="203"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TopCoder is a real community treasure. It's full of eager people to solve challenges and talk about the solutions.&lt;/p&gt;

&lt;p&gt;They also provide paid challenges, where you can get paid for solving a problem.&lt;/p&gt;

&lt;p&gt;This is a really cool space to check out, and especially to compare other solutions from the community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.topcoder.com/challenges"&gt;Try out TopCoder challenges&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coderbyte"&gt;
  &lt;/a&gt;
  CoderByte
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XHOZkZ9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579564929/0xuWC9Sjq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XHOZkZ9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579564929/0xuWC9Sjq.png" alt="CoderByte logo" width="299" height="168"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CoderByte is a really cool platform because it has put a lot of detail into the challenges. You can choose which language you would like to solve a specific challenge.&lt;/p&gt;

&lt;p&gt;And the cool part to me is that you can see other people's solutions.&lt;br&gt;
This way, you can learn and improve even more.&lt;br&gt;
They even provide video solutions for some of the challenges.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://coderbyte.com/challenges"&gt;Check out CoderByte challenges&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#edabit"&gt;
  &lt;/a&gt;
  Edabit
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L8IoSeY0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579594556/hQDf-FMz0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L8IoSeY0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579594556/hQDf-FMz0.png" alt="EdaBit logo" width="310" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Edabit is a really great source for beginners; it offers a lot of easy to get started with challenges.&lt;/p&gt;

&lt;p&gt;And once you master these beginner ones, you can advance to some more advanced queries there.&lt;/p&gt;

&lt;p&gt;You can also track your own level and grow on their ranking list.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://edabit.com/challenges"&gt;Try out Edabit&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codewars"&gt;
  &lt;/a&gt;
  Codewars
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--29cYHrwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579645725/YGlAqOpcF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--29cYHrwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579645725/YGlAqOpcF.png" alt="Codewars logo" width="400" height="301"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Personally, I really love Codewars because it includes many community made challenges.&lt;/p&gt;

&lt;p&gt;This will give you a lot of different challenges ranging from easy to very hard.&lt;/p&gt;

&lt;p&gt;They also provide a lot of different languages you can try out.&lt;br&gt;
And if you are stuck or looking for a review on your solution, they offer a great way to discuss the challenge.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codewars.com/"&gt;Check out Codewars&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hackerrank"&gt;
  &lt;/a&gt;
  HackerRank
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZqoxvRhV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579679857/0L5QC4aKd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZqoxvRhV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579679857/0L5QC4aKd.jpeg" alt="HackerRank logo" width="449" height="112"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a very well-known interview prepping coding challenge platform.&lt;br&gt;
It's been used a lot by people preparing for tech interviews. It includes a lot of data structure and algorithm challenges.&lt;/p&gt;

&lt;p&gt;They also have sets of challenges you can complete during x number of days, which is a fun way to do them.&lt;/p&gt;

&lt;p&gt;They also have a fantastic discussion panel where people share their answers and see their thinking around a solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hackerrank.com/"&gt;Try out HackerRank&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codechef"&gt;
  &lt;/a&gt;
  CodeChef
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TsHyQokn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579751569/tYA0cVSAI.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TsHyQokn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579751569/tYA0cVSAI.jpeg" alt="CodeChef logo" width="880" height="339"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeChef has a super large community around it, which makes it great if you really want to find the best solution.&lt;/p&gt;

&lt;p&gt;They also provide monthly challenges where they post a video explanation at the end.&lt;/p&gt;

&lt;p&gt;And they even have a problem of the day.&lt;br&gt;
You can also opt to solve challenges with a mentor if you are on the novice coding side.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codechef.com/"&gt;Solve some challenges on CodeChef&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codepen"&gt;
  &lt;/a&gt;
  CodePen
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SaUh79QA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579785389/ChlK2d7ut.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SaUh79QA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579785389/ChlK2d7ut.png" alt="CodePen logo" width="318" height="159"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodePen is widely known to be a really cool system where you can mainly set up pens, which are try-out demo code editors.&lt;/p&gt;

&lt;p&gt;Many people use these to showcase some HTML/JavaScript to other people.&lt;/p&gt;

&lt;p&gt;And they do offer great monthly challenges if you are interested in the more UI kind of challenges.&lt;/p&gt;

&lt;p&gt;They offer themed challenges, a super fun way to level up your skills.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/challenges/"&gt;Try out CodePen challenges&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codingame"&gt;
  &lt;/a&gt;
  CodinGame
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJXcUqhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579815490/5xyDpduQe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJXcUqhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640579815490/5xyDpduQe.png" alt="CodinGame logo" width="541" height="93"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodinGame is, as the name suggests, a gamification way of solving challenges.&lt;br&gt;
You basically solve a puzzle to fix a game and see the solution take place.&lt;/p&gt;

&lt;p&gt;This is a super fun way to explore problem-solving.&lt;br&gt;
They also support many languages and a quickly growing community around them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codingame.com/start"&gt;Have some fun with CodinGame&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h2&gt;

&lt;p&gt;There are often small challenges that emerge for a short amount of time.&lt;/p&gt;

&lt;p&gt;Think about Hackathons, Advent coding challenges, or company set challenges.&lt;/p&gt;

&lt;p&gt;I did not mention these in the main article as they often are only valid for the short term, but they are worth keeping an eye out for.&lt;/p&gt;

&lt;p&gt;They often even allow you to collaborate with other people and are larger in the setup, so you can really test your game.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>challenge</category>
    </item>
    <item>
      <title>Technologies I'm Learning in 2022</title>
      <author>Ameesha Gireesh</author>
      <pubDate>Wed, 05 Jan 2022 08:04:43 +0000</pubDate>
      <link>https://dev.to/ameeshagireesh/technologies-im-learning-in-2022-l6b</link>
      <guid>https://dev.to/ameeshagireesh/technologies-im-learning-in-2022-l6b</guid>
      <description>&lt;p&gt;2021 was a wild ride, at least technically speaking. I've just finished my third semester (halfway through the second year) of college doing a Bachelor's degree in Computer Science.&lt;/p&gt;

&lt;p&gt;As someone who only knew how to do basic coding in Python, I decided to venture into the field of web development in 2021.&lt;/p&gt;

&lt;p&gt;So here's the list of all the languages, tools, technologies, and frameworks I've learned in 2021:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Git and GitHub&lt;/li&gt;
&lt;li&gt;MATLAB&lt;/li&gt;
&lt;li&gt;R&lt;/li&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;Bootstrap&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;React.JS&lt;/li&gt;
&lt;li&gt;Tailwind CSS&lt;/li&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;Express&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;React Native&lt;/li&gt;
&lt;li&gt;Rust (basics)&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Oracle and MySQL&lt;/li&gt;
&lt;li&gt;Postman&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This list might seem long to some or insignificant to experienced developers, but in 2021 I was just getting started in the web development domain. &lt;/p&gt;

&lt;p&gt;I'm happy with whatever I learned last year, but I intend to learn more this year. So here's the list of all the technologies, tools, and frameworks that I want to learn in 2022.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Next.js&lt;/strong&gt;&lt;br&gt;
Well, I know React, so why not Next. It's simply a React framework with numerous benefits that include improved SEO. Next also provides improved performance since it is clever enough to load the JS and CSS that are required for the given page. I'm going to use Next.js in at least one project that I work on this year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Vue&lt;/strong&gt;&lt;br&gt;
It's just another JavaScript framework that I wanted to learn to increase my frontend stack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Remix&lt;/strong&gt;&lt;br&gt;
I've been reading a lot about how Remix is kind of a competitor to Next.js, so I might just dabble with it once I've worked on a project using Next. This is purely just for seeing the difference between both. If there are any significant advantages, then I might switch, but it's a huge maybe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. GraphQL&lt;/strong&gt;&lt;br&gt;
Having a whole documentation of your API and preventing multiple requests sounds nice. Moreover, GraphQL is supported by most of the languages that I use, so I wouldn't notice any difficulties in integration. Being able to set up a type-safe schema is also a serious advantage. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. TypeScript&lt;/strong&gt;&lt;br&gt;
I've used TypeScript in a project before and I've noticed that it's easier to catch errors before I run the code and that's a huge advantage. Refactoring code would be much easier on TypeScript than in JavaScript, and I think it's just better when the project scales.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. REST APIs&lt;/strong&gt;&lt;br&gt;
I've made a REST API before for a quiz application, and I enjoyed the whole process. Hence, I thought this year I'll learn more about it and hopefully dabble around with it in projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Elixir&lt;/strong&gt;&lt;br&gt;
Elixir is known for being able to put applications into production quickly, and it's great for being able to handle a lot of processes happening together at the same time. So I might learn it but again depends on the kind of projects I'm working on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. React Query&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Kubernetes&lt;/strong&gt;&lt;br&gt;
I learned Docker last year but ended up not using it anywhere. Adding k8's to my DevOps knowledge stack is a huge addition, and hopefully, I can incorporate it in a project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Google Cloud&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;11. Cloudflare&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;12. AWS&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;13. DigitalOcean&lt;/strong&gt;&lt;br&gt;
All of these might seem overkill, but I just really want to learn how to use all of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. Rust (in-depth)&lt;/strong&gt;&lt;br&gt;
I've learned Rust last year but never developed a project using it, and as a result, my knowledge of it did end up getting a bit rusty (pun intended). Hence, I wanted to relearn it again this year, but I'm not sure if I'll have the time or the patience required.&lt;/p&gt;

&lt;p&gt;I guess that's pretty much it for 2022. I've already started with Next.js, so I'm pretty happy with the direction that I'm going in. &lt;/p&gt;

&lt;p&gt;I'll also be entering my undergrad third year, halfway through 2022, so I'm aware that I might get busy with academics and internships and may not be able to learn whatever I wanted to. But that's completely okay, as long as I'm learning something more than the past me.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>personal</category>
    </item>
    <item>
      <title>How to create a null-filled array without [], comma, or the word “Array”</title>
      <author>lionel-rowe</author>
      <pubDate>Wed, 05 Jan 2022 07:45:22 +0000</pubDate>
      <link>https://dev.to/lionelrowe/how-to-create-a-null-filled-array-without-comma-or-the-word-array-1g6p</link>
      <guid>https://dev.to/lionelrowe/how-to-create-a-null-filled-array-without-comma-or-the-word-array-1g6p</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;praiseBeToCthulhu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;"&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;codepoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;codePointAt&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;grab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;codepoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;grab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;grab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPrototypeOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPrototypeOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPrototypeOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="nb"&gt;Object&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OK, there are definitely more concise ways, but hey, maybe you're getting paid by the number of lines of code you write.&lt;/p&gt;

&lt;p&gt;Thank-you for coming to my TED talk. 🙇‍♀️&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Apply Amazon's Leadership Principles as a Software Engineer</title>
      <author>Kevin Peters</author>
      <pubDate>Wed, 05 Jan 2022 07:39:26 +0000</pubDate>
      <link>https://dev.to/getworkrecognized/how-to-apply-amazons-leadership-principles-as-a-software-engineer-208n</link>
      <guid>https://dev.to/getworkrecognized/how-to-apply-amazons-leadership-principles-as-a-software-engineer-208n</guid>
      <description>&lt;p&gt;Amazon is one of the biggest companies in the world. Their core products of them are their &lt;a href="https://www.amazon.com"&gt;marketplace&lt;/a&gt; and &lt;a href="https://aws.amazon.com/"&gt;AWS&lt;/a&gt;, a cloud computing platform used by the biggest companies in the world. AWS is also the product that generates the highest profit margins for Amazon.&lt;/p&gt;

&lt;p&gt;As a software engineer at Amazon, you are challenged every day. It is expected that you deliver results and apply the leadership principles in every day's work. Even when you are not working at Amazon, you can apply these principles to your job. Share them with your colleagues to create a more collaborative and productive environment. So let us explore some tips on how you can apply the leadership principles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-16-leadership-principles"&gt;
  &lt;/a&gt;
  The 16 leadership principles
&lt;/h2&gt;

&lt;p&gt;The principles at Amazon are the DNA of how Amazon works. The 16 principles make sure that everyday life at Amazon is going smoothly. A simple example is discussions on how to solve a problem. A team gets consists of many people and different experiences. Of course, disagreements will occur at some point. To solve these arguments employees at Amazon will reference the leadership principles during a discussion to solve the arguments. Foremost some should state that discussions in technology companies like Amazon are always looking for actions. Discussions can evolve but should reflect in tasks that can be executed to discover the topic more like gathering data or solving the problem. This can be based on the leadership "Bias for Action" for example.&lt;/p&gt;

&lt;p&gt;The current leadership principles consist of these 16 right now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Customer Obsession&lt;/li&gt;
&lt;li&gt;Ownership&lt;/li&gt;
&lt;li&gt;Invent and Simplify&lt;/li&gt;
&lt;li&gt;Are Right, A Lot&lt;/li&gt;
&lt;li&gt;Learn and Be Curious&lt;/li&gt;
&lt;li&gt;Hire and Develop the Best&lt;/li&gt;
&lt;li&gt;Insist on the Highest Standards&lt;/li&gt;
&lt;li&gt;Think Big&lt;/li&gt;
&lt;li&gt;Bias for Action&lt;/li&gt;
&lt;li&gt;Frugality&lt;/li&gt;
&lt;li&gt;Earn Trust&lt;/li&gt;
&lt;li&gt;Dive Deep&lt;/li&gt;
&lt;li&gt;Have Backbone&lt;/li&gt;
&lt;li&gt;Disagree and Commit&lt;/li&gt;
&lt;li&gt;Deliver Results&lt;/li&gt;
&lt;li&gt;Strive to be Earth's Best Employer&lt;/li&gt;
&lt;li&gt;Success and Scale Bring Broad Responsibility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find an older version of this list also &lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/amazon-2020"&gt;on our career ladder explorer&lt;/a&gt;. The list of principles included 14 principles in the past years. But since then Amazon added two more principles "Strive to be Earth's Best Employer" and "Success and Scale Bring Broad Responsibility". The list can change from time to time, but the most updated list can be found on &lt;a href="https://www.amazon.jobs/en/principles"&gt;Amazon’s site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nwHMkEz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tra0zpo8jk4y556xff5y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nwHMkEz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tra0zpo8jk4y556xff5y.gif" alt="A simple way to your promotion - sign up on getworkrecognized" width="800" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To understand how the leadership principles can be used for software engineers, not just at Amazon, let us have a look at the next chapters. We will explain what software developers spend most of their time on and how leadership principles can be applied to the different work.&lt;/p&gt;

&lt;p&gt;To understand how the leadership principles can be used for software engineers, not just at Amazon, let us have a look at the next chapters. We will explain what software developers spend most of their time on and how leadership principles can be applied to the different work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-software-engineers-spend-their-time-on"&gt;
  &lt;/a&gt;
  What do Software Engineers spend their time on
&lt;/h2&gt;

&lt;p&gt;Software Engineering is mostly understood as programming. Writing code to fulfill business requirements. As software engineers, we do a lot of other tasks as well like the following&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meetings, management, and operations&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Product Decision Discussions&lt;/li&gt;
&lt;li&gt;Technical Decision Discussions&lt;/li&gt;
&lt;li&gt;Writing Documentation&lt;/li&gt;
&lt;li&gt;Organizing technical work&lt;/li&gt;
&lt;li&gt;Planning technical projects&lt;/li&gt;
&lt;li&gt;Work on reporting metrics, building dashboards&lt;/li&gt;
&lt;li&gt;Discovery work to come up with new feature proposals&lt;/li&gt;
&lt;li&gt;Interviewing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Code maintenance&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fixing old TODO comments&lt;/li&gt;
&lt;li&gt;Making sure the system is reliable&lt;/li&gt;
&lt;li&gt;Code Reviews&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tests as code&lt;/li&gt;
&lt;li&gt;Manual tests&lt;/li&gt;
&lt;li&gt;User Tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Testing for security problems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Writing Code&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating new features&lt;/li&gt;
&lt;li&gt;Fixing bugs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we have a wide range of topics that a Software Engineer needs to deal with. Some topics depend on what team or company you will work for. But in general, these are the duties of software engineers. Do you miss anything? Happy to add them. Feel free to email &lt;a href="//mailto:getworkrecognized@gmail.com"&gt;getworkrecognized@gmail.com&lt;/a&gt;. So how do we apply the leadership principles to the different activities?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-apply-the-leadership-principles-during-the-day"&gt;
  &lt;/a&gt;
  How to apply the leadership principles during the day
&lt;/h2&gt;

&lt;p&gt;As we have seen in the last chapter, software engineers deal with a lot of duties during their job. Let us look at some examples and use cases for Amazon’s Leadership Principles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-new-features-or-fixing-bugs"&gt;
  &lt;/a&gt;
  Creating new features or Fixing bugs
&lt;/h3&gt;

&lt;p&gt;This is hands-down coding most of the time. During coding, Software Engineers can apply multiple leadership principles. Let us look at some of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Invent and Simplify&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coding is most often consists of two activities: Changing existing code or adding new code. Both ways of working will contribute value and opportunities to invent new coding patterns or simplify the existing code. You could add some new coding pattern that makes the code easier to extend in the future. That is most of the time the main reason for this leadership principle to be applied.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insist on the Highest Standards&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When creating new features or working on refactoring code you should make yourself accountable for the highest standards of code. After all, code is most of the time read, rather than writing. So make sure to put you into the perspective of a new hire and ask yourself if the code is understandable for them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deliver Results&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Making changes to the code is difficult. Try to aim for a specific amount of Pull Requests within a month or so. When creating Pull Requests make sure to do incremental changes. It is ok if a Pull Request is not complete, but smaller and easier to review. Split up your Pull Requests so you deliver results more incrementally.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#product-and-technical-decision-discussions"&gt;
  &lt;/a&gt;
  Product and Technical Decision Discussions
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YBCOPeU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wndb7s2xgrksqvhnm4hs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YBCOPeU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wndb7s2xgrksqvhnm4hs.png" alt="Product and Technical Decision Discussions" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A big part of the life of a software engineer is product and technical decision discussions. Normally they consist of you, the team, the engineering manager, and the product owner. The product owner is optional when it comes to technical decisions. But in general, these discussions come up most often and require actions that will solve the problem. Of course, the decision process can be rigorous, but Amazon tries to keep the discussions short based on leadership principles. Let us look into how.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are Right, A Lot &amp;amp; Customer Obsession&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a software engineer, you will have a headstart in discussions with two simple things. Use the product yourself and gather data before the discussions are happening. Gathering data will result in backing your arguments and that you are right about the outcome.&lt;/p&gt;

&lt;p&gt;If you do not have the data, then try to make it an action out of the discussion and reschedule the discussion. You will show ownership of the issue and customer obsession to solve the customer’s issue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Think Big &amp;amp; Frugality&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When thinking about new features or technical decisions, always ask yourself: How will this work in 3-5 years? Ask yourself and make a plan and discuss with the team what they think. It is important to get feedback but also write down what you think so it is manifested somewhere. Write a product proposal document with a 5-year plan. It will help everyone.&lt;/p&gt;

&lt;p&gt;Nevertheless, it is important to move fast. And moving fast can be achieved with frugality. Not developing the whole feature or 5-year plan but doing a short-term solution. Leaving the long-term solution for later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disagree and commit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is probably the most controversial leadership principle when it comes to discussions. Humans are opinionated. Especially software engineers. I was part of discussions where discussions drifted away far too much because of specific technical or product decisions. Sometimes it is better to just disagree and say "whatever" and follow the decisions of your peers. After all, we can track the results and see if they are satisfying or even A/B test your opinion to see if it would work better. Everyone is open to feedback after a decision, and you should be too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#writing-external-documentation"&gt;
  &lt;/a&gt;
  Writing external documentation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M7J_dboH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hsmp65xdjv6aq7nw7mwv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M7J_dboH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hsmp65xdjv6aq7nw7mwv.png" alt="Notion.so based documentation" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An underestimated skill as a software engineer is to write documentation. Writing is difficult. Writing clear documentation is even more difficult. There is good guidance out there to write good documentation like the guide by divio: "The documentation system". But what is even more important than the structure are some other things that are related to the leadership principles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer Obsession &amp;amp; Dive Deep&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Good documentation can be written easily. But how do you know what the customer needs? You have to do the research. Watch the customer using the product you are working on. This is difficult from time to time. Especially when working on an internal product, but even then it is possible to just listen to a customer. See their struggles and get feedback on what could be improved. Any pain points. Document them and write proper documentation about them. Obsess with the customer, try to make sure every customer will understand how your product should or can be used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ownership&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Software engineers hate to write documentation. Everyone does, maybe except technical writers. In any way, as software engineers, we should own documentation and make sure it is always in an exceptional state. And I do not only mean the API documentation, but also the general documentation on how to use the product. Make sure you gather feedback and iterate on your documentation to make it more useful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Earn Trust&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A big part of writing documentation is actually to gain the trust of the customer. With proper documentation that includes Tutorials, How-to-Guides, Explanation, and References you make sure the customer is earning trust in your system, understand edge cases, and is, in general, more likely to integrate the product.&lt;/p&gt;

&lt;p&gt;So what did we learn from this? Make sure to write documentation in your daily life as a software engineer. Spend some time every week to write something, either for your team or externally, so your systems are more understandable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#planning-projects"&gt;
  &lt;/a&gt;
  Planning projects
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_C4Ebgg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcyk7h3111t743m8gg13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_C4Ebgg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcyk7h3111t743m8gg13.png" alt="2 People on a board with sticky notes" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The higher you are on the software engineer career ladder, the more important it gets to lead projects that affect your team and company directly. Leadership is a general skill but is composed of the leadership principles at Amazon. By following some of the leadership principles you will be a great leader in making sure smaller projects will get delivered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ownership&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By planning and executing projects you are showing ownership already. Make sure everything will work out as expected and collaborate with your contributors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bias for Action&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When owning a project, you are required to take decisions. This can be challenging. But take action instead of waiting and discussing. As long as you track the outcome of your actions and make sure it performs well, you will be fine. Everyone can fail with the actions, the important part is to realize it was a mistake and fix those decisions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Frugality &amp;amp; Deliver Results&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A core principle when planning projects is to plan them minimalistic. It is expected that you deliver a project. A smaller project is delivered quicker by nature. Keep the scope small so you and your collaborators, if existing, can deliver quick results. It is a lot better to roll out a project and gather data on how it performs rather than never releasing it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Success and Scale Bring Broad Responsibility&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You have finally finished the project. Now it becomes time to measure your success. The metrics should have been defined at the beginning of the project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;We have just listed some examples of how the leadership principles can be applied to your day-to-day work. If you want to get to know how to apply them in detail, have a read on &lt;a href="https://getworkrecognized.com/blog/customer-obsession-examples-software-engineer"&gt;how customer obsession can be applied for example&lt;/a&gt;. Try to apply the leadership principles. Reference them in some of these situations and make sure you stay productive. But the principles have an even more important meaning at Amazon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nwHMkEz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tra0zpo8jk4y556xff5y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nwHMkEz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tra0zpo8jk4y556xff5y.gif" alt="A simple way to your promotion - sign up on getworkrecognized" width="800" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leadership-principles-in-performance-reviews"&gt;
  &lt;/a&gt;
  Leadership Principles in Performance Reviews
&lt;/h2&gt;

&lt;p&gt;At Amazon, Performance reviews happen yearly. A big part of the reviews is the self-review and the peer feedback you or your manager will receive. They are all based on leadership principles. Peers will have available a matrix for each leadership principle and the level. They will then choose the strengths and weaknesses of your past work performance.&lt;/p&gt;

&lt;p&gt;This process is really difficult though. Think about writing a self-review of your past year’s achievements and base it on the leadership principles listed in this article. You will struggle, I will struggle, we all will struggle. Our human brains are limited. You simply can’t remember all the things we did. And that is where a brag document becomes important. I am keeping a journal in getworkrecognized of all achievements I have reached. I can tag the achievements with a tag and get a summarized version of what I have achieved and relate it to the leadership principles. Quite useful for the self-review. But where it gets even more important is when you ask for peer feedback. Your colleagues might not even remember what they did themself, and will even more likely forget what you have done. Send them a brag document with all your achievements listed in a compact form and you will get better feedback for sure. If you are unsure what a brag document could look like, have a &lt;a href="https://getworkrecognized.com/blog/3-brag-document-templates-google-docs"&gt;look at our 3 brag document templates&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you get rated on your leadership principles the manager will decide if you get to put up for promotion or not. In most cases, they are required to write a promotion case, where they can reference the brag document again, which will be great for you because less work is required to get you the well-deserved promotion.&lt;/p&gt;

&lt;p&gt;If you are not working at Amazon you can still make sure to follow the advice with the brag document. In any case, it will help you with the promotion in your current company. People like writing documents that underline a need for something. Think of the product/feature proposals I mentioned before. These should be manifested in a document as well, so you can reference them in the future and make sure the right decision will be taken - which should be your promotion.&lt;/p&gt;

&lt;p&gt;So, this is how you can apply the leadership principles of Amazon at your current job, even if you do not work for Amazon. Amazing, is not it? It will make you a more productive and high-quality developer with an eye for the right thing.&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
    </item>
    <item>
      <title>Install Strawberry Perl using chocolatey on Windows </title>
      <author>Yuki Kimoto</author>
      <pubDate>Wed, 05 Jan 2022 07:31:28 +0000</pubDate>
      <link>https://dev.to/yukikimoto/install-strawberry-perl-using-chocolatey-on-windows-4if3</link>
      <guid>https://dev.to/yukikimoto/install-strawberry-perl-using-chocolatey-on-windows-4if3</guid>
      <description>&lt;p&gt;Install Strawberry Perl using chocolatey on Windows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;choco install strawberryperl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you need 32bit Strawberry Perl, you can do the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;choco install strawberryperl --x86
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>perl</category>
      <category>windows</category>
      <category>chocolatey</category>
    </item>
    <item>
      <title>Data Warehouse Integration: Refining Your Customer Data Stack</title>
      <author>RudderStack</author>
      <pubDate>Wed, 05 Jan 2022 07:22:04 +0000</pubDate>
      <link>https://dev.to/rudderstack/data-warehouse-integration-refining-your-customer-data-stack-2l2j</link>
      <guid>https://dev.to/rudderstack/data-warehouse-integration-refining-your-customer-data-stack-2l2j</guid>
      <description>&lt;p&gt;A data warehouse is a concentrated repository storing integrated data gathered from multiple systems. A classic business features several systems, such as an ERP, CRM, marketing automation platform, or e-commerce system. Interestingly, all these run on a relational database rich in crucial data.&lt;/p&gt;

&lt;p&gt;Users can consolidate such information by setting up an ETL-powered data pipe.&lt;/p&gt;

&lt;p&gt;This pipeline can extract data from essential systems, cleanse and integrate it before storing it all in one huge relational database, i.e., a data warehouse.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eightstep-plan-for-data-warehouse-implementation"&gt;
  &lt;/a&gt;
  Eight-Step Plan For Data Warehouse Implementation
&lt;/h2&gt;

&lt;p&gt;Once users have recognized the need for data warehouse management, it is time to start planning. The following steps for a data warehouse implementation are a must-know for successful data management.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-gather-requirements"&gt;
  &lt;/a&gt;
  #1 Gather Requirements
&lt;/h3&gt;

&lt;p&gt;Multiple stakeholders will most likely be involved in such a company-wide data project.&lt;/p&gt;

&lt;p&gt;If so, contact with the following professionals is essential:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Decision-makers: Talk to strategists and leaders right up to the C-suite. Experts like these can facilitate the alignment process to the company's main goals.&lt;/li&gt;
&lt;li&gt;  IT: The IT team plays an important role in the data project, mainly by connecting sources to the data pipeline. The IT team will also deal with any errors and even provide support for the warehouse if you choose an on-premise solution.&lt;/li&gt;
&lt;li&gt;  Analytics: Analysts will define the project's outcome, which will help identify the necessary data sources.&lt;/li&gt;
&lt;li&gt;  Compliance and security: Intended for handling sensitive information. One needs to ensure there are no additional risks or rule-breaking in the process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once everything is in place, implementing the data warehouse is ready to kick off.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-create-warehouse-environments"&gt;
  &lt;/a&gt;
  #2 Create Warehouse Environments
&lt;/h3&gt;

&lt;p&gt;Following this stage, several options for the warehouse environment will be available:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  On-premise: Local hardware host.&lt;/li&gt;
&lt;li&gt;  Private cloud: Owning a hardware cloud host or hiring a trusted third party.&lt;/li&gt;
&lt;li&gt;  Public cloud: Use Azure AWS or AWS (a hosted cloud solution).&lt;/li&gt;
&lt;li&gt;  Hybrid cloud: Either mix cloud storage and on-premise, or use cloud capability for analytics, processing, and storing data on-premise.&lt;/li&gt;
&lt;li&gt;  Public cloud: Although the easiest and cheapest solution is a public cloud, most of the hard work is done by the host. However, consider various security and latency issues that might make a client change their mind.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will also need to create three separate environments: development, testing, and production.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-choose-a-data-model"&gt;
  &lt;/a&gt;
  #3 Choose A Data Model
&lt;/h3&gt;

&lt;p&gt;Data modeling is the most challenging aspect in implementing a data warehouse. By default, each source database has an individual schema. Once a warehouse schema has been established, all incoming data should fit it.&lt;/p&gt;

&lt;p&gt;Here are some of the main schema-types available:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Star schema: Linked dimensional tables with fact tables&lt;/li&gt;
&lt;li&gt;  Snowflake schema: Boosts the star schema by enhancing dimensional tables with an additional level&lt;/li&gt;
&lt;li&gt;  Galaxy schema: Multiple fact tables, connected by ordinary dimensional tables&lt;/li&gt;
&lt;li&gt;  Constellation schema: Boosted galaxy schema dimensional tables through an added hierarchy&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-connect-to-sources"&gt;
  &lt;/a&gt;
  #4 Connect To Sources
&lt;/h3&gt;

&lt;p&gt;In this stage, you need to extract data from the target source before uploading it to the warehouse. You can achieve the extraction in several ways, such as API call (a transaction processed by a secure interface), file transfer (legacy systems might export data as a file), and direct query (obtaining database results by using an SQL query).&lt;/p&gt;

&lt;p&gt;Once obtained, the data needs to be loaded into the data warehouse. Learn more about how to &lt;a href="https://rudderstack.com/blog/find-the-best-way-to-load-data-in-a-data-warehouse"&gt;find the best way to load data in a Data Warehouse&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-transform-incoming-data"&gt;
  &lt;/a&gt;
  #5 Transform Incoming Data
&lt;/h3&gt;

&lt;p&gt;Transformation of the data is an essential step of the ETL (Extract, Transform, Load) process. In this process, the data is transformed from its original schema to the destination schema. Transformation can also include any of the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Validation: Ensuring all data fits with the logical constraints, such as ZIP codes matching the address or dates being valid&lt;/li&gt;
&lt;li&gt;  Cleansing: removing any duplicate or corrupt data&lt;/li&gt;
&lt;li&gt;  Harmonization: Unifying all data in an exclusive format, such as changing all date formats to DD/MM or converting temperatures to Celsius&lt;/li&gt;
&lt;li&gt;  Enrichment: combining data records from remaining sources, thus improving the quality of data altogether&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-create-data-marts"&gt;
  &lt;/a&gt;
  #6 Create Data Marts
&lt;/h3&gt;

&lt;p&gt;Even though most people don't need overall availability, data warehouses store everything. Just as sales teams need sales figures- operations teams want ops data.&lt;/p&gt;

&lt;p&gt;To do it seamlessly, you will have to rely on a data mart. Marts are a logical division within a data warehouse. For instance, you can tag some of the records with Finance and others with Sales. Marts can then display records with each matching tag, making the warehouse precise in delivering targeted results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-configure-bi-and-analytics"&gt;
  &lt;/a&gt;
  #7 Configure BI And Analytics
&lt;/h3&gt;

&lt;p&gt;Most analytics tools and commercial BI (Business Intelligence) offer simple data warehouse integration. Both of them rely on volume (bigger data quantity equals more detailed analytics), velocity, and veracity (quality), offering a precise evaluation of the current state.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-audit-and-review"&gt;
  &lt;/a&gt;
  #8 Audit And Review
&lt;/h3&gt;

&lt;p&gt;Once the data warehouse is fully operational and the analytics team isn't short of options, it is time to apply measures to ensure overall data quality. This might include testing tools for automated data quality, making it easier to measure the warehouse content quality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;A data warehouse is a big relational database. However, it all revolves around the processes that keep the integration of data smooth. Ingesting data, integrating data, and moving this data to your analytics tools and BI are all essential factors in the process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rudderstack.com/"&gt;RudderStack&lt;/a&gt; lets you send the rich analysis from your warehouse to your entire customer data stack. Read more about how &lt;a href="https://rudderstack.com/blog/rudderstack-warehouse-actions-unlocks-the-data-in-your-warehouse"&gt;RudderStack's Warehouse Actions feature unlocks the data in your warehouse&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sign-up-for-free-and-start-sending-data"&gt;
  &lt;/a&gt;
  Sign Up For Free And Start Sending Data
&lt;/h3&gt;

&lt;p&gt;Test out our event stream, ELT, and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app. &lt;a href="https://app.rudderstack.com/signup?type=freetrial"&gt;Get Started&lt;/a&gt;&lt;/p&gt;

</description>
      <category>datawarehouse</category>
      <category>customerdata</category>
      <category>dataanalytics</category>
      <category>analytics</category>
    </item>
    <item>
      <title>Weekly web development resources #103</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 05 Jan 2022 07:06:49 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-103-4806</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-103-4806</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#css-diner"&gt;
  &lt;/a&gt;
  &lt;a href="https://flukeout.github.io/"&gt;CSS Diner&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://flukeout.github.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P7GtiG1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/css-dinner.jpg" alt="CSS Diner" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
A fun game to help you learn and practice CSS selectors.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tech-blogs"&gt;
  &lt;/a&gt;
  &lt;a href="https://tech-blogs.dev/"&gt;Tech blogs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tech-blogs.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1HUWaMiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/tech-blogs.jpg" alt="Tech blogs" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
A big list of Awesome Tech Blogs, where you can also add yourself. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dropdown-arrows"&gt;
  &lt;/a&gt;
  &lt;a href="https://codepen.io/ainalem/full/YzraZmP"&gt;Dropdown Arrows&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ainalem/full/YzraZmP"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2YVtoq0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/dropdown-arrows.jpg" alt="Dropdown Arrows" width="880" height="482"&gt;&lt;/a&gt;&lt;br&gt;
A cool demo of dropdown arrow animations by Mikael Ainalem.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#zotero"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.zotero.org/"&gt;Zotero&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.zotero.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cHS4nq_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/zotero.jpg" alt="Zotero" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
A free, easy-to-use tool to help you collect, organize, cite, and share research.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-thinner-book-atomic-habits"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.chrisbehan.ca/posts/atomic-habits"&gt;The Thinner Book: Atomic Habits&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.chrisbehan.ca/posts/atomic-habits"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WnY0Ddap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/habbits.jpg" alt="The Thinner Book: Atomic Habits" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
 A nice summary of the book "Atomic Habits" for everyone who wants to form new habits or get rid of bad ones.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dura"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tkellogg/dura"&gt;Dura&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/tkellogg/dura"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eK0990EJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/dura.jpg" alt="Dura" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A background process that watches your Git repositories and commits so you don't lose your work. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#you-should-keep-a-journal"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.chris-saylor.com/posts/you-should-keep-a-journal/"&gt;You Should Keep a Journal&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.chris-saylor.com/posts/you-should-keep-a-journal/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b8b5CGy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/journal.jpg" alt="You Should Keep a Journal" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
An article on reasons to keep a journal by Chris Saylor.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#stay"&gt;
  &lt;/a&gt;
  &lt;a href="https://cordlessdog.com/stay/"&gt;Stay&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cordlessdog.com/stay/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1U4nEkv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/stay.jpg" alt="Stay" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A tool to keeps desktop windows in their place. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wrapping-text"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.jayfreestone.com/writing/wrappping-text-inside-svg-css/"&gt;Wrapping text&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.jayfreestone.com/writing/wrappping-text-inside-svg-css/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2y1oNAb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/103/wrapping-text.jpg" alt="Wrapping text" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
A nice article by Jay Freestone on how to wrap text inside an SVG using CSS.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>weekly</category>
    </item>
    <item>
      <title>How To Use HarperDB Custom Functions With Your React App.</title>
      <author>Ankur Tyagi</author>
      <pubDate>Wed, 05 Jan 2022 06:08:33 +0000</pubDate>
      <link>https://dev.to/tyaga001/how-to-use-harperdb-custom-functions-with-your-react-app-2c43</link>
      <guid>https://dev.to/tyaga001/how-to-use-harperdb-custom-functions-with-your-react-app-2c43</guid>
      <description>&lt;p&gt;Last week, I got a chance to explore HarperDB - a fast, modern database that allows you to develop full-stack apps.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I've developed a ToDo React app with HarperDB Custom Functions. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#harperdb-is-a-distributed-database-focused-on-making-data-management-easy"&gt;
  &lt;/a&gt;
  HarperDB is a distributed database focused on making data management easy.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It supports both SQL and NoSQL queries. &lt;/li&gt;
&lt;li&gt;It also offers to access the database instance directly inside the client-side application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this article, let's learn about HarperDB and how to build a React app using HarperDB Custom Functions!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-talk-about-harperdb-custom-functions"&gt;
  &lt;/a&gt;
  Let's talk about HarperDB custom functions:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Add your own API endpoints to a standalone API server inside HarperDB.&lt;/li&gt;
&lt;li&gt;Use HarperDB Core methods to interact with your data at lightning speed.&lt;/li&gt;
&lt;li&gt;Custom Functions are powered by Fastify, so they’re extremely flexible.&lt;/li&gt;
&lt;li&gt;Manage in HarperDB Studio, or use your own IDE and Version Management System.&lt;/li&gt;
&lt;li&gt;Distribute your Custom Functions to all your HarperDB instances with a single click.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WiN98TEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637214440641/TbI71-efi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WiN98TEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637214440641/TbI71-efi.jpeg" alt="harperDB1.JPG" width="812" height="198"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-building"&gt;
  &lt;/a&gt;
  What are we building?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We will create a simple ToDo React App. When we are done, it will look like this when it runs in localhost: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hFOvr7zp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637675582514/mZq86DzSq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hFOvr7zp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637675582514/mZq86DzSq.jpeg" alt="7.JPG" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-look-at-how-we-develop-our-todo-react-app"&gt;
  &lt;/a&gt;
  Let's look at how we develop our To-Do React app:
&lt;/h2&gt;

&lt;p&gt;This ToDo app allows a user to create a task that needs to be completed by the user. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-has-2-states"&gt;
  &lt;/a&gt;
  It has 2 states:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Active &lt;/li&gt;
&lt;li&gt;Completed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Users can filter the tasks list based on the status of tasks as well. It will also allow the user to edit a task &amp;amp; delete one as well.&lt;/p&gt;

&lt;p&gt;So the main idea is whatever task is created by the user which you can see in the "View All" list, all the tasks will be saved in HarperDB with the help of Custom Functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-setup-overview"&gt;
  &lt;/a&gt;
  Project setup overview:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/facebook/create-react-app"&gt;Create React App&lt;/a&gt; is the best way to start building a new single-page application in React.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app my-app
cd my-app
npm start

Dependencies used:

 "@emotion/react": "^11.5.0",
    "@emotion/styled": "^11.3.0",
    "@mui/icons-material": "^5.0.5",
    "@mui/material": "^5.0.6",
    "@testing-library/jest-dom": "^5.15.0",
    "@testing-library/react": "^11.2.7",
    "@testing-library/user-event": "^12.8.3",
    "axios": "^0.24.0",
    "classnames": "^2.3.1",
    "history": "^5.1.0",
    "lodash.debounce": "^4.0.8",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-router-dom": "^6.0.1",
    "react-scripts": "4.0.3",
    "web-vitals": "^1.1.2"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it just creates a frontend build pipeline for this project, so we can use HarperDB in the backend.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Alternatively, you can clone the  &lt;a href="https://github.com/tyaga001/HarperDB-Custom-Functions"&gt;GitHub repository&lt;/a&gt;  and use the start directory as your project root. It contains the basic project setup that will get you ready. In this project for the CSS you can refer to Tasks.css (src\todo-component\Tasks.css)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#lets-talk-about-the-react-components-which-are-being-used"&gt;
  &lt;/a&gt;
  Let's talk about the react components which are being used:
&lt;/h2&gt;

&lt;p&gt;This is the folder structure:  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LUUX7QSY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638607477693/N_2e30KLu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LUUX7QSY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638607477693/N_2e30KLu.jpeg" alt="file.JPG" width="378" height="511"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In file structure, we can see that Tasks is the container component where we are managing the application's state, here the app state means the data we are getting from HarperDB using API endpoints, and this data is shared across all child components through props.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#task-component-tasksjsx"&gt;
  &lt;/a&gt;
  Task component (Tasks.jsx):
&lt;/h3&gt;

&lt;p&gt;Here is the file reference in the project:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;src\todo-component\Tasks.jsx&lt;/p&gt;

&lt;p&gt;This component acts as a container component (which is having a task list &amp;amp; task search as a child component)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useEffect, useCallback, useState, useRef } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';
import TaskSearch from './task-search-component/TaskSearch';
import './Tasks.css';
import axios from 'axios';
import debounce from '@mui/utils/debounce';
import TaskItem from './task-list-component/TaskList';
import Snackbar from '@mui/material/Snackbar';

export default function Tasks() {
  const navigate = useNavigate();
  const [searchParams, setSearchParams] = useSearchParams();
  const [taskList, setTaskList] = useState([]);
  const [filteredList, setFilteredList] = useState([]);
  const [open, setOpen] = useState(false);
  const [msg, setMsg] = useState('')
  const selectedId = useRef();
  useEffect(() =&amp;gt; {
    getFilteredList();
  }, [searchParams, taskList]);

  const setSelectedId = (task) =&amp;gt; {
    selectedId.current = task;
  };
  const saveTask = async (taskName) =&amp;gt; {
    if (taskName.length &amp;gt; 0) {
      try {
        await axios.post(
          'your_url_here',
          { taskTitle: taskName, taskStatus: 'ACTIVE', operation: 'sql' }
        );
        getTasks();
      } catch (ex) {
        showToast();
      }
    }
  };

  const updateTask = async (taskName) =&amp;gt; {
    if (taskName.length &amp;gt; 0) {
      try {
        await axios.put(
          'your_url_here',
          {
            taskTitle: taskName,
            operation: 'sql',
            id: selectedId.current.id,
            taskStatus: selectedId.current.taskStatus,
          }
        );
        getTasks();
      } catch (ex) {
        showToast();
      }
    }
  };

  const doneTask = async (task) =&amp;gt; {
    try {
      await axios.put(
        'your_url_here',
        {
          taskTitle: task.taskTitle,
          operation: 'sql',
          id: task.id,
          taskStatus: task.taskStatus,
        }
      );
      getTasks();
    } catch (ex) {
        showToast();
    }
  };

  const deleteTask = async (task) =&amp;gt; {
    try {
      await axios.delete(
        `your_url_here/${task.id}`
      );
      getTasks();
    } catch (ex) {
        showToast();
    }
  };

  const getFilteredList = () =&amp;gt; {
    if (searchParams.get('filter')) {
      const list = [...taskList];
      setFilteredList(
        list.filter(
          (item) =&amp;gt; item.taskStatus === searchParams.get('filter').toUpperCase()
        )
      );
    } else {
      setFilteredList([...taskList]);
    }
  };

  useEffect(() =&amp;gt; {
    getTasks();
  }, []);

  const getTasks = async () =&amp;gt; {
    try {
    const res = await axios.get(
      'your_url_here'
    );
    console.log(res);
    setTaskList(res.data);
    } catch(ex) {
        showToast();
    }
  };

  const debounceSaveData = useCallback(debounce(saveTask, 500), []);
  const searchHandler = async (taskName) =&amp;gt; {
    debounceSaveData(taskName);
  };

  const showToast = () =&amp;gt; {
    setMsg('Oops. Something went wrong!');
    setOpen(true)
  }

  return (
    &amp;lt;div className="main"&amp;gt;
      &amp;lt;TaskSearch searchHandler={searchHandler} /&amp;gt;
      &amp;lt;ul className="task-filters"&amp;gt;
        &amp;lt;li&amp;gt;
          &amp;lt;a
            href="javascript:void(0)"
            onClick={() =&amp;gt; navigate('/')}
            className={!searchParams.get('filter') ? 'active' : ''}
          &amp;gt;
            View All
          &amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;
          &amp;lt;a
            href="javascript:void(0)"
            onClick={() =&amp;gt; navigate('/?filter=active')}
            className={searchParams.get('filter') === 'active' ? 'active' : ''}
          &amp;gt;
            Active
          &amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;
          &amp;lt;a
            href="javascript:void(0)"
            onClick={() =&amp;gt; navigate('/?filter=completed')}
            className={
              searchParams.get('filter') === 'completed' ? 'active' : ''
            }
          &amp;gt;
            Completed
          &amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
      {filteredList.map((task) =&amp;gt; (
        &amp;lt;TaskItem
          deleteTask={deleteTask}
          doneTask={doneTask}
          getSelectedId={setSelectedId}
          task={task}
          searchComponent={
            &amp;lt;TaskSearch
              searchHandler={updateTask}
              defaultValue={task.taskTitle}
            /&amp;gt;
          }
        /&amp;gt;
      ))}
      &amp;lt;Snackbar
        open={open}
        autoHideDuration={6000}
        onClose={() =&amp;gt; setOpen(false)}
        message={msg}
      /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;your_url_here = you should replace this with your HarperDB endpoint URL. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For an example of the URL, look below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wWsXEef1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638689635403/PC0lGCOdh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wWsXEef1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638689635403/PC0lGCOdh.jpeg" alt="16.JPG" width="369" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#task-list-tasklistjsx"&gt;
  &lt;/a&gt;
  Task List (TaskList.jsx):
&lt;/h3&gt;

&lt;p&gt;Here is the file reference in the project:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;src\todo-component\task-list-component\TaskList.jsx&lt;/p&gt;

&lt;p&gt;This component is used to render all the list of tasks that we are getting from the HarperDB&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
import React, { useState } from 'react';
import classNames from 'classnames';
import IconButton from '@mui/material/IconButton';
import DoneIcon from '@mui/icons-material/Done';
import EditIcon from '@mui/icons-material/Edit';
import ClearIcon from '@mui/icons-material/Clear';
import DeleteIcon from '@mui/icons-material/Delete';
import TextField from '@mui/material/TextField';

export default function TaskItem({ task, searchComponent, getSelectedId, doneTask, deleteTask }) {
  const [editing, setEditing] = useState(false);
  const [selectedTask, setSelectedTask] = useState();
  let containerClasses = classNames('task-item', {
    'task-item--completed': task.completed,
    'task-item--editing': editing,
  });

  const updateTask = () =&amp;gt; {
      doneTask({...task, taskStatus: task.taskStatus === 'ACTIVE' ? 'COMPLETED' : 'ACTIVE'});
  }

  const renderTitle = task =&amp;gt; {
    return (
      &amp;lt;div className="task-item__title" tabIndex="0"&amp;gt;
        {task.taskTitle}
      &amp;lt;/div&amp;gt;
    );
  }
  const resetField = () =&amp;gt; {
      setEditing(false);
  }
  const renderTitleInput = task =&amp;gt; {
    return (
    React.cloneElement(searchComponent, {resetField})
    );
  }

  return (
    &amp;lt;div className={containerClasses} tabIndex="0"&amp;gt;
      &amp;lt;div className="cell"&amp;gt;
        &amp;lt;IconButton color={task.taskStatus === 'COMPLETED' ? 'success': 'secondary'} aria-label="delete" onClick={updateTask} className={classNames('btn--icon', 'task-item__button', {
            active: task.completed,
            hide: editing,
          })} &amp;gt;
          &amp;lt;DoneIcon /&amp;gt;
        &amp;lt;/IconButton&amp;gt;
       &amp;lt;/div&amp;gt;

      &amp;lt;div className="cell"&amp;gt;
        {editing ? renderTitleInput(task) : renderTitle(task)}
      &amp;lt;/div&amp;gt;

      &amp;lt;div className="cell"&amp;gt;
      {!editing &amp;amp;&amp;amp; &amp;lt;IconButton onClick={() =&amp;gt; {setEditing(true); getSelectedId(task)}} aria-label="delete" className={classNames('btn--icon', 'task-item__button', {
            hide: editing,
          })} &amp;gt;
          &amp;lt;EditIcon /&amp;gt;
        &amp;lt;/IconButton&amp;gt; }
        {editing &amp;amp;&amp;amp; &amp;lt;IconButton onClick={() =&amp;gt; {setEditing(false); getSelectedId('');}} aria-label="delete" className={classNames('btn--icon', 'task-item__button', {
            hide: editing,
          })} &amp;gt;
          &amp;lt;ClearIcon /&amp;gt;
        &amp;lt;/IconButton&amp;gt; }
        {!editing &amp;amp;&amp;amp; &amp;lt;IconButton onClick={() =&amp;gt; deleteTask(task)} aria-label="delete" className={classNames('btn--icon', 'task-item__button', {
            hide: editing,
          })} &amp;gt;
          &amp;lt;DeleteIcon /&amp;gt;
        &amp;lt;/IconButton&amp;gt; }
       &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#task-search-tasksearchjsx"&gt;
  &lt;/a&gt;
  Task Search (TaskSearch.jsx):
&lt;/h3&gt;

&lt;p&gt;Here is the file reference in the project:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;src\todo-component\task-search-component\TaskSearch.jsx&lt;/p&gt;

&lt;p&gt;This component provides a text box to users where users can enter the name of the task which they need to perform. (Same component we are using while editing a task)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
import React from 'react';
import TextField from '@mui/material/TextField';

export default function TaskSearch({ searchHandler, defaultValue, resetField }) {
  const handleEnterKey = event =&amp;gt; {
    if(event.keyCode === 13) {
      searchHandler(event.target.value);
      event.target.value = '';
      if(resetField) {
        resetField();
      }
    }
  }

    return (
        &amp;lt;TextField
        id="filled-required"
        variant="standard"
        fullWidth 
        hiddenLabel
        placeholder="What needs to be done?"
        onKeyUp={handleEnterKey}
        defaultValue={defaultValue}
      /&amp;gt;
    );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can find the complete  &lt;a href="https://github.com/tyaga001/HarperDB-Custom-Functions"&gt;source code&lt;/a&gt;  of the ToDo App. &lt;/p&gt;

&lt;blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the Tasks.js component, you can see we are leveraging Custom Function APIs which allows us to save &amp;amp; edit the data from HarperDB. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--STWtNF7D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637676549084/uVANY2DKC.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--STWtNF7D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637676549084/uVANY2DKC.jpeg" alt="8.JPG" width="819" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-we-develop-an-api-using-harperdb-custom-functions"&gt;
  &lt;/a&gt;
  How we develop an API using HarperDB Custom functions:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#lets-create-the-schema-first"&gt;
  &lt;/a&gt;
  Let's create the schema first:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_UV_uFpz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637676793538/ZRzzjaYxV.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_UV_uFpz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637676793538/ZRzzjaYxV.jpeg" alt="10.JPG" width="835" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#created-table"&gt;
  &lt;/a&gt;
  Created table:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6SFZ5y7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637676932930/_TGhOgLjA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6SFZ5y7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637676932930/_TGhOgLjA.jpeg" alt="11.JPG" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-project"&gt;
  &lt;/a&gt;
  Create a project:
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Before creating a project, you need to enable custom functions, once you click on functions you will see a pop up like below: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Md2ZIT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637677035806/rxEuYScO-.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Md2ZIT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637677035806/rxEuYScO-.jpeg" alt="12.JPG" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the green button "enable the custom function" it will look like 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qSf6wbmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637677085945/iWUbCD6xs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qSf6wbmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637677085945/iWUbCD6xs.jpeg" alt="13.JPG" width="880" height="403"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-lets-create-project-todoapi-which-will-look-like"&gt;
  &lt;/a&gt;
  Now let's create project "ToDoApi" which will look like 👇
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KvrsOY01--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637677185567/KpsjvJhXw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KvrsOY01--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637677185567/KpsjvJhXw.jpeg" alt="15.JPG" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Under the section "/ToDoApi/routes" we will see one file example.js contains the API endpoints.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-write-our-own-api-endpoints-in-order-to-"&gt;
  &lt;/a&gt;
  Let's write our own API endpoints in order to :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;create a task&lt;/li&gt;
&lt;li&gt;edit a task &lt;/li&gt;
&lt;li&gt;delete a task&lt;/li&gt;
&lt;li&gt;get task
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#save-task-endpoint"&gt;
  &lt;/a&gt;
  Save Task endpoint:
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Which is used to store data in DB&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  server.route({
    url: '/saveTask',
    method: 'POST',
    // preValidation: hdbCore.preValidation,
    handler: (request) =&amp;gt; {
      request.body= {
        operation: 'sql',
        sql: `insert into example_db.tasks (taskTitle, taskStatus) values('${request.body.taskTitle}', '${request.body.taskStatus}')`
      };
      return hdbCore.requestWithoutAuthentication(request);

    },
  });

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#edit-task-endpoint"&gt;
  &lt;/a&gt;
  Edit Task endpoint:
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;This is used to edit an existing record in your DB, we are using the same endpoint as the save task but having a different method type as PUT.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; server.route({
    url: '/saveTask',
    method: 'PUT',
    // preValidation: hdbCore.preValidation,
    handler: (request) =&amp;gt; {
      request.body= {
        operation: 'sql',
        sql: `update example_db.tasks set taskTitle='${request.body.taskTitle}', taskStatus='${request.body.taskStatus}' where id='${request.body.id}'`
      };
      return hdbCore.requestWithoutAuthentication(request);

    },
  });

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#delete-a-task-endpoint"&gt;
  &lt;/a&gt;
  Delete a task endpoint:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;server.route({
    url: '/deleteTask/:id',
    method: 'DELETE',
    // preValidation: hdbCore.preValidation,
    handler: (request) =&amp;gt; {
      request.body= {
        operation: 'sql',
        sql: `delete from example_db.tasks where id='${request.params.id}'`
      };
      return hdbCore.requestWithoutAuthentication(request);

    },
  });

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-task-endpoint"&gt;
  &lt;/a&gt;
  Get task endpoint:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// GET, WITH ASYNC THIRD-PARTY AUTH PREVALIDATION
  server.route({
    url: '/tasks',
    method: 'GET',
    // preValidation: (request) =&amp;gt; customValidation(request, logger),
    handler: (request) =&amp;gt; {
      request.body= {
        operation: 'sql',
        sql: 'select * from example_db.tasks'
      };

      /*
       * requestWithoutAuthentication bypasses the standard HarperDB authentication.
       * YOU MUST ADD YOUR OWN preValidation method above, or this method will be available to anyone.
       */
      return hdbCore.requestWithoutAuthentication(request);
    }
  });


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#all-about-helpers-in-custom-functions"&gt;
  &lt;/a&gt;
  All about helpers in Custom Functions:
&lt;/h2&gt;

&lt;p&gt;In this, we can implement our own custom validation using JWT.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_58AnCT8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637678020921/eJ5He63MX.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_58AnCT8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637678020921/eJ5He63MX.jpeg" alt="helper.JPG" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our, ToDo React app on the UI. &lt;/p&gt;

&lt;p&gt;How to get the endpoint URL to hit on the UI. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ts0xODA2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637677578551/9RUVG6f0R.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ts0xODA2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637677578551/9RUVG6f0R.jpeg" alt="16.JPG" width="369" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-can-host-a-static-web-ui"&gt;
  &lt;/a&gt;
  You can host a static web UI:
&lt;/h2&gt;

&lt;p&gt;Your project must meet the below details to host your static UI&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An index file located at /static/index.html&lt;/li&gt;
&lt;li&gt;Correctly path any other files relative to index.html&lt;/li&gt;
&lt;li&gt;If your app makes use of client-side routing, it must have [project_name]/static as its base (basename for react-router, base for vue-router, etc.):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Router basename="/dogs/static"&amp;gt;
    &amp;lt;Switch&amp;gt;
        &amp;lt;Route path="/care" component={CarePage} /&amp;gt;
        &amp;lt;Route path="/feeding" component={FeedingPage} /&amp;gt;
    &amp;lt;/Switch&amp;gt;
&amp;lt;/Router&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above example can be checked out at &lt;a href="https://harperdb.io/docs/custom-functions/host-a-static-web-ui/"&gt;HarperDB &lt;/a&gt; as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-functions-operations"&gt;
  &lt;/a&gt;
  Custom Functions Operations:
&lt;/h2&gt;

&lt;p&gt;There are 9 operations you can do in total: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;custom_functions_status&lt;/li&gt;
&lt;li&gt;get_custom_functions&lt;/li&gt;
&lt;li&gt;get_custom_function&lt;/li&gt;
&lt;li&gt;set_custom_function&lt;/li&gt;
&lt;li&gt;drop_custom_function&lt;/li&gt;
&lt;li&gt;add_custom_function_project&lt;/li&gt;
&lt;li&gt;drop_custom_function_project&lt;/li&gt;
&lt;li&gt;package_custom_function_project&lt;/li&gt;
&lt;li&gt;deploy_custom_function_project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can have a more indepth look at every individual operation in  &lt;a href="https://harperdb.io/docs/harperdb-api/"&gt;HarperDB &lt;/a&gt; docs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#restarting-the-server"&gt;
  &lt;/a&gt;
  Restarting the Server:
&lt;/h2&gt;

&lt;p&gt;For any changes you’ve made to your routes, helpers, or projects, you’ll need to restart the Custom Functions server to see them take effect. HarperDB Studio does this automatically whenever you create or delete a project, or add, edit, or edit a route or helper. If you need to start the Custom Functions server yourself, you can use the following operation to do so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "operation": "restart_service",
    "service": "custom_functions"
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That was it for this blog. &lt;/p&gt;

&lt;p&gt;I hope you learned something new today. If you did, please like/share so that it reaches others as well.&lt;/p&gt;

&lt;blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’re a regular reader, thank you, you’re a big part of the reason I’ve been able to share my life/career experiences with you.&lt;/p&gt;

&lt;p&gt;Let me know how you will use  &lt;a href="https://harperdb.io/"&gt;HarperDB&lt;/a&gt; to create your next project.&lt;/p&gt;

&lt;p&gt;Follow  &lt;a href="https://twitter.com/harperdbio"&gt;HarperDB&lt;/a&gt; on Twitter for the latest updates. &lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Connect with me on &lt;a href="https://twitter.com/TheAnkurTyagi"&gt;Twitter &lt;/a&gt; *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you like this. I encourage you all to sign up for my newsletter.&lt;/p&gt;

&lt;p&gt;It's free. You can ask me your questions via email.&lt;/p&gt;

&lt;p&gt;Check out old editions here:  &lt;a href="https://www.getrevue.co/profile/AnkurTyagi"&gt;The 2-1-1 Developer Growth Newsletter by Ankur&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 Best Design Pattern Courses for Java Programmers</title>
      <author>javinpaul</author>
      <pubDate>Wed, 05 Jan 2022 06:03:27 +0000</pubDate>
      <link>https://dev.to/javinpaul/5-best-java-design-pattern-courses-for-beginners-4dj</link>
      <guid>https://dev.to/javinpaul/5-best-java-design-pattern-courses-for-beginners-4dj</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/software-architecture-in-java-design-development?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tTPWuXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/v2api/editorpage/5669828520574976/image/6296864620544000" alt="Spring Framework tutorial: Getting started with Spring" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Java developers, if you want to learn Design patterns in 2022 and looking for the best resources like books, tutorials, and online courses then you have come to the right place. &lt;/p&gt;

&lt;p&gt;Earlier, I have shared the &lt;a href="https://www.java67.com/2016/10/top-5-object-oriented-analysis-and-design-patterns-book-java.html"&gt;best design pattern books&lt;/a&gt;, &lt;a href="https://www.java67.com/2012/09/top-10-java-design-pattern-interview-question-answer.html"&gt;interview questions&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2018/02/composite-design-pattern-in-java-real.html"&gt; many design pattern tutorials&lt;/a&gt; and in this article, I am going to share the best design pattern courses for Java developers. &lt;/p&gt;

&lt;p&gt;A design pattern is the tried and tested solution of classical software problems which is common during software development. &lt;/p&gt;

&lt;p&gt;Knowing design pattern not only help you to solve those problems quickly but also encouraged you to use tried and tested solution, thus overall improving the quality of the software application you are building.&lt;/p&gt;

&lt;p&gt;By the way, if you are wondering what's the design pattern in Java? It's fairly simple! It's nothing but figuring out the solutions for commonly occurring programming language problems.&lt;/p&gt;

&lt;p&gt;If you're a crazy fan of Java, you could browse the publication -- GOF design pattern (&lt;a href="http://www.amazon.com/Design-Patterns-Object-Oriented-Professional-Computing/dp/0201634988?tag=javamysqlanta-20"&gt;Design Patterns: Elements of Reusable Object-Oriented Software&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Well, knowing this perfectly, will make you a promising coder! In promotion to this, knowing the design pattern will make you stand out of crowd in interviews, and thereby crack the questions of the interviewer.&lt;/p&gt;

&lt;p&gt;It's also important to learn when to use these design patterns and that's where this nice diagram from &lt;a href="https://www.educative.io?affiliate_id=5073518643380224"&gt;Educative&lt;/a&gt; is really helpful&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/web-application-software-architecture-101?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bq6q_Rhj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-FliyHYR2fYY/Xk3o0f4XOsI/AAAAAAAAdA4/SqBdGXG9rKY5XYtBUAxrZoKe6nBaXi2hACLcBGAsYHQ/s640/Design%252BPatterns%252Band%252Btheir%252Brelationship%252Bfor%252Bprogrammers%252Beducative.jpg" alt="A comprehensive list of Java design patterns" width="582" height="640"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-best-online-courses-to-learn-design-patterns-in-java"&gt;
  &lt;/a&gt;
  5 Best Online courses to learn Design Patterns in Java
&lt;/h2&gt;

&lt;p&gt;Without further fuss, let's look into the 5 promising areas to comprehend Design Pattern In Java.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-java-design-patterns-and-architecture-udemy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-design-patterns-tutorial%2F"&gt;Java Design Patterns and Architecture -- Udemy&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Udemy - an immense networked course provider is ready to gift you a Costless course made by John Purcell.  This free course is comprised of 19 lectures, and seriously the nicest platforms to inaugurate your learning voyage.&lt;/p&gt;

&lt;p&gt;This course applies to newcomers and also intermediate levels. It educates you with ordinary layout structures, the application of these structures, how to build them in your respective system software.&lt;/p&gt;

&lt;p&gt;What you require to know is essential Java knowledge.&lt;/p&gt;

&lt;p&gt;What'll this tutorial course content cover?&lt;/p&gt;

&lt;p&gt;The path is categorized into 3 parts -- Methodology, Structural Patterns, Smaller Scale Patterns.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  History of designing software.&lt;/li&gt;
&lt;li&gt;  Front end &amp;amp; back end development. &lt;/li&gt;
&lt;li&gt;  Model-view-controller (concept &amp;amp; practice). &lt;/li&gt;
&lt;li&gt;  Observer pattern (concept &amp;amp; real-time example). &lt;/li&gt;
&lt;li&gt;  MVC&lt;/li&gt;
&lt;li&gt;  Adapter Pattern&lt;/li&gt;
&lt;li&gt;  Factory Pattern&lt;/li&gt;
&lt;li&gt;  Beans&lt;/li&gt;
&lt;li&gt;  DAO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the light of the evidence, it is crystal clear that this course is one of the best courses to learn design patterns in Java.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this course&lt;/strong&gt; - ** &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-design-patterns-tutorial%2F"&gt;Java Design Patterns and Architecture&lt;/a&gt;**&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-design-patterns-tutorial%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1zGjzEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-u_hWR46Zh9A/YbU5KHDp03I/AAAAAAAAAH8/dvPGxHkM6TIHMzECJ3OjQEyCcYeNIZiyQCNcBGAsYHQ/w400-h225/1639266598367546-0.png" alt="Top 5 Courses to learn Design Patterns in Java" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-design-patterns-coursera"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fdesign-patterns"&gt;Design Patterns -- Coursera&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Defining how to solve UI issues utilizing the Design patterns in Java, critical codes identification, and the design pattern tenets are not simple. This course will mold you to make this feasible.&lt;/p&gt;

&lt;p&gt;It's assigned by the top University of Alberta, and the instructor is Kenny Wong&lt;/p&gt;

&lt;p&gt;(Associate Professor Computing Science, from the Faculty of Science). You can enroll Free of the cost!&lt;/p&gt;

&lt;p&gt;The period of the course is nearly 15 hours (timing reset according to the learner's convenience) accessible in form of videos, assignments, quizzes are formulated for the intermediate stage learner, and the certificate is obtained when the learner gives money. This course is also part of  **&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fsoftware-design-architecture"&gt;Software Design and Architecture Specialization&lt;/a&gt; **and completing this course will count towards that certification.&lt;/p&gt;

&lt;p&gt;Here are the things you will learn in this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Design Pattern - Creational, Structural, and Behavioral Patterns, examples, Composite Pattern, Proxy Pattern, Decorator Pattern, Facade Pattern, Adapter Pattern, assignment.&lt;/li&gt;
&lt;li&gt;  Template Method Pattern, Chain of Responsibility Pattern, State Pattern, Command Pattern, Observer Pattern.&lt;/li&gt;
&lt;li&gt;  tenets of Code Smells, Open/Closed Principle, Composing Objects, Interface Segregation, Dependency Inversion.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The course is divided into multiple weeks and in the final week, you'll take assignments, tests, etc. In short, this course covers nearly 95% of the domain's (design pattern in Java) syllabus.&lt;/p&gt;

&lt;p&gt;Here is the link to join his course - &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fdesign-patterns"&gt;Design Patterns -- Coursera&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fdesign-patterns"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HmaN4BKD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-XHLK3--Uffg/YbU5JWnEyGI/AAAAAAAAAH4/Mm9ZeeoPOBEMAAv5XmqrxH80SQAIqshxgCNcBGAsYHQ/w400-h210/1639266594630046-1.png" alt="Best Coursera course to learn Design Pattern" width="400" height="210"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-software-design-and-architecture-specialization-coursera"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fsoftware-design-architecture"&gt;Software Design and Architecture Specialization --- Coursera&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Develop your first specialized software using the design pattern in this Free-of-cost course offered to the learners by the University of Alberta, the world's overseeing social research and schooling-motive institute. &lt;/p&gt;

&lt;p&gt;It infuses you with countless techniques which use the tenets of design Patterns to suit a proper Java code writer.&lt;/p&gt;

&lt;p&gt;This arena is subdivided into 4 primary topics, in which, you'll learn how to compare diversified architectural styles by the usage of design pattern, Object-Oriented design, UML, design pattern (covers -- inversion, open-closed, last knowledge, model-view-controller, code smells) with a highlighting project, database-centric, UML carton.&lt;/p&gt;

&lt;p&gt;You'll also learn to identify, sue, and develop interfaces using REST (API design), BPEL, UDDI, WSDL (Web Services Description Language), and SOAP(Subject, Object, Assessment, and Plan) over HTTP.&lt;/p&gt;

&lt;p&gt;Here is the link to join his course - ** &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fsoftware-design-architecture"&gt;Software Design and Architecture Specialization&lt;/a&gt;**&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fsoftware-design-architecture"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2O8AbZMf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-zLNyEHJ2dZw/YbU5IbW-tfI/AAAAAAAAAH0/O82bGm7P29sZRXx0tN6QQZWh4MpQOQQQQCNcBGAsYHQ/w400-h210/1639266590428048-2.png" alt="Best Coursera certification to learn Design Pattern" width="400" height="210"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-building-scalable-java-microservices-with-spring-boot-and-spring-cloud-coursera"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fgoogle-cloud-java-spring"&gt;Building Scalable Java Microservices with Spring Boot and Spring Cloud -- Coursera&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In this open course, you'll understand to develop Java applications. The lesson is developed by Google, hence you'll know to apply for Java programs in Google cloud utilizing the support of spring boot and spring cloud.&lt;/p&gt;

&lt;p&gt;The pedagogy is solidified on the integral database of Google cloud - Cloud SQL. To learn this course effectively, the learner must have the essential insight of Java language, Google cloud, a bit of experience in handling appliances like Gradle and Maven.&lt;/p&gt;

&lt;p&gt;Many of the syllabi it covers are Pub/Sub, uploading, storing &amp;amp; formatting data on the cloud, debugging, and on and on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link -- **&lt;/strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fgoogle-cloud-java-spring"&gt;Building Scalable Java Microservices with Spring Boot&lt;/a&gt;**&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lh3.googleusercontent.com/-bffLCkWba6g/YbU5HUDH_xI/AAAAAAAAAHw/rEmtdKG0AzkACgGl24Q_Pzl6hSHNDkiKwCNcBGAsYHQ/s1600/1639266585769362-3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--URYH_Y8u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-bffLCkWba6g/YbU5HUDH_xI/AAAAAAAAAHw/rEmtdKG0AzkACgGl24Q_Pzl6hSHNDkiKwCNcBGAsYHQ/w400-h210/1639266585769362-3.png" alt="Best Microservice course to learn Design Pattern" width="400" height="210"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, instead of joining these courses and specialization individually, you can also join the &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;Coursera Plus&lt;/a&gt;&lt;/strong&gt;, a subscription plan from Coursera which gives you unlimited access to their most popular courses, specialization, professional certificate, and guided projects.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-design-patterns-in-java-pluralsight"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpaths%2Fdesign-patterns-in-java"&gt;Design Patterns in Java -- Pluralsight&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The entire passage of the course will help in boosting your Java skills and strengthening your coding ability. Though it is a paid course, it is worth enrolling in it! Why? If you're a fresher to design patterns, this course path will encourage you in understanding all fundamentals you need to proceed further.&lt;/p&gt;

&lt;p&gt;The path is subdivided into 4 courses and IQ exercises to examine your observation of the lessons.&lt;/p&gt;

&lt;p&gt;This course has a staked pack of design pattern topics such as Creational pattern - the creation of patterns (incorporating basics of the factory method, prototype pattern, abstract, builder, object pool pattern), behavioral pattern - object's interaction (command, template, visitor, null object pattern, iterator pattern), structural pattern - how objects are identified &amp;amp; structured (flyweight, bridge, adaptor, decorator Pattern) expending Java 8.&lt;/p&gt;

&lt;p&gt;The mentors Jose Paumard and Bryan Hansen, the well-experienced teachers enable you to understand the theories with no difficulties. Jose Paumard's teachings are highly relatable with the real-time application, while Bryan Hansen's teachings grab the attention of the learners.&lt;/p&gt;

&lt;p&gt;In short, this path has online courses that cover every nook and corner of the domain of Java's design pattern.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the Course Link to learn more -- **&lt;/strong&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpaths%2Fdesign-patterns-in-java"&gt;Design Patterns in Java&lt;/a&gt;**&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpaths%2Fdesign-patterns-in-java"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YRCGu0ky--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-mj3AnJUjHf0/YdEtHHmJRkI/AAAAAAAAqtw/MQkqlXuxGLAFO6VarbrWxLYqfq1n2lyRQCNcBGAsYHQ/design-patterns-java-structural-v3.jpg" alt="best pluralsight course to learn design patterns" width="512" height="288"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, you would need a Pluralsight membership to join this course which costs around $29 per month or $299 per year (14% discount). &lt;/p&gt;

&lt;p&gt;I highly recommend this subscription to all programmers as it provides instant access to more than 7000+ online courses to learn any tech skill. Alternatively, you can also use their &lt;strong&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpricing%2Ffree-trial"&gt;10-day-free-pass&lt;/a&gt;&lt;/strong&gt; to watch this course for FREE.&lt;/p&gt;

&lt;p&gt;That's all about the &lt;strong&gt;best design pattern courses for Java developers in 2022.&lt;/strong&gt; I hope this article will assist you in finding a suitable course for learning how to design patterns using Java. &lt;/p&gt;

&lt;p&gt;Not only patterns are good exercises to practice loop statements but, also help in job interviews. If you like this article please share it with your friends &amp;amp; colleagues.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Best Online Courses for Java Developers&lt;/strong&gt; you may like to explore&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-spring-microservices-courses-with-spring-boot-and-spring-cloud.html#axzz6JJFPbsyP"&gt;Top 5 Courses to Learn Microservices with Spring Boot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2018/02/top-5-online-courses-to-learn-web-development.html#axzz57wed1PWd"&gt;5 Courses to Learn Web Development in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/06/top-6-spring-framework-online-courses-Java-programmers.html"&gt;Top 5 Courses to learn Spring in Depth&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-advanced-spring-boot-courses-for-experienced-java-developers-5e57606816bd"&gt;10 Advanced Spring Boot Courses for Java developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/04/top-5-spring-cloud-courses-for-java.html"&gt;Top 5 Courses to learn Spring Cloud for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2018/02/5-courses-to-learn-shell-scripting-in-linux.html"&gt;5 Courses to learn Shell Scripting in Linux&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2018/02/top-5-java-design-pattern-courses-for-developers.html"&gt;Top 5 Java design patterns courses for experienced Java devs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-5-courses-to-learn-microservices-in-java-and-spring-framework-e9fed1ba804d"&gt;Top 7 Courses to learn Microservices in Java&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2017/11/top-5-free-core-spring-mvc-courses-learn-online.html"&gt;5 Free Spring  Framework Courses for Java Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-python-for-web-development-in-2020-best-of-lot-efe11fb6d212"&gt;10 Courses to become full-stack Python Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2018/02/10-courses-to-prepare-for-programming-job-interviews.html"&gt;10 courses for Programming/Coding Job Interviews&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2017/11/top-5-free-java-courses-for-beginners.html"&gt;5 Online Courses to learn Core Java for Free&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-15-java-and-spring-framework-courses-from-udemy-best-of-lot-d7b965b62a9f"&gt;15 Java and Spring Courses from Udemy &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/my-favorite-udemy-online-courses-for-programmers-and-software-engineers-f9d941dd0035"&gt;10 Best Udemy Courses for Programmers and Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-online-courses-to-become-a-fullstack-web-developer-in-2020-d608a6b63232"&gt;10 Courses to become full-stack JavaScript Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/6-best-dynamic-programming-courses-for-coding-interviews-14744060923c"&gt;6 Best Courses to learn Dynamic Programming for Interviews&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you find these best design pattern online courses useful then please share them with your friends and colleagues. If you have any questions or feedback, then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S.&lt;/strong&gt; - If you are serious about learning design patterns and improving your coding skill but looking for a free course to start with then you can also check out this &lt;strong&gt;&lt;a href="http://bit.ly/java-design-patterns-tutorial"&gt;Java Design Patterns and Architecture course&lt;/a&gt;&lt;/strong&gt; from Udemy. This online course is completely free and you just need a free Udemy account to join this course.&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>coding</category>
      <category>development</category>
    </item>
    <item>
      <title>Ultimate List Of Javascript Learning Resources [Free]</title>
      <author>Chetan Atrawalkar</author>
      <pubDate>Wed, 05 Jan 2022 05:52:11 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/ultimate-list-of-javascript-learning-resources-free-37c2</link>
      <guid>https://dev.to/chetan_atrawalkar/ultimate-list-of-javascript-learning-resources-free-37c2</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-javascript-is-and-why-you-should-learn-it"&gt;
  &lt;/a&gt;
  What JavaScript Is And Why You Should Learn It
&lt;/h3&gt;

&lt;p&gt;In simple terms, JavaScript is a scripting or programming language used to make a website interactive. It allows you to implement complex features on web pages. These features could be timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, modals, etc. JavaScript isn’t only used to create websites. It can also be used to build browser-based games and, with the help of certain frameworks, mobile apps for different operating systems.&lt;/p&gt;

&lt;p&gt;If you want to get into web development, or are already into web development, and want to succeed in your career, then learning JavaScript is a required skill for you. Aside from its beginner-friendliness, JavaScript is the most popular programming language, which means that it’ll be relevant in years to come. With more and more businesses moving online, demand for JavaScript developers has been rocketing. The best time to learn JavaScript was yesterday, the next best time is now, so let’s get started.&lt;/p&gt;

&lt;p&gt;In this article, I have put together a variety of free resources that you can easily access to help you learn the JavaScript basics to advanced. From courses and videos, to written guides and blogs, there is something here for everyone. Enjoy....&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ultimate-list-of-javascript-learning-resources-free"&gt;
  &lt;/a&gt;
  Ultimate List Of Javascript Learning Resources [Free].
&lt;/h3&gt;

&lt;p&gt;Let’s take a look at some awesome resources we can all learn from now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#websites"&gt;
  &lt;/a&gt;
  🌐 Websites
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-tutorialrepublic"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.tutorialrepublic.com/"&gt;TutorialRepublic&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-javascriptinfo"&gt;
  &lt;/a&gt;
  - &lt;a href="https://javascript.info/"&gt;Javascript.info&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-html-dog"&gt;
  &lt;/a&gt;
  - &lt;a href="https://htmldog.com/"&gt;HTML Dog&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-freecodecamp"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-the-odin-project"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.theodinproject.com/"&gt;The Odin Project&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-w3schools"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.w3schools.com/"&gt;W3Schools&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-javatpoint"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.javatpoint.com/"&gt;JavatPoint&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-javascript-notes-amp-reference-by-wesbos"&gt;
  &lt;/a&gt;
  - &lt;a href="https://wesbos.com/javascript"&gt;JavaScript Notes &amp;amp; Reference (By Wesbos)&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-study-tonight"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.studytonight.com/"&gt;Study Tonight&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-tutorials-point"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.tutorialspoint.com/index.htm"&gt;Tutorials Point&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-devdocsio"&gt;
  &lt;/a&gt;
  - &lt;a href="https://devdocs.io/"&gt;Devdocs.io&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-mdn-web-docs"&gt;
  &lt;/a&gt;
  - &lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN Web Docs&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-geeks-for-geeks"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.geeksforgeeks.org/"&gt;Geeks For Geeks&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-sololearn"&gt;
  &lt;/a&gt;
  - &lt;a href="https://www.sololearn.com/home"&gt;Sololearn&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#youtube-channels"&gt;
  &lt;/a&gt;
  📺 YouTube Channels
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-freecodecamporg"&gt;
  &lt;/a&gt;
  - FreeCodeCamp.Org
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-javascript-mastery"&gt;
  &lt;/a&gt;
  - JavaScript Mastery
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-florin-pop"&gt;
  &lt;/a&gt;
  - Florin Pop
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-hitesh-choudhary"&gt;
  &lt;/a&gt;
  - Hitesh Choudhary
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-telusko"&gt;
  &lt;/a&gt;
  - Telusko
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-clever-programmer"&gt;
  &lt;/a&gt;
  - Clever Programmer
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-akshay-saini"&gt;
  &lt;/a&gt;
  - Akshay Saini
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-wes-bos"&gt;
  &lt;/a&gt;
  - Wes Bos
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-codewithharry"&gt;
  &lt;/a&gt;
  - CodeWithHarry
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-academind"&gt;
  &lt;/a&gt;
  - Academind
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-traversy-media"&gt;
  &lt;/a&gt;
  - Traversy Media
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-the-net-ninja"&gt;
  &lt;/a&gt;
  - The Net Ninja
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-web-dev-simplified"&gt;
  &lt;/a&gt;
  - Web Dev Simplified
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-dcode"&gt;
  &lt;/a&gt;
  - Dcode
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-learnwebcode"&gt;
  &lt;/a&gt;
  - LearnWebCode
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-dev-ed"&gt;
  &lt;/a&gt;
  - Dev Ed
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-thapa-technical"&gt;
  &lt;/a&gt;
  - Thapa Technical
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-yahoo-baba"&gt;
  &lt;/a&gt;
  - Yahoo Baba
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#ebooks"&gt;
  &lt;/a&gt;
  📚 E-Books
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Eloquent Javascript&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;You Don't Know JS Yet Series&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JavaScript: The Definitive Guide&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JavaScript: The Good Parts&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JavaScript And JQuery&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Speaking JavaScript&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JavaScript For Impatient Programmers&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Effective JavaScript&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JavaScript In Easy Steps&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Learn JavaScript Visually&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;The list in this article is not exhaustive, but it covers some of the best resources to learn JavaScript. By using these resources, you can get to a pretty advanced level, and even get a job offer. For the best results, try to mix them because you can learn something from all of them.&lt;/p&gt;

&lt;p&gt;And the best thing: they are entirely free. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;I've also a Instagram channel the link &lt;a href="https://www.instagram.com/codev_land/"&gt;here&lt;/a&gt; for amazing web development resources as well source code.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>5 mistakes most dev's do when starting out on Linux!</title>
      <author>Nomadev💻🔱</author>
      <pubDate>Wed, 05 Jan 2022 05:42:22 +0000</pubDate>
      <link>https://dev.to/thenomadevel/5-mistakes-most-devs-do-when-starting-out-on-linux-4de5</link>
      <guid>https://dev.to/thenomadevel/5-mistakes-most-devs-do-when-starting-out-on-linux-4de5</guid>
      <description>&lt;p&gt;Hello Beautiful People, Nomadev is back with another blog in this new year. I hope the new year will make your life brighter, I have all the good wishes for you. Thanks for being such constant supporters.&lt;br&gt;
Today we are going to see a bunch of mistakes that Linux beginner makes when they first move to Linux. So let's start with our topic&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cm1ku6eJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641278002933/dAVXiTDGn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cm1ku6eJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641278002933/dAVXiTDGn.gif" alt="start.gif" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-thinking-linux-is-windowsmacos"&gt;
  &lt;/a&gt;
  1. Thinking Linux is Windows/macOS
&lt;/h2&gt;

&lt;p&gt;Linux can do almost all the things that a mac or windows system can do, that's absolutely correct but it does the stuff not in exact same way that you are habitual of doing, for example, drivers on Linux, there is virtually no driver installation apart from the proprietary NVIDIA drivers either your devices drivers are in the Linux kernel and it's supported out of the box or the drivers are not in there and chances are it won't get supported. You can compile some third-party drivers for a few very limited sets of peripherals but generally, your drivers are in the kernel you get newer drivers when you update the kernel and that's the file system will be different and the location of files will also, be different.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2M3gXeAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641278304346/6uVyY5Wk_a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2M3gXeAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641278304346/6uVyY5Wk_a.png" alt="lin.png" width="440" height="330"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#2-getting-hung-up-on-distributions"&gt;
  &lt;/a&gt;
  2. Getting Hung up on distributions
&lt;/h2&gt;

&lt;p&gt;Distribution is basically just a way to package the Linux kernel to some system tools. A graphical desktop manages some drivers basically, a few packages and that's what users generally think when they see. A distro is a look that retains the look and feels of this distribution and what they really want is something that looks like that not specifically the distro itself.&lt;br&gt;
Beginners will tend to install or gravitate towards a specific distribution because of the way it looks and feels. They tend to forget or not know that you can replicate the look and feel on virtually any other distribution Linux is customizable. You can grab the theme and the icons and do that exact look somewhere else what users should really&lt;br&gt;
look for is desktop environments, not distributions when you're a beginner you need to look at a distro that you like you like the way it looks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5I8I5CHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641278957203/yv5EXUwaS.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5I8I5CHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641278957203/yv5EXUwaS.jpeg" alt="distros.jpg" width="770" height="493"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#3-getting-stuck-on-the-default"&gt;
  &lt;/a&gt;
  3. Getting stuck on the default
&lt;/h2&gt;

&lt;p&gt;I often get messages on Twitter telling me oh I used to use this distro or I used to use this desktop but then I couldn't do this and so I moved to another distro entirely like seriously, I had users telling me that they moved distributions because the close button on the windows was on the left instead of on the right seriously LOL and that all comes from the fact that people are used to generally aren't very customizable out of the box you can tweak a few things in mac os or on windows but that's &lt;strong&gt;very very&lt;/strong&gt; limited or you could use third party tools and break your system that's not the case on Linux here you can virtually tweak or change anything without even changing desktop environments.&lt;br&gt;
You have extensions and gnome tweaks and you can really make this thing your own users coming from windows or mac os generally expect things to stay the way they are out of the box and so if something doesn't work for them they will just move house completely on Linux.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L3iBIA-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641279076970/F4EN5foVg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L3iBIA-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641279076970/F4EN5foVg.jpeg" alt="customer.jpg" width="880" height="555"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#4-expecting-previous-software-to-work"&gt;
  &lt;/a&gt;
  4. Expecting Previous software to work
&lt;/h2&gt;

&lt;p&gt;The fourth mistake Linux beginners make is expecting all of their programs to just work on Linux. Linux doesn't run Windows programs or mac programs you wouldn't expect windows programs on a mac, you wouldn't expect mac programs on windows you can't expect windows or mac programs.&lt;br&gt;
On Linux, some of them can work. if you're a professional and if most&lt;br&gt;
if not all of your workflow depends on a specific application you need to look it up beforehand check if it runs on Linux and if it has the whole range of functionality that you would expect if you're an individual and you can learn new alternatives expect to waste some time. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Tysu4Km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641279117923/bhfWHBVxA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Tysu4Km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641279117923/bhfWHBVxA.jpeg" alt="m1.jpg" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#5-following-cli-tutorials-blindly"&gt;
  &lt;/a&gt;
  5. Following CLI tutorials blindly
&lt;/h2&gt;

&lt;p&gt;The fifth mistake Linux beginners make is generally following command line tutorials online completely blindly most tutorials for Linux are written using command line commands and that's because for the author it's way easier than trying to screengrab a capture of every single desktop environment. They are trying to explain how to do things graphically because generally you can do them graphically but it's way more complex than just typing a command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bkYYJe1L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641279326597/PUYa33kdQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bkYYJe1L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641279326597/PUYa33kdQ.png" alt="indian.png" width="500" height="399"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope you liked it, comment down which mistake you have done in the past&lt;br&gt;
 For other such information, make sure to follow me on  &lt;a href="https://twitter.com/thenomadevel"&gt;Twitter&lt;/a&gt; and here also.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/thenomadevel"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4oXBZZGL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638859846607/CmXZ9RBvb.jpeg" alt="Twitter.jpg" width="880" height="418"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;And if you want to appreciate my work you can  &lt;a href="https://www.buymeacoffee.com/nomadevel"&gt;buy me a coffee&lt;/a&gt;, &lt;strong&gt;Your appreciation is my motivation.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/nomadevel"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Vno0upf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637869195331/r4SfPP57h.jpeg" alt="coffee.jfif" width="880" height="441"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;That's my time dev's, see you next time, Happy New Year &amp;amp; Happy Coding&lt;/p&gt;

</description>
      <category>linux</category>
      <category>opensource</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understanding and Crafting HTTP Middlewares in Go</title>
      <author>MacBobby Chibuzor</author>
      <pubDate>Wed, 05 Jan 2022 05:06:02 +0000</pubDate>
      <link>https://dev.to/theghostmac/understanding-and-crafting-http-middlewares-in-go-3183</link>
      <guid>https://dev.to/theghostmac/understanding-and-crafting-http-middlewares-in-go-3183</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;When communication is needed between a client and a server running on different computers, a middleware is implemented.&lt;br&gt;
In this article, the reader will be introduced to Middlewares, their use cases, and how they are crafted in the Go Programming Language.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-http-middlewares"&gt;
  &lt;/a&gt;
  What Are HTTP Middlewares?
&lt;/h2&gt;

&lt;p&gt;To better understand what HTTP Middlewares are, some underlying concepts must be explained.&lt;br&gt;
Assuming a programmer wants two computers to communicate, where one would provide the other with a resource or service. The programmer would quickly build a client/server system to make this happen.&lt;br&gt;
The server waits for the client to request for a resource or service, then forwards the requested resource to the client in response. The requested resource or service may be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authentication—verifying that the client is who it claims to be&lt;/li&gt;
&lt;li&gt;Authorization—determining whether the given client is permitted to access any of the services the server supplies&lt;/li&gt;
&lt;li&gt;Providing services&lt;/li&gt;
&lt;li&gt;Data security—guaranteeing that a client is not able to access data that the client is not permitted to access, preventing data from being stolen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Servers are built to be stateless or stateful. Stateless servers do not concern themselves with the status of client communication, while stateful servers do. &lt;/p&gt;

&lt;p&gt;Middleware is a software entity that hooks one software or enterprise application to another, forming a distributed system. An HTTP request is sent to an API server, which returns an HTTP response to the client. &lt;/p&gt;

&lt;p&gt;Middlewares have a request receiver function to process requests before they reach the handler function. It then processes the handler function, before processing a response and sending it out to the client.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#middleware-use-cases"&gt;
  &lt;/a&gt;
  Middleware Use Cases
&lt;/h2&gt;

&lt;p&gt;The most common use cases are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loggers for logging each and every request hitting the REST API &lt;/li&gt;
&lt;li&gt;Validation of user session, and keeping the communication alive&lt;/li&gt;
&lt;li&gt;User authentication&lt;/li&gt;
&lt;li&gt;Writing custom logic to scrape request data&lt;/li&gt;
&lt;li&gt;Attach properties to responses while serving the client&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#middleware-handlers"&gt;
  &lt;/a&gt;
  Middleware Handlers
&lt;/h2&gt;

&lt;p&gt;In Go, a middleware handler is an &lt;code&gt;http.Handler&lt;/code&gt; that wraps another &lt;code&gt;http.Handler&lt;/code&gt; to do some pre- and/or post-processing of the request. It's called "middleware" because it sits in the middle between the Go web server and the actual handler.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLIxNh0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641358750607/eI3DAYdOz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLIxNh0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641358750607/eI3DAYdOz.png" alt="flow.png" width="880" height="178"&gt;&lt;/a&gt;&lt;br&gt;
A basic middleware handler is written below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; 
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandlerFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Executing middleware before request phase!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="c"&gt;// Pass control back to the handler&lt;/span&gt;
         &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServeHTTP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Executing middleware after response phase!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;mainLogic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="c"&gt;// Business logic goes here&lt;/span&gt;
     &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Executing mainHandler..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"OK"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="c"&gt;// HandlerFunc returns a HTTP Handler&lt;/span&gt;
     &lt;span class="n"&gt;mainLogicHandler&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandlerFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mainLogic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mainLogicHandler&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running the code above in the terminal gives the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run middleware.go

Executing middleware before request phase!
Executing mainHandler...
Executing middleware after response phase!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#logging-middleware-handler"&gt;
  &lt;/a&gt;
  Logging Middleware Handler
&lt;/h2&gt;

&lt;p&gt;To explain how a logging middleware handler works in example use cases, we will build one to execute some functions.&lt;br&gt;
This example creates two middleware handlers: &lt;code&gt;middlewareGreetingsHandler&lt;/code&gt; and &lt;code&gt;middlewareTimeHandler&lt;/code&gt;. The Gorilla Mux router has a &lt;code&gt;HandleFunc( )&lt;/code&gt; method for handling the middleware functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "fmt"
    "log"
    "net/http"
    "os"
    "time"
)

func middlewareGreetingsHandler(w http.ResponseWriter, r *http.Request) {
    w.Write([]byte("Happy New Year, 2022!"))
}

func middlewareTimeHandler(w http.ResponseWriter, r *http.Request) {
    curTime := time.Now().Format(time.Kitchen)
    w.Write([]byte(fmt.Sprintf("the current time is %v", curTime)))
}

func main() {
    addr := os.Getenv("ADDR")

    mux := http.NewServeMux()
    mux.HandleFunc("/v1/greetings", middlewareHelloHandler)
    mux.HandleFunc("/v1/time", middlewareTimeHandler)

    log.Printf("server is listening at %s", addr)
    log.Fatal(http.ListenAndServe(addr, mux))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run this server, set the ADDR environment variable to a free port, and use go run main.go:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;ADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;localhost:8080
go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the server is live, visit &lt;a href="http://localhost:8080/v1/greetings"&gt;http://localhost:8080/v1/greetings&lt;/a&gt; in your browser to see the &lt;code&gt;middlewareGreetingsHandler&lt;/code&gt; response, and &lt;a href="http://localhost:8080/v1/time"&gt;http://localhost:8080/v1/time&lt;/a&gt; to see the &lt;code&gt;middlewareTimeHandler&lt;/code&gt; response. &lt;br&gt;
With this achieved, creating the logging middleware to log all requests made to this server, list the request method, resource path, and how long it took to handle, comes next.&lt;br&gt;
To do so, we will initialize a new struct that implements the &lt;code&gt;ServeHTTP()&lt;/code&gt; method of the &lt;code&gt;http.Handler&lt;/code&gt; interface. The struct will have a field to track the real &lt;code&gt;http.Handler&lt;/code&gt; for process calls.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//Create a request logging middleware handler called Logger
type Logger struct {
    handler http.Handler
}

//ServeHTTP handles the request by passing it to the real handler and logging the request details
func (l *Logger) ServeHTTP(w http.ResponseWriter, r *http.Request) {
    start := time.Now()
    l.handler.ServeHTTP(w, r)
    log.Printf("%s %s %v", r.Method, r.URL.Path, time.Since(start))
}

//NewLogger constructs a new Logger middleware handler
func NewLogger(handlerToWrap http.Handler) *Logger {
    return &amp;amp;Logger{handlerToWrap}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;NewLogger()&lt;/code&gt; takes an &lt;code&gt;http.Handler&lt;/code&gt; to wrap. It then returns a new &lt;code&gt;Logger&lt;/code&gt; instance wrapped around it. Since an &lt;code&gt;http.ServeMux&lt;/code&gt; satisfies the &lt;code&gt;http.Handler&lt;/code&gt; interface, it is possible to wrap an entire mux with the logger middleware. Further, since &lt;code&gt;Logger&lt;/code&gt; implements the &lt;code&gt;ServeHTTP()&lt;/code&gt; method, it also satisfies the &lt;code&gt;http.Handler&lt;/code&gt; interface, so it can be passed to the &lt;code&gt;http.ListenAndServe()&lt;/code&gt; function instead of the mux wrapped.&lt;br&gt;
Finally, change the &lt;code&gt;main()&lt;/code&gt; function to look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func main() {
    addr := os.Getenv("ADDR")

    mux := http.NewServeMux()
    mux.HandleFunc("/v1/greetings", middlewareGreetingsHandler)
    mux.HandleFunc("/v1/time", middlewareTimeHandler)
    //wrap entire mux with logger middleware
    wrappedMux := NewLogger(mux)

    log.Printf("server is listening at %s", addr)
    //use wrappedMux instead of mux as root handler
    log.Fatal(http.ListenAndServe(addr, wrappedMux))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After starting the server and requesting for the APIs again, all requests will be logged to the terminal, despite the resource path requested.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-gorillas-raw-handlers-endraw-middleware-for-logging"&gt;
  &lt;/a&gt;
  Using Gorilla's &lt;code&gt;Handlers&lt;/code&gt; middleware for Logging
&lt;/h2&gt;

&lt;p&gt;The Gorilla Mux router has a &lt;code&gt;Handlers&lt;/code&gt; package that provides various kinds of middleware for common tasks including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;LoggingHandler&lt;/code&gt;: For logging in Apache Common Log Format &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CompressionHandler&lt;/code&gt;: For zipping the responses &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;RecoveryHandler&lt;/code&gt;: For recovering from unexpected panics &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below, we use the &lt;code&gt;LoggingHandler&lt;/code&gt; to perform API-wide logging. &lt;br&gt;
First, install this library using &lt;code&gt;go get&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go get &lt;span class="s2"&gt;"github.com/gorilla/handlers"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, import and use it in a go file &lt;code&gt;loggingMiddleware.go&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main 
import (
    "github.com/gorilla/handlers"
    "github.com/gorilla/mux"


    "log"
    "os"
    "net/http"
)

func mainLogic(w http.ResponseWriter, r *http.Request) {
     log.Println("Processing request!")
     w.Write([]byte("OK"))
     log.Println("Finished processing request")
 } 

func main() {
     r := mux.NewRouter()
     r.HandleFunc("/", mainLogic)     loggedRouter := handlers.LoggingHandler(os.Stdout, r)
     http.ListenAndServe(":8080", loggedRouter)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go run loggingMiddleware.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Navigating to &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; in the browser will show the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;2022/01/05 10:51:44 Processing request!
2022/01/01 10:51:44 Finished processing request
127.0.0.1 - - &lt;span class="o"&gt;[&lt;/span&gt;05/January/2022:10:51:44 +0530] &lt;span class="s2"&gt;"GET / HTTP/1.1"&lt;/span&gt; 
200 2 127.0.0.1 - - &lt;span class="o"&gt;[&lt;/span&gt;05/January/2017:10:51:44 +0530] &lt;span class="s2"&gt;"GET /favicon.ico HTTP/1.1"&lt;/span&gt; 404 19
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This example introduces the use of Gorilla Mux &lt;code&gt;Handlers&lt;/code&gt; package and nothing more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, the reader is introduced to Middlewares. A logging middleware was built from scratch for easy understanding. Next, a use case was implemented in an API. Afterwards, a simpler solution to crafting Middlewares in Go (i.e. the Gorilla Mux Handlers) was introduced and implemented in an example.&lt;br&gt;
In a future article, Crafting RPC Servers and Clients in Go will be explained.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-name-is-macbobby-chibuzor-and-i-am-a-contract-technical-writer-for-wevolvercom-and-reachext-k-k-i-have-over-7-years-experience-in-writing-commercially-with-2-years-in-software-i-write-about-software-development-security-ml-iot-and-more-recently-blockchain-leave-me-a-message-if-you-need-my-services-theghostmacgmailcom"&gt;
  &lt;/a&gt;
  My name is MacBobby Chibuzor and I am a Contract Technical Writer for Wevolver.com, and ReachExt K. K. I have over 7 years experience in writing commercially, with 2 years in Software. I write about Software Development, Security, ML, IoT, and more recently, Blockchain. Leave me a message if you need my services: &lt;a href="mailto:theghostmac@gmail.com"&gt;theghostmac@gmail.com&lt;/a&gt;.
&lt;/h2&gt;

</description>
      <category>webdev</category>
      <category>go</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
