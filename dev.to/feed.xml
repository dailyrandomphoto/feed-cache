<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I made this personal blogging platform - The Chaotic</title>
      <author>Himanshu</author>
      <pubDate>Thu, 23 Sep 2021 07:11:40 +0000</pubDate>
      <link>https://dev.to/hima_khaitan/i-made-this-personal-blogging-platform-the-chaotic-id6</link>
      <guid>https://dev.to/hima_khaitan/i-made-this-personal-blogging-platform-the-chaotic-id6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  Idea
&lt;/h3&gt;

&lt;p&gt;I myself is trying to build a community where I can interact with people who have same interests that of mine. Apart from a discord server (&lt;a href="https://discord.gg/JuVbaMHY2W"&gt;The Youth&lt;/a&gt;) it appeared to me that blogging can be a great medium to interact with the people around with same interests and that's were the idea came from.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_63yxKsx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5v6uxy7gvx7fc9bvn8yh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_63yxKsx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5v6uxy7gvx7fc9bvn8yh.png" alt="The Chaotic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technology-used"&gt;
  &lt;/a&gt;
  Technology Used
&lt;/h3&gt;

&lt;p&gt;As a developer I myself like using MERN stack for my Projects. Apart from MERN I have used Redux for the APP wide state management. &lt;/p&gt;

&lt;p&gt;The project contains &lt;code&gt;Backend&lt;/code&gt; folder with a NodeJS backend. &lt;code&gt;Frontend&lt;/code&gt; folder contains a React APP. Along with this I have made a &lt;code&gt;Template&lt;/code&gt; folder which contains website design using HTML and CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z31NYVHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2b47hn0ayltlssk57hut.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z31NYVHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2b47hn0ayltlssk57hut.png" alt="The Chaotic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;üíª Client Side Rendering with ReactJS&lt;/li&gt;
&lt;li&gt;üåê Popular Blogs&lt;/li&gt;
&lt;li&gt;üå± Like and Comments&lt;/li&gt;
&lt;li&gt;üôÜ‚Äç‚ôÇÔ∏è Advanced Admin Panel&lt;/li&gt;
&lt;li&gt;ü•Ω Category Creation&lt;/li&gt;
&lt;li&gt;üë® Author Creation&lt;/li&gt;
&lt;li&gt;üì∞ Newsletters&lt;/li&gt;
&lt;li&gt;üß£ Tags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rDjw8TNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0l8altxj7fgyovmy001.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDjw8TNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0l8altxj7fgyovmy001.png" alt="The Chaotic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/himakhaitan"&gt;
        himakhaitan
      &lt;/a&gt; / &lt;a href="https://github.com/himakhaitan/TheChaotic"&gt;
        TheChaotic
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Chaotic is a Personal Blog Website üíª made using MERN Stack. The theme of the website is set to aesthetic as well as inspiringüå±. To be more precise, the website is set to target Youth Audience as a whole. üß≤
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;

  &lt;br&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/Logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Idf6O9aK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/Logo.png" width="200"&gt;&lt;/a&gt;
  &lt;br&gt;  
  The Chaotic - Blog Website
  &lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;
&lt;a href="https://www.mongodb.com/" rel="nofollow"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IkxXKTiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/mongodb.png" width="100"&gt;
&lt;/a&gt;¬†
&lt;a href="https://github.com/himakhaitan/TheChaotic"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59oEFpU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/redux.png" width="60"&gt;
&lt;/a&gt;¬†
&lt;a href="https://expressjs.com/" rel="nofollow"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6n_wHbQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/expressjs.png" width="100"&gt;
&lt;/a&gt;
¬†
&lt;a href="https://reactjs.org/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vIyOZy5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/reactjs.png" width="60"&gt;&lt;/a&gt;
  ¬†
&lt;a href="https://nodejs.org/en/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--psITFUtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/nodejs.png" width="60"&gt;&lt;/a&gt;
¬†¬†
&lt;/p&gt;

&lt;h4&gt;
A Personal Blog Website Setup using &lt;a href="https://www.mongodb.com/mern-stack" rel="nofollow"&gt;MERN Stack&lt;/a&gt;.&lt;/h4&gt;
&lt;p&gt;
  
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/80a1153c429992993a5fc1d8009c2f9ed74f95263366dc21a2daec8fb25077c9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d7570253230746f253230646174652d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/80a1153c429992993a5fc1d8009c2f9ed74f95263366dc21a2daec8fb25077c9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d7570253230746f253230646174652d627269676874677265656e2e737667"&gt;&lt;/a&gt;
  
  &lt;a href="https://github.com/himakhaitan/TheChaotic/issues"&gt;&lt;img src="https://camo.githubusercontent.com/d9ac4d4824e2b7488101f456174c06f12daa873dc05ff0d5b3c6b18da341c3dc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616b68616974616e2f5468654368616f7469632e737667"&gt;&lt;/a&gt;
  &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/45b4ffbd594af47fe09a3432f9f8e122c6518aa6352b4ce453a1a2563da2905c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://github.com/himakhaitan/TheChaotic#description"&gt;Description&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/himakhaitan/TheChaotic#screenshot"&gt;Screenshot&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/himakhaitan/TheChaotic#installation-and-setup"&gt;Installation and Setup&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/himakhaitan/TheChaotic#dependcies"&gt;Dependencies&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/himakhaitan/TheChaotic#license"&gt;License&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/himakhaitan/TheChaotic#contribution"&gt;Contribution&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;h2&gt;
Screenshot&lt;/h2&gt;
&lt;p&gt;Below are some of the screenshots of UI from The Chaotic&lt;/p&gt;
&lt;h3&gt;
Home Page&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tadTdgXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Contact Page&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QQgI3s61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Category Pages&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot4.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e7ZqoAi6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DIwqGuV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
About Pages&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2k8KNFkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation and Setup&lt;/h2&gt;
&lt;h2&gt;
Dependencies&lt;/h2&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;This project uses an &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
&lt;h2&gt;
Contribution&lt;/h2&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/himakhaitan/TheChaotic"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#running-the-project"&gt;
  &lt;/a&gt;
  Running the Project
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Clone the Repo &lt;code&gt;git clone https://github.com/himakhaitan/TheChaotic.git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Configure &lt;code&gt;.env&lt;/code&gt; file as &lt;code&gt;sample.env&lt;/code&gt; for project to run properly.&lt;/li&gt;
&lt;li&gt;cd into &lt;code&gt;Backend&lt;/code&gt; and run &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm run server&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;cd into &lt;code&gt;Frontent&lt;/code&gt; and run &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm run start&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eLoB4J10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvvabqkdqw8cvpp2m8v0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eLoB4J10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvvabqkdqw8cvpp2m8v0.png" alt="The Chaotic"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#suggestions-and-feedbacks-welcome"&gt;
  &lt;/a&gt;
  Suggestions and Feedbacks Welcome!
&lt;/h3&gt;

&lt;p&gt;The Chaotic is at its initial stages at the the moment and need lots of advancements. I would highly appreciate any feedback, suggestions and questions you would like to provide. What features would you like to see? What seems unnecessary or what's causing difficulties?&lt;/p&gt;

&lt;p&gt;Thank you for your time and I await to see your suggestions soon. Until then, have a nice day!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#for-any-collaboration-projects-do-reach-me-through-discord-server-here"&gt;
  &lt;/a&gt;
  For any Collaboration projects do reach me through Discord Server &lt;a href="https://discord.gg/JuVbaMHY2W"&gt;here&lt;/a&gt;
&lt;/h4&gt;

</description>
      <category>webdev</category>
      <category>showdev</category>
      <category>githunt</category>
      <category>javascript</category>
    </item>
    <item>
      <title>JavaScript Cookies</title>
      <author>Rutuja Chandgude</author>
      <pubDate>Thu, 23 Sep 2021 07:01:06 +0000</pubDate>
      <link>https://dev.to/rutuchandgude/javascript-cookies-42ba</link>
      <guid>https://dev.to/rutuchandgude/javascript-cookies-42ba</guid>
      <description>&lt;p&gt;What are cookies?&lt;/p&gt;

&lt;p&gt;Cookies are data,stored in small text files,on your computer.&lt;/p&gt;

&lt;p&gt;When a web server has sent a web page to a browser, the connection is shut down, and the server forgets everything about the user.&lt;/p&gt;

&lt;p&gt;Cookies were invented to solve the problem "how to remember information about the user":&lt;/p&gt;

&lt;p&gt;‚Ä¢ When a user visits a web page, his/her name can be stored in &lt;br&gt;
  a cookie.&lt;br&gt;
‚Ä¢ Next time the user visits the page, the cookie "remembers" &lt;br&gt;
  his/her name.&lt;br&gt;
Cookies are saved in name-value pairs like:&lt;/p&gt;

&lt;p&gt;username = John Doe&lt;/p&gt;

&lt;p&gt;When a browser requests a web page from a server, cookies belonging to the page are added to the request. This way the server gets the necessary data to "remember" information about users.&lt;/p&gt;

&lt;p&gt;NOTE: None of the examples below will work if your browser has local cookies support turned off.&lt;/p&gt;

&lt;p&gt;Create a Cookie with JavaScript:&lt;br&gt;
JavaScript can create, read, and delete cookies with the document.cookie property.&lt;/p&gt;

&lt;p&gt;With JavaScript, a cookie can be created like this:&lt;/p&gt;

&lt;p&gt;document.cookie = "username=John Doe";&lt;/p&gt;

&lt;p&gt;You can also add an expiry date (in UTC time). By default, the cookie is deleted when the browser is closed:&lt;/p&gt;

&lt;p&gt;document.cookie = "username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC";&lt;/p&gt;

&lt;p&gt;With a path parameter, you can tell the browser what path the cookie belongs to. By default, the cookie belongs to the current page.&lt;/p&gt;

&lt;p&gt;document.cookie = "username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/";&lt;/p&gt;

&lt;p&gt;‚Ä¢ Read a Cookie with JavaScript:&lt;/p&gt;

&lt;p&gt;With JavaScript, cookies can be read like this:&lt;/p&gt;

&lt;p&gt;let x = document.cookie;&lt;/p&gt;

&lt;p&gt;document.cookie will return all cookies in one string much like: cookie1=value; cookie2=value; cookie3=value;&lt;/p&gt;

&lt;p&gt;‚Ä¢ Change a Cookie with JavaScript:&lt;br&gt;
With JavaScript, you can change a cookie the same way as you create it:&lt;/p&gt;

&lt;p&gt;document.cookie = "username=John Smith; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/";&lt;/p&gt;

&lt;p&gt;The old cookie is overwritten.&lt;/p&gt;

&lt;p&gt;‚Ä¢ Delete a Cookie with JavaScript:&lt;/p&gt;

&lt;p&gt;Deleting a cookie is very simple.&lt;/p&gt;

&lt;p&gt;You don't have to specify a cookie value when you delete a cookie.&lt;/p&gt;

&lt;p&gt;Just set the expires parameter to a past date:&lt;/p&gt;

&lt;p&gt;document.cookie = "username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";&lt;/p&gt;

&lt;p&gt;NOTE:You should define the cookie path to ensure that you delete the right cookie.&lt;br&gt;
Some browsers will not let you delete a cookie if you don't specify the path.&lt;/p&gt;

&lt;p&gt;‚Ä¢ The Cookie String:&lt;/p&gt;

&lt;p&gt;The document.cookie property looks like a normal text string. But it is not.&lt;/p&gt;

&lt;p&gt;Even if you write a whole cookie string to document.cookie, when you read it out again, you can only see the name-value pair of it.&lt;/p&gt;

&lt;p&gt;If you set a new cookie, older cookies are not overwritten. The new cookie is added to document.cookie, so if you read document.cookie again you will get something like:&lt;/p&gt;

&lt;p&gt;cookie1 = value; cookie2 = value;&lt;/p&gt;

&lt;p&gt;JavaScript Cookie Example:&lt;/p&gt;

&lt;p&gt;In the example to follow, we will create a cookie that stores the name of a visitor.&lt;/p&gt;

&lt;p&gt;The first time a visitor arrives to the web page, he/she will be asked to fill in his/her name. The name is then stored in a cookie.&lt;/p&gt;

&lt;p&gt;The next time the visitor arrives at the same page, he/she will get a welcome message.&lt;/p&gt;

&lt;p&gt;For the example we will create 3 JavaScript functions:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A function to set a cookie value

A function to get a cookie value

A function to check a cookie value
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;‚Ä¢ A function to set a cookie:&lt;/p&gt;

&lt;p&gt;function setCookie(cname, cvalue, exdays) {&lt;br&gt;
  const d = new Date();&lt;br&gt;
  d.setTime(d.getTime() + (exdays*24*60*60*1000));&lt;br&gt;
  let expires = "expires="+ d.toUTCString();&lt;br&gt;
  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;‚Ä¢ A function to get a cookie:&lt;/p&gt;

&lt;p&gt;function getCookie(cname) {&lt;br&gt;
  let name = cname + "=";&lt;br&gt;
  let decodedCookie = decodeURIComponent(document.cookie);&lt;br&gt;
  let ca = decodedCookie.split(';');&lt;br&gt;
  for(let i = 0; i &amp;lt;ca.length; i++) {&lt;br&gt;
    let c = ca[i];&lt;br&gt;
    while (c.charAt(0) == ' ') {&lt;br&gt;
      c = c.substring(1);&lt;br&gt;
    }&lt;br&gt;
    if (c.indexOf(name) == 0) {&lt;br&gt;
      return c.substring(name.length, c.length);&lt;br&gt;
    }&lt;br&gt;
  }&lt;br&gt;
  return "";&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;‚Ä¢ A Function to Check a Cookie:&lt;/p&gt;

&lt;p&gt;function checkCookie() {&lt;br&gt;
  let username = getCookie("username");&lt;br&gt;
  if (username != "") {&lt;br&gt;
   alert("Welcome again " + username);&lt;br&gt;
  } else {&lt;br&gt;
    username = prompt("Please enter your name:", "");&lt;br&gt;
    if (username != "" &amp;amp;&amp;amp; username != null) {&lt;br&gt;
      setCookie("username", username, 365);&lt;br&gt;
    }&lt;br&gt;
  }&lt;br&gt;
}&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Chatwoot: An open source customer engagement tool that challenges Freshworks, Zendesk and Intercom</title>
      <author>Muthu Annamalai Venkatachalam</author>
      <pubDate>Thu, 23 Sep 2021 06:40:04 +0000</pubDate>
      <link>https://dev.to/muthuannamalai12/chatwoot-an-open-source-customer-engagement-tool-that-challenges-freshworks-zendesk-and-intercom-2ce3</link>
      <guid>https://dev.to/muthuannamalai12/chatwoot-an-open-source-customer-engagement-tool-that-challenges-freshworks-zendesk-and-intercom-2ce3</guid>
      <description>&lt;p&gt;Most communications today are carried out using open source customer engagement platforms. Shoppers, businesses, and consumers increasingly use technology as they interact, do business, and shop online. During the pandemic, customers flocked to online channels in droves, driving a digital transformation effort across the industry. To ensure that issues are solved as soon as possible, firms sometimes emphasize communication tools and customer engagement programs.&lt;/p&gt;

&lt;p&gt;Chatwoot is one such customer engagement platform that not only focused on building relations with customers through live-chat, automated bots but collaborating with agents in different departments. If you are looking for an open source alternative to Zendesk, Salesforce's Service Cloud, Freshworks, or Intercom, then Chatwoot is your go-to option as a client engagement platform.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#chatwoot-an-open-source-customer-engagement-platform"&gt;
  &lt;/a&gt;
  Chatwoot: An open source customer engagement platform
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4NkxP75j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nu5eouxbskb1j1rwoizr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4NkxP75j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nu5eouxbskb1j1rwoizr.png" alt="chatwoot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Founded in 2017, Chatwoot was developed by Pranav Raj S and other co-founders as a proprietary tool for customer support on social channels. While Chatwoot in its original form didn't quite start as intended, the scenario changed after stringent privacy regulations adopted by countries. The team decided to release the system as open source in 2019 before creating a new company and also made it to YC's winter 2021 season.&lt;/p&gt;

&lt;p&gt;With the Chatwoot platform, businesses can connect their social networks, email and messaging apps - like Facebook, Twitter, and WhatsApp - in a central inbox. From here, every member of the company has access to all previous communications and can pick up where the last one left off. Additionally, Chatwoot provides you with a live chat tool, native mobile apps, and pre-built integrations with third-party platforms, such as Shopify, Stripe, and chatbot tools such as Rasa and DialogFlow. Moreover, you can share an inbox for collaboration purposes, utilize live chat tools, and integrate your Calendly, Slack, or FullContact accounts with Chatwoot to ensure efficient workarounds.&lt;/p&gt;

&lt;p&gt;Moreover, Chatwoot‚Äôs API makes it possible for customers to build their own communication channels. Chatwoot, as an open source CRM platform, ensures that the community stands beside them. With investments coming from Lambda School‚Äôs CEO, Austen Allred, and a $1.6Mn seed funding via Goat Capital, Y Combinator, Uncorrelated Ventures, and Hack Venture Capital, Chatwoot has raised bars high in the customer engagement field.&lt;/p&gt;

&lt;p&gt;Chatwoot has now expanded its user base via open source technology and businesses of all sizes can access and use solutions, regardless of their size, without having to be concerned about privacy issues. Chatwoot's features and add-ons are competitive with those offered by Zendesk and Salesforce.&lt;/p&gt;

&lt;p&gt;However, Chatwoot might have rivals in the field. YC fellow Papercups claims to be an "open source" alternative to Intercom, although its current focus seems to be on live chat. As for Chatwoot, it supports most of the channels customers would like to stay in touch with a business through, including Facebook, Twitter, WhatsApp, Instagram, and email. Businesses can even create customized channels through an API, ensuring enough space for them to customize the workflow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aviyel.com/post/805/chatwoot-an-open-source-customer-engagement-tool-that-challenges-freshworks-zendesk-and-intercom"&gt;More Reading‚Ä¶&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>opensource</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>HTML tags | thead</title>
      <author>Carlos Espada</author>
      <pubDate>Thu, 23 Sep 2021 06:05:46 +0000</pubDate>
      <link>https://dev.to/carlosespada/html-tags-thead-5fk8</link>
      <guid>https://dev.to/carlosespada/html-tags-thead-5fk8</guid>
      <description>&lt;p&gt;It is used to &lt;strong&gt;define the set of rows that make up the header of a table&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It has no attributes&lt;/strong&gt; other than global ones, so to define presentation aspects, CSS properties such as &lt;code&gt;background-color&lt;/code&gt;, &lt;code&gt;text-align&lt;/code&gt; or &lt;code&gt;vertical-align&lt;/code&gt; will be used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Must appear after&lt;/strong&gt; &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt; elements, &lt;strong&gt;but before&lt;/strong&gt; any &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;Browsers can use &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; to allow scrolling of the body of the table independently of the header and footer. Similarly, when doing CSS for printing and if the table is spread across multiple pages, these elements can allow both the header and footer to appear repeated at the beginning and end of each printed page.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; together also serve to provide useful semantic information used when rendering for screen or printer, as well as to improve accessibility.&lt;/p&gt;

&lt;p&gt;Has an &lt;strong&gt;implicit ARIA role&lt;/strong&gt; &lt;code&gt;rowgroup&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type: &lt;em&gt;table-header-group&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Self-closing: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Semantic value: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/tags/tag_thead.asp"&gt;Definition&lt;/a&gt; | &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_tbody"&gt;Example&lt;/a&gt; | &lt;a href="https://caniuse.com/mdn-html_elements_thead"&gt;Support&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tags</category>
      <category>thead</category>
    </item>
    <item>
      <title>Windows'ta SSL Sertifikasƒ± Olu≈üturma</title>
      <author>Turan Kƒ±lƒ±√ß</author>
      <pubDate>Thu, 23 Sep 2021 05:48:37 +0000</pubDate>
      <link>https://dev.to/aciklab/windows-ta-ssl-sertifikasi-olusturma-44nl</link>
      <guid>https://dev.to/aciklab/windows-ta-ssl-sertifikasi-olusturma-44nl</guid>
      <description>&lt;p&gt;Merhabalar, bu yazƒ±mƒ±zda Windows makinenize nasƒ±l manuel olarak SSL sertifikasƒ± ekleneceƒüinden bahsedeceƒüiz. Hadi ba≈ülayalƒ±m :)&lt;/p&gt;

&lt;p&gt;ƒ∞lk olarak &lt;strong&gt;Ba≈ülat&lt;/strong&gt; men√ºs√ºnden &lt;strong&gt;Run&lt;/strong&gt; se√ßilir.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1AUsMrF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jri4k83xqonczib7bbhq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1AUsMrF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jri4k83xqonczib7bbhq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A√ßƒ±lan pencerede "mmc" komutu √ßalƒ±≈ütƒ±rƒ±lƒ±r. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mA23fPiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvlk2hxyo61fxg67u3lx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mA23fPiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvlk2hxyo61fxg67u3lx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kar≈üƒ±mƒ±za gelen ekranda sol yukarƒ±daki &lt;strong&gt;File&lt;/strong&gt; sekmesinden &lt;strong&gt;Add/Remove Snap-in&lt;/strong&gt; se√ßeneƒüi se√ßilir.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ae0r9qQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9781gqobw6qosocrpq0x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ae0r9qQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9781gqobw6qosocrpq0x.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A√ßƒ±lan pencerede &lt;strong&gt;Certificates&lt;/strong&gt; se√ßilir ve &lt;strong&gt;Add&amp;gt;&lt;/strong&gt; butonuna tƒ±klanƒ±r.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVG2eOpK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfva1uvovvicyls41nx4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVG2eOpK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfva1uvovvicyls41nx4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Certificates snap-in penceresi √ºzerinde ""Computer Account** se√ßeneƒüi i≈üaretlenir ve &lt;strong&gt;NEXT&lt;/strong&gt; butonuna basƒ±lƒ±r.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FoArc9xc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mft1acuv8mg1e2r2s8f3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FoArc9xc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mft1acuv8mg1e2r2s8f3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sonraki adƒ±mda direkt &lt;strong&gt;Finish&lt;/strong&gt; butonuna basƒ±lƒ±r.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_0doN0QV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4tpdiyofspa2ugszpb7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_0doN0QV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4tpdiyofspa2ugszpb7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tekrardan Add or Remove ekranƒ±na d√∂n√ºld√ºƒü√ºnde &lt;strong&gt;OK&lt;/strong&gt; denilerek pencere kapatƒ±lƒ±r.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jSg7yuq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wgikonjutbh22dsro87n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSg7yuq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wgikonjutbh22dsro87n.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sonrasƒ±nda ilk pencerede &lt;strong&gt;Certificates &amp;gt; Personal &amp;gt; Certificates&lt;/strong&gt; dizinine saƒü tƒ±klanƒ±lƒ±r ve &lt;strong&gt;All Tasks &amp;gt; Request New Certificate&lt;/strong&gt; se√ßeneƒüi se√ßilir.&lt;br&gt;
A√ßƒ±lan sertifika kayƒ±t penceresinde &lt;strong&gt;NEXT&lt;/strong&gt; butonu ile devam edilir.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iWuXyaZb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2sc7k6njcbxphj2r1pn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iWuXyaZb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2sc7k6njcbxphj2r1pn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Devamƒ±nda tekrardan &lt;strong&gt;NEXT&lt;/strong&gt; butonu ile devam edilir.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JkWkbkGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vt1fp2ivo8leg5uf0bo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkWkbkGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vt1fp2ivo8leg5uf0bo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bir s√ºre bekledikten sonra a√ßƒ±lan pencerede &lt;strong&gt;Domain Controller&lt;/strong&gt; se√ßeneƒüi i≈üaretlenir. ve &lt;strong&gt;ENROLL&lt;/strong&gt; butonuna basƒ±lƒ±r.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N5UGq59x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12cplaq6zcn1lrigsvnc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N5UGq59x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12cplaq6zcn1lrigsvnc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GDFn69DB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmd6sts2h7qiuct8n6w2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GDFn69DB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmd6sts2h7qiuct8n6w2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3i2JFECh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dv1gja7o5ggkdmtpis5p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3i2JFECh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dv1gja7o5ggkdmtpis5p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finish butonu ile sertifika kayƒ±t i≈ülemi bitirilir. &lt;br&gt;
Artƒ±k Windows sunucunuz bir sertifikaya sahip.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Becoming a Better Software Developer: A Beginner's Guide</title>
      <author>Christopher Glikpo</author>
      <pubDate>Thu, 23 Sep 2021 05:30:20 +0000</pubDate>
      <link>https://dev.to/cglikpo/becoming-a-better-software-developer-a-beginner-s-guide-4h4f</link>
      <guid>https://dev.to/cglikpo/becoming-a-better-software-developer-a-beginner-s-guide-4h4f</guid>
      <description>&lt;p&gt;Being a competent software developer entails more than simply coding; it also entails finding the most effective and efficient solutions to issues. Algorithms, unit testing, and time-space complexity analysis can all help with this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#software-engineer"&gt;
  &lt;/a&gt;
  Software Engineer
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Software_engineering"&gt;software engineer&lt;/a&gt; is a person who applies the principles of software engineering to design, develop, maintain, test, and evaluate computer software. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-principles-of-software-engineering"&gt;
  &lt;/a&gt;
  Basic principles of software engineering
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Manage using a phased life-cycle plan.&lt;/li&gt;
&lt;li&gt;Perform continuous validation.&lt;/li&gt;
&lt;li&gt;Maintain disciplined product control.&lt;/li&gt;
&lt;li&gt;Use modern programming practices.&lt;/li&gt;
&lt;li&gt;Maintain clear accountability for results.&lt;/li&gt;
&lt;li&gt;Use better and fewer people.&lt;/li&gt;
&lt;li&gt;Maintain a commitment to improve the process.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#software-development-life-cycle-sdlc"&gt;
  &lt;/a&gt;
  Software Development Life Cycle (SDLC)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://phoenixnap.com/blog/software-development-life-cycle#:~:text=Software%20Development%20Life%20Cycle%20is,%2C%20Test%2C%20Deploy%2C%20Maintain.&amp;amp;text=SDLC%20is%20a%20way%20to%20measure%20and%20improve%20the%20development%20process."&gt;Software Development Life Cycle&lt;/a&gt; is the application of standard business practices to building software applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-stages-of-sdlc-include"&gt;
  &lt;/a&gt;
  The stages of SDLC include:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Feasible study&lt;/li&gt;
&lt;li&gt;Requirements analysis and specification&lt;/li&gt;
&lt;li&gt;Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Maintenance&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-apply-these-skills"&gt;
  &lt;/a&gt;
  How to apply these skills
&lt;/h2&gt;

&lt;p&gt;We won't go into great depth, but you'll get a good idea. We'll go through the goals of each step as well as the activities and tasks that must be completed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-feasibility-study-mean"&gt;
  &lt;/a&gt;
  What Does Feasibility Study Mean?
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://www.techopedia.com/definition/19297/feasibility-study"&gt;feasibility study&lt;/a&gt; is a study, usually done by engineers, that establishes whether conditions are right to implement a particular project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aim-of-feasibility-study"&gt;
  &lt;/a&gt;
  Aim of Feasibility Study
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;aim&lt;/code&gt; of this stage is to determine whelther the product is financially worthwhile and technically feasible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#activities"&gt;
  &lt;/a&gt;
  ACTIVITIES:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Understand the problem&lt;/li&gt;
&lt;li&gt;Plan out different solutions&lt;/li&gt;
&lt;li&gt;Perform a financial analysis(cost &amp;amp; benefit)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#software-requirement"&gt;
  &lt;/a&gt;
  Software Requirement
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.guru99.com/learn-software-requirements-analysis-with-case-study.html"&gt;Software requirement&lt;/a&gt; is a functional or non-functional need to be implemented in the system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirement-analysis-and-specification"&gt;
  &lt;/a&gt;
  Requirement analysis and specification
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;aim&lt;/code&gt; of this stage is to understand the exact requirements of the customer and document them properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#activities"&gt;
  &lt;/a&gt;
  ACTIVITIES:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Collect all the related data from the customer through interviews and discussions to clearly understand what the customer really wants. Ensure correctness, consistency and unambiguity in the requirements.&lt;/li&gt;
&lt;li&gt;Organise the requirements in a &lt;a href="https://en.wikipedia.org/wiki/Software_requirements_specification"&gt;Software Requirements Specification&lt;/a&gt; document.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#design"&gt;
  &lt;/a&gt;
  Design
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;aim&lt;/code&gt; of design phase is to transform requirements specification in a form suitable for implementation in some programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#activities"&gt;
  &lt;/a&gt;
  ACTIVITIES:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Decompose the system into modules&lt;/li&gt;
&lt;li&gt;Represent invocation relationships between modules&lt;/li&gt;
&lt;li&gt;Different modules are designed in greater detail. For example, data structures and algorithms for each module are designed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;aim&lt;/code&gt; of this stage is to code and test the modules designed in the previous stage. The end product of implementation phase is a set of program modules that have been tested individually.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#activities"&gt;
  &lt;/a&gt;
  ACTIVITIES:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Each module of design is coded and each module is unit tested. The purpose of &lt;a href="https://en.wikipedia.org/wiki/Unit_testing"&gt;unit testing&lt;/a&gt; is to test if individual modules work correctly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;aim&lt;/code&gt; of this stage is to integrate different modules in a planned manner.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#activities"&gt;
  &lt;/a&gt;
  ACTIVITIES:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Each integration step the partially integrated system is tested.&lt;/li&gt;
&lt;li&gt;After all the modules have been successfully integrated and tested, system testing is carried out. The goal of system testing is to ensure that the developed system functions according to its requirements specified in the SRS document.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#maintenance"&gt;
  &lt;/a&gt;
  Maintenance
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;aim&lt;/code&gt; of this stage is to enhance or maintain the provided service through the product. The maintenance of any software product requires more effort than to develop the product itself. Typically, development effort to maintenance effort ratio is 2:3.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#activities"&gt;
  &lt;/a&gt;
  ACTIVITIES:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Making appropriate changes to prevent the occurence of errors&lt;/li&gt;
&lt;li&gt;Correct errors which were not discovered during the product development phase.&lt;/li&gt;
&lt;li&gt;Improve implementation of the system&lt;/li&gt;
&lt;li&gt;Enchance functionalities of the system&lt;/li&gt;
&lt;li&gt;Port software to new environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The Software Development Life Cycle has far too many steps to be covered in a beginner's handbook. I've concentrated on the Software Development Life Cycle since it provides a framework for creating software. The first step in becoming a better software developer is to follow an SDLC. It makes a significant difference in terms of time, expense, and effort, and this is what distinguishes the novice from the expert.&lt;/p&gt;

&lt;p&gt;If you like my work, please consider&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/cglikpo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c23TxQOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jm11knj7d8zwcvo150q2.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;br&gt;
so that I can bring more projects, more articles for you&lt;/p&gt;

&lt;p&gt;If you want to learn more about Web Development, feel free to &lt;a href="https://www.youtube.com/c/ChristopherGlikpo"&gt;follow me on Youtube!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>development</category>
    </item>
    <item>
      <title>Awesome Button Hover Effects Using Pure HTML &amp; CSS</title>
      <author>Technical Vandar</author>
      <pubDate>Thu, 23 Sep 2021 05:18:57 +0000</pubDate>
      <link>https://dev.to/technicalvandar885/awesome-button-hover-effects-using-pure-html-css-204c</link>
      <guid>https://dev.to/technicalvandar885/awesome-button-hover-effects-using-pure-html-css-204c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code:
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML CODE:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Button With Awesome Hover Effect&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Hover Me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Hover Me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Hover Me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Hover Me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS CODE:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;550&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0e95BF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#0e95BF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt; &lt;span class="n"&gt;ease-in&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;#0e95BF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt; &lt;span class="m"&gt;#0e95BF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="m"&gt;#0e95BF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;#0e95BF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#find-me-on"&gt;
  &lt;/a&gt;
  Find Me On:
&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/technicalvandar"&gt;Facebook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/technicalvandar"&gt;Youtube&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/Technical-Vandar-885/"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>button</category>
      <category>hover</category>
    </item>
    <item>
      <title>5 Habits of Great Software Development Teams</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Thu, 23 Sep 2021 05:06:22 +0000</pubDate>
      <link>https://dev.to/unitybuddy/5-habits-of-great-software-development-teams-494i</link>
      <guid>https://dev.to/unitybuddy/5-habits-of-great-software-development-teams-494i</guid>
      <description>&lt;p&gt;Hello, buddies! Most people start out with the goal of creating &lt;em&gt;great products&lt;/em&gt; but forget to focus on building the &lt;em&gt;great team&lt;/em&gt; they need to successfully execute. Starting with a strong team is how you set yourself up for success. Great teams are the foundation of a successful company. Like small independent startups, they drive innovation from the inside. They are productive, challenging, and fun to work in üòÑ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KcKLEiO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628316852024/Om11Dorfj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KcKLEiO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628316852024/Om11Dorfj.gif" alt="gif 2.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But the thing is, making a great software development team is hard. Highly talented people are not enough. So, what makes a Great Team? Scroll down!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-common-goals"&gt;
  &lt;/a&gt;
  1. Common Goals üö©
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oWggB19e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319257223/PwTVD0vC5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oWggB19e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319257223/PwTVD0vC5.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Having a set of clear and achievable goals is critical for any team. Before focusing on anything else, ensure that everyone knows what they are aiming for and why. Without this, they will lose their way and become demotivated.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Great teams avoid heavy top-down structure, where only managers care about goals.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Beyond just having goals, great teams promote a sense of shared responsibility. &lt;/p&gt;

&lt;p&gt;Everyone on a team feels bought into the team‚Äôs shared mission. If the team succeeds, it‚Äôs everyone‚Äôs win. If they don‚Äôt, they band together to find a way forward. They avoid heavy top-down structure, where only managers care about goals. They also know that each team member plays a different role in achieving the team‚Äôs goals.&lt;/p&gt;

&lt;p&gt;Having teams set and defend their own goals is a good way to encourage this form of accountability. Ensuring team members all share in rewards for success is also a key. Leads should be responsible for ensuring that everyone understands and buys into goals. Answering doubts and keeping the team focused üîç&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-teams-succeed-or-fail-together"&gt;
  &lt;/a&gt;
  2. Teams Succeed Or Fail Together
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dEeX9V0h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319382192/-212wtqgL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dEeX9V0h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319382192/-212wtqgL.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
One of the most important things to understand about teams is that teams fail or succeed together.&lt;/p&gt;

&lt;p&gt;You‚Äôve heard there is no "&lt;em&gt;I&lt;/em&gt;" in the team, but the truth is much more than that.&lt;/p&gt;

&lt;p&gt;Any team where the members of that team feel like they are in competition, or where one member can succeed while the others fail or vice versa, is going to immediately be in jeopardy because it is human nature to serve our own best interests first.&lt;/p&gt;

&lt;p&gt;When teams have their fates tied together, and failure or success is at the team level, not the individual level, the best interest of every member of that team is the same as the best interest of the team.&lt;/p&gt;

&lt;p&gt;You can set the example by acting and speaking in such a way as to indicate that you believe that the overall success of the team is more important than the success of any individual on the team.&lt;/p&gt;

&lt;p&gt;You can choose to exhibit team spirit by slowing down to help a fallen teammate rather than take the gold medal for yourself. One person‚Äôs influence and example can be powerful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-effective-communication"&gt;
  &lt;/a&gt;
  3. Effective Communication
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AaTNY7AI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319400857/SKQW98pmW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AaTNY7AI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319400857/SKQW98pmW.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Great teams communicate well. They keep people informed with the least amount of effort. Team members understand what they need to do and buy into why they are doing it. These teams create open, safe environments where people feel comfortable sharing ideas and concerns. When it comes to dealing with problems they also differ. People are upfront about their feelings and quick to deal with issues. Great teams don‚Äôt waste time with unnecessary communication and meetings. They seek efficient ways to communicate and keep discussions focused.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-strong-culture"&gt;
  &lt;/a&gt;
  4. Strong Culture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lKVFjjWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319431271/TFkecDkY7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lKVFjjWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319431271/TFkecDkY7e.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
A strong culture is another common characteristic of great teams. They often develop their own rituals, nicknames, and terms. This binds them closer together and makes them more effective as a group. It also makes coming to work more fun and boosts morale as a result.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Paying attention to how people work together and mixing the right profiles can help.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Great team culture is not something you can force. It develops over time and only in the right environment. That said, it is largely driven by the mix of members and leads on a team. Paying attention to how people work together and mixing the right profiles can help. Picking the right team lead and coaching them to think about culture is critical.&lt;/p&gt;

&lt;p&gt;A good sign of a strong culture is when teams spend time outside of the office together. Although this again is not something you can force, there are ways to promote it. Things like Friday evening coffees, team-building events, and happy events are some examples. It should be the responsibility of a team lead to promote this kind of activity. &lt;/p&gt;

&lt;p&gt;Hashnode and Dev Teams is a great example of these kinds of Teams üçªüçª&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-clear-roles-and-responsibilities"&gt;
  &lt;/a&gt;
  5. Clear Roles and Responsibilities
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ON1qC6Mh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319463629/GlS3GgobC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ON1qC6Mh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628319463629/GlS3GgobC.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While they share common goals, people on great teams have well-defined individual responsibilities. They trust one another to each play a part in getting things done. They hold each other accountable for delivering on promises. This clear definition of roles also spans to leadership. They know who is ultimately responsible for technical, design, or product decisions.&lt;/p&gt;

&lt;p&gt;Communicating responsibilities in writing and to everyone is an easy way to set a team up for success.&lt;/p&gt;

&lt;p&gt;Ensuring a clear definition of responsibilities is an important part of building a healthy team. It allows people to focus on their work and trust that others will do theirs. It also avoids the misunderstanding and frustration that poorly defined roles can lead to. This is particularly true when leadership is not well defined. Decisions take much longer, outcomes are unclear and people get frustrated. Communicating responsibilities in writing and to everyone is an easy way to set a team up for success.&lt;/p&gt;

&lt;p&gt;Also, task management is very important. The team leader should always divide tasks among the team. &lt;a href="https://trello.com"&gt;Trello&lt;/a&gt; is a great place for this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OTLoPP2m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628318271470/NMeVc8fox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTLoPP2m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628318271470/NMeVc8fox.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, buddies, that's it! If we get all these in a sentence,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A great software development team is a team that goes to their goal with effective communication, responsible members with the help of their strong culture.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mr-unity-buddy.hashnode.dev/5-habits-of-great-software-development-teams"&gt;Originally&lt;/a&gt; published on Hashnode&lt;/p&gt;

</description>
      <category>developer</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>The Debugger Checklist ‚Äì Part II</title>
      <author>Shai Almog</author>
      <pubDate>Thu, 23 Sep 2021 05:00:04 +0000</pubDate>
      <link>https://dev.to/codenameone/the-debugger-checklist-part-ii-198e</link>
      <guid>https://dev.to/codenameone/the-debugger-checklist-part-ii-198e</guid>
      <description>&lt;p&gt;In the  &lt;a href="https://talktotheduck.dev/the-debugger-checklist-part-i"&gt;Debuggers Checklist Part I&lt;/a&gt; , I introduced some of the high level concepts and reviewed some of the common things you can do. In this part we'll get down to the process. Again, it's important to stress that this is boiled down and concentrated. &lt;/p&gt;

&lt;p&gt;I don't want to discuss issue trackers, unit testing and proper TDD. I think there are many resources covering all of these. The focus of these posts is the debug process itself which often gets neglected as "tools". There's a lot of technique that separates the seasoned developer from a junior. Furthermore, there are many small advancements and changes we can't possibly keep up with. I'd like to cover all of those things (some in future posts).&lt;/p&gt;

&lt;p&gt;With that out of the way let's continue with...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-process"&gt;
  &lt;/a&gt;
  The Process
&lt;/h2&gt;

&lt;p&gt;Hopefully by this point you were able to reproduce your problem in the debugger. Possibly even limited it to a small area you can step through.&lt;/p&gt;

&lt;p&gt;Now we need to actually track the issue and fix it. People think this is hard to quantify generically but it isn‚Äôt. It comes down to breaking the problem down into manageable pieces we can attack:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make the simplest assumption you can&lt;/li&gt;
&lt;li&gt;Validate assumptions&lt;/li&gt;
&lt;li&gt;While the bug isn‚Äôt found: 

&lt;ul&gt;
&lt;li&gt;Narrow assumptions&lt;/li&gt;
&lt;li&gt;Validate narrowed assumptions&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You‚Äôre probably saying: ‚ÄúWell dah...‚Äù. This is pretty obvious‚Ä¶ &lt;/p&gt;

&lt;p&gt;It totally is. The problem is we don‚Äôt apply those properly and somehow skip a lot of the nuance in those steps.&lt;/p&gt;

&lt;p&gt;During this stage Rubber Ducking (talking to the duck) becomes useful. This is the process of talking to someone (or something) about your problem and assumptions. When we say things out loud or even try to verbalise them in our mind, it helps clarify our misguided assumptions. &lt;br&gt;
I‚Äôll try to get into more of these sorts of tricks in a future ‚Äútips and tricks‚Äù post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-simplest-assumptions"&gt;
  &lt;/a&gt;
  The Simplest Assumptions
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DUULhoUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/klfqvex9amfwst9uylmn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DUULhoUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/klfqvex9amfwst9uylmn.jpg" alt="If something doesn't make sense. One of your assumptions has to wrong, because if something doesn't make sense then it can't be real. But what if the faulty assumption is that it's real. - House"&gt;&lt;/a&gt;&lt;br&gt;
This is where most of us fail. We assume.&lt;/p&gt;

&lt;p&gt;I recently had a bug which I encountered by accident. I noticed the value of a variable in a stack trace. It was clearly corrupted. Since I was using a debug agent I incorrectly assumed that was the source of the problem. But I tried to verify again and again. When all else failed this led me down the road to a serious bug in the code.&lt;/p&gt;

&lt;p&gt;Obviously we can‚Äôt start by testing the assumption that &lt;code&gt;1 + 1 = 2&lt;/code&gt;. So we need to narrow it down to applicable assumptions. This ‚Äútrick‚Äù isn‚Äôt the ‚Äúend all‚Äù but it‚Äôs a very useful way to validate a lot of common assumptions.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#debug-working-code"&gt;
  &lt;/a&gt;
  Debug ‚ÄúWorking Code‚Äù
&lt;/h4&gt;

&lt;p&gt;The best way to review your assumptions is to walk through working code. If your code fails for case X and succeeds for case Y, try case X first. See why the code works and step over the code block.&lt;br&gt;&lt;br&gt;
Then try case Y. This should present you with two cases you can easily compare to help you narrow in on  the suspect.&lt;/p&gt;

&lt;p&gt;If this isn‚Äôt applicable or isn‚Äôt taking you anywhere you need to review the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Exceptions&lt;/li&gt;
&lt;li&gt;State&lt;/li&gt;
&lt;li&gt;Threads/Synchronization&lt;/li&gt;
&lt;li&gt;Timings and Races&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I ordered these according to difficulty and probability. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exceptions"&gt;
  &lt;/a&gt;
  Exceptions
&lt;/h4&gt;

&lt;p&gt;Most of the problems are state, but exceptions are relatively easy to detect. So just place a breakpoint for all exceptions and verify that nothing ‚Äúfishy‚Äù is happening behind the scenes in one of the methods you invoked etc. Slowly filter out the ‚Äúvalid‚Äù exceptions as you move through the process.&lt;br&gt;
Typically exceptions are ‚Äúloud‚Äù and ‚Äúobvious‚Äù so unless someone silently caught an exception (which happens), you should be in the clear.&lt;/p&gt;

&lt;p&gt;I would also strongly recommend a linter rule that checks against swallowed/unlogged exceptions. E.g. checkstyle supports  &lt;a href="https://checkstyle.sourceforge.io/config_blocks.html"&gt;this&lt;/a&gt;  check that blocks empty catch blocks. It still can‚Äôt block stupid code that does ‚Äúnothing‚Äù in that block but at least it‚Äôs a start.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#state"&gt;
  &lt;/a&gt;
  State
&lt;/h4&gt;

&lt;p&gt;While threads are a source of difficult bugs, most bugs are a result of bad application state. Try separating the state elements that are modified and the state that‚Äôs read by the block of code.&lt;/p&gt;

&lt;p&gt;Assuming you can, try overriding it within your breakpoint by setting a value of a variable during debugging. This is a great capability that most developers don‚Äôt utilize often enough.  If you‚Äôre able to narrow down the value of a specific variable as the cause of the problem you‚Äôre already well on your way to solving the problem.&lt;/p&gt;

&lt;p&gt;If this isn‚Äôt helping, try identifying specific fields that might be problematic. Most debuggers will let you place a breakpoint on the field in order to watch modifications to said field‚Ä¶ I used that feature a couple of times while consulting and people were always surprised you can do that...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_GH0uhZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro6napxg4r00fjw54rbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_GH0uhZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro6napxg4r00fjw54rbf.png" alt="Field Breakpoint"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In IntelliJ the icon looks different for a field breakpoint. But it‚Äôs a breakpoint like any other, you can apply a condition to it and see the stack etc.&lt;/p&gt;

&lt;p&gt;Now if the problem persists and everything is failing‚Ä¶ Try changing the code to return a hardcoded state or a state from a working case. I‚Äôm normally not a fan of techniques that require code change for debugging since I consider the two distinct tasks. However, if you‚Äôre out of all options this might be your only recourse. Naturally you should use ‚ÄúReload Changed Classes‚Äù (or Apply Code Changes, Edit and Continue etc.) if applicable.&lt;/p&gt;

&lt;p&gt;Notice that there are also lower level memory breakpoints that are useful to debug memory access. We‚Äôll discuss these when we cover debugging native code which I plan to cover in the future.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#threadssynchronization"&gt;
  &lt;/a&gt;
  Threads/Synchronization
&lt;/h4&gt;

&lt;p&gt;Thread problems are hard to solve‚Ä¶ That‚Äôs not really something we‚Äôll get into. We‚Äôll only focus on finding and understanding the bug, and that‚Äôs an easier (manageable) task.&lt;/p&gt;

&lt;p&gt;The easiest way to check threading issues is as I mentioned before logging your current thread and/or stack. Do that in the block of code that‚Äôs causing an issue. Then add a similar log breakpoint on fields used by the block of code. Thread violations should be pretty clear in the logs.&lt;/p&gt;

&lt;p&gt;You can also get a thread dump during a breakpoint, that‚Äôs a feature of pretty much any debugger out there. E.g. in IntelliJ/IDEA you can select &lt;code&gt;Run -&amp;gt; Debugging Actions -&amp;gt; Get Thread Dump&lt;/code&gt;. This isn‚Äôt as useful as going through the stack frames but it‚Äôs a start.&lt;/p&gt;

&lt;p&gt;Specifically in IntelliJ/IDEA I recommend right clicking the debug tab and enabling the thread view. Then enabling thread groups by right clicking within the tab and selecting &lt;code&gt;Customize Thread View&lt;/code&gt; like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tP-j_8jw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7do0g0v4hsr1i15qbal4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tP-j_8jw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7do0g0v4hsr1i15qbal4.png" alt="Customize Thread View in IntelliJ/IDEA"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It provides a much ‚Äúcleaner‚Äù view of the threads as a hierarchy instead of the default look in IntelliJ which is better geared towards single thread debugging.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deadlocks and Livelocks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Deadlocks are usually pretty clear. The app gets stuck, you press pause and the debugger shows you which thread is stuck waiting for which monitor. You can then review the other threads and see who's holding the monitor. Fixing this might be tricky, but the debugger literally ‚Äútells us‚Äù what‚Äôs going on.&lt;/p&gt;

&lt;p&gt;With a livelock we hold one monitor and need another. Another thread is holding the other monitor and needs the one we‚Äôre holding. So on the surface it seems that both are working and aren‚Äôt stuck. A bit like two people running against each other in the hallway and trying to step out of each other's way. Unfortunately, livelocks can happen without threads being physically ‚Äústuck‚Äù so the code might appear fine on the surface without a clear monitor in the stack traces. &lt;/p&gt;

&lt;p&gt;Debugging this requires stepping over the threads one at a time in the thread view and reviewing each one to see if it‚Äôs waiting for a potentially contested resource. It isn‚Äôt hard technically but it‚Äôs very tedious. That‚Äôs why I recommended enabling thread groups in the thread view above. A typical application has MANY threads (and more coming with project  &lt;a href="https://inside.java/2021/08/13/new-loom-ea-builds/"&gt;Loom&lt;/a&gt; ). This produces a lot of noise which we can reduce by grouping the threads and focusing on the important parts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Performance and Resource Starvation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Performance problems caused by monitor contention are a bit harder to track with a debugger. I normally recommend randomly pausing the code and reviewing the running threads in your application. Is thread X constantly holding the monitor?&lt;br&gt;
Maybe there‚Äôs a problem there.&lt;/p&gt;

&lt;p&gt;You can then derive assumptions and prove them by logging the entry/exit point for a lock/synchronized block. &lt;/p&gt;

&lt;p&gt;Notice you can use a profiler and it sometimes helps, but it might lead you on the wrong path in some cases. I plan to discuss profilers in a future post.&lt;/p&gt;

&lt;p&gt;Resource starvation is an offshoot of performance issues. Often you would see it as an extreme  performance issue, that usually only happens when you try to scale. In this case a resource needed by a thread is always busy and we just can‚Äôt get to it. E.g. We have too many threads and too few database connections. Or too few threads and too many incoming web requests. This problem often doesn‚Äôt need a debugger at all. Your environment usually indicates immediately that it ran out of the given resource so the problem is almost always plain and obvious.&lt;/p&gt;

&lt;p&gt;The solution isn‚Äôt always as clear, e.g. you don‚Äôt want to add too many threads or DB connections to workaround the short term problem. You need to understand why the starvation occurred‚Ä¶&lt;/p&gt;

&lt;p&gt;This happens because of two different reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not releasing resources fast enough&lt;/li&gt;
&lt;li&gt;Not releasing resources in all cases&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first case is trivial. You can benchmark and see if something is holding you back. &lt;br&gt;
The second is the more common: a resource leak. In a GC environment this is often masked by the GC that nicely cleans up after us. But in a high throughput environment the GC might be too slow for our needs. E.g. A common mistake developers make is opening a file stream which they never close. The GC will do that for us, but it will take longer to do that and the file lock might remain in place, blocking further progress.&lt;/p&gt;

&lt;p&gt;This is where encapsulation comes in handy. All your resource usage (allocation/release) must be encapsulated. If you do that properly adding logging for allocation and freeing should expose such problems very quickly. &lt;/p&gt;

&lt;p&gt;This is a bit harder to detect with DI frameworks like Spring where connections etc. are injected for you. You can still use tricks like this, to  &lt;a href="https://stackoverflow.com/questions/50770462/springboot-2-monitor-db-connection"&gt;track even injected data&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Timings and Races&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is one of those elusive bugs such as race conditions which are often classified as thread problems (which they are) but during a debugging session it‚Äôs often easier to see them as a separate task.&lt;/p&gt;

&lt;p&gt;These often occur when your code has some unintentional reliance on performance or timing. E.g. Many years ago I had an app that crashed only when our customer was using it. The app was a mobile app and our customer was a local operator. It turned out that we had a bug where the networking in the customer site was SO FAST it just returned the response immediately and everything else wasn‚Äôt ready. So the application crashed. Usually the problem is slow performance and timeouts.&lt;/p&gt;

&lt;p&gt;So this was a case where my assumption that the network was slower than the CPU was flawed...&lt;/p&gt;

&lt;p&gt;The way I approach race conditions in threading code is this: ‚ÄúIt‚Äôs a state bug‚Äù. &lt;br&gt;
It‚Äôs always a state bug. When we have a race condition it means we either read from the state when it wasn‚Äôt ready or wrote to the state too late/early. Field breakpoints are your friends in this case and can really help you get the full picture of what‚Äôs going on.  You can also simulate the bad state situation by changing variable values. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally"&gt;
  &lt;/a&gt;
  Finally
&lt;/h2&gt;

&lt;p&gt;If you follow through your assumptions and catalog the bugs into one of those common pitfalls then you‚Äôre 90% of the way to understanding the root cause. The rest is deciding on the right fix for the problem.&lt;/p&gt;

&lt;p&gt;I won‚Äôt go into fixing the bug, filing the issue, building a test case etc. You should do all of that but there‚Äôs plenty written about that.&lt;/p&gt;

&lt;p&gt;In fact in preparation for this blog I picked up a lot of debugging books on Amazon. Turns out most aren‚Äôt &lt;strong&gt;"really"&lt;/strong&gt; debugging books. Yes they cover it in one or two chapters. The rest of the book is always about the process, test cases and everything surrounding it. I think that would be fair if debugging wasn‚Äôt a huge subject that can fill up a book. In my opinion, it sure can and I‚Äôm just getting started. &lt;/p&gt;

&lt;p&gt;Tune in for more!&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Android Application Fundamentals - Understand the bits and bytes</title>
      <author>Gourav Khunger</author>
      <pubDate>Thu, 23 Sep 2021 04:24:33 +0000</pubDate>
      <link>https://dev.to/byteslash/android-application-fundamentals-understand-the-bits-and-bytes-133k</link>
      <guid>https://dev.to/byteslash/android-application-fundamentals-understand-the-bits-and-bytes-133k</guid>
      <description>&lt;p&gt;Hello there!&lt;/p&gt;

&lt;p&gt;In the last article at the &lt;a href="https://genicsblog.com/series/android-development"&gt;Android app development series&lt;/a&gt;, we learned &lt;a href="https://genicsblog.com/how-to-create-your-first-android-app-using-android-studio"&gt;how to make a Hello World app&lt;/a&gt;. We made a new project in Android Studio and ran the app.&lt;/p&gt;

&lt;p&gt;Now, in this article, we are going to learn more about the Android App structure, its basic components, how to use &lt;a href="https://developer.android.com/studio"&gt;Android Studio&lt;/a&gt;, how to navigate through the project, and a lot many things that will be helpful along the way! &lt;/p&gt;

&lt;p&gt;Let's dig into it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#know-android-studio-in-depth"&gt;
  &lt;/a&gt;
  Know Android Studio in depth
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://genicsblog.com/how-to-create-your-first-android-app-using-android-studio"&gt;Last time&lt;/a&gt;, after we created a new app, this kind of screen popped up after the app was built.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X_6HSHTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631773265969/Sq2JDNXFps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_6HSHTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631773265969/Sq2JDNXFps.png" alt="Android Studio main window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We'll go through the window pane-by-pane. On the left side of the IDE window, you can see the project files in different views. By default, the project opens in the "Android" view, whereby you can see all the files that are relevant for your final app. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--psWVrHs5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632131895518/PvcNew3hC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--psWVrHs5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632131895518/PvcNew3hC.png" alt="rl-2Vl276G.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are many other default files that (most of the time) aren't needed to mess with, so Android Studio provides a really handy way to keep aside the mess and focus on what files you need for the project.&lt;/p&gt;

&lt;p&gt;These are the different views you can use to show/hide relevant files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bxlBvboh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632131754395/fELwPHyzG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bxlBvboh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632131754395/fELwPHyzG.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, most of the time, you would only need either the "Android" view or the "Project" view.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wU4W_TMw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632131855925/kIBWYnRTxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wU4W_TMw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632131855925/kIBWYnRTxg.png" alt="7IM_tC9oR.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Android View&lt;/strong&gt;: This view shows only relevant files related to your app screens and layout/resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project View&lt;/strong&gt;: This view shows all the files in the current project. You might need this while adding external files to a specific location in the project. Example: Adding &lt;code&gt;google-services.json&lt;/code&gt; file to integrate Firebase in an Android app.&lt;/p&gt;

&lt;p&gt;Let's get back to the main window, where you can write code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oC0clfF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632132266927/V7A34rdSN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oC0clfF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632132266927/V7A34rdSN.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can double-click on any file on the left pane, and it will open in the editor. The image above is of is an &lt;code&gt;XML&lt;/code&gt; file. Each &lt;code&gt;XML&lt;/code&gt; file has three different views, &lt;strong&gt;Code&lt;/strong&gt;, &lt;strong&gt;Split&lt;/strong&gt; and &lt;strong&gt;Design&lt;/strong&gt; view.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tr1nlxxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632132831458/ziYWINZCA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tr1nlxxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632132831458/ziYWINZCA.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see just the code in the &lt;strong&gt;Code&lt;/strong&gt; view, see code as well as and live updates in the &lt;strong&gt;Split&lt;/strong&gt; view, or access the drag and drop layout builder in the &lt;strong&gt;Design&lt;/strong&gt; view.&lt;/p&gt;

&lt;p&gt;On the top bar, you would be able to see the various standard features any IDE would have. You can try going through all the options and find various things you might need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yhu30ZEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632129954919/ip7yaj4dw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yhu30ZEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632129954919/ip7yaj4dw.png" alt="JDNXFps.pn"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And just below the bar, there are various useful things. On the left side you can see the current file you are working on, and the path it has inside the project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Y7yRNhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632133059267/0869cuIRl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Y7yRNhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632133059267/0869cuIRl.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the right side, you can see various buttons, which I will explain one by one:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;build&lt;/strong&gt;(green hammer)  is used to build your project.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the &lt;strong&gt;run button&lt;/strong&gt;(green triangle) is used to build your project while installing the built &lt;code&gt;APK&lt;/code&gt; on your connected Android device. You can select the device to launch your app from the drop-down beside your project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the app is running on a device, the two buttons beside the run button become active. They are for reloading the app once you made changes. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is useful because it takes less time to build as it only considers the changes in code and builds them, which results in a significant reduction in build time.&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then there is the &lt;strong&gt;debug&lt;/strong&gt; button. In addition to what the run button does, it attaches a debugger to the app which logs what happens to your android device when the app is running. It is pretty helpful to debug errors and crashes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then there is the &lt;strong&gt;profiler&lt;/strong&gt; tool which allows you to scan how your app is using CPU, memory, network, battery, and other resources on the device where it is running.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are other buttons related to project structure, Gradle, AVD(Android Virtual Device) manager, and others. You can try them out. I have explained most of the tools you would need.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On the bottom, you would be able to see this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rKuO8gw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632136020773/S-5CQBIRt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rKuO8gw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632136020773/S-5CQBIRt.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The specific tabs open up to show different things. Like, the debug tab opens up when you press the debug button, Profiler opens when you press profile, Logcat can be used to find logs of the running app, TODO lists all the TODOs (reminder to yourself) you have set anywhere in the project, etc. &lt;/p&gt;

&lt;p&gt;These were the basic things you would need to know to get started with Android Studio ü•≥&lt;/p&gt;

&lt;p&gt;Now, as you have learned Android Studio. Let's understand what files constitute different parts of an Android app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#android-project-file-structure"&gt;
  &lt;/a&gt;
  Android Project File Structure
&lt;/h2&gt;

&lt;p&gt;I would recommend you to open the &lt;em&gt;Project&lt;/em&gt; view for understanding what responsibility each file/folder has.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YRy5tF38--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632138739381/mVpoCB8HG.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YRy5tF38--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632138739381/mVpoCB8HG.jpeg" alt="Screenshot 2021-09-20 172135.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Under the root folder, there are sub-folders for different things.&lt;/p&gt;

&lt;p&gt;First, there is the &lt;code&gt;.gradle&lt;/code&gt; folder. It is the local cache for Gradle to speed up some build processes. You would have noticed by now that the first Gradle build takes time and subsequent builds are a bit faster - that's because Gradle stores cache to make things faster on further builds.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;.idea&lt;/code&gt; folder has all the local settings for your current environment. Since Android Studio is based on IntelliJ IDEA, it follows IDEA's blueprints.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;build&lt;/code&gt; folder would have the assets you generate- like a signed APK or so.&lt;/p&gt;

&lt;p&gt;Then there comes a cluster of files, I will cover them together because they are all related to Gradle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The root-level &lt;code&gt;build.gradle&lt;/code&gt; file: It contains configurations that are used by the app you are making, and all the libraries included in the project too.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;settings.gradle&lt;/code&gt; contains references of the repositories in which Gradle should look for while importing a library. It also unites all the libraries and the app together.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;gradle.properties&lt;/code&gt; defines settings that Gradle uses for the current project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;local.properties&lt;/code&gt; file, as the name suggests, is for local environment settings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/a/44861408/9819031"&gt;Read this answer&lt;/a&gt; on StackOverflow to know in-depth about the &lt;code&gt;gradlew&lt;/code&gt; and the &lt;code&gt;gradle.bat&lt;/code&gt; file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's move to the &lt;code&gt;app&lt;/code&gt; folder now. This is where the source code of our app lives.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NUQdI_Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632139910393/1n9oXmT24.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NUQdI_Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632139910393/1n9oXmT24.jpeg" alt="Screenshot 2021-09-20 172135.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;libs&lt;/code&gt; folder here would contain any external libraries you would import to the project. The &lt;code&gt;build&lt;/code&gt; folder is the same, it contains generated files. The &lt;code&gt;proguard-rules.pro&lt;/code&gt; file has configurations for ProGuard - which allows obfuscating code for an app.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;src&lt;/code&gt; folder is the big deal. It contains all of your code files that define different pages(activities) in your app. All things related to the functioning of the app are contained inside this folder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WjLDE4Qs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632321699792/96aiZUoGx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WjLDE4Qs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632321699792/96aiZUoGx.png" alt="Screenshot 2021-09-22 at 8.09.30 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;androidTest&lt;/code&gt; folder contains tests written to test the user interface of the app. For example, Tests that validate if a screen opens properly in different scenarios.&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;test&lt;/code&gt; folder has test files to test general functions implemented in the app. For example, Tests that validate if a function that validates E-Mail formatting is working fine or not.&lt;/li&gt;
&lt;li&gt;Finally, the &lt;code&gt;main&lt;/code&gt; folder contains the actual files that make up the app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will know about testing in android apps in future articles :)&lt;/p&gt;

&lt;p&gt;Now, open the &lt;code&gt;main&lt;/code&gt; folder. Here comes the interesting part. Don't worry if the above things went over your head, this section will be understood by most of you because it's intuitive.&lt;/p&gt;

&lt;p&gt;Now, you will be able to see three elements:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2LXmVVZG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632327366167/XuraJ03g0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2LXmVVZG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632327366167/XuraJ03g0.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will start with the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file. Consider this scenario, someone gives you a book but in an ambiguous way, they just pass you the pages, and the book isn't bound altogether. Then, the pages and the chapters won't make any sense to you, right?&lt;/p&gt;

&lt;p&gt;This is the same with Android Operating System. Let's consider you made an app with multiple screens. The Android system doesn't know the screens that your app contains and it can misunderstand them to other screens implemented in other apps. Now how does it know what all screens are a part of your app?&lt;/p&gt;

&lt;p&gt;Here comes the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file into play. It is a structured file that lists all the activities that are a part of the app, and any other components that the app may contain, like implementations for background services that the app may utilize, the permissions that the app would use to give its full functionality or some other meta-data information.&lt;/p&gt;

&lt;p&gt;Now, I am sure it would be clear to you what &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file does. Now, hop into the &lt;code&gt;java&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B8aPOV8i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632328494066/T3uWJn4wF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8aPOV8i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632328494066/T3uWJn4wF.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It contains different packages with different files for anything you want to do. It can contain activity classes, utility classes for some functions that you want to reuse in the project again and again, for implementing data classes to store data, and basically anything that isn't related to the user interface.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;xml&lt;/code&gt; folder is where all the UI elements should be placed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wK-C1vD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632328636033/7q5XnEdIC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wK-C1vD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632328636033/7q5XnEdIC.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;drawable&lt;/code&gt; folder should contain vector graphics that can be shown on the screen.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;layout&lt;/code&gt; folder is the place where the screens are actually placed. It should contain the files that implement the user interface for different screens.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;mipmap&lt;/code&gt; cluster of folders would contain non-scalable image assets. And if you are assuming that one has to define all the densities by themselves before importing them to Android Studio- then no, you are wrong üòÇ. Android Studio has an inbuilt feature that assists you to convert graphics to different densities.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;values&lt;/code&gt; and &lt;code&gt;values-night&lt;/code&gt; contain constant values in kind of a key-value format. You can access these values from the &lt;code&gt;java&lt;/code&gt;/&lt;code&gt;kotlin&lt;/code&gt; code at runtime by referencing the key. The &lt;code&gt;values&lt;/code&gt; folder is used by android when the app is using a light theme, and the other one is automatically picked up if you turn to dark mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  FiNaL WoRdS
&lt;/h2&gt;

&lt;p&gt;Okay, so this was it to know how a really basic Android project is structured. Now, you can go and have a look at various &lt;a href="https://github.com/topics/android"&gt;open source android projects&lt;/a&gt; on GitHub. Try to remember what significance a file has in a project.&lt;/p&gt;

&lt;p&gt;You can also try to make projects in Android Studio using the starter templates and have a look into different things.&lt;/p&gt;

&lt;p&gt;I hope was able to explain to you how an Android project looks like. In future articles, we'll get into further details by making simple apps and understanding the use of different things in an android app.&lt;/p&gt;

&lt;p&gt;Comment on this post if this was even a bit of help for you üôå. It motivates me to keep writing and sharing useful things :)&lt;/p&gt;

&lt;p&gt;Happy Coding :)&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://genicsblog.com"&gt;Genics Blog&lt;/a&gt; and subsribe to my newsletter there for more such useful content!&lt;/p&gt;

</description>
      <category>android</category>
      <category>androiddevelopment</category>
      <category>androidbasics</category>
    </item>
    <item>
      <title>Create a Netflix clone from Scratch: JavaScript PHP + MySQL Day 59</title>
      <author>Christopher Glikpo</author>
      <pubDate>Thu, 23 Sep 2021 04:23:27 +0000</pubDate>
      <link>https://dev.to/cglikpo/create-a-netflix-clone-from-scratch-javascript-php-mysql-day-59-17lb</link>
      <guid>https://dev.to/cglikpo/create-a-netflix-clone-from-scratch-javascript-php-mysql-day-59-17lb</guid>
      <description>&lt;p&gt;Netflix provides streaming movies and TV shows to over 75 million subscribers across&lt;br&gt;
the globe. Customers can watch as many shows/ movies as they want as long as they are&lt;br&gt;
connected to the internet for a monthly subscription fee of about ten dollars. Netflix produces&lt;br&gt;
original content and also pays for the rights to stream feature films and shows.&lt;/p&gt;

&lt;p&gt;In this video,we will be Styling the episodeContainer&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iK2RTbVfycc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you like my work, please consider&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/cglikpo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c23TxQOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jm11knj7d8zwcvo150q2.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;br&gt;
so that I can bring more projects, more articles for you&lt;/p&gt;

&lt;p&gt;If you want to learn more about Web Development, feel free to &lt;a href="https://www.youtube.com/c/ChristopherGlikpo"&gt;follow me on Youtube!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Guia b√°sica de comandos m√°s utilizados en CLI Interfaz de L√≠nea de comandos en Mac y Windows
</title>
      <author>MailingDelgadoMedina</author>
      <pubDate>Thu, 23 Sep 2021 03:30:12 +0000</pubDate>
      <link>https://dev.to/mailingdelgadomedina/guia-basica-de-comandos-mas-utilizados-en-cli-interfaz-de-linea-de-comandos-en-mac-y-windows-pn2</link>
      <guid>https://dev.to/mailingdelgadomedina/guia-basica-de-comandos-mas-utilizados-en-cli-interfaz-de-linea-de-comandos-en-mac-y-windows-pn2</guid>
      <description>&lt;h6&gt;
  &lt;a href="#photo-by-jake-walker-on-unsplash"&gt;
  &lt;/a&gt;
  Photo by Jake Walker on Unsplash
&lt;/h6&gt;



&lt;h1&gt;
  &lt;a href="#gu%C3%ADa-b%C3%A1sica-y-sus-commandos"&gt;
  &lt;/a&gt;
  Gu√≠a B√°sica y sus commandos
&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Este art√≠culo tiene informaci√≥n valiosa te estar√° preparando para familiarizarte con la &lt;strong&gt;&lt;em&gt;Interfaz de L√≠nea de comandos&lt;/em&gt;&lt;/strong&gt; y b√°sicos m√°s utilizados. Tanto en &lt;em&gt;MAC&lt;/em&gt; como en &lt;em&gt;Windows&lt;/em&gt;. A continuaci√≥n te estar√© mostrando los comandos y los ejemplos con cada uno de ellos.&lt;/p&gt;

&lt;p&gt;La mayor√≠a de los usuarios estan acostumbrados a utilizar la &lt;em&gt;Interfaz gr√°fica&lt;/em&gt; mejor conocida como (&lt;strong&gt;&lt;em&gt;GUI&lt;/em&gt;&lt;/strong&gt;) sus siglas en ingl√©s. Esta interfaz es muy f√°cil de utilizar ya que puedes ver con facilidad las carpetas, ‚Äú&lt;em&gt;folders&lt;/em&gt;‚Äù y documentos ‚Äú&lt;em&gt;files&lt;/em&gt;‚Äù. Para los desarrolladores de aplicaciones es necesario que salgan de su √°rea de su comodidad utilizando la &lt;strong&gt;&lt;em&gt;Interfaz de L√≠nea de Comandos&lt;/em&gt;&lt;/strong&gt; mejor conocido en sus siglas en ingl√©s como (&lt;strong&gt;&lt;em&gt;CLI&lt;/em&gt;&lt;/strong&gt;) en vez de utilizar la interfaz gr√°fica.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;
A continuaci√≥n ver√°n imagenes que muestran ejemplos de la &lt;strong&gt;Interfaz gr√°fica (&lt;em&gt;GUI&lt;/em&gt;)&lt;/strong&gt; y la &lt;strong&gt;Interfaz de L√≠nea de Comando (&lt;em&gt;CLI&lt;/em&gt;)&lt;/strong&gt;, tanto en &lt;strong&gt;&lt;em&gt;Mac&lt;/em&gt;&lt;/strong&gt; como en &lt;strong&gt;&lt;em&gt;Windows&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-continuaci%C3%B3n-estar%C3%A9-mostrando-ejemplos-de-gui-en-mac-y-windows"&gt;
  &lt;/a&gt;
  A continuaci√≥n estar√© mostrando ejemplos de (GUI) en Mac y Windows
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lfYKajyu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzwyspvfgm2lhnlpa9u6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lfYKajyu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzwyspvfgm2lhnlpa9u6.png" alt="GUI-MAC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#gui-interfaz-gr%C3%A1fica-de-mac"&gt;
  &lt;/a&gt;
  (&lt;em&gt;GUI&lt;/em&gt;) Interfaz Gr√°fica de Mac
&lt;/h6&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UsUkgy6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i73g07ohcq0nhem58mk5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UsUkgy6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i73g07ohcq0nhem58mk5.png" alt="GUI-WIN"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#gui-interfaz-gr%C3%A1fica-de-windows"&gt;
  &lt;/a&gt;
  (&lt;em&gt;GUI&lt;/em&gt;) Interfaz Gr√°fica de Windows
&lt;/h6&gt;



&lt;p&gt;Se puede notar la diferencia de entre las interfaces gr√°ficas de los sistemas operativos.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-continuaci%C3%B3n-estar%C3%A9-mostrando-ejemplos-de-cli-en-mac-y-windows"&gt;
  &lt;/a&gt;
  A continuaci√≥n estar√© mostrando ejemplos de (CLI) en Mac y Windows
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fx_DIjyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5i69evzq5mjfyc49syy9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fx_DIjyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5i69evzq5mjfyc49syy9.png" alt="CLI-MAC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#interfaz-de-l%C3%ADnea-de-comando-de-interfaz-de-mac-conocido-como-terminal"&gt;
  &lt;/a&gt;
  Interfaz de L√≠nea de Comando de Interfaz de Mac conocido como "Terminal"
&lt;/h6&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Ttq6f5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srnthjp5x36mdrcopohs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Ttq6f5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srnthjp5x36mdrcopohs.png" alt="CLI-WIN"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#interfaz-de-l%C3%ADnea-de-comando-de-interfaz-de-mac-conocido-como-terminal"&gt;
  &lt;/a&gt;
  Interfaz de L√≠nea de Comando de Interfaz de Mac conocido como "Terminal"
&lt;/h6&gt;



&lt;h2&gt;
  &lt;a href="#comandos"&gt;
  &lt;/a&gt;
  Comandos
&lt;/h2&gt;

&lt;p&gt;Para interactuar con la &lt;strong&gt;Interfaz de L√≠nea de Comandos* es diferente a la gr√°fica. En la gr√°fica puedes ver los documentos y las carpetas en forma de iconos, puedes arrastrar y dar click para hacer cambios como eliminar, renombrar y hacer otros cambios. En el (&lt;/strong&gt;&lt;em&gt;CLI&lt;/em&gt;**) hay que escribir comandos para hacer cambios. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oEgLf9TE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jogp1k5jwbm8showb39c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oEgLf9TE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jogp1k5jwbm8showb39c.png" alt="estructura-de-comando"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cada comando en una &lt;em&gt;CLI&lt;/em&gt;, a menudo, tiene m√°s de una parte. La parte requerida es el nombre del comando a ejecutar. Hay comandos para realizar una gran cantidad de tareas, desde mostrarle los archivos en un directorio hasta copiarlos, renombrarlos, moverlos, eliminarlos, comprimirlos, descomprimirlos y transferirlos. Cada uno de estos comandos es un peque√±o programa que realiza una tarea especializada.&lt;/p&gt;

&lt;p&gt;Los par√°metros son arbitrarios y est√°n determinados por el comando. Muchos comandos admiten un patr√≥n que coincide con uno o m√°s archivos en un directorio. En este caso, el par√°metro especifica un patr√≥n que coincide con un archivo que comienza con cualquier nombre pero termina en .jpg&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Por ejemplo, si queremos borrar todos los documentos de extension &lt;code&gt;.jpg&lt;/code&gt; se puede hacer de la siguiente manera. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Windows&lt;/em&gt;&lt;/strong&gt; se logra escribiendo lo siguiente:&lt;code&gt;del *.jpg&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Mac&lt;/em&gt;&lt;/strong&gt; se logra escribiendo lo siguiente: &lt;code&gt;rm *.jpg&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;En la imagen que se muestra a continuaci√≥n detalla la estructura de una l√≠nea de comando en el "&lt;strong&gt;&lt;em&gt;CMD&lt;/em&gt;&lt;/strong&gt;".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H2re0Hu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7ssutrb2b16ekrvkxky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2re0Hu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7ssutrb2b16ekrvkxky.png" alt="Ex-commando-detallado"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#esta-l%C3%ADnea-borra-todos-los-documentos-que-sean-compatibles-con-esta-extensi%C3%B3n"&gt;
  &lt;/a&gt;
  Esta l√≠nea borra todos los documentos que sean compatibles con esta extensi√≥n.
&lt;/h6&gt;



&lt;h4&gt;
  &lt;a href="#tabla-de-comandos"&gt;
  &lt;/a&gt;
  Tabla de comandos
&lt;/h4&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Comando Windows&lt;/th&gt;
&lt;th&gt;Comando MacOS/Linux&lt;/th&gt;
&lt;th&gt;Descripci√≥n&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dir&lt;/td&gt;
&lt;td&gt;ls&lt;/td&gt;
&lt;td&gt;Muestra los archivos en un directorio actual (por defecto, el directorio actual)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cd&lt;/td&gt;
&lt;td&gt;cd&lt;/td&gt;
&lt;td&gt;Cambiar de directorio o carpeta&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;move&lt;/td&gt;
&lt;td&gt;mv&lt;/td&gt;
&lt;td&gt;Mueve un archivo a una nueva ubicaci√≥n (posiblemente con un nuevo nombre)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copy&lt;/td&gt;
&lt;td&gt;cp&lt;/td&gt;
&lt;td&gt;Copia el documento&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;del&lt;/td&gt;
&lt;td&gt;rm&lt;/td&gt;
&lt;td&gt;Elimina √≥ borra un documento o carpeta&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;td&gt;Te ubicas en el directorio o carpeta anterior.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;md&lt;/td&gt;
&lt;td&gt;mkdir&lt;/td&gt;
&lt;td&gt;Creas directorio o carpeta&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#indicadores"&gt;
  &lt;/a&gt;
  Indicadores:
&lt;/h3&gt;

&lt;p&gt;Una de las caracter√≠sticas esenciales del &lt;em&gt;indicador&lt;/em&gt; es indicarle en qu√© parte de su disco duro el terminal considera el directorio actual. Cuando usa comandos como &lt;code&gt;del&lt;/code&gt; o &lt;code&gt;rm&lt;/code&gt; a menos que especifique una ubicaci√≥n diferente, el comando se ejecutar√° en el directorio actual.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Como puede ver a continuaci√≥n, las indicaciones var√≠an en la informaci√≥n que presentan. &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#indicador-de-windows"&gt;
  &lt;/a&gt;
  Indicador de Windows:
&lt;/h6&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XPOcY6Em--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7zl61ofjx6oqsx29a44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XPOcY6Em--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7zl61ofjx6oqsx29a44.png" alt="pic of Win"&gt;&lt;/a&gt;&lt;br&gt;
Se pueden observar en estas imagenes lo claro que detalla el cuerpo del indicador de &lt;strong&gt;&lt;em&gt;Windows&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#indicador-de-maclinux-prompt"&gt;
  &lt;/a&gt;
  Indicador de Mac/Linux Prompt:
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tm-hM6us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tlk40f96j7g2lg7lilt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tm-hM6us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tlk40f96j7g2lg7lilt.png" alt="pic of Mac"&gt;&lt;/a&gt;&lt;br&gt;
Se pueden observar en estas imagenes lo claro que detalla el cuerpo del indicador de &lt;strong&gt;&lt;em&gt;Mac/Linux&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#s%C3%ADgueme-en"&gt;
  &lt;/a&gt;
  S√≠gueme en:
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://www.linkedin.com/in/mailing-delgado-medina/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/groups/programandoconmei"&gt;Facebook Group&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/MailingDelgadoMedina"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.twitch.tv/programandoconmei"&gt;Twitch&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
