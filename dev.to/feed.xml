<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10 Magical JavaScript Tips for Every Web Developer</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 12:44:56 +0000</pubDate>
      <link>https://dev.to/csshacker/10-magical-javascript-tips-for-every-web-developer-36cm</link>
      <guid>https://dev.to/csshacker/10-magical-javascript-tips-for-every-web-developer-36cm</guid>
      <description>&lt;p id="f6cc"&gt;In this article, we will discuss the 15 useful JavaScript tips for every web developer to save their valuable and precious time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p id="e1bb"&gt;I am always ready to learn although I do not always like being taught&lt;/p&gt;

&lt;p id="0fe5"&gt;‚Äî Winston Churchill&lt;/p&gt;


&lt;/blockquote&gt;
&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;h1 id="fa85"&gt;Tip 1. Flatten the array of the array&lt;/h1&gt;
&lt;p id="4e31"&gt;This tip will help you to flatten a deeply nested array of arrays by using¬†&lt;code&gt;Infinity&lt;/code&gt;¬†in¬†&lt;code&gt;flat&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;span id="e3aa"&gt;var array = [123, 500, [1, 2, [34, 56, 67, [234, 1245], 900]], 845, [30257]]&lt;/span&gt;&lt;span id="16da"&gt;//flatten array of array&lt;br&gt;array.flat(Infinity)&lt;/span&gt;&lt;span id="b0d8"&gt;// output:&lt;br&gt;// [123, 500, 1, 2, 34, 56, 67, 234, 1245, 900, 845, 30257]&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="902c"&gt;Tip 2. Easy Exchange Variables&lt;/h1&gt;
&lt;p id="ebf9"&gt;You probably swap the two variables using a third variable¬†&lt;code&gt;temp&lt;/code&gt;. But this tip will show you a new way to exchange variables using destructuring.&lt;/p&gt;
&lt;pre&gt;&lt;span id="298c"&gt;//example 1&lt;/span&gt;&lt;span id="3316"&gt;var a = 6;&lt;br&gt;var b = 7;&lt;/span&gt;&lt;span id="b133"&gt;[a,b] = [b,a]&lt;/span&gt;&lt;span id="aa36"&gt;console.log(a,b) // 7 6&lt;/span&gt;&lt;/pre&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/"&gt;10 Magical JavaScript Tips for Every Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

</description>
    </item>
    <item>
      <title>Make VSCode Super Lighters</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 12:39:27 +0000</pubDate>
      <link>https://dev.to/csshacker/make-vscode-super-lighters-1ooa</link>
      <guid>https://dev.to/csshacker/make-vscode-super-lighters-1ooa</guid>
      <description>&lt;p&gt;VSCode is a really great Code Editor rather say nearly an IDE or better than that. But this costs a great amount of RAM and CPU in bigger projects. That's not all related VSCode but to most of its extensions. VSCode's extensions are good, by far best. But these are written for Nodejs with JS so unsurprisingly these take a handy amount of resource but efficiently. And people unknowingly accuse vscode for this. Though most of the time it doesn't cause that much of issue. But in bigger projects this tiny problem gets bigger as most of the people don't have a AMD Thread Ripper, Samsung NVMe SSD with 16GB RAM &amp;amp; a RTX3090&lt;/p&gt;
&lt;p&gt;Let's find out the reasons of this high resource usage &amp;amp; fix 'em&lt;/p&gt;

&lt;p&gt;&lt;span&gt;READ More: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/make-vscode-lighter/"&gt;Make Vs Code Lighter&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>üöÄ20 Best CSS3 Library For Developers.</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 12:38:41 +0000</pubDate>
      <link>https://dev.to/csshacker/20-best-css3-library-for-developers-20o8</link>
      <guid>https://dev.to/csshacker/20-best-css3-library-for-developers-20o8</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;ü§î How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together¬†&lt;span&gt;20 best CSS libraries.&lt;/span&gt;¬†We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="#"&gt;&lt;/a&gt;Let's go....ü§©&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;üöÄ20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>How to lose a hackathon in 7 steps</title>
      <author>Arthur Grishkevich</author>
      <pubDate>Tue, 31 Aug 2021 12:04:42 +0000</pubDate>
      <link>https://dev.to/arrrgr/how-to-lose-a-hackathon-in-7-steps-2kf0</link>
      <guid>https://dev.to/arrrgr/how-to-lose-a-hackathon-in-7-steps-2kf0</guid>
      <description>&lt;p&gt;I took part in a hackathon recently. My team lost miserably. Here are the steps we followed to secure this loss.&lt;/p&gt;

&lt;p&gt;You may find these valuable if you do want to win the next hackathon you participate in. Or if you want to lose it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#losing-a-hackathon"&gt;
  &lt;/a&gt;
  Losing a hackathon
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step-1-dont-prepare-until-an-hour-or-two-before-the-event-starts"&gt;
  &lt;/a&gt;
  Step 1 - Don‚Äôt prepare until an hour or two before the event starts
&lt;/h3&gt;

&lt;p&gt;This step is absolutely key. If you ignore it you might actually have a chance of winning. We had thought about reviewing the APIs we would be working with and getting together a week prior to the hackathon. Had we done so, we might have had time to brainstorm and come up with a concept for our product. We might even have mapped out our architecture and integrations, if at a high level. Or we may have defined our areas of responsibility. Certainly we would have been one step closer to winning, so we did not do it. Instead, we got together at the official start of the hackathon, bounced some ideas around, picked the worst one (more on that below) and ran with it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-come-to-the-hackathon-exhausted"&gt;
  &lt;/a&gt;
  Step 2 - Come to the hackathon exhausted
&lt;/h3&gt;

&lt;p&gt;This step really helps. Stay up for 12-18 hours before you begin your 24 hours of coding. Due to my current timezone constraints, I and one of my teammates were up working at 6am that day and sat down to the hackathon at 10pm. &lt;/p&gt;

&lt;p&gt;Dare I claim this feat made us more productive? Hell no. As a matter of fact, by the time we had gone to get some rest at 6am, we thought we were close to 50% done with our app but after getting some sleep, ended up having to rewrite some of the application code. We also were nowhere near finished in terms of integrating the whole thing together and deploying. I‚Äôd guess we were 20% done by the 6am mark, a far shot from the 50%.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-solve-a-problem-that-doesnt-exist"&gt;
  &lt;/a&gt;
  Step 3 - Solve a problem that doesn't exist
&lt;/h3&gt;

&lt;p&gt;This one is the cherry on the cake. Instead of making sure your app solves a real world problem, create a problem out of thin air. We wanted to showcase our own technology and in our brainstorming session (see Step 1 above) we came up with two use cases. One solved a real problem (replacing call center agents). The other did not (onboarding new customers with voice) but looked cool. We picked the latter. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-dont-use-the-tech-made-available-to-you-by-event-organizers"&gt;
  &lt;/a&gt;
  Step 4 - Don‚Äôt use the tech made available to you by event organizers
&lt;/h3&gt;

&lt;p&gt;Obviously this step only applies to those hackathons where organizers want participants to make use of their technologies. This one is quite self explanatory isn‚Äôt it? If the organizers want you to use their tech, make a token gesture to it. A nod. This is a sure way to lose the hackathon. &lt;/p&gt;

&lt;p&gt;We made a big mistake in picking our use case (Step 3). We picked the one which used exactly two methods in the US Bank APIs. The Brits might call this ‚Äútaking the piss.‚Äù In contrast, the winner made use of what looked like 80% of the available methods.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-make-it-perfect"&gt;
  &lt;/a&gt;
  Step 5 - Make it perfect!
&lt;/h3&gt;

&lt;p&gt;Instead of building fast and shipping a rough but enticing product, focus on polishing the user experience. This one is all me. I was the team member responsible for the user-facing conversational AI interface and I spent A LOT of time reworking it, adjusting for more and more complex pathways and running test conversations over and over. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-forget-about-the-time"&gt;
  &lt;/a&gt;
  Step 6 - Forget about the time
&lt;/h3&gt;

&lt;p&gt;You know how you are going to have to create a presentation and practice presenting, make sure your deploys are working and data is rendering properly and actually run through the full demo a half dozen times to make sure you can fit the entire thing in five minutes? Yeah, forget about that. Instead, focus on Step 5. When you have 20 minutes left before the submission deadline, throw together a half assed deck and submit your code one minute after the cut off. Then find out that you are the second presenter in line and presentations are moved up 1.5 hours and start‚Ä¶ right now. If you follow this step, you are guaranteed to lose. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-7-ignore-the-presentation-software"&gt;
  &lt;/a&gt;
  Step 7 - Ignore the presentation software
&lt;/h3&gt;

&lt;p&gt;WebEx never works like it‚Äôs meant to. But that‚Äôs no reason for you to worry. Yes, don‚Äôt worry about it. When it‚Äôs time for you to present, just open the thing in Safari and when you find out that you can‚Äôt share your screen, shrug it off and start telling a bad joke while the desktop version downloads. This is sure to put the judges in a good mood and not to penalize you at all. And, yes, this also really happened. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-built"&gt;
  &lt;/a&gt;
  What we built
&lt;/h2&gt;

&lt;p&gt;Reading over this now, it looks like such a trainwreck. It‚Äôs making me ask - did we do anything right? I think we did. &lt;/p&gt;

&lt;p&gt;We split up our areas of responsibility and stuck to them, yet helped each other out where needed. We stayed in a Discord voice channel and communicated the entire time we were online and working. We were civil to each other even as the deadline approached. &lt;/p&gt;

&lt;p&gt;For our product, we built an automated voice user onboarding workflow. The user opens the app, enters their phone number, gets a call from an AI agent who asks them a series of questions, helps them to open their account, suggests they may want to create a virtual credit card and takes them through the card creation process. We also built (I think) a fairly cool app concept. &lt;/p&gt;

&lt;p&gt;We used ReactJS, HTML5 on the front-end, ExpressJS, Node.js and MongoDB on the back-end, Websocket for communications, and consumed the bank‚Äôs card as a service API. We used Dasha AI Studio to create the conversational workflow and the Dasha SDK in our Node.js back-end to make the conversational workflow an integral part of the application. Here is me giving a demo of the app for some friends after we lost (if you like the conversational part, you can join our &lt;a href="https://community.dasha.ai"&gt;developer community&lt;/a&gt; where we build AI apps): &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/FlqnbPQQfv4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;Congratulations. Now you know how to lose any hackathon. By extension, you now know what to avoid in order to increase your chances of winning a hackathon. Good luck and godspeed. &lt;/p&gt;

</description>
      <category>ai</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Today's Daily Dose of Programming Humor</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Tue, 31 Aug 2021 12:00:25 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/today-s-daily-dose-of-programming-humor-dgm</link>
      <guid>https://dev.to/dailydeveloperjokes/today-s-daily-dose-of-programming-humor-dgm</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8svwXrKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e125997196ca.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8svwXrKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e125997196ca.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ‚ù§Ô∏è if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>Deploy a Django App on AWS Lightsail: Docker, Docker Compose, PostgreSQL, Nginx &amp; Github Actions</title>
      <author>Mangabo Kolawole</author>
      <pubDate>Tue, 31 Aug 2021 11:55:58 +0000</pubDate>
      <link>https://dev.to/koladev/deploy-a-django-app-on-aws-lightsail-docker-docker-compose-postgresql-nginx-github-actions-bo6</link>
      <guid>https://dev.to/koladev/deploy-a-django-app-on-aws-lightsail-docker-docker-compose-postgresql-nginx-github-actions-bo6</guid>
      <description>&lt;p&gt;So you have written your Django Application and you are ready to deploy it? &lt;/p&gt;

&lt;p&gt;Although there are already existing solutions like Heroku, to help you deploy your application easily and quickly, it's always good for a developer to know how to deploy an application on a private server. &lt;/p&gt;

&lt;p&gt;Today, we'll learn how to deploy a Django App on AWS Lightsail. *&lt;em&gt;This can also be applied to others VPS providers. *&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Setup

&lt;ul&gt;
&lt;li&gt;Add PostgreSQL&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Prepare the Django application for deployment

&lt;ul&gt;
&lt;li&gt;Environment variables&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Docker Configuration&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Github Actions (testing)&lt;/li&gt;
&lt;li&gt;Preparing the server&lt;/li&gt;
&lt;li&gt;Github Actions (Deployment)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-setup"&gt;
  &lt;/a&gt;
  1 - Setup
&lt;/h2&gt;

&lt;p&gt;For this project, we'll be using an already configured Django application. It's a project made for this article about   &lt;a href="https://dev.to/koladev/django-rest-authentication-cmh"&gt; FullStack React &amp;amp; Django Authentication: Django REST, TypeScript, Axios, Redux &amp;amp; React Router &lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;You can directly clone the repo  &lt;a href="https://github.com/koladev32/django-auth-react-tutorial"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Once it's done, make sure to create a virtual environment and run the following commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd django-auth-react-tutorial 
virtualenv --python=/usr/bin/python3.8 venv
source venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-postgresql"&gt;
  &lt;/a&gt;
  Add PostgreSQL
&lt;/h3&gt;

&lt;p&gt;Actually, the project is running on sqlite3, which is very good in the local and development environments. Let's switch to PostgreSQL. &lt;/p&gt;

&lt;p&gt;Using this, I pretend that you have PostgreSQL installed on your machine and that the server is running. &lt;br&gt;
If that's not the case, feel free to check this resource to install the server. &lt;/p&gt;

&lt;p&gt;Once it's done, let's create the database we'll be using for this tutorial. Open your shell enter &lt;code&gt;psql&lt;/code&gt; and let's start writing some SQL commands.&lt;/p&gt;

&lt;p&gt;The CREATE DATABASE command lets us create a new database in PostgreSQL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;coredb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The CREATE USER command lets us create a user for our database along with a password.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="n"&gt;core&lt;/span&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;PASSWORD&lt;/span&gt; &lt;span class="s1"&gt;'12345678'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, let's grand to our new user access to the database created earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;coredb&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's install &lt;code&gt;psycopg2&lt;/code&gt; using &lt;code&gt;pip install psycopg2&lt;/code&gt; is a popular PostgreSQL database adapter for Python.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install psycopg2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next step, let's set up the project to use PostgreSQL database instead of Sqlite3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.sqlite3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s"&gt;'db.sqlite3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change the above code snippet to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.postgresql_psycopg2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'coredb'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'USER'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'core'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'12345678'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'HOST'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'PORT'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What have we done? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ENGINE&lt;/code&gt;: We changed the database engine to use &lt;code&gt;postgresql_psycopg2&lt;/code&gt; instead of &lt;code&gt;sqlite3&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;NAME&lt;/code&gt;: is the name of the database we created for our project. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;USER&lt;/code&gt;: is the database user we've created during the database creation. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;PASSWORD&lt;/code&gt;: is the password to the database we created. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, make are that the Django application is connected to the PostgreSQL database. For this, we'll be running the &lt;code&gt;migrate&lt;/code&gt; command which is responsible for executing the SQL commands specified in the migrations files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll have a similar output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Applying auth.0001_initial... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  ...
  Applying core_user.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sessions.0001_initial... OK
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's run the server to check if the application is working well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see something like this when you hit &lt;code&gt;http://127.0.0.1:8000&lt;/code&gt; in your browser. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XY-J-j3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629734721362/2Wy0WpBJA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XY-J-j3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629734721362/2Wy0WpBJA.png" alt="Django Server Well Running"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bravo for us! We've successfully configured our Django app to use PostgresSQL.&lt;/p&gt;

&lt;p&gt;Now, let's prepare the application for deployment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-prepare-application-for-deployment"&gt;
  &lt;/a&gt;
  2 - Prepare application for deployment
&lt;/h2&gt;

&lt;p&gt;Here, we'll configure the application to use env variables but also configure  &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;  as well. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#env-variables"&gt;
  &lt;/a&gt;
  Env variables
&lt;/h3&gt;

&lt;p&gt;It's important to keep sensitive bits of code like API keys, passwords, and secret keys away from prying eyes. &lt;br&gt;
The best way to do it? Use environment variables. Here's how to do it in our application. &lt;/p&gt;

&lt;p&gt;First of all, let's install a python package named &lt;code&gt;django-environ&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install django-environ
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, import it in the settings.py file, and let's initialize environment variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# CoreRoot/settings.py
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;environ&lt;/span&gt;

&lt;span class="c1"&gt;# Initialise environment variables
&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_env&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next step, create two files : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a &lt;code&gt;.env&lt;/code&gt; file which will contain all environment variables that &lt;code&gt;django-environ&lt;/code&gt; will read &lt;/li&gt;
&lt;li&gt;and a &lt;code&gt;env.example&lt;/code&gt; file which will contain the same content as &lt;code&gt;.env&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Actually, the &lt;code&gt;.env&lt;/code&gt; file is ignored by git. The &lt;code&gt;env.example&lt;/code&gt; file here represents a skeleton we can use to create our &lt;code&gt;.env&lt;/code&gt; file in another machine. &lt;/p&gt;

&lt;p&gt;It'll be visible, so make sure to not include sensitive information.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# ./.env
SECRET_KEY=django-insecure-97s)x3c8w8h_qv3t3s7%)#k@dpk2edr0ed_(rq9y(rbb&amp;amp;_!ai%
DEBUG=0
DJANGO_ALLOWED_HOSTS="localhost 127.0.0.1 [::1]"
DB_ENGINE=django.db.backends.postgresql_psycopg2
DB_NAME=coredb
DB_USER=core
DB_PASSWORD=12345678
DB_HOST=localhost
DB_PORT=5432
CORS_ALLOWED_ORIGINS="http://localhost:3000 http://127.0.0.1:3000"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's copy the content paste it in &lt;code&gt;.env.example&lt;/code&gt;, but make sure to delete the values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./env.example
SECRET_KEY=
DEBUG=
DJANGO_ALLOWED_HOSTS=
DB_ENGINE=
DB_NAME=
DB_USER=
DB_PASSWORD=
DB_HOST=
DB_PORT=
CORS_ALLOWED_ORIGINS=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now, let's go back to the settings file and add the env variables configurations as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ./CoreRoot/settings.py
&lt;/span&gt;
&lt;span class="c1"&gt;# SECURITY WARNING: keep the secret key used in production secret!
&lt;/span&gt;&lt;span class="n"&gt;SECRET_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'qkl+xdr8aimpf-&amp;amp;x(mi7)dwt^-q77aji#j*d#02-5usa32r9!y'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# SECURITY WARNING: don't run with debug turned on in production!
&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DEBUG"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DJANGO_ALLOWED_HOSTS"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DB_ENGINE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'django.db.backends.postgresql_psycopg2'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DB_NAME'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'coredb'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;'USER'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DB_USER'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'core'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;'PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DB_PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'12345678'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;'HOST'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DB_HOST'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;'PORT'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DB_PORT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'5432'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;CORS_ALLOWED_ORIGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"CORS_ALLOWED_ORIGINS"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h3&gt;

&lt;p&gt;Testing in an application is the first assurance of maintainability and reliability of our Django server. &lt;br&gt;
We'll be implementing testing to make sure everything is green before pushing for deployment.&lt;/p&gt;

&lt;p&gt;Let's write tests for our login and refresh endpoints. &lt;br&gt;
We'll also add one test to the &lt;code&gt;UserViewSet&lt;/code&gt;. &lt;br&gt;
First of all, create a file named &lt;code&gt;test_runner.py&lt;/code&gt; in &lt;code&gt;CoreRoot&lt;/code&gt; directory. &lt;/p&gt;

&lt;p&gt;The goal here is to rewrite the &lt;code&gt;DiscoverRunner&lt;/code&gt;, to load our custom fixtures in the test database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ./CoreRoot/test_runner.py
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;importlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;import_module&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;connections&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.test.runner&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DiscoverRunner&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CoreTestRunner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DiscoverRunner&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setup_test_environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""We set the TESTING setting to True. By default, it's on False."""&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;setup_test_environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TESTING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setup_databases&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""We set the database"""&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;setup_databases&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_fixtures&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;classmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;load_fixtures&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;import_module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"core.fixtures"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"run_fixtures"&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once it's done, we can add the TESTING configurations in the &lt;code&gt;settings.py&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# CoreRoot/settings.py
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;TESTING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;TEST_RUNNER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"CoreRoot.test_runner.CoreTestRunner"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we can start writing our tests. &lt;/p&gt;

&lt;p&gt;Let's start with the authentication tests. First of all, let's add the URLs and the data we'll be using.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# core/auth/tests.py
&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.test&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;APITestCase&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AuthenticationTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;APITestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;base_url_login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"core:auth-login-list"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;base_url_refresh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"core:auth-refresh-list"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;data_register&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"pass"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"test@appseed.us"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;data_login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"testuser@yopmail.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"12345678"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great! We can add a test for login now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# core/auth/tests.py
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
       &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url_login&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_login&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_200_OK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the tests, open the terminal and enter the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see a similar output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Creating test database for alias 'default'...
System check identified no issues (0 silenced).
.
----------------------------------------------------------------------
Ran 1 test in 0.287s

OK
Destroying test database for alias 'default'...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add a test for the refresh endpoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# core/auth/tests.py
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_refresh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Login
&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url_login&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_login&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_200_OK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;response_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'access'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;refresh_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'refresh'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# Refreshing the token
&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url_refresh&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"refresh"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;refresh_token&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_200_OK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;response_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertNotEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'access'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What we are doing here is pretty straightforward : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login to retrieve the access and refresh tokens &lt;/li&gt;
&lt;li&gt;Making a request with the refresh token to gain a new access token&lt;/li&gt;
&lt;li&gt;Comparing the old access token and the new obtained access token to make sure they are not equal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let's move to the  &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;  configuration. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dockerizing-our-app"&gt;
  &lt;/a&gt;
  Dockerizing our app
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;  is an open platform for developing, shipping, and running applications inside containers. &lt;br&gt;
Why use Docker? &lt;br&gt;
It helps you separate your applications from your infrastructure and helps in delivering code faster. &lt;/p&gt;

&lt;p&gt;If it's your first time working with Docker, I highly recommend you go through a quick tutorial and read some documentation about it. &lt;/p&gt;

&lt;p&gt;Here are some great resources that helped me: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=eN_O4zd4D9o&amp;amp;list=PLPoSdR46FgI5wOJuzcPQCNqS37t39zKkg"&gt;Docker Tutorial&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://docker-curriculum.com/"&gt;Docker curriculum&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#dockerfile"&gt;
  &lt;/a&gt;
  Dockerfile
&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;Dockerfile&lt;/code&gt; represents a text document containing all the commands that could call on the command line to create an image.&lt;/p&gt;

&lt;p&gt;Add a Dockerfile to the project root:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# pull official base image
FROM python:3.9-alpine

# set work directory
WORKDIR /app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    &amp;amp;&amp;amp; apk add postgresql-dev gcc python3-dev musl-dev

# install python dependencies
COPY requirements.txt /app/requirements.txt
RUN pip install --upgrade pip
RUN pip install --no-cache-dir -r requirements.txt


# copy project
COPY . .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we started with an &lt;strong&gt;Alpine-based Docker Image for Python&lt;/strong&gt;. It's a lightweight Linux distribution designed for security and resource efficiency. &lt;br&gt;
After that, we set a working directory followed by two environment variables: &lt;/p&gt;

&lt;p&gt;1 - &lt;code&gt;PYTHONDONTWRITEBYTECODE&lt;/code&gt; to prevent Python from writing &lt;code&gt;.pyc&lt;/code&gt; files to disc&lt;br&gt;
2 - &lt;code&gt;PYTHONUNBUFFERED&lt;/code&gt; to prevent Python from buffering &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After that, we perform operations like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up environment variables&lt;/li&gt;
&lt;li&gt;Installing Postgres server&lt;/li&gt;
&lt;li&gt;Copying there &lt;code&gt;requirements.txt&lt;/code&gt; file to our app path, upgrading pip, and installing the python package to run our application&lt;/li&gt;
&lt;li&gt;And last copying the entire project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, let's add a &lt;code&gt;.dockerignore&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;env
venv
.dockerignore
Dockerfile
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#docker-compose"&gt;
  &lt;/a&gt;
  Docker Compose
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/compose/"&gt;Docker Compose&lt;/a&gt;  is a great tool (&amp;lt;3). You can use it to define and run multi-container Docker applications.&lt;/p&gt;

&lt;p&gt;What do we need? Well, just a YAML file containing all the configuration of our application's services. &lt;br&gt;
Then, with the &lt;code&gt;docker-compose&lt;/code&gt; command, we can create and start all those services.&lt;/p&gt;

&lt;p&gt;Here, the &lt;code&gt;docker-compose.dev.yml&lt;/code&gt; file will contain three services that make our app: nginx, web, and db. &lt;/p&gt;

&lt;p&gt;This file will be used for development.&lt;/p&gt;

&lt;p&gt;As you guessed :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3.7'&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;nginx&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;core_web&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;on-failure&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx:stable&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;static_volume:/app/static&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;80:80"&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;web&lt;/span&gt;
  &lt;span class="na"&gt;web&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;core_app&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5000:5000"&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="s"&gt;sh -c " python manage.py migrate &amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="s"&gt;gunicorn CoreRoot.wsgi:application --bind 0.0.0.0:5000"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;.:/app&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;static_volume:/app/static&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db&lt;/span&gt;
  &lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;core_db&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:12.0-alpine&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgres_data:/var/lib/postgresql/data/&lt;/span&gt;

&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;static_volume&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;postgres_data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;nginx&lt;/code&gt;:  &lt;a href="https://www.nginx.com/"&gt;NGINX&lt;/a&gt;  is an open-source software for web serving, reverse proxying, caching, load balancing, media streaming, and more.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;web&lt;/code&gt;: We'll run and serve the endpoint of the Django application through Gunicorn. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;db&lt;/code&gt;: As you guessed, this service is related to our PostgreSQL database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the next step, let's create the NGINX configuration file to proxy requests to our backend application. &lt;br&gt;
In the root directory, create a &lt;code&gt;nginx&lt;/code&gt; directory and create a &lt;code&gt;nginx.dev.conf&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;upstream webapp {
    server core_app:5000;
}
server {

    listen 80;
    server_name localhost;

    location / {
        proxy_pass http://webapp;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /static/ {
     alias /app/static/;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add &lt;code&gt;gunicorn&lt;/code&gt; and some configurations before building our image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install gunicorn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add it as a requirement as well in the &lt;code&gt;requirements.txt&lt;/code&gt;. &lt;br&gt;
Here's what my &lt;code&gt;requirements.txt&lt;/code&gt; file looks like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Django==3.2.4
djangorestframework==3.12.4
djangorestframework-simplejwt==4.7.1
django-cors-headers==3.7.0
psycopg2==2.9.1
django-environ==0.4.5
gunicorn==20.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the last thing, let's add &lt;code&gt;STATIC_ROOT&lt;/code&gt; in the &lt;code&gt;settings.py&lt;/code&gt; file.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#docker-build"&gt;
  &lt;/a&gt;
  Docker Build
&lt;/h4&gt;

&lt;p&gt;The setup is completed. Let's build our containers and test if everything works locally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker-compose -f docker-compose.dev.yml up -d --build 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once it's done, hit &lt;code&gt;localhost/api/auth/login/&lt;/code&gt; to see if your application is working. &lt;br&gt;
You should get a similar page. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f-k0S-ZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630022210893/4hCPqR6A4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-k0S-ZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630022210893/4hCPqR6A4.png" alt="Page GET Not allowed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! Our Django application is successfully running inside a container.&lt;/p&gt;

&lt;p&gt;Let's move to the Github Actions to run tests every time there is a push on the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#github-actions-testing"&gt;
  &lt;/a&gt;
  Github Actions (Testing)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub actions&lt;/a&gt;  are one of the greatest features of Github. it helps you build, test or deploy your application and more. &lt;/p&gt;

&lt;p&gt;Here, we'll create a YAML file named &lt;code&gt;django.yml&lt;/code&gt; to run some Django tests. &lt;/p&gt;

&lt;p&gt;In the root project, create a directory named &lt;code&gt;.github&lt;/code&gt;. Inside that directory, create another directory named &lt;code&gt;workflows&lt;/code&gt; and create the &lt;code&gt;django.yml&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Django CI&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;max-parallel&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;
      &lt;span class="na"&gt;matrix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;python-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;3.9&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;postgres&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:12&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;core&lt;/span&gt;
          &lt;span class="na"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12345678&lt;/span&gt;
          &lt;span class="na"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;coredb&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;5432:5432&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;--health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set up Python ${{ matrix.python-version }}&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-python@v2&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;python-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ matrix.python-version }}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;psycopg2 prerequisites&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sudo apt-get install python-dev libpq-dev&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Dependencies&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;python -m pip install --upgrade pip&lt;/span&gt;
        &lt;span class="s"&gt;pip install -r requirements.txt&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run Tests&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;python manage.py test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Basically, what we are doing here is setting rules for the  &lt;a href="https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions"&gt;GitHub action workflow&lt;/a&gt;, installing dependencies, and running the tests. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make sure that this workflow is triggered only when there is a push or pull_request on the main branch&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;ubuntu-latest&lt;/code&gt; as the OS and precise the Python version on which this workflow will run. &lt;/li&gt;
&lt;li&gt;Next, we create a Postgres service, the database will be used to run our tests. &lt;/li&gt;
&lt;li&gt;After that as we install the python dependencies and just run the tests. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you push the code in your repository, you'll see something similar when you go to your repository page. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A3GsJ6dZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630024016358/wxAUXlykO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A3GsJ6dZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630024016358/wxAUXlykO.png" alt="Django Actions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After a moment, the yellow colors will turn to green, meaning that the checks have successfully completed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-aws-server"&gt;
  &lt;/a&gt;
  Setting up the AWS server
&lt;/h2&gt;

&lt;p&gt;I'll be using a  &lt;a href="https://aws.amazon.com/lightsail/"&gt;Lightsail server&lt;/a&gt; here. Note that these configurations can work with any VPS provider. &lt;/p&gt;

&lt;p&gt;If you want to set up a Lightsail instance, refer to the AWS  &lt;a href="https://aws.amazon.com/lightsail/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personally, I am my VPS is running on Ubuntu 20.04.3 LTS.&lt;/p&gt;

&lt;p&gt;Also, you'll need  &lt;a href="https://docs.docker.com/engine/install/ubuntu/"&gt;Docker&lt;/a&gt;  and  &lt;a href="https://docs.docker.com/compose/install/"&gt;docker-compose&lt;/a&gt; installed on the machine.&lt;/p&gt;

&lt;p&gt;After that, if you want to link your server to a domain name, make sure to add it to your DNS configuration panel. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gXPR5HYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630162654342/mGaOf9REK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gXPR5HYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630162654342/mGaOf9REK.png" alt="Domain name configurations"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you are done, we can start working on the deployment process. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-build-script"&gt;
  &lt;/a&gt;
  Docker build script
&lt;/h3&gt;

&lt;p&gt;To automate things here, we'll write a bash script to pull changes from the repo and also build the docker image and run the containers. &lt;/p&gt;

&lt;p&gt;We'll also be checking if there are any coming changes before pulling and re-building the containers again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/usr/bin/env bash

TARGET='main'

cd ~/app || exit

ACTION='\033[1;90m'
NOCOLOR='\033[0m'

# Checking if we are on the main branch

echo -e ${ACTION}Checking Git repo
BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [ "$BRANCH" != ${TARGET} ]
then
  exit 0
fi

# Checking if the repository is up to date.

git fetch
HEADHASH=$(git rev-parse HEAD)
UPSTREAMHASH=$(git rev-parse ${TARGET}@{upstream})

if [ "$HEADHASH" == "$UPSTREAMHASH" ]
then
  echo -e "${FINISHED}"Current branch is up to date with origin/${TARGET}."${NOCOLOR}"
  exit 0
fi

# If that's not the case, we pull the latest changes and we build a new image

git pull origin main;

# Docker

docker-compose up -d --build

exit 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good! Login on your server using SSH. We'll be creating some new directories: one for the repo and another one for our scripts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir app .scripts
cd .scripts
vim docker-deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And just paste the content of the precedent script and modify it if necessary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd ~/app
git clone &amp;lt;your_repository&amp;gt; .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to add the &lt;code&gt;.&lt;/code&gt;. Using this, it will simply clone the content of the repository in the current directory.&lt;/p&gt;

&lt;p&gt;Great! Now we need to write the default &lt;code&gt;docker-compose.yml&lt;/code&gt; file which will be run on this server.&lt;/p&gt;

&lt;p&gt;We'll be adding an SSL certificate, by the way, so we need to create another &lt;code&gt;nginx.conf&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Here's the &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: '3.7'
services:
  nginx:
    container_name: core_web
    restart: on-failure
    image: jonasal/nginx-certbot:latest
    env_file:
      - .env.nginx
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./nginx/user_conf.d:/etc/nginx/user_conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  web:
    container_name: core_app
    build: .
    restart: always
    env_file: .env
    ports:
      - "5000:5000"
    command: &amp;gt;
      sh -c " python manage.py migrate &amp;amp;&amp;amp;
          gunicorn CoreRoot.wsgi:application --bind 0.0.0.0:5000"
    volumes:
     - .:/app
     - static_volume:/app/static
    depends_on:
     - db
  db:
    container_name: core_db
    image: postgres:12.0-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/

volumes:
  static_volume:
  postgres_data:
  nginx_secrets:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you noticed, we've changed the &lt;code&gt;nginx&lt;/code&gt; service. Now, we are using the &lt;code&gt;docker-nginx-certbot&lt;/code&gt; image. It'll automatically create and renew SSL certificates using the  &lt;a href="https://letsencrypt.org/"&gt;Let's Encrypt&lt;/a&gt; free CA (Certificate authority) and its client &lt;code&gt;certbot&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Create a new directory &lt;code&gt;user_conf.d&lt;/code&gt; inside the &lt;code&gt;nginx&lt;/code&gt; directory and create a new file &lt;code&gt;nginx.conf&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;upstream webapp {
    server core_app:5000;
}

server {

    listen 443 default_server reuseport;
    listen [::]:443 ssl default_server reuseport;
    server_name dockerawsdjango.koladev.xyz;
    server_tokens off;
    client_max_body_size 20M;


    ssl_certificate /etc/letsencrypt/live/dockerawsdjango.koladev.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dockerawsdjango.koladev.xyz/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/dockerawsdjango.koladev.xyz/chain.pem;
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://webapp;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /static/ {
     alias /app/static/;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Make sure to replace &lt;code&gt;dockerawsdjango.koladev.xyz&lt;/code&gt; with your own domain name...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And no troubles! I'll explain what I've done.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;server {
    listen 443 default_server reuseport;
    listen [::]:443 ssl default_server reuseport;
    server_name dockerawsdjango.koladev.xyz;
    server_tokens off;
    client_max_body_size 20M;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So as usual, we are listening on port &lt;code&gt;443&lt;/code&gt; for &lt;strong&gt;HTTPS&lt;/strong&gt;. &lt;br&gt;
We've added a &lt;code&gt;server_name&lt;/code&gt; which is the domain name. We set the &lt;code&gt;server_tokens&lt;/code&gt; to off to not show the server version on error pages. &lt;br&gt;
And the last thing, we set the request size to a &lt;strong&gt;max of 20MB&lt;/strong&gt;. It means that requests larger than 20MB will result in errors with &lt;strong&gt;HTTP 413&lt;/strong&gt; (Request Entity Too Large).&lt;/p&gt;

&lt;p&gt;Now, let's write the job for deployment in the Github Action.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
  deploy:
    name: Deploying
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: Deploying Application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_AWS_SERVER_IP }}
        username: ${{ secrets.SSH_SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd ~/.scripts
          ./docker-deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the usage of Github Secrets here. It allows the storage of sensitive information in your repository. Check this  &lt;a href="https://docs.github.com/en/actions/reference/encrypted-secrets"&gt;documentation&lt;/a&gt;  for more information.&lt;/p&gt;

&lt;p&gt;We also using here a GitHub action that requires the name of the host, the username, the key, and the passphrase. You can also use this action with a password but it'll require some configurations. &lt;br&gt;
Feel free to check the  &lt;a href="https://github.com/appleboy/ssh-action#setting-up-a-ssh-key"&gt;documentation&lt;/a&gt;  of this action for more detail.&lt;/p&gt;

&lt;p&gt;Also, notice the &lt;code&gt;needs: [build]&lt;/code&gt; line. It helps us make sure that the precedent job is successful before deploying the new version of the app.&lt;/p&gt;

&lt;p&gt;Once it's done, log via ssh in your server and create a .env file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd app/
vim .env # or nano or whatever
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, create a &lt;code&gt;.env.nginx&lt;/code&gt; file. This will contain the required configurations to create an SSL certificate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Required
CERTBOT_EMAIL=

# Optional (Defaults)
STAGING=1
DHPARAM_SIZE=2048
RSA_KEY_SIZE=2048
ELLIPTIC_CURVE=secp256r1
USE_ECDSA=0
RENEWAL_INTERVAL=8d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add your email address. Notice here that &lt;code&gt;STAGING&lt;/code&gt; is set to 1. We will test the configuration first with &lt;strong&gt;Let‚Äôs encrypt&lt;/strong&gt; staging environment! It is important to not set staging=0 before you are 100% sure that your configuration is correct. &lt;/p&gt;

&lt;p&gt;This is because there is a limited number of retries to issue the certificate and you don‚Äôt want to wait till they are reset (once a week). &lt;/p&gt;

&lt;p&gt;Declare the environment variables your project will need. &lt;/p&gt;

&lt;p&gt;And we're nearly done. :)&lt;/p&gt;

&lt;p&gt;Make a push to the repository and just wait for the actions to pass successfully.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BE2HesTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630170291071/0t26MZ9nt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BE2HesTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630170291071/0t26MZ9nt.png" alt="Successful Deployment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And voil√†. I can check &lt;a href="https://dockerawsdjango.koladev.xyz/"&gt;https://dockerawsdjango.koladev.xyz/&lt;/a&gt; and here's the result.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNwizssG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630280545520/4f2ttZjfw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNwizssG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630280545520/4f2ttZjfw.png" alt="HTTPS expired"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It looks like our configuration is clean! We can issue a production-ready certificate now. &lt;br&gt;
On your server, stop the containers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker-compose down
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;edit your &lt;code&gt;.env.nginx&lt;/code&gt; file and set &lt;code&gt;STAGING=0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, start the containers again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo docker-compose up -d --build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's refresh the page. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---9tuY1Uf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630281017853/jEnMx60C-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---9tuY1Uf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630281017853/jEnMx60C-.png" alt="HTTPS Secure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And it's working like a charm! :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article,  we've learned how to use Github Actions to deploy a dockerized Django application on an AWS Lightsail server. Note that you can use these steps on any VPS. &lt;/p&gt;

&lt;p&gt;And as every article can be made better so your suggestion or questions are welcome in the comment section. üòâ&lt;/p&gt;

&lt;p&gt;Check the code of this tutorial  &lt;a href="https://github.com/koladev32/django-aws-docker-github-actions"&gt;here&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>python</category>
      <category>docker</category>
      <category>django</category>
      <category>github</category>
    </item>
    <item>
      <title>Testes de Software: quais os tipos e por que implementar?</title>
      <author>agatha-vieira</author>
      <pubDate>Tue, 31 Aug 2021 11:46:39 +0000</pubDate>
      <link>https://dev.to/fireworkweb/testes-de-software-quais-os-tipos-e-por-que-implementar-4p8c</link>
      <guid>https://dev.to/fireworkweb/testes-de-software-quais-os-tipos-e-por-que-implementar-4p8c</guid>
      <description>&lt;p&gt;Testes de software focam na investiga√ß√£o ou valida√ß√£o de funcionalidades que comprovam a qualidade do software ou produto que est√° sendo testado, para os envolvidos no projeto. Aprenda mais sobre este processo essencial para garantia a qualidade de um software üëá&lt;br&gt;
Quais s√£o os tipos de testes de software?&lt;/p&gt;

&lt;p&gt;Geralmente existem dois tipos de testes:&lt;/p&gt;

&lt;p&gt;Funcionais:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unit Testing&lt;/li&gt;
&lt;li&gt;Integration Testing&lt;/li&gt;
&lt;li&gt;System Testing&lt;/li&gt;
&lt;li&gt;Sanity Testing&lt;/li&gt;
&lt;li&gt;Smoke Testing&lt;/li&gt;
&lt;li&gt;Interface Testing&lt;/li&gt;
&lt;li&gt;Regression Testing&lt;/li&gt;
&lt;li&gt;Beta/Acceptance Testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Performance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Load Testing&lt;/li&gt;
&lt;li&gt;Stress Testing&lt;/li&gt;
&lt;li&gt;Volume Testing&lt;/li&gt;
&lt;li&gt;Security Testing&lt;/li&gt;
&lt;li&gt;Compatibility Testing&lt;/li&gt;
&lt;li&gt;Install Testing&lt;/li&gt;
&lt;li&gt;Recovery Testing&lt;/li&gt;
&lt;li&gt;Reliability Testing&lt;/li&gt;
&lt;li&gt;Usability Testing&lt;/li&gt;
&lt;li&gt;Compliance Testing&lt;/li&gt;
&lt;li&gt;Localization Testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como definir quais testes devem ser implementados?&lt;/p&gt;

&lt;p&gt;Para definir os testes de um sistema, √© importante se perguntar quais s√£o as funcionalidades que o sistema tem, e o que ele precisa para funcionar. Depois de se fazer estas perguntas, √© muito mais f√°cil identificar quais pontos os testes cabem. Inclusive se voc√™ √© iniciante no mundo de testes e qualidade de software, pode ser uma maneira mais r√°pida de encontrar o teste que precisa, antes de se familiarizar mais profundamente com os nomes e categorias de cada um.&lt;/p&gt;

&lt;p&gt;A Implementa√ß√£o de testes varia por projeto e pelas tecnologias sendo usadas. Sistemas muito grandes geralmente precisam de testes de performance, pois tem um volume de usu√°rios muito alto. Os demais podem se beneficiar muito de testes de regress√£o, testando o sistema por completo. Mas os mais comuns s√£o os testes funcionais, pois s√£o mais assertivos, e requerem um acompanhamento eficiente com a documenta√ß√£o, e tarefas bem descritas. Ajudando na organiza√ß√£o do projeto e na detec√ß√£o de erros antes de chegar ao cliente.&lt;/p&gt;

&lt;p&gt;√â importante documentar os testes. Descrevendo qual o resultado esperado, o que est√° sendo testado, e caso necess√°rio alguma instru√ß√£o mais espec√≠fica para seu time. Manter um bom controle de quais testes existem, e de detalhes de cada um previne a diverg√™ncia de coordena√ß√£o entre os desenvolvedores do projeto. Um time organizado pode chegar aos cen√°rios de teste sendo estudados juntos, anotando tamb√©m os requisitos funcionais, de database, especifica√ß√µes t√©cnicas, entre outros.&lt;/p&gt;

&lt;p&gt;Comunica√ß√£o √© crucial para a cria√ß√£o de testes que trazem valor para o projeto. Fa√ßa reuni√µes com seus colegas, identifique os pontos mais fracos do sistema e use os testes para fortalecer esses pontos. &lt;/p&gt;

&lt;p&gt;Lembre-se que testes tamb√©m podem melhorar a qualidade do c√≥digo no seu projeto. Algumas ferramentas como PHP-cs-fixer, PHP Mess Detector, eslint, etc. Ajudaram a manter uma qualidade de c√≥digo dentro do projeto com todos os desenvolvedores.&lt;br&gt;
Qual o impacto de testes cont√≠nuos em software para empresas?&lt;/p&gt;

&lt;p&gt;Fazer testes cont√≠nuos √© o √∫nico jeito de garantir a qualidade de software. Ent√£o s√£o essenciais, se adaptando aos requerimentos do projeto. O maior impacto, al√©m de manter a qualidade, √© garantir que o sistema continue funcionando como esperado e ajudando os desenvolvedores a encontrar erros antes de liberar o acesso para os clientes. &lt;/p&gt;

&lt;p&gt;Mais importante que prevenir erros de sistema ou uma experi√™ncia de usu√°rio ruim, s√£o os impactos financeiros e legais. Um sistema sem testes, √© mais vulner√°vel a ter vulnerabilidades de seguran√ßa, usar pacotes desatualizados, ou ter Bugs que podem ser usados de maneira maliciosa por terceiros. Horr√≠vel n√£o!? Ent√£o n√£o se esque√ßa de implementar testes no seu software/sistema, e caso voc√™ n√£o saiba por onde come√ßar entre em contato conosco!&lt;/p&gt;




&lt;p&gt;Aprenda mais nos nossos canais digitais!&lt;br&gt;
Site: &lt;a href="https://fireworkweb.com.br"&gt;https://fireworkweb.com.br&lt;/a&gt;&lt;br&gt;
Youtube:&lt;a href="https://bit.ly/2GwqNU1"&gt;https://bit.ly/2GwqNU1&lt;/a&gt;&lt;br&gt;
Insta: @fireworkweb&lt;br&gt;
Face: @fireworkweb&lt;br&gt;
Linkedin: Firework Web &amp;amp; Mobile&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>basic</category>
      <category>testing</category>
    </item>
    <item>
      <title>How To Apply Confusion Matrix In Real-Life Scenario  </title>
      <author>Manar Abdelkarim</author>
      <pubDate>Tue, 31 Aug 2021 11:41:35 +0000</pubDate>
      <link>https://dev.to/manarabdelkarim/how-to-apply-confusion-matrix-in-real-life-scenario-2i7a</link>
      <guid>https://dev.to/manarabdelkarim/how-to-apply-confusion-matrix-in-real-life-scenario-2i7a</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hello-scientist"&gt;
  &lt;/a&gt;
  Hello Scientist
&lt;/h3&gt;

&lt;p&gt;Before we start, this article is a follow-up to the previous one about (Sets) in Math and Python. &lt;/p&gt;

&lt;p&gt;To understand today‚Äôs post you should have knowledge of Sets or you can go and read &lt;a href="https://dev.to/manarabdelkarim/confusion-matrix-sets-in-math-and-python-5ahe"&gt;What Is Set In Math And Python&lt;/a&gt; &lt;br&gt;
Ok? Are you ready??&lt;/p&gt;

&lt;p&gt;Then let‚Äôs get started.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--obm6AZEy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eu37k2sfmm42x2nw62p2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--obm6AZEy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eu37k2sfmm42x2nw62p2.gif" alt="Confusion Matrix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our first example is detecting Corona on People.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let's call all the people that we chose as a test sample -&amp;gt; X&lt;/li&gt;
&lt;li&gt;And the set of people among X  who are sick (have Corona) -&amp;gt; S&lt;/li&gt;
&lt;li&gt;The set of people among X who are Healthy(don't have Corona) -&amp;gt; H&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5AkM8Knj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sytr12mcuh0slyl7bmry.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5AkM8Knj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sytr12mcuh0slyl7bmry.jpg" alt="Confusion Matrix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To represent S in mathematics we write:&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;S={x ‚àà X: x has Corona}&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;The small x means one of the X sets (a member of X).&lt;br&gt;
So the formula says an x "a person from the sample test" that is a member of the X "the set of all the people of the sample test" and that x "that person" has Corona (from the S sub set).&lt;/p&gt;

&lt;p&gt;And to represent H in mathematics we write:&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;H={x ‚àà X: x doesn't have Corona}&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Now, what is the possibility that one of the X people has Corona and doesn't have Corona at the same time?&lt;br&gt;
Of course, this is impossible!&lt;/p&gt;

&lt;p&gt;So we know that |S| ‚à© |H| = ‚àÖ and |S| ‚à™ |H| = X (the people in the test sample are either sick or healthy so if we put all the sick and healthy people together they will be all of our samples)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uIcSZE6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b236a3oszqvb9gleiz1e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uIcSZE6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b236a3oszqvb9gleiz1e.jpg" alt="Confusion Matrix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's add our Corona detect prediction as we want to know how accurate is our CPR prediction.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;So let the people from the sample who tested positive -&amp;gt;P
And we represent them as P= {x ‚àà X : x positive for Corona}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that positive here means that the CPR predicts that someone has Corona.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The people from the sample who tested negative -&amp;gt;N
And we represent them as N= {x ‚àà X : x negative for Corona}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we have 4 probabilities:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;someone who has Corona and his test for Corona is positive.&lt;/li&gt;
&lt;li&gt;someone who does not have Corona and his test for Corona is negative.&lt;/li&gt;
&lt;li&gt;someone who has Corona but his test for Corona is negative.&lt;/li&gt;
&lt;li&gt;someone who does not have Corona but his test for Corona is positive.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;these probabilities are called the Confusion matrix&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DW0EvKFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5rf9xdzffeqqv0y7sys.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DW0EvKFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5rf9xdzffeqqv0y7sys.jpg" alt="Confusion Matrix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#confusion-matrix"&gt;
  &lt;/a&gt;
  Confusion Matrix:
&lt;/h2&gt;

&lt;p&gt;A confusion matrix is a technique for summarizing the performance of a classification algorithm.&lt;/p&gt;

&lt;p&gt;Calculating a confusion matrix can give you a better idea of what your classification model is getting right and what types of errors it is making.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now Let's discuss the 4 possibility:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--av83w4Iw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.kym-cdn.com/entries/icons/original/000/021/464/14608107_1180665285312703_1558693314_n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--av83w4Iw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.kym-cdn.com/entries/icons/original/000/021/464/14608107_1180665285312703_1558693314_n.jpg" alt="math"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#someone-who-has-corona-and-his-test-for-corona-is-positive"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Someone who has Corona and his test for Corona is positive.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The representation of this possibility is: |S| ‚à© |P|&lt;br&gt;
because S is the people who have Corona and P are the people who tested positive.&lt;br&gt;
someone who has Corona and tested positive means we want to find someone in both sets (S and P) which means the intersection.&lt;/p&gt;

&lt;p&gt;If we have a girl called Sara, Sara is in the P set which means the CPR predicted that Sara is in the S set ( the set of sick people)&lt;br&gt;
If Sara is tested positive we call this prediction "positive" and if she is sick "if she is in S set" then we say the prediction is True -&amp;gt; True Positive.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the prediction of what we are trying to find is right we call it positive.&lt;/li&gt;
&lt;li&gt;When the reality meets the prediction we call it True
So |S| ‚à© |P|  = True Positive.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#someone-who-does-not-have-corona-and-his-test-for-corona-is-negative"&gt;
  &lt;/a&gt;
  &lt;strong&gt;someone who does not have Corona and his test for Corona is negative.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The representation of this possibility is: |H| ‚à© |N|&lt;br&gt;
because H is the healthy people who don't have Corona and N are the people who tested negative.&lt;br&gt;
someone who doesn't have Corona and tested negative means we want to find someone in both sets (H and N) which means the intersection.&lt;/p&gt;

&lt;p&gt;Let's assume that the girl called Sara is in the N set which means the CPR predicted that Sara is in the H set ( the set of healthy people)&lt;br&gt;
If Sara is tested negative we call this prediction "negative" and if she is sick "if she is in S set" then we say the prediction is True -&amp;gt; True negative.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the prediction of what we are &lt;strong&gt;, not&lt;/strong&gt; trying to find (or the opposite of what we want to predict) is right we call it negative.
-When the reality meets the prediction we call it True&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So |H| ‚à© |N| = True Negative&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#someone-who-has-corona-but-his-test-for-corona-is-negative"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Someone who has Corona but his test for Corona is negative.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The representation of this possibility is: |S| ‚à© |N|&lt;br&gt;
because S is the sick people who do have Corona and N are the people who tested negative.&lt;/p&gt;

&lt;p&gt;Let's assume that the girl called Sara is in the N set which means the CPR predicted that Sara is in the H set ( the set of healthy people)&lt;br&gt;
If Sara is tested negative we call this prediction "negative" and because she is sick and not healthy "she is in S set" then we say the prediction is False -&amp;gt; False-negative.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the prediction of what we are &lt;strong&gt;, not&lt;/strong&gt; trying to find (or the opposite of what we want to predict) is right we call it negative.&lt;/li&gt;
&lt;li&gt;When the reality does not match the prediction we call it False&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So |H| ‚à© |N| = False Negative&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#someone-who-does-not-have-corona-but-his-test-for-corona-is-positive"&gt;
  &lt;/a&gt;
  &lt;strong&gt;someone who does not have Corona but his test for Corona is positive.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The representation of this possibility is: |H| ‚à© |P|&lt;br&gt;
because H are the healthy people who don't have Corona and P are the people who tested positive.&lt;/p&gt;

&lt;p&gt;Again, the poor Sara is in the P set which means the CPR predicted that Sara is in the N set ( the set of sick people)&lt;br&gt;
If Sara is tested positive we call this prediction "positive" and because she is healthy "she is in H set" and not sick then we say the prediction is False -&amp;gt; False positive.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the prediction of what we are trying to find is right we call it positive.&lt;/li&gt;
&lt;li&gt;When the reality does not match the prediction we call it False&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So |H| ‚à© |P| = False positive&lt;/p&gt;

&lt;p&gt;Note that to make our prediction accurate we want to increase the True positive and True negative and decrease the False-positive and the False-negative.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DozUKEHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/603gtct19tmcicy2gjfi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DozUKEHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/603gtct19tmcicy2gjfi.jpg" alt="Confusion matrix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I know that it is a bit of a headache so here is another example you can think of:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;we are making an app with machine learning algorithms that predict if a word is a bad - nasty word.&lt;/p&gt;

&lt;p&gt;Again the word would be either bad word or not bad word and&lt;/p&gt;

&lt;p&gt;Because we are searching for bad words, if we predict one we call the prediction positive, and if we predict the opposite "not bad" we call the production negative.&lt;/p&gt;

&lt;p&gt;If our prediction is True then we call the prediction True, and if our prediction is False then we call the production False.&lt;/p&gt;

&lt;p&gt;So&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;our sample X is the words in a sentence.&lt;/li&gt;
&lt;li&gt;G is the set of not bad words. -&amp;gt; G= {x ‚àà X: X is not a bad word}.&lt;/li&gt;
&lt;li&gt;B is the set of bad words. -&amp;gt; B= {x ‚àà X: X is a bad word}.&lt;/li&gt;
&lt;li&gt;P is for the probability of bad words -&amp;gt; P= {x ‚àà X: positive for bad words}.&lt;/li&gt;
&lt;li&gt;P is for the probability of not bad words -&amp;gt; P= {x ‚àà X: negative for bad words}.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;|B| ‚à© |P|= True Positive&lt;/li&gt;
&lt;li&gt;|B| ‚à© |N|= False Negative&lt;/li&gt;
&lt;li&gt;|G| ‚à© |P|= False Positive&lt;/li&gt;
&lt;li&gt;|G| ‚à© |N|= True Negative&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bonus-"&gt;
  &lt;/a&gt;
  Bonus ü•≥:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Let's represent the Confusion Matrix&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JoQ_NQHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfkwdmk1dwewsksqe8fb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoQ_NQHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfkwdmk1dwewsksqe8fb.png" alt="venn"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;References: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/datasciencemathskills"&gt;Data Science Math Skills - Duke University | Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://machinelearningmastery.com/confusion-matrix-machine-learning/"&gt;What is a Confusion Matrix in Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>datascience</category>
      <category>machinelearning</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Sertifika ≈ûablonlarƒ±</title>
      <author>Fatih Arslan Tugay</author>
      <pubDate>Tue, 31 Aug 2021 11:40:04 +0000</pubDate>
      <link>https://dev.to/aciklab/sertifika-sablonlari-2fe8</link>
      <guid>https://dev.to/aciklab/sertifika-sablonlari-2fe8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#sertifika-%C5%9Fablonu-nedir"&gt;
  &lt;/a&gt;
  Sertifika ≈ûablonu Nedir
&lt;/h1&gt;

&lt;p&gt;Sertifika ≈ûablonu (Certificate Template), sertifika yetkilisinin (Certification Authority, CA) temel bir par√ßasƒ±dƒ±r. Bu ≈üablonlar; sertifika kaydƒ±nƒ±n, kullanƒ±mƒ±nƒ±n ve y√∂netiminin kurallarƒ±nƒ± i√ßeren bir k√ºme ve sertifika ilkesinin √∂nemli bir √∂gesidir. ≈ûablonlar, forest (orman) i√ßerisindeki t√ºm CA'lar tarafƒ±ndan kullanƒ±lmak √ºzere Active  Directory Etki Alanƒ± Hizmetleri'nde (Active Directory Domain Services, AD DS) depolanƒ±r. Bu durum, sertifika ilkesinin t√ºm ormanda tutarlƒ± bir ≈üekilde uygulanmasƒ±nƒ± saƒülar.&lt;/p&gt;

&lt;p&gt;CA, sertifikalar ile ilgili bir istek (sertifika verme veya yenileme gibi) aldƒ±ƒüƒ±nda bu isteƒüi ger√ßekle≈ütirmek i√ßin bir dizi kurallara ve ayarlara uymasƒ± gerekir. Bu kurallar kimi zaman basit, kimi zaman da karma≈üƒ±k olabileceƒüi gibi t√ºm kullanƒ±cƒ±lara veya yalnƒ±zca belirli √∂zelliklere filtrelenmi≈ü kullanƒ±cƒ±lara/gruplara uygulanabilir. ƒ∞≈üte sertifika ≈üablonlarƒ± da CA'nƒ±n sertifikalar ile ilgili gelen isteklerde uyacaƒüƒ± bu kurallar ve ayarlardƒ±r. Ayrƒ±ca sertifika ≈üablonu, bu isteƒüi g√∂nderen istemciye de sertifika isteƒüinin hangi kurallara g√∂re olu≈üturulup g√∂nderileceƒüine ili≈ükin y√∂nergeler de verir.&lt;/p&gt;

&lt;p&gt;Sertifika ≈üablonlarƒ± Windows Server makinelerde &lt;code&gt;run -&amp;gt; mmc -&amp;gt; certificate templates&lt;/code&gt; kƒ±smƒ±nda g√∂r√ºnt√ºlenebilir. Burada sertifika yetkilisi kendisi sertifika ≈üablonu olu≈üturmamƒ±≈ü olsa bile; varsayƒ±lan olarak √ßoƒüu kurulu≈üun gereksinimlerini kar≈üƒ±layacak ≈üekilde tasarlanmƒ±≈ü, √ße≈üitli, √∂nceden yapƒ±landƒ±rƒ±lmƒ±≈ü sertifika ≈üablonlarƒ± vardƒ±r. Ayrƒ±ca yine varsayƒ±lan olarak, bir sunucuya CA y√ºklendiƒüinde Sertifika ≈ûablonlarƒ± ek bile≈üeni de otomatik olarak y√ºklenir. Active Directory Sertifika Hizmetleri (AD CS) ara√ßlarƒ±nƒ± y√ºklemek i√ßin Sunucu Y√∂neticisi kullanƒ±larak Sertifika ≈ûablonlarƒ± ek bile≈üeni farklƒ± bir sunucuya y√ºklenebilir. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k9W315v1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7vp4fcnpflkk484jno9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k9W315v1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7vp4fcnpflkk484jno9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sertifika-%C5%9Fablonu-olu%C5%9Fturma"&gt;
  &lt;/a&gt;
  Sertifika ≈ûablonu Olu≈üturma
&lt;/h1&gt;

&lt;p&gt;Varolan bir ≈üablonu √ßoƒüaltarak (duplicate) ve bu ≈üablonun √∂zelliklerini yeni ≈üablon i√ßin varsayƒ±lan olarak kullanarak bir sertifika ≈üablonu olu≈üturabilirsiniz. Farklƒ± t√ºrdeki sertifika yetkilileri (CA) farklƒ± sertifika ≈üablonlarƒ±nƒ± desteyebilmektedir. √ñrneƒüin bazƒ± sertifika ≈üablonlarƒ± yalnƒ±zca Windows Server 2003  √ßalƒ±≈ütƒ±ran kurulu≈ü CA'larƒ± tarafƒ±ndan verilip y√∂netilebilirken, bazƒ±larƒ± i√ßin CA'nƒ±n Windows Server 2008 √ßalƒ±≈ütƒ±rƒ±yor olmasƒ± gerekebilir. Bu sebeple gereksinimlerinizi en uygun ≈üekilde kar≈üƒ±layan bir sertifika ≈üablonu bulup onu √ßoƒüaltarak kendi ≈üablonunuzu olu≈üturmak i√ßin varolan sertifika ≈üablonlarƒ±nƒ± iyi bir bi√ßimde incelemeniz gerekir. Ayrƒ±ca sertifika ≈üablonu olu≈üturabilmek i√ßin &lt;strong&gt;Domain Admins veya e≈üdeƒüer bir grup √ºyeliƒüi&lt;/strong&gt; olmasƒ± gerekir.&lt;/p&gt;

&lt;p&gt;Yeni bir sertifika ≈üablonu olu≈üturmak i√ßin yapmanƒ±z gerekenler sƒ±rasƒ±yla:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;run -&amp;gt; mmc -&amp;gt; certificate templates&lt;/code&gt; kƒ±smƒ±nƒ± a√ßarak Sertifika ≈ûablonlarƒ± ek bile≈üenine giriyoruz.&lt;/li&gt;
&lt;li&gt;Gerekli incelemelerden sonra √ßoƒüaltƒ±lacak ≈üablonu saƒü tƒ±klatarak &lt;strong&gt;Yineleme ≈ûablonu&lt;/strong&gt; se√ßeneƒüini tƒ±klatƒ±yoruz.&lt;/li&gt;
&lt;li&gt;A√ßƒ±lan ekranda, yukarƒ±da da bahsedildiƒüi gibi, &lt;strong&gt;desteklenecek olan en d√º≈ü√ºk CA s√ºr√ºm√ºn√º&lt;/strong&gt; se√ßiyoruz. &lt;/li&gt;
&lt;li&gt;General kƒ±smƒ±nda sertifika ≈üablonumuz i√ßin &lt;strong&gt;yeni bir isim&lt;/strong&gt; giriyoruz.

&lt;ul&gt;
&lt;li&gt;Bu kƒ±sƒ±mdaki &lt;strong&gt;Active Directory'de sertifika yayƒ±mla&lt;/strong&gt; se√ßeneƒüi, sertifika ≈üablonuyla ilgili bilgilerin kurulu≈üun tamamƒ±nda kullanƒ±ma sunulup sunulmayacaƒüƒ±nƒ± belirler. &lt;strong&gt;Bu se√ßenek i≈üaretlendiƒüinde sertifika LDAP veritabanƒ±ndan eri≈üilebilir hale gelir.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Gerekli deƒüi≈üiklikler varsa yaptƒ±ktan sonra &lt;strong&gt;Tamam&lt;/strong&gt; diyerek i≈ülemi tamamƒ±yoruz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Benzer ≈üekilde silmek istediƒüimiz bir ≈üablon varsa saƒü tƒ±klatƒ±p &lt;strong&gt;Sil&lt;/strong&gt; ve &lt;strong&gt;Evet&lt;/strong&gt; diyerek silebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B3hJKmCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7t7n1v14rreigz2rmfi2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B3hJKmCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7t7n1v14rreigz2rmfi2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sertifika-%C5%9Fablonlar%C4%B1n%C4%B1-y%C3%B6netme"&gt;
  &lt;/a&gt;
  Sertifika ≈ûablonlarƒ±nƒ± Y√∂netme
&lt;/h1&gt;

&lt;p&gt;Yeni bir sertifika ≈üablonu olu≈üturduƒüunuzda, gerek genel √∂zelliklerini gerekse detaylƒ± ayarlarƒ±nƒ± √∂zelle≈ütirmek m√ºmk√ºnd√ºr. Bu kƒ±sƒ±mda sertifika ≈üablonlarƒ±nƒ±n bazƒ± alt √∂zelliklerini a√ßƒ±klayacaƒüƒ±z.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uzant%C4%B1lar"&gt;
  &lt;/a&gt;
  Uzantƒ±lar
&lt;/h2&gt;

&lt;p&gt;Sertifika ≈üablonlarƒ±, kullanƒ±mlarƒ±nƒ± d√ºzenlemeye yarayan birtakƒ±m uzantƒ±lar kullanƒ±larak √∂zelle≈ütirilebilir. Bu uzantƒ±lardan bazƒ±larƒ±nƒ± a√ßƒ±klamak gerekirse:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Temel kƒ±sƒ±tlamalar&lt;/strong&gt; CA sertifikalarƒ±nƒ±n yalnƒ±zca belirli uygulamalarda kullanƒ±lmasƒ±nƒ± saƒülamak i√ßin kullanƒ±lƒ±r.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verme ilkeleri&lt;/strong&gt; sertifika verirken uygulanan bir grup y√∂netim kuralƒ±dƒ±r. Bunlar, sertifikada CA'da tanƒ±mlanan bir nesne tanƒ±mlayƒ±cƒ±sƒ±yla (OID) g√∂sterilir. Bu nesne tanƒ±mlayƒ±cƒ±sƒ± verilen sertifikaya eklenir. ƒ∞lgili, sertifikasƒ±nƒ± g√∂sterdiƒüinde verme ilkesini doƒürulamak ve s√∂z konusu verme ilkesi d√ºzeyinin istenen eylemi ger√ßekle≈ütirmek i√ßin yeterli olup olmadƒ±ƒüƒ±nƒ± belirlemek √ºzere hedef tarafƒ±ndan incelenebilir.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Uygulama ilkeleri&lt;/strong&gt; belirli ama√ßlar i√ßin hangi  sertifikalarƒ±n kullanƒ±labileceƒüi konusunda karar vermeniz i√ßin size √∂nemli bir olanak sunar. Bu da istenmeyen ama√ßlarla yanlƒ±≈ü  kullanƒ±lmalarƒ± kaygƒ±sƒ± ta≈üƒ±madan geni≈ü √∂l√ß√ºde sertifikalar vermeniz  olanak saƒülar. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uygulama ilkelerine bazen geni≈ületilmi≈ü anahtar kullanƒ±mƒ± veya geli≈ümi≈ü anahtar kullanƒ±mƒ± da denir. Ortak anahtar altyapƒ±sƒ± (Public Key Infrastructure, PKI) uygulamalarƒ±nƒ±n bazƒ± uygulanƒ±≈ülarƒ± uygulama ilkelerini yorumlayamadƒ±ƒüƒ±ndan, Windows Server tabanlƒ± bir CA tarafƒ±ndan verilen sertifikalarda uygulama ilkeleri ve geli≈ümi≈ü anahtar kullanƒ±mƒ± b√∂l√ºmlerinin her ikisi de g√∂r√ºn√ºr.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Anahtar kullanƒ±mƒ±&lt;/strong&gt; bir kƒ±sƒ±tlama y√∂ntemidir ve hangi sertifikanƒ±n  ne ama√ßla kullanƒ±lacaƒüƒ±nƒ± belirler. Bu da y√∂neticinin, yalnƒ±zca belirli g√∂revler i√ßin kullanƒ±labilecek sertifikalar vermesine olanak saƒülar. Sertifikanƒ±n hedeflenen amacƒ± dƒ±≈üƒ±ndaki kullanƒ±mƒ±nƒ± denetlemek i√ßin sertifikalara otomatik olarak kƒ±sƒ±tlamalar konulur. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Anahtar ar≈üivleme&lt;/strong&gt; sertifikalar verildiƒüi zaman bir ilgilinin anahtarlarƒ±nƒ± ≈üifreleyip CA veritabanƒ±nda depolamanƒ±za olanak saƒülar. √á√ºnk√º ilgili ki≈üiler √∂zel anahtarlarƒ±nƒ±  kaybettiƒüinde, ilgili genel anahtarla kalƒ±cƒ± olarak ≈üifrelenen bilgilere eri≈üilemez. Bir ilgili √∂zel anahtarlarƒ±nƒ± kaybederse, bilgiler veritabanƒ±nda alƒ±narak ilgiliye saƒülanabilir. Bu da ≈üifrelenen bilgilerin kaybolmadan kurtarƒ±lmasƒ±nƒ± saƒülar.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#i%CC%87stek-i%CC%87%C5%9Fleme"&gt;
  &lt;/a&gt;
  ƒ∞stek ƒ∞≈üleme
&lt;/h2&gt;

&lt;p&gt;ƒ∞stek ƒ∞≈üleme sekmesi bir sertifika ≈üablonunun amacƒ±nƒ±,  desteklenen ≈üifreleme hizmeti saƒülayƒ±cƒ±larƒ±nƒ± (CSP), en az anahtar  uzunluƒüunu, verilebilirliƒüini, otomatik kayƒ±t ayarlarƒ±nƒ± ve g√º√ßl√º √∂zel anahtar korumasƒ± gerekip gerekmeyeceƒüini tanƒ±mlar.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sertifika amacƒ±, sertifikanƒ±n hedeflenen birincil kullanƒ±mƒ±nƒ± tanƒ±mlar ve a≈üaƒüƒ±daki d√∂rt ayardan biri olabilir.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ayar&lt;/th&gt;
&lt;th&gt;Ama√ß&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;≈ûifreleme&lt;/td&gt;
&lt;td&gt;≈ûifreleme ve ≈üifre √ß√∂zme i√ßin ≈üifreleme anahtarlarƒ± i√ßerir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ƒ∞mza&lt;/td&gt;
&lt;td&gt;Yalnƒ±zca verileri imzalamaya y√∂nelik ≈üifreleme anahtarlarƒ± i√ßerir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ƒ∞mza ve ≈üifreleme&lt;/td&gt;
&lt;td&gt;Verilerin ≈üifrelenmesi, ≈üifresinin √ß√∂z√ºlmesi, ilk oturum a√ßma veya  verileri dijital olarak imzalama dahil olmak √ºzere bir sertifikanƒ±n  ≈üifreleme anahtarƒ±nƒ±n birincil kullanƒ±mlarƒ±nƒ± kapsar.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ƒ∞mza ve akƒ±llƒ± kartla oturum a√ßma&lt;/td&gt;
&lt;td&gt;Akƒ±llƒ± kartla ilk oturum a√ßmaya ve verileri dijital olarak imzalamaya olanak saƒülar; veri ≈üifreleme i√ßin kullanƒ±lamaz.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Sertifika yetkilileri (CA), sertifika verildiƒüinde bir ilgilinin anahtarlarƒ±nƒ± kendi veritabanlarƒ±nda ar≈üivleyebilir. ƒ∞lgililer anahtarlarƒ±nƒ± kaybederse, bilgiler veritabanƒ±ndan alƒ±narak ilgiliye g√ºvenli ≈üekilde saƒülanabilir. Bununla ilgili ayarlar da a≈üaƒüƒ±da a√ßƒ±klanmƒ±≈ütƒ±r. &lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ayar&lt;/th&gt;
&lt;th&gt;Ama√ß&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ƒ∞lgilinin ≈üifreleme √∂zel anahtarƒ±nƒ± ar≈üivleme&lt;/td&gt;
&lt;td&gt;Veren CA anahtar ar≈üivleme i√ßin yapƒ±landƒ±rƒ±lƒ±rsa, ilgilinin √∂zel anahtarƒ± ar≈üivlenir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;√ñzel anahtarƒ±n verilmesine izin ver&lt;/td&gt;
&lt;td&gt;ƒ∞lgilinin √∂zel anahtarƒ±, yedekleme veya ba≈üka bir bilgisayara aktarƒ±m ama√ßlƒ± olarak bir dosyaya verilebilir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ƒ∞ptal edilen ya da s√ºresi dolan sertifikalarƒ± sil (ar≈üivleme)&lt;/td&gt;
&lt;td&gt;Bir sertifika s√ºre sonu veya iptal nedeniyle yenilenirse, daha √∂nce  verilen sertifika ilgilinin sertifika deposundan kaldƒ±rƒ±lƒ±r. Varsayƒ±lan  olarak bu se√ßenek etkin deƒüildir ve sertifika ar≈üivlenir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Konunun i√ßerdiƒüi simetrik algoritmalarƒ± i√ßer&lt;/td&gt;
&lt;td&gt;ƒ∞lgili sertifikayƒ± istediƒüinde, ilgili desteklenen simetrik  algoritmalarƒ±n listesini saƒülayabilir. Bu se√ßenek veren CA'nƒ±n, s√∂z  konusu sunucu tarafƒ±ndan tanƒ±nmasa veya desteklenmese bile bu  algoritmalarƒ± sertifikaya eklemesine olanak saƒülar.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;ƒ∞stek ƒ∞≈üleme sekmesi ayrƒ±ca, bir sertifika ≈üablonu  i√ßin bu tabloda a√ßƒ±klanan bazƒ± kullanƒ±cƒ± girdisi ayarlarƒ±nƒ±n da  tanƒ±mlanmasƒ±na olanak saƒülar. &lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ayar&lt;/th&gt;
&lt;th&gt;Ama√ß&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Herhangi bir kullanƒ±cƒ± girdisine gerek kalmadan nesne kaydƒ±nƒ± yap&lt;/td&gt;
&lt;td&gt;Bu se√ßenek, herhangi bir kullanƒ±cƒ± m√ºdahalesi olmadan otomatik kayda  izin verir ve hem bilgisayar, hem de kullanƒ±cƒ± sertifikalarƒ± i√ßin  varsayƒ±lan ayardƒ±r.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kayƒ±t sƒ±rasƒ±nda kullanƒ±cƒ±ya sor&lt;/td&gt;
&lt;td&gt;Bu se√ßenek devre dƒ±≈üƒ± bƒ±rakƒ±ldƒ±ƒüƒ±nda, kullanƒ±cƒ±larƒ±n sertifika  ≈üablonuna dayalƒ± bir sertifikanƒ±n y√ºklemesi i√ßin herhangi bir girdi  saƒülamasƒ± gerekmez.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kayƒ±t sƒ±rasƒ±nda kullanƒ±cƒ±ya sor ve √∂zel anahtar kullanƒ±ldƒ±ƒüƒ±nda kullanƒ±cƒ± girdisi iste&lt;/td&gt;
&lt;td&gt;Bu se√ßenek, kullanƒ±cƒ±nƒ±n kendi √∂zel anahtarƒ±nda g√º√ßl√º bir √∂zel  anahtar koruma parolasƒ± ayarlamasƒ±na olanak saƒülar ve bu parolanƒ±n  (anahtar olu≈üturulurken ve sertifika ve √∂zel anahtar her  kullanƒ±ldƒ±ƒüƒ±nda) kullanƒ±cƒ± tarafƒ±ndan kullanƒ±lmasƒ±nƒ± zorunlu kƒ±lar.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#%C5%9Fifreleme"&gt;
  &lt;/a&gt;
  ≈ûifreleme
&lt;/h2&gt;

&lt;p&gt;≈ûifreleme sekmesi, a≈üaƒüƒ±daki √∂zellikleri yapƒ±landƒ±rmak i√ßin kullanƒ±lƒ±r:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;√ñzellik&lt;/th&gt;
&lt;th&gt;A√ßƒ±klama&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Algoritma adƒ±&lt;/td&gt;
&lt;td&gt;Yayƒ±mlanan sertifikanƒ±n anahtar √ßiftinin destekleyeceƒüi bir algoritma se√ßin. Bu liste yalnƒ±zca, ƒ∞stek ƒ∞≈üleme sekmesinde se√ßilen sertifika amacƒ± i√ßin gerekli ≈üifreleme i≈ülemlerini destekleyen algoritmalarƒ± g√∂r√ºnt√ºler.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;En d√º≈ü√ºk anahtar boyutu.&lt;/td&gt;
&lt;td&gt;Belirlenen algoritmayla kullanƒ±lan anahtarlar i√ßin gereken en az boyutu belirtmenize olanak saƒülar. Varsayƒ±lan olarak, se√ßilen  algoritma i√ßin bilgisayarda desteklenen anahtar uzunluƒüu alt sƒ±nƒ±rƒ±  kullanƒ±lƒ±r.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Saƒülayƒ±cƒ±lar&lt;/td&gt;
&lt;td&gt;Bu listede bilgisayarda bulunan ve a≈üaƒüƒ±daki yapƒ±landƒ±rma se√ßeneklerinin bir bile≈üimiyle belirtilen √∂l√ß√ºte uyan t√ºm saƒülayƒ±cƒ±lar bulunur.&lt;br&gt;&lt;strong&gt;≈ûifreleme&lt;/strong&gt; sekmesindeki &lt;strong&gt;Algoritma adƒ±&lt;/strong&gt; ve &lt;strong&gt;En az anahtar boyutu&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;ƒ∞stek ƒ∞≈üleme&lt;/strong&gt; sekmesindeki &lt;strong&gt;Ama√ß&lt;/strong&gt; ve &lt;strong&gt;√ñzel anahtar verilebilsin&lt;/strong&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Karma algoritma&lt;/td&gt;
&lt;td&gt;Geli≈ümi≈ü bir karma algoritma se√ßmenize olanak saƒülar.  Varsayƒ±lan olarak AES-GMAC, MD2, MD4, MD5, SHA1, SHA256, SHA384 ve SHA512 algoritmalarƒ± kullanƒ±labilir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ba≈üka imza bi√ßimi kullan&lt;/td&gt;
&lt;td&gt;RSA algoritmasƒ± se√ßildiƒüinde, bu onay kutusu bu ≈üablon i√ßin olu≈üturulan  sertifika isteklerinin PKCS #1 V2.1 bi√ßiminde ayrƒ± bir imza i√ßerdiƒüini  belirtmenize olanak saƒülar.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#%C5%9Fablonlar%C4%B1-ba%C5%9Fkalar%C4%B1yla-de%C4%9Fi%C5%9Ftirme"&gt;
  &lt;/a&gt;
  ≈ûablonlarƒ± Ba≈ükalarƒ±yla Deƒüi≈ütirme
&lt;/h2&gt;

&lt;p&gt;Bazen, istemcilere verilmi≈ü olan bir sertifika t√ºr√ºn√ºn √∂zelliklerini deƒüi≈ütirmek isteyebilirsiniz. Bunu, s√∂z konusu sertifikanƒ±n amacƒ±na y√∂nelik olarak g√ºncelle≈ütirilmi≈ü bir sertifika ≈üablonu olu≈üturarak ve eski ≈üablona dayalƒ± sertifikalarƒ±n ilgililerinin yeni ≈üablona dayalƒ± yeni sertifikalarƒ± almasƒ±nƒ± istediƒüinizi belirterek yapabilirsiniz. &lt;strong&gt;Bu yordam, ilgilileri √∂zg√ºn sertifika ≈üablonunda belirtilen yenileme tarihinden √∂nce yeni bir sertifika almaya zorlar.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C3%B6zne-adlar%C4%B1"&gt;
  &lt;/a&gt;
  √ñzne Adlarƒ±
&lt;/h2&gt;

&lt;p&gt;Bir sertifikayla ili≈ükilendirilmi≈ü √∂zel anahtarƒ±n sahibi √∂zne olarak bilinir. Bu bir kullanƒ±cƒ±, program veya herhangi bir nesne, bilgisayar  ya da hizmet olabilir. ƒ∞lgili adƒ±, ilgilinin kim veya ne olduƒüuna baƒülƒ± olarak √ße≈üitlilik  g√∂sterebildiƒüinden, sertifika isteƒüinde ilgili adƒ± saƒülanƒ±rken belirli bir esneklik gerekir. Windows, AD DS'de depolanan ilgili bilgilerinden ilgili adƒ±nƒ± otomatik olarak olu≈üturabileceƒüi gibi, ilgili adƒ± ilgili tarafƒ±ndan el ile de saƒülanabilir (√∂rneƒüin, sertifika isteƒüi olu≈üturup g√∂ndermek i√ßin sertifika kaydƒ± Web sayfalarƒ± kullanƒ±larak). &lt;/p&gt;

&lt;p&gt;Bu sekmede:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;ƒ∞stekte saƒülanmƒ±≈ü&lt;/strong&gt; se√ßeneƒüi belirlendiƒüinde, sertifika yenileme isteƒüine konu adƒ± ekleme g√∂revini kolayla≈ütƒ±rmak ve bilgisayar sertifikalarƒ±nƒ±n otomatik olarak yenilenmesini saƒülamak i√ßin, &lt;strong&gt;otomatik kayƒ±t yenileme istekleri i√ßin varolan sertifikalarƒ±n konu bilgisini kullan&lt;/strong&gt; se√ßeneƒüi kullanƒ±labilir. Varolan sertifikalardaki konu bilgileri, kullanƒ±cƒ± sertifikalarƒ±nƒ±n otomatik yenilenmesi i√ßin kullanƒ±lmaz.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Otomatik kayƒ±t yenileme istekleri i√ßin varolan sertifikalarƒ±n konu bilgisini kullan&lt;/strong&gt; se√ßeneƒüi, sertifika kayƒ±t istemcisinin, otomatik olarak yenileme istekleri olu≈üturulurken veya Sertifikalar ek bile≈üeni kullanƒ±lƒ±rken aynƒ± sertifika ≈üablonunu temel alan varolan bilgisayar sertifikasƒ±ndan  konu adƒ± ve konu diƒüer adƒ± bilgilerini okumasƒ±na neden olur.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Bu Active Directory bilgisinden olu≈ütur&lt;/strong&gt; se√ßeneƒüi belirlendiƒüinde ek se√ßeneklerin yapƒ±landƒ±rƒ±lmasƒ± gerekir.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sertifika-%C5%9Fablonu-sunucusu"&gt;
  &lt;/a&gt;
  Sertifika ≈ûablonu Sunucusu
&lt;/h2&gt;

&lt;p&gt;ƒ∞nternet Protokol√º g√ºvenliƒüi (IPsec) zorlamasƒ± ile Aƒü Eri≈üim Korumasƒ± (NAP) daƒüƒ±tƒ±mlarƒ± gibi y√ºksek hacimli sertifika verme senaryolarƒ±, benzersiz ortak anahtar altyapƒ±sƒ± (PKI) gereksinimleri olu≈üturur. Bu gereksinimleri kar≈üƒ±lamak i√ßin, sertifika ≈üablonlarƒ±nƒ± y√ºksek hacimli CA tarafƒ±ndan kullanƒ±lacak ≈üekilde yapƒ±landƒ±rmak √ºzere, Windows Server 2008 R2 uygulamasƒ±nda sunulan a≈üaƒüƒ±daki se√ßenekler kullanƒ±labilir. Bu se√ßenekler, bir sertifika ≈üablonun √∂zellik sayfasƒ±ndaki &lt;strong&gt;Sunucu&lt;/strong&gt; sekmesinde bulunur.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Sertifikalarƒ± ve istekleri CA veritabanƒ±nda depolama:&lt;/strong&gt; Y√ºksek hacimli senaryolarda verilen sertifikalarƒ±n kullanƒ±m s√ºresi, normalde verildikten sonraki birka√ß saat i√ßinde sonra erer ve bunlarƒ± veren CA, y√ºksek hacimli sertifika istekleri i≈üler. Varsayƒ±lan olarak, CA veritabanƒ±nda her isteƒüin ve verilen her sertifikanƒ±n kaydƒ± depolanƒ±r. Y√ºksek hacimli istekler, CA veritabanƒ±nƒ±n b√ºy√ºme hƒ±zƒ±nƒ± ve y√∂netim maliyetini artƒ±rƒ±r. &lt;strong&gt;Sertifikalarƒ± ve istekleri CA veritabanƒ±nda depolama&lt;/strong&gt; se√ßeneƒüi, ≈üablonu yapƒ±landƒ±rarak, CA'nƒ±n sertifika isteklerini CA veritabanƒ±na kayƒ±t eklemeden i≈ülemesini saƒülar. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Verilen sertifikalara iptal bilgilerini ekleme:&lt;/strong&gt; Sertifikalarƒ±n bazƒ± y√ºksek hacimli CA'lar tarafƒ±ndan iptali  yararlƒ± deƒüildir, √ß√ºnk√º sertifikalarƒ±n kullanƒ±m s√ºresi, verildikten  sonraki birka√ß saat i√ßinde sona erer. &lt;strong&gt;Verilen sertifikalara iptal bilgilerini ekleme&lt;/strong&gt;  se√ßeneƒüi, ≈üablonu yapƒ±landƒ±rarak, CA'nƒ±n iptal bilgilerini verilen sertifikalarƒ±n dƒ±≈üƒ±nda tutmasƒ±nƒ± saƒülar. Bu y√∂ntem, sertifika doƒürulamasƒ± sƒ±rasƒ±nda iptal durumunun denetlenmesini √∂nleyerek doƒürulama s√ºresini kƒ±saltƒ±r.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Sertifikalarƒ± ve istekleri CA veritabanƒ±nda depolama&lt;/strong&gt; se√ßeneƒüi kullanƒ±ldƒ±ƒüƒ±nda bu se√ßeneƒüin de kullanƒ±lmasƒ± √∂nerilir.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#sertifika-%C5%9Fablonlar%C4%B1-da%C4%9F%C4%B1tma"&gt;
  &lt;/a&gt;
  Sertifika ≈ûablonlarƒ± Daƒüƒ±tma
&lt;/h1&gt;

&lt;p&gt;Bir CA olu≈üturduƒüunuzda, sertifika ≈üablonlarƒ± AD DS'de depolanƒ±r ve ormandaki t√ºm kurulu≈ü CA'larƒ±nƒ±n kullanƒ±mƒ±na sunulabilir. Bir CA, Windows Server i≈ületim sisteminin daha yeni bir s√ºr√ºm√ºne y√ºkseltildiƒüinde, bu y√∂ntem sertifika ≈üablonlarƒ±yla ilgili √ßoƒüaltma, g√ºvenlik y√∂netimi ve y√ºkseltme i≈ülemlerini kolayla≈ütƒ±rƒ±r. Bunun i√ßin, k√∂k etki alanƒ±nƒ±n Domain Admins grubunun t√ºm sertifika ≈üablonlarƒ±nda Tam Denetim izni olmasƒ± veya bu iznin ba≈üka bir kullanƒ±cƒ± veya gruba verilmi≈ü olmasƒ± gerekir.&lt;/p&gt;

&lt;p&gt;Uygun sertifika ≈üablonlarƒ± planlanƒ±p olu≈üturulduktan sonra, bu  ≈üablonlar kurulu≈ütaki t√ºm etki alanƒ± denetleyicilerine otomatik olarak √ßoƒüaltƒ±lƒ±r. Bu √ßoƒüaltmanƒ±n tamamlanmasƒ± normalde yakla≈üƒ±k sekiz saat s√ºrer. Bu zaman dilimi nedeniyle, istemcilere sertifika ≈üablonuna dayalƒ± sertifikalar vermeden √∂nce sertifika ≈üablonunu olu≈üturmanƒ±z ve √ßoƒüaltƒ±lmasƒ±na izin vermeniz gerekir. Bu i≈ülemi yapmak i√ßin en iyi zaman, ortamƒ±nƒ±zƒ±n bo≈üta kaldƒ±ƒüƒ± s√ºredir. √áoƒüaltma tamamlanmadan ≈üablonlarƒ±n yapƒ±landƒ±rƒ±lmasƒ±nƒ±n ve sertifikalarƒ±n kullanƒ±lmasƒ±nƒ±n istenmeyen etkileri olabilir.&lt;/p&gt;

&lt;p&gt;Sertifikalarƒ±n CA tarafƒ±ndan verilebilmesi i√ßin, √∂nce sertifika ≈üablonunun bir CA'ya eklenmi≈ü olmasƒ± gerekir. CA'ya sertifika ≈üablonu eklemek i√ßin:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;run -&amp;gt; mmc -&amp;gt; certification authority&lt;/code&gt; kƒ±smƒ±nƒ± a√ßƒ±yoruz&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sertifika ≈ûablonlarƒ±&lt;/strong&gt;'nƒ± saƒü tƒ±klattƒ±ktan sonra &lt;strong&gt;Yeni&lt;/strong&gt;'yi tƒ±klatƒ±p ardƒ±ndan &lt;strong&gt;Verilecek Sertifika ≈ûablonu&lt;/strong&gt;'nu tƒ±klatƒ±yoruz.&lt;/li&gt;
&lt;li&gt;A√ßƒ±lan listede istediƒüimiz ≈üablonu se√ßerek Tamam'ƒ± i≈üaretliyoruz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UbVAAzd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfy0hjbbzjn0kp7rvr1t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UbVAAzd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfy0hjbbzjn0kp7rvr1t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Benzer ≈üekilde CA'dan silmek istediƒüimiz bir ≈üablon varsa &lt;strong&gt;Sertifika ≈ûablonlarƒ±&lt;/strong&gt;'na tƒ±klayƒ±p listeden istediƒüimiz ≈üablona saƒü tƒ±klayƒ±p &lt;strong&gt;Sil&lt;/strong&gt; ve &lt;strong&gt;Evet&lt;/strong&gt; diyerek silebiliriz. Bu i≈ülemler i√ßin &lt;strong&gt;Domain Admins veya Enterprise Admins veya bunlara e≈üdeƒüer bir grup √ºyeliƒüi&lt;/strong&gt; olmasƒ± gerekir.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Kaynaklar:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://forsenergy.com/"&gt;https://forsenergy.com/&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;a href="https://docs.microsoft.com/en-us/windows-server/networking/core-network-guide/cncg/server-certs/configure-the-server-certificate-template"&gt;https://docs.microsoft.com/en-us/windows-server/networking/core-network-guide/cncg/server-certs/configure-the-server-certificate-template&lt;/a&gt;&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.altaro.com/hyper-v/windows-ssl-certificate-templates/"&gt;https://www.altaro.com/hyper-v/windows-ssl-certificate-templates/&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>activedirectory</category>
      <category>windowsserver</category>
      <category>certificate</category>
      <category>template</category>
    </item>
    <item>
      <title>Sertifikalar ve Active Directory Sertifika Hizmetleri</title>
      <author>Fatih Arslan Tugay</author>
      <pubDate>Tue, 31 Aug 2021 11:38:41 +0000</pubDate>
      <link>https://dev.to/aciklab/sertifikalar-ve-active-directory-sertifika-hizmetleri-5aef</link>
      <guid>https://dev.to/aciklab/sertifikalar-ve-active-directory-sertifika-hizmetleri-5aef</guid>
      <description>&lt;h1&gt;
  &lt;a href="#sertifika-nedir"&gt;
  &lt;/a&gt;
  Sertifika Nedir?
&lt;/h1&gt;

&lt;p&gt;Sertifika; bir ortak anahtarƒ±n deƒüerini, kar≈üƒ±lƒ±k gelen √∂zel anahtarƒ± bulunduran ki≈üinin, aygƒ±tƒ±n veya hizmetin kimliƒüine baƒülayan, dijital olarak imzalanmƒ±≈ü bir deyimdir. Sertifikalarƒ±n yararlarƒ±ndan biri de, ana bilgisayarlarƒ±n, eri≈üim √∂nko≈üulu olarak kimliklerinin doƒürulanmasƒ± gereken baƒüƒ±msƒ±z √∂zneler i√ßin bir dizi parola tutma zorunluluƒüunun ortadan kalkmasƒ±dƒ±r. Bunun yerine ana bilgisayar, yalnƒ±zca sertifikayƒ± verenle g√ºven olu≈üturur.&lt;/p&gt;

&lt;p&gt;Sertifikalarƒ±n i√ßerdiƒüi bilgiler a≈üaƒüƒ±da sƒ±ralanmƒ±≈ütƒ±r:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;√ñznenin ortak anahtar deƒüeri,&lt;/li&gt;
&lt;li&gt;√ñznenin ad ve e-posta adresi gibi tanƒ±mlayƒ±cƒ± bilgileri,&lt;/li&gt;
&lt;li&gt;Ge√ßerlilik s√ºresi (sertifikanƒ±n ge√ßerli kabul edileceƒüi s√ºre),

&lt;ul&gt;
&lt;li&gt;Her sertifika, ge√ßerlilik s√ºresinin sƒ±nƒ±rlarƒ±nƒ± belirleyen bir &lt;strong&gt;Ge√ßerlilik Ba≈ülangƒ±cƒ±&lt;/strong&gt; ve &lt;strong&gt;Ge√ßerlilik Sonu&lt;/strong&gt; deƒüeri i√ßerir. Bir sertifikanƒ±n ge√ßerlilik s√ºresi dolduƒüunda, sertifikanƒ±n √∂znesi yeni bir sertifika istemek zorundadƒ±r. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Sertifikayƒ± verenin tanƒ±mlayƒ±cƒ± bilgileri,&lt;/li&gt;
&lt;li&gt;ƒ∞lgilinin ortak anahtarƒ± ile ilgilinin tanƒ±mlayƒ±cƒ± bilgileri arasƒ±ndaki  baƒülantƒ±nƒ±n ge√ßerliliƒüini doƒürulamaya yarayan, sertifikayƒ± verene ait  dijital imza.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sertifikalar; bir ki≈üinin veya nesnenin &lt;strong&gt;kimliƒüinin doƒürulanmasƒ±&lt;/strong&gt;, bilgilerin yalnƒ±zca ama√ßlanan ki≈üinin kullanmasƒ±nƒ± saƒülayan &lt;strong&gt;gizliliƒüin saƒülanmasƒ±&lt;/strong&gt;, yetkili olmayan okuyuculardan bilgilerin gizlenmesi (&lt;strong&gt;≈üifreleme&lt;/strong&gt;) ve inkar edememe, ileti b√ºt√ºnl√ºƒü√º gibi √∂zellikleri saƒülayan &lt;strong&gt;dijital imzalama&lt;/strong&gt; ama√ßlarƒ± ile kullanƒ±labilir. Bu ama√ßlara daha detaylƒ± bakmak gerekirse: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Kimlik doƒürulama,&lt;/strong&gt; ileti≈üimin daha g√ºvenli olmasƒ± i√ßin √ßok √∂nemlidir. ƒ∞leti≈üim kuran taraflar fiziksel olarak birbirlerini g√∂rmeyecekleri i√ßin aƒü √ºzerinde kimlik doƒürulama karma≈üƒ±k bir i≈ülemdir. Bu, ahlak dƒ±≈üƒ± bir ki≈üinin iletilere m√ºdahale etmesine ve diƒüer ki≈üi veya varlƒ±ƒüƒ± taklit  etmesine olanak verebilir.&lt;/li&gt;
&lt;li&gt;Herhangi bir aƒüda bilgisayarlar arasƒ±nda hassas bilgiler g√∂nderiliyorsa, kullanƒ±cƒ±lar verilerinin &lt;strong&gt;gizliliƒüini&lt;/strong&gt; saƒülamak i√ßin genellikle bir t√ºr ≈üifreleme kullanmak isteyeceklerdir.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;≈ûifreleme i≈ülemi&lt;/strong&gt;, deƒüerli bir e≈üyayƒ± saƒülam bir kutuya  kilitlemek gibi d√º≈ü√ºn√ºlebilir. Tam tersi olan ≈üifre √ß√∂zme bu kutuyu a√ßƒ±p deƒüerli √∂ƒüeyi almaya benzetilebilir. Bilgisayarlarda; e-posta iletisi,  diskteki dosyalar veya aƒü √ºzerinden aktarƒ±lan dosyalar i√ßindeki hassas  veriler bir anahtar yardƒ±mƒ±yla ≈üifrelenebilir. ≈ûifrelenen veri ve veriyi ≈üifrelemede kullanƒ±lan anahtarlar √ß√∂z√ºlemez.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dijital imza&lt;/strong&gt;, verinin b√ºt√ºnl√ºƒü√ºnden ve kaynaƒüƒ±ndan emin  olmak i√ßin kullanƒ±lan bir ara√ßtƒ±r. Dijital imza, imzalandƒ±ƒüƒ± zamandan beri verinin deƒüi≈ütirilmediƒüine dair g√º√ßl√º bir kanƒ±t ve veriyi imzalayan ki≈üinin veya varlƒ±ƒüƒ±n kimliƒüini doƒürulayan bir belgedir. Bu durum, en √∂nemli g√ºvenlik hizmetlerinden olan ve elektronik ticaret i≈ülemlerinde temel olan &lt;strong&gt;b√ºt√ºnl√ºk&lt;/strong&gt; ve &lt;strong&gt;inkar edememe&lt;/strong&gt; √∂zelliklerini saƒülar. Dijital imzalar genellikle, veriler d√ºz metin bi√ßiminde veya ≈üifrelenmemi≈ü olarak daƒüƒ±tƒ±ldƒ±ƒüƒ±nda kullanƒ±lƒ±r.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dijital sertifikalarƒ±n, tek ba≈üƒ±na bilgisayarlar ile aƒülar ve ƒ∞nternet √ºzerindeki rol√º hƒ±zla artmaktadƒ±r. Sertifikalar, √ßok az kullanƒ±cƒ± m√ºdahalesi ile veya herhangi bir kullanƒ±cƒ± m√ºdahalesi olmadan  kullanƒ±labilse de, sertifika i√ßeriklerini g√∂r√ºnt√ºlemek, anlamak ve bu i√ßeriklerin kullanƒ±mƒ±nƒ± y√∂netmek de √∂nemli olabilir. Bu ama√ßlarƒ± Sertifikalar ek bile≈üenini kullanarak ger√ßekle≈ütirebilirsiniz.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sertifika-ek-bile%C5%9Feni"&gt;
  &lt;/a&gt;
  Sertifika Ek Bile≈üeni
&lt;/h2&gt;

&lt;p&gt;Sertifika ek bile≈üeni, kullanƒ±cƒ±lar ve y√∂neticilerin bir kullanƒ±cƒ±, bilgisayar veya hizmet ile ili≈ükili sertifikalarƒ± g√∂r√ºnt√ºlemek ve y√∂netmek √ºzere kullanacaƒüƒ± birincil ara√ßtƒ±r. Kullanƒ±cƒ±nƒ±n sertifika istemesine, yenilemesine, bulmasƒ±na, g√∂r√ºnt√ºlemesine, ta≈üƒ±masƒ±na, kopyalamasƒ±na ve silmesine olanak saƒülar. Bunun yanƒ± sƒ±ra, kullanƒ±cƒ± Sertifika ek bile≈üenini kullanarak, a≈üaƒüƒ±daki g√∂revleri kolayla≈ütƒ±ran sihirbazlarƒ± ba≈ülatabilir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Yeni sertifikalara kaydolma&lt;/li&gt;
&lt;li&gt;Varolan sertifikalarƒ± yenileme&lt;/li&gt;
&lt;li&gt;Sertifika bulma&lt;/li&gt;
&lt;li&gt;Sertifika alma, verme veya yedekleme&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;√áoƒüu durumda, kullanƒ±cƒ±larƒ±n sertifikalarƒ±nƒ± ve sertifika depolarƒ±nƒ± ki≈üisel olarak y√∂netmeleri gerekmez. Bu i≈ülemler, y√∂neticiler, ilke ayarlarƒ± ve sertifika kullanan programlar aracƒ±lƒ±ƒüƒ±yla ger√ßekle≈ütirilebilir. Y√∂neticiler Sertifika ek bile≈üeninin birincil  kullanƒ±cƒ±larƒ±dƒ±r; bu nedenle, y√∂netme yetkileri olan diƒüer bilgisayar veya hizmetlere ili≈ükin sertifika depolarƒ±nƒ±n yanƒ± sƒ±ra kendi ki≈üisel sertifika depolarƒ±nda da √ßok √ße≈üitli sertifika y√∂netim g√∂revleri  ger√ßekle≈ütirebilirler. &lt;strong&gt;Kullanƒ±cƒ±lar yalnƒ±zca kendi ki≈üisel depolarƒ±ndaki sertifikalarƒ± y√∂netebilirler.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YssTj936--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vw6zhoyw5hphpm8myacf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YssTj936--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vw6zhoyw5hphpm8myacf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bilgisayar veya hizmet kullanƒ±cƒ± hesabƒ±nƒ±z i√ßin sertifikalarƒ± y√∂netme arasƒ±nda ge√ßi≈ü yapmak i√ßin, konsola (Microsoft Management Console, MMC) eklenmi≈ü ayrƒ± Sertifika ek bile≈üeni √∂rneklerinizin olmasƒ± gerekir.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sertifikalar%C4%B1-y%C3%B6netme"&gt;
  &lt;/a&gt;
  Sertifikalarƒ± Y√∂netme
&lt;/h2&gt;

&lt;p&gt;Sertifikalar genellikle, belirli bir bilgisayara, kullanƒ±cƒ±ya veya hizmete, belirli bir ama√ß, s√ºre ve genel olarak belirli alƒ±cƒ±lar i√ßin  verilir. Sonu√ß olarak, ek sertifikalar almanƒ±z, varolan sertifikalarƒ± yenilemeniz, bir sertifikanƒ±n √∂zelliklerini g√∂zden ge√ßirmeniz veya deƒüi≈ütirmeniz ya da sertifikalarƒ± ta≈üƒ±manƒ±z gereken zamanlar olabilir. Bu g√∂revlerin √ßoƒüu tek bir kullanƒ±cƒ±, bilgisayar veya hizmet i√ßin ger√ßekle≈ütirilebilse de, diƒüer g√∂revlerin bir y√∂netici tarafƒ±ndan  sunucuda otomatik olarak ger√ßekle≈ütirilmesi daha iyidir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Sertifika Alma:&lt;/strong&gt; Bir sertifikaya kaydolmak i√ßin, sertifikanƒ±n bir par√ßasƒ± olacak ortak anahtarla ili≈ükilendirilmi≈ü √∂zel anahtara eri≈üimi olan kullanƒ±cƒ±, bilgisayar veya hizmet tarafƒ±ndan bir sertifika isteƒüi yapƒ±lmasƒ± gerekir. Sistem y√∂neticiniz tarafƒ±ndan olu≈üturulan ortak anahtar ilkelerine baƒülƒ± olarak kullanƒ±cƒ±lar, bilgisayarlar ve hizmetler, kullanƒ±cƒ± m√ºdahalesi olmadan otomatik olarak sertifikalara kaydolabilir. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sertifika Yenileme:&lt;/strong&gt; Her sertifikanƒ±n bir ge√ßerlilik s√ºresi vardƒ±r. Ge√ßerlilik s√ºresinin sonunda, sertifika artƒ±k kabul edilebilir veya kullanƒ±labilir kimlik bilgisi olarak deƒüerlendirilmez. Sertifika ek bile≈üeni, bir Windows kurulu≈ü sertifika yetkilisi (CA) tarafƒ±ndan verilmi≈ü bir sertifikayƒ±, ge√ßerlilik s√ºresi dolmadan √∂nce veya dolduktan sonra Sertifika Yenileme Sihirbazƒ±'nƒ± kullanarak yenilemenize olanak tanƒ±r. Bir sertifikayƒ± yenilemeden √∂nce bilmeniz gerekenler ≈üunlardƒ±r:

&lt;ul&gt;
&lt;li&gt;Sertifika veren sertifika yetikilisi (CA)&lt;/li&gt;
&lt;li&gt;Sertifika i√ßin yeni bir ortak anahtar ve √∂zel anahtar √ßifti istiyorsanƒ±z, bu anahtar √ßiftini √ºretmek i√ßin kullanƒ±lmasƒ± gereken ≈üifreleme hizmeti saƒülayƒ±cƒ± (CSP)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sertifika G√∂r√ºnt√ºleme:&lt;/strong&gt; Sertifikalar bir√ßok ama√ß i√ßin yayƒ±mlanabilir ve kullanƒ±labilir. Sertifika depolarƒ±, sertifika bilgileri ve √∂zelliklerini; ar≈üivlenmi≈ü ve iptal edilmi≈ü sertifikalar hakkƒ±ndaki bilgileri g√∂zden ge√ßirmek yararlƒ± olabilir. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sertifika Ta≈üƒ±ma:&lt;/strong&gt; Bir√ßok uygulama yalnƒ±zca bir sertifika deposundaki sertifikalarƒ± arar. Bir sertifika gerek duyduƒüunuz bir sertifika deposunda deƒüilse, bu sertifikayƒ± bir depodan diƒüerine ta≈üƒ±yabilirsiniz.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sertifika Y√∂netimini Otomatikle≈ütirme:&lt;/strong&gt; Sertifikalarƒ±n ayrƒ± ayrƒ± y√∂netilmesi imkansƒ±z olmasa da zahmetli bir g√∂revdir. Bir√ßok kurulu≈ü, bir sunucuda yapƒ±landƒ±rƒ±lan ve bir etki alanƒ±ndaki, gruptaki veya kurulu≈ü birimindeki istemcilere uygulanan Grup ƒ∞lkesi (Group Policy) ayarlarƒ±nƒ± kullanarak sertifikalarƒ± y√∂netir.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#active-directory-sertifika-hizmetleri"&gt;
  &lt;/a&gt;
  Active Directory Sertifika Hizmetleri
&lt;/h1&gt;

&lt;p&gt;Active Directory Sertifika Hizmetleri (AD CS), ortak anahtar teknolojilerinden yararlanan yazƒ±lƒ±m g√ºvenliƒüi sistemlerinde kullanƒ±lan sertifikalarƒ±n verilmesine ve y√∂netilmesine y√∂nelik √∂zelle≈ütirilebilir  hizmetler saƒülar. Sertifika istekleri almak, isteklerdeki bilgileri ve istek sahibinin kimliƒüini doƒürulamak, sertifika vermek, sertifikalarƒ± iptal etmek ve sertifika iptal verileri yayƒ±mlamak √ºzere bir veya daha fazla sertifika yetkilisi (CA) olu≈üturmak i√ßin AD CS'yi kullanabilirsiniz. AD CS ile a≈üaƒüƒ±dakileri de yapabilirsiniz:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web kaydƒ±, Aƒü Aygƒ±tƒ± Kayƒ±t Hizmeti'ni ve √áevrimi√ßi Yanƒ±tlayƒ±cƒ± hizmetini kurma.&lt;/li&gt;
&lt;li&gt;Kullanƒ±cƒ±lar, bilgisayarlar ve y√∂nlendirici gibi aƒü aygƒ±tlarƒ± ile ilgili sertifikalarƒ±n kayƒ±t ve iptal i≈ülemlerini y√∂netme.&lt;/li&gt;
&lt;li&gt;Sertifika daƒüƒ±tmak ve y√∂netmek √ºzere Grup ƒ∞lkesi kullanma.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BMz2SdIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62gzxrkavz84o7wkcusu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BMz2SdIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62gzxrkavz84o7wkcusu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AD CS'yi tek bir CA i√ßin tek bir sunucuyla daƒüƒ±tabilseniz de, daƒüƒ±tƒ±mlarda k√∂k CA'lar, ilke CA'larƒ± ve sertifika veren CA'lar olarak yapƒ±landƒ±rƒ±lan birden √ßok sunucu ve √áevrimi√ßi Yanƒ±tlayƒ±cƒ±lar olarak yapƒ±landƒ±rƒ±lan ba≈üka sunucular bulunabilir.&lt;/p&gt;

&lt;p&gt;AD CS'yi y√∂netmek i√ßin a≈üaƒüƒ±daki MMC ek bile≈üenleri kullanƒ±labilir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Sertifika Yetkilisi:&lt;/strong&gt; CA'larƒ±, sertifika iptali ve sertifika kaydƒ± i≈ülemlerini y√∂netmek i√ßin birincil ara√ßtƒ±r.
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sertifika ≈ûablonlarƒ±:&lt;/strong&gt; Active Directory Etki Alanƒ± Hizmetleri'ne (AD DS) yayƒ±mlamak ve kurulu≈ü CA'larƒ±yla kullanmak √ºzere sertifika ≈üablonlarƒ±nƒ± √ßoƒüaltmak ve yapƒ±landƒ±rmak i√ßin kullanƒ±lƒ±r.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;√áevrimi√ßi Yanƒ±tlayƒ±cƒ±:&lt;/strong&gt; √áevrimi√ßi Sertifika Durum Protokol√º yanƒ±tlayƒ±cƒ±larƒ±nƒ± yapƒ±landƒ±rmak ve y√∂netmek i√ßin kullanƒ±lƒ±r.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Kurulu≈ü PKI'sƒ±:&lt;/strong&gt; Birden fazla CA'yƒ±, sertifika iptal listelerini ve yetkili bilgi eri≈üimi konumlarƒ±nƒ± izlemek ve AD DS'ye  yayƒ±mlanan AD CS nesnelerini y√∂netmek i√ßin kullanƒ±lƒ±r.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sertifikalar:&lt;/strong&gt; Bir bilgisayar, kullanƒ±cƒ± veya hizmetle ilgili sertifika depolarƒ±nƒ± g√∂r√ºnt√ºlemek ve y√∂netmek i√ßin kullanƒ±lƒ±r.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#pki-sistemi-sertifika-hiyerar%C5%9Fisi-ve-sertifika-yetkilisi-t%C3%BCrleri"&gt;
  &lt;/a&gt;
  PKI Sistemi, Sertifika Hiyerar≈üisi ve Sertifika Yetkilisi T√ºrleri
&lt;/h2&gt;

&lt;p&gt;Genel anahtar altyapƒ±sƒ± (PKI); genel anahtar ≈üifreleri kullanarak, elektronik i≈ülemlerde yer alan her varlƒ±ƒüƒ±n kimlik doƒürulamasƒ±nƒ± yapan ve ge√ßerliliƒüini doƒürulayan dijital sertifika, CA ve kayƒ±t yetkililerinden olu≈üan bir sistemdir. Microsoft PKI, √∂l√ßeklenebilen ve artan sayƒ±da ticari ve diƒüer CA √ºr√ºnleriyle uyumluluk sergileyen hiyerar≈üik bir CA modelini desteklemektedir.&lt;/p&gt;

&lt;p&gt;En basit bi√ßimiyle bir sertifika hiyerar≈üisi tek bir CA'dan olu≈üur. Bununla birlikte, hiyerar≈üilerde genellikle a√ßƒ±k√ßa tanƒ±mlanmƒ±≈ü √ºst/alt ili≈ükilerine sahip birden fazla CA bulunur. Bu modele g√∂re, alt CA'lar kendi √ºst√ºndeki CA tarafƒ±ndan verilen sertifikalarla onaylanƒ±r ve  b√∂ylece bir CA'nƒ±n genel anahtarƒ± kendi kimliƒüine baƒülanƒ±r. Bir hiyerar≈üide en √ºstte bulunan CA'ya &lt;strong&gt;k√∂k CA&lt;/strong&gt; denir. Bir k√∂k CA'nƒ±n altƒ±ndaki CA'ya da &lt;strong&gt;alt CA&lt;/strong&gt; denir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;K√∂k CA&lt;/strong&gt; bir kurulu≈üun PKI'sinde en √ßok g√ºvenilen CA t√ºr√º  anlamƒ±na gelir. K√∂k CA tehlikeyle kar≈üƒ±la≈üƒ±r veya yetkisiz bir varlƒ±ƒüa sertifika verirse, kurulu≈üunuzdaki sertifika tabanlƒ± t√ºm g√ºvenlik unsurlarƒ± saldƒ±rƒ±ya a√ßƒ±k duruma gelir. Bu nedenle, bir k√∂k CA'nƒ±n fiziksel g√ºvenliƒüi ve sertifika verme ilkesi  alt CA'lara g√∂re sƒ±kƒ±dƒ±r. K√∂k CA'lar g√ºvenli e-posta g√∂nderme gibi g√∂revler i√ßin son kullanƒ±cƒ±lara verilebilmekle birlikte, √ßoƒüu kurulu≈üta yalnƒ±zca alt CA adƒ± verilen ba≈üka CA'lara sertifika vermek i√ßin kullanƒ±lƒ±rlar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alt CA&lt;/strong&gt;, kurulu≈üunuzdaki ba≈üka bir CA tarafƒ±ndan kendisine sertifika verilen CA'dƒ±r. Tipik olarak bir alt CA, g√ºvenli e-posta, Web  tabanlƒ± kimlik doƒürulama veya akƒ±llƒ± kart kimlik doƒürulamasƒ± gibi belirli kullanƒ±mlar i√ßin sertifikalar verir. Alt CA'lar daha altta yer alan ba≈üka CA'lara da sertifika verebilir. B√∂ylece, bir k√∂k CA, k√∂k  tarafƒ±ndan sertifika verilen alt CA'lar ve diƒüer alt CA'lar tarafƒ±ndan sertifika verilen alt CA'lar birlikte bir sertifika hiyerar≈üisi olu≈ütururlar. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qaJNLjvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aq1tnhf8f1hleqek29uw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qaJNLjvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aq1tnhf8f1hleqek29uw.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CA hiyerar≈üisinin y√∂netim a√ßƒ±sƒ±ndan saƒüladƒ±ƒüƒ± bazƒ± yararlarƒ± saymak gerekirse:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Kullanƒ±m:&lt;/strong&gt; Sertifikalar, e-posta g√ºvenliƒüini saƒülama ve aƒü kimlik doƒürulamasƒ± gibi birtakƒ±m nedenlerle verilebilir. Bu kullanƒ±mlar a√ßƒ±sƒ±ndan verme ilkesi  farklƒ± olabilir ve bu ilkelerin y√∂netiminde temel olan farklƒ±lƒ±klardƒ±r.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Kurulu≈ü b√∂l√ºmleri:&lt;/strong&gt; Bir varlƒ±ƒüƒ±n kurulu≈ütaki rol√ºne baƒülƒ± olarak, farklƒ± sertifika verme ilkeleri s√∂z konusu olabilir. Bu ilkeleri ayƒ±rmak ve y√∂netmek i√ßin de alt CA'lar olu≈üturabilirsiniz.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Coƒürafi b√∂l√ºmler:&lt;/strong&gt; Kurulu≈ülarƒ±n fiziksel olarak bir√ßok yerde  varlƒ±klarƒ± olabilir. Bu yerler arasƒ±ndaki aƒü baƒülantƒ±larƒ±, yerlerin √ßoƒüu veya t√ºm√º i√ßin ayrƒ± alt CA'lar gerektirebilir.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Y√ºk dengeleme:&lt;/strong&gt; PKI'niz √ßok sayƒ±da sertifika vermek ve y√∂netmek i√ßin kullanƒ±lacaksa, yalnƒ±zca bir CA bulunmasƒ± bu tek CA i√ßin dikkate deƒüer bir aƒü y√ºk√ºne neden olabilir. Aynƒ± t√ºrden sertifikalar vermek i√ßin birden fazla alt CA kullanƒ±lmasƒ± aƒü y√ºk√ºn√º CA'lar arasƒ±nda daƒüƒ±tƒ±r.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Yedekleme ve hataya dayanƒ±klƒ±lƒ±k:&lt;/strong&gt; Birden fazla CA bulunmasƒ±, aƒüƒ±nƒ±zda kullanƒ±cƒ± isteklerini yanƒ±tlamak i√ßin her zaman kullanƒ±labilir durumda CA olmasƒ± olasƒ±lƒ±ƒüƒ±nƒ± artƒ±rƒ±r.&lt;/li&gt;
&lt;li&gt;G√ºvenlik ve kullanƒ±labilirlik arasƒ±ndaki dengeyi kurmak amacƒ±yla CA g√ºvenliƒüi ortamƒ±nƒ± &lt;strong&gt;esnek ≈üekilde yapƒ±landƒ±rma&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Kurulan g√ºven ili≈ükilerini ve diƒüer kƒ±sƒ±mlarƒ± etkilemeksizin CA hiyerar≈üisinin belirli bir kƒ±smƒ±nƒ± &lt;strong&gt;kapatma&lt;/strong&gt; yeteneƒüi. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows'da, bir k√∂k CA'yƒ± g√ºvenli kabul ediyorsanƒ±z, hiyerar≈üide ge√ßerli CA sertifikasƒ±na sahip olan her alt CA'yƒ± da g√ºvenli kabul etmi≈ü olursunuz. B√∂ylece, k√∂k CA bir kurulu≈üta √ßok √∂nemli bir g√ºven unsuru durumundadƒ±r ve buna g√∂re g√ºvenliƒüinin saƒülanmasƒ± gerekir.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Kaynaklar:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://forsenergy.com/"&gt;https://forsenergy.com/&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.firatboyan.com/Windows-Server-2012-R2-Certification-Authority-CA-Kurulumu.aspx"&gt;https://www.firatboyan.com/Windows-Server-2012-R2-Certification-Authority-CA-Kurulumu.aspx&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://docs.microsoft.com/tr-tr/learn/modules/implement-manage-active-directory-certificate-services/"&gt;https://docs.microsoft.com/tr-tr/learn/modules/implement-manage-active-directory-certificate-services/&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>activedirectory</category>
      <category>certificate</category>
      <category>adcs</category>
    </item>
    <item>
      <title>Absolute value Python - Everything you need to know</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 31 Aug 2021 11:32:23 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/absolute-value-python-everything-you-need-to-know-3dan</link>
      <guid>https://dev.to/hrishikesh1990/absolute-value-python-everything-you-need-to-know-3dan</guid>
      <description>&lt;p&gt;In this short tutorial, we cover the basics of the abs() Absolute value Python function. We look at how to use it along with a few real-world examples&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#absolute-value-python"&gt;Absolute Value Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#how-to-use-abs"&gt;How to use abs()&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Abs()&lt;/code&gt; is a built-in function that returns the absolute value of the argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#Output = 10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#absolute-value-python"&gt;
  &lt;/a&gt;
  Absolute Value Python:
&lt;/h2&gt;

&lt;p&gt;Absolute values in Python are used to return the absolute value of a number. What this essentially means is when a negative value is passed as an argument (eg: -10), Python returns its relevant positive number (eg: 10). &lt;/p&gt;

&lt;p&gt;To understand how it works we must first understand what absolute value actually means. Absolute value is the distance between any number and 0 on the number line. These values are used extensively in the fields of Mathematics, Data Science, Physics, etc. However, developers generally use it to remove negative signs. &lt;/p&gt;

&lt;p&gt;In an off case that a positive number or 0 is passed as an argument, Python returns the same value. This is because that is the actual distance from the 0 on the number line. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-abs"&gt;
  &lt;/a&gt;
  How to use abs()?:
&lt;/h2&gt;

&lt;p&gt;The absolute value is calculated using the &lt;code&gt;abs()&lt;/code&gt; built-in function. There are other methods to do this as well, however, since &lt;code&gt;abs()&lt;/code&gt; is an inbuilt method we recommend using it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-python-raw-abs-endraw-"&gt;
  &lt;/a&gt;
  Syntax of Python &lt;code&gt;abs()&lt;/code&gt;:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#Absolute value Python
&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, ‚Äúnumber‚Äù could either be an integer, float, or even a complex number. However, the latter returns the magnitude instead of the absolute value. &lt;/p&gt;

&lt;p&gt;In case a floating value is passed, it returns an absolute float value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;

&lt;p&gt;Added below is the code used to find the absolute value of int, float, and complex numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#Absolute Value Python
&lt;/span&gt;
&lt;span class="c1"&gt;#abs() on Integer values
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#abs() on Float values
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;10.10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#abs() on Complex numbers
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;10j&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of this code is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10
10.1
14.142135623730951
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see all the values have been converted into absolute values above. Feel free to try using the abs() method with positive value. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts:
&lt;/h2&gt;

&lt;p&gt;Along with its extensive use in the fields of Maths &amp;amp; Physics, absolute value has a few other use cases as well. A common example is while using a navigator to calculate the distance to a location. This is done by subtracting the distance traveled from the total distance. This value would be a negative value and the &lt;code&gt;abs()&lt;/code&gt; method is used to display the value&lt;/p&gt;

&lt;p&gt;Do let me know your thoughts in the comments section below. :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Bored of code blocks? Check out Codeview!</title>
      <author>Siddharth</author>
      <pubDate>Tue, 31 Aug 2021 11:31:13 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/bored-of-code-blocks-check-out-codeview-575a</link>
      <guid>https://dev.to/siddharthshyniben/bored-of-code-blocks-check-out-codeview-575a</guid>
      <description>&lt;p&gt;The most common way to show code is via code blocks. But code blocks are really boring. So, to make code blocks more fun (and easier to digest!) I made Codeview.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/QWvzyPm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
This is is just a proof of concept, if there is enough demand I will refine and improve it (although I consider most of the bugs in Codeview to be features)






&lt;p&gt;Code blocks are nice, but they are static, which makes it hard to really explain code. Inserting lines somewhere, replacing lines, these all are kinda confusing with ordinary code blocks. Well, &lt;strong&gt;struggle no more&lt;/strong&gt;, because we have Codeview.&lt;/p&gt;

&lt;p&gt;Codeview can automatically mesh, merge, replace, and insert code. It's pretty powerful once you wire it up properly. One potential way I'm considering using it is by linking it to scroll, so that we get a code block which changes with the content!&lt;/p&gt;

&lt;p&gt;I have to say that this is pretty broken. One thing is that there's no syntax highlighting, and next thing is that sometimes there are some timing issues, etc. Once I fix all these I'll definitely make this a library!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
