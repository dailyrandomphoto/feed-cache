<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Very weird trip CSS</title>
      <author>Julien Maury</author>
      <pubDate>Wed, 19 May 2021 17:47:05 +0000</pubDate>
      <link>https://dev.to/jmau111/very-weird-trip-css-1g15</link>
      <guid>https://dev.to/jmau111/very-weird-trip-css-1g15</guid>
      <description>&lt;p&gt;Some of the concepts we are about to see might look a little strange, but hopefully, we'll have some fun.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quirks-mode"&gt;
  &lt;/a&gt;
  Quirks mode
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your website misses that doctype (type of document), browsers, such as Firefox or Internet Explorer, &lt;em&gt;go into a transe&lt;/em&gt; also known as the quirks mode.&lt;/p&gt;

&lt;p&gt;In this alternative state, the box model is incorrect (~ margins, paddings, borders). The law of Physics does not seem to apply anymore. The following becomes possible:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;111&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/**/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You just entered into a black hole!&lt;/p&gt;

&lt;p&gt;Ok, am I going too far ^^? &lt;/p&gt;

&lt;p&gt;More seriously, the quirks mode is the bridge between the modern and the ancient times (decades are centuries in this IT business), like if you take a time machine to go back to the late 90s. Your CSS would likely break:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In the old days of the web, pages were typically written in two versions: One for Netscape Navigator, and one for Microsoft Internet Explorer. When the web standards were made at W3C, browsers could not just start using them, as doing so would break most existing sites on the web. Browsers therefore introduced two modes to treat new standards compliant sites differently from old legacy sites.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Quirks_Mode_and_Standards_Mode"&gt;Source: MDN - quirks mode and standard mode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Developers used to omit the doctype deliberately to force the quirks mode. There is no reason to do that anymore. It's good to know, though, especially for job interviews.&lt;/p&gt;

&lt;p&gt;In your pages, &lt;strong&gt;don't forget or omit the doctype&lt;/strong&gt;. Don't even try the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- First! --&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;The doctype must be the first HTML element&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#doing-wtf-with-emojis"&gt;
  &lt;/a&gt;
  Doing wtf with emojis
&lt;/h2&gt;

&lt;p&gt;I stumbled uppon that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"üçå"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
That's banana!
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;üçå&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first time I saw it, I said to myself:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;go home, you're drunk!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But it just works. However, don't use it at work or the sky might fall on your head.&lt;/p&gt;

&lt;p&gt;These are chars at the end of the day, but it surprises the first time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-variables"&gt;
  &lt;/a&gt;
  CSS variables
&lt;/h2&gt;

&lt;p&gt;CSS variables are such a great feature.&lt;/p&gt;

&lt;p&gt;Thanks to the &lt;code&gt;:root&lt;/code&gt; selector, you can specify rules that take precedence over HTML selectors.&lt;br&gt;
Besides, you can write generic variables available in the global scope and reuse them in other selectors.&lt;/p&gt;

&lt;p&gt;It's pretty good for maintenance, as you kill many duplicated lines, and you can also override those variables locally in a specific selector.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/var()"&gt;Source: MDN - var()&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's wonderful, and I strongly encourage you to learn CSS variables if you don't use them yet.&lt;/p&gt;

&lt;p&gt;However, the following doesn't work for now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* assuming there's a global --xl var defined */&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--xl&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Indeed, CSS variables can only be used for property values. Moreover, such CSS variables (global scope) are root-based, but media queries are not.&lt;/p&gt;

&lt;p&gt;IMHO, it's counterintuitive. I mean, I understand why it's not possible yet, but many developers try that and fail.&lt;/p&gt;

&lt;p&gt;If you are interested in this usage, there's &lt;a href="https://www.npmjs.com/package/postcss-media-variables"&gt;a package for that&lt;/a&gt;. Not sure it's still maintained, but I like the idea.&lt;/p&gt;

&lt;p&gt;Last but not least, neither Internet Explorer nor very old browsers understand CSS variables! Be careful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://caniuse.com/css-variables"&gt;Source: caniuse - css variables&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-tidy"&gt;
  &lt;/a&gt;
  CSS tidy
&lt;/h2&gt;

&lt;p&gt;As long as you use the right selector and the appropriate properties, you get your styles. However, is there any specific order?&lt;/p&gt;

&lt;p&gt;Should you put that &lt;code&gt;position: relative;&lt;/code&gt; before the &lt;code&gt;color: limegreen;&lt;/code&gt;? Is it the contrary? How do you write those properties?&lt;/p&gt;

&lt;p&gt;There aren't many blog posts and documentation about that, but it becomes necessary for maintenance, primarily when you work in a team (or several).&lt;/p&gt;

&lt;p&gt;The best way is to define your guidelines. For your inspiration, you might want to use the following model:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.myelement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* positioning */&lt;/span&gt;

    &lt;span class="c"&gt;/* dimensions */&lt;/span&gt;

    &lt;span class="c"&gt;/* text properties */&lt;/span&gt;

    &lt;span class="c"&gt;/* borders &amp;amp; backgrounds */&lt;/span&gt;

    &lt;span class="c"&gt;/* CSS3 magic */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#its-a-kind-of-magic"&gt;
  &lt;/a&gt;
  It's a kind of magic
&lt;/h2&gt;

&lt;p&gt;I love magic art, but magic it's not something I expect from any language. CSS is neither a programming language nor a design program such as Photoshop.&lt;/p&gt;

&lt;p&gt;It's somewhere between these two worlds, and to me, that's the reason why so many developers find it weird.&lt;/p&gt;

&lt;p&gt;There are easy ways to log errors in programming languages. You get notices, warnings, or fatal errors, so it's logical and relatively easy to see why your code does not make sense.&lt;/p&gt;

&lt;p&gt;It's not the same with CSS. You don't get any tracks. In addition to this, you have to write instructions for a massive range of devices and screen sizes. You can only make reasonable assumptions of the final result.&lt;/p&gt;

&lt;p&gt;There are online tools to check the layout shift, for example. If you get a bad score, you'll have some hints to improve your styles, but it won't solve all your problems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-transformers"&gt;
  &lt;/a&gt;
  The Transformers
&lt;/h2&gt;

&lt;p&gt;I've been playing with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin"&gt;the &lt;code&gt;transform-origin&lt;/code&gt; property&lt;/a&gt; recently.&lt;/p&gt;

&lt;p&gt;It's amazing, but I agree with &lt;a href="https://www.kevinpowell.co/article/transform-and-transform-origin/"&gt;this guy&lt;/a&gt;, &lt;code&gt;transform&lt;/code&gt; is a little weird as its values do entirely different types of things, including 3D stuff.&lt;/p&gt;

&lt;p&gt;People sometimes use those transformations to make great art, and it can be impressive, but it may look like witchcraft at first sight.&lt;/p&gt;

&lt;p&gt;Anyway, transforms are an excellent approach because it's often better than trying extreme positions and margins, which can harm your performances and look terrible on some devices.&lt;/p&gt;

&lt;p&gt;You can combine multiple transforms at a time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you enjoy this weird CSS trip. There are many ways to &lt;a href="https://web.dev/learn/css/color/"&gt;learn CSS&lt;/a&gt; and take the power back with your styles, but some parts remain pretty hard.&lt;/p&gt;

&lt;p&gt;Fortunately, some people share knowledge, especially &lt;a href="https://moderncss.dev/"&gt;modern ways to write CSS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Who wants to become a "CSS developer"? I'm surprised nobody uses that because I've seen &lt;a href="https://www.miriamsuzanne.com/2019/10/03/css-is-weird/"&gt;people building crazy good styles&lt;/a&gt; that require expert knowledge.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@chernus_tr?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Taras Chernus&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/hidden?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>Read this before you publish your next postüòâ</title>
      <author>Shaquil Maria</author>
      <pubDate>Wed, 19 May 2021 17:29:22 +0000</pubDate>
      <link>https://dev.to/theowlsden/read-this-before-you-publish-your-next-post-2dee</link>
      <guid>https://dev.to/theowlsden/read-this-before-you-publish-your-next-post-2dee</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@jonasjacobsson?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jonas Jacobsson&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/help?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's up Dev clan?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;disclaimer: this is a "rant" and improvement proposal based on my opinion and experience using the &lt;a href="http://dev.to"&gt;DEV.to&lt;/a&gt; platform. These tips can be used on whatever platform you are posting on. All examples used are made-up, do not take this as a personal attack.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's been over a month since I created an account on this platform and started visiting it regularly to share and read what is being shared. Over this last month I noticed two trends, the type of content that is published and how these posts are written.&lt;/p&gt;

&lt;p&gt;To start with the first: Type of content. I realized that these are the main four types of contents I am seeing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The listicles&lt;/li&gt;
&lt;li&gt;The How-To's&lt;/li&gt;
&lt;li&gt;The rants&lt;/li&gt;
&lt;li&gt;The discussions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is nothing wrong with your post falling under one of these categories. They make it much simpler to interact with and read about certain topics. Besides the types, there is how these posts are written. And to be fair, in my opinion much can be improved. Let's first list them.&lt;/p&gt;

&lt;p&gt;The writing styles I see the most are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The lazy writing&lt;/li&gt;
&lt;li&gt;The unstructured&lt;/li&gt;
&lt;li&gt;The critic&lt;/li&gt;
&lt;li&gt;The "I'm not a native English speaker"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why I am talking about these writing styles? Well, I have seen a lot of people saying that they think that the content quality on the platform is deteriorating, but they do not give advice on how to improve the content qualityü§∑‚Äç‚ôÇÔ∏è. And to some extent I agree. The content on the platform is becoming repetitive and of low quality.&lt;/p&gt;

&lt;p&gt;So, here I am, trying to contribute to the community in a way that might increase the quality of the content. This post will go over some general tips that can improve your content in general, and how you can improve your post depending on the type of content you are writing (according to the ones listed above).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general-improvements"&gt;
  &lt;/a&gt;
  General Improvements
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#canonical-links"&gt;
  &lt;/a&gt;
  Canonical links
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A canonical link element is an HTML element that helps webmasters prevent duplicate content issues in search engine optimization by specifying the "canonical" or "preferred" version of a web page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You would like to use a canonical link to verify the original place of origin of your post in every other place you publish it. If your post was first published on your personal blog and then on &lt;a href="http://dev.to"&gt;dev.to&lt;/a&gt;, you are advised to use a canonical link that says that your personal blog is the original post.&lt;/p&gt;

&lt;p&gt;I have seen a lot of people create a post with a compelling title: "How these 5 apps will make you a millionaire!". Once you click the post:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RpOvIskW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/VIQfHC9jAZbt6ojTdo/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RpOvIskW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/VIQfHC9jAZbt6ojTdo/giphy.gif" alt="https://media4.giphy.com/media/VIQfHC9jAZbt6ojTdo/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You don't see the contents of the post, you see a link pointing to the original post. You might just get frustrated and leave the post.&lt;/p&gt;

&lt;p&gt;When you are republishing a post on a different platform, &lt;strong&gt;PLEASE&lt;/strong&gt; don't be that author. You already have the post complete, just copy and paste your post content, and add the canonical link. This will allow your readers to read what they came for, "How these 5 apps will make you a millionaire!", instead of hopping from one platform to another just to read your piece of content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preview-your-content"&gt;
  &lt;/a&gt;
  Preview your content
&lt;/h3&gt;

&lt;p&gt;People of dev. By now you should know that dev use markdown to edit posts and comments. When you are drafting/ writing your post, an advise is to write it in markdown. This will make your life much easier when posting on dev. You can legit just copy and paste your post's content into the dev editor and publish it. &lt;strong&gt;BUT WAIT&lt;/strong&gt;, before publishing, preview your post. Come on, write it down so you don't forget: Preview my next post before I publish it.&lt;/p&gt;

&lt;p&gt;By previewing your post, you can see and read the post with the style that it will have on dev. This will allow your to check and double check that everything is looking like how you intended. That your headings are right where they should be, that your images work and that your links redirect to the correct pages. By previewing your post and fixing the things that you think that needs fixing you will automatically increase the quality of your post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grammar-and-vocab"&gt;
  &lt;/a&gt;
  Grammar and vocab
&lt;/h3&gt;

&lt;p&gt;Now listen, like most of you all, English is not my native language. With English as your secondary or n+ language comes the hurdle of translating everything that you want to say to English. This may result in poorly written texts that does not have the right vocab or grammar. Please, do yourself a favor and let someone proofread your posts before publishing. This will allow you to get early feedback on both the content of your post and the linguistic structure of your post. Besides having someone proofread your post, use tools like &lt;a href="https://app.grammarly.com/"&gt;Grammarly&lt;/a&gt; to assist you with the grammar and vocab in your post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h3&gt;

&lt;p&gt;Oh sources. Whenever you are citing something from a source, the best practice is to write the original link in a reference list. This will give your readers a starting point to further read about a certain topic. This is especially helpful if you are talking about a broad topic, and you are not covering all the aspects of said topic. &lt;/p&gt;

&lt;p&gt;By listing your sources you give proper credit to the ones that helped you write your piece of content, without them I'm pretty sure you either would have had a difficult time writing your content or you might have given up on it all together, so show them some love ‚ô•.&lt;/p&gt;

&lt;p&gt;With the general tips out of the way, let's take a look at how you can improve your posts based on its type. &lt;strong&gt;AGAIN&lt;/strong&gt;, these are my recommendations, not rules that you should follow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#listicles"&gt;
  &lt;/a&gt;
  Listicles
&lt;/h2&gt;

&lt;p&gt;Firstly, you don't need to make a listicle for everything. Nobody cares about a list of pens you use to write down your To-Do's. A more interesting topic would be the system you use to tackle your To-Do's. Nowadays I'm seeing so many listicles about the same topic, that before opening a post I can guarantee that I can predict two or three items on that list.&lt;/p&gt;

&lt;p&gt;Now if you decide that your post must be a listicle, let's dive into it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-need-for-a-long-list"&gt;
  &lt;/a&gt;
  No need for a long list
&lt;/h3&gt;

&lt;p&gt;Come on, deep down you know it. You know that your 100 item list is not really worth it. People might start reading it, and at the 25th item just bookmark your post and move along with their day. Never to come back and finish reading the list. Long lists only makes it more difficult to get value out of your list. You are giving too much options. Next time you want to write a listicle and find yourself writing a long list, take a break. Analyze your content and be critical about it. Is each item on this list really that important? If your answer is "no", then remove that item from the list. &lt;/p&gt;

&lt;p&gt;At the end of the day you will have a better curated list that is straight to the point and more importantly short and easy to read.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-just-add-links"&gt;
  &lt;/a&gt;
  Don't just add links
&lt;/h3&gt;

&lt;p&gt;I've seen this. "5 Play Store games to increase your mental capacity" (total bs example). When you click the post, it's just links to the games on Play Store. No image, no description, no intro to the post, nothing. If you are doing something, do it good or don't do it at all. If you are creating a list of whatever, give the reader a reason to read it. If your list is about cars, for each car on that list elaborate a little about it, what's the good of it, what's the bad and why they should care about it. After giving them a reason to GAF about the car, you give them a link to the car. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#give-your-list-a-personality"&gt;
  &lt;/a&gt;
  Give your list a personality
&lt;/h3&gt;

&lt;p&gt;Like I've mentioned before, I am seeing a lot of lists about the same topics. If you want to make another list about VS Code extensions, go for it. Just realize that there are a thousand out there already, and they all might have the exact same extensions listed as the ones you will be listing. Just take this advice: Make it &lt;strong&gt;your&lt;/strong&gt; list. Create a list about the extensions that you use, how they are of use to you. When I read your listicle about these extensions I should understand what your opinion is on these extensions, what you like and what you don't like about them. Why you are recommending them. &lt;/p&gt;

&lt;p&gt;While I am at it, I should say this. Create lists based on things you've used or are planning to use. Don't just find a list out there and:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wyST7epm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/vs4rf9fzpgy21.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wyST7epm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/vs4rf9fzpgy21.jpg" alt="https://i.redd.it/vs4rf9fzpgy21.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rants"&gt;
  &lt;/a&gt;
  Rants
&lt;/h2&gt;

&lt;p&gt;Rants, we all like them. We all have things that we don't like and want to express our frustration about them. This post started as a rant about poorly written postsüòÖ. But while we each have a right to express our opinions, we should be aware of the consequences of doing so.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coc"&gt;
  &lt;/a&gt;
  CoC
&lt;/h3&gt;

&lt;p&gt;Most platforms have a Code of Conduct, a list of rules that you should follow to help keep the platform healthy and inclusive. These rules help both you and the readers have a place where you can feel comfortable. &lt;a href="https://dev.to/code-of-conduct"&gt;Here is the CoC of dev.to&lt;/a&gt;, take a look at it. Please as a writer, help enforce the Code of Conduct. In your rant posts, don't attack a certain person, attack the problem. Don't write a post attacking one specific individual, attack the action that the individual did. This will allow for a broader discussion about the topic, rather than discussion about the individual or what they posted. Do you see where I am getting at? Your rant should encourage a conversation on the bigger picture, not that one issue you encountered.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#your-rant-your-opinion"&gt;
  &lt;/a&gt;
  Your rant, your opinion
&lt;/h3&gt;

&lt;p&gt;Remember that your rant is purely based on your biases and your opinion. This means that people might agree with you, but at the same time, they might strongly disagree with you. When you choose to go on a rant, remember that you are putting yourself in a difficult position where you might become the one getting criticized. Choose wisely what you put out there, and the approach you take when critiquing something.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#howtos"&gt;
  &lt;/a&gt;
  How-To's
&lt;/h2&gt;

&lt;p&gt;How-To's, they vary from tutorials, to people convincing you that you too can become a millionaire in 7 days. Point is, these should be posts giving you a detailed walkthrough on how to achieve a certain result. And yet, I see some that don't do that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explain-your-point"&gt;
  &lt;/a&gt;
  Explain your point
&lt;/h3&gt;

&lt;p&gt;If you are writing a tutorial, explain who is it for, what knowledge is required to follow it, and what they will earn from it. This will allow your audience to know exactly what they are getting themselves into. after making clear who your post audience is, tell them what they will be doing, and give an example of the finished result.&lt;/p&gt;

&lt;p&gt;For you guys that are writing about how you achieved something and other people can do it too: tell them the whole story. Don't just be telling the start and finish, the highlights. Tell them about the "sacrifices" it took you to get there. You became a millionaire in 7 days? Tell them where you were before achieving that, tell them that you didn't sleep for 7 days, tell them about the tools that helped you get there, tell them it is extremely difficult, and you are lucky that you achieved that. &lt;/p&gt;

&lt;p&gt;If you are writing a post explaining something, explain it in the more details possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#less-self-promotion-more-how-to"&gt;
  &lt;/a&gt;
  Less self promotion, more how to
&lt;/h3&gt;

&lt;p&gt;Don't write a post on a how to and just 90% of the time be advertising what you did. Write about how to achieved it. If you want to advertise your product, do that and use a title that reflects exactly that. Do not give it the disguise of a tutorial or a How-To.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discussions"&gt;
  &lt;/a&gt;
  Discussions
&lt;/h2&gt;

&lt;p&gt;Discussions, the posts where you can let your soul go wild in the comment section. These types of post rely on the interaction of the reader with the post. You as a reader give the post its importance. Your comments allow for the post to be called a discussion. And you as an author, should encourage the reader to comment on the post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#give-the-reader-a-reason"&gt;
  &lt;/a&gt;
  Give the reader a reason
&lt;/h3&gt;

&lt;p&gt;I see a lot of posts with the discussion tag and a question as a title. When I open the post to find out more, all I see is a one-liner. One question. "Are you a developer or are you a software engineer?". As a reader what am I supposed to comment under this "discussion"? I don't have any idea where this is going.&lt;/p&gt;

&lt;p&gt;As an author, you should lead your readers to a conclusion. Your listicle should lead them to use at least (or avoid) one of the things on the list. Your rant should lead your readers to the conclusion that you don't think that something is right, and that should let them think critically about the topic. Your discussion should lead them to share their opinion. In order to lead them to share their opinion, you should first give them a base to start with.&lt;/p&gt;

&lt;p&gt;When writing a discussion, give your readers a context. This context helps the reader understand what the discussion is about, it leads them to the specific topic you want to discuss. &lt;br&gt;
"Are you a developer or are you a software engineer?" Start with why you have this question, Are you trying to clarify the definition of the two job titles? Are you trying to see where you fit? Or are you looking at what the general public thinks about being the one or the other?&lt;br&gt;
Your context guides the discussion. &lt;/p&gt;

&lt;p&gt;Oh and by the way, I said give the discussion a context, do that. But don't write a lengthy context, you will loose your reader along the way. A paragraph explaining why you created the discussion is enough.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yes-or-no-is-a-no-no"&gt;
  &lt;/a&gt;
  Yes or No is a no no
&lt;/h3&gt;

&lt;p&gt;Do you write with pen or pencil? What would your answer to that question be? "I use pen" or "I use pencil". Et voila, your discussion is over. When creating a discussion, formulate your question (or "food for thought") in a manner that it does not simply elicit a yes or no answer from the audience. If you want a discussion, you need to have a conversation. To have a conversation you need more than just yes or no. You need a more in-depth answer. "Why do you use pen or pencil when you write?" Give your readers a reason to write more than just one word. It will make your discussion more engagement-friendly and you will (hopefully) get answers that add value to the discussion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-discussion-is-not-a-oneway-street"&gt;
  &lt;/a&gt;
  A discussion is not a one-way street
&lt;/h3&gt;

&lt;p&gt;Have you ever encountered a post where there are lots of comments but the author is nowhere to be seen? Well, don't be that author. Engage with your readers when they comment. Your discussion is your playground to see how people think about a certain topic. If they comment, show them that you read their comment. If you want a little more explanation, ask them to elaborate further. Show your readers that you are interested in the discussion and in them. &lt;/p&gt;

&lt;p&gt;Well, this is all I have for you guys. I hope that after reading this post, you will create and post the best content of your life. Go on, write your posts, share them and thank me laterü§£&lt;/p&gt;

&lt;p&gt;By the way, if you're reading this, like this post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VVDZEVwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.tenor.com/images/38f44c3775cee759d2171756e977cfe2/tenor.gif%3Fitemid%3D10849136" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VVDZEVwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.tenor.com/images/38f44c3775cee759d2171756e977cfe2/tenor.gif%3Fitemid%3D10849136" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>healthydebate</category>
      <category>watercooler</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Turtle Race game in Python using Turtle class!</title>
      <author>Vishnubhotla V D V Bharadwaj</author>
      <pubDate>Wed, 19 May 2021 16:55:34 +0000</pubDate>
      <link>https://dev.to/bharadwaj6262/turtle-race-game-in-python-using-turtle-class-33me</link>
      <guid>https://dev.to/bharadwaj6262/turtle-race-game-in-python-using-turtle-class-33me</guid>
      <description>&lt;p&gt;Hello all, Hope you all are doing well. After so many backspaces and spending entirely my two days of time, I have designed a turtle game in Python. Let's talk deeply about this in this blog.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What's exactly happening here. We have a total of 6 turtles, of different colors which move with a random length. First, we should bet on a turtle, by entering the color of it. The turtle which first crosses the line is declared as a winner. The entire code is done in Python by importing turtle and random libraries.&lt;/p&gt;

&lt;p&gt;The entire program is done by following the &lt;a href="https://docs.python.org/3/library/turtle.html?highlight=turt#module-turtle"&gt;&lt;em&gt;official Python documentation&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code explanation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lets import packages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from turtle import Turtle, Screen
import random

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The random function is used to generate the distance(randomly), to be traveled by turtles. It's better to give screen size because it will be easy for us to locate the coordinates and change accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;screen = Screen()
screen.setup(width=500, height=400)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is a function called textinput(), which opens a dialogue box and asks for user input.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;user_bet = screen.textinput(title="Place your bet", prompt="Which turtle will win the race? Enter a color: ")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we should give our race turtles colors. So, that we can distinguish them. And also the coordinates where then should stand for the race.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;colors = ["red", "orange", "yellow", "green", "blue", "purple"]
y_positions = [-100, -60, -20, 20, 60, 100]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The exact coordinates of all the turtles are classified using a for loop by taking the above y-coordinates and colors into consideration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for turtle_index in range(0,6):
    new_turtle = Turtle(shape="turtle")
    new_turtle.color(colors[turtle_index])
    new_turtle.penup()
    new_turtle.goto(x=-230, y= y_positions[turtle_index])
    all_turtles.append(new_turtle)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the final thing we should do is to make our turtles move a random distance each time. And the turtle which reaches the other end of the screen at first is the turtle that has won the race. At the start, we place a bet on the turtle and if that turtle wins then we win and if it loses then we also lose.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;while is_race_on:
    for turtle in all_turtles:
        if turtle.xcor() &amp;gt; 230:
            is_race_on = False
            winning_color = turtle.pencolor()
            if winning_color == user_bet:
                print(f"You've won!, The {winning_color} turtle is the winner.")
            else:
                print(f"You've lost!, The {winning_color} turtle is the winner.")
        rand_distance = random.randint(0, 10)
        turtle.forward(rand_distance)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main advantage of setting the screen width and height is we can easily calculate the start and end coordinates by assuming the screen as a graph paper.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Images of the output&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A. Giving "red" as the user input. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_PTCppa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621442714631/sJqfcFEFg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_PTCppa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621442714631/sJqfcFEFg.png" alt="Screenshot (160).png"&gt;&lt;/a&gt;B. Image of how the turtles move. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tLrphuiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621442762631/0JoG34Zu3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tLrphuiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621442762631/0JoG34Zu3.png" alt="Screenshot (161).png"&gt;&lt;/a&gt;C. End of the race. Which says whether we won or lose the race. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mr3iGi2P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621442802119/7GAFpX77w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mr3iGi2P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621442802119/7GAFpX77w.png" alt="Screenshot (162).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The GitHub link of the project is attached &lt;a href="https://github.com/VishnubhotlaBharadwaj/turtle-race"&gt;here.&lt;/a&gt; Can check the code and feel free to contribute to it, to make this project even better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect with me&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can connect with me on &lt;a href="https://twitter.com/Bharadwaj6262"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/v-d-v-bharadwaj-vishnubhotla-871006185/"&gt;LinkedIn&lt;/a&gt; .&lt;/p&gt;

</description>
      <category>python</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>High Speed Data Monitoring for Modern Industrial Challenges</title>
      <author>Margo McCabe</author>
      <pubDate>Wed, 19 May 2021 16:55:04 +0000</pubDate>
      <link>https://dev.to/harperdb/high-speed-data-monitoring-for-modern-industrial-challenges-4l4c</link>
      <guid>https://dev.to/harperdb/high-speed-data-monitoring-for-modern-industrial-challenges-4l4c</guid>
      <description>&lt;p&gt;Organizations in the industrial space deal with similar challenges when it comes to data, and those challenges become more prominent the longer they go unanswered. Industry 4.0 is moving forward at full speed, meaning that traditional manufacturing and industrial processes continue to be automated with modern technology -- which is super exciting! This is done through methods like internet of things (IoT), smart machines, and advanced monitoring and analysis techniques. Now that we have all these mechanisms in place to capture data, questions arise such as what to do with that data, where to put it, what can we learn from it, and are we even capturing it in the most efficient manner possible in the first place? There is &lt;strong&gt;so much&lt;/strong&gt; data being generated every single nanosecond from endless sources globally, it‚Äôs kind of hard to wrap your head around! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#too-much-data-too-little-time"&gt;
  &lt;/a&gt;
  Too Much Data, Too Little Time
&lt;/h3&gt;

&lt;p&gt;The problem is that a lot of industrial organizations still have legacy systems in place for the capture, processing, and analysis of that data, and they end up throwing more and more money at the problem without gaining real value or insights. When collected and utilized correctly, this data can provide unparalleled insights that can predict and prevent things like machine maintenance and downtime, loss of production, and system failure. In certain industries, the difference between &lt;em&gt;near&lt;/em&gt; real-time insights and &lt;em&gt;actual&lt;/em&gt; real-time insights could be hundreds of millions of dollars. Many technologies, both legacy and modern, become so overloaded with the sheer speed and volume of data being generated that they cannot process efficiently enough to provide actual real-time insights. Additionally, it‚Äôs important to be able to separate the noise from the anomalies in the massive amounts of data being generated so that teams both on the shop floor and at the central office can focus on what‚Äôs really important for the organization, instead of wasting time looking at data that shows nothing of value. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution-high-speed-data-monitoring"&gt;
  &lt;/a&gt;
  The Solution: High Speed Data Monitoring
&lt;/h3&gt;

&lt;p&gt;Two organizations that have witnessed this problem with industrial clients time and time again recently joined forces to tackle it with a highly effective solution. &lt;a href="https://harperdb.io/"&gt;HarperDB&lt;/a&gt; and &lt;a href="https://casne.com/"&gt;Casne Engineering&lt;/a&gt; have partnered to develop high performance data acquisition and in line analytics capabilities that enable organizations to capture sub-second data streams from industrial control systems like PLC‚Äôs and SCADA systems. The solution then filters out the massive amounts of irrelevant data at the edge, and forwards only the pertinent or anomaly data for use in OT historians and machine learning applications. Filtering out the noise at the edge, on or next to the machinery itself, saves the organization significant time and money. In traditional systems there are two likely scenarios; send all of the data for later analytics, or only capture a fraction of the data at low frequency rates and hope to catch any important information. In the first case, all of the data is forwarded to on-premise cloud systems where data scientists can determine what data is important for analytics - an expensive solution that quickly overwhelms the underlying servers with noise. In the second scenario, collecting low frequency datasets could overlook important thresholds which only occur at high data rates. These overlooked signals could predict failures that lead to downtime.&lt;/p&gt;

&lt;p&gt;This high frequency in-line analytics approach allows operators to gain &lt;em&gt;actual&lt;/em&gt; real-time insights and detect anomalies that would normally be missed using traditional low frequency data collection techniques. HarperDB‚Äôs data management solution enables organizations to efficiently collect, process, and analyze data streams in conjunction with other unstructured data including machine vision, geospatial, and Internet data feeds. By implementing HarperDB with Casne‚Äôs industry experts, clients can build data flows that greatly improve visibility and reduce costs. Implementing event triggering and anomaly detection can also help to identify and avoid bottlenecks. The joint solution extracts only the data pertinent to their operations and forwards the information directly to existing plant historians, SCADA systems, reporting systems, and work management systems, ultimately reducing unnecessary data and streamlining overall operations. &lt;/p&gt;

&lt;p&gt;HarperDB and Casne recently completed a project for a client in the utilities / energy sector, where they were able to capture high resolution data to predict and prevent equipment failures and downtime with a single data management solution from plant to cloud. You can access and download the &lt;a href="https://harperdb.io/download-harperdb-casne-casestudy/"&gt;case study to learn more here&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>database</category>
      <category>productivity</category>
      <category>discuss</category>
      <category>technology</category>
    </item>
    <item>
      <title>Thinking upstream about the White House cybersecurity executive order</title>
      <author>Donald Fischer</author>
      <pubDate>Wed, 19 May 2021 16:42:17 +0000</pubDate>
      <link>https://dev.to/tidelift/thinking-upstream-about-the-white-house-cybersecurity-executive-order-1h89</link>
      <guid>https://dev.to/tidelift/thinking-upstream-about-the-white-house-cybersecurity-executive-order-1h89</guid>
      <description>&lt;h2&gt;The upstream parable&lt;/h2&gt;

&lt;p&gt;Stop me if you‚Äôve heard this one before.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Three friends are relaxing beside a river. Suddenly, they hear the sound of someone crying out for help.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Looking out into the river, they see a child flailing in the middle of a strong current. The first friend moves quickly, jumping in and swimming as fast as they can to get the child and pull them to safety.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Before the first friend is able to get back to shore, there are more cries for help. Three additional children are in the river, in need of urgent rescue. The second friend, knowing he must rescue all three at once, grabs a nearby raft and paddles out into the river.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meanwhile more children keep popping up, all needing rescue. This second friend, overwhelmed, desperately looks around for the third friend, who is nowhere to be seen.¬†&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Finally, he spots her, in the river, swimming upstream.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúWhere are you going, these children are going to drown!‚Äù calls out the second friend.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The third friend keeps swimming and calls back:¬†&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúI‚Äôm going upstream to find out who is throwing all of these children in the river!‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;What is upstream thinking?&lt;/h2&gt;

&lt;p&gt;This parable is at the heart of what is known as &lt;em&gt;upstream thinking&lt;/em&gt;. In his recent bestseller &lt;a href="https://heathbrothers.com/books/upstream/"&gt;&lt;span&gt;Upstream: The Quest to Solve Problems Before They Happen&lt;/span&gt;&lt;/a&gt;, author Dan Heath introduces the concept this way:&lt;/p&gt;

&lt;p&gt;‚ÄúSo often in life, we get stuck in a cycle of response. We put out fires. We deal with emergencies. We stay downstream, handling one problem after another, but we never make our way upstream to fix the systems that caused the problems. Cops chase robbers, and doctors treat patients with chronic diseases, and call-center reps address customer complaints. But crime and chronic disease and customer complaints are preventable! So why do our efforts skew so heavily toward reaction rather than prevention?‚Äù&lt;/p&gt;

&lt;p&gt;So if &lt;em&gt;downstream thinking&lt;/em&gt; focuses on solving problems after they occur (fishing children out of the water, in our parable), &lt;em&gt;upstream thinking&lt;/em&gt; focuses on efforts to prevent problems before they occur (‚ÄúI‚Äôm going to find out who is throwing all of these children in the river!‚Äù).&lt;/p&gt;

&lt;p&gt;Those who practice upstream thinking, also known as &lt;em&gt;upstreamists&lt;/em&gt;, are systems-level thinkers, seeking to understand the root causes of downstream emergencies.¬†&lt;/p&gt;

&lt;h2&gt;Upstream thinking and the White House cybersecurity executive order&lt;/h2&gt;

&lt;p&gt;Which brings me to the recent &lt;a href="https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/" rel="noopener"&gt;&lt;span&gt;White House cybersecurity executive order&lt;/span&gt;&lt;/a&gt;, which &lt;a href="/cyber-security-executive-order" rel="noopener"&gt;&lt;span&gt;we‚Äôve done a full debrief on here&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TL;DR: the cybersecurity executive order is an attempt by the United States government to use its purchasing power to create positive changes to the way cybersecurity is addressed around the world.¬†&lt;/p&gt;

&lt;p&gt;Recent high profile breaches like the Colonial Pipeline ransomware attack or the SolarWinds software supply chain attack have shown that our cybersecurity defenses are woefully inadequate. This executive order forces a higher standard of cybersecurity for any organization selling software to the federal government, which in turn makes it the de facto global standard for all software in the future.&lt;/p&gt;

&lt;p&gt;As I read the executive order for the first time, I couldn‚Äôt help but think it provides an incredible opportunity to apply upstream thinking to software.&lt;/p&gt;

&lt;h2&gt;In open source, the focus has been downstream for too long&lt;/h2&gt;

&lt;p&gt;Sticking with our parable for a second, when we look closely at the problems that open source software has faced when it comes to cybersecurity, most work over the past few years has gone into &lt;span&gt;developing downstream solutions that help those already in crisis&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;In fact, an entire industry has cropped up around software composition analysis (SCA) and container scanning tools that will tell you what is wrong with your software from a security or licensing perspective. This kind of open source urgent care has become a big business, with companies raising hundreds of millions of dollars and grabbing the attention of frustrated CIOs who don‚Äôt want to go down in flames as ‚Äúthe next Equifax.‚Äù&lt;/p&gt;

&lt;p&gt;But are we really content to continue being overwhelmed by a never-ending parade of open source health crises?¬†&lt;/p&gt;

&lt;p&gt;Or should we instead turn our attention upstream?&lt;/p&gt;

&lt;h2&gt;Spurring an upstream movement in open source&lt;/h2&gt;

&lt;p&gt;On June 7, Tidelift will be hosting a completely free, virtual event to celebrate open source and the people who create it, and we‚Äôve named it Upstream (&lt;a href="http://upstream.live/" rel="noopener"&gt;&lt;span&gt;sign up here!&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Upstream_(software_development)" rel="noopener"&gt;&lt;span&gt;From the Wikipedia definition of upstream, as it relates to software development&lt;/span&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;‚ÄúIn software development, upstream refers to a direction toward the original authors or maintainers of software that is distributed as source code, and is a qualification of either a version (released by the original authors, based on their upstream source code), a bug or a patch.‚Äù&lt;/p&gt;

&lt;p&gt;Our original intent with this name was to honor the work of the people who create and maintain the open source code that all of our applications rely on: the upstream maintainers.&lt;/p&gt;

&lt;p&gt;But we also loved the dual meaning, that this event could serve as an opportunity to spur a movement of upstream thinking in our open source corner of the universe.&lt;/p&gt;

&lt;p&gt;While Dan Heath‚Äôs book shares examples of upstreamists operating in many different fields, healthcare is probably the field where upstream thinking has seen the most traction.&lt;/p&gt;

&lt;p&gt;For some broader perspective and inspiration, we‚Äôve invited one of the leading upstreamists in healthcare, Dr. Rishi Manchanda, to give a keynote at Upstream. If you haven‚Äôt seen his TED Talk on upstream thinking, &lt;a href="https://www.youtube.com/watch?v=dJEwC4wCM70" rel="noopener"&gt;&lt;span&gt;you can view it here&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But why wait? We can start applying upstream thinking to open source software security and maintenance issues right now!&lt;/p&gt;

&lt;h2&gt;Applying upstream thinking to open source&lt;/h2&gt;

&lt;p&gt;Let‚Äôs do a little exercise in upstream thinking.&lt;/p&gt;

&lt;h3&gt;Problem: managing open source effectively and keeping it secure is an enormous challenge&lt;/h3&gt;

&lt;p&gt;For most organizations, it has become a difficult‚Äîif not practically impossible‚Äîtask to effectively manage the security and maintenance of all of the open source code they use.¬†&lt;/p&gt;

&lt;p&gt;In fact, a recent Tidelift survey found that only &lt;a href="/finding-4-confidence-in-organizations-open-source-practices-declines-as-size-of-company-grows" rel="noopener"&gt;&lt;span&gt;16% of organizations with over 10,000 employees are extremely confident that their open source is up to date, secure, and well maintained&lt;/span&gt;&lt;/a&gt;. Meanwhile a whopping 39% were not very or not all confident in their practices for managing open source.&lt;/p&gt;

&lt;h3&gt;A downstream solution: scanning¬†&lt;/h3&gt;

&lt;p&gt;Many of these organizations have attempted to solve their problem with software composition analysis tools that point out security, maintenance, and licensing issues with their open source dependencies. But too often these tools are introduced late in the development process, and report false positives or issues with no easy resolution. They are in essence crying out, ‚Äúhey, there are children in the river!!‚Äù&lt;/p&gt;

&lt;p&gt;Yeah, we know.&lt;/p&gt;

&lt;p&gt;This leaves developers stuck with bad choices.¬†&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Replace problematic packages (with the associated delay, and only possible if good alternatives exist)&lt;/li&gt;
&lt;li&gt;Rewrite the code yourself (if you have time)&lt;/li&gt;
&lt;li&gt;Work with with an open source maintainer to get the issue fixed upstream (if you can get their attention)&lt;/li&gt;
&lt;li&gt;Ignore the scanner result (if you want to roll the dice)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Heading upstream to discover root cause&lt;/h2&gt;

&lt;p&gt;It begs the question: why &lt;em&gt;are&lt;/em&gt; there so many issues for scanning tools to find? And could we reduce the open source equivalent of emergency room visits by examining the environmental factors that are causing them?&lt;/p&gt;

&lt;p&gt;There are a lot of root causes we could consider for issues in open source, from what motivates scanners to report false positives to how package managers deliver updates. But today I want to focus on one root cause that is staring us right in the face. It was perhaps most poignantly captured by &lt;a href="https://xkcd.com/2347/"&gt;&lt;span&gt;this recent xkcd cartoon&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://xkcd.com/2347/" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PazWb_EJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://f.hubspotusercontent30.net/hubfs/4008838/dependency_2x-credit.jpg" alt="dependency_2x-credit"&gt;&lt;/a&gt;In open source, the majority of people writing the code that modern digital infrastructure depends on are volunteers or are grossly under-compensated for their work. In other words, random people in Nebraska, thanklessly maintaining projects since 2003.&lt;/p&gt;

&lt;p&gt;Sneak preview of our upcoming maintainer survey results: almost half of maintainers are paid &lt;em&gt;nothing&lt;/em&gt;‚Äînot one cent‚Äîfor their work, while more than half are paid &lt;em&gt;less than $1,000 US per year&lt;/em&gt;. Only 6% are paid what might be considered a living wage (more than $50,000 US per year).&lt;/p&gt;

&lt;p&gt;Which means that for most maintainers, open source is more of a hobby than a profession. It just happens to be a hobby &lt;span&gt;that all organizations are counting on them to keep doing, to an enterprise standard, without compensation.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;It doesn‚Äôt take a neurosurgeon to uncover the root cause here.&lt;/p&gt;

&lt;h2&gt;An upstream solution: partner with maintainers and users to improve software health and security&lt;/h2&gt;

&lt;p&gt;Which leaves us with some simple truths:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enterprises building applications on top of the modern open source digital infrastructure need open source they can rely on.&lt;/li&gt;
&lt;li&gt;Open source maintainers should be fully compensated if we expect them to deliver secure, well maintained software built to an enterprise standard.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It might seem kinda obvious, but one solution is to build a model where maintainers get paid to do the work enterprise users need them to do.&lt;/p&gt;

&lt;p&gt;How many security issues could be avoided if maintainers were being properly compensated to ensure their components stayed secure and up to date? Even more interesting: how much amazing open source software isn‚Äôt even being created today because there aren‚Äôt incentives in place for the people who might create and maintain it?&lt;/p&gt;

&lt;p&gt;In Rishi Manchanda‚Äôs TED Talk about upstream thinking, he tells the story of Veronica, who appeared in his clinic suffering from debilitating migraine headaches and severe allergies. Multiple visits, multiple treatments, nothing could fix what was wrong with her.&lt;/p&gt;

&lt;p&gt;Until Dr. Manchanda asked her about where she lived. It turned out that her house was moldy, wet, and roach-infested. Instead of prescribing another medication to treat her symptoms, the doctor referred her to a specialist who could help her improve her housing conditions. As if by magic, once her housing conditions improved, her migraine headaches and allergies disappeared.&lt;/p&gt;

&lt;p&gt;If we really want to address the health and security of open source, it‚Äôs time to get &lt;em&gt;our&lt;/em&gt; house in order.&lt;/p&gt;

&lt;p&gt;Let‚Äôs pay the maintainers and get a head start on tackling a principal root cause of open source cyber insecurity once and for all.¬†&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;If you're interested in exploring this topic further, &lt;a href="https://upstream.live/"&gt;please join us on June 7 for Upstream&lt;/a&gt;, a free online one-day celebration of open source, the developers who use it, and the maintainers who create it.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@antipodos?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Michael Niessl&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/river?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>opensource</category>
      <category>devops</category>
      <category>news</category>
    </item>
    <item>
      <title>What **is** Kubernetes? ü§∑üèº‚Äç‚ôÄÔ∏è</title>
      <author>JavaScript‚ûïCoffeeüöÄ</author>
      <pubDate>Wed, 19 May 2021 16:21:51 +0000</pubDate>
      <link>https://dev.to/javascriptcoff1/what-is-kubernetes-ljm</link>
      <guid>https://dev.to/javascriptcoff1/what-is-kubernetes-ljm</guid>
      <description>&lt;p&gt;I was challenged on Twitter to write an article about Kubernetes. Here we go...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#glossary"&gt;
  &lt;/a&gt;
  Glossary:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bandwidth&lt;/strong&gt;: The capacity. How much data can be transferred. &lt;br&gt;
Can also be a word used to describe free time by techy people "how much bandwidth do you have today?" ü§®&lt;br&gt;
&lt;strong&gt;Load balancer&lt;/strong&gt;: Something that...balances the load... of traffic to a site. Makes sure that data and traffic to the site are distributed evenly.&lt;/p&gt;

&lt;p&gt;üåÆ&lt;em&gt;You're going to want to read my short &lt;a href="https://dev.to/javascriptcoff1/what-is-docker-3be2"&gt;What *&lt;em&gt;is *&lt;/em&gt; Docker?&lt;/a&gt; article if you don't know what Docker is before we hit the road here. I know there are usually no prerequisites to my articles, but this is an exception!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theres-a-theme-here"&gt;
  &lt;/a&gt;
  There's a theme here...
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Kubernetes&lt;/em&gt; is the Greek word for a helmsman or someone that steers a ship. ‚õ¥&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hold-that-thought"&gt;
  &lt;/a&gt;
  Hold that thought.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#the-scenario"&gt;
  &lt;/a&gt;
  The scenario
&lt;/h2&gt;

&lt;p&gt;Imagine you (and Randall, from the Docker article) have a site up and running with a Docker container. It's doing pretty darn well. You are getting a lot of visitors to your site, and business is great.&lt;br&gt;
Sometimes, you get &lt;em&gt;too&lt;/em&gt; many visitors to the site and it crashes...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not good&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your site is starting to crash a lot - too many people are visiting and the server is just getting overstretched. It can't handle it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do we do?!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You set up another container on another server. That way, you've got twice the amount of &lt;em&gt;bandwidth&lt;/em&gt; to play with, and in theory, you should be able to have twice the amount of visitors.&lt;br&gt;
You also set up a &lt;em&gt;load balancer&lt;/em&gt; to make sure that visitors are evenly distributed between your servers to ensure that there are no more problems.&lt;br&gt;
Easy, problem solved, right?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wrong&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your business is &lt;strong&gt;incredible&lt;/strong&gt;, you go viral and suddenly you have a ridiculous number of visitors to your site. Everything is great!&lt;/p&gt;

&lt;p&gt;Hold on...these servers can't handle it...&lt;br&gt;
You set up another 20+ servers (just to be sure this time), which all need Docker containers and some extra load balancers to help manage the bandwidth distribution.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: This process is called Horizontal Scaling&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This all takes a &lt;em&gt;lot&lt;/em&gt; of work, and don't even &lt;strong&gt;think&lt;/strong&gt; about making any update to your website...&lt;br&gt;
This is putting a &lt;strong&gt;lot&lt;/strong&gt; of pressure on you, and you are considering hiring another engineer...üí≠$$$$$$$$$$$&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Or...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;üí≠ Imagine if you could &lt;em&gt;automate&lt;/em&gt; this server/container duplication process...&lt;/p&gt;

&lt;p&gt;Well, my friends, I have some news for you&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubernetes"&gt;
  &lt;/a&gt;
  Kubernetes ü¶∏‚Äç‚ôÄÔ∏è
&lt;/h3&gt;

&lt;p&gt;Ok, so, let's imagine that you knew about Kubernetes right at the beginning. You start to use it when you have just one or 2 servers running with Docker. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In Kubernetes, your Docker image (the server with the container and everything that you need to run your website) is called a pod&lt;/strong&gt;&lt;br&gt;
Kubernetes comprises of the 'master' (its official name) and 'worker nodes'.&lt;br&gt;
The worker nodes do all the heavy lifting in terms of storing, transferring and receiving data around the sites and between the servers.&lt;/p&gt;

&lt;p&gt;So, the premise of Kubernetes is like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You decide how many 'worker nodes' you want (typically the same number of servers that you have)&lt;/li&gt;
&lt;li&gt;You give the 'Kubernetes master' (this is the official name) a list of the number of pods (servers) that you need in the form of a &lt;code&gt;.yaml&lt;/code&gt; file. This is called the manifest.&lt;/li&gt;
&lt;li&gt;The Kubernetes master takes a look at the manifest that you have given it and assigns the pods out to the worker nodes. Pods are assigned to the worker nodes depending on how much work they are already doing. Pretty clever, right?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can control the number of pods through the command line and have direct access to information about your pods and worker nodes, such as their name, IP address and other info. You can also update the &lt;code&gt;.yaml&lt;/code&gt; file through the command line with &lt;code&gt;cubectl edit deployment&lt;/code&gt; and then your &lt;code&gt;.yaml&lt;/code&gt; file name. Imagine it as handing a supervisor in charge of a workforce an updated task list. It is their job to make sure that work is distributed evenly and that no one worker node is over or underworked.&lt;br&gt;
The master node monitors the amount of work that each worker node is doing - if anything looks like it is going to crash or become unstable, it will re-distribute the work. &lt;em&gt;Smart, right?&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yes-but-thats-not-all"&gt;
  &lt;/a&gt;
  Yes, but that's not all...!
&lt;/h3&gt;

&lt;p&gt;So these pods that are created, and the images that are inside them, all have their own IP addresses. Great, they are all accessible to the outside world and each version of your site can be reached by the public, and by you, if you want to edit anything.&lt;br&gt;
&lt;em&gt;Wait...how can they be exposed if they are in a pod?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I'm glad you asked that. This is another powerful feature of Kubernetes.&lt;br&gt;
For the outside world to be able to view your site, you need to expose the pods to the network. If you tell it to, Kubernetes will spin up something called a Service which will act as a load balancer to make sure that none of the pods are getting too much traffic (crash zone!)&lt;/p&gt;

&lt;p&gt;The thing that makes it different to a usual load balancer is that Kubernetes will balance the load by pod ID, rather than just balancing across &lt;em&gt;every&lt;/em&gt; server. This means that you can control everything with a lot more precision.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Doesn't sound &lt;em&gt;that&lt;/em&gt; special...?&lt;/strong&gt;&lt;br&gt;
üí•&lt;br&gt;
It also creates a load balancer in your cloud provider. This means that you update your website in &lt;em&gt;one&lt;/em&gt; place. ü§Ø&lt;/p&gt;

&lt;p&gt;Save yourself a lot of time. Orchestrate your containers!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#save-even-more-time-managed-kubernetes-options-good-to-know"&gt;
  &lt;/a&gt;
  Save even more time - managed kubernetes options - good to know...
&lt;/h3&gt;

&lt;p&gt;While researching for this article, I found out how tricky and in-depth it is to set up. Luckily, there are managed options that do it all for you - Azure's AKS and Amazon's EKS.&lt;br&gt;
If you need to get started with Kubernetes fast, say you've built the next Amazon using Docker containers and you need to future-proof &lt;br&gt;
fast, then I recommend using them while you look into Kubernetes. It is very CLI-heavy and looks like it would take some time!&lt;/p&gt;

&lt;p&gt;_So that was Kubernetes. So, now we know what it ** is **! ‚õ¥&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-3LuArd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jrk27oy0j2zvq0r6xps1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-3LuArd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jrk27oy0j2zvq0r6xps1.jpeg" alt="Ship with s"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>kubernetes</category>
      <category>docker</category>
    </item>
    <item>
      <title>Announcing Appwrite 0.8 - an open-source, self-hosted BaaS</title>
      <author>kodumbeats</author>
      <pubDate>Wed, 19 May 2021 16:11:20 +0000</pubDate>
      <link>https://dev.to/appwrite/announcing-appwrite-0-8-an-open-source-self-hosted-baas-kda</link>
      <guid>https://dev.to/appwrite/announcing-appwrite-0-8-an-open-source-self-hosted-baas-kda</guid>
      <description>&lt;p&gt;We're incredibly excited to announce the release of Appwrite 0.8, packed with a ton of cool new features like &lt;strong&gt;JWT support&lt;/strong&gt;, &lt;strong&gt;ARM support&lt;/strong&gt;, &lt;strong&gt;Anonymous Login&lt;/strong&gt;, and more! Last month, we gave a &lt;a href="https://medium.com/appwrite-io/appwrite-0-8-is-coming-soon-and-this-is-what-you-can-expect-fa8cbed1c0eb"&gt;sneak peek&lt;/a&gt; of some of the changes, and we're back today to keep you waiting no longer. Let's dive in! ü§ø&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Appwrite is an open-source, self-hosted Backend-as-a-Service that aims to make app development &lt;strong&gt;easier&lt;/strong&gt; with SDKs available in a variety of programming languages. Come hang out with us on &lt;a href="https://appwrite.io/discord"&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#anonymous-login-and-jwt"&gt;
  &lt;/a&gt;
  Anonymous Login and JWT üîê
&lt;/h2&gt;

&lt;p&gt;Not every app needs users to create an account right away. With &lt;strong&gt;Anonymous Login&lt;/strong&gt;, save sessions without asking for email addresses, and convert those users to registered accounts later with ease. The implementation is just like creating a normal user session via the &lt;a href="https://appwrite.io/docs/client/account?sdk=web#accountCreateSession"&gt;&lt;code&gt;createSession&lt;/code&gt;&lt;/a&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;sdk&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://[HOSTNAME_OR_IP]/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your API Endpoint&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5df5acd0d48c2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your project ID&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAnonymousSession&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Success&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Failure&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, if you've ever needed to act as a user from a &lt;a href="https://appwrite.io/docs/sdks"&gt;server SDK&lt;/a&gt;, Appwrite now supports authentication via JSON Web Tokens (&lt;a href="https://jwt.io/"&gt;JWT&lt;/a&gt;). This change allows Appwrite to work with the server-side rendering capabilities of frameworks like &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;, &lt;a href="https://nuxtjs.org/"&gt;Nuxt.js&lt;/a&gt;, and &lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby.js&lt;/a&gt;, as well as unlock user actions from server-side SDKs.&lt;/p&gt;

&lt;p&gt;First, a JWT is created for the user from a Client SDK:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;appwrite&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createJWT&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, the JWT is used to act on behalf of the user server-side:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node-appwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://[HOSTNAME_OR_IP]/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your API Endpoint&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5df5acd0d48c2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your project ID&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setJWT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;919c2d18fb5d4...a2ae413da83346ad2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your JWT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arm-support"&gt;
  &lt;/a&gt;
  ARM Support ü¶æ
&lt;/h2&gt;

&lt;p&gt;The ARM ecosystem has been booming since Apple's M1 processors landed in their new lineup of devices. Starting with 0.8, install Appwrite on your favorite 64-bit ARM device, from Amazon Graviton2 down to the Raspberry Pi 4! [1] ARM support falls in line with our mission to make Appwrite &lt;strong&gt;technology agnostic&lt;/strong&gt;, and we're excited to hear all of the new places where Appwrite can run. &lt;/p&gt;

&lt;p&gt;To celebrate this milestone, we have ARM systems to give away as a part of &lt;a href="https://30days.appwrite.io/"&gt;#30DaysofAppwrite&lt;/a&gt;! ü•≥ Through the month of May, we're building a Medium.com blog clone to demonstrate how &lt;strong&gt;easy&lt;/strong&gt; the developer experience is with Appwrite, and we invite you to build alongside us. Eligible submissions get some cool üòé swag, and the best projects will receive Raspberry Pi 4 development kits. üòç&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[1] For both Graviton2 servers and Raspberry Pis, we recommend at least 2GB of RAM for the best Appwrite experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#control-your-console"&gt;
  &lt;/a&gt;
  Control your Console üñ•Ô∏è
&lt;/h2&gt;

&lt;p&gt;We've updated the console with a few new goodies. First, if you enable the new "root" account setting, only a single admin account can be created on your Appwrite server. If you need to share access to the Appwrite console, you can restrict account creation to specific IP addresses with the &lt;code&gt;_APP_CONSOLE_WHITELIST_IPS&lt;/code&gt; environment variable. &lt;/p&gt;

&lt;p&gt;Additionally, Appwrite 0.8 brings new settings to users - now, you can choose which of our growing authentication methods you'd like to use for your apps: email/password login, anonymous login, JWT auth, and more! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QLJbEqF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl8sa1dyish9bkx0d7hn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QLJbEqF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl8sa1dyish9bkx0d7hn.png" alt="Control Auth Methods"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-cloud-function-runtimes"&gt;
  &lt;/a&gt;
  New Cloud Function Runtimes üèÉ
&lt;/h2&gt;

&lt;p&gt;Appwrite 0.8 introduces &lt;strong&gt;Python 3.9&lt;/strong&gt;, &lt;strong&gt;Deno 1.8&lt;/strong&gt;, and &lt;strong&gt;Dart 2.12&lt;/strong&gt; as new runtimes for Cloud Functions. Upgrade existing functions or write new ones! If you're using Cloud Functions in a cool way, let us know on &lt;a href="https://appwrite.io/discord"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#slimmer-and-faster"&gt;
  &lt;/a&gt;
  Slimmer and Faster ‚è©
&lt;/h2&gt;

&lt;p&gt;You'll notice Appwrite 0.8 is a bit slimmer on system resources out-of-the-box. We found that the SMTP and antivirus services weren't helping new developers, so we've toggled off ClamAV and the included SMTP server for development. Because of these changes, we have been able to reduce our minimum requirements to &lt;strong&gt;1GB of RAM&lt;/strong&gt; (though we recommend 2GB for the better experience).&lt;/p&gt;

&lt;p&gt;We also updated our codebase to take advantage of the increased performance of some of our under the hood technologies. Based on our testing, we're seeing improved performance of about 8% compared to previous Appwrite versions üöÄ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---mXj6aY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgfyhk1szev9gyew9gxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---mXj6aY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgfyhk1szev9gyew9gxg.png" alt="Benchmarks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#breaking-changes"&gt;
  &lt;/a&gt;
  Breaking Changes ‚öíÔ∏è
&lt;/h2&gt;

&lt;p&gt;Before you upgrade your Appwrite server to 0.8, check out the breaking changes that were introduced to see if you need to update any code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://appwrite.io/docs/server/users#usersDeleteUser"&gt;&lt;code&gt;deleteUser&lt;/code&gt; method&lt;/a&gt; in the Users API has been renamed to &lt;code&gt;delete&lt;/code&gt; to remain consistent with the rest of the API.&lt;/li&gt;
&lt;li&gt;Only logged in users &lt;a href="https://appwrite.io/docs/client/account?sdk=web#accountCreateSession"&gt;with active sessions&lt;/a&gt; can execute functions. If your app relies on this behavior, check out Anonymous Login.&lt;/li&gt;
&lt;li&gt;Only the user who &lt;a href="https://appwrite.io/docs/client/functions?sdk=web#functionsCreateExecution"&gt;triggers an execution&lt;/a&gt; gets access to the relevant execution logs.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://appwrite.io/docs/client/teams?sdk=web#teamsCreateMembership"&gt;&lt;code&gt;createMembership&lt;/code&gt; method&lt;/a&gt; has a new rate limit of 10 requests per 60 minutes per IP address.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://appwrite.io/docs/environment-variables"&gt;environment variable&lt;/a&gt; &lt;code&gt;_APP_FUNCTIONS_ENVS&lt;/code&gt; has been renamed to &lt;code&gt;APP_FUNCTIONS_RUNTIMES&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Several function execution environment variables have been renamed:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;APPWRITE_FUNCTION_EVENT_PAYLOAD&lt;/code&gt; is now &lt;code&gt;APPWRITE_FUNCTION_EVENT_DATA&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;APPWRITE_FUNCTION_ENV_NAME&lt;/code&gt; is now &lt;code&gt;APPWRITE_FUNCTION_RUNTIME_NAME&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;APPWRITE_FUNCTION_ENV_VERSION&lt;/code&gt; is now &lt;code&gt;APPWRITE_FUNCTION_RUNTIME_VERSION&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#and-more"&gt;
  &lt;/a&gt;
  And More! üòç
&lt;/h2&gt;

&lt;p&gt;That's not all! To get all the details on Appwrite 0.8, check out all the changes in the &lt;a href="https://github.com/appwrite/appwrite/blob/master/CHANGES.md"&gt;changelog on GitHub&lt;/a&gt;. Are you curious about the big ideas we have up next, or have a great idea for Appwrite's future? Check out the &lt;a href="https://github.com/appwrite/rfc"&gt;RFC Repo&lt;/a&gt; for more details. Also, our &lt;a href="https://github.com/appwrite/awesome-appwrite"&gt;awesome-appwrite repo&lt;/a&gt; keeps growing with new tutorials, videos, and demos.&lt;/p&gt;

&lt;p&gt;If you've just discovered Appwrite and would like to get started, check out out our &lt;a href="https://30days.appwrite.io/"&gt;30 Days of Appwrite&lt;/a&gt; series where we explain step-by-step everything you need to know to build awesome Appwrite-powered apps. Follow us on &lt;a href="https://twitter.com/appwrite_io"&gt;Twitter&lt;/a&gt;, &lt;a href="https://dev.to/appwrite"&gt;Dev.to&lt;/a&gt;, or anywhere you find your friendly neighborhood Appwrite. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>flutter</category>
      <category>webdev</category>
      <category>news</category>
    </item>
    <item>
      <title>Distributed embeddings cluster</title>
      <author>David Mezzetti</author>
      <pubDate>Wed, 19 May 2021 15:58:00 +0000</pubDate>
      <link>https://dev.to/neuml/distributed-embeddings-cluster-24gg</link>
      <guid>https://dev.to/neuml/distributed-embeddings-cluster-24gg</guid>
      <description>&lt;p&gt;&lt;a href="https://colab.research.google.com/github/neuml/txtai/blob/master/examples/15_Distributed_embeddings_cluster.ipynb"&gt;&lt;img src="https://camo.githubusercontent.com/84f0493939e0c4de4e6dbe113251b4bfb5353e57134ffd9fcab6b8714514d4d1/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article is part of a tutorial series on &lt;a href="https://github.com/neuml/txtai"&gt;txtai&lt;/a&gt;, an AI-powered search engine.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The txtai API is a web-based service backed by &lt;a href="https://fastapi.tiangolo.com/"&gt;FastAPI&lt;/a&gt;. All txtai functionality is available via the API. The API can also cluster multiple embeddings indices into a single logical index to horizontally scale over multiple nodes. &lt;/p&gt;

&lt;p&gt;This notebook installs the txtai API and shows an example of building an embeddings cluster.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h1&gt;

&lt;p&gt;Install &lt;code&gt;txtai&lt;/code&gt; and all dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;txtai
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#start-distributed-embeddings-cluster"&gt;
  &lt;/a&gt;
  Start distributed embeddings cluster
&lt;/h1&gt;

&lt;p&gt;First we'll start multiple API instances that will serve as embeddings index shards. Each shard stores a subset of the indexed data and these shards work in tandem to form a single logical index.&lt;/p&gt;

&lt;p&gt;Then we'll start the main API instance that clusters the shards together into a logical instance.&lt;/p&gt;

&lt;p&gt;The API instances are all started in the background.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/content"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;writable&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

&lt;span class="c1"&gt;# Embeddings settings&lt;/span&gt;
&lt;span class="na"&gt;embeddings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;transformers&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sentence-transformers/bert-base-nli-mean-tokens&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Embeddings cluster&lt;/span&gt;
&lt;span class="na"&gt;cluster&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;shards&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;http://127.0.0.1:8001&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;http://127.0.0.1:8002&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Start embeddings shards&lt;/span&gt;
&lt;span class="nv"&gt;CONFIG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;index.yml &lt;span class="nb"&gt;nohup &lt;/span&gt;uvicorn &lt;span class="nt"&gt;--port&lt;/span&gt; 8001 &lt;span class="s2"&gt;"txtai.api:app"&lt;/span&gt; &amp;amp;&amp;gt; shard-1.log &amp;amp;
&lt;span class="nv"&gt;CONFIG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;index.yml &lt;span class="nb"&gt;nohup &lt;/span&gt;uvicorn &lt;span class="nt"&gt;--port&lt;/span&gt; 8002 &lt;span class="s2"&gt;"txtai.api:app"&lt;/span&gt; &amp;amp;&amp;gt; shard-2.log &amp;amp;

&lt;span class="c"&gt;# Start main instance&lt;/span&gt;
&lt;span class="nv"&gt;CONFIG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;cluster.yml &lt;span class="nb"&gt;nohup &lt;/span&gt;uvicorn &lt;span class="nt"&gt;--port&lt;/span&gt; 8000 &lt;span class="s2"&gt;"txtai.api:app"&lt;/span&gt; &amp;amp;&amp;gt; main.log &amp;amp;

&lt;span class="c"&gt;# Wait for startup&lt;/span&gt;
&lt;span class="nb"&gt;sleep &lt;/span&gt;90
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h1&gt;

&lt;p&gt;Let's first try the cluster out directly in Python. The code below aggregates the two shards into a single cluster and executes actions against the cluster.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;txtai.api&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Cluster&lt;/span&gt;

&lt;span class="n"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Cluster&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"shards"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"http://127.0.0.1:8001"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"http://127.0.0.1:8002"&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;"US tops 5 million confirmed virus cases"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"Canada's last fully intact ice shelf has suddenly collapsed, forming a Manhattan-sized iceberg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"Beijing mobilises invasion craft along coast as Taiwan tensions escalate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"The National Park Service warns against sacrificing slower friends in a bear attack"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"Maine man wins $1M from $25 lottery ticket"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"Make huge profits without work, earn up to $100,000 a day"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Index data
&lt;/span&gt;&lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;([{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Test search
&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"feel good story"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Query: feel good story&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Result:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Query: feel good story
Result: Maine man wins $1M from $25 lottery ticket
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h1&gt;

&lt;p&gt;Next let's try to run the same code above via the API using JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;txtai
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this example, we'll clone the txtai.js project to import the example build configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/neuml/txtai.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#run-clusterjs"&gt;
  &lt;/a&gt;
  Run cluster.js
&lt;/h2&gt;

&lt;p&gt;The following script is a JavaScript version of the logic above&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Embeddings&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;txtai&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sprintf-js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;embeddings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Embeddings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;US tops 5 million confirmed virus cases&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Canada's last fully intact ice shelf has suddenly collapsed, forming a Manhattan-sized iceberg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Beijing mobilises invasion craft along coast as Taiwan tensions escalate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The National Park Service warns against sacrificing slower friends in a bear attack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Maine man wins $1M from $25 lottery ticket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Make huge profits without work, earn up to $100,000 a day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Querying an Embeddings cluster&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%-20s %s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Query&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Best Match&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;feel good story&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;climate change&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;health&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;war&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;wildlife&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;asia&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;north america&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dishonest junk&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;embeddings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%-20s %s&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#build-and-run-clusterjs"&gt;
  &lt;/a&gt;
  Build and run cluster.js
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;txtai.js/examples/node
npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next lets run the code against the main cluster URL&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node dist/cluster.js http://127.0.0.1:8000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Querying an Embeddings cluster
Query                Best Match
--------------------------------------------------
feel good story      Maine man wins $1M from $25 lottery ticket
climate change       Canada's last fully intact ice shelf has suddenly collapsed, forming a Manhattan-sized iceberg
health               US tops 5 million confirmed virus cases
war                  Beijing mobilises invasion craft along coast as Taiwan tensions escalate
wildlife             The National Park Service warns against sacrificing slower friends in a bear attack
asia                 Beijing mobilises invasion craft along coast as Taiwan tensions escalate
north america        US tops 5 million confirmed virus cases
dishonest junk       Make huge profits without work, earn up to $100,000 a day
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The JavaScript program is showing the same results as the Python code above. This is running a clustered query against both nodes in the cluster and aggregating the results together.&lt;/p&gt;

&lt;p&gt;Queries can be run against each individual shard to see what the queries independently return.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node dist/cluster.js http://127.0.0.1:8001
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Querying an Embeddings cluster
Query                Best Match
--------------------------------------------------
feel good story      Maine man wins $1M from $25 lottery ticket
climate change       Beijing mobilises invasion craft along coast as Taiwan tensions escalate
health               US tops 5 million confirmed virus cases
war                  Beijing mobilises invasion craft along coast as Taiwan tensions escalate
wildlife             Beijing mobilises invasion craft along coast as Taiwan tensions escalate
asia                 Beijing mobilises invasion craft along coast as Taiwan tensions escalate
north america        US tops 5 million confirmed virus cases
dishonest junk       Beijing mobilises invasion craft along coast as Taiwan tensions escalate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node dist/cluster.js http://127.0.0.1:8002
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Querying an Embeddings cluster
Query                Best Match
-------------------------------------------------------
feel good story      Make huge profits without work, earn up to $100,000 a day
climate change       Canada's last fully intact ice shelf has suddenly collapsed, forming a Manhattan-sized iceberg
health               Make huge profits without work, earn up to $100,000 a day
war                  Canada's last fully intact ice shelf has suddenly collapsed, forming a Manhattan-sized iceberg
wildlife             The National Park Service warns against sacrificing slower friends in a bear attack
asia                 Make huge profits without work, earn up to $100,000 a day
north america        Canada's last fully intact ice shelf has suddenly collapsed, forming a Manhattan-sized iceberg
dishonest junk       Make huge profits without work, earn up to $100,000 a day
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note the differences. The section below runs a count against the full cluster and each shard to show the count of records in each.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://127.0.0.1:8000/count
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
curl http://127.0.0.1:8001/count
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
curl http://127.0.0.1:8002/count
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;6
3
3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This notebook showed how a distributed embeddings cluster can be created with txtai. This example can be further scaled out on Kubernetes with StatefulSets, which will be covered in a future tutorial.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>machinelearning</category>
      <category>nlp</category>
      <category>python</category>
    </item>
    <item>
      <title>LitmusChaos at Kubecon EU '21
</title>
      <author>Karthik Satchitanand</author>
      <pubDate>Wed, 19 May 2021 15:48:27 +0000</pubDate>
      <link>https://dev.to/ksatchit/litmuschaos-at-kubecon-eu-21-5963</link>
      <guid>https://dev.to/ksatchit/litmuschaos-at-kubecon-eu-21-5963</guid>
      <description>&lt;p&gt;KubeCon is veritably a festival for the tech community nowadays, and this is a sentiment that I have expressed several times before, but cannot tire of repeating! The sheer diversity of content (organized into a neat set of tracks), the announcements &amp;amp; launches, predictions, and panel discussions, all add to the excitement. I even managed to get my young nephew interested in the Cloud Native world by ordering the Phippy &amp;amp; friends buildable set with my Speaker giveaway! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJxgN58m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owfs7o8h7yuzgrv9ikdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJxgN58m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owfs7o8h7yuzgrv9ikdb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For us, as members of the LitmusChaos project &amp;amp; the broader cloud native chaos engineering community, this edition of Kubecon EU '21  turned out to be sweeter still.  &lt;/p&gt;

&lt;p&gt;The predictions made ahead of the event by Cheryl Hung, VP, Ecosystem at CNCF, where she noted the growing interest in chaos, set the ball rolling (and this came on the back of similar observations made by Liz Rice, the chair of CNCF‚Äôs Technical Oversight Committee (ToC) at the November 2020 Kubecon): &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9W7AouKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118844085-4be2a480-b8e8-11eb-9f05-fbee16fd4b7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9W7AouKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118844085-4be2a480-b8e8-11eb-9f05-fbee16fd4b7f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;From inside CNCF I have a unique insight into cloud native tech, DevOps and ecosystem. Here‚Äôs what I see coming next!&lt;a href="https://t.co/KeqcQCC3E7"&gt;&lt;/a&gt;&lt;a href="https://t.co/KeqcQCC3E7"&gt;https://t.co/KeqcQCC3E7&lt;/a&gt; &lt;a href="https://t.co/e7uoq0aXXz"&gt;pic.twitter.com/e7uoq0aXXz&lt;/a&gt;&lt;/p&gt;‚Äî Cheryl Hung (@oicheryl) &lt;a href="https://twitter.com/oicheryl/status/1374419739489886212?ref_src=twsrc%5Etfw"&gt;March 23, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;This added to the organic interest that Litmus as a project has gathered in the CNCF community, and resulted in some wonderful responses to the various presentations/talks that it featured in. All this led to newer slack members, appreciative messages from those that grokked the project, more questions on what‚Äôs coming &amp;amp; roadmap, quick feedback from folks that tried it, and some cool issues and PRs in the process! &lt;/p&gt;

&lt;p&gt;In this blog post, let us do a quick round-up of the talks/sessions where Litmus ‚Äúappeared‚Äù. Some of the perspectives expressed are instructive and definitely hold value for us at the project. I have also tried to capture all the buzz (via tweets, of course) around Litmus and provide links to the awesome presentations around the project.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-roundup"&gt;
  &lt;/a&gt;
  The Round-Up
&lt;/h1&gt;

&lt;p&gt;First up, was the whirlwind sandbox projects tour by Justin Cormack, CTO, Docker,  where he &lt;a href="https://youtu.be/XmMbzBuCuYw?t=462"&gt;introduced Litmus&lt;/a&gt; as a way to package &amp;amp; perform your own custom chaos experiments. The talk prompted some awesome cloud-native advocates &amp;amp; tech-gurus to recall some deep dives on the project that had been performed in recent times! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R9GkVJGY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118844394-8d734f80-b8e8-11eb-9796-aaa59049aa73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R9GkVJGY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118844394-8d734f80-b8e8-11eb-9796-aaa59049aa73.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;This year we've been taking a deep dive into the CNCF Sandbox on our blog, and so far we've covered &lt;a href="https://twitter.com/kubevirt?ref_src=twsrc%5Etfw"&gt;@kubevirt&lt;/a&gt;, &lt;a href="https://twitter.com/LitmusChaos?ref_src=twsrc%5Etfw"&gt;@LitmusChaos&lt;/a&gt; and &lt;a href="https://twitter.com/telepresenceio?ref_src=twsrc%5Etfw"&gt;@telepresenceio&lt;/a&gt;. But &lt;a href="https://twitter.com/justincormack?ref_src=twsrc%5Etfw"&gt;@justincormack&lt;/a&gt; just blew us out of the water running through all 50 projects in 15min! &lt;a href="https://twitter.com/hashtag/KubeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#KubeCon&lt;/a&gt;&lt;a href="https://t.co/qh9eVE4q3N"&gt;&lt;/a&gt;&lt;a href="https://t.co/qh9eVE4q3N"&gt;https://t.co/qh9eVE4q3N&lt;/a&gt;&lt;/p&gt;‚Äî LiveWyer (@LiveWyerUK) &lt;a href="https://twitter.com/LiveWyerUK/status/1389891093605634051?ref_src=twsrc%5Etfw"&gt;May 5, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yV2QT2EK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118844649-bdbaee00-b8e8-11eb-903f-360dc41516ca.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yV2QT2EK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118844649-bdbaee00-b8e8-11eb-903f-360dc41516ca.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/LitmusChaos?ref_src=twsrc%5Etfw"&gt;@LitmusChaos&lt;/a&gt; &lt;a href="https://t.co/U405GfALZZ"&gt;&lt;/a&gt;&lt;a href="https://t.co/U405GfALZZ"&gt;https://t.co/U405GfALZZ&lt;/a&gt;&lt;/p&gt;‚Äî David McKay (&lt;a class="mentioned-user" href="https://dev.to/rawkode"&gt;@rawkode&lt;/a&gt;
) &lt;a href="https://twitter.com/rawkode/status/1389873545497522176?ref_src=twsrc%5Etfw"&gt;May 5, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;Our KubeCon talk, on &lt;a href="https://www.youtube.com/watch?v=_DgCc4-BLW8"&gt;Putting Chaos into Continuous Delivery to increase Application resilience&lt;/a&gt; along with the fantastic team at Keptn, was well attended with many questions on the philosophy of automated chaos. For those interested, there is more coming on the integration with Keptn, including some very cool use cases around auto-remediation!  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AdgCTfkq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118845328-50f42380-b8e9-11eb-9037-915e7d99afaf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AdgCTfkq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118845328-50f42380-b8e9-11eb-9037-915e7d99afaf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;Key takeaways from the talk! üòç&lt;br&gt;Glad to have &lt;a href="https://twitter.com/KitopiHQ?ref_src=twsrc%5Etfw"&gt;@KitopiHQ&lt;/a&gt; as an adopter of both &lt;a href="https://twitter.com/keptnProject?ref_src=twsrc%5Etfw"&gt;@keptnProject&lt;/a&gt; &amp;amp; &lt;a href="https://twitter.com/LitmusChaos?ref_src=twsrc%5Etfw"&gt;@LitmusChaos&lt;/a&gt;.&lt;br&gt;&lt;br&gt;This establishes a process of continuously evaluating resiliency! &lt;a href="https://t.co/Rs8QvoKogk"&gt;pic.twitter.com/Rs8QvoKogk&lt;/a&gt;&lt;/p&gt;‚Äî LitmusChaos (Chaos Engineering for Kubernetes) (&lt;a class="mentioned-user" href="https://dev.to/litmuschaos"&gt;@litmuschaos&lt;/a&gt;
) &lt;a href="https://twitter.com/LitmusChaos/status/1390245923633078275?ref_src=twsrc%5Etfw"&gt;May 6, 2021&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;p&gt;Alois Reitbauer (&lt;a href="https://twitter.com/AloisReitbauer"&gt;https://twitter.com/AloisReitbauer&lt;/a&gt;), co-chair of the CNCF SIG-App Delivery, presented &lt;a href="https://youtu.be/74VpVe-pZx0?t=1481"&gt;some interesting findings in this space&lt;/a&gt;, with Chaos Engineering &amp;amp; Litmus getting special mention. He discussed some common experimentation trends, and how organizations are embracing a shift left approach with chaos. And what better than validation of these thoughts from the experts at Gitlab! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K4dT90Ah--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118845753-b1836080-b8e9-11eb-8f41-48be5edc0c86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K4dT90Ah--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118845753-b1836080-b8e9-11eb-8f41-48be5edc0c86.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;Chaos Engineering. I'm here for it. Shift left in CI/CD. üôå&lt;a href="https://twitter.com/hashtag/KubeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#KubeCon&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/CloudNativeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#CloudNativeCon&lt;/a&gt; &lt;a href="https://t.co/YeS8YFJkgr"&gt;pic.twitter.com/YeS8YFJkgr&lt;/a&gt;&lt;/p&gt;‚Äî Michael Friedrich, go SLO ... conf üìàüá¶üáπ (&lt;a class="mentioned-user" href="https://dev.to/dnsmichi"&gt;@dnsmichi&lt;/a&gt;
) &lt;a href="https://twitter.com/dnsmichi/status/1389936157853618182?ref_src=twsrc%5Etfw"&gt;May 5, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;Next up was probably the &lt;a href="https://youtu.be/btGFt5-37hs?t=740"&gt;most interesting demo&lt;/a&gt; (one that followed a nice intro/whiteboard session) involving litmus in the Kubecon. Saiyam (Civo) &amp;amp; Karthik (Verica) presented how one could leverage the GitOps &amp;amp; Event-triggered chaos features in the Litmus platform to test the sanity of the changes made to your application deployments on the cluster. It also had some cool takeaways on how you should approach chaos engineering &amp;amp; up your reliability game.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vOINPXPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118845090-1be7d100-b8e9-11eb-9120-d58fcb35ee68.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOINPXPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118845090-1be7d100-b8e9-11eb-9120-d58fcb35ee68.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;The demo included -&amp;gt; &lt;a href="https://twitter.com/LitmusChaos?ref_src=twsrc%5Etfw"&gt;@LitmusChaos&lt;/a&gt;, &lt;a href="https://twitter.com/CivoCloud?ref_src=twsrc%5Etfw"&gt;@CivoCloud&lt;/a&gt; Kubernetes, &lt;a href="https://twitter.com/PrometheusIO?ref_src=twsrc%5Etfw"&gt;@PrometheusIO&lt;/a&gt; and black box exporter &lt;a href="https://twitter.com/grafana?ref_src=twsrc%5Etfw"&gt;@grafana&lt;/a&gt;, &lt;a href="https://twitter.com/fluxcd?ref_src=twsrc%5Etfw"&gt;@fluxcd&lt;/a&gt;, &lt;a href="https://twitter.com/github?ref_src=twsrc%5Etfw"&gt;@github&lt;/a&gt; actions!&lt;br&gt;&lt;br&gt;Repo -&amp;gt; &lt;a href="https://t.co/dHrXYESCd9"&gt;&lt;/a&gt;&lt;a href="https://t.co/dHrXYESCd9"&gt;https://t.co/dHrXYESCd9&lt;/a&gt; &lt;a href="https://t.co/7Gd35fmmj1"&gt;&lt;/a&gt;&lt;a href="https://t.co/7Gd35fmmj1"&gt;https://t.co/7Gd35fmmj1&lt;/a&gt;&lt;/p&gt;‚Äî Saiyam Pathak (@SaiyamPathak) &lt;a href="https://twitter.com/SaiyamPathak/status/1390290962748903434?ref_src=twsrc%5Etfw"&gt;May 6, 2021&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;p&gt;In between the various talks, we had the opportunity to hold the Office Hours (thanks a ton to the CNCF for organizing this) where community members, first time users got a chance to learn about the project &amp;amp; the advanced ones to probe us on the roadmap :). What better than waking up to messages like this from folks that attended the office hours: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7oObQul9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118845981-e099d200-b8e9-11eb-83f1-518af04a14aa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7oObQul9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118845981-e099d200-b8e9-11eb-83f1-518af04a14aa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/hashtag/Chaos?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Chaos&lt;/a&gt; &lt;a href="https://twitter.com/LitmusChaos?ref_src=twsrc%5Etfw"&gt;@LitmusChaos&lt;/a&gt; was a big surprise for me in &lt;a href="https://twitter.com/hashtag/kubeconEU?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#kubeconEU&lt;/a&gt;. They have an excellent solution for controlled and scheduled chaos validation in production environments for many services running on K8s. Great solution for Disaster Recovery and self healing tests&lt;/p&gt;‚Äî Matheus Fidelis @ 127.0.0.1 (@fidelissauro) &lt;a href="https://twitter.com/fidelissauro/status/1389564772866220033?ref_src=twsrc%5Etfw"&gt;May 4, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;Amidst all this, we had our SIG-Docs lead &lt;a href="https://twitter.com/Divya_Mohan02"&gt;@Divya_Mohan02&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=445UZFpbG90&amp;amp;list=PLHgdNuGxrJt0ZHXZlIxDi6DTdfJbXGFo1&amp;amp;index=15"&gt;participating&lt;/a&gt; in the awesome DoKC Day (Data on Kubernetes Community), where she shared her contribution journey in LitmusChaos, what it means to break things intentionally &amp;amp; how folks can get involved with the project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L2jeYRGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118846472-5bfb8380-b8ea-11eb-9b37-f59720c37a94.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L2jeYRGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21166217/118846472-5bfb8380-b8ea-11eb-9b37-f59720c37a94.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;"The art of intentionally breaking things"=chaos engineering/the title of &lt;a href="https://twitter.com/Divya_Mohan02?ref_src=twsrc%5Etfw"&gt;@Divya_Mohan02&lt;/a&gt;'s talk about her experience working with &lt;a href="https://twitter.com/LitmusChaos?ref_src=twsrc%5Etfw"&gt;@LitmusChaos&lt;/a&gt; &lt;a href="https://t.co/T3BlkKqXEX"&gt;&lt;/a&gt;&lt;a href="https://t.co/T3BlkKqXEX"&gt;https://t.co/T3BlkKqXEX&lt;/a&gt;&lt;/p&gt;‚Äî Data on K8s Community (@DoKcommunity) &lt;a href="https://twitter.com/DoKcommunity/status/1390222135851950083?ref_src=twsrc%5Etfw"&gt;May 6, 2021&lt;/a&gt;
&lt;/blockquote&gt;  
&lt;h1&gt;
  &lt;a href="#looking-ahead"&gt;
  &lt;/a&gt;
  Looking Ahead
&lt;/h1&gt;

&lt;p&gt;While we feel chaos engineering &amp;amp; LitmusChaos project‚Äôs approach towards it has been validated, &lt;strong&gt;there is much work to do &amp;amp; improve&lt;/strong&gt;. The impending Litmus 2.0 launch is expected to improve the experience of users along with a host of useful features. Having said that, What are the aspects you are most interested in seeing Litmus get better at, features you‚Äôd like to include or integrations you‚Äôd like to see? &lt;/p&gt;

&lt;p&gt;Feel free to get involved in these discussions on our slack channel or post your thoughts into the Github discussions ! &lt;/p&gt;




&lt;p&gt;Are you an SRE, developer, or a Kubernetes enthusiast? Does Chaos Engineering excite you? Join our community on &lt;a href="https://slack.litmuschaos.io/"&gt;Slack&lt;/a&gt; For detailed discussions &amp;amp; regular updates On Chaos Engineering For Kubernetes.&lt;/p&gt;

&lt;p&gt;Check out the LitmusChaos &lt;a href="https://github.com/litmuschaos/litmus"&gt;GitHub repo&lt;/a&gt; and do share your feedback. Submit a pull request if you identify any necessary changes.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>cloudnative</category>
      <category>litmuschaos</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What Are GANs? Generative Adversarial Networks Explained</title>
      <author>nponte-zumo</author>
      <pubDate>Wed, 19 May 2021 15:40:14 +0000</pubDate>
      <link>https://dev.to/npontezumo/what-are-gans-generative-adversarial-networks-explained-1b88</link>
      <guid>https://dev.to/npontezumo/what-are-gans-generative-adversarial-networks-explained-1b88</guid>
      <description>&lt;p&gt;&lt;strong&gt;Generative Adversarial Networks&lt;/strong&gt;, or &lt;strong&gt;GANs&lt;/strong&gt;, are an implementation of a &lt;strong&gt;Generative Model&lt;/strong&gt; [Figure 1]. A generative model is a neural network which is trained to output a new example (e.g. an image) from a distribution of provided examples.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tNdsT2S5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4qq2w8jge2mfirlrhz0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tNdsT2S5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4qq2w8jge2mfirlrhz0.png" alt="Figure 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GANs are composed of two parts: the &lt;strong&gt;Generator&lt;/strong&gt; and the &lt;strong&gt;Discriminator&lt;/strong&gt; [Figure 2]. The Generator and the Discriminator are two separate neural networks: their goal is to transform a given input into a desired output. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKoj3Eof--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vgn6t6gxq38f3999a3cx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKoj3Eof--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vgn6t6gxq38f3999a3cx.png" alt="Figure 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Generator&lt;/strong&gt; is a generative model: given a random vector of noise this network will generate something which is within the distribution of the training data. The &lt;strong&gt;Discriminator&lt;/strong&gt; is a model trained to return the probability that the input example came from the original training data‚Äîthat is, is from the same statistical distribution‚Äîand was not just randomly generated [Figure 3]. &lt;strong&gt;Think of the Generator as an art forger and the discriminator as an art evaluator.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dWSdfYld--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/himrxa8z4esjtnpyb886.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWSdfYld--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/himrxa8z4esjtnpyb886.png" alt="Figure 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both of these models are trained to achieve that same end goal by using &lt;strong&gt;back propagation&lt;/strong&gt;. &lt;strong&gt;Back propagation&lt;/strong&gt; is the process of iteratively moving the weights of the neural network towards the desired goal [Figure 4]. The Generator and the Discriminator (borrowing some concepts from game theory) are placed as adversaries, allowing them to train each other to be better at their respective tasks: generating and discriminating. Though trained in tandem, the ultimate goal is really to train a strong generative model.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_cxFuXQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vi3b61eifzyvjaeube7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_cxFuXQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vi3b61eifzyvjaeube7.png" alt="Figure 4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#important-literature"&gt;
  &lt;/a&gt;
  Important Literature
&lt;/h4&gt;

&lt;p&gt;If you're just getting into GANs, I suggest starting with Generative Adversarial Nets [1] which was the first paper to propose the GAN architecture. This paper introduces the foundational math and basic structure that allows this adversarial system to function.&lt;/p&gt;

&lt;p&gt;Most ‚Äúmodern‚Äù GANs have similar architectures to the one proposed in the paper Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks [2] or &lt;strong&gt;DCGANs&lt;/strong&gt;. This paper provides guidance on using &lt;strong&gt;Convolutional Neural Networks&lt;/strong&gt; or &lt;strong&gt;CNNs&lt;/strong&gt; in a GAN framework. Using this new architecture, they are able to identify parts of the model state or weights it is using for certain representations. The research team was able to empirically identify what parts of the model was encoding the logic about windows in a room generator and then use that knowledge to determine if the network was learning a true internal representation of what makes a room.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---D787IS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5ih6xyxqlazhe84ajel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---D787IS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5ih6xyxqlazhe84ajel.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another paper, titled Improved Techniques for Training GANs [3], suggests a series of concepts that aim to navigate common pitfalls and train more robust Generator and Discriminator models. This paper uses these techniques to demonstrate significant improvements over existing models for both simple and complex representations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E8RO4dfT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x20cdz8y8i3rsbiti631.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E8RO4dfT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x20cdz8y8i3rsbiti631.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, one of the more impressive GAN implementations belongs to the authors of A Style-Based Generator Architecture for Generative Adversarial Networks [4]. This last paper borrows style-transfer techniques to train better Generators, specifically Generators which separate high-level attributes from variations. This technique allows us to generate examples that are influenced by a specific style.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GCjUWvVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pllor2d4w1s4afdmv0rr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GCjUWvVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pllor2d4w1s4afdmv0rr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-the-data-matters"&gt;
  &lt;/a&gt;
  Why the Data Matters
&lt;/h4&gt;

&lt;p&gt;Finally‚Äîsince we're Zumo Labs‚ÄîI'll leave you with some cool examples of how GANs can be used to tackle the data problem that's at the very heart of machine learning. &lt;/p&gt;

&lt;p&gt;One of the core issues with most collected data is that most machine learning models used in production are trained using supervised learning, where a label is necessary for the model to learn from an image. GANs have been tackling this problem by learning how to generate labels from an unlabeled input image. The images below are some examples from Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks [5] and RenderGAN: Generating Realistic Labeled Data [6]. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sQAJ3NOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uosi5akge8li14xk6e0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sQAJ3NOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uosi5akge8li14xk6e0i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At Zumo Labs, we think the future of machine learning involves mapping configurable simulations to real world use cases. However, in some cases, it's currently more expensive to model all of these scenarios than it is to go take images of these scenarios and manually annotate them. In order to decrease the cost of these virtual worlds, machine learning can be used to learn a mapping between a configurable environment and the real world. This can be seen below in the paper GANcraft: Unsupervised 3D Neural Rendering of Minecraft Worlds [7] where a GAN is used to generate 3D photo-realistic worlds from Minecraft worlds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wKWukrKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8agbh62ztjhcb5miw4js.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wKWukrKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8agbh62ztjhcb5miw4js.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h4&gt;

&lt;p&gt;[1] Generative Adversarial Networks (&lt;a href="https://arxiv.org/pdf/1406.2661.pdf"&gt;https://arxiv.org/pdf/1406.2661.pdf&lt;/a&gt;)&lt;br&gt;
[2] Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks (&lt;a href="https://arxiv.org/pdf/1511.06434.pdf"&gt;https://arxiv.org/pdf/1511.06434.pdf&lt;/a&gt;)&lt;br&gt;
[3] Improved Techniques for Training GANs (&lt;a href="https://arxiv.org/pdf/1606.03498.pdf"&gt;https://arxiv.org/pdf/1606.03498.pdf&lt;/a&gt;)&lt;br&gt;
[4] A Style-Based Generator Architecture for Generative Adversarial Networks (&lt;a href="https://arxiv.org/pdf/1812.04948.pdf"&gt;https://arxiv.org/pdf/1812.04948.pdf&lt;/a&gt;)&lt;br&gt;
[5] Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks (&lt;a href="https://arxiv.org/pdf/1703.10593.pdf"&gt;https://arxiv.org/pdf/1703.10593.pdf&lt;/a&gt;)&lt;br&gt;
[6] RenderGAN: Generating Realistic Labeled Data (&lt;a href="https://arxiv.org/pdf/1611.01331.pdf"&gt;https://arxiv.org/pdf/1611.01331.pdf&lt;/a&gt;)&lt;br&gt;
[7] GANcraft: Unsupervised 3D Neural Rendering of Minecraft Worlds (&lt;a href="https://arxiv.org/pdf/2104.07659.pdf"&gt;https://arxiv.org/pdf/2104.07659.pdf&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>learning</category>
    </item>
    <item>
      <title>Job Search Update: üòî</title>
      <author>James Cox</author>
      <pubDate>Wed, 19 May 2021 15:38:54 +0000</pubDate>
      <link>https://dev.to/jamesncox/job-search-update-3mih</link>
      <guid>https://dev.to/jamesncox/job-search-update-3mih</guid>
      <description>&lt;h2&gt;
  &lt;a href="#context"&gt;
  &lt;/a&gt;
  Context
&lt;/h2&gt;

&lt;p&gt;Last year I wrote a Dev.to post entitled &lt;a href="https://dev.to/jamesncox/how-long-35co"&gt;How long did you have to wait?&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I detailed my job application experience at the time, having applied to quite a few roles and receiving literally zero calls. It was a rough time, and I received a lot of great feedback from that article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update
&lt;/h2&gt;

&lt;p&gt;Fast-forward to now, 15 months after graduating bootcamp, and still unemployed: &lt;/p&gt;

&lt;p&gt;Yesterday I received a rejection email from a company I had been interviewing with for several weeks. This one really stung. &lt;/p&gt;

&lt;p&gt;I even &lt;a href="https://twitter.com/MemRook/status/1394734126515859461?s=20"&gt;tweeted&lt;/a&gt; about it and was blessed with an incredible amount of support, feedback, and advice. &lt;/p&gt;

&lt;p&gt;This company had reached out to me. They wanted to hire several juniors and thought I would be a great fit. I was very transparent with my experience and they were transparent with their hiring process. I loved the company culture and thought this would be an ideal fit for both them and myself. &lt;/p&gt;

&lt;p&gt;I had to create a todo app for a code challenge, and I went above and beyond their criteria. I had so much for with it, I even put it in my portfolio. Check out The Matrix Todo app here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://the-matrix-todo.netlify.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6mZPC64_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70w7s5felohrx9byojt0.jpg" alt="The Matrix Todo with the Matrix green scroll code as a background"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yesterday they informed me they wanted more senior developers and that they appreciate my time and effort, but I was no longer in consideration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Looking for your first developer role can be incredibly stressful. It is a full-time job itself, and in many cases a mentally-draining grind that can often feel like there is no hope.&lt;/p&gt;

&lt;p&gt;I want you to know that if you are in a similar situation, I see you. And I am here for you if you need to talk about your experiences or just rant about anything.&lt;/p&gt;

&lt;p&gt;This post is meant to both offer insight and support for anyone else struggling to find their first role.&lt;/p&gt;

&lt;p&gt;I believe that a big factor in finding your first role is about being in the right place at the right time. &lt;/p&gt;

&lt;p&gt;I want to thank everyone who has been so kind and supportive this entire process. Thank you to my community for always being there for me. &lt;/p&gt;

&lt;p&gt;If you feel alone, please know you are NOT alone. Reach out to me or someone you trust and I will help you connect with some great people who will embrace your journey and support you however they can. &lt;/p&gt;

&lt;p&gt;Let me know in the comments if you have any specific stories or experiences you would like to share. We need to lift each other up in these moments and realize that we are all in this together. &lt;/p&gt;

&lt;p&gt;Thank you for reading. Much love and respect ‚ù§Ô∏èüôè‚ù§Ô∏èüôè‚ù§Ô∏èüôè&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Understanding Docker: part 33 ‚Äì Tools: Skopeo</title>
      <author>Aur√©lie Vache</author>
      <pubDate>Wed, 19 May 2021 15:28:06 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-docker-part-33-tools-skopeo-1hin</link>
      <guid>https://dev.to/aurelievache/understanding-docker-part-33-tools-skopeo-1hin</guid>
      <description>&lt;p&gt;Understanding Docker can be difficult or time-consuming. In order to spread knowledge about Cloud technologies I started to create sketchnotes about Docker. I think it could be a good way, more visual, to explain Docker (and other technologies like Kubernetes and Istio).&lt;/p&gt;

&lt;p&gt;We continue the series of Docker sketchnotes with an useful tool: skopeo!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2l7IcBvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g72vbtf9nd0nmctja0qx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2l7IcBvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g72vbtf9nd0nmctja0qx.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J_o825ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b40m6s0acsgrkqf01hak.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J_o825ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b40m6s0acsgrkqf01hak.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As usual, if you like theses sketchnotes, you can follow me, and tell me what do you think. I will publish others sketchs shortly :-).&lt;/p&gt;

&lt;p&gt;If you are interested, I published all the sketchnotes on Docker (and new ones!) to make a "book" of 93 pages: &lt;a href="https://gumroad.com/aurelievache#YTLzM"&gt;"Understanding Docker in a visual way"&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
  </channel>
</rss>
