<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How To Solve Captcha in JavaScript Using 2Captcha</title>
      <author>Suhail Kakar</author>
      <pubDate>Thu, 11 Nov 2021 08:52:42 +0000</pubDate>
      <link>https://dev.to/suhailkakar/how-to-solve-captcha-in-javascript-using-2captcha-31hf</link>
      <guid>https://dev.to/suhailkakar/how-to-solve-captcha-in-javascript-using-2captcha-31hf</guid>
      <description>&lt;p&gt;You may already solve many captchas while submitting a form or signing up for a website. The basic Captcha goal is to check whether the user is a human or a bot. Captcha stands for &lt;strong&gt;Completely Automated Public Turing test to tell Computers and Humans Apart&lt;/strong&gt;. Captchas are used to stop spamming blogs, accessing bots, and making a website more secure. &lt;/p&gt;

&lt;p&gt;Sometimes it is easy to solve the captcha, however, some of them are just a headache to the users, It might take minutes to think whether the letter is in Upper Case or Lower Case. Therefore, nowadays users prefer to use captcha-solving software.  &lt;/p&gt;

&lt;p&gt;2Captcha is among those services, which help us solve captchas, within seconds. It is a Captcha recognition service for solving challenge-response tests called Captcha to determine whether the user is a human or not. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-2captcha"&gt;
  &lt;/a&gt;
  What is 2Captcha
&lt;/h3&gt;

&lt;p&gt;2Captcha is a Captcha recognition service solving captchas in real-time. It also provides image recognition services powered by human intelligence. 2captcha can recognize different types of captcha and Its API is available for most programming languages. As the 2captcha uses the human-based method to solve captchas, It provides the opportunity to earn by solving the captchas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-2captcha"&gt;
  &lt;/a&gt;
  Advantages of 2captcha
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt; Provide a high level of accuracy&lt;/li&gt;
&lt;li&gt; human-based method to solve captchas &lt;/li&gt;
&lt;li&gt; Average speed of solving a captcha is less than 12 sec&lt;/li&gt;
&lt;li&gt; API available for most popular programming languages&lt;/li&gt;
&lt;li&gt; Solve all kinds of captchas &lt;/li&gt;
&lt;li&gt; Reliable reCAPTCHA solving service&lt;/li&gt;
&lt;li&gt;Provide 100% recognition service&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-solve-captcha-in-javascript-using-2captcha"&gt;
  &lt;/a&gt;
  How to solve Captcha in JavaScript using 2Captcha
&lt;/h2&gt;

&lt;p&gt;Here I use the Discord registration form which has a captcha to be solved using javascript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yh_wliX_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636557521449/YFKaRtRDJ_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yh_wliX_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636557521449/YFKaRtRDJ_.png" alt="screely-1636557507479.png" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you fill this form and click continue, you will see the below captcha.&lt;/p&gt;

&lt;p&gt;In order to solve the captcha using javascript, we can use two libraries called &lt;strong&gt;axios&lt;/strong&gt; and  &lt;strong&gt;2captcha&lt;/strong&gt;.  The axios is used to handle all the API calls and 2captcha is used to solve the captcha. install the bellow packages after creating your file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install 2captcha
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;import these libraries to your file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Captcha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2captcha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Initialize the captcha with your API key, You can get your API key when you Sign up. The API_KEY is available on your dashboard at the Account setting
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;solver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Captcha&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Solver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;API_KEY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;define an async function, here we call it register. 
we can solve the captcha using the solver which we already initialized and captcha is the type of captcha that we have on Discord website.
It requires two parameters, the Site key and the website URL. The
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;solving...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hcaptcha&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;f5561ba9-8f1e-40ca-9b5b-a0b3f719ef34&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://discord.com/register&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can get the site key when you press ctrl+shift+i and the site key will be on the HTML section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rb6wLW2z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636558157855/JL6Nhlowh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rb6wLW2z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636558157855/JL6Nhlowh.png" alt="screely-1636558144895.png" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use try-catch, as it may have any error and inside the try, we can ake the Axios call. Here the method is Post and you should specify the request URL.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4iWJ8apk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636558453095/7ESFoarKw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4iWJ8apk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636558453095/7ESFoarKw.png" alt="screely-1636558440402.png" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second parameter is the data that you post to the particular website.&lt;br&gt;
The captcha key value will be the data we specify earlier. I got the data when I filled the discord form and it sent a request.&lt;/p&gt;

&lt;p&gt;The captcha_key value is null because I didn't solve the captcha yet, therefore in try-catch, the captcha value will be data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://discord.com/api/v9/auth/register&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;captcha_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;consent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;date_of_birth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1985-05-03&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;fingerprint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;907561243135578163.UkNRz9ryt1bnxZbz7hqbnZdEgLc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;gift_code_sku_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;invite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mySecretPassword@23&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;suhailkakar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is all the code that we explained, call your function at the end of the program.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Captcha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2captcha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;solver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Captcha&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Solver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;e822d75f8b3ad5187e5bcfb1c0665ce9&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hcaptcha&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;f5561ba9-8f1e-40ca-9b5b-a0b3f719ef34&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://discord.com/register&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://discord.com/api/v9/auth/register&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;captcha_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;consent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;date_of_birth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1985-05-03&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fdffnjnJNjsnxjn@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;fingerprint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;907561243135578163.UkNRz9ryt1bnxZbz7hqbnZdEgLc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;gift_code_sku_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;invite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bjhdjfhfbjfb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ffdvvxjvvnfj&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Run node your_file_name, in our case node app.js on the terminal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It will take a bit of time and then you will receive a token. We will use the below function to pass the token and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt; &lt;span class="s2"&gt;`iframe`&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;contentWindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`"&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"`&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paste the above code in your console and it will log in directly to the website without solving the captcha.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Would you like to buy me a coffee, You can do it &lt;a href="https://www.buymeacoffee.com/suhailkakar"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>[SQL] Where vs Having?</title>
      <author>Viktoria</author>
      <pubDate>Thu, 11 Nov 2021 08:38:21 +0000</pubDate>
      <link>https://dev.to/tech_victoria/sql-where-vs-having-2h36</link>
      <guid>https://dev.to/tech_victoria/sql-where-vs-having-2h36</guid>
      <description>&lt;p&gt;It is easy to be confused with these 2 clauses because A HAVING clause is like a WHERE clause.&lt;br&gt;
⚠️WHERE clause applies to individual rows and HAVING clause applies only to groups as a whole.&lt;/p&gt;

&lt;p&gt;A query can contain both a WHERE clause and a HAVING clause.&lt;/p&gt;

&lt;p&gt;✔️The WHERE clause is applied first to the individual rows in the tables or table-valued objects in the Diagram pane. Only the rows that meet the conditions in the WHERE clause are grouped.&lt;/p&gt;

&lt;p&gt;✔️The HAVING clause is then applied to the rows in the result set. Only the groups that meet the HAVING conditions appear in the query output. You can apply a HAVING clause only to columns that also appear in the GROUP BY clause or in an aggregate function.&lt;/p&gt;

&lt;p&gt;📝As a rule of thumb, use WHERE before GROUP BY and HAVING after GROUP BY. It is a rather primitive rule, but it is useful in more than 90% of the cases.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The screw and the hammer: Love the problems, not your solutions. </title>
      <author>Davide de Paolis</author>
      <pubDate>Thu, 11 Nov 2021 08:34:58 +0000</pubDate>
      <link>https://dev.to/dvddpl/the-screw-and-the-hammer-love-the-problems-not-your-solutions-2i0a</link>
      <guid>https://dev.to/dvddpl/the-screw-and-the-hammer-love-the-problems-not-your-solutions-2i0a</guid>
      <description>&lt;p&gt;How many times in your software development career have you heard the following quote?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If the only tool you have is a hammer, you tend to see every problem as a nail.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Law_of_the_instrument"&gt;Also known&lt;/a&gt; as &lt;strong&gt;The law of the instrument&lt;/strong&gt; or &lt;strong&gt;golden hammer&lt;/strong&gt; this quote by Abraham Maslow describes a cognitive bias that involves an &lt;em&gt;over-reliance on a familiar tool&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;In software development that hammer could be anything you are accustomed to:  a design pattern (Factories and Strategies anyone?) a language ( writing lots of NodeJs code when a tiny shell script would do the job), a framework ( React + Redux even for the tiniest simple web page), or architecture approach ( API Gateway + Lambda vs Containerized application with Load Balancers).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q87FK0Dn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knra5ax4vdxmbvo7xs0b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q87FK0Dn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knra5ax4vdxmbvo7xs0b.jpg" alt="problem factory" width="499" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-solution-to-rule-them-all"&gt;
  &lt;/a&gt;
  One solution to rule them all
&lt;/h3&gt;

&lt;p&gt;Briefly, the law of the instrument means that we often tend to over-rely on a familiar tool, in fact, as soon as I hear someone speaking about an API/microservice, my first thought is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;well, easy! let's use APIGateway and a Lambda written in NodeJs, eventually add SQS and DynamoDB if we need queuing or persistence, done!&lt;/em&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That might be the right solution, especially for an MVP; but it could prove very wrong under some circumstances. &lt;/p&gt;

&lt;p&gt;This cognitive bias could be very dangerous in problem solving.  &lt;/p&gt;

&lt;p&gt;At the very least it is just &lt;strong&gt;a big constraint to our creativity&lt;/strong&gt;, but it could lead us to major problems like completely wrong approaches to the problem or &lt;strong&gt;over-engineered&lt;/strong&gt; implementations just because, well, &lt;strong&gt;we really struggle to drive that screw in with our hammer.&lt;/strong&gt;&lt;br&gt;
(many years ago, I had a colleague that, for fun, on a pet project, decided to use every single design pattern he recently studied.  Believe me, it was not fun in any way, the code was terribly - and of course unnecessarily - complicated.) &lt;/p&gt;

&lt;p&gt;Recently I read this quote that summarises very well this concept (sorry I could not track back the source):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fall in love with the problem, not the solution&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes it is not just a simple bias of being used to a certain tool, which makes us see it apt for any job. Sometimes ( consciously or not) we are so in love with a solution that we really &lt;em&gt;want&lt;/em&gt; to apply it for any problem that comes at hand (again, we could be taking about the Decorator Pattern, Docker or Blockchain, it doesn't matter).&lt;/p&gt;

&lt;p&gt;The thing is, &lt;strong&gt;no matter what problem you have to solve, you think you know already the answer&lt;/strong&gt;: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Oh, yes... that is definitely the case for XY!! &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#bias-bias-everywhere"&gt;
  &lt;/a&gt;
  Bias, bias everywhere
&lt;/h3&gt;

&lt;p&gt;The way we perceive, see, and make sense of the world that surrounds us and inside us is strongly influenced by biases, and our problem solving skills are impacted too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PJniGcxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30m2zd5ht7rulqwi36bz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PJniGcxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30m2zd5ht7rulqwi36bz.jpeg" alt="Bias everywhere" width="301" height="167"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just a few examples. (  You can see an interactive map &lt;a href="https://upload.wikimedia.org/wikipedia/commons/6/65/Cognitive_bias_codex_en.svg"&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Confirmation Bias : the tendency to search for, interpret, favour, and recall information that confirms or supports what we already know and believe.&lt;/li&gt;
&lt;li&gt;Occam's Razor bias : the simplest explanation is usually the best one.&lt;/li&gt;
&lt;li&gt;Attentional Bias : individual's failure to consider alternative possibilities when occupied with an existing train of thought.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The law of the instrument is just another one, a mix of many, if we like.  We like a solution, we invested time in learning and understanding some tech-stack, we are conservative, or tend to favour shiny new things, we google and read only blogs that share our point of view and so on. It is perfectly natural that our creativity in problem solving ends up constrained and bias. So what can we do?&lt;/p&gt;

&lt;p&gt;Well.  like for any other bias:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be aware of it&lt;/li&gt;
&lt;li&gt;Try to resist and challenge it. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The analysis of the requirement, and the process of problem solving should not stop immediately just because you already have a solution in mind.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep asking questions, keep digging. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do not rush. Always come up with a 2 or 3 alternatives, so that you can at least compare them and present them to other people ( which may have different bias than yours): &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This one is over-engineered, this is not scalable, this is scalable and simple but too expensive, this is the quickest.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Put extra effort to become your own &lt;strong&gt;devil's advocate&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;If you have many options, you ( and the stakeholders) can &lt;strong&gt;make an educated choice&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#we-are-paid-to-solve-problems-not-to-write-code"&gt;
  &lt;/a&gt;
  We are paid to solve problems not to write code.
&lt;/h3&gt;

&lt;p&gt;Of course we mostly solve problems by writing code, but that is not the point per se.&lt;br&gt;&lt;br&gt;
We are not paid by how much code or how long we write code. ( hopefully your company does not rate your performance in LOC), so it does not matter if you wrote a super cool designed strategy pattern, or if you wrote a very complex, perfectly unit tested, algorithm.  Maybe it was not even necessary, had you tackle the problem from another angle. &lt;br&gt;
Or maybe it could have made more sense to buy a ready made solution instead of implementing it in-house.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-that-really-a-problem"&gt;
  &lt;/a&gt;
  Is that really a &lt;em&gt;problem&lt;/em&gt;?
&lt;/h3&gt;

&lt;p&gt;Another important aspect I'd like to touch is that &lt;strong&gt;we must learn to love problems.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many people feel stressed as soon a problem arise.&lt;br&gt;&lt;br&gt;
They get anxious, feel overwhelmed by obstacles. &lt;br&gt;
But, unless, there are other factors like impending deadlines and very unhealthy team mood, it is often a matter of perception and perspective.&lt;/p&gt;

&lt;p&gt;Try to &lt;strong&gt;reframe&lt;/strong&gt; what a problem is:&lt;/p&gt;

&lt;p&gt;A bug?&lt;br&gt;
A need that has to be fulfilled?&lt;/p&gt;

&lt;p&gt;As much in my early days as developer I hated my Project Managers telling : &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are no problems, only challenges.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I really stopped to see problems ( bugs or requirements) like annoying obstacles to my happy and relaxed working day, rather as challenging tasks which indeed make my working days always interesting and &lt;em&gt;fun&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And I started to love the quote &lt;a href="https://www.youtube.com/watch?v=IdTMDpizis8"&gt;"&lt;em&gt;GOOD&lt;/em&gt;!" from Jocko Willink&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Unexpected problems?  Good!  it means we have the opportunity to figure out a solution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zAsmIcTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhonsyhneqwckm5v33pw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zAsmIcTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhonsyhneqwckm5v33pw.png" alt="Image description" width="658" height="485"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-love-problems-i-do-boulder"&gt;
  &lt;/a&gt;
  I love problems - I do boulder!
&lt;/h3&gt;

&lt;p&gt;I love climbing and bouldering. In bouldering the routes -  basically the way, the path you want to climb - are called problems.&lt;/p&gt;

&lt;p&gt;Think of it like that:&lt;/p&gt;

&lt;p&gt;You are there, facing a wall ( or if outdoor a block of stone - literally a Boulder),  and you ask yourself:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How do I climb that?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ju1S158g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj74fbsemfsqprowgjf4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ju1S158g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj74fbsemfsqprowgjf4.jpg" alt="Boulder problem" width="880" height="1009"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is your problem. And you have to find a solution.&lt;br&gt;
How do you use your body, your balance, your strength, how do you take advantage of every hold, grip, texture in the surface to finally get to the top?&lt;/p&gt;

&lt;p&gt;This sport has taught me so much about myself, my strengths and weaknesses, and about looking at difficulties and finding ways to overcome them that it had inevitably an impact in my problem solving skills in my life and in my job. I will definitely dedicate a separate post about it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/dvddpl/stop-think-code-iterate-4d56"&gt;stop and think&lt;/a&gt;, don't rush into quick solutions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;avoid the temptation to settle to general, known and safe approaches.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;understand the problem first, understand the context. are we trying to solve the right problem?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;We fail more often because we solve the wrong problem than because we get the wrong solution to the right problem.  Russel Ackoff&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Of course I am not stating in any way that you should not be happy with the solutions you come up with, and even &lt;strong&gt;be proud of yourself when you solve a problem brilliantly&lt;/strong&gt;, on the contrary, give yourself and your team all the recognition you deserve, but just be aware of the trap and don't be tempted next time you have a (similar) problem to default to the same solution.&lt;/p&gt;




&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@constantinevdokimov?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Konstantin Evdokimov&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/hammer-and-screw?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>personaldevelopment</category>
      <category>problemsolving</category>
    </item>
    <item>
      <title>Lines of Code (LoC)</title>
      <author>Loreley</author>
      <pubDate>Thu, 11 Nov 2021 08:33:20 +0000</pubDate>
      <link>https://dev.to/msoblivion/lines-of-code-loc-51e6</link>
      <guid>https://dev.to/msoblivion/lines-of-code-loc-51e6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#lines-of-code-loc"&gt;
  &lt;/a&gt;
  Lines of Code (LoC)
&lt;/h2&gt;

&lt;p&gt;There are several metrics you can deploy to analyze the code size and quality of an application. One of the popular metrics that you can be used is called Lines of Code, also known as LoC. If you are keen to learn more about what LoC means and why it is metric is programming, this article is for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-loc-mean"&gt;
  &lt;/a&gt;
  What Does LoC Mean?
&lt;/h2&gt;

&lt;p&gt;Lines of Code or LoC is a method used to measure the size of an application by identifying the actual count of Lines of Code it has. For instance, small software projects usually have somewhere between 500 to 5000 Lines of Code, whereas large ones can have thousands or even millions of Lines of Code (LoC).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#purpose-of-loc"&gt;
  &lt;/a&gt;
  Purpose of LoC
&lt;/h2&gt;

&lt;p&gt;Estimating the size of a project:&lt;br&gt;
Usually, the size of a software project can be estimated based on the lines of code it has. It is one of the metrics clients can use to determine how much they can pay for a particular software project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-size-and-readability-of-code-units"&gt;
  &lt;/a&gt;
  Check size and readability of code units:
&lt;/h2&gt;

&lt;p&gt;Any software project will always have code units like classes and functions. Usually, the functions and classes that have several code lines tend to be harder to read or understand than those. So, it is usually best to split up such classes or functions to make them smaller for easy understanding and readability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-determine-the-quality-of-code"&gt;
  &lt;/a&gt;
  To determine the quality of code:
&lt;/h2&gt;

&lt;p&gt;LoC is among the most reliable parameters that are used to assess the quality of a software program. You will often realize that most experienced developers usually write less code than amateurs even when the project they are working on is the same.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-measures-how-efficient-the-language-used-to-code"&gt;
  &lt;/a&gt;
  It measures how efficient the language used to code:
&lt;/h2&gt;

&lt;p&gt;An efficient language requires writing less code to accomplish a task that would need to write several lines of code if written in another language that is less efficient.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#methods-used-to-measure-loc"&gt;
  &lt;/a&gt;
  Methods Used to Measure LoC
&lt;/h2&gt;

&lt;p&gt;There are two common methods used to measure this parameter that is; physical and logical methods. Here is how the two defer&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Physical Lines of Code:&lt;br&gt;
With this method, the lines of code are physically counted while&lt;br&gt;
excluding comments and white spaces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logical Lines of Code:&lt;br&gt;
This method measures only the number of executable statements in the code.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let us use an example below to differentiate between these two;&lt;/p&gt;

&lt;p&gt;for (i = 0; i&amp;lt; 100; i++)&lt;br&gt;
{&lt;br&gt;
printf("hello");&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;In this illustration above this code, the segment has four physical lines of code and two logical ones. The logical lines of code are; the for statement and the print statement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons-of-using-this-method"&gt;
  &lt;/a&gt;
  Pros and Cons of Using This Method
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;p&gt;It is easy and intuitive&lt;br&gt;
Ubiquitous metric&lt;br&gt;
Integrated into most code editors&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;p&gt;Not a reliable metric to measure a programmer's productivity&lt;br&gt;
The LoC also differ based on the experience of a developer&lt;br&gt;
The LoC will also vary based on the programming language used&lt;br&gt;
It does not have a counting standard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-measure-productivity-based-on-line-of-code"&gt;
  &lt;/a&gt;
  Don't Measure Productivity Based on Line of Code
&lt;/h2&gt;

&lt;p&gt;One of the mistakes that clients and some project supervisors who are not familiar with programming make is using LoC as a metric to measure a programmer's productivity. However, using this metric will not give the right picture because the time spent coding usually varies based on how complex the project is and the experience of the programmer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This parameter is crucial when it comes to assessing the size and quality of software or code segments. However, it would be misleading to use this parameter to measure a programmer's productivity or the progress of a particular project.&lt;/p&gt;

&lt;p&gt;Using LoC alone to measure these two parameters is misleading because different project segments vary in complexity and take different amounts of time to accomplish, so the number of LoC written usually doesn't matter.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codequality</category>
      <category>codereview</category>
      <category>database</category>
    </item>
    <item>
      <title>Angular Authentication: Best Practices 🏆</title>
      <author>Nikos Anifantis</author>
      <pubDate>Thu, 11 Nov 2021 08:27:14 +0000</pubDate>
      <link>https://dev.to/nikosanif/angular-authentication-best-practices-3h8h</link>
      <guid>https://dev.to/nikosanif/angular-authentication-best-practices-3h8h</guid>
      <description>&lt;p&gt;An Angular application that demonstrates best practices for user authentication flow.&lt;/p&gt;

&lt;p&gt;By &lt;a href="https://twitter.com/nikosanif"&gt;@nikosanif&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nikosanif"&gt;
        nikosanif
      &lt;/a&gt; / &lt;a href="https://github.com/nikosanif/angular-authentication"&gt;
        angular-authentication
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An Angular application that demonstrates best practices for user authentication.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Angular Authentication&lt;/h1&gt;
&lt;p&gt;An Angular application that demonstrates best practices for user authentication flow.&lt;/p&gt;
&lt;p&gt;By &lt;a href="https://twitter.com/nikosanif" rel="nofollow"&gt;@nikosanif&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://open.vscode.dev/nikosanif/angular-authentication" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d66cf7a1b4fda80d31cce7848ed86d6d23497a946f396587fd24679b9181e29d/68747470733a2f2f6f70656e2e7673636f64652e6465762f6261646765732f6f70656e2d696e2d7673636f64652e737667" alt="Open in Visual Studio Code"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nikosanif/angular-authentication/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/4c864fa2bcc1ea34c9d13e0057efa9d3a525da8cca4aa67954972f842e2b1b74/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6e696b6f73616e69662f616e67756c61722d61757468656e7469636174696f6e2e737667" alt="license"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/48a41f43affa2e6253d6a48e0ee662ec53ce13c46442ac815e81d36b6e6b434d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e737667" alt="code style: prettier"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/nikosanif" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5adcb28b4a1c9f9bccdd4b8597025eb3799a4183d79ee6d103032214800846e1/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6e696b6f73616e69662e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter Follow"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nikosanif/angular-authentication#live-demo"&gt;Live Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikosanif/angular-authentication#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikosanif/angular-authentication#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikosanif/angular-authentication#tech-stack"&gt;Tech Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikosanif/angular-authentication#high-level-design"&gt;High-level Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikosanif/angular-authentication#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikosanif/angular-authentication#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nikosanif/angular-authentication#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Live Demo&lt;/h2&gt;
&lt;p&gt;Live application: &lt;a href="https://angular-authentication.netlify.app/" rel="nofollow"&gt;angular-authentication.netlify.app&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nikosanif/angular-authentication/main/meta/app-preview.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zv-DHXdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nikosanif/angular-authentication/main/meta/app-preview.png" alt="Angular Authentication Demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;h3&gt;
Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/" rel="nofollow"&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/cli" rel="nofollow"&gt;Angular CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Setup &amp;amp; Usage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clone this repository: &lt;code&gt;git clone git@github.com:nikosanif/angular-authentication.git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd angular-authentication&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install dependencies: &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Serve the Angular app: &lt;code&gt;npm start&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Open your browser at: &lt;code&gt;http://localhost:4200&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Useful Commands&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;npm start&lt;/code&gt; - starts a dev server of Angular app&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run build&lt;/code&gt; - builds full prod build&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run lint&lt;/code&gt; - linting source code of this project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run format:check&lt;/code&gt; - runs prettier to check for formatting errors&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run format:write&lt;/code&gt; - runs prettier to format whole code base&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run release&lt;/code&gt; - runs standard-version to create new release&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;h3&gt;
Authentication Flows&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nikosanif/angular-authentication/main/meta/auth-init-flow.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BkfO1xXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nikosanif/angular-authentication/main/meta/auth-init-flow.png" alt="Angular Authentication Demo"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nikosanif/angular-authentication/main/meta/auth-login-flow.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQHHVAGA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nikosanif/angular-authentication/main/meta/auth-login-flow.png" alt="Angular Authentication Demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Other Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Lazy loading of Angular modules&lt;/li&gt;
&lt;li&gt;API requests with &lt;code&gt;@ngrx/effects&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Responsive design&lt;/li&gt;
&lt;li&gt;In-memory Web API&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Tech Stack&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;…&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nikosanif/angular-authentication"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#live-demo"&gt;
  &lt;/a&gt;
  Live Demo
&lt;/h2&gt;

&lt;p&gt;Live application: &lt;a href="https://angular-authentication.netlify.app/"&gt;angular-authentication.netlify.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v2cz86ns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p2wnj9eqte8ojlv6ziz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v2cz86ns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p2wnj9eqte8ojlv6ziz.png" alt="Angular Authentication Demo" width="880" height="674"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/cli"&gt;Angular CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#setup-amp-usage"&gt;
  &lt;/a&gt;
  Setup &amp;amp; Usage
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Clone this repository: &lt;code&gt;git clone git@github.com:nikosanif/angular-authentication.git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd angular-authentication&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install dependencies: &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Serve the Angular app: &lt;code&gt;npm start&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Open your browser at: &lt;code&gt;http://localhost:4200&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#useful-commands"&gt;
  &lt;/a&gt;
  Useful Commands
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;npm start&lt;/code&gt; - starts a dev server of Angular app&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run build&lt;/code&gt; - builds full prod build&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run lint&lt;/code&gt; - linting source code of this project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run format:check&lt;/code&gt; - runs prettier to check for formatting errors&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run format:write&lt;/code&gt; - runs prettier to format whole code base&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run release&lt;/code&gt; - runs standard-version to create new release&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#authentication-flows"&gt;
  &lt;/a&gt;
  Authentication Flows
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxAupkV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpqovmrkx6dpuc9zkkmo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxAupkV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpqovmrkx6dpuc9zkkmo.png" alt="Angular Authentication Demo" width="880" height="507"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I2g63QK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pr3yxcwi28h35mqit5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I2g63QK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pr3yxcwi28h35mqit5e.png" alt="Angular Authentication Demo" width="880" height="507"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#other-features"&gt;
  &lt;/a&gt;
  Other Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lazy loading of Angular modules&lt;/li&gt;
&lt;li&gt;API requests with &lt;code&gt;@ngrx/effects&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Responsive design&lt;/li&gt;
&lt;li&gt;In-memory Web API&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ngrx.io/"&gt;NgRX&lt;/a&gt; - @ ngrx/{store,effects,component}&lt;/li&gt;
&lt;li&gt;&lt;a href="https://taiga-ui.dev/"&gt;Taiga UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other dev tools

&lt;ul&gt;
&lt;li&gt;ESLint&lt;/li&gt;
&lt;li&gt;Prettier&lt;/li&gt;
&lt;li&gt;Husky&lt;/li&gt;
&lt;li&gt;standard-vesrion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#highlevel-design"&gt;
  &lt;/a&gt;
  High-level Design
&lt;/h2&gt;

&lt;p&gt;Below is the high-level structure of the application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./src
├── app
│   ├── app &lt;span class="c"&gt;# root app component&lt;/span&gt;
│   │   ├── app.component.html
│   │   ├── app.component.scss
│   │   └── app.component.ts
│   │
│   ├── app-routing.module.ts
│   ├── app.module.ts
│   │
│   ├── auth &lt;span class="c"&gt;# includes authentication logic&lt;/span&gt;
│   │   ├── auth.module.ts
│   │   ├── auth.service.ts
│   │   ├── guards
│   │   ├── interceptors
│   │   ├── login
│   │   └── store
│   │
│   ├── core &lt;span class="c"&gt;# includes core utilities&lt;/span&gt;
│   │   ├── core.module.ts
│   │   ├── fake-api
│   │   └── services
│   │
│   ├── features &lt;span class="c"&gt;# all features of application&lt;/span&gt;
│   │   ├── about
│   │   ├── home
│   │   └── secured-feat
│   │
│   └── shared &lt;span class="c"&gt;# shared UI modules and utilities&lt;/span&gt;
│       ├── ui
│       └── util
│
├── assets
│   ├── ...
│
├── environments
│   ├── environment.prod.ts
│   └── environment.ts
│
├── ...
│
└── theme &lt;span class="c"&gt;# global theme styles&lt;/span&gt;
    ├── _components.scss
    ├── _typography.scss
    └── index.scss
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  Contributing
&lt;/h2&gt;

&lt;p&gt;Who is for this? I would love for you to contribute to Angular Authentication! Before you start, please read the &lt;a href="https://github.com/nikosanif/angular-authentication/blob/main/CONTRIBUTING.md"&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have found any bug in the source code or want to &lt;em&gt;request&lt;/em&gt; a new feature, you can help by &lt;a href="https://github.com/nikosanif/angular-authentication/issues/new/choose"&gt;submitting an issue&lt;/a&gt; at GitHub. Even better, you can fork this repository and &lt;a href="https://github.com/nikosanif/angular-authentication/compare"&gt;submit a PR&lt;/a&gt; with the fix or the new feature description.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  Support
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Star this &lt;a href="https://github.com/nikosanif/angular-authentication"&gt;repository&lt;/a&gt; ⭐️&lt;/li&gt;
&lt;li&gt;Help it spread to a wider audience: &lt;a href="https://twitter.com/intent/tweet?text=An%20Angular%20application%20that%20demonstrates%20best%20practices%20for%20user%20authentication.%0A%0A%40nikosanif%20%0A%F0%9F%94%97%20https%3A%2F%2Fgithub.com%2Fnikosanif%2Fangular-authentication%0A%0A&amp;amp;hashtags=Angular,NgRx,TaigaUI,tailwindcss,ngAuth"&gt;Tweet&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#author-nikos-anifantis"&gt;
  &lt;/a&gt;
  Author: Nikos Anifantis ✍️
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fullstack Software Engineer - I’m currently working on Angular &amp;amp; Node.js application development.&lt;/li&gt;
&lt;li&gt;I write stuff at &lt;a href="https://dev.to/nikosanif"&gt;dev.to/nikosanif&lt;/a&gt; and &lt;a href="https://nikosanif.medium.com/"&gt;nikosanif.medium.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;How to reach me: &lt;a href="https://twitter.com/nikosanif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qj2cbvcU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/twitter/url/https/twitter.com/nikosanif.svg%3Fstyle%3Dsocial%26label%3DFollow%2520nikosanif" alt="Twitter" width="113" height="20"&gt;&lt;/a&gt;
&lt;a href="https://www.linkedin.com/in/nikosanifantis/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rd3V3_tY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LinkedIn-blue%3Fstyle%3Dsocial%26style%3Dflat%26logo%3Dlinkedin%26labelColor%3Dblue%26label%3DConnect%2520Nikos%2520Anifantis" alt="LinkedIn" width="215" height="20"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;Feel free to use this repository, but &lt;strong&gt;please star and put a reference to this repository.&lt;/strong&gt; 🙏 ❤️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;MIT&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Everything I know about outreach</title>
      <author>Pasca Vlad</author>
      <pubDate>Thu, 11 Nov 2021 08:25:53 +0000</pubDate>
      <link>https://dev.to/pascavld/everything-i-know-about-outreach-48lk</link>
      <guid>https://dev.to/pascavld/everything-i-know-about-outreach-48lk</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Doing outreach is key as a freelancer&lt;/p&gt;

&lt;p&gt;With outreach alone, I got 10 clients in the last 2 months&lt;/p&gt;

&lt;p&gt;Here is everything I know about outreach&lt;/p&gt;

&lt;p&gt;First thing first, what is outreach?&lt;/p&gt;

&lt;p&gt;Outreach is the act of sending messages to people&lt;/p&gt;

&lt;p&gt;(in our case potential clients)&lt;/p&gt;

&lt;p&gt;So, with outreach, you close clients as a freelancer&lt;/p&gt;

&lt;p&gt;Yes, you might need to get on a call with them, but that leads from the outreach too&lt;/p&gt;

&lt;p&gt;There are a lot of ways you can outreach&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitter DMs&lt;/li&gt;
&lt;li&gt;Cold emails&lt;/li&gt;
&lt;li&gt;Instagram DMs&lt;/li&gt;
&lt;li&gt;And more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most important part is choosing one of them&lt;/p&gt;

&lt;p&gt;and STICKING WITH IT&lt;/p&gt;

&lt;p&gt;Don't try 5 methods of doing outreach at the same time&lt;/p&gt;

&lt;p&gt;Choose one to begin with and master it&lt;/p&gt;

&lt;p&gt;After you choose your medium of doing outreach you need to create a script&lt;/p&gt;

&lt;p&gt;Don't use a template you find on the internet&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Because everyone is probably using it&lt;/p&gt;

&lt;p&gt;Try to create something of your own&lt;/p&gt;

&lt;p&gt;Here are some things to keep in mind:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Start with a compliment, you are more likely to get a reply this way&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep it short, people won't read a long message especially if they don't know you&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a clear call to action, make what they need to next clear for the client&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add social proof (if you have)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, you have a script, but who do you DM?&lt;/p&gt;

&lt;p&gt;For my outreach, I recommend quality over quantity&lt;/p&gt;

&lt;p&gt;So only DM specific people. People who are your ideal clients&lt;/p&gt;

&lt;p&gt;Since I use Twitter to do my outreach I find potential clients while scrolling through my timeline&lt;/p&gt;

&lt;p&gt;After you find the potential clients, you need to do your research&lt;/p&gt;

&lt;p&gt;Don't skip this part&lt;/p&gt;

&lt;p&gt;Read some of the content that person created&lt;/p&gt;

&lt;p&gt;Click the links they have in their bio&lt;/p&gt;

&lt;p&gt;You don't need to spend more than 15 minutes on this, but make sure you do it&lt;/p&gt;

&lt;p&gt;Then you need to build rapport with the client&lt;/p&gt;

&lt;p&gt;What does this mean?&lt;/p&gt;

&lt;p&gt;You need to build a connection with them&lt;/p&gt;

&lt;p&gt;How do you do that?&lt;/p&gt;

&lt;p&gt;By engaging with their content&lt;/p&gt;

&lt;p&gt;Make sure they see your face a couple of times before you DM them&lt;/p&gt;

&lt;p&gt;Only after you do this for a few days, DM them&lt;/p&gt;

&lt;p&gt;After you send them the DM way a few days and then FOLLOW UP&lt;/p&gt;

&lt;p&gt;This is key and so many people don't do it&lt;/p&gt;

&lt;p&gt;I got most of my clients after following up&lt;/p&gt;

&lt;p&gt;Don't stop until you get a reply if it is a no&lt;/p&gt;

&lt;p&gt;Because at the end of your day your goal is to a reply&lt;/p&gt;

&lt;p&gt;One thing that you can do to be more likely to get a reply is to give value for free&lt;/p&gt;

&lt;p&gt;If you do email marketing send them one email for free&lt;/p&gt;

&lt;p&gt;Don't ask for anything back, tell them to try it out&lt;/p&gt;

&lt;p&gt;Make it easy for them to say yes&lt;/p&gt;

&lt;p&gt;Lastly, remember that as with everything practice makes perfect&lt;/p&gt;

&lt;p&gt;You'll change your script with time&lt;/p&gt;

&lt;p&gt;You'll get more and better replies with time&lt;/p&gt;

&lt;p&gt;But that improvement only comes with practice&lt;/p&gt;

&lt;p&gt;Aim to send one DM per day at the beginning&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;._let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Unit test for SSG</title>
      <author>Minsu Kim</author>
      <pubDate>Thu, 11 Nov 2021 08:17:53 +0000</pubDate>
      <link>https://dev.to/mkim219/unit-test-for-ssg-1370</link>
      <guid>https://dev.to/mkim219/unit-test-for-ssg-1370</guid>
      <description>&lt;p&gt;For the task for open source development in this week is adding unit test for Static Site Generator(ssg). There are 3 testing framework options: &lt;a href="https://xunit.net/"&gt;xUnit&lt;/a&gt;, &lt;a href="https://nunit.org/"&gt;NUnit&lt;/a&gt;, and &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-with-mstest"&gt;MSTest&lt;/a&gt;. I have choose xUnit testing framework for unit testing because xUnit provides good documentation for creating unit test project and unit testing instruction.&lt;/p&gt;

&lt;p&gt;Next step is setting up the environment. The first step of setting up environment creates unit testing project and include ssg project. The next step is most hardest part of the task because I have made ssg with static methods which is most testing frameworks do not support. The logic of Static method is assigned to the class itself not a instance of object. Therefore I have to find alternative way to test static methods. I found interesting &lt;a href="https://www.infoworld.com/article/3571962/how-to-unit-test-static-methods-in-csharp.html"&gt;blog post&lt;/a&gt; that I can have unit test with static method! The author, Joydip Kanjilal recommends method called &lt;strong&gt;"application – by using wrapper classes and dependency injection"&lt;/strong&gt; what it is wrap static methods call in instance methods and use dependency injection to inject instance to wrapper class to be tested. Now I can have unit test with static methods with mock framework called &lt;a href="https://github.com/moq/moq"&gt;moq&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;While I was writing the unit testing code, I found some interesting bug. When user choose empty text or markdown file for generating HTML, the application crushes. Therefore I have to handle the error if user input empty text or markdown file. Previous 2 months I have focused on ssg application. The application runs fine and I thought my application is bug free. However, I have found multiple bug during the unit testing. I definitely do unit testing for making better application. &lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>In Search of the Best Drag-and-Drop App Builder: 10 Contenders, One Winner</title>
      <author>Alesia Traichuk</author>
      <pubDate>Thu, 11 Nov 2021 08:10:45 +0000</pubDate>
      <link>https://dev.to/atraichuk/in-search-of-the-best-drag-and-drop-app-builder-10-contenders-one-winner-25e3</link>
      <guid>https://dev.to/atraichuk/in-search-of-the-best-drag-and-drop-app-builder-10-contenders-one-winner-25e3</guid>
      <description>&lt;p&gt;If you’ve ever thought about creating a mobile app from scratch, you know that it takes some searching to find the right tools. Drag-and-drop app development is often a good fit, so let’s talk about how to find the best drag-and-drop app builder to get you started. But before we get into specific platforms, let’s ask and answer some basic questions: &lt;/p&gt;

&lt;p&gt;1) What is drag-and-drop app development?&lt;br&gt;
2) What are the advantages of drag-and-drop app builders?&lt;/p&gt;

&lt;p&gt;Drag-and-drop app development is one of the easiest and smartest ways to create your own app from scratch. This method doesn’t require programming skills and includes pre-built services and templates to simplify the creation process. Drag-and-drop mobile app builders usually offer opportunities for further customization and state-of-the-art features. Although their popularity is skyrocketing, there are a few advantages and disadvantages that are worth considering.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drag-and-drop app builders&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;*Are an affordable app development solution. App development costs can be a barrier for many businesses, but the majority of drag-and-drop builders have several pricing options. This will give you the flexibility to choose a suitable price.&lt;/p&gt;

&lt;p&gt;*Are quicker than a development team. Drag-and-drop app builders allow you to save time by keeping development in-house rather than relying on external development resources. This means that you are fully in charge of the execution of your idea, and there’s no need to work with a team that doesn’t share your point of view.&lt;/p&gt;

&lt;p&gt;*Make it easy to create a mobile application. Customization can be difficult, but drag-and-drop app builders make it easy. With the help of pre-built templates available with a platform, you can customize and implement them without being a tech expert.&lt;/p&gt;

&lt;p&gt;*Provide multiple features for different business niches. App development platforms are usually packed with a bunch of cool features and templates that meet almost every business need. Whether you’re a retailer or a small makeup studio, a drag-and-drop app builder will make it easy to achieve your goals.&lt;/p&gt;

&lt;p&gt;*Have an easy-to-understand interface. You don’t need to worry about spending loads of time learning the basics. They’re built for people with minimal technical experience, which makes them easy to use and highly intuitive.&lt;/p&gt;

&lt;p&gt;There are some disadvantages to drag-and-drop mobile app builders, but not very many. The most common complaint is that there is a limited number of features, which can prevent you from making your complex idea happen. You may also find it difficult to build an application that requires a lot of user interaction.&lt;/p&gt;

&lt;p&gt;Now that you have an idea of what drag-and-drop app builders are like, let’s move on to a list of the best drag-and-drop app builders.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The 10 Best Drag-and-Drop App Builders&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://appery.io/appbuilder"&gt;&lt;strong&gt;Appery.io&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a cloud-based drag-and-drop app builder for creating hybrid mobile and responsive web applications. Since it’s cloud-based, you don’t need to download it or install anything, so you can start building your applications quickly. The drag-and-drop functionality and the power of Javascript can easily turn your idea into an application. The app builder is a web, PWA, and mobile app development platform which enables applications built with Appery.io to run smoothly and look cool on all popular devices and operating systems. Additionally, app data can be stored by instantly adding a cloud database and back end to your app whenever needed.&lt;/p&gt;

&lt;p&gt;Other advantages of this UI builder include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ease of usage. Even complete beginners can grasp the basics and start using this app builder. Full-fledged developers can also work with the frameworks they enjoy.&lt;/li&gt;
&lt;li&gt;Integrated back-end services such as server-side scripting, cloud database, push notifications, and authentication.&lt;/li&gt;
&lt;li&gt;Easy integration of your own back end. This drag-and-drop app builder provides the tools to create RESTful APIs from various enterprise systems including Oracle, SQL Server, and more.&lt;/li&gt;
&lt;li&gt;Collaboration made simple. You can share your project with developers, business users, and customers in real time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The pricing plans are reasonable and are justified by great functionality and quality of the product: beginners - $25/month, pro - $70/month, team - $135/month, and ultimate - $500/month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.appypie.com/"&gt;&lt;strong&gt;Appy Pie&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This app-building platform is one of the leading drag-and-drop app builders in the world. It’s swiftly gaining popularity and now has over 3 million users across the globe. So what makes this drag-and-drop app development software so special? The secret lies in its step-by-step process for creating successful business apps and the kit of features it offers. Let’s take a quick look at them:&lt;/p&gt;

&lt;p&gt;-API&lt;br&gt;
-Access controls/permissions&lt;br&gt;
-Alerts/notifications&lt;br&gt;
-Application management&lt;br&gt;
-Change management&lt;br&gt;
-Collaboration tools&lt;br&gt;
-Custom development&lt;br&gt;
-Debugging&lt;br&gt;
-Drag &amp;amp; drop&lt;br&gt;
-Graphical user interface&lt;br&gt;
-Mobile development&lt;br&gt;
-Reporting/analytics&lt;br&gt;
-Software development&lt;br&gt;
-Web app development&lt;/p&gt;

&lt;p&gt;Another bonus of Appy Pie is that they develop a wide range of tutorials for customers that explain the process of creating an application and guide users through each step. Additionally, the platform offers a three-step process for creating an application. All you need to do is enter your app name, add necessary features for Android/iOS, and publish the app on Google Play and iTunes. Voila, your app is ready!&lt;/p&gt;

&lt;p&gt;The pricing plans are quite reasonable: basic - $15/app/month, gold - $36/app/month, platinum - $60/app/month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mobincube.com/"&gt;&lt;strong&gt;Mobincube&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s not easy to find a drag-and-drop mobile app builder which offers both value and an affordable price, but Mobincube is one of these rare pocket-friendly platforms. You can start building as many apps with ads as you want without being limited by space and at no cost. Other pricing plans include: small - $2.99/month, medium - $9.99/month, large - $19.99/month, XL - $49.99/month, and XXL - $99.99/month.&lt;/p&gt;

&lt;p&gt;Although the editor doesn’t look as modern as some, it does boast of a unique set of features:&lt;/p&gt;

&lt;p&gt;-Advanced customization&lt;br&gt;
-Online store integration&lt;br&gt;
-Monetization with in-app ads&lt;br&gt;
-Navigation bars&lt;br&gt;
-Database Integration&lt;br&gt;
-Third-party solution integration&lt;br&gt;
-Audio and video&lt;br&gt;
-Remote content updates&lt;br&gt;
-Push notifications&lt;br&gt;
-Google Maps&lt;br&gt;
-Google Analytics&lt;/p&gt;

&lt;p&gt;Competitive prices and a wide variety of templates are serious bonuses that make this app builder stand out from other apps. While there is still room for improvement, this drag-and-drop app builder is definitely in the top ten.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.swiftic.com/"&gt;&lt;strong&gt;Swiftic&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This drag-and-drop app builder positions itself as a platform that caters to both big and small businesses. The main categories this platform suits best are retail and commerce, health and beauty, and professional services. Their platform and its layout are crystal clear with a combination of seven different templates that can be combined with six different styles of navigation. What makes it unique is that all the colors on the app and the icons can be adapted with your own artwork. Swiftic also provides a large number of features:&lt;/p&gt;

&lt;p&gt;-In-app coupons&lt;br&gt;
-Mobile store&lt;br&gt;
-Push notifications&lt;br&gt;
-Scratch cards&lt;br&gt;
-Loyalty cards&lt;br&gt;
-Deliveries&lt;br&gt;
-Catalogues&lt;br&gt;
-Menus &lt;br&gt;
-Social integration&lt;br&gt;
-Customer engagement (surveys, contests, and more)&lt;br&gt;
-Branches (outlets)&lt;br&gt;
-Scheduling&lt;/p&gt;

&lt;p&gt;Their pricing plans are quite different from the previous drag-and-drop UI builders. They have one tier that has either a monthly ($57), yearly ($48), or biannual subscription ($29). Probably the most appealing thing is their six-month success guarantee, which means that if you were unable to achieve “any meaningful business result” with your app, Swiftic will give you six months of service for free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://appinstitute.com/"&gt;&lt;strong&gt;AppInstitute&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AppInstitute is another drag-and-drop mobile app builder for busy small business owners. The UI builder offers templates for more than 20 business types, so it’s a wonderful opportunity to take advantage of! The process of creating an application is clear even for beginners and involves only four steps. First, you pick a template with all the features you need. Then brand your application, edit content (all without writing a single line of code), and easily make it live.&lt;/p&gt;

&lt;p&gt;The range of AppInstitute’s features is promising. They include:&lt;br&gt;
-Full brand control&lt;br&gt;
-Calendar and booking system&lt;br&gt;
-Rich media&lt;br&gt;
-Drag-and-drop app builder&lt;br&gt;
-Online payments&lt;br&gt;
-Push notifications and messaging&lt;br&gt;
-Social media integration&lt;br&gt;
-GEO listings&lt;/p&gt;

&lt;p&gt;This platform will be especially appreciated by eCommerce businesses, as it allows them to make payments from within the app, without navigating out of it for any reason. The apps built with this platform are available for a monthly subscription of $42 per month (PWA), $66 per month (PWA + iOS and Android), $84 per month (PWA, iOS and Android + iPad), and $340 per month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.appmachine.com/"&gt;&lt;strong&gt;AppMachine&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one’s name speaks for itself. AppMachine drag-and-drop app builder is impressive both in its design and functionality. The interface looks like a lego block, which makes the whole process of planning and constructing an application appealing and unintimidating. Although not every component is intuitive from the beginning, anyone can get the hang of it and eventually succeed. With AppMachine, you can use over 35 pre-coded apps to build your own. It also provides templates for schools, travel and tourism, music, sports, and restaurant apps. &lt;/p&gt;

&lt;p&gt;The list of AppMachine’s features is impressive too. They offer:&lt;br&gt;
-Web application builder&lt;br&gt;
-Support for iOS, Android, and Windows mobile devices&lt;br&gt;
-User-friendly interface&lt;br&gt;
-Pre-built templates&lt;br&gt;
-Easy publishing&lt;br&gt;
-Free signup&lt;br&gt;
-Multilingual interface&lt;br&gt;
-Live app preview&lt;br&gt;
-Connect to web services&lt;br&gt;
-Auto submission to AppStore and PlayStore&lt;/p&gt;

&lt;p&gt;In terms of cost, Appmachine offers two different plans, with Plus at $49 a month and Pro at $69 a month. By the way, they don’t charge any fees for monetizing your app. You just pay for your subscription and pocket all the revenue from app monetization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://buildfire.com/"&gt;&lt;strong&gt;BuildFire&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BuildFire mobile app builder is definitely easy and user-friendly. It offers an easy-to-use dashboard and admin control panel that smoothes the whole process of releasing updates. A vast number of customization options allow users to make changes to the app on the go and test them in a real environment. The drag-and-drop app builder allows users to create fully custom mobile apps, business workflow, employee communications, eCommerce, fitness, and many other apps. The features kit is extensive as well. It includes:&lt;/p&gt;

&lt;p&gt;-Drag &amp;amp; drop&lt;br&gt;
-Reporting/analytics&lt;br&gt;
-Access controls/permissions&lt;br&gt;
-Compatibility testing&lt;br&gt;
-Deployment management&lt;br&gt;
-Mobile development&lt;br&gt;
-Source control&lt;br&gt;
-Design templates&lt;br&gt;
-Feature library&lt;br&gt;
-Visual interface&lt;/p&gt;

&lt;p&gt;Their pricing plan is quite democratic. They offer a free plan and a premium plan that is available for $49 a month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mobileroadie.com/"&gt;&lt;strong&gt;MobileRoadi&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MobileRoadi is considered one of the most robust drag-and-drop app builders available on the market today. The platform offers a collection of nine categories for pre-built app templates. Among them are music, entertainment, events, sport, government and education, hospitality and travel, business, media, and religious organizations. The process of creating an application takes five steps and includes building, designing, managing, engaging, and analyzing. The interface of this app builder is professionally designed and planned, however it takes some time to adapt.&lt;/p&gt;

&lt;p&gt;The range of features include:&lt;br&gt;
-Push notifications&lt;br&gt;
-Mailing list&lt;br&gt;
-Chat wall&lt;br&gt;
-API&lt;br&gt;
-Social unlock&lt;br&gt;
-Top users&lt;br&gt;
-Polls&lt;br&gt;
-Pop-up promos&lt;br&gt;
-Geofencing&lt;br&gt;
-Location and directions&lt;/p&gt;

&lt;p&gt;Due to the wide array of features, their pricing plans start from a CORE plan at $149 a month and go up to their PRO plan at $799 a month. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://shoutem.com/"&gt;&lt;strong&gt;Shoutem&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A new version of the Shoutem app builder offers a lot of template designs with a vast number of options to customize them so that each app looks unique. This platform is especially suitable for communities because of its social wall where users can share photos and add comments. The process of building Android and iOS apps takes just four steps. First, you pick up a template, then brand your app, import necessary content, and publish it to stores. The number of features here is lower in comparison with other builders, but it should have everything you need to create an application. Among them are:&lt;/p&gt;

&lt;p&gt;-Push notifications&lt;br&gt;
-Location-based services&lt;br&gt;
-A Shopify feature or product catalogue&lt;br&gt;
-RSS feed options&lt;br&gt;
-Ability to add your own HTML code&lt;br&gt;
-Social media integration &lt;br&gt;
-Loyalty features&lt;br&gt;
-API available&lt;br&gt;
-Custom analytics&lt;br&gt;
-Testing for Android only&lt;br&gt;
-Reseller program&lt;/p&gt;

&lt;p&gt;Shoutem makes their code available to developers to involve more and more people in building additional extensions and developing more features. Shoutem pricing starts at $49.00 per month. They do not have a free version, but do offer a free trial. The cheapest of their plans that allow you to publish your app on the Apple App Store begins at $79.00.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ibuildapp.com/"&gt;&lt;strong&gt;iBuildApp&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iBuildApp drag-and-drop application builder has a super easy drop editor, a built-in content management system, and over a thousand app templates to choose from. This platform is specifically designed for people with absolutely no programming skills. Although their website doesn’t inspire confidence, the builder does boast some great features:&lt;/p&gt;

&lt;p&gt;-White label solution&lt;br&gt;
-Reseller payment plans&lt;br&gt;
-Environment setup&lt;br&gt;
-Payment system&lt;br&gt;
-Custom pricing&lt;br&gt;
-Customer support&lt;br&gt;
-Website localization and customization&lt;br&gt;
-Custom templates for reseller website&lt;/p&gt;

&lt;p&gt;They also offer a bunch of advanced features, including push and GPS notifications, mobile ads, social media sharing, mobile analytics, and eCommerce opportunities. In terms of cost, there’s a basic plan ($9.99/ month), a business plan ($39 per month), and an enterprise or agency plan ($99 a month).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wrapping It Up&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Choosing the best drag-and-drop app builder might seem a bit scary, and it does require a bit of effort. But once you determine your priorities and clearly define your business needs, it doesn’t need to be a complicated task. If you are a complete beginner who wants to try creating an application, Shoutem and iBuiltApp drag-and-drop UI builders might be a good option for you. However, if you’re a seasoned developer looking for new challenges or somebody interested in new functionality and a wide range of features, go with Appery.io or MobileRoadi.&lt;/p&gt;

</description>
      <category>mobile</category>
      <category>appbuilder</category>
      <category>draganddrop</category>
      <category>lowcode</category>
    </item>
    <item>
      <title>Leveraging Logic Apps to prevent over-provisioning owner access to subscriptions</title>
      <author>Stefano d'Antonio</author>
      <pubDate>Thu, 11 Nov 2021 08:06:51 +0000</pubDate>
      <link>https://dev.to/unosd/leveraging-logic-apps-to-prevent-over-provisioning-owner-access-to-subscriptions-36aa</link>
      <guid>https://dev.to/unosd/leveraging-logic-apps-to-prevent-over-provisioning-owner-access-to-subscriptions-36aa</guid>
      <description>&lt;p&gt;Often happens that agility and freedom conflict with security.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aaron-paul-voice-has-this-ever-happened-to-you"&gt;
  &lt;/a&gt;
  (Aaron Paul voice) Has this ever happened to you?
&lt;/h4&gt;

&lt;p&gt;Have you ever had developer teams request ownership of a full &lt;strong&gt;subscription&lt;/strong&gt; to be able to freely experiment?&lt;/p&gt;

&lt;p&gt;You still want to keep isolation, segregate responsibilities and permissions.&lt;/p&gt;

&lt;p&gt;Ability to experiment freely is paramount to innovation, but uncontrolled proliferation of &lt;strong&gt;subscriptions&lt;/strong&gt; can bear a significant management overhead.&lt;/p&gt;

&lt;p&gt;Can we have the best of both worlds? The short answer is: yes.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;resource group&lt;/strong&gt; can be an effective boundary as it allows its &lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#contributor"&gt;contributors&lt;/a&gt; to yet create any resource, but also restrict the scope of access within a &lt;strong&gt;subscription&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can also enforce &lt;strong&gt;tags&lt;/strong&gt; and &lt;strong&gt;Azure policies&lt;/strong&gt; to control costs and enforce security.&lt;/p&gt;

&lt;p&gt;But now a team is restricted to creating resources within a single &lt;strong&gt;resource group&lt;/strong&gt; and it can get messy quite quickly and permission-wise is not so granular within teams.&lt;/p&gt;

&lt;p&gt;What if we could allow teams to create their own &lt;strong&gt;resource groups&lt;/strong&gt; within a subscription with &lt;strong&gt;contributor&lt;/strong&gt; access and not being able to read/write other &lt;strong&gt;resource groups&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;We can quickly set up a &lt;strong&gt;Logic App&lt;/strong&gt; to enable this. Orchestrating creation and role assignment of &lt;strong&gt;resource groups&lt;/strong&gt; within a single workflow, this enables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Invoking the &lt;strong&gt;Logic App&lt;/strong&gt; manually through a &lt;strong&gt;REST API&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Invoking from a &lt;strong&gt;DevOps&lt;/strong&gt; pipeline to create resources as part of a dev/test automated environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;Logic App&lt;/strong&gt; can create a &lt;strong&gt;resource group&lt;/strong&gt; and assign a certain &lt;strong&gt;contributor&lt;/strong&gt; based on the input payload from the &lt;strong&gt;HTTP trigger&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Setting up this workflow could lead to a security loophole: What if someone uses the name of an existing &lt;strong&gt;resource group&lt;/strong&gt; so the workflow grants access to other teams' resources? We need to make sure we address this concern when building our &lt;strong&gt;Logic App&lt;/strong&gt; as, usually, &lt;strong&gt;Azure management&lt;/strong&gt; operations are idempotent and the &lt;strong&gt;Logic App&lt;/strong&gt; won't fail if we pass the name of an existing &lt;strong&gt;resource group&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-logic-app"&gt;
  &lt;/a&gt;
  The Logic App
&lt;/h3&gt;

&lt;p&gt;Let's have a look at the flow:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSL5p2uf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwdlqd640foct4sczm9t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSL5p2uf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwdlqd640foct4sczm9t.png" alt="Image description" width="880" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The logic is pretty simple and most of the operations we require have a native &lt;strong&gt;connector&lt;/strong&gt;; the only missing one is "Create role assignment", but we can easily perform the operation by invoking the &lt;strong&gt;Azure REST API&lt;/strong&gt; and we do not have to worry about authentication as the &lt;strong&gt;managed identity&lt;/strong&gt; will do this for us.&lt;/p&gt;

&lt;p&gt;Now, you may have noticed that there is no condition stating: "If the group already exists, interrupt the flow"; but if you look at the picture above, you may notice a red dotted line between two operations, this is because we changed the &lt;code&gt;Run after&lt;/code&gt; settings of our create operation:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vu6ccGxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfdhcsqm4yriknx97a8r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vu6ccGxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfdhcsqm4yriknx97a8r.png" alt="Image description" width="880" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XEuMOT0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/st0paar2hit118lzziex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XEuMOT0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/st0paar2hit118lzziex.png" alt="Image description" width="880" height="935"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the operation of creation (and so the role assignment after) will only occur if the &lt;code&gt;Read resource group&lt;/code&gt; failed, hence the group does not exist; this will block the loophole described above.&lt;/p&gt;

&lt;p&gt;Now, we can prevent people from having broad access, but our &lt;strong&gt;Logic App's managed identity&lt;/strong&gt; still requires &lt;strong&gt;owner&lt;/strong&gt; permissions on the &lt;strong&gt;subscription&lt;/strong&gt;; more secure, but we can do even better. Let's create a &lt;strong&gt;custom role&lt;/strong&gt; that has only enough permissions to read/create a &lt;strong&gt;resource group&lt;/strong&gt; and assign permissions to it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BUcgV2ms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fyeboby4irz9kfksngc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BUcgV2ms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fyeboby4irz9kfksngc.png" alt="Image description" width="880" height="145"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can now use the UI to create a &lt;strong&gt;custom role&lt;/strong&gt;, but we may also want to script it and define it in JSON format:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--177X8rOP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8uawl707bx43x38m6728.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--177X8rOP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8uawl707bx43x38m6728.png" alt="Image description" width="880" height="549"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's now assign that to the &lt;strong&gt;managed identity&lt;/strong&gt; of our &lt;strong&gt;Logic App&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6_UJ3mvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qa5aslbmf8h4fedpdtlt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6_UJ3mvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qa5aslbmf8h4fedpdtlt.png" alt="Image description" width="880" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we should have all permissions in place. If you also want to use a &lt;strong&gt;security group&lt;/strong&gt;, your &lt;strong&gt;Logic App&lt;/strong&gt; identity may also require &lt;code&gt;Directory.Read.All&lt;/code&gt; permissions on your &lt;strong&gt;Azure AD&lt;/strong&gt; instance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-role-assignment"&gt;
  &lt;/a&gt;
  Creating role assignment
&lt;/h3&gt;

&lt;p&gt;I mentioned above that all the other actions can be performed with native &lt;strong&gt;Logic App connectors&lt;/strong&gt;, but the &lt;strong&gt;role assignment&lt;/strong&gt;, at the time of writing, requires the &lt;strong&gt;HTTP&lt;/strong&gt; connector to invoke the &lt;strong&gt;Azure REST API&lt;/strong&gt;, let's have a look at that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ntsw49Ff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntr7n35qcj9uv9oe65ki.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ntsw49Ff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntr7n35qcj9uv9oe65ki.png" alt="Image description" width="880" height="905"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even if we cannot do it in idiomatic &lt;strong&gt;Logic App&lt;/strong&gt;, that is yet pretty simple.&lt;/p&gt;

&lt;p&gt;This is the &lt;strong&gt;API&lt;/strong&gt; documentation: &lt;a href="https://docs.microsoft.com/en-us/rest/api/authorization/role-assignments/create"&gt;https://docs.microsoft.com/en-us/rest/api/authorization/role-assignments/create&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We just need to set the right method (&lt;code&gt;PUT&lt;/code&gt;), the correct &lt;strong&gt;URL&lt;/strong&gt;, using the &lt;strong&gt;resource group ID&lt;/strong&gt; as scope from the output of the previous &lt;strong&gt;connector&lt;/strong&gt; and we can auto-generate a random &lt;strong&gt;GUID&lt;/strong&gt; as name for the assignment using &lt;strong&gt;Logic App&lt;/strong&gt; expressions (&lt;code&gt;guid()&lt;/code&gt;). The body must contain the &lt;code&gt;role definition ID&lt;/code&gt;, which needs to be the built-in &lt;code&gt;contributor&lt;/code&gt; &lt;strong&gt;GUID&lt;/strong&gt; under our &lt;strong&gt;subscription ID&lt;/strong&gt;, I have used a variable for that to improve clarity:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cj2eu-w1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z827fnwr7rq3c2cel1xh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cj2eu-w1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z827fnwr7rq3c2cel1xh.png" alt="Image description" width="880" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;subscription ID&lt;/strong&gt; is one of the input of our workflow and the hardcoded &lt;strong&gt;GUID&lt;/strong&gt; can be found here: &lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#contributor"&gt;Contributor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get values as input from the workflow invocation, we need to set the input &lt;strong&gt;JSON schema&lt;/strong&gt; in the &lt;strong&gt;HTTP trigger&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OOjWsN59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y561ryxxpqdaxcepd2b8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OOjWsN59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y561ryxxpqdaxcepd2b8.png" alt="Image description" width="880" height="560"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;principalId&lt;/code&gt; The object ID of the assignee of the &lt;strong&gt;contributor&lt;/strong&gt; role, this can be found looking up the user in &lt;strong&gt;Azure AD&lt;/strong&gt; from the portal&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;resourceGroupLocation&lt;/code&gt;, &lt;code&gt;resourceGroupName&lt;/code&gt;, &lt;code&gt;subscriptionId&lt;/code&gt; Quite self-explanatory arguments
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"principalId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"string"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"resourceGroupLocation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"string"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"resourceGroupName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"string"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"subscriptionId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"string"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"object"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After adding the schema above to the trigger, those values will be available as variables in the rest of the workflow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h3&gt;

&lt;p&gt;All there is left now is to test, let's run our workflow with the following input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"subscriptionId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;Target subscription ID to create groups&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"resourceGroupName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rg-test2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"resourceGroupLocation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"West Europe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"principalId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;Object ID GUID of your user from AAD&amp;gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is what happens, assuming &lt;code&gt;rg-test2&lt;/code&gt; does not exist:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5HI7lALA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qr20p3alwm0dfu1o94c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5HI7lALA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qr20p3alwm0dfu1o94c.png" alt="Image description" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looks good, all the steps we wanted to run were successful.&lt;/p&gt;

&lt;p&gt;Now, let's try and run this again with the same inputs:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bd7gIVRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcqqsn78yxylzomr6y16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bd7gIVRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcqqsn78yxylzomr6y16.png" alt="Image description" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OK, as you can see from the grey circles next to the actions below &lt;code&gt;Read a resource group&lt;/code&gt;, none of the other operations were performed, exactly as expected.&lt;/p&gt;

&lt;p&gt;Now let's have a look at our newly created &lt;strong&gt;resource group IAM blade&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3neqNb13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4blcaco3h5f91gdrqitf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3neqNb13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4blcaco3h5f91gdrqitf.png" alt="Image description" width="880" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exactly what we wanted; a new &lt;strong&gt;resource group&lt;/strong&gt; of which I am &lt;strong&gt;contributor&lt;/strong&gt; without requiring any permission on the &lt;strong&gt;subscription&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The full template for the &lt;strong&gt;Logic App&lt;/strong&gt; is available on my &lt;a href="https://github.com/UnoSD/ResourceGroupsLogicApp"&gt;GitHub&lt;/a&gt; so you can save the extra 5 minutes it took me to create it to enable this security feature for your teams.&lt;/p&gt;

&lt;p&gt;You can also enhance security of the &lt;strong&gt;Logic App&lt;/strong&gt; to prevent unauthorised users from calling it by fronting it with &lt;strong&gt;API Management&lt;/strong&gt; or you can use &lt;strong&gt;Azure Active Directory Authorization Policies&lt;/strong&gt; on the &lt;strong&gt;Logic App&lt;/strong&gt; itself or a combination of the two.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>logicapps</category>
      <category>security</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>HacktoberFest Badge</title>
      <author>Rishabh Singh</author>
      <pubDate>Thu, 11 Nov 2021 08:02:33 +0000</pubDate>
      <link>https://dev.to/rishi098/hacktoberfest-badge-kd</link>
      <guid>https://dev.to/rishi098/hacktoberfest-badge-kd</guid>
      <description>&lt;p&gt;Now i have one more Hacktoberfest Badge&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>devlive</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Developing with VS Code on WSL 2</title>
      <author>Dev Sharma</author>
      <pubDate>Thu, 11 Nov 2021 07:44:39 +0000</pubDate>
      <link>https://dev.to/cryptus_neoxys/developing-with-vs-code-on-wsl-2-51o8</link>
      <guid>https://dev.to/cryptus_neoxys/developing-with-vs-code-on-wsl-2-51o8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#vs-code"&gt;
  &lt;/a&gt;
  VS Code 🤯
&lt;/h1&gt;

&lt;p&gt;VS Code seems to be the &lt;em&gt;1 size fit all&lt;/em&gt; code editor. VS Code offers really seamless integration to develop on a remote connection such as the WSL 2 with the simple installation of an extension.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#develop-in-wsl-2-on-vs-code"&gt;
  &lt;/a&gt;
  Develop in WSL 2 on VS Code
&lt;/h2&gt;

&lt;p&gt;If you don't have it already, install VS Code from the &lt;a href="https://code.visualstudio.com/download"&gt;official site&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---maA7y-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621194556751/qXcxC8p1A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---maA7y-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621194556751/qXcxC8p1A.png" alt="https://code.visualstudio.com/download" width="880" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(You can also download the &lt;em&gt;&lt;a href="https://code.visualstudio.com/insiders/"&gt;insiders build&lt;/a&gt;&lt;/em&gt; if you like living on the bleeding edge)&lt;/p&gt;

&lt;p&gt;While installing VS Code, make sure to check the Add to Path option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y6iUEgEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621194916519/6hMyzB6CD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y6iUEgEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621194916519/6hMyzB6CD.png" alt="VS Code add to path" width="500" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All you need to do is install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl"&gt;Remote - WSL Extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_YdsCZ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621196950216/E3JWnuL8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_YdsCZ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621196950216/E3JWnuL8u.png" alt="image.png" width="766" height="294"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Start a WSL 2 remote session&lt;br&gt;
Press &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;P&lt;/code&gt; and type in &lt;strong&gt;new wsl window&lt;/strong&gt; to open up a new WSL 2 window and select the option&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55J5RoAp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621197393442/o0wKeZjdp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55J5RoAp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621197393442/o0wKeZjdp.png" alt="image.png" width="748" height="364"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A new WSL 2 window should open up from the directory you were using.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRmWIkg7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621197539772/KZlrPwvGk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRmWIkg7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621197539772/KZlrPwvGk.png" alt="VS Code WSL 2 window" width="738" height="344"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is advised to use VS Code from the Linux file system instead of the windows'. To do this just use the &lt;strong&gt;Open Folder&lt;/strong&gt; option from the File menu.&lt;/p&gt;

&lt;p&gt;Just traverse to &lt;code&gt;~ or $HOME&lt;/code&gt; directory and then add the projects to the Linux file system and use them from there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xkP0Ifr5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621197806272/PKmEZRLGPP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xkP0Ifr5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621197806272/PKmEZRLGPP.png" alt="Open projects from Linux directory" width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upon opening any projects in WSL window, you will see the WSL 2.0  connection on the bottom-left as well as the title bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zHayu6sl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621198384965/OtkL2cLG6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zHayu6sl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621198384965/OtkL2cLG6.png" alt="Project on WSL 2.png" width="880" height="621"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎉🎉🎉&lt;br&gt;
That was it, now you can work on any project with VS Code inside WSL.&lt;/p&gt;

&lt;p&gt;Feel free to reach out to me on Twitter &lt;a href="https://twitter.com/cryptus_neoxys"&gt;@cryptus_neoxys&lt;/a&gt; and connect with me on &lt;a href="https://www.linkedin.com/in/cryptus-neoxys/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#refs-amp-resources"&gt;
  &lt;/a&gt;
  Refs &amp;amp; Resources
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-wsl#install-visual-studio-code"&gt;Microsoft Docs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>vscode</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Production Horrors – Customer Miscommunication Leads to Ongoing Nightmare</title>
      <author>Shai Almog</author>
      <pubDate>Thu, 11 Nov 2021 07:36:26 +0000</pubDate>
      <link>https://dev.to/codenameone/production-horrors-customer-miscommunication-leads-to-ongoing-nightmare-4ff6</link>
      <guid>https://dev.to/codenameone/production-horrors-customer-miscommunication-leads-to-ongoing-nightmare-4ff6</guid>
      <description>&lt;p&gt;&lt;strong&gt;You can't debug a specification. You must stay vigilant during the development cycle to find conceptual mistakes and reorient the Titanic.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a bit of a different story in the series. When I came up with the concept for production horrors my thoughts were mostly about a single day or a single event that made our production fail. Naturally our mind gravitates towards crashes or issues like the recent Facebook outage. But last time around, I gave the example of problematic caching that led to a billing problem… &lt;/p&gt;

&lt;p&gt;This time the production horror is of a different kind. It started well before the product reached production and in a different era. In a time before ajax, when the web was still in request-response mode and IE 6 was state of the art (truly a horror story). I was approached about consulting for a major bank that was running a huge project to modernize its trading infrastructure. &lt;/p&gt;

&lt;p&gt;I was too busy and expensive for the project so they decided to do without me. But I did get a chance to review the specification for the system. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-this-still-relevant-today"&gt;
  &lt;/a&gt;
  Is this Still Relevant Today?
&lt;/h2&gt;

&lt;p&gt;This was an in-house project with technologies that seem comically old by now. But I think all the big piece decision making/mistakes are timeless. I still see managers and developers making a lot of the same mistakes today.&lt;/p&gt;

&lt;p&gt;I don’t think anyone working on this was incomptent or stupid. I think mistakes were made because of scope/scale and the fact you can’t debug architecture. Some of you might jump to “lean startup” and modern methodologies as a solution. Those weren’t common back then but even with those processes, the problems only became visible when the full system was in place and it was too late to turn around.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#real-time-trading-over-the-web"&gt;
  &lt;/a&gt;
  Real Time Trading, Over the Web?
&lt;/h2&gt;

&lt;p&gt;This was a system for internal use. The bank had used a mainframe terminal system that worked OK but was clunky. They wanted to modernize it to “internet technologies”. &lt;/p&gt;

&lt;p&gt;Now remember that this was long ago. JavaScript was the language for creating cute animations. Gmail had just come out, and while it was impressive no one else was doing it. The frameworks for JavaScript front end didn’t exist. &lt;/p&gt;

&lt;p&gt;So my biggest complaint on the spec was: why are you using web technologies?&lt;/p&gt;

&lt;p&gt;The response was: the customer wants us to use “internet technologies”.&lt;/p&gt;

&lt;p&gt;It was later discovered that the customer just wanted modern technologies. A Swing UI (which was common in banking systems at the time) would have been great. Picking a web UI was a communication failure between the customer and the architect. &lt;/p&gt;

&lt;p&gt;If that one mistake in architecture wasn’t made, this sad monstrosity could have been avoided…&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#servlets-its-full-of-servlets"&gt;
  &lt;/a&gt;
  Servlets… It’s Full of Servlets…
&lt;/h2&gt;

&lt;p&gt;The next failure was one of hiring, I was expensive and busy. So they hired a lot of people. Filled a big office with ~30 developers of varying skill levels. They spent months drawing up an EJB 1.1 architecture with servlet/JSP front end. &lt;/p&gt;

&lt;p&gt;All of this was on top of an IBM WebSphere application server running on AIX. &lt;/p&gt;

&lt;p&gt;You might be cringing but this was “state of the art” at the time. As a side issue the project was missing someone with experience in the financial industry. This is pretty important for a banking application. &lt;/p&gt;

&lt;p&gt;The thing is, they skimped on hiring a senior architect. They hired someone that “looked good” on the surface. But he didn’t really know enough about banking or about web development… &lt;/p&gt;

&lt;p&gt;The project used doubles for financial calculations!&lt;/p&gt;

&lt;p&gt;If you don’t come from the financial industry you might think this isn’t a “big deal” but I promise you that four out of five fintech people reading this will slap their heads. This was “fixable” though; the real disaster was the front end.&lt;/p&gt;

&lt;p&gt;This was before we had any front end APIs even on the server. Struts was relatively new and the developers in the project weren’t aware of its existence. So they started pumping out a lot of disconnected servlets/JSPs with unclear navigation and no central control. The system became an unmanageable mess before it went to production.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-gets-worse"&gt;
  &lt;/a&gt;
  It gets Worse
&lt;/h2&gt;

&lt;p&gt;Keep in mind, we didn’t get to the point of the story which is the production. &lt;/p&gt;

&lt;p&gt;This was a trading system that was connected directly to the stock market and the bank's internal mainframe. There were a lot of moving parts involved. But there were a few customer requirements that weren’t clear in the initial design specification. Mostly because the architects didn’t think they would pose a challenge…&lt;/p&gt;

&lt;p&gt;Some processes had to deliver sub second response times.&lt;/p&gt;

&lt;p&gt;That sounds easy and it sounded easy back then. How hard can it be to send a purchase/sell command in less than a second. Right?&lt;/p&gt;

&lt;p&gt;Turns out the time it took was 7 minutes. That’s the point where I was brought into the project as a consultant. I literally just ran a profiler and got the time down to 7 seconds. &lt;/p&gt;

&lt;p&gt;Two guys working one next to the other, had each assumed his colleague was caching the table when he invoked a method from the other guy. So you ended up with two lookup tables constantly looking up the entire adjoining table over and over again for every row in each table. &lt;/p&gt;

&lt;p&gt;The system used a lot of hand coded JavaScript code all over the place that relied on DOM and browser behavior to get that last bit of performance and avoid the full page request. Again, there were no frameworks or “best practices” for that sort of thing in those days. So I can’t really blame the people working on that. &lt;/p&gt;

&lt;p&gt;Ultimately, the new PM who came over to fix the disaster came to this deployment plan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The system will only support Internet Explorer 6 with a specific version number&lt;/li&gt;
&lt;li&gt;To let users upgrade they will ghost their machines (duplicate user hard drives so the browser will have identical versions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There was even a discussion about using remote terminals (VNC style) to show a computer running the browser with the right version installed. &lt;/p&gt;

&lt;p&gt;Surprisingly, this wasn’t considered a failure by the bank who still hired the contractor to a much larger project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lessons-learned"&gt;
  &lt;/a&gt;
  Lessons Learned
&lt;/h2&gt;

&lt;p&gt;There are a lot of lessons that are applicable to modern projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You need a domain expert in the field – you can’t run a banking project without someone who actually knows banking in depth at the code level. It isn’t enough to have an expert in the design phase&lt;/li&gt;
&lt;li&gt;It’s hard to validate design – projects like this should be more agile and should have stopped to re-evaluate before scaling the team and moving past the point of no return
Customer requirements should be deeply validated – this one thing could have changed the dynamic of the project completely&lt;/li&gt;
&lt;li&gt;Some problems are only noticeable when we’re close to production stage&lt;/li&gt;
&lt;li&gt;You should write a test case that validates customer requirements – if there was  test from day one that validated the 1 second time requirement a lot could have been saved&lt;/li&gt;
&lt;li&gt;Use current technology – this is a lesson on which I have many other stories. Developers want to work with “cool” technologies. They tend to downplay the risk of picking a newer tool and exaggerate the potential benefits. Even if the technologies deliver the auxiliary technologies and space around them isn’t always ready&lt;/li&gt;
&lt;li&gt;Don’t assume the customer requirements are “simple”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What do you do when you’re going to production with a badly built project?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is it really badly built or is that just imposter syndrome rearing its ugly head? &lt;/li&gt;
&lt;li&gt;All code can be improved, the problem is that this leads to projects that never reach production. You need to find a balance.

&lt;ul&gt;
&lt;li&gt;Build a fix plan&lt;/li&gt;
&lt;li&gt;What can we do in the short term&lt;/li&gt;
&lt;li&gt;What parts will we be able to replace after going to production&lt;/li&gt;
&lt;li&gt;Priorities with the customer&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Re-evaluate directions during development – you can’t debug a system design decision. As you’re implementing it you might find problems. It’s important to raise them high enough and loudly enough. &lt;/li&gt;
&lt;li&gt;Talk to the customers continuously – There was a point in time in the middle of the project where the company could have changed course and gone back to building a regular Swing UI instead of a web UI. They probably would have finished the project sooner and with better quality &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Production disasters are sometimes those pileups we can see coming from miles away. But the train is moving so fast we can’t possibly stop it. This is one of those stories. In it a combination of bad communication, missing skills, immature technological choices created a pile up. &lt;/p&gt;

&lt;p&gt;As a result the production environment ended up as a system administrators nightmare and a story to scare young developers.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>java</category>
      <category>programming</category>
      <category>architecture</category>
    </item>
  </channel>
</rss>
