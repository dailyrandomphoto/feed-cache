<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Node.JS - Foal framework - version 2.4 is here</title>
      <author>LoÃ¯c Poullain</author>
      <pubDate>Tue, 25 May 2021 13:48:06 +0000</pubDate>
      <link>https://dev.to/loicpoullain/node-js-foal-framework-version-2-4-is-here-dhh</link>
      <guid>https://dev.to/loicpoullain/node-js-foal-framework-version-2-4-is-here-dhh</guid>
      <description>&lt;p&gt;Version 2.4 of Foal has been released! Here are the improvements that it brings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-data-endraw-references-for-validation"&gt;
  &lt;/a&gt;
  &lt;code&gt;$data&lt;/code&gt; references for validation
&lt;/h2&gt;

&lt;p&gt;Version 2.4 allows you to enable the AJV &lt;code&gt;$data&lt;/code&gt; option so that you can use the verified data values as validators for other values.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;config/default.json&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ajv"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"$data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Example of auth controller&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ValidateBody&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AuthController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/signup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ValidateBody&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="c1"&gt;// "password" and "confirmPassword" should be identical.&lt;/span&gt;
      &lt;span class="na"&gt;confirmPassword&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;const&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1/password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nl"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;confirmPassword&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;additionalProperties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nx"&gt;signup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Do something.&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#cache-option-for-file-downloading"&gt;
  &lt;/a&gt;
  Cache option for file downloading
&lt;/h2&gt;

&lt;p&gt;Starting from version 2.4 the &lt;code&gt;Disk.createHttpResponse&lt;/code&gt; method accepts an optional parameter to specify the value of the &lt;code&gt;Cache-Control&lt;/code&gt; header.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dependency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Get&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Disk&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/storage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../entities&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ProfileController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;dependency&lt;/span&gt;
  &lt;span class="nx"&gt;disk&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Disk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;readProfileImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createHttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;avatar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;no-cache&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug fixes
&lt;/h2&gt;

&lt;p&gt;See issue &lt;a href="https://github.com/FoalTS/foal/issues/930"&gt;#930&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contributors"&gt;
  &lt;/a&gt;
  Contributors
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ZakRabe"&gt;@ZakRabe&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Amazing Specific Select File Using HTML CSS &amp; JS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Tue, 25 May 2021 13:36:36 +0000</pubDate>
      <link>https://dev.to/nikhil27b/amazing-specific-select-file-using-html-css-js-1366</link>
      <guid>https://dev.to/nikhil27b/amazing-specific-select-file-using-html-css-js-1366</guid>
      <description>&lt;p&gt;Today I created a Amazing Specific with HTML &amp;amp; JS. I use JavaScript to select this file name and upload this file you can be use a post method after choose the file using axios or http I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/eYvRzpd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>#30DaysOfAppwrite : Cloud Function with CRON</title>
      <author>Torsten Dittmann</author>
      <pubDate>Tue, 25 May 2021 13:13:26 +0000</pubDate>
      <link>https://dev.to/appwrite/30daysofappwrite-cloud-function-with-cron-258c</link>
      <guid>https://dev.to/appwrite/30daysofappwrite-cloud-function-with-cron-258c</guid>
      <description>&lt;h1&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h1&gt;

&lt;p&gt;&lt;a href="http://30days.appwrite.io/"&gt;#30DaysOfAppwrite&lt;/a&gt; is a month long event focused at giving developers a walk through of all of Appwrite's features, starting from the basics to more advanced features like Cloud Functions! Alongside we will also be building a fully featured Medium Clone to demonstrate how these concepts can be applied when building a real world app. We also have some exciting prizes for developers who follow along with us!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-statistics"&gt;
  &lt;/a&gt;
  Creating Statistics
&lt;/h1&gt;

&lt;p&gt;On Day 24, we created a Cloud Function that was triggered by an event. This comes in handy when you want to react to interactions from the Client Side. For Day 25 we are going to create a Cloud Function that will be triggered at particular intervals of time. We can accomplish this by adding a CRON Schedule to our Cloud Function. &lt;/p&gt;

&lt;p&gt;For Day 25 we are creating a Cloud Function that will run every day and create statistics for our App. We are going to save the number of profiles and posts of each day in a Collection - this data allows us to create Graphs and Statistics to track.&lt;/p&gt;

&lt;p&gt;First of all, we are going to create a new &lt;strong&gt;Statistics&lt;/strong&gt; collection with the following &lt;strong&gt;Rules&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Profiles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Label:&lt;/strong&gt; Profiles&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Key:&lt;/strong&gt; profiles&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rule Type:&lt;/strong&gt; Numeric&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Posts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Label:&lt;/strong&gt; Posts&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Key:&lt;/strong&gt; posts&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rule Type:&lt;/strong&gt; Numeric&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Timestamp:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Label:&lt;/strong&gt; Timestamp&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Key:&lt;/strong&gt; timestamp&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rule Type:&lt;/strong&gt; Numeric&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;Permissions&lt;/strong&gt; will be &lt;code&gt;*&lt;/code&gt; for &lt;em&gt;read&lt;/em&gt;, so anyone can retrieve the statistic and we are going to leave the &lt;em&gt;write&lt;/em&gt; permissions empty. Leaving the &lt;em&gt;write&lt;/em&gt; empty, will block anyone from writing to that Collection - except for when they're using an API key.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mDpKrjb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w05oizqrea837qs0gike.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mDpKrjb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w05oizqrea837qs0gike.png" alt="Rules"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that the Collection is prepared, let's start with our cloud function. For this example, we are going to create another Node.js Cloud Function. As environment variables we are going to add the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;APPWRITE_PROJECT_ID&lt;/strong&gt;: Insert your project ID.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;APPWRITE_ENDPOINT&lt;/strong&gt;: Insert your Appwrite endpoint.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;APPWRITE_API_KEY&lt;/strong&gt;: Insert an API key that has &lt;em&gt;documents.read&lt;/em&gt; and &lt;em&gt;documents.write&lt;/em&gt; permissions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;STATISTICS_COLLECTION&lt;/strong&gt;: Insert the ID of the Statistics collection.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;PROFILE_COLLECTION&lt;/strong&gt;: Insert the ID of the Profile collection.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;POST_COLLECTION&lt;/strong&gt;: Insert the ID of the Post collection.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Under the &lt;strong&gt;Settings&lt;/strong&gt; page of this Cloud Function, you also need to add a value in the &lt;strong&gt;Schedule (CRON Syntax)&lt;/strong&gt; field. For our use-case we are setting it to &lt;code&gt;0 12 * * *&lt;/code&gt;, which will execute this Function every day at 12:00.&lt;/p&gt;

&lt;p&gt;Create a Node.js project using npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;create-statistics
&lt;span class="nb"&gt;cd &lt;/span&gt;create-statistics
npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add &lt;code&gt;node-appwrite&lt;/code&gt; as a dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;node-appwrite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create &lt;code&gt;index.js&lt;/code&gt; file and put in following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;STATISTICS_COLLECTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STATISTICS_COLLECTION&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PROFILE_COLLECTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PROFILE_COLLECTION&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;POST_COLLECTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;POST_COLLECTION&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Initialise the client SDK&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node-appwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;APPWRITE_ENDPOINT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your API Endpoint&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;APPWRITE_PROJECT_ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your project ID&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;APPWRITE_API_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your secret API key&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Get the sum of Profiles and Posts&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;profiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PROFILE_COLLECTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;POST_COLLECTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;published=1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Waiting for all promises to resolve and write into the Statistics Collection&lt;/span&gt;
&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;STATISTICS_COLLECTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can upload the Function very easily using the Appwrite CLI (or upload it manually in the dashboard):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;appwrite functions createTag &lt;span class="nt"&gt;--code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;--functionId&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;YOUR_FUNCTION_ID] &lt;span class="nt"&gt;--command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'node index.js'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Don't forget to activate the tag we just created!&lt;br&gt;
We covered both the &lt;a href="https://dev.to/appwrite/30daysofappwrite-appwrite-cloud-functions-1pf2"&gt;CLI method and Manual method&lt;/a&gt; on Day 23. So feel free to check it out if you get stuck.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#testing-our-cloud-function"&gt;
  &lt;/a&gt;
  Testing Our Cloud Function
&lt;/h1&gt;

&lt;p&gt;We can easily test out our function by waiting for 12:00 or just executing it manually in your Functions page. If the function was executed successfully, you can head over the the &lt;strong&gt;Statistics&lt;/strong&gt; Collection and you should find a document like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgCFcpOP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvfao78xmfoyh46t8n0y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgCFcpOP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvfao78xmfoyh46t8n0y.png" alt="Result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this data, we can create Charts and Statistics to monitor the usage of our application. &lt;/p&gt;

&lt;p&gt;Feel free to share how you would leverage this data and implement it in the Medium Clone!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h1&gt;

&lt;p&gt;We hope you liked this write up. You can follow &lt;a href="https://twitter.com/search?q=%2330daysofappwrite"&gt;#30DaysOfAppwrite&lt;/a&gt; on Social Media to keep up with all of our posts. The complete event timeline can be found &lt;a href="http://30days.appwrite.io"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/discord"&gt;Discord Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appwrite.io/"&gt;Appwrite Homepage&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite"&gt;Appwrite's Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to reach out to us on Discord if you would like to learn more about Appwrite, Aliens or Unicorns ğ¦. Stay tuned for tomorrow's article! Until then ğ&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>flutter</category>
      <category>30daysofappwrite</category>
    </item>
    <item>
      <title>The outcomes of developers embracing No-code</title>
      <author>Tony Cletus</author>
      <pubDate>Tue, 25 May 2021 13:06:06 +0000</pubDate>
      <link>https://dev.to/tonycletus/the-outcomes-of-developers-embracing-no-code-2bpi</link>
      <guid>https://dev.to/tonycletus/the-outcomes-of-developers-embracing-no-code-2bpi</guid>
      <description>&lt;p&gt;&lt;em&gt;Photo credit: &lt;a href="https://iwaria.com/?utm_source=dev_to&amp;amp;utm_medium=banner&amp;amp;utm_campaign=tony_article"&gt;Iwaria&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Software industry is the most exponential field in the world. Especially in the way we craft and think software.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"We've never had a better yesterday, it has always been a forward progress."&lt;br&gt;
 â Gideon Shaibu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From building software with Low-level languages (Machine language and Assembly language) in 0s and 1s to High-level languages (Python, C++, JavaScript, Java...) and now, there's this new thing echoing all over the internet called &lt;strong&gt;No-Code&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The genealogy of software development has never had a better yesterday. Each chronicle presents a simplified way of building software better than the previous chronicle. Now is the time to talk No-code, though, no longer a new phenomenon.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-era-of-nocode"&gt;
  &lt;/a&gt;
  The Era of No-Code
&lt;/h2&gt;

&lt;p&gt;The No-code movement started way back in 1985 when Microsoft released the first version of Excel (interestingly for Mac), followed by the Windows version in 1987. Google took it further by creating Google Sheets and embracing the cloud. Over the years, Excel has helped shape how we handle financial and data analysis. &lt;/p&gt;

&lt;p&gt;In 2003, No-code fully came online, when WordPress kickstarted the ability to build websites without code which is powering about &lt;a href="https://www.whoishostingthis.com/compare/wordpress/stats/"&gt;35% of the world's websites&lt;/a&gt; today. &lt;/p&gt;

&lt;p&gt;In 2004, Shopify empowered people to build their online stores without code. &lt;/p&gt;

&lt;p&gt;WordPress and Shopify were the first set of popular online tools to pave way for entrepreneurs to build all kinds of websites ranging from blog to dev tools to e-commerce websites and SaaS products.&lt;/p&gt;

&lt;p&gt;Later, popular tools like Airtable (2012), Bubble (2012), Webflow (2013), Zapier (2012), Notion (2016), Coda (2019) and a list of many others have grossly contributed to the No-code movement. All to democratize software development by creating citizen developers who can quickly build solutions in real-time without writing code.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;No-code is simply building and maintaining what is used to be accomplished with code without code.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-nocode-here-to-replace-software-developers"&gt;
  &lt;/a&gt;
  Is No-code here to replace Software developers?
&lt;/h2&gt;

&lt;p&gt;Capital NO. This can never happen as No-code tools need software developers to write code that makes them what they are.&lt;/p&gt;

&lt;p&gt;Think of &lt;a href="https://botamp.com"&gt;Botamp&lt;/a&gt; for example, A software that provides entrepreneurs with simple tools to quickly create their website and professional email campaigns without code. &lt;a href="https://www.wappalyzer.com/apps/"&gt;Wappalyzer&lt;/a&gt; browser extension shows Botamp is powered by Ruby on Rails. A high-level framework only developers can code and maintain. So the idea that No-code is here to replace Software developers is completely useless. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZUvPb25p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1364158357511286786/sHKiqABw_normal.jpg" alt="Tony Cletus profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tony Cletus
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @iamtonycletus
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Some people have to learn how to code to build simple tools that will help others create stuff without coding. How sweet that sounds. &lt;br&gt;&lt;a href="https://twitter.com/hashtag/NoCode"&gt;#NoCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/BuildInPublic"&gt;#BuildInPublic&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:44 AM - 26 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1375353052828418048" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1375353052828418048" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1375353052828418048" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I rather say the idea of No-code is to empower non-technical people to create solutions for their business, client, or explore their creative minds.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#should-developers-embrace-nocode-technology"&gt;
  &lt;/a&gt;
  Should Developers embrace No-code technology?
&lt;/h2&gt;

&lt;p&gt;Absolutely YES, No-code technologies are around to simplify the existing process they are alternating. Not every development requires coding. &lt;/p&gt;

&lt;p&gt;No-code can do almost anything code can do these days, maybe not as appealing as building certain functionalities with code but it gives enough space for speedy development. No-code saves time and money. Think of creating blogs, landing pages, payment systems, AI tools, SaaS products and community/social apps. &lt;/p&gt;

&lt;p&gt;Recently &lt;a href="https://www.makerpad.co/"&gt;Makerpad&lt;/a&gt;, a community-driven platform built with No-code was acquired by Zapier. An inspiring News for startups using the same approach.&lt;/p&gt;

&lt;p&gt;Spicing your technical skill-set with No-code makes you an outstanding developer. It helps you build faster, bootstrap your side-project, and be diversified. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-happens-if-software-developers-crowd-nocode"&gt;
  &lt;/a&gt;
  What happens if Software developers crowd No-code?
&lt;/h2&gt;

&lt;p&gt;All I see is a positive change. Developers are already conversant with the design, implementation and maintenance of Software. All they seek is a simpler approach to what they are already doing. Think of why Laravel framework exists, an alternative to writing raw PHP for web development. It is easier for developers to adopt No-code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://netlify.com"&gt;Netlify&lt;/a&gt; caught the hearts of developers wasn't because it is a scaled hosting software. While similar technologies like Heroku, GitHub and AWS allowed app deployment via Git commands and Terminals, Netlify simplified the process by allowing developers to deploy apps by dragging and dropping your project from your local computer to the cloud. A definition of speed and simplicity.&lt;/p&gt;

&lt;p&gt;Developer tools like Stripe and Algolia can be used to extend the functionality of their App without writing additional code. Visual Development tools like Bubble, Webflow, Botamp, Zapier, Integromat, Airtable, Notion, Coda, and others are used to build stuff that one could only build by writing, hosting, and maintaining a whole lot of code in the absence of these tools.&lt;/p&gt;

&lt;p&gt;In general, No-code adds as a supportive skill to developers to build faster. It comes in handy when you need to ship an MVP. Developers can improve the No-code tools as high-level users. &lt;/p&gt;

&lt;p&gt;Because of No-code, we have titles like non-technical founder, citizen developers, makers, No-code developer and whole a lot. Embracing No-code is no longer the case but how knowledgeable are you with No-code.&lt;/p&gt;

</description>
      <category>nocode</category>
      <category>saas</category>
      <category>lowcode</category>
      <category>programming</category>
    </item>
    <item>
      <title>Interesting people to follow for UI/UX/Webdesign</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 25 May 2021 13:02:32 +0000</pubDate>
      <link>https://dev.to/adaendra/interesting-people-to-follow-for-ui-ux-webdesign-34c3</link>
      <guid>https://dev.to/adaendra/interesting-people-to-follow-for-ui-ux-webdesign-34c3</guid>
      <description>&lt;p&gt;&lt;strong&gt;If you are interested in UI/UX or webdesign, here are a few people for you to follow!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are really interesting people which post regularly about new tools, tips...&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#geoffrey-crofte"&gt;
  &lt;/a&gt;
  Geoffrey Crofte
&lt;/h2&gt;

&lt;p&gt;He is a UX in Luxembourg and posts almost every day on Linkedin in French, English, or both.&lt;/p&gt;

&lt;p&gt;Also, he has a blog &lt;em&gt;(written in French)&lt;/em&gt; named &lt;strong&gt;Creative Juiz&lt;/strong&gt; with a lot of interesting posts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/geoffreycrofte/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.creativejuiz.fr/blog/"&gt;Creative Juiz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#posts-examples"&gt;
  &lt;/a&gt;
  Posts examples
&lt;/h3&gt;

&lt;p&gt;Here is some example of tools which he talked about :&lt;br&gt;
&lt;a href="https://yeun.github.io/open-color/?ref=shuhari"&gt;Open Color&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p_lwcUw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ap5qaorzjvcou7yvv6mj.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p_lwcUw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ap5qaorzjvcou7yvv6mj.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://luge.cool/"&gt;Luge&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOaAiIlQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hycqwqeedxp3tfzhfmmz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOaAiIlQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hycqwqeedxp3tfzhfmmz.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#colbys-dovi"&gt;
  &lt;/a&gt;
  Colbys Dovi
&lt;/h2&gt;

&lt;p&gt;He is a Product Designer in Paris. As Geoffrey, he posts almost every day on LinkedIn in French and English.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/colbysdovi/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#posts-examples"&gt;
  &lt;/a&gt;
  Posts examples
&lt;/h3&gt;

&lt;p&gt;Here is some example of what he talked about : &lt;br&gt;
&lt;a href="https://tablericons.com/?ref=shuhari"&gt;Tabler Icons&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SGonJNt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3jh22ef6jzql53r2kvc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SGonJNt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3jh22ef6jzql53r2kvc.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://iainbean.com/posts/2021/5-steps-to-faster-web-fonts/"&gt;5 steps to faster web fonts - Blog post&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PTaA3Y_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pntga2z5mwwlxck5xowj.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PTaA3Y_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pntga2z5mwwlxck5xowj.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#laetitia-bouloc"&gt;
  &lt;/a&gt;
  Laetitia Bouloc
&lt;/h2&gt;

&lt;p&gt;Also known by the name of &lt;strong&gt;NÃ©ographe Factory&lt;/strong&gt; &lt;em&gt;(The name of her enterprise)&lt;/em&gt;, she is a freelancer in Bordeaux, France.&lt;/p&gt;

&lt;p&gt;She posts in French, generally in a video format, and it's really interesting and fun!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/N8cEEuoRzVI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Also, on her website, she has a page that can be your next bookmark! A huge &lt;a href="https://www.neographefactory.com/toolbox.html"&gt;toolbox&lt;/a&gt;!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w9BZrgGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mya569zbp7ire1wahpd4.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w9BZrgGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mya569zbp7ire1wahpd4.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;br&gt;
She is currently writing a book to be able to create your visual identity. It will be in French, but if you understand french and like her job, I think it will be a great buy.&lt;br&gt;
&lt;a href="https://www.neographefactory.com/book-.html"&gt;NÃ©ographe Factory - Book&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/laetitiabouloc/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/N%C3%A9ographeFactory/videos"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.neographefactory.com/"&gt;NÃ©ographe Factory - WebSite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;So go follow them and go give them some love about their great job about sharing knowledge!&lt;/p&gt;

&lt;p&gt;I hope it will help you!&lt;/p&gt;

</description>
      <category>ux</category>
      <category>css</category>
    </item>
    <item>
      <title>The rise of no-code &amp; low-code: are we out of a job yet? ğ¨</title>
      <author>Amelia Vieira Rosado</author>
      <pubDate>Tue, 25 May 2021 12:43:02 +0000</pubDate>
      <link>https://dev.to/technoglot/the-rise-of-no-code-low-code-are-we-out-of-a-job-yet-2epj</link>
      <guid>https://dev.to/technoglot/the-rise-of-no-code-low-code-are-we-out-of-a-job-yet-2epj</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@lucabravo?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Luca Bravo&lt;/a&gt; on &lt;a href="https://unsplash.com/collections/9760051/drag-%26-drop-builder?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hello fellow devs! ğğ» I hope you are doing well!&lt;/p&gt;

&lt;p&gt;I'm sure you have come across no-code and low-code solutions before. It is by no means a new concept. &lt;/p&gt;

&lt;p&gt;For those unfamiliar, low-code is described as a "tool" that enables developers of all skill levels to rapidly design and develop applications, while keeping code to a minimum. Such app development is typically accomplished by dragging and dropping visual blocks of code into a workflow. &lt;/p&gt;

&lt;p&gt;No-code solutions also feature drag-and-drop and visual development, but unlike low-code, they cater to business people or others in IT who may not be familiar with programming languages but still want to develop an application for a specific use case. In other words, no-code solutions allow organizations to equip their teams with the necessary tools to create applications without any formal development training.&lt;/p&gt;

&lt;p&gt;As you can see there's a subtle difference between the two. Now, let us ponder on this topic a little more, shall we? ğ§ &lt;/p&gt;

&lt;p&gt;Here are some questions to help you craft your comment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What do you think of no-code/low-code solutions? &lt;/li&gt;
&lt;li&gt;Do you think they will take our jobs? Why or why not? &lt;/li&gt;
&lt;li&gt;What do you think are advantages and disadvantages of no-code/low-code?&lt;/li&gt;
&lt;li&gt;Does no-code/low-code have a future? Or is it just a passing fad?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Drop your comments below, I love to read them all! ğ &lt;/p&gt;

&lt;p&gt;See you in the comment section! ğğ»&lt;/p&gt;


&lt;p&gt;P.S.: Try to stay on topic and don't nitpick too much on the wording or title. Thanks in advance ğ&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;&lt;br&gt;
Still here? Catch me on &lt;a href="https://twitter.com/technoglot"&gt;Twitter&lt;/a&gt; or find me &lt;a href="https://linktr.ee/technoglot"&gt;elsewhere&lt;/a&gt;! If you like my blogs and are feeling generous, kindly consider to ğğ»&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/technoglot"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQYkOYbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9olbzsmrxb3tksl6iqf.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
My Redbubble shop is LIVE! Feel free to take a look ğ&lt;br&gt;&lt;br&gt;
&lt;a href="https://technoglot.redbubble.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yMjaGyvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi84k7rjhgyryfpr8c1a.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cftknAn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8iwes672pxpljtq7z6oy.png" alt="technoglot footer banner"&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>why use useState?</title>
      <author>Prajwal Jain</author>
      <pubDate>Tue, 25 May 2021 12:40:59 +0000</pubDate>
      <link>https://dev.to/j836/why-use-usestate-1cd9</link>
      <guid>https://dev.to/j836/why-use-usestate-1cd9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#usestate"&gt;
  &lt;/a&gt;
  useState
&lt;/h1&gt;

&lt;p&gt;useState is a react API to change the state of elements or components.&lt;br&gt;
Why do we require a seperate hook to change a value of an element?&lt;br&gt;&lt;br&gt;
Well,Its always a bad practise to mutate the state directly.&lt;br&gt;&lt;br&gt;
Let me explain things along with the code itself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;sample program to show declarative programming&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
        &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prajwal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="c1"&gt;// if you dont use setState line no 19 does not run =&amp;gt; function is not called =&amp;gt; rerendering does not occur.&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from onclick&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Click Me&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;welcome &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What does this code aim to do?&lt;br&gt;&lt;br&gt;
We want to display user's name instead of just user as a text when button is clicked.&lt;br&gt;&lt;br&gt;
A bad dev like me would probably do something as &lt;/p&gt;
&lt;p&gt;(which is wrong)&lt;/p&gt;
&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;sample program to show declarative programming&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
        &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prajwal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from onclick&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Click Me&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;this is from user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;welcome &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: I am purposely showing the wrong approach.Sometimes looking at what is wrong helps us understanding what is correct!!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;Here goes the sandbox link for the right approach.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/bqw1u"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you see the console.log within onClick you could see that the value of user has been updated.But Wait!Why isnt it reflecting in the view?&lt;/p&gt;

&lt;p&gt;Its because..&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;if there is no setState =&amp;gt;(implies) React does not see any state changed =&amp;gt; re-rendering of function does not occur =&amp;gt; view would no be updated.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if you dont use setState, &lt;code&gt;{console.log(user, "this is from user")}&lt;/code&gt; does not run =&amp;gt; function is not called =&amp;gt; rerendering does not occur.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Conclusion:&lt;br&gt; &lt;b&gt;only when the state is changed through setState the re-rendering of function occurs.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading till the end. If you notice something wrong do suggest me in the comment box.&lt;br&gt;
Do give it a like if it helped you understanding the concept.&lt;/p&gt;

</description>
      <category>usestate</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Looking for non-profit or open-source projects</title>
      <author>TrinhDinhHuy</author>
      <pubDate>Tue, 25 May 2021 12:31:37 +0000</pubDate>
      <link>https://dev.to/dinhhuyams/looking-for-non-profit-or-open-source-projects-3119</link>
      <guid>https://dev.to/dinhhuyams/looking-for-non-profit-or-open-source-projects-3119</guid>
      <description>&lt;p&gt;ğï¸ââï¸I am looking for a &lt;strong&gt;non-profit&lt;/strong&gt; or an &lt;strong&gt;open-source&lt;/strong&gt; project that I can contribute to.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h1&gt;

&lt;p&gt;The motivation behind this is that I would love to find a place I can practice coding. Normally, if I want to learn something, I will try to write a blog or create some small projects.&lt;/p&gt;

&lt;p&gt;ğ Example of my projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vinhlee95/awesome-react-typescript-boilerplate"&gt;awesome-react-typescript-boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HuyAms/awesome-node-boilerplate"&gt;awesome-node-boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ğ Blogs&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/dinhhuyams/10-tips-to-improve-readability-in-javascript-53a3"&gt;10 tips to improve readability in Javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/dinhhuyams/introduction-to-react-memo-usememo-and-usecallback-5ei3"&gt;Introduction to React.memo, useMemo and useCallback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It would be good to do something meaningful, and I would like to work in a team &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#myself"&gt;
  &lt;/a&gt;
  Myself
&lt;/h1&gt;

&lt;p&gt;ğª I have 3-year experience in coding. &lt;/p&gt;

&lt;p&gt;I work mostly with React and I am quite familiar with these tech:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;NextJS&lt;/li&gt;
&lt;li&gt;NodeJS&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#ideal-project"&gt;
  &lt;/a&gt;
  Ideal project
&lt;/h1&gt;

&lt;p&gt;My ideal project is a &lt;strong&gt;non-profit&lt;/strong&gt; or an &lt;strong&gt;open-source&lt;/strong&gt; project built with these tech:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;NextJS&lt;/li&gt;
&lt;li&gt;NodeJS&lt;/li&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would love to work in a team who is passionate about tech&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I can contribute about &lt;strong&gt;3-7 hours/week&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Feel free to contact me so we can discuss if you have any interesting non-profit projects that need help.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/dinhhuyams"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/huydinhtrinh/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>react</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Declarative in terms of React.</title>
      <author>Prajwal Jain</author>
      <pubDate>Tue, 25 May 2021 12:16:31 +0000</pubDate>
      <link>https://dev.to/j836/declarative-in-terms-of-react-2g1c</link>
      <guid>https://dev.to/j836/declarative-in-terms-of-react-2g1c</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-declarative-in-terms-of-react"&gt;
  &lt;/a&gt;
  what is declarative in terms of react?
&lt;/h1&gt;

&lt;p&gt;if you are new to react then you might have heard about react being declarative.&lt;br&gt;
What exacly does that mean?Lets have a look.&lt;/p&gt;

&lt;p&gt;Say we have a button with us and initially a normal text of welcome user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What we want to do?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We want to display user's name instead of just user as a text when button is clicked.&lt;/p&gt;

&lt;p&gt;Lets have a look at the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;sample for showing that react is declarative&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;hr&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"btn-click"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Click me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;welcome &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;user&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is what we do in vanilla javascript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#btn-click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prajwal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we need to tell the browser each and every step which are as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;hey browser, give me the button which lies on the document whose id is ....(btn-click) in our case.&lt;/li&gt;
&lt;li&gt;Do something (step 3) when user clicks on that button.&lt;/li&gt;
&lt;li&gt;when user clicks on that button,give me that element which lies on the document and whose id is ....(user in our case)&lt;/li&gt;
&lt;li&gt;set the text as ....(prajwal in our case) on it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some crucial points to be noted:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;we are dealing with the browser's DOM to perform our actions.This,is what we dont do in React.We never interact with DOM in React.
So after the birth of react this procedure seems more like a donkey work.&lt;/li&gt;
&lt;li&gt;We are telling browser each and every instruction and then it does something for us.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the codepen link if you wish to try your hands on&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/prajwal_/embed/NWpbvBV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
React has came out with a smarter approach and thats nothing but declarative!&lt;/p&gt;

&lt;p&gt;Lets see the react code..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;sample program to show declarative programming&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
        &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prajwal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="c1"&gt;// if you dont use setState line no 19 does not run =&amp;gt; function is not called =&amp;gt; rerendering does not occur.&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from onclick&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Click Me&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;welcome &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the code for you to play with.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/bqw1u"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Again if you dont know about useState you can read &lt;a href="https://dev.to/j836/why-use-usestate-1cd9"&gt;this&lt;/a&gt; blog.I have tried to explain things in a simpler way with the same example so that it is relatable.I do suggest you to check out &lt;a href="https://dev.to/j836/why-use-usestate-1cd9"&gt;this&lt;/a&gt; blog.&lt;/p&gt;

&lt;p&gt;In this react code,you see we only tell the react..&lt;br&gt; Hey React,I want to display something... on this element when some one clicks on the button.&lt;br&gt;
Neither we do document.querySelector nor we do .innerText..i.e. We dont deal direclty with browser's DOM.But still the work is done.How?Well,React does all of that for us.&lt;/p&gt;

&lt;p&gt;you see,We dont give set of long instructions.&lt;br&gt;
We only tell react what to do..how does react do that is react's look out.&lt;br&gt;&lt;br&gt;
Its more like saying&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR &lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;"suun react,tuze ye element pe ye text dikhana hai..kuch bhi kar kaise bhi kar bass kaam ho jaana chaiye..!"&lt;br&gt;&lt;/em&gt;&lt;br&gt;
Thats declarative!&lt;/p&gt;

&lt;p&gt;Thank you for reading till the end. If you notice something wrong do suggest me in the comment box.&lt;br&gt;
Do give it a like if it helped you understanding the concept.&lt;/p&gt;

</description>
      <category>react</category>
      <category>declarative</category>
      <category>imperative</category>
      <category>javascript</category>
    </item>
    <item>
      <title>4 Habits For Better Life</title>
      <author>Ayush antiwal</author>
      <pubDate>Tue, 25 May 2021 12:11:06 +0000</pubDate>
      <link>https://dev.to/antiwalayush/4-habits-for-better-life-8h9</link>
      <guid>https://dev.to/antiwalayush/4-habits-for-better-life-8h9</guid>
      <description>&lt;h3&gt;
  &lt;a href="#habit-1-never-stop-learning"&gt;
  &lt;/a&gt;
  Habit 1 : Never Stop Learning
&lt;/h3&gt;

&lt;p&gt;Donât get confused between what people say you are and who you &lt;br&gt;
know you are. - Unknown&lt;br&gt;
The people who stop learning are the ones who remain mediocre and poor in life. Never stop learning no matter what age are you in because the ones who stop learning will never grows in life. Be a student of your calling learn something everyday in your calling and start taking action on it because knowledge is not enough you must take action to achieve something. &lt;a href="https://summarylover.com/2020/07/as-a-man-thinketh-summary.html"&gt;Develop growth mindset&lt;/a&gt; within yourself the people with growth mindset always try to learn from everywhere like from failure or from another successful people. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#habit-2-think-big"&gt;
  &lt;/a&gt;
  Habit 2 : Think Big
&lt;/h3&gt;

&lt;p&gt;If you see someone without a smile give them yours. â Dolly Parton&lt;br&gt;
Think big it does not matter how big dreams you have what matter is what are you willing to sacrifice for achieving your dreams. In real world people are not measure by how many dreams they have what matters is how big their dream are. Think big enough you have to think anyway why not think big so in the end you feel proud of yourself. Start thinking big don't settle for small life make your life a inspiring story which people will admire and get inspiration from your life. Think big start small fail early and achieve greatly. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#habit-3-vision"&gt;
  &lt;/a&gt;
  Habit 3 : Vision
&lt;/h3&gt;

&lt;p&gt;If you want to fly give up everything that weigh you down. - Buddha&lt;br&gt;
Be a visionary person the person who think in future the person who invent things and change the world with their ideas. The people Like Mark Zuckerberg and Larry page are visionary people because they think in future they always try to innovate with their crazy ideas and change the world. &lt;br&gt;
As Mahatma Gandhi Said " Be the change you wish to see in the world". If your dream is to become an entrepreneur they you definitely need the habit of thinking in future because successful entrepreneur are the ones who change the world and solve real world problem with their crazy Ideas.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#habit-4-focus"&gt;
  &lt;/a&gt;
  Habit 4 : Focus
&lt;/h3&gt;

&lt;p&gt;You are what you do not what you say you will do. - Unknown&lt;br&gt;
Be a focused person the person who remain focused on her goals no matter what happening around him. If you want to achieve great things in your life you need focus because when you focused on your goals you will get more &lt;a href="https://summarylover.com/2020/11/the-dip-summary.html"&gt;creative ideas&lt;/a&gt; about the things you want to accomplish. Focus does not means what to focus on focus means elimination for the things you want to focus on. &lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Js fundementals</title>
      <author> </author>
      <pubDate>Tue, 25 May 2021 11:48:40 +0000</pubDate>
      <link>https://dev.to/front_end_shifu_2022/js-fundementals-4j58</link>
      <guid>https://dev.to/front_end_shifu_2022/js-fundementals-4j58</guid>
      <description>&lt;p&gt;Tips:&lt;br&gt;
&lt;strong&gt;&lt;em&gt;primitive data type:&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
assigning to primitive data type any changes are  made directly to that value.&lt;br&gt;
&lt;strong&gt;&lt;em&gt;non-primitive data-type:&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
assigning non-primitive value to variable is done by reference ,so any changes will  affect all the references.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Difference between undefined and null:&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
both represent no value&lt;br&gt;
undefined : javascript cant find value for this.&lt;br&gt;
null: Programmer set the values.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;let number1 = undefined-20; //undefined to NAN&lt;br&gt;
console.log(number1);//NaN&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;let number2 = 20 + null; ///null to 0&lt;br&gt;
console.log(number2);//20&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;strings:&lt;/strong&gt;&lt;br&gt;
 There are three types of strings&lt;br&gt;
1) double quotes:"Hello"&lt;br&gt;
2) single quotes:'Hello'&lt;br&gt;
3) backticks:`Hello'&lt;/p&gt;

&lt;p&gt;double quotes and single quotes are simple quotes.There's practically no difference between them in javascript.&lt;br&gt;
example:&lt;br&gt;
&lt;em&gt;console.log('my name is "john".');&lt;br&gt;
console.log("my name is 'john'.");&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;backticks are "extended functionality quotes. They allow us to include variable and expression into string by wrapping it in ${...}.&lt;br&gt;
for example;&lt;br&gt;
&lt;em&gt;let name="scolfield";&lt;br&gt;
console.log(&lt;code&gt;your name is ${name}&lt;/code&gt;)&lt;/em&gt;&lt;br&gt;
Thanks for reading.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 10 Programming Languages to Choose in 2021</title>
      <author>John Selawsky</author>
      <pubDate>Tue, 25 May 2021 11:43:51 +0000</pubDate>
      <link>https://dev.to/selawsky/top-10-programming-languages-to-choose-in-2021-4gaj</link>
      <guid>https://dev.to/selawsky/top-10-programming-languages-to-choose-in-2021-4gaj</guid>
      <description>&lt;p&gt;When you only take your first steps into the technologies and strive to learn programming itâs kind of hard to figure out where to go. With the number of possible programming languages to learn reaching over three hundred, newbies might feel pretty gloomy about making the right choice. Let me ease that for you. Iâve been coding and teaching programming for quite a while now and I hope my experience will help you out. Here are my top ten best programming languages to learn first. Start from here, choose your path and get yourself on the road to your dream job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h2&gt;

&lt;p&gt;This is my personal number one. And there are plenty of reasons for it. Firstly, the demand for Java developers is never-ending. This is the technology behind enterprise-level applications used by the worldâs top-notch companies. If you ever thought of working for, letâs say, Amazon, then Java is your thing. Secondly, itâs quite easy to learn for a newbie. And later, based on your Java knowledge, you can add up new languages like C++ or Python. And did I mention that Android development is also majorly based on Java? If not, then now you know.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://codegym.cc/"&gt;CodeGym&lt;/a&gt;. This is a gamified learning platform that helps you go through levels of Java mastery both with fun and an in-depth look. The course has over 1200 practical coding tasks with code validation and tips to help you with your solutions. So primarily you learn by doing, not just reading theory. A built-in IDE gives you an option to code from your smartphone which is quite handy if you only have spare time somewhere away from your laptop. However, your best bet is to use the IntelliJ IDEA. It is by far the most popular Java development environment; For this purpose, CodeGym has a special IDEA plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.pluralsight.com/courses/java-fundamentals-language"&gt;Java Fundamentals by Pluralsight&lt;/a&gt;. This course has a strong design patterns section which is often skipped by other learning platforms. Here youâll get it right with the basic objective-oriented programming concepts and learn to apply them to your coding.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codecademy.com/learn/learn-java"&gt;Codecademy&lt;/a&gt;. This is a greatly structured educational resource. You can make your own curriculum or ask someone from the community to review your code. And there are high chances to get detailed feedback.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h2&gt;

&lt;p&gt;This language is the choice to make if youâre aiming at becoming a Data Scientist or a backend website developer. Moreover, Python is widely used in GUI applications. It has a perfect toolset for these types of projects.&lt;/p&gt;

&lt;p&gt;Also, itâs one of the easiest languages to start with. Though after Python you might find it hard to switch to a more complicated programming language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.learnpython.org/"&gt;Learnpython&lt;/a&gt;. The platform offers neatly structured courses covering both basic and advanced levels. Also, it has over 500K community members so you can only imagine what thorough feedback you might receive if you ask for help.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://learncodethehardway.org/python/"&gt;Learn Python the Hard Way&lt;/a&gt;. The coolest thing about this resource is that you can start here with zero previous programming experience. Though the title of the course states otherwise, the essence of it is pretty easily digestible. At least in the beginning.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://inventwithpython.com/"&gt;Invent with Python&lt;/a&gt;. You might wonder what you can invent with Python if you have no clue about the technology itself. Well, hereâs the trick: first you learn the basics and do exercises to gain practical skills. And then you can actually create your own computer game!&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;p&gt;JavaScript is a language that allows you to do complex things on a web page. Every time the web page has more than just a static view, like updated content, animations, video scrolling, etc., it is most likely done with JavaScript. There would have been no modern web without this one. JS code is executed in a web browser.&lt;/p&gt;

&lt;p&gt;JavaScript is used not only for front-end (in browser), but sometimes also in back-end development (via nodeJS platform). By the way, now people very often choose to learn TypeScript, a strict syntactical superset of JavaScript. Both are newbie-friendly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/"&gt;FreeCodeCamp.org&lt;/a&gt;. As you can see from the title, this learning resource is free. But this is not its best feature. I value it for the enormous variety of tutorials and options to train your skills. As well as for a wider look at the JavaScript within the front-end development.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://codecombat.com/"&gt;CodeCombat&lt;/a&gt;. This one is good for the very beginners in programming. You can learn the basics and play a game at the same time.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.pluralsight.com/codeschool"&gt;Code School&lt;/a&gt;. I like this one for a great jQuery tutorial. But the core JavaScript course is also very well-worked. Itâs also gamified like the previous one. You can move from level to level, get signs of approval and generally have fun.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#cc"&gt;
  &lt;/a&gt;
  C/C++
&lt;/h2&gt;

&lt;p&gt;Though not the easiest programming language to learn for a newbie, C++ has many areas where itâs almost indispensable. Some of the operating systems are created with this programming language. You can find it in web browsers, distributing systems, database software, triple-A videogames and many more.&lt;/p&gt;

&lt;p&gt;C is a general-purpose procedural programming language. C is closely related to hardware. This allows data and system programming to be managed at a low level. You can use it not only to create âregularâ software, but also to create driver or kernel level programs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/free-learn-c-tutorial-beginners/"&gt;C++ Tutorial for Complete Beginners&lt;/a&gt;. Hereâs where you can start learning the technology and the concepts of object-oriented programming from square one. Youâll find out how the syntax works and how to set up the development environment.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/beginning-c-plus-plus-programming/"&gt;Beginning C++ Programming â From Beginner to Beyond&lt;/a&gt;. This is one more opportunity to learn C from distinguished tutors. The course is highly valued by the students and has very high ranks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/unrealcourse/"&gt;Unreal Engine C++ Developer: Learn C++ and Make Video Games&lt;/a&gt;. As you can see from the title, this course teaches you C++ basics in game development. If youâve ever come across cybersport and heard about Fortnite, this is a great example of a game developed with C++.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#c-sharp"&gt;
  &lt;/a&gt;
  C Sharp
&lt;/h2&gt;

&lt;p&gt;Though belonging to the C family, this language is a bit different from the previous. C# runs in a virtual machine and is very similar in principle to Java.&lt;/p&gt;

&lt;p&gt;C# was created by Microsoft and established itself as a number one technology from Windows or .NET development. Moreover, the language is used in the Unity game engine that opens the way to 2D or 3D game development. Semi-complicated for a newbie.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://teamtreehouse.com/library/c-basics-2"&gt;C# Basics by Treehouse&lt;/a&gt;. Itâs a 188-minute course covering the basics of C#: syntax, types, strings, variables, etc. Youâll learn how to make your first program, compile mistakes, and much more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/csharp-tutorial-for-beginners/"&gt;C# Basics for Beginners: Learn C# Fundamentals by Coding&lt;/a&gt;. This one gives you a chance to learn major C# concepts concisely and clearly. The course creator states that it will take you 6 hours. But I think itâll take more. If youâre through with this one, you can move on to more advanced courses by the same tutor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.pluralsight.com/courses/csharp-fundamentals-dev"&gt;C# Fundamentals by Scott Allen (Pluralsight)&lt;/a&gt;. The course is divided into .NET concepts and tips of using C# code for creating your own applications.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#golang"&gt;
  &lt;/a&gt;
  Golang
&lt;/h2&gt;

&lt;p&gt;Also referred to as Go, the language was created by Google and is gradually becoming more and more popular. It allows a greater degree of multithreading than is considered average. Some of the very widely used DevOps tools have already evaluated the performance of this technology. It is modern and quite suitable for beginner developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/go-the-complete-developers-guide/"&gt;Go: The Complete Developerâs Guide (Golang)&lt;/a&gt;. Apart from learning the fundamentals the course is aimed at giving a broader notion of Goâs concurrency model. It is neatly structured and easy to follow.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.pluralsight.com/courses/go-fundamentals"&gt;Go Fundamentals By Nigel Poulton&lt;/a&gt;. If you have zero programming experience this one might be a good option. Youâll start from the very beginning and learn to write your first Go programs eventually.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codecademy.com/learn/learn-go"&gt;Learn Go on Codecademy&lt;/a&gt;. Iâve already mentioned the resource in my Java section. Codecademy is a way to go for Go as well. The course is created together with Google, so the information there is definitely up-to-date.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#r-language"&gt;
  &lt;/a&gt;
  R language
&lt;/h2&gt;

&lt;p&gt;If you are into Data Analytics you might want to have a look at this technology â the R programming language. It is a free technology for statistical computing and itâs running on multiple operating systems. The language might be somewhat hard for a beginner. But it has great perspectives on the job market. By the way, the most recent R update came out in February 2021, check it out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/r-programming/"&gt;R Programming A-Zâ¢&lt;/a&gt;. R For Data Science With Real Exercises! The course teaches you how to combine programming and statistics. And how to use all that in real life then.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/data-science-and-machine-learning-bootcamp-with-r/"&gt;Data Science and Machine Learning Bootcamp with R&lt;/a&gt;. I like this one for the stunning data visualizations youâll be able to make. The course also goes deeper on how to deal with Machine Learning using the R language.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.coursera.org/learn/r-programming"&gt;R Programming&lt;/a&gt;. This is a more classically built course on R. It goes through the basic operations and concepts to more complicated things like data simulation. Youâll also learn how to write and debug your R code.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h2&gt;

&lt;p&gt;This is another popular programming language for backend web development. Huge companies like Facebook or Wikipedia are still using it. And if you turn to WordPress, knowing which is in very high demand on the job market, you will see PHP there as well. On the other hand though, PHP back-end developers might have less money than back-end devs using more sophisticated and modern technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://freetutsdownload.com/php-for-beginners-become-a-php-master/"&gt;PHP for Beginners â Become a PHP Master â CMS Project&lt;/a&gt;. This course is aimed at giving you the skill to create your next CMS like WordPress. Itâs coined for the complete beginners but you might want to have a look at HTML first.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/php-mvc-from-scratch/"&gt;Write PHP Like a Pro: Build a PHP MVC Framework from Scratch&lt;/a&gt;. This one is not exactly for the newbies. But itâs here where you can learn how to use PHP frameworks like Symfony or Laravel. This course is very much worth trying especially if you already have a certain knowledge of PHP for example from the previous course. Or from the next one.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/oop-php-object-oriented-programing-with-project-1-course/"&gt;PHP OOP: Object-Oriented Programming for beginners&lt;/a&gt;. Hereâs where you can dive into the OOP concepts by the example of PHP. The course is good for beginners and the tutor is a great instructor, in my opinion.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#swift"&gt;
  &lt;/a&gt;
  Swift
&lt;/h2&gt;

&lt;p&gt;If your dream is to publish your apps in the AppStore, hereâs where you turn to start. Swift is an iOS programming language, created by Apple itself. Itâs the modern successor to Objective-C and itâs a good choice for the newbie, Apple fan. So all the future AppStore conquerors go right here, to the places where you can learn this language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/coreml-course-for-everyone/"&gt;Complete iOS 14, Swift 5 and Machine Learning with CoreML&lt;/a&gt;. This course does not require any prior experience and itâs built around basic topics first of all. The course creator promises to dispense with useless coding practices and get you into real-world coding. And I see no reason to doubt that.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/swiftui-masterclass-course-ios-development-with-swift/"&gt;SwiftUI Masterclass 2021 â iOS 14 App Development &amp;amp; Swift 5&lt;/a&gt;. The updated version of the masterclass contains around 23 hours of video. It takes you through the basics to a more advanced level and teaches you all the essential skills you need to start creating your own projects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/cracking-coding-interview-algorithm-design-in-swift-2020/"&gt;Cracking Coding Interview &amp;amp; Algorithm Design in Swift (2021)&lt;/a&gt;. This course will teach you not only coding in Swift but also how to explain your technical decisions at a job interview. A very handy skill for a beginner programmer, isnât it?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#kotlin"&gt;
  &lt;/a&gt;
  Kotlin
&lt;/h2&gt;

&lt;p&gt;This one unlike the previous is number one for the conquerors of Google Play. Kotlin was named by Google as a primary technology for Android development. Note that it is being executed on Java Virtual Machine and the language is not that easy for people making their first steps into programming. Iâd recommend learning Java first and then switching to Kotlin.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to learn
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/kotlin-for-java-developers/"&gt;Kotlin for Java Developers&lt;/a&gt;. As you see from the title of the course itâs not only me who thinks that Java should go first. But for those who want to upgrade mobile development skills, this is a place to go. The course is designed to explain the two languages in comparison so that you learn Kotlin faster based on the knowledge you already have.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/the-complete-kotlin-developer-course-java/"&gt;The Complete Kotlin Developer Course&lt;/a&gt;. This is a more comprehensive resource for learning Kotlin. Again, it has a part explaining how Kotlin and Java are related. Youâll learn the essentials of programming and the way they work in this technology.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/kotlin-course/"&gt;Kotlin for Beginners: Learn Programming With Kotlin&lt;/a&gt;. If you still think of skipping Java and jump right into mobile development, try out this course. It teaches you starting with the very basics and by the end, youâll create your first Kotlin app.
## Wrap Up
Now that weâve narrowed down your choice to the ten most popular programming languages itâs time for you to take action. Whichever you pot for, thereâs a pretty high chance of success. The job market is thriving thanks to these technologies and it seems like it will continue to thrive in the coming years. So make your choice and start to learn programming!&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>java</category>
      <category>python</category>
      <category>javascript</category>
      <category>kotlin</category>
    </item>
  </channel>
</rss>
