<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>🎊 You don't need SVG! Creating animated loaders for content with Tailwind CSS</title>
      <author>Vic Shóstak</author>
      <pubDate>Mon, 08 Nov 2021 08:01:25 +0000</pubDate>
      <link>https://dev.to/koddr/you-dont-need-svg-creating-animated-loaders-for-content-with-tailwind-css-2cf0</link>
      <guid>https://dev.to/koddr/you-dont-need-svg-creating-animated-loaders-for-content-with-tailwind-css-2cf0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hi, DEV friends! 😁&lt;/p&gt;

&lt;p&gt;Today we'll talk about how to improve the UX of your project by several times by implementing just a content loader in the right format.&lt;/p&gt;

&lt;p&gt;It's not some kind of SVG or JavaScript “magic”, it's just pure HTML, Tailwind CSS built-in classes and some gradient colors.&lt;/p&gt;

&lt;p&gt;Here we go! 🚀&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-main-advantage"&gt;The main advantage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#explanations-of-the-code"&gt;Explanations of the code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a-simple-content-loader"&gt;A simple content loader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#loader-for-the-card-in-the-list"&gt;Loader for the card in the list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-main-advantage"&gt;
  &lt;/a&gt;
  The main advantage
&lt;/h2&gt;

&lt;p&gt;As you have already guessed from the title, this is a purely CSS solution using the &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; &lt;code&gt;v2.2.x&lt;/code&gt; framework. And the main advantage of this approach is that in fact it is just plain HTML and CSS, which is loaded very first in the user's browser. &lt;/p&gt;

&lt;p&gt;There's no “jagged” user experience (UX), where they first see a blank page, then a JavaScript or SVG loader flashes and content shown immediately.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🔥 &lt;strong&gt;Attention!&lt;/strong&gt; UX improvement works should be the &lt;strong&gt;highest priority&lt;/strong&gt; for every frontend developer! Especially when customer loyalty to the business and the brand as a whole depends on it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explanations-of-the-code"&gt;
  &lt;/a&gt;
  Explanations of the code
&lt;/h2&gt;

&lt;p&gt;In order not to dwell later on the explanation of some general points in the code, I decided to tell at once about the classes that will be used in the layout of the loaders.&lt;/p&gt;

&lt;p&gt;The first of these is the gradient class itself &lt;code&gt;.gradient-purple-pink-red&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* ./src/assets/css/tailwind.css */&lt;/span&gt;

&lt;span class="c"&gt;/* ... */&lt;/span&gt;

&lt;span class="k"&gt;@layer&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c"&gt;/* Gradient color */&lt;/span&gt;
  &lt;span class="nc"&gt;.gradient-purple-pink-red&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;bg-gradient-to-r;&lt;/span&gt;
    &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;from-purple-400&lt;/span&gt; &lt;span class="err"&gt;via-pink-500&lt;/span&gt; &lt;span class="err"&gt;to-red-500;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c"&gt;/* ... */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm used to defining groups of properties, like colors or gradients, in the &lt;code&gt;@layer utilities {}&lt;/code&gt; layer. E.g., “&lt;em&gt;I add a utility to change the color of an element&lt;/em&gt;”. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;😉 &lt;strong&gt;By the way!&lt;/strong&gt; It would be interesting to read in the comments how you work with &lt;code&gt;@layer&lt;/code&gt; and &lt;code&gt;@apply&lt;/code&gt; in your Tailwind CSS projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Okay. Let's take a closer look at all the properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;bg-gradient-to-{direction}&lt;/code&gt; this property indicates the direction of the gradient (in our case &lt;code&gt;r&lt;/code&gt; equals to &lt;code&gt;right&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;from-{color}&lt;/code&gt; this property indicates the first (&lt;em&gt;start&lt;/em&gt;) color of the gradient (in our case &lt;code&gt;purple&lt;/code&gt; with weight &lt;code&gt;400&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;via-{color}&lt;/code&gt; this property indicates the second (&lt;em&gt;middle&lt;/em&gt;) color of the gradient (in our case &lt;code&gt;pink&lt;/code&gt; with weight &lt;code&gt;500&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;to-{color}&lt;/code&gt; this property indicates the third (&lt;em&gt;end&lt;/em&gt;) color of the gradient (in our case &lt;code&gt;red&lt;/code&gt; with weight &lt;code&gt;500&lt;/code&gt;);&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second class I would like to show is &lt;code&gt;.animate-pulse&lt;/code&gt; (which is a standard Tailwind &lt;a href="https://tailwindcss.com/docs/animation#pulse"&gt;class&lt;/a&gt;). Just this class does the magic animation that turns a simple gradient background into a loader:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Animation keyframe */&lt;/span&gt;
&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;pulse&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Class for element with animation */&lt;/span&gt;
&lt;span class="nc"&gt;.animate-pulse&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulse&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-simple-content-loader"&gt;
  &lt;/a&gt;
  A simple content loader
&lt;/h2&gt;

&lt;p&gt;The most common loader you'll find on websites is a &lt;strong&gt;content loader&lt;/strong&gt;. It is usually enabled after navigating to a page that has not yet pulled content from the backend.&lt;/p&gt;

&lt;p&gt;A good UX is to show the loader in full compliance with the structure of the content to be loaded. Thus, the user does not have the feeling that &lt;em&gt;he got somewhere wrong&lt;/em&gt;. He will have a visual placeholder instead of content that will be displayed to him in a couple of moments.&lt;/p&gt;

&lt;p&gt;The final version of our loader will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1CjVNW-S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rk7j1rkl77donv0t2ff9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1CjVNW-S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rk7j1rkl77donv0t2ff9.gif" alt="content loader" width="600" height="218"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It seems simple, right? Lines are just &lt;code&gt;div&lt;/code&gt; containers with a given height and width… But how do you make a circular element without SVG? Easy! Add any block element symmetric dimensions and the built-in &lt;code&gt;.rounded-full&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;Now let's put it all together and build the content loader:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🎯 &lt;strong&gt;Note:&lt;/strong&gt; Please follow comments in the code!&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animate-pulse"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- First line heading --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-8 h-4 gradient-purple-pink-red rounded-full w-4/5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Text block 1 --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-3 gradient-purple-pink-red rounded-full w-4/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-3 gradient-purple-pink-red rounded-full w-3/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-3 gradient-purple-pink-red rounded-full w-2/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Text block 2 --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-3 gradient-purple-pink-red rounded-full w-5/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-3 gradient-purple-pink-red rounded-full w-4/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-3 gradient-purple-pink-red rounded-full w-2/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- User card (avatar + username) --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-6 flex items-center space-x-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-10 w-10 gradient-purple-pink-red rounded-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 gradient-purple-pink-red rounded-full w-1/12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 gradient-purple-pink-red rounded-full w-1/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Post data --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-6 h-3 gradient-purple-pink-red rounded-full w-1/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;📺 Live demo: &lt;a href="https://play.tailwindcss.com/a7Pp2l65hF"&gt;https://play.tailwindcss.com/a7Pp2l65hF&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This example illustrates perfectly how simple and flexible it is to customize the loader to your needs. To consolidate the material, let's look at the following loader.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#loader-for-the-card-in-the-list"&gt;
  &lt;/a&gt;
  Loader for the card in the list
&lt;/h2&gt;

&lt;p&gt;Let's move on. Another kind of uploader you've seen, for example, when scrolling through your Instagram feed or your favorite social network. &lt;/p&gt;

&lt;p&gt;Such techniques help high-loaded web services improve the user experience while the data in the feed is being loaded.&lt;/p&gt;

&lt;p&gt;Let's take the feed from the projects on some web service as an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Pqalimc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85v4twhnd7kuyuahyl2i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Pqalimc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85v4twhnd7kuyuahyl2i.gif" alt="card loader" width="540" height="315"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This loader looks maximally organic and doesn't make you want to close the page, does it? This is achieved because the loader almost exactly repeats the content of the card (&lt;em&gt;we talked about this earlier&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;All right, let's implement this loader:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animate-pulse"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Head line --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gradient-purple-pink-red h-6 rounded-t-3xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-4 px-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- User card (avatar + username) --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center space-x-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-7 w-7 gradient-purple-pink-red rounded-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 gradient-purple-pink-red rounded-full w-1/3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Text block --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Heading --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-5 gradient-purple-pink-red rounded-full w-3/4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Description --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-2 gradient-purple-pink-red rounded-full w-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-2 gradient-purple-pink-red rounded-full w-5/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-2 gradient-purple-pink-red rounded-full w-4/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-2 gradient-purple-pink-red rounded-full w-5/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-2 gradient-purple-pink-red rounded-full w-3/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-2 gradient-purple-pink-red rounded-full w-2/6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Button --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-11 gradient-purple-pink-red rounded-lg w-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Post data + time --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-3 my-4 mx-auto gradient-purple-pink-red rounded-full w-1/2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;📺 Live demo: &lt;a href="https://play.tailwindcss.com/msRdcHcKne"&gt;https://play.tailwindcss.com/msRdcHcKne&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again there is nothing complicated, thanks to the built-in Tailwind CSS classes, we can do any block variations in a matter of seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Use your forms and styles for the loader to improve the UX of your project. It's simple, but believe me (&lt;em&gt;in my 12+ years of the practical experience&lt;/em&gt;), will bring a lot of positive feedback.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Share your loaders through the &lt;a href="https://play.tailwindcss.com/"&gt;Tailwind Play&lt;/a&gt; service in the comments!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;And think of the users first!&lt;/strong&gt; 👍&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vic Shóstak &lt;a href="https://shostak.dev"&gt;https://shostak.dev&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! 😘&lt;/p&gt;

&lt;p&gt;And, of course, you can support me by donating at &lt;a href="https://liberapay.com/koddr/donate"&gt;LiberaPay&lt;/a&gt;. &lt;em&gt;Each donation will be used to write new articles and develop non-profit open-source projects for the community.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://liberapay.com/koddr/donate"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qrXDZTNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zq8442cqyjq2i1jdeay8.png" alt="Support author at LiberaPay" width="424" height="104"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>css</category>
      <category>html</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>AWS open source news and updates #89</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 08 Nov 2021 07:58:16 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-89-2d9m</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-89-2d9m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#november-8th-2021-instalment-89"&gt;
  &lt;/a&gt;
  November 8th, 2021 - Instalment #89
&lt;/h2&gt;

&lt;p&gt;Newsletter #89.&lt;/p&gt;

&lt;p&gt;This week we have another selection of great new projects for you to take a look at. Kicking things off with the latest open source project from Airbnb, ottr, a Public Key Infrastructure framework that handles end-to-end certificate rotations, the other projects include cloudkey, clock-bound, aws-recon, cdk-dia and more. Make sure you check these out.&lt;/p&gt;

&lt;p&gt;As always, we have a wide selection of new blog posts from the AWS and Community bloggers covering topics from Alphafold, BayerCLAW, and Babelfish to OpenSearch, AWS CDK, ffmpeg, Amazon Corretto, Spring Boot, Bottlerocket, Synk, MariaDB and GitHub actions. &lt;/p&gt;

&lt;p&gt;To finish things off we have a new video covering Suricata on AWS, as well as a new event coming up later this week which you still have time to sign up for.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Qi Wang, Tom Roshko, Christos Matskas, Vadivelu Murali Pranavan, Kenneth Yang, Danny Gitelman, Daniel Begimher, Afza Wajid, Sudhir Reddy Maddulapally, Alexey Vorovich, Jesse Butler, Damien Martins, Masahiro Imai, Hidenori Koizumi, Jorge Lanzarotti, Ramesh Kumar Venkatraman, Dave Currie, Frank Dallezotte, Maxwell Moon, Jack Tabaska, Ian Davis, Jani Muuriaisniemi, Jose Juhala, Vacha Shah, Sarat Vemulapalli, Irshad Buchh and Yang Xiao.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community-noticeboard"&gt;
  &lt;/a&gt;
  Community noticeboard
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Hackathon winners&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Great news from Vadivelu Murali Pranavan last week, where he shared the following updated:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I'm happy to share with you that myself along with my peers Sanjay Thiyagarajan, Naresh Kumar, Jayanth Vikash S, Xavier Emmanuel and Sri Varmaa won the first place in Amazon Web Services (AWS) Graviton Hackathon 2021 in Migration track. Check out the project they created, &lt;a href="https://aws-oss.beachgeek.co.uk/12a"&gt;Genie&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ottr&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/12d"&gt;ottr&lt;/a&gt; this is the latest open source project from Airbnb engineering, Ottr. Ottr is a serverless Public Key Infrastructure framework that handles end-to-end certificate rotations without the use of an agent. You can check out the super detailed blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/12e"&gt;Meet Ottr: A Serverless Public Key Infrastructure Framework&lt;/a&gt; from  Kenneth Yang provides an overview on Ottr with details of the architecture, logical and network flows and details on how to deploy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zznKrp99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AyUXlXD6mzsLGmMEgAGeIhQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zznKrp99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AyUXlXD6mzsLGmMEgAGeIhQ.png" alt="arch" width="880" height="616"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cloudkey&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/12p"&gt;cloudkey&lt;/a&gt; this project from Aidan Steele is perfect if you have a Yubikey and want to use it to assume IAM roles to interact with AWS. As Aidan says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"I could create certificates on the Yubikey, enrol them into AWS IoT (for free) and assume roles in AWS with no IAM secret access keys stored on disk."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Worth checking out Aidan's &lt;a href="https://aws-oss.beachgeek.co.uk/12q"&gt;thread on twitter, here&lt;/a&gt; for more context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;clock-bound&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/12b"&gt;clock-bound&lt;/a&gt; this new project provides you with a consistent, trusted time service will allow you to compare timestamps to determine order and consistency for events and transactions, independent from the instances’ respective geographic locations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n5qJi7S2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws/clock-bound/blob/main/ClockErrorBound.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n5qJi7S2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws/clock-bound/blob/main/ClockErrorBound.png%3Fraw%3Dtrue" alt="diagram" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-recon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/12h"&gt;aws-recon&lt;/a&gt; this project from Darkbit is a multi-threaded AWS security-focused inventory collection tool written in Ruby, and was created to facilitate efficient collection of a large amount of AWS resource attributes and metadata. It aims to collect nearly everything that is relevant to the security configuration and posture of an AWS environment. It is being used by some interesting customers, so well worth checking this out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cdk-dia&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/12i"&gt;cdk-dia&lt;/a&gt; this project from Tom Roshko looks super neat, it diagrams your CDK provisioned infrastructure using the Graphviz dot language. After getting Graphviz running on my Macbook (thanks Mac Ports) I tried it on one of my projects, and here is the output. What do you think? A great start, so it will be interesting to see how this project evolves and develops. Nice work Tom!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v7vdqoWV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ricsuepublicresources.s3.eu-west-1.amazonaws.com/images/diagram.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v7vdqoWV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ricsuepublicresources.s3.eu-west-1.amazonaws.com/images/diagram.png" alt="demo" width="880" height="815"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-cdk-github-oidc&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/12j"&gt;aws-cdk-github-oidc&lt;/a&gt; is a CDK constructs to use OpenID Connect for authenticating your Github Action workflow with AWS IAM. These constructs allows you to harden your AWS deployment security by removing the need to create long-term access keys for Github Actions and instead use OpenID Connect to Authenticate your Github Action workflow with AWS IAM.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bVWa7M8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/aripalo/aws-cdk-github-oidc/4eb53714ec69583f057141afab57c6c2cd7dae0b/assets/github-aws-oidc.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bVWa7M8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/aripalo/aws-cdk-github-oidc/4eb53714ec69583f057141afab57c6c2cd7dae0b/assets/github-aws-oidc.svg" alt="arch" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check out last weeks newsletter where Richard Boyd shows you using this new capability of GitHub Actions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;fiware-orion-on-aws&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/125"&gt;fiware-orion-on-aws&lt;/a&gt; FIWARE is a curated framework of open source platform components to help with the development of smart applications and solutions. This repository is a reference implementation of one of those components, the Orion Context Broker which uses another component in that project, Cygnus. To help you get started, check out the blog post &lt;a href="https://aws-oss.beachgeek.co.uk/124"&gt;How to build smart cities with FIWARE Orion Context Broker and Cygnus on AWS&lt;/a&gt;from Masahiro Imai, Hidenori Koizumi, and Jorge Lanzarotti&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y5Urrv61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/11/02/orion-cygnus-onaws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y5Urrv61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/11/02/orion-cygnus-onaws.png" alt="arch" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Retro corner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks to Corey Quin for highlighting this tool I had missed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-key-disabler&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/129"&gt;aws-key-disabler&lt;/a&gt; this open source project is a small lambda script that will disable access keys older than a given amount of days. Small but perfectly formed, I think this is a great solution if you find yourself needing to automate the vending of your keys.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tweet-of-the-week"&gt;
  &lt;/a&gt;
  Tweet of the week
&lt;/h3&gt;

&lt;p&gt;This &lt;a href="https://aws-oss.beachgeek.co.uk/11y"&gt;tweet&lt;/a&gt; from Christos Matskas (&lt;a class="mentioned-user" href="https://dev.to/christosmatskas"&gt;@christosmatskas&lt;/a&gt;
) came up on my timeline last week, where he shared how he was able to use the open sourced NodeJS library for verifying JWTs that I shared in the last episode, and verify AAD access tokens from Azure Active Directory. He also shared the code, which you can check out at &lt;a href="https://aws-oss.beachgeek.co.uk/11z"&gt;here&lt;/a&gt;. Christos also put this post together, &lt;a href="https://aws-oss.beachgeek.co.uk/120"&gt;Open Standards, Security, Azure AD and AWS&lt;/a&gt; which shows you the end to end story. Nice!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Building Software as a Service (SaaS) is an increasingly popular approach for open source projects to provide customers with immediate access to their capabilities. There are several approaches you can take, but being able to well and ensure a good experience during on boarding, you need to have a reliable, fast, and multi-region capable provisioning and software lifecycle management. In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/12k"&gt;Parallel and dynamic SaaS deployments with AWS CDK Pipelines&lt;/a&gt; Jani Muuriaisniemi and Jose Juhala describe a deployment system for achieving this using AWS CDK and AWS CDK Pipelines. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwU1rtFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2021/10/27/figure1-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwU1rtFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2021/10/27/figure1-1.png" alt="arch" width="880" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BayerCLAW&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I shared details of BayerCLAW in a previous newsletter (#86). BayerCLAW a workflow orchestration system for AWS, targeted at bioinformatics pipelines. Jack Tabaska and Ian Davis from the Bayer Crop Sciences team have put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/12f"&gt;BayerCLAW – Open-Source, Serverless Orchestrator for Scientific Workflows on AWS&lt;/a&gt; that takes a look at the motivations and technical implementation of BayerCLAW.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PvYDkbHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/c5b76da3e608d34edb07244cd9b875ee86906328/2021/10/27/bayer-figure-1-CLAW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PvYDkbHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/c5b76da3e608d34edb07244cd9b875ee86906328/2021/10/27/bayer-figure-1-CLAW.png" alt="arch" width="880" height="568"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AlphaFold&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AlphaFold is an artificial intelligence program developed by Alphabets's/Google's DeepMind which performs predictions of protein structure. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/12m"&gt;Run AlphaFold v2.0 on Amazon EC2&lt;/a&gt;, Qi Wang provides a step-by-step guide on how to install AlphaFold on an EC2 instance with Nvidia GPU.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdiCBIne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/10/25/ML_5671_3Dview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdiCBIne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/10/25/ML_5671_3Dview.png" alt="alpha" width="800" height="403"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Babelfish&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the post &lt;a href="https://aws-oss.beachgeek.co.uk/126"&gt;Migrate from SQL Server to Amazon Aurora using Babelfish&lt;/a&gt;, Ramesh Kumar Venkatraman provides and overview of how you can migrate from SQL Server to Babelfish for Aurora PostgreSQL. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UYImtU7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/11/04/DBBLOG-1441-image001-cropped.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UYImtU7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/11/04/DBBLOG-1441-image001-cropped.png" alt="arch" width="467" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Corretto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dave Currie shares details of the Amazon Corretto support roadmap in his post, &lt;a href="https://aws-oss.beachgeek.co.uk/127"&gt;Announcing Amazon Corretto 17 support roadmap&lt;/a&gt;. Make sure you read this short post and understand what this means for any workloads you have running Amazon Corretto 8 or 11.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/12o"&gt;Build and deploy a Spring Boot application to AWS App Runner with a CI/CD pipeline using Terraform&lt;/a&gt; is the perfect post if you want to learn about how to setup a really nice automated deployment pipeline for your Spring Boot applications on AWS. Irshad Buchh and Yang Xiao walk you through setting up a pipeline for automatic build and deployment onto AWS App Runner. Read on to find out more [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EiLOo3tM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/09/22/springbootapprunner1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EiLOo3tM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/09/22/springbootapprunner1.png" alt="arch" width="879" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bottlerocket&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jesse Butler opens this post up with the question “Does the OS even matter anymore?” - intrigued? Have your own opinion? Well find out what he thinks in the excellent post, &lt;a href="https://aws-oss.beachgeek.co.uk/123"&gt;Bottlerocket, A Year in the Life&lt;/a&gt; - (and I totally agree, for anyone interested!) [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWK944HV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/10/25/br_update.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWK944HV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/10/25/br_update.png" alt="arch" width="680" height="285"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Synk&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Danny Gitelman and Daniel Begimher share how to use tools like Synk in combination with an automated workflow to reduce the risk of downloading new packages from public repositories. Read more in their post, &lt;a href="https://aws-oss.beachgeek.co.uk/121"&gt;How to automate your software-composition analysis on AWS&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/b7eb6c689c037217079766fdb77c3bac3e51cb4c/2021/10/15/software-composition-analysis-architecture-diagram.jpg"&gt;arch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MariaDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SkySQL is a database as a service (DBaaS) solution on AWS that makes it easy for customers to start using MariaDB Enterprise in the cloud. In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/122"&gt;MariaDB Collaborates with AWS to Deliver SkySQL on AWS&lt;/a&gt; Afza Wajid and Sudhir Reddy Maddulapally speak with Alexey Vorovich, VP of Engineering for SkySQL at MariaDB Corporation, about the recent SkySQL launch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FFmpeg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Damien Martins shares with you a how-to guide describes the steps to invoke an automatic extraction of media asset metadata through ffprobe (part of the FFmpeg project) in his post, &lt;br&gt;
&lt;a href="https://aws.amazon.com/blogs/media/analyzing-media-files-using-ffprobe-in-aws-lambda/"&gt;Analyzing media files using ffprobe in AWS Lambda&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Actions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Frank Dallezotte and Maxwell Moon have collaborated on this post, &lt;a href="https://aws-oss.beachgeek.co.uk/128"&gt;Building ARM64 applications on AWS Graviton2 using the AWS CDK and Self-Hosted Runners for GitHub Actions&lt;/a&gt; where they show how to configure of a self-hosted GitHub Runner on an EC2 instance with a Graviton2 processor, the required network resources, and a workflow that will run on the Runner on each repository push or pull request for the example application. This will allow you to start to create multi architecture builds so that you can start leveraging Arm based AWS Graviton2 instances and the improved price/performance as well as power characteristics. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e-ZWWxjw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/25/0_Graviton2GHRunnerArchDrawing-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e-ZWWxjw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/25/0_Graviton2GHRunnerArchDrawing-1.png" alt="arch" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/12n"&gt;Backwards Compatibility Testing for OpenSearch&lt;/a&gt; Vacha Shah and Sarat Vemulapalli show you how backwards compatibility testing works within OpenSearch, something that is used to test and determine the safe upgrade paths from a supported version to the current version.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Amazon Time Sync Service&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Time Sync Service now allows you to easily generate and compare timestamps from Amazon EC2 instances with ClockBound, an open source daemon and library. This information is valuable to determine order and consistency for events and transactions across EC2 instances, independent from the instances’ respective geographic locations. ClockBound calculates your Amazon EC2 instance’s clock error bound to measure its clock accuracy and allows you to check if a given timestamp is in the past or future with respect to your instance’s current clock. On every call, ClockBound simultaneously returns two pieces of information: the current time and the associated absolute error range. This means that the actual time of a ClockBound timestamp is within a set range.&lt;/p&gt;

&lt;p&gt;To get started, first make sure you are using Chrony. Then install the ClockBound daemon and library, or build your own library to integrate ClockBound into your application. For the best clock accuracy, we also recommend using the Amazon Time Sync Service. The Amazon Time Sync Service and Chrony are configured by default on Amazon Linux 2 instances.&lt;/p&gt;

&lt;p&gt;Check out the code repo at the top of this post.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#video-of-the-week"&gt;
  &lt;/a&gt;
  Video of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Suricata&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nick Coval &amp;amp; Adam Palmer presented "&lt;a href="https://aws-oss.beachgeek.co.uk/12l"&gt;Building an Open Source IDS/IPS Service on AWS with Suricata&lt;/a&gt;" at SuriCon, where they talk about how they built a quick-start solution on AWS that creates a Suricata-based solution, powered by AWS Gateway Load Balancer service (GWLB); enabling centralized and distributed deployment models.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2itI5zgXDP4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;MLOps: End-to-End Hugging Face Transformers with the Hub &amp;amp; SageMaker Pipelines&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;November 10th 2021 - 6:00 PM (GMT)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Later this week, we have this workshop where you will learn how to build an End-to-End MLOps Pipeline for Hugging Face Transformers from training to production using Amazon SageMaker. Join the always amazing Julien Simon, together with Matteu Desve and Phillip Schmid for this webinar. &lt;a href="https://aws-oss.beachgeek.co.uk/12g"&gt;Read more and register here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Databricks | AWS Lakehouse Dev Day Live Workshop&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;November 16th 9:00 AM PT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Delta Lake is an open source storage layer that provides ACID transactions, scalable metadata handling, and unifies streaming and batch data processing. You can use Delta Lake on top of your existing data lake. During this workshop you will learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make your existing Amazon S3 data lakes into a lakehouse with Delta Lake.
&lt;/li&gt;
&lt;li&gt;Provide an easy-to-use platform for analysts to directly query data on your data lake using SQL Analytics&lt;/li&gt;
&lt;li&gt;Simplify and automate data pipelines for streaming and batch data to lower costs and boost productivity for your data teams&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/zs"&gt;Read more and sign up here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>Resources to practice web development</title>
      <author>Karthikeyan</author>
      <pubDate>Mon, 08 Nov 2021 07:36:20 +0000</pubDate>
      <link>https://dev.to/imkarthikeyan/resources-to-practice-web-development-ko</link>
      <guid>https://dev.to/imkarthikeyan/resources-to-practice-web-development-ko</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Excellence is not an art. It is the habit of practice — Aristotle&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Best way to be good at any piece of tech is to practice it. In order to practice the tech , you need challenges , ideas for side projects. In this blog post , I have compiled a list of sites which provides more challenges and ideas for us to practice web development. &lt;/p&gt;

&lt;p&gt;Doing more side projects is one way of avoiding tutorial hell. &lt;/p&gt;

&lt;p&gt;Let's dive in. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2GjgvS5vA6y08/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2GjgvS5vA6y08/giphy.gif" alt="https://media.giphy.com/media/2GjgvS5vA6y08/giphy.gif" width="500" height="257"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#front-end-mentor"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.frontendmentor.io/challenges"&gt;Front end mentor&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOMG9y45--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636290954859/vlT0ZI3aL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOMG9y45--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636290954859/vlT0ZI3aL.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Front end mentor has set of challenges to level up your HTML, CSS and Javascript skills . It is one of the best resource which provides design assets and project ideas to build. &lt;/p&gt;

&lt;p&gt;Once you are done with project , you can submit and get feedback for your project, also you can review other developer's work. &lt;/p&gt;

&lt;p&gt;You can also join front-end mentor's  &lt;a href="https://www.frontendmentor.io/slack"&gt;slack&lt;/a&gt;  community to brainstorm and chat with other developers &lt;/p&gt;

&lt;p&gt;Challenges can be filtered based on difficulty level and also based on HTML,CSS, JS and API. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;From Front end mentor&lt;/p&gt;

&lt;p&gt;Solve real-world HTML, CSS and JavaScript challenges whilst working to professional designs. Join 247,155 developers building projects, reviewing code, and helping each other get better.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#freecodecamp"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.freecodecamp.org/"&gt;Freecodecamp&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D5Q-QbkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636291942935/VUm1tx936.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5Q-QbkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636291942935/VUm1tx936.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Freecodecamp is one of the best web dev resource which has 100's of tutorials and tons of challenges to complete. Once completed , you can test your skills by completing the challenges and once done you will be awarded certification. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codewell"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codewell.cc/"&gt;Codewell&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sGQftL-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636292509149/aj_IKMhhgb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sGQftL-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636292509149/aj_IKMhhgb.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Codewell offers real world Figma templates that you can use to improve and level up your HTML, CSS, and Javascript skills. You can even share your solutions and receive feedback on either the website or on the growing Slack community&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codementorio"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codementor.io/projects"&gt;Codementor.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FwLqQEBi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295097092/TQcfvodxh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FwLqQEBi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295097092/TQcfvodxh.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another useful resource which provides you with challenges where you can web development, mobile app development, web scraping and also your programming skills. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By Code mentor &lt;/p&gt;

&lt;p&gt;Improve your programming skills by working on real-world projects. Join our free community to discuss projects, review code, and learn from peers and mentors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#daily-ui"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.dailyui.co/"&gt;Daily UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--slZrnbph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295134793/7CxC45BbC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--slZrnbph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295134793/7CxC45BbC.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you sign up to daily ui's newsletter, challenges starts and you will get design challenges  each day. once done you can post them in dribble or behance , so that other &lt;br&gt;
designers can give feedback for your designs.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By Daily UI &lt;br&gt;
Daily UI is a series of daily &lt;strong&gt;Design ChallengesInspiration&lt;/strong&gt; and &lt;strong&gt;Surprise Rewards!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#devchallengesio"&gt;
  &lt;/a&gt;
  &lt;a href="https://devchallenges.io/"&gt;Devchallenges.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97qnrCn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295155373/QnQGyqAQS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97qnrCn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295155373/QnQGyqAQS.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Useful resource to practice front-end , back-end and full-stack knowledge by building web  applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-battle"&gt;
  &lt;/a&gt;
  &lt;a href="https://cssbattle.dev/"&gt;CSS Battle&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtyN5d8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295582311/C6OAHRP_x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtyN5d8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295582311/C6OAHRP_x.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is one of the fun resource where you can use your CSS skills to battle with other fellow developers. &lt;/p&gt;

&lt;p&gt;The battles on there aren't necessarily going to tell you how to create web layouts, but they will definitely help you tackle some of the intermediate CSS properties.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codepen-challenges"&gt;
  &lt;/a&gt;
  &lt;a href="https://codepen.io/challenges"&gt;Codepen Challenges&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mCvGvHGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636296180057/yYQqeHuwE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mCvGvHGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636296180057/yYQqeHuwE.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each week, you’ll get a new prompt surrounding a monthly theme to work on. The best Pens get picked and featured on the homepage!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codier"&gt;
  &lt;/a&gt;
  &lt;a href="https://codier.io/"&gt;Codier&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SsNpLUYR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636296199417/ZT2LnQFig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SsNpLUYR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636296199417/ZT2LnQFig.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Codier.io lets you create solutions to their challenge right in the browser and compare them with the community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#acefrontend"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.acefrontend.com/"&gt;AceFrontEnd&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B3v5JI5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636296219474/wieokoYxH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B3v5JI5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636296219474/wieokoYxH.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ace Front End has complete and &lt;strong&gt;practical&lt;/strong&gt; coding challenges, with a detailed walk through of a perfect interview solution&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;That's pretty much it. Thank you for taking the time to read the blog post. If you found the post useful , add ❤️ to it and let me know if I have missed something in the comments section. Feedback on the blog are most welcome.&lt;/p&gt;

&lt;p&gt;Let's connect on twitter : (&lt;strong&gt;&lt;a href="https://twitter.com/karthik_coder"&gt;https://twitter.com/karthik_coder&lt;/a&gt;&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/eujb1tWaj3ZxS/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/eujb1tWaj3ZxS/giphy.gif" alt="https://media.giphy.com/media/eujb1tWaj3ZxS/giphy.gif" width="500" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>resources</category>
    </item>
    <item>
      <title>Everything About Django - 3 (Models and Migrations)</title>
      <author>Priyanshu Panwar</author>
      <pubDate>Mon, 08 Nov 2021 07:03:26 +0000</pubDate>
      <link>https://dev.to/priyanshupanwar/everything-about-django-3-models-and-migrations-4660</link>
      <guid>https://dev.to/priyanshupanwar/everything-about-django-3-models-and-migrations-4660</guid>
      <description>&lt;p&gt;This is the &lt;strong&gt;third blog&lt;/strong&gt; of the series &lt;strong&gt;Everything About Django&lt;/strong&gt;. In this article we are going to study about &lt;strong&gt;Models&lt;/strong&gt; and &lt;strong&gt;Migrations&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-models"&gt;
  &lt;/a&gt;
  What are Models?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Models are the database tables.&lt;/li&gt;
&lt;li&gt;Django uses ORM (Object Relational Mapping) for models.&lt;/li&gt;
&lt;li&gt;Each model is a subclass inherited from &lt;code&gt;django.db.models.Model&lt;/code&gt; class.&lt;/li&gt;
&lt;li&gt;Every attribute in Django Model specifies a field in the database table.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-orm"&gt;
  &lt;/a&gt;
  What is ORM?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ORM means Object Relational Mapper, one of the most powerful feature of Django.&lt;/li&gt;
&lt;li&gt;Django's ORM is just a pythonical way to create SQL to query and manipulate your database and get results in a pythonic fashion.&lt;/li&gt;
&lt;li&gt;How wonderful this is, you need not type SQL and do all the db stuff.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-model"&gt;
  &lt;/a&gt;
  How to create a model?
&lt;/h2&gt;

&lt;p&gt;Let's take an example to see how a model is made.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.db import models
class Student(models.Model):
    name = models.CharField(max_length=100)
    roll = models.IntegerField()
    address = models.CharField(max_length=200)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way I have created a table Student with the following attributes : name - Char, roll - Integer, address - Char.&lt;br&gt;
In SQL we do this by :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE TABLE Student
(
roll int,
name varchar(100),
address varchar(200)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So you see how easy and pythonic this is with Django.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-migration"&gt;
  &lt;/a&gt;
  What is a migration?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Once we have defined a model, it's just a python code not yet reflected in our database, no table is created so far, until we migrate this to our database.&lt;/li&gt;
&lt;li&gt;Once our models is defined, we need to run &lt;code&gt;python manage.py makemigrations&lt;/code&gt;. See the example bro.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GZdJibKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ll3m8xslaqsknar7kpcq.png" alt="makemigrations" width="562" height="75"&gt;
&lt;/li&gt;
&lt;li&gt;Here core is the app in which my models is defined. It creates a folder in my app &lt;code&gt;migrations&lt;/code&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NfXogNkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fph7sm29z6vypjbqn59i.png" alt="migrations" width="161" height="262"&gt;
&lt;/li&gt;
&lt;li&gt;With every makemigrations, a file is created like &lt;code&gt;0001_initial.py&lt;/code&gt; which contains the information about our reflected changes in the database, which looks like this.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KfdLHpUj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cm1yyxjki16yuyqza18q.png" alt="0001_initial.py" width="880" height="614"&gt;
This is a internal file created by django to reflect changes in the db.&lt;/li&gt;
&lt;li&gt;Once we have made migrations, we need to actually reflect them in the database to create and modify the table. For this run, &lt;code&gt;python manage.py migrate&lt;/code&gt;. This command will run the latest migrations made and reflect their changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will create an article on tips while creating a model, where I will define all the attributes, functions one should define in a model.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  THANK YOU
&lt;/h2&gt;

&lt;p&gt;You can find me on : &lt;a href="http://priyanshu-panwar.github.io/"&gt;Priyanshu Panwar&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/priyanshu-panwar"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please feel free to comment for any help or topic I should write an article on.&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Animate and Change Header Background on Scroll</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Mon, 08 Nov 2021 07:03:03 +0000</pubDate>
      <link>https://dev.to/avneesh0612/animate-and-change-header-background-on-scroll-1cci</link>
      <guid>https://dev.to/avneesh0612/animate-and-change-header-background-on-scroll-1cci</guid>
      <description>&lt;p&gt;You might have seen some web apps where the header changes its color or becomes glassmorphic when you scroll down. So in this tutorial, I am going to show you how you can do the same. Let's jump right into it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/432917e923304aa5807ef6a6228a38b9"&gt;https://www.loom.com/share/432917e923304aa5807ef6a6228a38b9&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-a-new-react-app"&gt;
  &lt;/a&gt;
  Create a new react app
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app animated-header
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cleanup"&gt;
  &lt;/a&gt;
  Cleanup
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Delete everything in the app div in &lt;code&gt;App.js&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./App.css";

function App() {
  return &amp;lt;div className="app"&amp;gt;&amp;lt;/div&amp;gt;;
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Delete everything in &lt;code&gt;App.css&lt;/code&gt; and add this basic styling-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.app {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;in &lt;code&gt;index.css&lt;/code&gt; add-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* {
  margin: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-navbar"&gt;
  &lt;/a&gt;
  Creating the navbar
&lt;/h2&gt;

&lt;p&gt;Create a new file &lt;code&gt;Header.js&lt;/code&gt; in the &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;I am creating a very simple navbar-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./Header.css";

const Header = () =&amp;gt; {
  return (
    &amp;lt;nav className="header"&amp;gt;
      &amp;lt;h3&amp;gt;I am a nav&amp;lt;/h3&amp;gt;
    &amp;lt;/nav&amp;gt;
  );
};

export default Header;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to create a &lt;code&gt;Header.css&lt;/code&gt; file for our stylings. I am going to add very basic stylings, feel free to style it more as per your app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.header {
  padding: 20px 0px;
  background-color: #282c34;
  text-align: center;
  position: fixed;
  top: 0;
  width: 100vw;
}

.header &amp;gt; h3 {
  color: white;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Render the Header&lt;/strong&gt;&lt;br&gt;
In &lt;code&gt;App.js&lt;/code&gt; add the header and import it-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./App.css";
import Header from "./Header";

function App() {
  return (
    &amp;lt;div className="app"&amp;gt;
      &amp;lt;Header /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kp6W7zZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295628487/UinfRTRZdq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kp6W7zZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295628487/UinfRTRZdq.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-dummy-section"&gt;
  &lt;/a&gt;
  Adding dummy section
&lt;/h2&gt;

&lt;p&gt;In &lt;code&gt;App.js&lt;/code&gt; I am going to add a dummy section with some text, to see the navbar properly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./App.css";
import Header from "./Header";

function App() {
  return (
    &amp;lt;div className="app"&amp;gt;
      &amp;lt;Header /&amp;gt;
      &amp;lt;div className="landing_page"&amp;gt;
        &amp;lt;h2&amp;gt;
          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Architecto
          nisi qui iste quos placeat sint explicabo labore. Vero quaerat odio
          reprehenderit, id laborum placeat harum fugit? Explicabo dolorem
          obcaecati nostrum.Lorem ipsum dolor sit amet, consectetur adipisicing
          elit. Architecto nisi qui iste quos placeat sint explicabo labore.
          Vero quaerat odio reprehenderit, id laborum placeat harum fugit?
          Explicabo dolorem obcaecati nostrum.Lorem ipsum dolor sit amet,
          consectetur adipisicing elit. Architecto nisi qui iste quos placeat
          sint explicabo labore. Vero quaerat odio reprehenderit, id laborum
          placeat harum fugit? Explicabo dolorem obcaecati nostrum.
        &amp;lt;/h2&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give us some text below our navbar like this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AnUSuHb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295821659/b7CmOi3wz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnUSuHb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295821659/b7CmOi3wz.png" alt="image.png" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's add some stylings to the h2 tag and the landing page div&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.landing_page {
  display: flex;
  flex-direction: column;
  padding-top: 40vh;
  height: 100vh;
  width: 100vw;
  background-color: aqua;
}

.landing_page &amp;gt; h2 {
  margin: 0 auto;
  width: 80vw;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This styles will center the text and give it an aqua background with a y-axis scroll as it is more than 100vh.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RiFAcWLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295903287/Pfu7PRLa9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RiFAcWLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295903287/Pfu7PRLa9.png" alt="image.png" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-additional-class-based-on-scroll"&gt;
  &lt;/a&gt;
  Adding additional class based on scroll
&lt;/h3&gt;

&lt;p&gt;Create a state to hold if we need to change the background or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [animateHeader, setAnimateHeader] = useState(false);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setting the state based on scroll-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  useEffect(() =&amp;gt; {
    const listener = () =&amp;gt; {
      if (window.scrollY &amp;gt; 140) {
        setAnimateHeader(true);
      } else setAnimateHeader(false);
    };
    window.addEventListener("scroll", listener);

    return () =&amp;gt; {
      window.removeEventListener("scroll", listener);
    };
  }, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might need to change the value for scrollY based on your app needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#styling-the-animated-header"&gt;
  &lt;/a&gt;
  Styling the animated header
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.header--animated {
  background: rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(4px);
  box-shadow: rgba(255, 255, 255, 0.3);
}

.header--animated &amp;gt; h3 {
  color: black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give you a glassmorphic background on scrolling.&lt;/p&gt;

&lt;p&gt;I am also going to increase the padding a bit in the animated header-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.header--animated {
  background: rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(4px);
  box-shadow: rgba(255, 255, 255, 0.3);
  padding: 25px 0px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Make the animation smoother&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;.header&lt;/code&gt; I will add one more property-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;transition: all 0.1s;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you could also make your header beautiful and better like this. See ya in the next one ✌️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/avneesh0612/animated-header-demo"&gt;GitHub repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh-links.vercel.app/"&gt;Let's connect&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why it's OK to abandon your side projects 😉</title>
      <author>Bhupesh Varshney 👾</author>
      <pubDate>Mon, 08 Nov 2021 06:52:59 +0000</pubDate>
      <link>https://dev.to/bhupesh/why-its-ok-to-abandon-your-side-projects-1hfo</link>
      <guid>https://dev.to/bhupesh/why-its-ok-to-abandon-your-side-projects-1hfo</guid>
      <description>&lt;p&gt;I wanna tell you that you need to stop being guilty of not actively working on side-projects. Don't take this in the negative way of not doing any projects at all but if you have been beating yourself for not being good at it, I am here to assure you that it's fucking okay!!&lt;/p&gt;

&lt;p&gt;Building side-projects is hard, there are 2 sides to the coin.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Finding a problem to fix and start building the solution.&lt;/li&gt;
&lt;li&gt;Keeping up the momentum and maintaining it for a long-time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both of these sides are equally hard to achieve. But once you have a solution to a legit problem, all of the below monsters can come up anytime during the process, leading you to give up on your project midway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lack of vision&lt;/li&gt;
&lt;li&gt;Lack of motivation&lt;/li&gt;
&lt;li&gt;Burned out&lt;/li&gt;
&lt;li&gt;No time&lt;/li&gt;
&lt;li&gt;Not enough constructive feedback&lt;/li&gt;
&lt;li&gt;Not enough traction/No users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hear me say this out loud all of these reasons are indeed part of going through a creative process. Building software is one such process especially if you work on something new. Let me try to explain from my personal experiences.&lt;/p&gt;

&lt;p&gt;I have been in the burned-out phase for quite a long (it started when I &lt;a href="https://github.com/codeclassroom/codeclassroom"&gt;failed to build this project&lt;/a&gt; for my college major, but that's a story for another day) and one thing I have learned is that pushing yourself is good, but going over the edge can have harmful effects on your mental state, or even worse, you start to lose interest in software altogether.&lt;/p&gt;

&lt;p&gt;Personally, for me, it took months before I was able to get out of that phase and get back to building things I used to like before. But I think I have lost something after that phase, I don't feel the same, feels like a part of my creativity is lost.&lt;/p&gt;

&lt;p&gt;The point I want to highlight is that don't beat yourself too much for not working on side-projects every second of your life. &lt;br&gt;
From my little experience of building things the whole purpose of making stuff is not to solve a problem or get users, rather &lt;strong&gt;It's to continuously evolve as a human and embark on your creativity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remember when you say 'no' to something, you're usually saying 'yes' to something else that matters more at the moment. By stopping yourself to work on projects continuously you are giving your brain time to rejuvenate itself and come up with even more creative ideas, hence finding yourself again.&lt;/p&gt;

&lt;p&gt;Look at the good aspects for once, yeah? Till the moment you decided to give up. This is what you achieved 🙌🏻&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An idea came to life 💡(&lt;em&gt;you were creative, this project was your brain-child&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;A solution to a problem was explored (&lt;em&gt;you are already a problem solver!&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;You learned &amp;amp; explored something new (&lt;em&gt;not everyone has the freedom to do so&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;You had fun building it&lt;/li&gt;
&lt;li&gt;You made mistakes along the way which taught you valuable lessons (&lt;em&gt;no matter how big or small they were&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these things have already made you a better software engineer/programmer than you were before starting that project.&lt;/p&gt;

&lt;p&gt;Remember you are not alone, read through this &lt;a href="https://lobste.rs/s/fgt5zm/what_have_you_failed_build"&gt;lobsters&lt;/a&gt; and &lt;a href="https://news.ycombinator.com/item?id=22397720"&gt;hackernews&lt;/a&gt; thread about people failing to build and/or complete projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/D7z8JfNANqahW/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/D7z8JfNANqahW/giphy.gif" alt="strong" width="500" height="334"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember to talk and communicate about this to your friends or in a developer community you are a part of, the mental toll of giving up on something can be huge, make sure you are honest to yourself about this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the next time you abandon a side project, remember to reflect on your growth and be proud ⭐&lt;/p&gt;

</description>
      <category>sideprojects</category>
      <category>programming</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to be a Bad Developer!?</title>
      <author>Nomadev💻🔱</author>
      <pubDate>Mon, 08 Nov 2021 06:52:26 +0000</pubDate>
      <link>https://dev.to/thenomadevel/how-to-be-a-bad-developer-51ej</link>
      <guid>https://dev.to/thenomadevel/how-to-be-a-bad-developer-51ej</guid>
      <description>&lt;p&gt;Hello, everyone  &lt;a href="https://twitter.com/thenomadevel"&gt;Nomadev&lt;/a&gt;  here, back with another blog on tech. I think all have read about the Traits of a Good Software Engineer many times before.  But here is the RECIPE TO MAKE YOU A BAD PROGRAMMER&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-becoming-a-bad-programmer-you-should"&gt;
  &lt;/a&gt;
  For becoming a bad programmer you should
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#-only-watch-tutorials-never-code"&gt;
  &lt;/a&gt;
  - Only watch tutorials, Never code!
&lt;/h2&gt;

&lt;p&gt;The first step to be a bad programmer is to watch tutorials WITHOUT practicing by coding them.&lt;/p&gt;

&lt;p&gt;You need to believe you will understand concepts just by seeing them, that's the most important thing one should start with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-code-more-think-less"&gt;
  &lt;/a&gt;
  - Code more, think less
&lt;/h2&gt;

&lt;p&gt;A bad programmer will first code then think of how to go about it. Terms like pseudo-code, mind mapping are none of their business. When presented with a problem, the bad programmer will start thinking about solutions first. Debugging is for the birds. And a truly bad programmer will actually put that solution in without actually verifying the problem first. By doing so, he will snag the prestigious “Fastest time from bug filing to actual check-in time into the source repository” award. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-not-following-dry-amp-kiss"&gt;
  &lt;/a&gt;
  -  NOT following DRY &amp;amp; KISS
&lt;/h2&gt;

&lt;p&gt;DRY - Don't Repeat Yourself&lt;br&gt;
KISS - Keep It Simple Stupid&lt;/p&gt;

&lt;p&gt;A bad programmer will extent simple programming into unnecessary long code, not using functions/structures is a plus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-memorize-syntax-not-the-logic"&gt;
  &lt;/a&gt;
  - Memorize syntax, not the logic
&lt;/h2&gt;

&lt;p&gt;The key ingredient to becoming a bad programmer is memorizing code.&lt;br&gt;
A bad programmer will never take the effort of understanding the logic that goes into the process&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-learn-languages-not-concepts"&gt;
  &lt;/a&gt;
  - Learn LANGUAGES, not CONCEPTS
&lt;/h2&gt;

&lt;p&gt;A bad programmer just wants to go language to language and not to learn important concepts like algorithms, frameworks, complexity, etc&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>python</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>40+ Login/Sign up Form To Compliment Your Website 2021</title>
      <author>ThemeWagon</author>
      <pubDate>Mon, 08 Nov 2021 06:44:13 +0000</pubDate>
      <link>https://dev.to/themewagon/40-loginsign-up-form-to-compliment-your-website-2021-4nib</link>
      <guid>https://dev.to/themewagon/40-loginsign-up-form-to-compliment-your-website-2021-4nib</guid>
      <description>&lt;p&gt;&lt;strong&gt;Login/Sign up&lt;/strong&gt; page can be counted as a gateway to extensive user interaction. Usually Login system prevents unauthorized access to private data and allows elaborate communication. It requires username and a password for user identification and authentication. You get to communicate with the admin or get user access to the platform through a login system. For example, if you want to join Twitter, you have to get authenticated by them before giving you access to their platform. If you don't have an account, you have to sign up first and log in to the platform.&lt;/p&gt;

&lt;p&gt;As for signing up, users have to fill up some input fields like First Name, Last Name, Gender, Email, Mobile Number, Password, etc. Many registration forms are not user-friendly, and users always want to go through a small authentication system. So while developing an authentication system, you have to keep it as simple as you can.&lt;/p&gt;

&lt;p&gt;To craft a simple sign-in/sign-up form, you should be ware of some key features. First, you have to clarify where to log in, and it's important to differentiate between login and registration forms. If there is an option to sign in with external accounts (for example, Facebook), it is more user-encouraging. Secondly, you should put an option for "Forget password" on the login page as it's quite normal that many are going to forget their password without any particular reason. It would be best if you put all the features to fulfill user's satisfaction in a simple way. A recent study found that &lt;a href="https://seo-hacker.com/user-registration-affects-business/" rel="nofollow noopener"&gt;seventy-seven percent(77%)&lt;/a&gt; of users agreed that websites should offer social logins and &lt;a href="https://seo-hacker.com/user-registration-affects-business/" rel="noopener"&gt;sixty-five percent(65%)&lt;/a&gt; of consumers return to a website that automatically welcomes them through social login.&lt;/p&gt;

&lt;p&gt;In this article, we are presenting some user-friendly and simple collection of login and sign-up forms. These forms are completely &lt;b&gt;free and highly flexible&lt;/b&gt; that anyone can use in one's project easily. So, let's have a look at the collection.&lt;/p&gt;

&lt;h2&gt;01. Login/Sign up form with animation&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/JjWVPXy" rel="noopener"&gt;&lt;br&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4iArt4E1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/1.gif" alt="40+ free login and sign up form 2021" width="600" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This login form is perfect for those who want something basic and dynamic. In addition, when you click on the plus sign the registration form appears with a creative animation effect. &lt;b&gt;No dependency on jQuery&lt;/b&gt;, To obtain this effect, you just attach the javascript file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/JjWVPXy" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;02. HTML/CSS form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/KKWYPGM" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KR4VspRV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/2.gif" alt="40+ free login and sign up form 2021" width="600" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This lovely form was created using simply &lt;b&gt;HTML and CSS&lt;/b&gt;. It arrives with a stunning animation effect. Check it out, it's completely free to use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/KKWYPGM" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;03. Slider Authentication form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/mr-zouraiz123/full/ZEeKMVP" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnjeWLjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/3.gif" alt="40+ free login and sign up form 2021" width="800" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Zouriaz created a sign-up and login form, which is accessed by two tab buttons at the top of the form. It's built with &lt;b&gt;HTML, CSS, Javascript&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/mr-zouraiz123/pen/ZEeKMVP" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;04. Login &amp;amp; Signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/jOBRNMO" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fZahYm28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/4.gif" alt="40+ free login and sign up form 2021" width="800" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This template is for you if you're looking for a fully unique and modern-day designed login form for your website. It has a fantastic shaking hover effect. You can also sign up with social media account. &lt;b&gt;No dependency upon jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/jOBRNMO" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;05. Awesome Authentication page&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/LYWaoog" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r6IAEnOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/5.gif" alt="40+ free login and sign up form 2021" width="800" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This simple authentication template can be used free of charge. The code is simple, and if you want to change the color scheme to suit your needs, simply change it. You must &lt;b&gt;add some Javascript code&lt;/b&gt; for this stunning effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/LYWaoog" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;06. Creative login/sign up form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/WNpWeRe" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--amgPr0so--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/6.gif" alt="40+ free login and sign up form 2021" width="800" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This simple authentication template can be used free of charge. The code is simple, and if you want to change the color scheme to suit your needs, simply change it. Keep in mind that you'll need to use the click function in javascript to get the spinning effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/WNpWeRe" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;07. Login &amp;amp; sign-up form with animation concept&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/WNpWeWw" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7dQwrB97--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/7.gif" alt="40+ free login and sign up form 2021" width="600" height="274"&gt;&lt;/a&gt;&lt;br&gt;This login template features a stunning motion effect and a modern style. HTML, CSS, and Javascript are all included in the template. You must &lt;b&gt;include the javascript file&lt;/b&gt; if you wish to utilize this form with this effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/WNpWeWw" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;08. Sign up/Login form&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ehermanson/full/KwKWEv" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EWuuhrzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/8.gif" alt="40+ free login and sign up form 2021" width="864" height="536"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The registration form with a black backdrop is attractive, contemporary. It’s free to use and created by Eric. It's built with &lt;b&gt;HTML,CSS and Javascript&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ehermanson/pen/KwKWEv" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;09. Login/Registration Form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/andytran/full/GpyKLM" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0zSQVc0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/9.gif" alt="40+ free login and sign up form 2021" width="600" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It uses HTML, CSS, and Javascript and is created by Andy Tran. When you click on a toggle button, a sliding effect is seen on the registration form. &lt;b&gt;No dependency on jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/andytran/pen/GpyKLM" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;10. Sign in &amp;amp; Sign up modal&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/THEORLAN2/full/MyedKo" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BBc2sLzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/10.gif" alt="40+ free login and sign up form 2021" width="600" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dany Santos created this form. This form has a stunning slider effect and a background video effect. &lt;b&gt;HTML, CSS, and Javascript&lt;/b&gt; were used to make it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/THEORLAN2/pen/MyedKo" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;11. HTML5/CSS3 login and signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/joshsorosky/full/gaaBoB" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WJ31Y9Ep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/11.gif" alt="40+ free login and sign up form 2021" width="600" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With a dark backdrop, Josh Sorosky has created a beautiful login and sign-up form. There is a choose button for the option to keep me signed in and an &lt;b&gt;animation effect with Javascript dependency&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/joshsorosky/pen/gaaBoB" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;12. Simple login &amp;amp; Signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/JjWzVwE" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9UYZkCSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/12.gif" alt="40+ free login and sign up form 2021" width="600" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a basic HTML, CSS, and Javascript-based login and signup form with a slider effect. This form is &lt;b&gt;dependent on jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/JjWzVwE" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;13. Slider login/Signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/Anna_Batura/full/QEAqyE" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tlBxiPjU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/13.gif" alt="40+ free login and sign up form 2021" width="600" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A modal login form in HTML/CSS with a &lt;b&gt;javascript slider effect&lt;/b&gt;. Anna Batura designed it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Anna_Batura/pen/QEAqyE" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;14. Animated Login &amp;amp; Signup Form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/khadkamhn/full/ZGvPLo" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7sB1boo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/14.gif" alt="40+ free login and sign up form 2021" width="600" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s a beautifully animated login and sign-up form with a transparent background image created by Mohan Khadka.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/khadkamhn/pen/ZGvPLo?editors=1100" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;15. Sign in/Sign up form with CSS&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/rNybNxJ" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZHJ1qkcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/15.gif" alt="40+ free login and sign up form 2021" width="600" height="395"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A beautiful login template! This Login and signup is a very basic and clean style, with a lovely backdrop that adds to the aesthetic attractiveness of your website. Its effect was created with only CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/rNybNxJ?editors=1100" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;16. Sign in/Sign up form modal&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/THEORLAN2/full/mPLPwj/" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tp7fCZ-w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/16.gif" alt="40+ free login and sign up form 2021" width="600" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This modal is simple and elegant, giving your project a polished appearance. Dany Santos created this beautiful login page. It requires &lt;b&gt;jQuery dependency&lt;/b&gt; and essential for the animation effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/THEORLAN2/pen/mPLPwj" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;17. Falcon login/signup&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TSpnAWNY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/07/falcon-login.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TSpnAWNY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/07/falcon-login.gif" alt="Falcon login/signup" width="600" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Login/Sign-up section of Falcon is unique and crafted deliberately. But it is a part of &lt;a href="https://themewagon.com/theme_tag/quality-checked/?ref=topNav" rel="noopener"&gt;premium product&lt;/a&gt;, Falcon which is available at &lt;a href="https://themes.getbootstrap.com/store/themewagon/" rel="noopener"&gt;Bootstrap market&lt;/a&gt;. The Login/Signup form of Falcon got no dependency on JQuery, Which makes it perfectly suitable for &lt;b&gt;Bootstrap 5&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template/" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;18. Double slider login/signup&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/PoprgzP" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hy89ZaHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/18.gif" alt="40+ free login and sign up form 2021" width="600" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This code is ready to use, all you have to do now is include it into your project. The animation effects make this form special and to &lt;b&gt;get this effect you need to add a javascript file&lt;/b&gt;. Florin Pop is the one who created it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/PoprgzP" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;19. Login/signup with pure CSS&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/eYvoYgM" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ahIZvvY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/19.gif" alt="40+ free login and sign up form 2021" width="600" height="397"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This login and sign up form is created with only HTML and CSS. Its animation effect is so smooth and unique. You can use it any project because there is &lt;b&gt;no dependencies&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/eYvoYgM?editors=1100" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;20. Sparrow Login/signup&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://themes.getbootstrap.com/product/sparrow-simple-seamless-alive/" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bhQSevIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/20.gif" alt="40+ free login and sign up form 2021" width="600" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another login/signup page from a &lt;a href="https://themes.getbootstrap.com/store/themewagon/" rel="noopener"&gt;premium&lt;/a&gt; template, &lt;a href="https://themes.getbootstrap.com/product/sparrow-simple-seamless-alive/" rel="noopener"&gt;Sparrow&lt;/a&gt;. Simple layout with OAuth feature makes its Login/Sign-up page stand out among the crowd. Sparrow's login/signup form is &lt;b&gt;dependent upon jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themes.getbootstrap.com/product/sparrow-simple-seamless-alive/" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;21. Rotating Login/signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/ourystd/full/MxLbXQ" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7qdR2YDi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/21.gif" alt="40+ free login and sign up form 2021" width="600" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Login with a rotating effect is a unique and fun tool. It not only has all of the essential functions of a login and sign-up form, but it also has a lovely color palette. Oury designed it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ourystd/pen/MxLbXQ" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;22. Login/signup form with slider effect&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/ZEeZEpv" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ruaSgMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/22.gif" alt="40+ free login and sign up form 2021" width="600" height="266"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This beautiful form was simply made with &lt;b&gt;HTML, CSS, Javascript&lt;/b&gt;. It comes with an eye-catching animation effect. It is totally free to use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/ZEeZEpv" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;23. Login/signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/designify-me/full/RWaBJE" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dZ5UZsZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/23.gif" alt="40+ free login and sign up form 2021" width="600" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create an online form with appropriate semanticized HTML elements, is very important for a website. This sample login form reduces your work. You can customize it according to your need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/designify-me/pen/RWaBJE" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;24. Login/signup form with slider effect&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/Mestika/full/ZGaWya" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aMxZAMPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/24.gif" alt="40+ free login and sign up form 2021" width="600" height="244"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It has a beautiful sliding effect with black and blue color combination. Its made with HTML, CSS and little bit Javascript. Designed by Emil Devantie.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Mestika/pen/ZGaWya" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;25. Login/signup form template&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/nazaninrey/full/qZOPWB" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qV0By8t_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/25.gif" alt="40+ free login and sign up form 2021" width="600" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This template offers a clean and elegant login form design. You can use it for free. It appears with popup &lt;b&gt;animation effect with javascript click function&lt;/b&gt;, designed by Nazani Reihani.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/nazaninrey/pen/qZOPWB" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;26. Card switch forms&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/TheThinkinGeek/full/NRwZGr" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fHjVwCIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/26.gif" alt="40+ free login and sign up form 2021" width="600" height="434"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This exceptional registration and sign in form is straightforward and appealing for any website. It's designed by Omkar Kulkarni which is built with HTML, CSS and Javascript. &lt;b&gt;No dependency with jQuery&lt;/b&gt;, you just need to add a javascript file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/TheThinkinGeek/pen/NRwZGr" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;27. Flat login and sign up form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/zoite/full/gbNEOr" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QqTFLu2X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/27.gif" alt="40+ free login and sign up form 2021" width="600" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A lovely modern CSS form with a green background. You may easily adjust the login design to suit your needs.This simple authentication form created by Zoite.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/zoite/pen/gbNEOr" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;28. Slick authentication page&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://prium.github.io/slick/blocks/forms-5.html" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V6hxdbz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/28.gif" alt="40+ free login and sign up form 2021" width="600" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Custom-made by ThemeWagon, &lt;a href="https://themes.getbootstrap.com/store/themewagon/" rel="noopener"&gt;premium&lt;/a&gt; template, &lt;a href="https://themewagon.com/themes/slick/" rel="noopener"&gt;Slick&lt;/a&gt; owns beautiful login/signup pages that add more value to your dream project. This one is also &lt;b&gt;dependent on jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://prium.github.io/slick/" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;29. Responsive login and sign up form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/YzZRRxV" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VYfsLFUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/29.gif" alt="40+ free login and sign up form 2021" width="600" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This responsive login form template comes with an elegant green and white color combination. The template comes integrated with &lt;b&gt;HTML, CSS, and Javascript&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/YzZRRxV?editors=1010" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;30. Login/Sign up&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/ethan-arrowood/full/ygoaKd" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jgqqsBVN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/30-1.gif" alt="40+ free login and sign up form 2021" width="600" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a login modal with 2 panels. A login panel, and a registration panel which is appears with sliding effect. For this sliding effect you have to add some javascript code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ethan-arrowood/pen/ygoaKd" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;31. Login and Register tabbed form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bootsnipp.com/snippets/z1Bpy" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--voejqIRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/311.gif" alt="40+ free login and sign up form 2021" width="600" height="311"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's built with Bootstrap framework, HTML, CSS, and Javascript. This form template is simple and appears with tabbed options. It has beautiful hover effect on button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bootsnipp.com/snippets/z1Bpy" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;32. Popup Login &amp;amp; Signup with jQuery&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/monkeytempal/full/VvKLMe" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--crvCaL7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/32.gif" alt="40+ free login and sign up form 2021" width="600" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a very straightforward and cost-free login page. In your project, you may use it and customize it to your needs. It is built with &lt;b&gt;HTML, CSS, jQuery&lt;/b&gt; with popup effect designed by Bijay Pakhrin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/monkeytempal/pen/VvKLMe" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;33. Login &amp;amp; Signup UI&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/YzZoogB" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jxg7MQhI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/33.gif" alt="40+ free login and sign up form 2021" width="600" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a modern login and signup form comes with background image. It has also option for login with social media account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/YzZoogB?editors=1100" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;34. Login template&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/wvJLLLK" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FWI0DOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/34.gif" alt="40+ free login and sign up form 2021" width="600" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This basic login template is completely free to use. The coding is straightforward, and you can easily alter the color palette to fit your needs. It has a beautiful effect &lt;b&gt;based on Javascript&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/wvJLLLK" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;35. Login/signup form with slider&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/mrtial/full/RRGOad" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nE59HnQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/35.gif" alt="40+ free login and sign up form 2021" width="600" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It comes with beautiful &lt;b&gt;javascript animation effect&lt;/b&gt;, designed by Charlie Yang.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/mrtial/pen/RRGOad" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;36. Responsive login &amp;amp; sign up form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/codyhouse/full/pIrbg" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v0fF7M-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/36.gif" alt="40+ free login and sign up form 2021" width="600" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a form for any business website that includes correct semantic HTML elements. The snippet of this login form reduces your work; copying the CSS code is all you require.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/codyhouse/pen/pIrbg" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;37. Simple HTML5/CSS3 Form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/colorlib/full/rxddKy" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G6g0hQhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/37.gif" alt="40+ free login and sign up form 2021" width="600" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a very simple and free login page. You can utilize and adapt it to your needs in your project. Silkalns Aigars designed it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/colorlib/pen/rxddKy" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;38. Tabbed Log In &amp;amp; Register Panel&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/gOmNVma" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RZDjg9Xn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/38.gif" alt="40+ free login and sign up form 2021" width="600" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This log In &amp;amp; Register Panel is clean and straightforward, providing your project a professional look. This form template was created entirely with &lt;b&gt;HTML and CSS&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/gOmNVma" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;39. Login/Sign-up with social media&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/GeBuOr/full/mJJmgx" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OQRtEDQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/39.gif" alt="40+ free login and sign up form 2021" width="600" height="396"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code is easy, and if you want to modify the color combination to suit your needs, you can do so by changing it. This form is designed by Jenert Org.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/GeBuOr/pen/mJJmgx" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;40. Responsive Signup/Login form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/gOmVYgG" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tRGjg5s3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/40.gif" alt="40+ free login and sign up form 2021" width="600" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're searching for a completely distinctive and modern-looking login form for your website, this is the template for you. It has a great Javascript animation effect that shakes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/gOmVYgG" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;41. Black Signup/Login form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/eYvqOLY" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_aqLjbd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/41.gif" alt="40+ free login and sign up form 2021" width="600" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a stunning login and sign-up form with a dark background. &lt;b&gt;HTML, CSS, and Javascript&lt;/b&gt; were used to make it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/eYvqOLY" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;42. Signup/Login form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/oNZKvmw" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kgrqUFUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/42.gif" alt="40+ free login and sign up form 2021" width="600" height="374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simply &lt;b&gt;HTML, CSS and four line of Javascript code&lt;/b&gt; were used to build this beautiful form. It comes with an eye-catching animation effect. This basic authentication template is completely free to use. You can easily alter the color palette to fit your needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/oNZKvmw" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;If you don't know where to begin, creating a login page might be challenging. Make your login forms simple and smooth, design the page properly, and provide people the guidance they need. This article will assist those who wish to create a nice and easy login page. If you liked this post about the login page, you might be interested in learning about website templates.&lt;/p&gt;


&lt;blockquote&gt;
&lt;h3&gt;Check this Out:&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://themewagon.com/best-travel-tourism-template-built-bootstrap/" rel="noopener"&gt;Best 27 Travel &amp;amp; Tourism Template Built with Bootstrap&lt;/a&gt;&lt;br&gt;&lt;a href="https://themewagon.com/free-bootstrap-templates/" rel="noopener"&gt;13+ Free Bootstrap 5 Templates To Make Your Online Presence Remarkable&lt;/a&gt;&lt;/p&gt;




&lt;/blockquote&gt;



</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What Do You Think?</title>
      <author>Al Siam</author>
      <pubDate>Mon, 08 Nov 2021 06:32:03 +0000</pubDate>
      <link>https://dev.to/alsiamworld/what-do-you-think-2488</link>
      <guid>https://dev.to/alsiamworld/what-do-you-think-2488</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0T-gEMbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iavhpyma126m1hu7vqi9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0T-gEMbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iavhpyma126m1hu7vqi9.jpg" alt="Image description" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Scripting The Monty Hall Problem</title>
      <author>Oluwole Ajewole</author>
      <pubDate>Mon, 08 Nov 2021 06:08:26 +0000</pubDate>
      <link>https://dev.to/wolemercy/scripting-the-monty-hall-problem-5d5g</link>
      <guid>https://dev.to/wolemercy/scripting-the-monty-hall-problem-5d5g</guid>
      <description>&lt;p&gt;Ahoy!&lt;/p&gt;

&lt;p&gt;If like me your eyes glisten and your ears perk up when you come across deceptive math puzzles, you are sure to find some value in this piece. Here, I introduce the Monty Hall problem, discuss a useful way to think about the solution, and present a python script I wrote to validate it.&lt;/p&gt;

&lt;h2&gt;The Monty Hall Problem&lt;/h2&gt;

&lt;p&gt;The Monty Hall problem (named after Monty Hall, a game show host) is a rather deceptive brain teaser that became somewhat popular towards the end of the 20th Century. It is not a difficult problem to understand as it contains very simple premises but it is, nevertheless, pretty tricky to solve. &lt;/p&gt;

&lt;p&gt;Like the Ball And Bat Problem, psychologists often use the Monty Hall problem to illustrate how easily humans can fail to grasp the "math" or the "rational", opting instead for the "immediately obvious" or "intuitive" response. They call out our tendency to introduce bias and other forms of heuristics when making decisions—preferring easier, less laborious, and inaccurate approaches to more tasking, and more accurate ones. &lt;/p&gt;

&lt;p&gt;What I find most amusing and fascinating about such problems that is that we are usually very aware that they are tricky problems—tricky problems that we are probably hearing about because they've most likely conquered the minds of many people. Yet, we dive in to answer them, optimistic that we'd give a correct response. But of course, we are usually wrong—like I and most people were with the Monty Hall Problem. And even when we are presented with the correct answer, it could be pretty difficult to wrap our heads around the right answer.&lt;/p&gt;

&lt;p&gt;The Monty Hall problem tests our understanding of probabilities in some sort of illusory manner. Here is my  variant of the problem:&lt;/p&gt;

&lt;p&gt;Say you are Luffy, a pirate searching for the grandest treasure—The One Piece. Say there are three identical maps, one of which leads you to the treasure. The other two maps lead you to a wasteland filled with sand. Of course you want the treasure, but you don't know which of the three maps has the treasure. You can't differentiate one from the other.&lt;/p&gt;

&lt;p&gt;Say the maps have a custodian, Monty Hall, and he knows what map leads where. In other words, Monty Hall knows which maps lead you to a wasteland and the one that can guide you to the treasure. He decides to play a game with you as follows;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are to pick any one of the three maps (at this point, you don't know if your chosen map leads you to the treasure or to a wasteland)&lt;/li&gt;
&lt;li&gt;Next, of the other two maps, Monty Hall picks one map that leads to a wasteland. Remember, he knows where each map leads to and he always picks a wasteland map.&lt;/li&gt;
&lt;li&gt;At this point you have picked one map (that may or may not lead to the treasure) and Monty Hall has picked a map that definitely leads to the wasteland. Monty's map needn't be considered anymore, but there is a third map that neither of you chose.&lt;/li&gt;
&lt;li&gt;Next, Monty Hall asks you; do you want to stick with your initial selection or do you want to switch your selection to the third map?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's the problem statement. You are given a choice to stick with your initial map selection or switch to the third map that neither of you chose. Will you stick or switch?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U-3EB83M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlgj5nyus9f3cmo7nacz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U-3EB83M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlgj5nyus9f3cmo7nacz.png" alt="Luffy befuddled" width="770" height="770"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;The Answer&lt;/h2&gt;

&lt;p&gt;With little or no deliberation, we are tempted to choose to stick with our original decision. This is because we believe that switching to the third map would not change the odds that we chose the right map. Our mind is heavily focused on the probability that our first choice was correct, and switching seems like an unnecessary risk. We could also think, perhaps, that after that after Monty Hall chooses the second map, the probability that our original selection is the treasure map is equal to the probability that the third map is the treasure map, i.e. 1/2 each since there are now two options. So there is no point switching. But that is not so!&lt;/p&gt;

&lt;p&gt;It may take some time to sink in, but here is what I consider a useful approach to analysing the problem;&lt;/p&gt;

&lt;p&gt;At the start, when you make the first selection &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the probability of picking a treasure map is 1/3;&lt;/li&gt;
&lt;li&gt;and the probability of picking a wasteland map is 2/3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In other words, you are more likely to pick a wasteland map than a treasure map.&lt;/p&gt;

&lt;p&gt;Next, regardless of your choice, Monty Hall will always pick a wasteland map. &lt;/p&gt;

&lt;p&gt;After Monty picks, there are two possible scenarios; either the third unselected map is the treasure map or it is another wasteland map. And these two scenarios play out probabilistically in relation to your first choice in the following ways;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if the third unselected map is a wasteland map, it must mean that your first selection was the treasure map. This happens one-third of the time (1/3) as stated above. And therefore, you'd win if you don't switch&lt;/li&gt;
&lt;li&gt;if the third unselected map is the treasure map, it must mean that your first selection was a wasteland map. This happens two-thirds of the time (2/3) as stated above. And therefore, you'd win if you switch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As such, since your first selection is likely to be a wasteland map than the treasure map, it makes statistical sense to always switch to the third map. Of course, winning is not guaranteed by switching. But you are twice as likely to win when you switch than when you stick to your first selection. So always switch!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-python-script-some-evidence"&gt;
  &lt;/a&gt;
  The Python Script: Some Evidence
&lt;/h2&gt;

&lt;p&gt;It is normal to still have doubts about the solution to the Monty Hall problem. A useful way to perhaps, cement your belief in and acceptance of the answer is to simulate the problem several times. This is exactly what I did with using a Python Script. You can find the gist &lt;a href="https://gist.github.com/Wolemercy/3d26cb6ad5b9a9c18a819121e78b0346"&gt;here&lt;/a&gt; and the repo &lt;a href="https://github.com/Wolemercy/monty-hall"&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Let's walk through the code;&lt;/p&gt;

&lt;p&gt;First we import the &lt;code&gt;random&lt;/code&gt; module. We define a function called &lt;code&gt;single run&lt;/code&gt; that initializes our map trio as an array. We select a random map to contain our One Piece treasure and the function returns the map array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# The Monty Hall Problem

import random

# Instantiating a random treasure map
def single_run():
    maps = ['wasteland', 'wasteland', 'wasteland']
    treasure_index = random.randint(0, 2)
    maps[treasure_index] = 'one piece'
    return maps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we define a function that returns Luffy's random first choice&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Luffy's first choice
def luffy():
    luffy_first_choice = random.randint(0, 2)
    return luffy_first_choice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we define a function that returns Monty's choice of a wasteland map. We use a while loop to ensure that Monty's chosen map is neither Luffy's first choice nor the treasure map.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Monty's choice of a location that is neither Luffy's choice nor the treasure location
def monty(maps, luffy_first_choice):
    monty_choice = 0

    while monty_choice == luffy_first_choice or maps[monty_choice] == 'one piece':
        monty_choice += 1

    return monty_choice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we define a function that returns Luffy's switched choice. Note that this function is not necessary for the simulation. I only included it for the sake of completeness.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# switch Luffy's choice
def luffy_switch(luffy_first_choice, monty_choice):

    luffy_switch_choice = 0

    while luffy_switch_choice == luffy_first_choice or luffy_switch_choice == monty_choice:
        luffy_switch_choice += 1

    return luffy_switch_choice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we define a function that returns the output. It accepts as input, the number of times switching yielded the treasure map, the number of times sticking yielded the treasure map, and the number of trials. It returns the percentages for both decisions as part of a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# output to be displayed
def output(stick, switch, trials):
    stick_percent = round((stick/trials) * 100)
    switch_percent = round((switch/trials) * 100)

    print(f'Luffy found One Piece {stick_percent} % of the time when he decided to stick to his initial choice ')
    print(f'Luffy found One Piece {switch_percent} % of the time when he decided to switch his initial choice')

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we have the body of the script. It accepts the number of trials as input, i.e. the number of simulations you want to run. We also initialize the number of  times sticking and switching yield the treasure map to zero. &lt;/p&gt;

&lt;p&gt;We run our loop as many times as the number of trials. Inside the  loop, we use are already defined functions to;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get the maps array&lt;/li&gt;
&lt;li&gt;randomly make Luffy's initial map choice&lt;/li&gt;
&lt;li&gt;make Monty choose a wasteland map&lt;/li&gt;
&lt;li&gt;switch Luffy's initial choice&lt;/li&gt;
&lt;li&gt;increment the &lt;code&gt;stick_count&lt;/code&gt; if the initial choice has the One Piece treasure&lt;/li&gt;
&lt;li&gt;increment the &lt;code&gt;switch_count&lt;/code&gt; if the switched choice has the One Piece treasure
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print('The Monty Hall Problem')
trials = int(input('Enter the number of trials:  '))

# Luffy sticks
stick_count = 0

# Luffy switches
switch_count = 0

for i in range(trials):
    maps = single_run()
    luffy_first_choice = luffy()
    monty_choice = monty(maps, luffy_first_choice)
    luffy_switch_choice = luffy_switch(luffy_first_choice, monty_choice)

    if maps[luffy_first_choice] == 'one piece':
        stick_count += 1

    elif maps[luffy_switch_choice] == 'one piece':
        switch_count += 1

output(stick_count, switch_count, trials) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note, as mentioned earlier, that we don't need the &lt;code&gt;luffy_switch&lt;/code&gt; function, and by implication we can do without incrementing the &lt;code&gt;switch_count&lt;/code&gt; as we have done. That's because we are  sure that if Luffy's initial choice was the treasure map, then the third choice is definitely not the treasure map. In the same vein, if Luffy's initial choice wasn't the treasure map, then the third choice that could have been switched to would be the treasure map. &lt;/p&gt;

&lt;p&gt;In other words, the treasure map is either the original choice or the switched choice. The incidences of both (&lt;code&gt;stick_count&lt;/code&gt; and &lt;code&gt;switch_count&lt;/code&gt; ) necessarily add up to the number of trials. So we can use simple arithmetic to evaluate one if we have the other; &lt;code&gt;switch_count = trials - stick_count&lt;/code&gt;. That's definitely a more concise way of writing this script. I only wrote it this way for the sake of completeness.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The result of running the Python Script (several times) proves that Luffy gets the treasure map about two-thirds (2/3) of the time when he switches as opposed to one-third (1/3) of the time when he sticks with his original choice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OdYzPJjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx4egob8t1vhoyg2igb6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OdYzPJjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx4egob8t1vhoyg2igb6.png" alt="Monty Hall script terminal output" width="805" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's The Monty Hall Problem. The key thing to remember is to always switch maps after Monty Hall chooses a wasteland map because your initial choice was more likely wrong than correct. As such, switching improves the chances that you'd win the treasure map. &lt;/p&gt;

&lt;p&gt;And when you find the treasure, remember to share it with me! A comment, a like, a repost, some feedback—anything will do!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;br&gt;
Also connect with me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;LinkedIn: &lt;a href="https://www.linkedin.com/in/wolemercy"&gt;Wolemercy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter:  &lt;a href="https://twitter.com/wolemercy"&gt;Wolemercy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/Wolemercy"&gt;Wolemercy&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>explainlikeimfive</category>
      <category>programming</category>
      <category>sideprojects</category>
    </item>
    <item>
      <title>Git basics: Your first pull request</title>
      <author>Chris Bongers</author>
      <pubDate>Mon, 08 Nov 2021 06:04:18 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/git-basics-your-first-pull-request-58k9</link>
      <guid>https://dev.to/dailydevtips1/git-basics-your-first-pull-request-58k9</guid>
      <description>&lt;p&gt;Pull requests are a vital part of using Git. In this article, we'll look at making a pull request for our repository.&lt;/p&gt;

&lt;p&gt;You should have a good understanding of how pull requests work and the steps needed to take.&lt;br&gt;
After this, we can look into creating pull requests for external repositories.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#making-our-feature"&gt;
  &lt;/a&gt;
  Making our feature
&lt;/h2&gt;

&lt;p&gt;A pull request is a way to notify other people that a feature is done and ready to be merged into another branch.&lt;/p&gt;

&lt;p&gt;You'll create a pull request, and generally, another developer will review your code and give you comments on the code.&lt;/p&gt;

&lt;p&gt;Let's take the demo project we just created. It's a plain simple empty git project.&lt;/p&gt;

&lt;p&gt;Let's add a new file to it called &lt;code&gt;index.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;127.0.0.1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/plain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Helo World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server running at http://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is just a super simple node server. It doesn't matter for this example. I did make a typo. (Did you spot it?)&lt;/p&gt;

&lt;p&gt;Let's &lt;a href="https://daily-dev-tips.com/posts/git-basics-branches-and-strategies/"&gt;commit and push these changes to a new branch&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Create a new branch&lt;/span&gt;
git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; feature_node

&lt;span class="c"&gt;# Add changes&lt;/span&gt;
git add &lt;span class="nb"&gt;.&lt;/span&gt;

&lt;span class="c"&gt;# Commit the code&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Added a node server"&lt;/span&gt;

&lt;span class="c"&gt;# Push to the branch&lt;/span&gt;
git push origin feature_node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we now head over to GitHub, we can see the branch there, and GitHub is already asking us if we want to create a new PR with this branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nwuGLI6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399359193/VDWrz1bEt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nwuGLI6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399359193/VDWrz1bEt.png" alt="GitHub PR button" width="880" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-pull-request"&gt;
  &lt;/a&gt;
  Creating the pull request
&lt;/h2&gt;

&lt;p&gt;Click that green button to create a pull request.&lt;/p&gt;

&lt;p&gt;A pull request always merges from one branch to another. In our case, we want to merge into the master branch.&lt;/p&gt;

&lt;p&gt;You should add a descriptive title and some content about what this pull request is about.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aG_DD5R6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399496152/UTE7NRdn-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aG_DD5R6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399496152/UTE7NRdn-.png" alt="Creating a pull request in GitHub" width="880" height="610"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the bottom, you can even see what files are changed to have a quick look to see if everything is fine.&lt;br&gt;
If that's the case press the green button to create a pull request.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Generally, you would assign one of your team members here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The pull request is now created. It's up to your team member to evaluate what you made and add a review.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dupQSsW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399602455/cd5sAVjI7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dupQSsW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399602455/cd5sAVjI7.png" alt="Created pull request" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also review it yourself if you open up the files changed tab.&lt;br&gt;
In there, you can click on lines or select some lines to write comments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pxvR8189--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399692612/dijMZnE30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pxvR8189--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399692612/dijMZnE30.png" alt="Review a PR" width="880" height="812"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't forget to press the start review button.&lt;br&gt;
Once you are done with all the review items, you can press the "Finish your review" button to add a general remark and approval or change request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rDeFT1gU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399815717/7h8OYVQpF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDeFT1gU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399815717/7h8OYVQpF.png" alt="Pull request review" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For your own PR's you can only comment, but when reviewing someone else, you can approve/request changes.&lt;/p&gt;

&lt;p&gt;You will now be prompted to add these changes in the PR overview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m7y14e26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399890557/lB8QZA5x2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m7y14e26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399890557/lB8QZA5x2.png" alt="Review inside the pull request screen GitHub" width="688" height="906"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Head back over to your code and add the proposed change, after which you can resolve the issue and re-request a review.&lt;/p&gt;

&lt;p&gt;Once the other reviewer approves your change, you can press this merge button, and the file will be merged into the main branch!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RDML1XGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399992645/CFH5Qp6uD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RDML1XGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635399992645/CFH5Qp6uD.png" alt="Merge into a branch" width="689" height="976"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I left this pull request open so that you can view it on &lt;a href="https://github.com/rebelchris/git-test/pull/1"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to put website online under 10 minutes?</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Mon, 08 Nov 2021 06:01:45 +0000</pubDate>
      <link>https://dev.to/rakeshpotnuru/how-to-put-website-online-under-10-minutes-3m2g</link>
      <guid>https://dev.to/rakeshpotnuru/how-to-put-website-online-under-10-minutes-3m2g</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OY0EvkwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ibb.co/PC6GRGM" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OY0EvkwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ibb.co/PC6GRGM" width="" height=""&gt;&lt;/a&gt;As a beginner in web development, you may always think about how to actually put a website you made, on the internet. In this blog, you are going to learn how you can do it in less than 10 minutes with simple steps using Github pages. &lt;/p&gt;

&lt;h2&gt;End Result&lt;/h2&gt;

&lt;p&gt;This is what we are going to make by the end of the blog. See the URL, it's on the internet 👀.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(This is a simple calculator webapp which contains HTML,css,js files)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OY0EvkwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ibb.co/PC6GRGM" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OY0EvkwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ibb.co/PC6GRGM" width="" height=""&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7VIboTzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VBqYdYx/endresult.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--7VIboTzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VBqYdYx/endresult.png" width="640" height="344"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;A website having HTML, CSS, Javascript files. (because Github pages support only static websites)&lt;/li&gt;
    &lt;li&gt;
&lt;a href="https://github.com"&gt;Github&lt;/a&gt; account.&lt;/li&gt;
    &lt;li&gt;Basic knowledge about git.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Let's get started&lt;/h1&gt;

&lt;h3&gt;Step-1: &lt;/h3&gt;

&lt;p&gt;Create a repository on GitHub and add all your HTML, CSS, js files.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Make sure you make the repository public.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Step-2:&lt;/h3&gt;

&lt;p&gt;Open repository and click on &lt;strong&gt;Settings.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wGMr0LSW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/PMKqqQ2/Settings.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--wGMr0LSW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/PMKqqQ2/Settings.png" width="640" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-3:&lt;/h3&gt;

&lt;p&gt;Scroll down and click on &lt;strong&gt;Pages&lt;/strong&gt; from the left panel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmU2-d5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/SyVtGPp/pages.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmU2-d5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/SyVtGPp/pages.png" width="640" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-4:&lt;/h3&gt;

&lt;p&gt;Now you have to enable GitHub pages for the repository. To do so, click on &lt;strong&gt;None&lt;/strong&gt; and select the main branch of your repository. In my case it is &lt;strong&gt;master&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RWMPgZMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/kQCR5FH/master.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RWMPgZMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/kQCR5FH/master.png" width="640" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-5:&lt;/h3&gt;

&lt;p&gt;After selecting the branch, the save button will be enabled, so click on &lt;strong&gt;Save&lt;/strong&gt; to confirm.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wBrKVB6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VBkCz9z/save.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--wBrKVB6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VBkCz9z/save.png" width="640" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-6:&lt;/h3&gt;

&lt;p&gt;Now, you can see an indication saying - &lt;q&gt;&lt;em&gt;Your site is ready to be published at &amp;lt;URL&amp;gt;&lt;/em&gt;&lt;/q&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Y3ZQvq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VWZxrGJ/ready.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Y3ZQvq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VWZxrGJ/ready.png" width="640" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-7:&lt;/h3&gt;

&lt;p&gt;Wait for few minutes and refresh the page. That indication will be changed to - &lt;q&gt;&lt;em&gt;Your site is published at &amp;lt;URL&amp;gt;&lt;/em&gt;&lt;/q&gt;&lt;/p&gt;

&lt;p&gt;Click on the link and that's it your site is ready and you can share the URL with anyone and show off your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P10PYUYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/RB5vC5g/done.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--P10PYUYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/RB5vC5g/done.png" width="640" height="328"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Also read - &lt;a href="https://dev.to/rakeshpotnuru/how-to-host-your-website-on-azure-5h11"&gt;How to host your website on Azure?&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Hope this helps you!&lt;br&gt;
Save for reference.&lt;br&gt;
Connect with me on &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;Twitter&lt;/a&gt; and &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;GitHub&lt;/a&gt;. Follow me for more 😃.&lt;/p&gt;

</description>
      <category>github</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
